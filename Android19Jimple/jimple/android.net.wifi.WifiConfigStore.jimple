class android.net.wifi.WifiConfigStore extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String DNS_KEY;
    private static final java.lang.String EOS;
    private static final java.lang.String EXCLUSION_LIST_KEY;
    private static final java.lang.String GATEWAY_KEY;
    private static final java.lang.String ID_KEY;
    private static final int IPCONFIG_FILE_VERSION;
    private static final java.lang.String IP_ASSIGNMENT_KEY;
    private static final java.lang.String LINK_ADDRESS_KEY;
    private static final java.lang.String PROXY_HOST_KEY;
    private static final java.lang.String PROXY_PAC_FILE;
    private static final java.lang.String PROXY_PORT_KEY;
    private static final java.lang.String PROXY_SETTINGS_KEY;
    private static final java.lang.String SUPPLICANT_CONFIG_FILE;
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    private static final java.lang.String ipConfigFile;
    private java.util.HashMap mConfiguredNetworks;
    private android.content.Context mContext;
    private final android.net.wifi.WifiConfigStore$WpaConfigFileObserver mFileObserver;
    private final android.security.KeyStore mKeyStore;
    private int mLastPriority;
    private final android.util.LocalLog mLocalLog;
    private java.util.HashMap mNetworkIds;
    private android.net.wifi.WifiNative mWifiNative;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r2, $r3;
        java.io.File $r1;
        java.lang.String $r4;

        <android.net.wifi.WifiConfigStore: java.lang.String TAG> = "WifiConfigStore";

        <android.net.wifi.WifiConfigStore: java.lang.String SUPPLICANT_CONFIG_FILE> = "/data/misc/wifi/wpa_supplicant.conf";

        <android.net.wifi.WifiConfigStore: java.lang.String PROXY_SETTINGS_KEY> = "proxySettings";

        <android.net.wifi.WifiConfigStore: java.lang.String PROXY_PORT_KEY> = "proxyPort";

        <android.net.wifi.WifiConfigStore: java.lang.String PROXY_PAC_FILE> = "proxyPac";

        <android.net.wifi.WifiConfigStore: java.lang.String PROXY_HOST_KEY> = "proxyHost";

        <android.net.wifi.WifiConfigStore: java.lang.String LINK_ADDRESS_KEY> = "linkAddress";

        <android.net.wifi.WifiConfigStore: java.lang.String IP_ASSIGNMENT_KEY> = "ipAssignment";

        <android.net.wifi.WifiConfigStore: int IPCONFIG_FILE_VERSION> = 2;

        <android.net.wifi.WifiConfigStore: java.lang.String ID_KEY> = "id";

        <android.net.wifi.WifiConfigStore: java.lang.String GATEWAY_KEY> = "gateway";

        <android.net.wifi.WifiConfigStore: java.lang.String EXCLUSION_LIST_KEY> = "exclusionList";

        <android.net.wifi.WifiConfigStore: java.lang.String EOS> = "eos";

        <android.net.wifi.WifiConfigStore: java.lang.String DNS_KEY> = "dns";

        <android.net.wifi.WifiConfigStore: boolean DBG> = 1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/misc/wifi/ipconfig.txt");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <android.net.wifi.WifiConfigStore: java.lang.String ipConfigFile> = $r4;

        return;
    }

    void <init>(android.content.Context, android.net.wifi.WifiNative)
    {
        android.net.wifi.WifiConfigStore r0;
        android.content.Context r1;
        android.net.wifi.WifiNative r2;
        java.util.HashMap $r3, $r4;
        android.security.KeyStore $r5;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.wifi.WifiNative;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mNetworkIds> = $r4;

        r0.<android.net.wifi.WifiConfigStore: int mLastPriority> = -1;

        $r5 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<android.net.wifi.WifiConfigStore: android.security.KeyStore mKeyStore> = $r5;

        r0.<android.net.wifi.WifiConfigStore: android.content.Context mContext> = r1;

        r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative> = r2;

        r0.<android.net.wifi.WifiConfigStore: android.util.LocalLog mLocalLog> = null;

        r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiConfigStore$WpaConfigFileObserver mFileObserver> = null;

        return;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <android.net.wifi.WifiConfigStore: java.lang.String ipConfigFile>;

        return $r0;
    }

    static int access$200(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiConfiguration r0;
        int $i0;

        r0 := @parameter0: android.net.wifi.WifiConfiguration;

        $i0 = staticinvoke <android.net.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r0);

        return $i0;
    }

    private android.net.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, r10, $r68, $r87;
        int i0, i1, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean z0, z1, z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        java.lang.String r2, r3, r4, r5, r6, r9, r16, r17, r18, r22, r24, r25, r26, r28, r30, r32, $r34, $r37, $r55, $r71, $r79, $r85, $r95, $r96, $r100, $r105, $r109, $r110, $r114, $r116, $r117, $r119, $r128, $r131, $r138, $r139, $r140, $r147, $r149, $r156, $r160, $r164, $r166, $r169, $r177, $r179, $r182;
        java.lang.String[] r7, $r35, $r42, $r44, $r46, $r51, $r118, $r121, $r122, $r126, $r127, $r135;
        android.net.wifi.WifiNative r8, r20, r21, r23, r27, r29, r33, $r65, $r76, $r129, $r142, $r151, $r152, $r167, $r173;
        android.net.wifi.NetworkUpdateResult r11, r12, r36, $r63, $r172;
        android.net.wifi.WifiEnterpriseConfig r13, $r52, $r69;
        java.util.Iterator r14;
        java.util.HashMap r15, $r53, $r56, $r59, $r90, $r176;
        byte b2;
        java.lang.Integer r31, $r54, $r57, $r58, $r62, $r89, $r175;
        java.util.BitSet $r38, $r39, $r40, $r41, $r43, $r45, $r47, $r48, $r49, $r50;
        java.lang.Object $r60, $r75, $r77, $r88, $r174;
        android.net.wifi.WifiConfiguration$ProxySettings $r64;
        android.net.wifi.WifiConfiguration$IpAssignment $r67;
        java.lang.StringBuilder $r70, $r72, $r73, $r80, $r81, $r82, $r83, $r84, $r86, $r94, $r97, $r98, $r101, $r102, $r103, $r104, $r106, $r107, $r108, $r111, $r112, $r113, $r115, $r120, $r123, $r124, $r125, $r130, $r132, $r133, $r134, $r136, $r137, $r141, $r143, $r144, $r145, $r146, $r148, $r150, $r153, $r154, $r155, $r157, $r158, $r159, $r161, $r162, $r163, $r165, $r168, $r170, $r178, $r180, $r181;
        android.security.KeyStore $r74, $r93, $r99;
        java.util.Set $r78;
        android.security.KeyStore$State $r91, $r92;
        java.lang.IllegalStateException $r171;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        i0 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        i1 = i0;

        z0 = 0;

        if i1 != -1 goto label01;

        $r176 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i16 = staticinvoke <android.net.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r1);

        $r175 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        $r174 = virtualinvoke $r176.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r175);

        r31 = (java.lang.Integer) $r174;

        if r31 == null goto label04;

        i0 = virtualinvoke r31.<java.lang.Integer: int intValue()>();

     label01:
        z1 = 1;

        $r37 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        if $r37 == null goto label05;

        r33 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r30 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $z22 = virtualinvoke r33.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "ssid", r30);

        if $z22 != 0 goto label05;

        $r157 = new java.lang.StringBuilder;

        specialinvoke $r157.<java.lang.StringBuilder: void <init>()>();

        $r180 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set SSID: ");

        $r179 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r178 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r179);

        $r177 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r177);

     label02:
        if z1 == 0 goto label28;

        if z0 == 0 goto label03;

        $r65 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        virtualinvoke $r65.<android.net.wifi.WifiNative: boolean removeNetwork(int)>(i0);

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set a network variable, removed network: ");

        $r70 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r71);

     label03:
        $r63 = new android.net.wifi.NetworkUpdateResult;

        specialinvoke $r63.<android.net.wifi.NetworkUpdateResult: void <init>(int)>(-1);

        r11 = $r63;

        return r11;

     label04:
        z0 = 1;

        $r173 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        i0 = virtualinvoke $r173.<android.net.wifi.WifiNative: int addNetwork()>();

        if i0 >= 0 goto label01;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("Failed to add a network!");

        $r172 = new android.net.wifi.NetworkUpdateResult;

        specialinvoke $r172.<android.net.wifi.NetworkUpdateResult: void <init>(int)>(-1);

        r36 = $r172;

        return r36;

     label05:
        $r34 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        if $r34 == null goto label06;

        r27 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r32 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        $z23 = virtualinvoke r27.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "bssid", r32);

        if $z23 != 0 goto label06;

        $r158 = new java.lang.StringBuilder;

        specialinvoke $r158.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set BSSID: ");

        $r160 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        $r155 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r160);

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r156);

        goto label02;

     label06:
        $r39 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $r35 = <android.net.wifi.WifiConfiguration$KeyMgmt: java.lang.String[] strings>;

        r2 = specialinvoke r0.<android.net.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r39, $r35);

        $r38 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $i4 = virtualinvoke $r38.<java.util.BitSet: int cardinality()>();

        if $i4 == 0 goto label07;

        $r167 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z24 = virtualinvoke $r167.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "key_mgmt", r2);

        if $z24 != 0 goto label07;

        $r161 = new java.lang.StringBuilder;

        specialinvoke $r161.<java.lang.StringBuilder: void <init>()>();

        $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set key_mgmt: ");

        $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r164);

        goto label02;

     label07:
        $r41 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedProtocols>;

        $r42 = <android.net.wifi.WifiConfiguration$Protocol: java.lang.String[] strings>;

        r3 = specialinvoke r0.<android.net.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r41, $r42);

        $r40 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedProtocols>;

        $i5 = virtualinvoke $r40.<java.util.BitSet: int cardinality()>();

        if $i5 == 0 goto label08;

        $r142 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z19 = virtualinvoke $r142.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "proto", r3);

        if $z19 != 0 goto label08;

        $r144 = new java.lang.StringBuilder;

        specialinvoke $r144.<java.lang.StringBuilder: void <init>()>();

        $r143 = virtualinvoke $r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set proto: ");

        $r165 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r166 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r166);

        goto label02;

     label08:
        $r43 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedAuthAlgorithms>;

        $r44 = <android.net.wifi.WifiConfiguration$AuthAlgorithm: java.lang.String[] strings>;

        r4 = specialinvoke r0.<android.net.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r43, $r44);

        $r47 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedAuthAlgorithms>;

        $i6 = virtualinvoke $r47.<java.util.BitSet: int cardinality()>();

        if $i6 == 0 goto label09;

        $r151 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z20 = virtualinvoke $r151.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "auth_alg", r4);

        if $z20 != 0 goto label09;

        $r146 = new java.lang.StringBuilder;

        specialinvoke $r146.<java.lang.StringBuilder: void <init>()>();

        $r145 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set auth_alg: ");

        $r148 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r147 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r147);

        goto label02;

     label09:
        $r45 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedPairwiseCiphers>;

        $r46 = <android.net.wifi.WifiConfiguration$PairwiseCipher: java.lang.String[] strings>;

        r5 = specialinvoke r0.<android.net.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r45, $r46);

        $r50 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedPairwiseCiphers>;

        $i8 = virtualinvoke $r50.<java.util.BitSet: int cardinality()>();

        if $i8 == 0 goto label10;

        $r152 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z21 = virtualinvoke $r152.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "pairwise", r5);

        if $z21 != 0 goto label10;

        $r154 = new java.lang.StringBuilder;

        specialinvoke $r154.<java.lang.StringBuilder: void <init>()>();

        $r153 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set pairwise: ");

        $r150 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r149 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r149);

        goto label02;

     label10:
        $r48 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedGroupCiphers>;

        $r51 = <android.net.wifi.WifiConfiguration$GroupCipher: java.lang.String[] strings>;

        r6 = specialinvoke r0.<android.net.wifi.WifiConfigStore: java.lang.String makeString(java.util.BitSet,java.lang.String[])>($r48, $r51);

        $r49 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedGroupCiphers>;

        $i7 = virtualinvoke $r49.<java.util.BitSet: int cardinality()>();

        if $i7 == 0 goto label11;

        $r129 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z16 = virtualinvoke $r129.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "group", r6);

        if $z16 != 0 goto label11;

        $r132 = new java.lang.StringBuilder;

        specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set group: ");

        $r130 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r131);

        goto label02;

     label11:
        $r55 = r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        if $r55 == null goto label12;

        $r139 = r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        $z17 = virtualinvoke $r139.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z17 != 0 goto label12;

        r29 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r26 = r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        $z18 = virtualinvoke r29.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "psk", r26);

        if $z18 != 0 goto label12;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("failed to set psk");

        goto label02;

     label12:
        r7 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        z2 = 0;

        if r7 == null goto label16;

        i3 = 0;

     label13:
        $r127 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $i15 = lengthof $r127;

        if i3 >= $i15 goto label16;

        $r126 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r119 = $r126[i3];

        if $r119 == null goto label15;

        $r118 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r117 = $r118[i3];

        $z14 = virtualinvoke $r117.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z14 != 0 goto label15;

        r23 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $r122 = <android.net.wifi.WifiConfiguration: java.lang.String[] wepKeyVarNames>;

        r24 = $r122[i3];

        $r121 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        r28 = $r121[i3];

        $z15 = virtualinvoke r23.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, r24, r28);

        if $z15 != 0 goto label14;

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        $r136 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set wep_key");

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r134 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r135 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r140 = $r135[i3];

        $r141 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140);

        $r138 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r138);

        goto label02;

     label14:
        z2 = 1;

     label15:
        i3 = i3 + 1;

        goto label13;

     label16:
        if z2 == 0 goto label17;

        r21 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $i13 = r1.<android.net.wifi.WifiConfiguration: int wepTxKeyIndex>;

        r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        $z12 = virtualinvoke r21.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "wep_tx_keyidx", r25);

        if $z12 != 0 goto label17;

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to set wep_tx_keyidx: ");

        $i14 = r1.<android.net.wifi.WifiConfiguration: int wepTxKeyIndex>;

        $r123 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r128 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r128);

        goto label02;

     label17:
        r8 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $i9 = r1.<android.net.wifi.WifiConfiguration: int priority>;

        r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        $z4 = virtualinvoke r8.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "priority", r9);

        if $z4 != 0 goto label18;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $r116 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r106 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to set priority: ");

        $i12 = r1.<android.net.wifi.WifiConfiguration: int priority>;

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r109);

        goto label02;

     label18:
        $z3 = r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID>;

        if $z3 == 0 goto label21;

        r20 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z9 = r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID>;

        if $z9 == 0 goto label20;

        b2 = 1;

     label19:
        r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(b2);

        $z10 = virtualinvoke r20.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, "scan_ssid", r22);

        if $z10 != 0 goto label21;

        $r98 = new java.lang.StringBuilder;

        specialinvoke $r98.<java.lang.StringBuilder: void <init>()>();

        $r110 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r111 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to set hiddenSSID: ");

        $z13 = r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID>;

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r114);

        goto label02;

     label20:
        b2 = 0;

        goto label19;

     label21:
        $r52 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        if $r52 == null goto label27;

        $r69 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $i11 = virtualinvoke $r69.<android.net.wifi.WifiEnterpriseConfig: int getEapMethod()>();

        if $i11 == -1 goto label27;

        r13 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $z6 = virtualinvoke r13.<android.net.wifi.WifiEnterpriseConfig: boolean needsKeyStore()>();

        if $z6 == 0 goto label25;

        $r93 = r0.<android.net.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $r92 = virtualinvoke $r93.<android.security.KeyStore: android.security.KeyStore$State state()>();

        $r91 = <android.security.KeyStore$State: android.security.KeyStore$State UNLOCKED>;

        if $r92 == $r91 goto label22;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r95 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r94 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r97 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": key store is locked");

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r96);

        goto label02;

     label22:
        $r90 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r89 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r88 = virtualinvoke $r90.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r89);

        $r87 = (android.net.wifi.WifiConfiguration) $r88;

        r18 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String getKeyIdForCredentials(android.net.wifi.WifiConfiguration)>($r87);

        $r99 = r0.<android.net.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        $z11 = virtualinvoke r13.<android.net.wifi.WifiEnterpriseConfig: boolean installKeys(android.security.KeyStore,java.lang.String)>($r99, r18);

        if $z11 != 0 goto label25;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r100 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r103 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to install keys");

        $r105 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r105);

     label23:
        goto label02;

     label24:
        $r171 := @caughtexception;

        $r170 = new java.lang.StringBuilder;

        specialinvoke $r170.<java.lang.StringBuilder: void <init>()>();

        $r169 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r168 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r169);

        $r181 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" invalid config for key installation");

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r182);

        goto label02;

     label25:
        r15 = virtualinvoke r13.<android.net.wifi.WifiEnterpriseConfig: java.util.HashMap getFields()>();

        $r78 = virtualinvoke r15.<java.util.HashMap: java.util.Set keySet()>();

        r14 = interfaceinvoke $r78.<java.util.Set: java.util.Iterator iterator()>();

     label26:
        $z8 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label27;

        $r77 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r77;

        $r75 = virtualinvoke r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r17);

        r16 = (java.lang.String) $r75;

        $r76 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z7 = virtualinvoke $r76.<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)>(i0, r17, r16);

        if $z7 != 0 goto label26;

        $r74 = r0.<android.net.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        virtualinvoke r13.<android.net.wifi.WifiEnterpriseConfig: void removeKeys(android.security.KeyStore)>($r74);

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r85 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r84 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": failed to set ");

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r79);

        goto label02;

     label27:
        z1 = 0;

        goto label02;

     label28:
        $r53 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r60 = virtualinvoke $r53.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r54);

        r10 = (android.net.wifi.WifiConfiguration) $r60;

        if r10 != null goto label29;

        $r68 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r68.<android.net.wifi.WifiConfiguration: void <init>()>();

        r10 = $r68;

        $r67 = <android.net.wifi.WifiConfiguration$IpAssignment: android.net.wifi.WifiConfiguration$IpAssignment DHCP>;

        r10.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment> = $r67;

        $r64 = <android.net.wifi.WifiConfiguration$ProxySettings: android.net.wifi.WifiConfiguration$ProxySettings NONE>;

        r10.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings> = $r64;

        r10.<android.net.wifi.WifiConfiguration: int networkId> = i0;

     label29:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void readNetworkVariables(android.net.wifi.WifiConfiguration)>(r10);

        $r59 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r62 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r59.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r62, r10);

        $r56 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i10 = staticinvoke <android.net.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r10);

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r56.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r58, $r57);

        r12 = specialinvoke r0.<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult writeIpAndProxyConfigurationsOnChange(android.net.wifi.WifiConfiguration,android.net.wifi.WifiConfiguration)>(r10, r1);

        virtualinvoke r12.<android.net.wifi.NetworkUpdateResult: void setIsNewNetwork(boolean)>(z0);

        virtualinvoke r12.<android.net.wifi.NetworkUpdateResult: void setNetworkId(int)>(i0);

        return r12;

        catch java.lang.IllegalStateException from label22 to label23 with label24;
    }

    private static int configKey(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiConfiguration r0;
        java.lang.String r1, $r5, $r8, $r11, $r13, $r18, $r21, $r23, $r25;
        java.util.BitSet $r2, $r3, $r10;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r6, $r9, $r14, $r16, $r17, $r19, $r20, $r22, $r24, $r26, $r27;
        java.lang.String[] $r7, $r12, $r15, $r28;
        int $i0;

        r0 := @parameter0: android.net.wifi.WifiConfiguration;

        $r2 = r0.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z0 = virtualinvoke $r2.<java.util.BitSet: boolean get(int)>(1);

        if $z0 == 0 goto label2;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = r0.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r28 = <android.net.wifi.WifiConfiguration$KeyMgmt: java.lang.String[] strings>;

        $r25 = $r28[1];

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        return $i0;

     label2:
        $r3 = r0.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z1 = virtualinvoke $r3.<java.util.BitSet: boolean get(int)>(2);

        if $z1 != 0 goto label3;

        $r10 = r0.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z2 = virtualinvoke $r10.<java.util.BitSet: boolean get(int)>(3);

        if $z2 == 0 goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = <android.net.wifi.WifiConfiguration$KeyMgmt: java.lang.String[] strings>;

        $r8 = $r7[2];

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label4:
        $r12 = r0.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r11 = $r12[0];

        if $r11 == null goto label5;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = r0.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEP");

        r1 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label5:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = <android.net.wifi.WifiConfiguration$KeyMgmt: java.lang.String[] strings>;

        $r18 = $r15[0];

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r1 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }

    private java.lang.String convertToQuotedString(java.lang.String)
    {
        android.net.wifi.WifiConfigStore r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private android.net.LinkProperties copyIpSettingsFromConfig(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1;
        android.net.LinkProperties r2, $r6, $r7, $r9, $r11, $r13;
        java.util.Iterator r3, r4, r5;
        java.lang.String $r8;
        java.util.Collection $r10, $r12, $r14;
        boolean $z0, $z1, $z2;
        java.lang.Object $r15, $r16, $r18;
        java.net.InetAddress $r17;
        android.net.RouteInfo $r19;
        android.net.LinkAddress $r20;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        $r6 = new android.net.LinkProperties;

        specialinvoke $r6.<android.net.LinkProperties: void <init>()>();

        r2 = $r6;

        $r7 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        $r8 = virtualinvoke $r7.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        virtualinvoke r2.<android.net.LinkProperties: void setInterfaceName(java.lang.String)>($r8);

        $r9 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        $r10 = virtualinvoke $r9.<android.net.LinkProperties: java.util.Collection getLinkAddresses()>();

        r3 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (android.net.LinkAddress) $r18;

        virtualinvoke r2.<android.net.LinkProperties: boolean addLinkAddress(android.net.LinkAddress)>($r20);

        goto label1;

     label2:
        $r11 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        $r12 = virtualinvoke $r11.<android.net.LinkProperties: java.util.Collection getRoutes()>();

        r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (android.net.RouteInfo) $r16;

        virtualinvoke r2.<android.net.LinkProperties: void addRoute(android.net.RouteInfo)>($r19);

        goto label3;

     label4:
        $r13 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        $r14 = virtualinvoke $r13.<android.net.LinkProperties: java.util.Collection getDnses()>();

        r5 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r17 = (java.net.InetAddress) $r15;

        virtualinvoke r2.<android.net.LinkProperties: void addDns(java.net.InetAddress)>($r17);

        goto label5;

     label6:
        return r2;
    }

    private void localLog(java.lang.String)
    {
        android.net.wifi.WifiConfigStore r0;
        java.lang.String r1;
        android.util.LocalLog $r2, $r3;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        if $r2 == null goto label1;

        $r3 = r0.<android.net.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        virtualinvoke $r3.<android.util.LocalLog: void log(java.lang.String)>(r1);

     label1:
        return;
    }

    private void localLog(java.lang.String, int)
    {
        android.net.wifi.WifiConfigStore r0;
        java.lang.String r1, $r13, $r20, $r22;
        int i0;
        java.util.HashMap r2, $r6;
        java.lang.Throwable r3, $r21;
        android.net.wifi.WifiConfiguration r4;
        android.util.LocalLog $r5, $r10, $r15;
        java.lang.Integer $r7;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r14, $r16, $r17, $r18, $r19;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<android.net.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        if $r5 != null goto label1;

        return;

     label1:
        r2 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        entermonitor r2;

     label2:
        $r6 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r4 = (android.net.wifi.WifiConfiguration) $r8;

        exitmonitor r2;

     label3:
        if r4 == null goto label7;

        $r15 = r0.<android.net.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r20 = virtualinvoke r4.<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<android.util.LocalLog: void log(java.lang.String)>($r22);

        return;

     label4:
        $r21 := @caughtexception;

        r3 = $r21;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r10 = r0.<android.net.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<android.util.LocalLog: void log(java.lang.String)>($r13);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void log(java.lang.String)
    {
        android.net.wifi.WifiConfigStore r0;
        java.lang.String r1;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiConfigStore", r1);

        return;
    }

    private void loge(java.lang.String)
    {
        android.net.wifi.WifiConfigStore r0;
        java.lang.String r1;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiConfigStore", r1);

        return;
    }

    private int lookupString(java.lang.String, java.lang.String[])
    {
        android.net.wifi.WifiConfigStore r0;
        java.lang.String r1, r3, $r7, $r8;
        java.lang.String[] r2;
        int i0, i1;
        java.lang.StringBuilder $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        i0 = lengthof r2;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(45, 95);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r8 = r2[i1];

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to look-up a string: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r7);

        return -1;
    }

    private java.lang.String makeString(java.util.BitSet, java.lang.String[])
    {
        android.net.wifi.WifiConfigStore r0;
        java.util.BitSet r1, r4;
        java.lang.String[] r2;
        java.lang.StringBuffer r3, $r5, $r10;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r6, $r7, $r8;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: java.util.BitSet;

        r2 := @parameter1: java.lang.String[];

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r3 = $r5;

        i0 = -1;

        $i1 = lengthof r2;

        r4 = virtualinvoke r1.<java.util.BitSet: java.util.BitSet get(int,int)>(0, $i1);

     label1:
        $i2 = i0 + 1;

        i0 = virtualinvoke r4.<java.util.BitSet: int nextSetBit(int)>($i2);

        if i0 == -1 goto label2;

        $r8 = r2[i0];

        $r7 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(char,char)>(95, 45);

        $r10 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label1;

     label2:
        $i3 = virtualinvoke r4.<java.util.BitSet: int cardinality()>();

        if $i3 <= 0 goto label3;

        $i4 = virtualinvoke r3.<java.lang.StringBuffer: int length()>();

        $i5 = -1 + $i4;

        virtualinvoke r3.<java.lang.StringBuffer: void setLength(int)>($i5);

     label3:
        $r6 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    private void markAllNetworksDisabled()
    {
        android.net.wifi.WifiConfigStore r0;

        r0 := @this: android.net.wifi.WifiConfigStore;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void markAllNetworksDisabledExcept(int)>(-1);

        return;
    }

    private void markAllNetworksDisabledExcept(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r3 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 == null goto label1;

        $i1 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i1 == i0 goto label1;

        $i2 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i2 == 1 goto label1;

        r2.<android.net.wifi.WifiConfiguration: int status> = 1;

        r2.<android.net.wifi.WifiConfiguration: int disableReason> = 0;

        goto label1;

     label2:
        return;
    }

    private void readIpAndProxyConfigurations()
    {
        android.net.wifi.WifiConfigStore r0;
        java.io.DataInputStream r1, r2, r8, $r28;
        java.lang.Throwable r3, $r71, $r76;
        java.io.IOException r5, $r68, $r74;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.net.wifi.WifiConfiguration$IpAssignment r10, $r44;
        android.net.wifi.WifiConfiguration$ProxySettings r11, $r46;
        android.net.LinkProperties r12, $r29;
        java.lang.String r13, r14, r15, r16, $r30, $r32, $r47, $r49, $r50, $r54, $r56, $r57, $r58, $r72, $r78;
        android.net.LinkAddress r17, $r51, $r59;
        java.lang.IllegalArgumentException r18, $r62;
        android.net.RouteInfo r19, $r53;
        java.net.InetAddress r20, $r48, $r52, $r55;
        android.net.wifi.WifiConfiguration r21;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.net.ProxyProperties r22, r23, $r42, $r43;
        java.io.BufferedInputStream $r25;
        java.io.FileInputStream $r26;
        java.lang.StringBuilder $r31, $r33, $r34, $r35, $r60, $r61, $r63, $r66, $r67, $r69;
        java.lang.Object $r36, $r41;
        java.lang.Integer $r37;
        java.util.HashMap $r38, $r39;
        int[] $r40, $r45;
        java.io.EOFException $r64, $r75;
        java.lang.Exception $r65, $r70, $r73, $r77;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 = null;

     label01:
        $r28 = new java.io.DataInputStream;

        $r25 = new java.io.BufferedInputStream;

        $r26 = new java.io.FileInputStream;

        $r30 = <android.net.wifi.WifiConfigStore: java.lang.String ipConfigFile>;

        specialinvoke $r26.<java.io.FileInputStream: void <init>(java.lang.String)>($r30);

        specialinvoke $r25.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r26);

        specialinvoke $r28.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r25);

        r2 = $r28;

     label02:
        i0 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

     label03:
        if i0 == 2 goto label13;

        if i0 == 1 goto label13;

     label04:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("Bad version on IP configuration file, ignore read");

     label05:
        if r2 == null goto label07;

     label06:
        virtualinvoke r2.<java.io.DataInputStream: void close()>();

     label07:
        return;

     label08:
        z0 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("eos");

     label09:
        if z0 == 0 goto label65;

        if i1 == -1 goto label84;

     label10:
        $r39 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r38 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r36 = virtualinvoke $r38.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r37);

        $r41 = virtualinvoke $r39.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r36);

        r21 = (android.net.wifi.WifiConfiguration) $r41;

     label11:
        if r21 != null goto label67;

     label12:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("configuration found for missing network, ignored");

     label13:
        i1 = -1;

     label14:
        r10 = <android.net.wifi.WifiConfiguration$IpAssignment: android.net.wifi.WifiConfiguration$IpAssignment DHCP>;

        r11 = <android.net.wifi.WifiConfiguration$ProxySettings: android.net.wifi.WifiConfiguration$ProxySettings NONE>;

        $r29 = new android.net.LinkProperties;

        specialinvoke $r29.<android.net.LinkProperties: void <init>()>();

        r12 = $r29;

     label15:
        r13 = null;

        r14 = null;

        i2 = -1;

        r16 = null;

     label16:
        r15 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

     label17:
        $z3 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z3 == 0 goto label19;

        i1 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

     label18:
        goto label16;

     label19:
        $z4 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("ipAssignment");

        if $z4 == 0 goto label21;

        $r56 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        r10 = staticinvoke <android.net.wifi.WifiConfiguration$IpAssignment: android.net.wifi.WifiConfiguration$IpAssignment valueOf(java.lang.String)>($r56);

     label20:
        goto label16;

     label21:
        $z1 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("linkAddress");

        if $z1 == 0 goto label31;

        $r59 = new android.net.LinkAddress;

        $r58 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r55 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r58);

        $i10 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r59.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r55, $i10);

        virtualinvoke r12.<android.net.LinkProperties: boolean addLinkAddress(android.net.LinkAddress)>($r59);

     label22:
        goto label16;

     label23:
        $r62 := @caughtexception;

        r18 = $r62;

     label24:
        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore invalid address while reading");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r72 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r72);

     label25:
        goto label16;

     label26:
        $r64 := @caughtexception;

        r8 = r2;

     label27:
        if r8 == null goto label07;

     label28:
        virtualinvoke r8.<java.io.DataInputStream: void close()>();

     label29:
        return;

     label30:
        $r73 := @caughtexception;

        return;

     label31:
        $z2 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("gateway");

        if $z2 == 0 goto label49;

     label32:
        r17 = null;

        if i0 != 1 goto label42;

     label33:
        $r57 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        r20 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r57);

     label34:
        $r53 = new android.net.RouteInfo;

        specialinvoke $r53.<android.net.RouteInfo: void <init>(android.net.LinkAddress,java.net.InetAddress)>(r17, r20);

        r19 = $r53;

        virtualinvoke r12.<android.net.LinkProperties: void addRoute(android.net.RouteInfo)>(r19);

     label35:
        goto label16;

     label36:
        $r68 := @caughtexception;

        r5 = $r68;

        r1 = r2;

     label37:
        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing configuration");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r78 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r78);

     label38:
        if r1 == null goto label07;

     label39:
        virtualinvoke r1.<java.io.DataInputStream: void close()>();

     label40:
        return;

     label41:
        $r70 := @caughtexception;

        return;

     label42:
        i4 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

     label43:
        r17 = null;

        if i4 != 1 goto label45;

     label44:
        $r51 = new android.net.LinkAddress;

        $r50 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r52 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r50);

        $i9 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

        specialinvoke $r51.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r52, $i9);

        r17 = $r51;

     label45:
        i3 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

     label46:
        r20 = null;

        if i3 != 1 goto label34;

     label47:
        $r54 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        r20 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r54);

     label48:
        goto label34;

     label49:
        $z7 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("dns");

        if $z7 == 0 goto label55;

        $r47 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        $r48 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>($r47);

        virtualinvoke r12.<android.net.LinkProperties: void addDns(java.net.InetAddress)>($r48);

     label50:
        goto label16;

     label51:
        $r76 := @caughtexception;

        r3 = $r76;

        r1 = r2;

     label52:
        if r1 == null goto label54;

     label53:
        virtualinvoke r1.<java.io.DataInputStream: void close()>();

     label54:
        throw r3;

     label55:
        $z8 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("proxySettings");

        if $z8 == 0 goto label57;

        $r49 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

        r11 = staticinvoke <android.net.wifi.WifiConfiguration$ProxySettings: android.net.wifi.WifiConfiguration$ProxySettings valueOf(java.lang.String)>($r49);

     label56:
        goto label16;

     label57:
        $z5 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("proxyHost");

        if $z5 == 0 goto label59;

        r13 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

     label58:
        goto label16;

     label59:
        $z6 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("proxyPort");

        if $z6 == 0 goto label61;

        i2 = virtualinvoke r2.<java.io.DataInputStream: int readInt()>();

     label60:
        goto label16;

     label61:
        $z10 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("proxyPac");

        if $z10 == 0 goto label63;

        r14 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

     label62:
        goto label16;

     label63:
        $z9 = virtualinvoke r15.<java.lang.String: boolean equals(java.lang.Object)>("exclusionList");

        if $z9 == 0 goto label08;

        r16 = virtualinvoke r2.<java.io.DataInputStream: java.lang.String readUTF()>();

     label64:
        goto label16;

     label65:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore unknown key ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("while reading");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r32);

     label66:
        goto label16;

     label67:
        r21.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties> = r12;

        $r40 = <android.net.wifi.WifiConfigStore$1: int[] $SwitchMap$android$net$wifi$WifiConfiguration$IpAssignment>;

        $i6 = virtualinvoke r10.<android.net.wifi.WifiConfiguration$IpAssignment: int ordinal()>();

        $i5 = $r40[$i6];

        tableswitch($i5)
        {
            case 1: goto label72;
            case 2: goto label72;
            case 3: goto label74;
            default: goto label68;
        };

     label68:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("Ignore invalid ip assignment while reading");

     label69:
        $r45 = <android.net.wifi.WifiConfigStore$1: int[] $SwitchMap$android$net$wifi$WifiConfiguration$ProxySettings>;

        $i7 = virtualinvoke r11.<android.net.wifi.WifiConfiguration$ProxySettings: int ordinal()>();

        $i8 = $r45[$i7];

        tableswitch($i8)
        {
            case 1: goto label76;
            case 2: goto label78;
            case 3: goto label80;
            case 4: goto label82;
            default: goto label70;
        };

     label70:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("Ignore invalid proxy settings while reading");

     label71:
        goto label13;

     label72:
        r21.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment> = r10;

     label73:
        goto label69;

     label74:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("BUG: Found UNASSIGNED IP on file, use DHCP");

        $r44 = <android.net.wifi.WifiConfiguration$IpAssignment: android.net.wifi.WifiConfiguration$IpAssignment DHCP>;

        r21.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment> = $r44;

     label75:
        goto label69;

     label76:
        r21.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings> = r11;

        $r43 = new android.net.ProxyProperties;

        specialinvoke $r43.<android.net.ProxyProperties: void <init>(java.lang.String,int,java.lang.String)>(r13, i2, r16);

        r22 = $r43;

        virtualinvoke r12.<android.net.LinkProperties: void setHttpProxy(android.net.ProxyProperties)>(r22);

     label77:
        goto label13;

     label78:
        r21.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings> = r11;

        $r42 = new android.net.ProxyProperties;

        specialinvoke $r42.<android.net.ProxyProperties: void <init>(java.lang.String)>(r14);

        r23 = $r42;

        virtualinvoke r12.<android.net.LinkProperties: void setHttpProxy(android.net.ProxyProperties)>(r23);

     label79:
        goto label13;

     label80:
        r21.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings> = r11;

     label81:
        goto label13;

     label82:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("BUG: Found UNASSIGNED proxy on file, use NONE");

        $r46 = <android.net.wifi.WifiConfiguration$ProxySettings: android.net.wifi.WifiConfiguration$ProxySettings NONE>;

        r21.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings> = $r46;

     label83:
        goto label13;

     label84:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void log(java.lang.String)>("Missing id while parsing configuration");

     label85:
        goto label13;

     label86:
        $r77 := @caughtexception;

        goto label07;

     label87:
        $r65 := @caughtexception;

        goto label54;

     label88:
        $r71 := @caughtexception;

        r3 = $r71;

        goto label52;

     label89:
        $r74 := @caughtexception;

        r5 = $r74;

        r1 = null;

        goto label37;

     label90:
        $r75 := @caughtexception;

        r8 = null;

        goto label27;

        catch java.io.EOFException from label01 to label02 with label90;
        catch java.io.IOException from label01 to label02 with label89;
        catch java.lang.Throwable from label01 to label02 with label88;
        catch java.io.EOFException from label02 to label03 with label26;
        catch java.io.IOException from label02 to label03 with label36;
        catch java.lang.Throwable from label02 to label03 with label51;
        catch java.io.EOFException from label04 to label05 with label26;
        catch java.io.IOException from label04 to label05 with label36;
        catch java.lang.Throwable from label04 to label05 with label51;
        catch java.lang.Exception from label06 to label07 with label86;
        catch java.lang.IllegalArgumentException from label08 to label09 with label23;
        catch java.io.EOFException from label08 to label09 with label26;
        catch java.io.IOException from label08 to label09 with label36;
        catch java.lang.Throwable from label08 to label09 with label51;
        catch java.io.EOFException from label10 to label11 with label26;
        catch java.io.IOException from label10 to label11 with label36;
        catch java.lang.Throwable from label10 to label11 with label51;
        catch java.io.EOFException from label12 to label13 with label26;
        catch java.io.IOException from label12 to label13 with label36;
        catch java.lang.Throwable from label12 to label13 with label51;
        catch java.io.EOFException from label14 to label15 with label26;
        catch java.io.IOException from label14 to label15 with label36;
        catch java.lang.Throwable from label14 to label15 with label51;
        catch java.io.EOFException from label16 to label17 with label26;
        catch java.io.IOException from label16 to label17 with label36;
        catch java.lang.Throwable from label16 to label17 with label51;
        catch java.lang.IllegalArgumentException from label17 to label18 with label23;
        catch java.io.EOFException from label17 to label18 with label26;
        catch java.io.IOException from label17 to label18 with label36;
        catch java.lang.Throwable from label17 to label18 with label51;
        catch java.lang.IllegalArgumentException from label19 to label20 with label23;
        catch java.io.EOFException from label19 to label20 with label26;
        catch java.io.IOException from label19 to label20 with label36;
        catch java.lang.Throwable from label19 to label20 with label51;
        catch java.lang.IllegalArgumentException from label21 to label22 with label23;
        catch java.io.EOFException from label21 to label22 with label26;
        catch java.io.IOException from label21 to label22 with label36;
        catch java.lang.Throwable from label21 to label22 with label51;
        catch java.io.EOFException from label24 to label25 with label26;
        catch java.io.IOException from label24 to label25 with label36;
        catch java.lang.Throwable from label24 to label25 with label51;
        catch java.lang.Exception from label28 to label29 with label30;
        catch java.lang.IllegalArgumentException from label31 to label32 with label23;
        catch java.io.EOFException from label31 to label32 with label26;
        catch java.io.IOException from label31 to label32 with label36;
        catch java.lang.Throwable from label31 to label32 with label51;
        catch java.lang.IllegalArgumentException from label33 to label34 with label23;
        catch java.io.EOFException from label33 to label34 with label26;
        catch java.io.IOException from label33 to label34 with label36;
        catch java.lang.Throwable from label33 to label34 with label51;
        catch java.lang.IllegalArgumentException from label34 to label35 with label23;
        catch java.io.EOFException from label34 to label35 with label26;
        catch java.io.IOException from label34 to label35 with label36;
        catch java.lang.Throwable from label34 to label35 with label51;
        catch java.lang.Throwable from label37 to label38 with label88;
        catch java.lang.Exception from label39 to label40 with label41;
        catch java.lang.IllegalArgumentException from label42 to label43 with label23;
        catch java.io.EOFException from label42 to label43 with label26;
        catch java.io.IOException from label42 to label43 with label36;
        catch java.lang.Throwable from label42 to label43 with label51;
        catch java.lang.IllegalArgumentException from label44 to label45 with label23;
        catch java.io.EOFException from label44 to label45 with label26;
        catch java.io.IOException from label44 to label45 with label36;
        catch java.lang.Throwable from label44 to label45 with label51;
        catch java.lang.IllegalArgumentException from label45 to label46 with label23;
        catch java.io.EOFException from label45 to label46 with label26;
        catch java.io.IOException from label45 to label46 with label36;
        catch java.lang.Throwable from label45 to label46 with label51;
        catch java.lang.IllegalArgumentException from label47 to label48 with label23;
        catch java.io.EOFException from label47 to label48 with label26;
        catch java.io.IOException from label47 to label48 with label36;
        catch java.lang.Throwable from label47 to label48 with label51;
        catch java.lang.IllegalArgumentException from label49 to label50 with label23;
        catch java.io.EOFException from label49 to label50 with label26;
        catch java.io.IOException from label49 to label50 with label36;
        catch java.lang.Throwable from label49 to label50 with label51;
        catch java.lang.Exception from label53 to label54 with label87;
        catch java.lang.IllegalArgumentException from label55 to label56 with label23;
        catch java.io.EOFException from label55 to label56 with label26;
        catch java.io.IOException from label55 to label56 with label36;
        catch java.lang.Throwable from label55 to label56 with label51;
        catch java.lang.IllegalArgumentException from label57 to label58 with label23;
        catch java.io.EOFException from label57 to label58 with label26;
        catch java.io.IOException from label57 to label58 with label36;
        catch java.lang.Throwable from label57 to label58 with label51;
        catch java.lang.IllegalArgumentException from label59 to label60 with label23;
        catch java.io.EOFException from label59 to label60 with label26;
        catch java.io.IOException from label59 to label60 with label36;
        catch java.lang.Throwable from label59 to label60 with label51;
        catch java.lang.IllegalArgumentException from label61 to label62 with label23;
        catch java.io.EOFException from label61 to label62 with label26;
        catch java.io.IOException from label61 to label62 with label36;
        catch java.lang.Throwable from label61 to label62 with label51;
        catch java.lang.IllegalArgumentException from label63 to label64 with label23;
        catch java.io.EOFException from label63 to label64 with label26;
        catch java.io.IOException from label63 to label64 with label36;
        catch java.lang.Throwable from label63 to label64 with label51;
        catch java.lang.IllegalArgumentException from label65 to label66 with label23;
        catch java.io.EOFException from label65 to label66 with label26;
        catch java.io.IOException from label65 to label66 with label36;
        catch java.lang.Throwable from label65 to label66 with label51;
        catch java.io.EOFException from label67 to label68 with label26;
        catch java.io.IOException from label67 to label68 with label36;
        catch java.lang.Throwable from label67 to label68 with label51;
        catch java.io.EOFException from label68 to label69 with label26;
        catch java.io.IOException from label68 to label69 with label36;
        catch java.lang.Throwable from label68 to label69 with label51;
        catch java.io.EOFException from label69 to label70 with label26;
        catch java.io.IOException from label69 to label70 with label36;
        catch java.lang.Throwable from label69 to label70 with label51;
        catch java.io.EOFException from label70 to label71 with label26;
        catch java.io.IOException from label70 to label71 with label36;
        catch java.lang.Throwable from label70 to label71 with label51;
        catch java.io.EOFException from label72 to label73 with label26;
        catch java.io.IOException from label72 to label73 with label36;
        catch java.lang.Throwable from label72 to label73 with label51;
        catch java.io.EOFException from label74 to label75 with label26;
        catch java.io.IOException from label74 to label75 with label36;
        catch java.lang.Throwable from label74 to label75 with label51;
        catch java.io.EOFException from label76 to label77 with label26;
        catch java.io.IOException from label76 to label77 with label36;
        catch java.lang.Throwable from label76 to label77 with label51;
        catch java.io.EOFException from label78 to label79 with label26;
        catch java.io.IOException from label78 to label79 with label36;
        catch java.lang.Throwable from label78 to label79 with label51;
        catch java.io.EOFException from label80 to label81 with label26;
        catch java.io.IOException from label80 to label81 with label36;
        catch java.lang.Throwable from label80 to label81 with label51;
        catch java.io.EOFException from label82 to label83 with label26;
        catch java.io.IOException from label82 to label83 with label36;
        catch java.lang.Throwable from label82 to label83 with label51;
        catch java.io.EOFException from label84 to label85 with label26;
        catch java.io.IOException from label84 to label85 with label36;
        catch java.lang.Throwable from label84 to label85 with label51;
    }

    private void readNetworkVariables(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27;
        java.lang.String r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r15, r16, r23, $r44, $r49, $r53, $r56, $r60, $r67, $r71, $r73, $r76;
        java.util.HashMap r13;
        java.lang.String[] r14, r17, r18, r19, r20, r21, $r50, $r54, $r57, $r58, $r61, $r63, $r64, $r68;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15;
        android.net.wifi.WifiNative $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r42, $r45, $r70;
        android.net.wifi.WifiEnterpriseConfig $r36, $r38, $r39, $r41, $r47, $r52;
        android.security.KeyStore $r40, $r46;
        java.util.BitSet $r48, $r55, $r59, $r62, $r69;
        char $c26;
        java.lang.StringBuilder $r65, $r66, $r74, $r75;
        android.net.wifi.WifiSsid $r72;
        java.lang.NumberFormatException $r77, $r78, $r79;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        i0 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        if i0 >= 0 goto label01;

        return;

     label01:
        $r25 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r2 = virtualinvoke $r25.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "ssid");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label15;

        $c26 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c26 == 34 goto label14;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r72 = staticinvoke <android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromHex(java.lang.String)>(r2);

        $r73 = virtualinvoke $r72.<android.net.wifi.WifiSsid: java.lang.String toString()>();

        $r74 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = $r76;

     label02:
        $r28 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r3 = virtualinvoke $r28.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "bssid");

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 != 0 goto label16;

        r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID> = r3;

     label03:
        $r27 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r4 = virtualinvoke $r27.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "priority");

        r1.<android.net.wifi.WifiConfiguration: int priority> = -1;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z3 != 0 goto label05;

     label04:
        $i27 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        r1.<android.net.wifi.WifiConfiguration: int priority> = $i27;

     label05:
        $r29 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r5 = virtualinvoke $r29.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "scan_ssid");

        r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID> = 0;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z5 != 0 goto label09;

     label06:
        $i24 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r5);

        if $i24 == 0 goto label17;

     label07:
        z0 = 1;

     label08:
        r1.<android.net.wifi.WifiConfiguration: boolean hiddenSSID> = z0;

     label09:
        $r30 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r6 = virtualinvoke $r30.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "wep_tx_keyidx");

        r1.<android.net.wifi.WifiConfiguration: int wepTxKeyIndex> = -1;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z4 != 0 goto label11;

     label10:
        $i25 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

        r1.<android.net.wifi.WifiConfiguration: int wepTxKeyIndex> = $i25;

     label11:
        i1 = 0;

     label12:
        if i1 >= 4 goto label19;

        $r70 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $r68 = <android.net.wifi.WifiConfiguration: java.lang.String[] wepKeyVarNames>;

        $r71 = $r68[i1];

        r23 = virtualinvoke $r70.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, $r71);

        $z15 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r23);

        if $z15 != 0 goto label18;

        $r63 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r63[i1] = r23;

     label13:
        i1 = i1 + 1;

        goto label12;

     label14:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = r2;

        goto label02;

     label15:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID> = null;

        goto label02;

     label16:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID> = null;

        goto label03;

     label17:
        z0 = 0;

        goto label08;

     label18:
        $r64 = r1.<android.net.wifi.WifiConfiguration: java.lang.String[] wepKeys>;

        $r64[i1] = null;

        goto label13;

     label19:
        $r32 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r7 = virtualinvoke $r32.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, "psk");

        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z7 != 0 goto label23;

        r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey> = r7;

     label20:
        $r31 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $i20 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r8 = virtualinvoke $r31.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i20, "proto");

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z6 != 0 goto label24;

        r21 = virtualinvoke r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i18 = lengthof r21;

        i16 = 0;

     label21:
        if i16 >= i18 goto label24;

        $r67 = r21[i16];

        $r58 = <android.net.wifi.WifiConfiguration$Protocol: java.lang.String[] strings>;

        i17 = specialinvoke r0.<android.net.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>($r67, $r58);

        if i17 < 0 goto label22;

        $r69 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedProtocols>;

        virtualinvoke $r69.<java.util.BitSet: void set(int)>(i17);

     label22:
        i16 = i16 + 1;

        goto label21;

     label23:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey> = null;

        goto label20;

     label24:
        $r34 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $i19 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r9 = virtualinvoke $r34.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i19, "key_mgmt");

        $z9 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z9 != 0 goto label27;

        r20 = virtualinvoke r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i15 = lengthof r20;

        i13 = 0;

     label25:
        if i13 >= i15 goto label27;

        $r60 = r20[i13];

        $r61 = <android.net.wifi.WifiConfiguration$KeyMgmt: java.lang.String[] strings>;

        i14 = specialinvoke r0.<android.net.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>($r60, $r61);

        if i14 < 0 goto label26;

        $r59 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        virtualinvoke $r59.<java.util.BitSet: void set(int)>(i14);

     label26:
        i13 = i13 + 1;

        goto label25;

     label27:
        $r33 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $i22 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r10 = virtualinvoke $r33.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i22, "auth_alg");

        $z8 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r10);

        if $z8 != 0 goto label30;

        r19 = virtualinvoke r10.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i12 = lengthof r19;

        i10 = 0;

     label28:
        if i10 >= i12 goto label30;

        $r53 = r19[i10];

        $r54 = <android.net.wifi.WifiConfiguration$AuthAlgorithm: java.lang.String[] strings>;

        i11 = specialinvoke r0.<android.net.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>($r53, $r54);

        if i11 < 0 goto label29;

        $r62 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedAuthAlgorithms>;

        virtualinvoke $r62.<java.util.BitSet: void set(int)>(i11);

     label29:
        i10 = i10 + 1;

        goto label28;

     label30:
        $r37 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $i21 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r11 = virtualinvoke $r37.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i21, "pairwise");

        $z11 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r11);

        if $z11 != 0 goto label33;

        r18 = virtualinvoke r11.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i7 = lengthof r18;

        i9 = 0;

     label31:
        if i9 >= i7 goto label33;

        $r56 = r18[i9];

        $r57 = <android.net.wifi.WifiConfiguration$PairwiseCipher: java.lang.String[] strings>;

        i8 = specialinvoke r0.<android.net.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>($r56, $r57);

        if i8 < 0 goto label32;

        $r55 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedPairwiseCiphers>;

        virtualinvoke $r55.<java.util.BitSet: void set(int)>(i8);

     label32:
        i9 = i9 + 1;

        goto label31;

     label33:
        $r35 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $i23 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        r12 = virtualinvoke $r35.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>($i23, "group");

        $z10 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z10 != 0 goto label36;

        r17 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i4 = lengthof r17;

        i6 = 0;

     label34:
        if i6 >= i4 goto label36;

        $r49 = r17[i6];

        $r50 = <android.net.wifi.WifiConfiguration$GroupCipher: java.lang.String[] strings>;

        i5 = specialinvoke r0.<android.net.wifi.WifiConfigStore: int lookupString(java.lang.String,java.lang.String[])>($r49, $r50);

        if i5 < 0 goto label35;

        $r48 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedGroupCiphers>;

        virtualinvoke $r48.<java.util.BitSet: void set(int)>(i5);

     label35:
        i6 = i6 + 1;

        goto label34;

     label36:
        $r36 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        if $r36 != null goto label37;

        $r52 = new android.net.wifi.WifiEnterpriseConfig;

        specialinvoke $r52.<android.net.wifi.WifiEnterpriseConfig: void <init>()>();

        r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig> = $r52;

     label37:
        $r41 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        r13 = virtualinvoke $r41.<android.net.wifi.WifiEnterpriseConfig: java.util.HashMap getFields()>();

        r14 = staticinvoke <android.net.wifi.WifiEnterpriseConfig: java.lang.String[] getSupplicantKeys()>();

        i2 = lengthof r14;

        i3 = 0;

     label38:
        if i3 >= i2 goto label41;

        r16 = r14[i3];

        $r45 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r15 = virtualinvoke $r45.<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)>(i0, r16);

        $z13 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r15);

        if $z13 != 0 goto label40;

        $r44 = specialinvoke r0.<android.net.wifi.WifiConfigStore: java.lang.String removeDoubleQuotes(java.lang.String)>(r15);

        virtualinvoke r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r44);

     label39:
        i3 = i3 + 1;

        goto label38;

     label40:
        virtualinvoke r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, "NULL");

        goto label39;

     label41:
        $r38 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $r42 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z12 = virtualinvoke $r38.<android.net.wifi.WifiEnterpriseConfig: boolean migrateOldEapTlsNative(android.net.wifi.WifiNative,int)>($r42, i0);

        if $z12 == 0 goto label42;

        virtualinvoke r0.<android.net.wifi.WifiConfigStore: boolean saveConfig()>();

     label42:
        $r39 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $r40 = r0.<android.net.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        virtualinvoke $r39.<android.net.wifi.WifiEnterpriseConfig: void migrateCerts(android.security.KeyStore)>($r40);

        $r47 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $r46 = r0.<android.net.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        virtualinvoke $r47.<android.net.wifi.WifiEnterpriseConfig: void initializeSoftwareKeystoreFlag(android.security.KeyStore)>($r46);

        return;

     label43:
        $r77 := @caughtexception;

        goto label11;

     label44:
        $r78 := @caughtexception;

        goto label09;

     label45:
        $r79 := @caughtexception;

        goto label05;

        catch java.lang.NumberFormatException from label04 to label05 with label45;
        catch java.lang.NumberFormatException from label06 to label07 with label44;
        catch java.lang.NumberFormatException from label08 to label09 with label44;
        catch java.lang.NumberFormatException from label10 to label11 with label43;
    }

    private void removeConfigAndSendBroadcastIfNeeded(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0, $i1;
        android.net.wifi.WifiConfiguration r1;
        java.util.HashMap $r2, $r6, $r9;
        java.lang.Integer $r3, $r7, $r10;
        java.lang.Object $r4;
        android.net.wifi.WifiEnterpriseConfig $r5, $r13;
        android.security.KeyStore $r12;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r2 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.net.wifi.WifiConfiguration) $r4;

        if r1 == null goto label2;

        $r5 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        if $r5 == null goto label1;

        $r13 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $r12 = r0.<android.net.wifi.WifiConfigStore: android.security.KeyStore mKeyStore>;

        virtualinvoke $r13.<android.net.wifi.WifiEnterpriseConfig: void removeKeys(android.security.KeyStore)>($r12);

     label1:
        $r6 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r7);

        $r9 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i1 = staticinvoke <android.net.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r1);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r10);

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void writeIpAndProxyConfigurations()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r1, 1);

     label2:
        return;
    }

    private java.lang.String removeDoubleQuotes(java.lang.String)
    {
        android.net.wifi.WifiConfigStore r0;
        java.lang.String r1;
        int i0, $i2, $i4;
        char $c1, $c3;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 <= 1 goto label1;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c1 != 34 goto label1;

        $i2 = i0 - 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 34 goto label1;

        $i4 = i0 - 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

     label1:
        return r1;
    }

    private void sendConfiguredNetworksChangedBroadcast()
    {
        android.net.wifi.WifiConfigStore r0;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;

        r0 := @this: android.net.wifi.WifiConfigStore;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.CONFIGURED_NETWORKS_CHANGE");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("multipleChanges", 1);

        $r6 = r0.<android.net.wifi.WifiConfigStore: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r5);

        return;
    }

    private void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration, int)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1;
        int i0;
        android.content.Intent r2, $r3;
        android.os.UserHandle $r8;
        android.content.Context $r9;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        i0 := @parameter1: int;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.CONFIGURED_NETWORKS_CHANGE");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("multipleChanges", 0);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("wifiConfiguration", r1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("changeReason", i0);

        $r9 = r0.<android.net.wifi.WifiConfigStore: android.content.Context mContext>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r8);

        return;
    }

    private void writeIpAndProxyConfigurations()
    {
        android.net.wifi.WifiConfigStore r0;
        java.util.ArrayList r1, $r3;
        java.util.Iterator r2;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        android.net.wifi.WifiConfiguration $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: android.net.wifi.WifiConfigStore;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        $r4 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = new android.net.wifi.WifiConfiguration;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.net.wifi.WifiConfiguration) $r7;

        specialinvoke $r6.<android.net.wifi.WifiConfiguration: void <init>(android.net.wifi.WifiConfiguration)>($r8);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        staticinvoke <android.net.wifi.WifiConfigStore$DelayedDiskWrite: void write(java.util.List)>(r1);

        return;
    }

    private android.net.wifi.NetworkUpdateResult writeIpAndProxyConfigurationsOnChange(android.net.wifi.WifiConfiguration, android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8;
        android.net.wifi.WifiConfiguration$IpAssignment r3, r4, $r18, $r21, $r56, $r57;
        android.net.wifi.WifiConfiguration$ProxySettings r5, r6, $r19, $r32;
        android.net.LinkProperties r7, $r33, $r46, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55;
        android.net.wifi.NetworkUpdateResult r8, $r40;
        android.net.ProxyProperties r9, r10, $r30, $r41, $r45, $r47;
        java.util.Collection r11, r12, r13, r14, r15, r16;
        int[] $r17, $r20;
        java.lang.String $r22, $r27, $r29, $r35, $r37, $r42, $r44;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r28, $r31, $r34, $r36, $r38, $r39, $r43;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        r2 := @parameter1: android.net.wifi.WifiConfiguration;

        $r17 = <android.net.wifi.WifiConfigStore$1: int[] $SwitchMap$android$net$wifi$WifiConfiguration$IpAssignment>;

        $r18 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment>;

        $i2 = virtualinvoke $r18.<android.net.wifi.WifiConfiguration$IpAssignment: int ordinal()>();

        i0 = $r17[$i2];

        z0 = 0;

        tableswitch(i0)
        {
            case 1: goto label09;
            case 2: goto label20;
            case 3: goto label02;
            default: goto label01;
        };

     label01:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("Ignore invalid ip assignment during write");

     label02:
        $r20 = <android.net.wifi.WifiConfigStore$1: int[] $SwitchMap$android$net$wifi$WifiConfiguration$ProxySettings>;

        $r19 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings>;

        $i3 = virtualinvoke $r19.<android.net.wifi.WifiConfiguration$ProxySettings: int ordinal()>();

        i1 = $r20[$i3];

        z1 = 0;

        tableswitch(i1)
        {
            case 1: goto label21;
            case 2: goto label21;
            case 3: goto label27;
            case 4: goto label04;
            default: goto label03;
        };

     label03:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("Ignore invalid proxy configuration during write");

     label04:
        if z0 != 0 goto label28;

        r7 = specialinvoke r0.<android.net.wifi.WifiConfigStore: android.net.LinkProperties copyIpSettingsFromConfig(android.net.wifi.WifiConfiguration)>(r1);

     label05:
        if z1 != 0 goto label29;

        $r48 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        $r47 = virtualinvoke $r48.<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>();

        virtualinvoke r7.<android.net.LinkProperties: void setHttpProxy(android.net.ProxyProperties)>($r47);

     label06:
        if z0 != 0 goto label07;

        if z1 == 0 goto label08;

     label07:
        r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties> = r7;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void writeIpAndProxyConfigurations()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r1, 2);

     label08:
        $r40 = new android.net.wifi.NetworkUpdateResult;

        specialinvoke $r40.<android.net.wifi.NetworkUpdateResult: void <init>(boolean,boolean)>(z0, z1);

        r8 = $r40;

        return r8;

     label09:
        $r52 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        r11 = virtualinvoke $r52.<android.net.LinkProperties: java.util.Collection getLinkAddresses()>();

        $r53 = r2.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        r13 = virtualinvoke $r53.<android.net.LinkProperties: java.util.Collection getLinkAddresses()>();

        $r50 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        r12 = virtualinvoke $r50.<android.net.LinkProperties: java.util.Collection getDnses()>();

        $r51 = r2.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        r15 = virtualinvoke $r51.<android.net.LinkProperties: java.util.Collection getDnses()>();

        $r54 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        r14 = virtualinvoke $r54.<android.net.LinkProperties: java.util.Collection getRoutes()>();

        $r55 = r2.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        r16 = virtualinvoke $r55.<android.net.LinkProperties: java.util.Collection getRoutes()>();

        $i4 = interfaceinvoke r11.<java.util.Collection: int size()>();

        $i5 = interfaceinvoke r13.<java.util.Collection: int size()>();

        if $i4 != $i5 goto label10;

        $z8 = interfaceinvoke r11.<java.util.Collection: boolean containsAll(java.util.Collection)>(r13);

        if $z8 != 0 goto label17;

     label10:
        z2 = 1;

     label11:
        $i6 = interfaceinvoke r12.<java.util.Collection: int size()>();

        $i7 = interfaceinvoke r15.<java.util.Collection: int size()>();

        if $i6 != $i7 goto label12;

        $z6 = interfaceinvoke r12.<java.util.Collection: boolean containsAll(java.util.Collection)>(r15);

        if $z6 != 0 goto label18;

     label12:
        z4 = 1;

     label13:
        $i9 = interfaceinvoke r14.<java.util.Collection: int size()>();

        $i8 = interfaceinvoke r16.<java.util.Collection: int size()>();

        if $i9 != $i8 goto label14;

        $z7 = interfaceinvoke r14.<java.util.Collection: boolean containsAll(java.util.Collection)>(r16);

        if $z7 != 0 goto label19;

     label14:
        z3 = 1;

     label15:
        $r56 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment>;

        $r57 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment>;

        if $r56 != $r57 goto label16;

        if z2 != 0 goto label16;

        if z4 != 0 goto label16;

        z0 = 0;

        if z3 == 0 goto label02;

     label16:
        z0 = 1;

        goto label02;

     label17:
        z2 = 0;

        goto label11;

     label18:
        z4 = 0;

        goto label13;

     label19:
        z3 = 0;

        goto label15;

     label20:
        r3 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment>;

        r4 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment>;

        z0 = 0;

        if r3 == r4 goto label02;

        z0 = 1;

        goto label02;

     label21:
        $r46 = r2.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        r9 = virtualinvoke $r46.<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>();

        $r49 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        r10 = virtualinvoke $r49.<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>();

        if r9 == null goto label24;

        $z5 = virtualinvoke r9.<android.net.ProxyProperties: boolean equals(java.lang.Object)>(r10);

        if $z5 != 0 goto label23;

        z1 = 1;

     label22:
        goto label04;

     label23:
        z1 = 0;

        goto label22;

     label24:
        if r10 == null goto label26;

        z1 = 1;

     label25:
        goto label04;

     label26:
        z1 = 0;

        goto label25;

     label27:
        r5 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings>;

        r6 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings>;

        z1 = 0;

        if r5 == r6 goto label04;

        z1 = 1;

        goto label04;

     label28:
        $r21 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment>;

        r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment> = $r21;

        r7 = specialinvoke r0.<android.net.wifi.WifiConfigStore: android.net.LinkProperties copyIpSettingsFromConfig(android.net.wifi.WifiConfiguration)>(r2);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IP config changed SSID = ");

        $r22 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" linkProperties: ");

        $r29 = virtualinvoke r7.<android.net.LinkProperties: java.lang.String toString()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void log(java.lang.String)>($r27);

        goto label05;

     label29:
        $r32 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings>;

        r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings> = $r32;

        $r33 = r2.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        $r30 = virtualinvoke $r33.<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>();

        virtualinvoke r7.<android.net.LinkProperties: void setHttpProxy(android.net.ProxyProperties)>($r30);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proxy changed SSID = ");

        $r37 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void log(java.lang.String)>($r35);

        $r41 = virtualinvoke r7.<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>();

        if $r41 == null goto label06;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" proxyProperties: ");

        $r45 = virtualinvoke r7.<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>();

        $r44 = virtualinvoke $r45.<android.net.ProxyProperties: java.lang.String toString()>();

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void log(java.lang.String)>($r42);

        goto label06;
    }

    int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, r3;
        android.net.wifi.NetworkUpdateResult r2;
        byte b0;
        int $i1, $i2, $i3;
        java.util.HashMap $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        r2 = specialinvoke r0.<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration)>(r1);

        $i1 = virtualinvoke r2.<android.net.wifi.NetworkUpdateResult: int getNetworkId()>();

        if $i1 == -1 goto label2;

        $r4 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $i3 = virtualinvoke r2.<android.net.wifi.NetworkUpdateResult: int getNetworkId()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (android.net.wifi.WifiConfiguration) $r6;

        $z0 = r2.<android.net.wifi.NetworkUpdateResult: boolean isNewNetwork>;

        if $z0 == 0 goto label3;

        b0 = 0;

     label1:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r3, b0);

     label2:
        $i2 = virtualinvoke r2.<android.net.wifi.NetworkUpdateResult: int getNetworkId()>();

        return $i2;

     label3:
        b0 = 2;

        goto label1;
    }

    void clearLinkProperties(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        android.net.wifi.WifiConfiguration r1;
        android.net.ProxyProperties r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        android.net.LinkProperties $r6, $r7, $r8, $r9;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r3 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r1 = (android.net.wifi.WifiConfiguration) $r5;

        if r1 == null goto label1;

        $r6 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        if $r6 == null goto label1;

        $r7 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        r2 = virtualinvoke $r7.<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>();

        $r8 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        virtualinvoke $r8.<android.net.LinkProperties: void clear()>();

        $r9 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        virtualinvoke $r9.<android.net.LinkProperties: void setHttpProxy(android.net.ProxyProperties)>(r2);

     label1:
        return;
    }

    void disableAllNetworks()
    {
        android.net.wifi.WifiConfigStore r0;
        boolean z0, $z1, $z2;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        java.lang.Object $r5;
        int $i0, $i1, $i2;
        android.net.wifi.WifiNative $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9;

        r0 := @this: android.net.wifi.WifiConfigStore;

        z0 = 0;

        $r3 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 == null goto label1;

        $i0 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i0 == 1 goto label1;

        $r6 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $i1 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        $z2 = virtualinvoke $r6.<android.net.wifi.WifiNative: boolean disableNetwork(int)>($i1);

        if $z2 == 0 goto label2;

        z0 = 1;

        r2.<android.net.wifi.WifiConfiguration: int status> = 1;

        goto label1;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disable network failed on ");

        $i2 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r9);

        goto label1;

     label3:
        if z0 == 0 goto label4;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast()>();

     label4:
        return;
    }

    boolean disableNetwork(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.net.wifi.WifiConfigStore: boolean disableNetwork(int,int)>(i0, 0);

        return $z0;
    }

    boolean disableNetwork(int, int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0, i1, i2;
        boolean z0;
        android.net.wifi.WifiConfiguration r1, r2;
        android.net.wifi.WifiNative $r3;
        java.util.HashMap $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        z0 = virtualinvoke $r3.<android.net.wifi.WifiNative: boolean disableNetwork(int)>(i0);

        $r4 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r1 = (android.net.wifi.WifiConfiguration) $r6;

        r2 = null;

        if r1 == null goto label1;

        i2 = r1.<android.net.wifi.WifiConfiguration: int status>;

        r2 = null;

        if i2 == 1 goto label1;

        r1.<android.net.wifi.WifiConfiguration: int status> = 1;

        r1.<android.net.wifi.WifiConfiguration: int disableReason> = i1;

        r2 = r1;

     label1:
        if r2 == null goto label2;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r2, 2);

     label2:
        return z0;
    }

    void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.net.wifi.WifiConfigStore r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.Iterator r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        int $i0;
        java.lang.String $r8;
        java.util.List $r9;
        boolean $z0;
        android.util.LocalLog $r10, $r11;
        java.lang.Object $r12;
        android.net.wifi.WifiConfiguration $r13;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("WifiConfigStore");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastPriority ");

        $i0 = r0.<android.net.wifi.WifiConfigStore: int mLastPriority>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Configured networks");

        $r9 = virtualinvoke r0.<android.net.wifi.WifiConfigStore: java.util.List getConfiguredNetworks()>();

        r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (android.net.wifi.WifiConfiguration) $r12;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r13);

        goto label1;

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r10 = r0.<android.net.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        if $r10 == null goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("WifiConfigStore - Log Begin ----");

        $r11 = r0.<android.net.wifi.WifiConfigStore: android.util.LocalLog mLocalLog>;

        virtualinvoke $r11.<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("WifiConfigStore - Log End ----");

     label3:
        return;
    }

    void enableAllNetworks()
    {
        android.net.wifi.WifiConfigStore r0;
        boolean z0, $z1, $z3;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        android.net.wifi.WifiNative $r5, $r7;
        java.lang.Object $r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: android.net.wifi.WifiConfigStore;

        z0 = 0;

        $r3 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.wifi.WifiConfiguration) $r6;

        if r2 == null goto label1;

        $i0 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i0 != 1 goto label1;

        $r7 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $i1 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        $z3 = virtualinvoke $r7.<android.net.wifi.WifiNative: boolean enableNetwork(int,boolean)>($i1, 0);

        if $z3 == 0 goto label2;

        z0 = 1;

        r2.<android.net.wifi.WifiConfiguration: int status> = 2;

        goto label1;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Enable network failed on ");

        $i2 = r2.<android.net.wifi.WifiConfiguration: int networkId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r11);

        goto label1;

     label3:
        if z0 == 0 goto label4;

        $r5 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        virtualinvoke $r5.<android.net.wifi.WifiNative: boolean saveConfig()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast()>();

     label4:
        return;
    }

    boolean enableNetwork(int, boolean)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        boolean z0, z1;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r7;
        android.net.wifi.WifiConfiguration r3;
        java.lang.Integer $r5;
        java.lang.Object $r6;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 = virtualinvoke r0.<android.net.wifi.WifiConfigStore: boolean enableNetworkWithoutBroadcast(int,boolean)>(i0, z0);

        if z0 == 0 goto label2;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast()>();

     label1:
        return z1;

     label2:
        r1 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        entermonitor r1;

     label3:
        $r4 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r3 = (android.net.wifi.WifiConfiguration) $r6;

        exitmonitor r1;

     label4:
        if r3 == null goto label1;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r3, 2);

        return z1;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    boolean enableNetworkWithoutBroadcast(int, boolean)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        boolean z0, z1;
        android.net.wifi.WifiConfiguration r1;
        android.net.wifi.WifiNative $r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        z1 = virtualinvoke $r2.<android.net.wifi.WifiNative: boolean enableNetwork(int,boolean)>(i0, z0);

        $r3 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r1 = (android.net.wifi.WifiConfiguration) $r5;

        if r1 == null goto label1;

        r1.<android.net.wifi.WifiConfiguration: int status> = 2;

     label1:
        if z0 == 0 goto label2;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void markAllNetworksDisabledExcept(int)>(i0);

     label2:
        return z1;
    }

    boolean forgetNetwork(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        android.net.wifi.WifiNative $r1, $r6;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z0 = virtualinvoke $r1.<android.net.wifi.WifiNative: boolean removeNetwork(int)>(i0);

        if $z0 == 0 goto label1;

        $r6 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        virtualinvoke $r6.<android.net.wifi.WifiNative: boolean saveConfig()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void removeConfigAndSendBroadcastIfNeeded(int)>(i0);

        return 1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove network ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r5);

        return 0;
    }

    public java.lang.String getConfigFile()
    {
        android.net.wifi.WifiConfigStore r0;
        java.lang.String $r1;

        r0 := @this: android.net.wifi.WifiConfigStore;

        $r1 = <android.net.wifi.WifiConfigStore: java.lang.String ipConfigFile>;

        return $r1;
    }

    java.util.List getConfiguredNetworks()
    {
        android.net.wifi.WifiConfigStore r0;
        java.util.ArrayList r1, $r3;
        java.util.Iterator r2;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        android.net.wifi.WifiConfiguration $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: android.net.wifi.WifiConfigStore;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        $r4 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = new android.net.wifi.WifiConfiguration;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (android.net.wifi.WifiConfiguration) $r7;

        specialinvoke $r6.<android.net.wifi.WifiConfiguration: void <init>(android.net.wifi.WifiConfiguration)>($r8);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return r1;
    }

    android.net.LinkProperties getLinkProperties(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        android.net.wifi.WifiConfiguration r1;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        android.net.LinkProperties $r5, $r6;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r2 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.net.wifi.WifiConfiguration) $r4;

        if r1 == null goto label1;

        $r5 = new android.net.LinkProperties;

        $r6 = r1.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        specialinvoke $r5.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r6);

        return $r5;

     label1:
        return null;
    }

    android.net.ProxyProperties getProxyProperties(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        android.net.LinkProperties r1;
        android.net.ProxyProperties $r2, $r3;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.net.wifi.WifiConfigStore: android.net.LinkProperties getLinkProperties(int)>(i0);

        if r1 == null goto label1;

        $r2 = new android.net.ProxyProperties;

        $r3 = virtualinvoke r1.<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>();

        specialinvoke $r2.<android.net.ProxyProperties: void <init>(android.net.ProxyProperties)>($r3);

        return $r2;

     label1:
        return null;
    }

    boolean isUsingStaticIp(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        android.net.wifi.WifiConfiguration r1;
        java.util.HashMap $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        android.net.wifi.WifiConfiguration$IpAssignment $r5, $r6;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r2 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.net.wifi.WifiConfiguration) $r4;

        if r1 == null goto label1;

        $r6 = r1.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment>;

        $r5 = <android.net.wifi.WifiConfiguration$IpAssignment: android.net.wifi.WifiConfiguration$IpAssignment STATIC>;

        if $r6 != $r5 goto label1;

        return 1;

     label1:
        return 0;
    }

    void loadAndEnableAllNetworks()
    {
        android.net.wifi.WifiConfigStore r0;

        r0 := @this: android.net.wifi.WifiConfigStore;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void log(java.lang.String)>("Loading config and enabling all networks");

        virtualinvoke r0.<android.net.wifi.WifiConfigStore: void loadConfiguredNetworks()>();

        virtualinvoke r0.<android.net.wifi.WifiConfigStore: void enableAllNetworks()>();

        return;
    }

    void loadConfiguredNetworks()
    {
        android.net.wifi.WifiConfigStore r0;
        java.lang.String r1, r11, r12, $r26, $r27, $r39, $r40, $r48, $r51;
        java.lang.String[] r2, r15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.io.BufferedReader r3, r4, $r24;
        java.lang.Throwable r9, $r47, $r52;
        android.net.wifi.WifiConfiguration r18, $r25;
        android.net.wifi.WifiNative $r19;
        java.util.HashMap $r20, $r21, $r22, $r28, $r31, $r33;
        java.io.FileReader $r23;
        android.net.wifi.WifiConfiguration$IpAssignment $r29;
        android.net.wifi.WifiConfiguration$ProxySettings $r30;
        java.lang.Integer $r32, $r35, $r37, $r38;
        boolean $z0;
        java.lang.StringBuilder $r41, $r42, $r49, $r50;
        java.lang.NumberFormatException $r43;
        java.io.IOException $r44, $r46, $r53, $r54, $r56, $r57;
        java.io.FileNotFoundException $r45, $r55;

        r0 := @this: android.net.wifi.WifiConfigStore;

        $r19 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        r1 = virtualinvoke $r19.<android.net.wifi.WifiNative: java.lang.String listNetworks()>();

        r0.<android.net.wifi.WifiConfigStore: int mLastPriority> = 0;

        $r21 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        virtualinvoke $r21.<java.util.HashMap: void clear()>();

        $r20 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        virtualinvoke $r20.<java.util.HashMap: void clear()>();

        if r1 != null goto label02;

     label01:
        return;

     label02:
        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        i0 = 1;

     label03:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label14;

        $r27 = r2[i0];

        r15 = virtualinvoke $r27.<java.lang.String: java.lang.String[] split(java.lang.String)>("\t");

        $r25 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r25.<android.net.wifi.WifiConfiguration: void <init>()>();

        r18 = $r25;

     label04:
        $r26 = r15[0];

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        r18.<android.net.wifi.WifiConfiguration: int networkId> = $i5;

     label05:
        $i6 = lengthof r15;

        if $i6 <= 3 goto label12;

        $r40 = r15[3];

        $i11 = virtualinvoke $r40.<java.lang.String: int indexOf(java.lang.String)>("[CURRENT]");

        if $i11 == -1 goto label10;

        r18.<android.net.wifi.WifiConfiguration: int status> = 0;

     label06:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void readNetworkVariables(android.net.wifi.WifiConfiguration)>(r18);

        $i4 = r18.<android.net.wifi.WifiConfiguration: int priority>;

        $i3 = r0.<android.net.wifi.WifiConfigStore: int mLastPriority>;

        if $i4 <= $i3 goto label07;

        $i12 = r18.<android.net.wifi.WifiConfiguration: int priority>;

        r0.<android.net.wifi.WifiConfigStore: int mLastPriority> = $i12;

     label07:
        $r29 = <android.net.wifi.WifiConfiguration$IpAssignment: android.net.wifi.WifiConfiguration$IpAssignment DHCP>;

        r18.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$IpAssignment ipAssignment> = $r29;

        $r30 = <android.net.wifi.WifiConfiguration$ProxySettings: android.net.wifi.WifiConfiguration$ProxySettings NONE>;

        r18.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings> = $r30;

        $r28 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i7 = staticinvoke <android.net.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r18);

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $z0 = virtualinvoke $r28.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r32);

        if $z0 == 0 goto label13;

     label08:
        i0 = i0 + 1;

        goto label03;

     label09:
        $r43 := @caughtexception;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read network-id \'");

        $r48 = r15[0];

        $r49 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>($r51);

        goto label08;

     label10:
        $r39 = r15[3];

        $i13 = virtualinvoke $r39.<java.lang.String: int indexOf(java.lang.String)>("[DISABLED]");

        if $i13 == -1 goto label11;

        r18.<android.net.wifi.WifiConfiguration: int status> = 1;

        goto label06;

     label11:
        r18.<android.net.wifi.WifiConfiguration: int status> = 2;

        goto label06;

     label12:
        r18.<android.net.wifi.WifiConfiguration: int status> = 2;

        goto label06;

     label13:
        $r31 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $i8 = r18.<android.net.wifi.WifiConfiguration: int networkId>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, r18);

        $r33 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i9 = staticinvoke <android.net.wifi.WifiConfigStore: int configKey(android.net.wifi.WifiConfiguration)>(r18);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $i10 = r18.<android.net.wifi.WifiConfiguration: int networkId>;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r38, $r37);

        goto label08;

     label14:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void readIpAndProxyConfigurations()>();

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast()>();

        $r22 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mNetworkIds>;

        $i2 = virtualinvoke $r22.<java.util.HashMap: int size()>();

        if $i2 != 0 goto label01;

        r3 = null;

     label15:
        $r24 = new java.io.BufferedReader;

        $r23 = new java.io.FileReader;

        specialinvoke $r23.<java.io.FileReader: void <init>(java.lang.String)>("/data/misc/wifi/wpa_supplicant.conf");

        specialinvoke $r24.<java.io.BufferedReader: void <init>(java.io.Reader)>($r23);

        r4 = $r24;

     label16:
        r11 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label17:
        if r11 == null goto label20;

     label18:
        r12 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label19:
        r11 = r12;

        goto label17;

     label20:
        if r4 == null goto label01;

     label21:
        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label22:
        return;

     label23:
        $r57 := @caughtexception;

        return;

     label24:
        $r45 := @caughtexception;

     label25:
        if r3 == null goto label01;

     label26:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label27:
        return;

     label28:
        $r46 := @caughtexception;

        return;

     label29:
        $r44 := @caughtexception;

     label30:
        if r3 == null goto label01;

     label31:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label32:
        return;

     label33:
        $r54 := @caughtexception;

        return;

     label34:
        $r47 := @caughtexception;

        r9 = $r47;

     label35:
        if r3 == null goto label37;

     label36:
        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label37:
        throw r9;

     label38:
        $r53 := @caughtexception;

        goto label37;

     label39:
        $r52 := @caughtexception;

        r9 = $r52;

        r3 = r4;

        goto label35;

     label40:
        $r56 := @caughtexception;

        r3 = r4;

        goto label30;

     label41:
        $r55 := @caughtexception;

        r3 = r4;

        goto label25;

        catch java.lang.NumberFormatException from label04 to label05 with label09;
        catch java.io.FileNotFoundException from label15 to label16 with label24;
        catch java.io.IOException from label15 to label16 with label29;
        catch java.lang.Throwable from label15 to label16 with label34;
        catch java.io.FileNotFoundException from label16 to label17 with label41;
        catch java.io.IOException from label16 to label17 with label40;
        catch java.lang.Throwable from label16 to label17 with label39;
        catch java.io.FileNotFoundException from label18 to label19 with label41;
        catch java.io.IOException from label18 to label19 with label40;
        catch java.lang.Throwable from label18 to label19 with label39;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label31 to label32 with label33;
        catch java.io.IOException from label36 to label37 with label38;
    }

    boolean needsUnlockedKeyStore()
    {
        android.net.wifi.WifiConfigStore r0;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r5;
        java.util.BitSet $r6, $r7;
        android.net.wifi.WifiEnterpriseConfig $r8;

        r0 := @this: android.net.wifi.WifiConfigStore;

        $r3 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        $r6 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z1 = virtualinvoke $r6.<java.util.BitSet: boolean get(int)>(2);

        if $z1 == 0 goto label1;

        $r7 = r2.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z2 = virtualinvoke $r7.<java.util.BitSet: boolean get(int)>(3);

        if $z2 == 0 goto label1;

        $r8 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiEnterpriseConfig enterpriseConfig>;

        $z3 = virtualinvoke $r8.<android.net.wifi.WifiEnterpriseConfig: boolean needsSoftwareBackedKeyStore()>();

        if $z3 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    boolean removeNetwork(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        boolean z0;
        android.net.wifi.WifiNative $r1;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        $r1 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        z0 = virtualinvoke $r1.<android.net.wifi.WifiNative: boolean removeNetwork(int)>(i0);

        if z0 == 0 goto label1;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void removeConfigAndSendBroadcastIfNeeded(int)>(i0);

     label1:
        return z0;
    }

    boolean saveConfig()
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WifiNative $r1;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiConfigStore;

        $r1 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $z0 = virtualinvoke $r1.<android.net.wifi.WifiNative: boolean saveConfig()>();

        return $z0;
    }

    android.net.wifi.NetworkUpdateResult saveNetwork(android.net.wifi.WifiConfiguration)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WifiConfiguration r1, $r8;
        boolean z0, z1;
        android.net.wifi.NetworkUpdateResult r2, $r3;
        int i0, $i2, $i3;
        byte b1;
        android.net.wifi.WifiNative $r4, $r5;
        java.lang.Integer $r6;
        java.util.HashMap $r7;
        java.lang.Object $r9;
        java.lang.String $r10;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        if r1 == null goto label1;

        $i2 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i2 != -1 goto label2;

        $r10 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        if $r10 != null goto label2;

     label1:
        $r3 = new android.net.wifi.NetworkUpdateResult;

        specialinvoke $r3.<android.net.wifi.NetworkUpdateResult: void <init>(int)>(-1);

        return $r3;

     label2:
        $i3 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i3 != -1 goto label6;

        z0 = 1;

     label3:
        r2 = specialinvoke r0.<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration)>(r1);

        i0 = virtualinvoke r2.<android.net.wifi.NetworkUpdateResult: int getNetworkId()>();

        if z0 == 0 goto label4;

        if i0 == -1 goto label4;

        $r5 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        virtualinvoke $r5.<android.net.wifi.WifiNative: boolean enableNetwork(int,boolean)>(i0, 0);

        $r7 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (android.net.wifi.WifiConfiguration) $r9;

        $r8.<android.net.wifi.WifiConfiguration: int status> = 2;

     label4:
        $r4 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        virtualinvoke $r4.<android.net.wifi.WifiNative: boolean saveConfig()>();

        z1 = virtualinvoke r2.<android.net.wifi.NetworkUpdateResult: boolean isNewNetwork()>();

        b1 = 0;

        if z1 == 0 goto label7;

     label5:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)>(r1, b1);

        return r2;

     label6:
        z0 = 0;

        goto label3;

     label7:
        b1 = 2;

        goto label5;
    }

    boolean selectNetwork(int)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.Iterator r1;
        android.net.wifi.WifiConfiguration r2, r3, $r6;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        boolean $z0;
        android.net.wifi.WifiNative $r7;
        java.lang.Object $r9;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        return 0;

     label1:
        $i2 = r0.<android.net.wifi.WifiConfigStore: int mLastPriority>;

        if $i2 == -1 goto label2;

        $i5 = r0.<android.net.wifi.WifiConfigStore: int mLastPriority>;

        if $i5 <= 1000000 goto label5;

     label2:
        $r4 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.WifiConfiguration) $r9;

        $i4 = r3.<android.net.wifi.WifiConfiguration: int networkId>;

        if $i4 == -1 goto label3;

        r3.<android.net.wifi.WifiConfiguration: int priority> = 0;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration)>(r3);

        goto label3;

     label4:
        r0.<android.net.wifi.WifiConfigStore: int mLastPriority> = 0;

     label5:
        $r6 = new android.net.wifi.WifiConfiguration;

        specialinvoke $r6.<android.net.wifi.WifiConfiguration: void <init>()>();

        r2 = $r6;

        r2.<android.net.wifi.WifiConfiguration: int networkId> = i0;

        $i3 = r0.<android.net.wifi.WifiConfigStore: int mLastPriority>;

        i1 = 1 + $i3;

        r0.<android.net.wifi.WifiConfigStore: int mLastPriority> = i1;

        r2.<android.net.wifi.WifiConfiguration: int priority> = i1;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration)>(r2);

        $r7 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        virtualinvoke $r7.<android.net.wifi.WifiNative: boolean saveConfig()>();

        virtualinvoke r0.<android.net.wifi.WifiConfigStore: boolean enableNetworkWithoutBroadcast(int,boolean)>(i0, 1);

        return 1;
    }

    void setLinkProperties(int, android.net.LinkProperties)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0;
        android.net.LinkProperties r1, $r6, $r7;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        android.net.ProxyProperties $r8;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.LinkProperties;

        $r3 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 == null goto label2;

        $r6 = r2.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        if $r6 == null goto label1;

        $r7 = r2.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties>;

        $r8 = virtualinvoke $r7.<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()>();

        virtualinvoke r1.<android.net.LinkProperties: void setHttpProxy(android.net.ProxyProperties)>($r8);

     label1:
        r2.<android.net.wifi.WifiConfiguration: android.net.LinkProperties linkProperties> = r1;

     label2:
        return;
    }

    android.net.wifi.WpsResult startWpsPbc(android.net.wifi.WpsInfo)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WpsInfo r1;
        android.net.wifi.WpsResult r2, $r3;
        java.lang.String $r4;
        android.net.wifi.WifiNative $r5;
        boolean $z0;
        android.net.wifi.WpsResult$Status $r6, $r7;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WpsInfo;

        $r3 = new android.net.wifi.WpsResult;

        specialinvoke $r3.<android.net.wifi.WpsResult: void <init>()>();

        r2 = $r3;

        $r5 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $r4 = r1.<android.net.wifi.WpsInfo: java.lang.String BSSID>;

        $z0 = virtualinvoke $r5.<android.net.wifi.WifiNative: boolean startWpsPbc(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void markAllNetworksDisabled()>();

        $r7 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status SUCCESS>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r7;

        return r2;

     label1:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("Failed to start WPS push button configuration");

        $r6 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status FAILURE>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r6;

        return r2;
    }

    android.net.wifi.WpsResult startWpsWithPinFromAccessPoint(android.net.wifi.WpsInfo)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WpsInfo r1;
        android.net.wifi.WpsResult r2, $r3;
        java.lang.String $r4, $r5;
        android.net.wifi.WifiNative $r6;
        boolean $z0;
        android.net.wifi.WpsResult$Status $r7, $r8;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WpsInfo;

        $r3 = new android.net.wifi.WpsResult;

        specialinvoke $r3.<android.net.wifi.WpsResult: void <init>()>();

        r2 = $r3;

        $r6 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $r5 = r1.<android.net.wifi.WpsInfo: java.lang.String BSSID>;

        $r4 = r1.<android.net.wifi.WpsInfo: java.lang.String pin>;

        $z0 = virtualinvoke $r6.<android.net.wifi.WifiNative: boolean startWpsRegistrar(java.lang.String,java.lang.String)>($r5, $r4);

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void markAllNetworksDisabled()>();

        $r8 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status SUCCESS>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r8;

        return r2;

     label1:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("Failed to start WPS pin method configuration");

        $r7 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status FAILURE>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r7;

        return r2;
    }

    android.net.wifi.WpsResult startWpsWithPinFromDevice(android.net.wifi.WpsInfo)
    {
        android.net.wifi.WifiConfigStore r0;
        android.net.wifi.WpsInfo r1;
        android.net.wifi.WpsResult r2, $r3;
        java.lang.String $r4, $r6, $r7;
        android.net.wifi.WifiNative $r5;
        boolean $z0;
        android.net.wifi.WpsResult$Status $r8, $r9;

        r0 := @this: android.net.wifi.WifiConfigStore;

        r1 := @parameter0: android.net.wifi.WpsInfo;

        $r3 = new android.net.wifi.WpsResult;

        specialinvoke $r3.<android.net.wifi.WpsResult: void <init>()>();

        r2 = $r3;

        $r5 = r0.<android.net.wifi.WifiConfigStore: android.net.wifi.WifiNative mWifiNative>;

        $r4 = r1.<android.net.wifi.WpsInfo: java.lang.String BSSID>;

        $r6 = virtualinvoke $r5.<android.net.wifi.WifiNative: java.lang.String startWpsPinDisplay(java.lang.String)>($r4);

        r2.<android.net.wifi.WpsResult: java.lang.String pin> = $r6;

        $r7 = r2.<android.net.wifi.WpsResult: java.lang.String pin>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.net.wifi.WifiConfigStore: void markAllNetworksDisabled()>();

        $r9 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status SUCCESS>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r9;

        return r2;

     label1:
        specialinvoke r0.<android.net.wifi.WifiConfigStore: void loge(java.lang.String)>("Failed to start WPS pin method configuration");

        $r8 = <android.net.wifi.WpsResult$Status: android.net.wifi.WpsResult$Status FAILURE>;

        r2.<android.net.wifi.WpsResult: android.net.wifi.WpsResult$Status status> = $r8;

        return r2;
    }

    void updateStatus(int, android.net.NetworkInfo$DetailedState)
    {
        android.net.wifi.WifiConfigStore r0;
        int i0, $i1, $i2, $i3;
        android.net.NetworkInfo$DetailedState r1;
        android.net.wifi.WifiConfiguration r2;
        java.util.HashMap $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        int[] $r6;

        r0 := @this: android.net.wifi.WifiConfigStore;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.NetworkInfo$DetailedState;

        if i0 == -1 goto label1;

        $r3 = r0.<android.net.wifi.WifiConfigStore: java.util.HashMap mConfiguredNetworks>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.net.wifi.WifiConfiguration) $r5;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r6 = <android.net.wifi.WifiConfigStore$1: int[] $SwitchMap$android$net$NetworkInfo$DetailedState>;

        $i1 = virtualinvoke r1.<android.net.NetworkInfo$DetailedState: int ordinal()>();

        $i2 = $r6[$i1];

        tableswitch($i2)
        {
            case 1: goto label4;
            case 2: goto label5;
            default: goto label3;
        };

     label3:
        return;

     label4:
        r2.<android.net.wifi.WifiConfiguration: int status> = 0;

        return;

     label5:
        $i3 = r2.<android.net.wifi.WifiConfiguration: int status>;

        if $i3 != 0 goto label1;

        r2.<android.net.wifi.WifiConfiguration: int status> = 2;

        return;
    }
}
