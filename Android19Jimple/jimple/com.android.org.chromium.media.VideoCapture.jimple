public class com.android.org.chromium.media.VideoCapture extends java.lang.Object implements android.graphics.SurfaceTexture$OnFrameAvailableListener, android.hardware.Camera$PreviewCallback
{
    private android.hardware.Camera mCamera;
    private int mCameraFacing;
    private int mCameraOrientation;
    private byte[] mColorPlane;
    private android.content.Context mContext;
    com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability;
    private int mDeviceOrientation;
    private int mExpectedFrameSize;
    private int[] mGlTextures;
    private int mId;
    private int mImageFormat;
    private boolean mIsRunning;
    private long mNativeVideoCaptureDeviceAndroid;
    public java.util.concurrent.locks.ReentrantLock mPreviewBufferLock;
    private android.graphics.SurfaceTexture mSurfaceTexture;

    public void <init>(android.content.Context, int, long)
    {
        com.android.org.chromium.media.VideoCapture r0;
        android.content.Context r1;
        int i0;
        long l1;
        java.util.concurrent.locks.ReentrantLock $r2;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock> = $r2;

        r0.<com.android.org.chromium.media.VideoCapture: int mImageFormat> = 842094169;

        r0.<com.android.org.chromium.media.VideoCapture: byte[] mColorPlane> = null;

        r0.<com.android.org.chromium.media.VideoCapture: android.content.Context mContext> = null;

        r0.<com.android.org.chromium.media.VideoCapture: boolean mIsRunning> = 0;

        r0.<com.android.org.chromium.media.VideoCapture: int mExpectedFrameSize> = 0;

        r0.<com.android.org.chromium.media.VideoCapture: int mId> = 0;

        r0.<com.android.org.chromium.media.VideoCapture: long mNativeVideoCaptureDeviceAndroid> = 0L;

        r0.<com.android.org.chromium.media.VideoCapture: int[] mGlTextures> = null;

        r0.<com.android.org.chromium.media.VideoCapture: android.graphics.SurfaceTexture mSurfaceTexture> = null;

        r0.<com.android.org.chromium.media.VideoCapture: int mCameraOrientation> = 0;

        r0.<com.android.org.chromium.media.VideoCapture: int mCameraFacing> = 0;

        r0.<com.android.org.chromium.media.VideoCapture: int mDeviceOrientation> = 0;

        r0.<com.android.org.chromium.media.VideoCapture: com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability> = null;

        r0.<com.android.org.chromium.media.VideoCapture: android.content.Context mContext> = r1;

        r0.<com.android.org.chromium.media.VideoCapture: int mId> = i0;

        r0.<com.android.org.chromium.media.VideoCapture: long mNativeVideoCaptureDeviceAndroid> = l1;

        return;
    }

    private void calculateImageFormat(int, int)
    {
        com.android.org.chromium.media.VideoCapture r0;
        int i0, i1, $i2;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.org.chromium.media.VideoCapture$DeviceImageFormatHack: int getImageFormat()>();

        r0.<com.android.org.chromium.media.VideoCapture: int mImageFormat> = $i2;

        return;
    }

    public static com.android.org.chromium.media.VideoCapture createVideoCapture(android.content.Context, int, long)
    {
        android.content.Context r0;
        int i0;
        long l1;
        com.android.org.chromium.media.VideoCapture $r1;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r1 = new com.android.org.chromium.media.VideoCapture;

        specialinvoke $r1.<com.android.org.chromium.media.VideoCapture: void <init>(android.content.Context,int,long)>(r0, i0, l1);

        return $r1;
    }

    private int getDeviceOrientation()
    {
        com.android.org.chromium.media.VideoCapture r0;
        android.content.Context $r1, $r2;
        java.lang.Object $r3;
        android.view.WindowManager $r4;
        android.view.Display $r5;
        int $i0;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        $r1 = r0.<com.android.org.chromium.media.VideoCapture: android.content.Context mContext>;

        if $r1 == null goto label5;

        $r2 = r0.<com.android.org.chromium.media.VideoCapture: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r4 = (android.view.WindowManager) $r3;

        $r5 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r5.<android.view.Display: int getRotation()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 90;

     label3:
        return 180;

     label4:
        return 270;

     label5:
        return 0;
    }

    private native void nativeOnFrameAvailable(long, byte[], int, int);

    public boolean allocate(int, int, int)
    {
        com.android.org.chromium.media.VideoCapture r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i31, $i34, $i35, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i56;
        java.lang.RuntimeException r1, $r69;
        android.hardware.Camera$CameraInfo r2, $r21;
        java.io.IOException r3, $r83;
        android.hardware.Camera$Parameters r4;
        java.util.List r5, r8;
        java.util.Iterator r6, r9;
        int[] r7, r13, $r36, $r48, $r49, $r50, $r55, $r68;
        android.hardware.Camera$Size r10;
        byte[] r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r16, $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r33, $r35, $r37, $r43, $r44, $r45, $r46, $r47, $r57, $r58, $r59, $r61, $r62, $r63, $r65, $r70, $r71, $r72, $r73, $r74, $r77, $r79, $r80, $r81, $r82;
        java.lang.String $r17, $r27, $r34, $r42, $r64, $r75, $r76, $r78;
        android.hardware.Camera $r22, $r32, $r51, $r52, $r60;
        java.lang.Object $r31, $r66, $r67;
        boolean $z0, $z1, $z2, $z3;
        com.android.org.chromium.media.VideoCapture$CaptureCapability $r38, $r39, $r40, $r41;
        android.graphics.SurfaceTexture $r53, $r54, $r56;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: requested width=");

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height=");

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", frameRate=");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoCapture", $r17);

     label01:
        $i19 = r0.<com.android.org.chromium.media.VideoCapture: int mId>;

        $r22 = staticinvoke <android.hardware.Camera: android.hardware.Camera open(int)>($i19);

        r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera> = $r22;

     label02:
        $r21 = new android.hardware.Camera$CameraInfo;

        specialinvoke $r21.<android.hardware.Camera$CameraInfo: void <init>()>();

        r2 = $r21;

        $i24 = r0.<com.android.org.chromium.media.VideoCapture: int mId>;

        staticinvoke <android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)>($i24, r2);

        $i23 = r2.<android.hardware.Camera$CameraInfo: int orientation>;

        r0.<com.android.org.chromium.media.VideoCapture: int mCameraOrientation> = $i23;

        $i22 = r2.<android.hardware.Camera$CameraInfo: int facing>;

        r0.<com.android.org.chromium.media.VideoCapture: int mCameraFacing> = $i22;

        $i21 = specialinvoke r0.<com.android.org.chromium.media.VideoCapture: int getDeviceOrientation()>();

        r0.<com.android.org.chromium.media.VideoCapture: int mDeviceOrientation> = $i21;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: device orientation=");

        $i25 = r0.<com.android.org.chromium.media.VideoCapture: int mDeviceOrientation>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", camera orientation=");

        $i27 = r0.<com.android.org.chromium.media.VideoCapture: int mCameraOrientation>;

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r25 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", facing=");

        $i26 = r0.<com.android.org.chromium.media.VideoCapture: int mCameraFacing>;

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoCapture", $r27);

        $r32 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        r4 = virtualinvoke $r32.<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>();

        r5 = virtualinvoke r4.<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()>();

     label03:
        if r5 == null goto label05;

     label04:
        $i29 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i29 != 0 goto label08;

     label05:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoCapture", "allocate: no fps range found");

     label06:
        return 0;

     label07:
        $r69 := @caughtexception;

        r1 = $r69;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate:Camera.open: ");

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoCapture", $r78);

        return 0;

     label08:
        i3 = i2 * 1000;

     label09:
        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

        $r31 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r36 = (int[]) $r31;

        r7 = (int[]) $r36;

        i4 = r7[0];

        i6 = r7[1];

        $i31 = i4 + 999;

        i5 = $i31 / 1000;

     label10:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label35;

        $r67 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r68 = (int[]) $r67;

        r13 = (int[]) $r68;

        $i52 = r13[0];

        if $i52 > i3 goto label10;

        $i53 = r13[1];

        if i3 > $i53 goto label10;

        i17 = r13[0];

        i8 = r13[1];

     label11:
        i7 = i17;

     label12:
        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: fps set to ");

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoCapture", $r34);

        $r40 = new com.android.org.chromium.media.VideoCapture$CaptureCapability;

        specialinvoke $r40.<com.android.org.chromium.media.VideoCapture$CaptureCapability: void <init>()>();

        r0.<com.android.org.chromium.media.VideoCapture: com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability> = $r40;

        $r41 = r0.<com.android.org.chromium.media.VideoCapture: com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability>;

        $r41.<com.android.org.chromium.media.VideoCapture$CaptureCapability: int mDesiredFps> = i2;

        r8 = virtualinvoke r4.<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>();

     label13:
        i9 = 2147483647;

     label14:
        r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label15:
        i11 = i1;

        i10 = i0;

     label16:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label20;

        $r66 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.hardware.Camera$Size) $r66;

        $i48 = r10.<android.hardware.Camera$Size: int width>;

        $i50 = $i48 - i0;

        $i49 = staticinvoke <java.lang.Math: int abs(int)>($i50);

        $i43 = r10.<android.hardware.Camera$Size: int height>;

        $i42 = $i43 - i1;

        $i44 = staticinvoke <java.lang.Math: int abs(int)>($i42);

        i16 = $i49 + $i44;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: support resolution (");

        $i45 = r10.<android.hardware.Camera$Size: int width>;

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);

        $r71 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i54 = r10.<android.hardware.Camera$Size: int height>;

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i54);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), diff=");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoCapture", $r75);

     label17:
        if i16 >= i9 goto label34;

     label18:
        $i56 = r10.<android.hardware.Camera$Size: int width>;

        $i51 = $i56 % 32;

        if $i51 != 0 goto label34;

        i15 = r10.<android.hardware.Camera$Size: int width>;

        i14 = r10.<android.hardware.Camera$Size: int height>;

     label19:
        i18 = i16;

        goto label36;

     label20:
        if i9 != 2147483647 goto label23;

     label21:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoCapture", "allocate: can not find a resolution whose width is multiple of 32");

     label22:
        return 0;

     label23:
        $r39 = r0.<com.android.org.chromium.media.VideoCapture: com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability>;

        $r39.<com.android.org.chromium.media.VideoCapture$CaptureCapability: int mWidth> = i10;

        $r38 = r0.<com.android.org.chromium.media.VideoCapture: com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability>;

        $r38.<com.android.org.chromium.media.VideoCapture$CaptureCapability: int mHeight> = i11;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: matched width=");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r43 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", height=");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoCapture", $r42);

        specialinvoke r0.<com.android.org.chromium.media.VideoCapture: void calculateImageFormat(int,int)>(i10, i11);

        $z2 = virtualinvoke r4.<android.hardware.Camera$Parameters: boolean isVideoStabilizationSupported()>();

        if $z2 == 0 goto label29;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image stabilization supported, currently: ");

        $z3 = virtualinvoke r4.<android.hardware.Camera$Parameters: boolean getVideoStabilization()>();

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r65 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", setting it.");

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoCapture", $r64);

        virtualinvoke r4.<android.hardware.Camera$Parameters: void setVideoStabilization(boolean)>(1);

     label24:
        virtualinvoke r4.<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>(i10, i11);

        $i35 = r0.<com.android.org.chromium.media.VideoCapture: int mImageFormat>;

        virtualinvoke r4.<android.hardware.Camera$Parameters: void setPreviewFormat(int)>($i35);

        virtualinvoke r4.<android.hardware.Camera$Parameters: void setPreviewFpsRange(int,int)>(i7, i8);

        $r51 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        virtualinvoke $r51.<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>(r4);

        $r49 = newarray (int)[1];

        r0.<com.android.org.chromium.media.VideoCapture: int[] mGlTextures> = $r49;

        $r50 = r0.<com.android.org.chromium.media.VideoCapture: int[] mGlTextures>;

        staticinvoke <android.opengl.GLES20: void glGenTextures(int,int[],int)>(1, $r50, 0);

        $r48 = r0.<com.android.org.chromium.media.VideoCapture: int[] mGlTextures>;

        $i34 = $r48[0];

        staticinvoke <android.opengl.GLES20: void glBindTexture(int,int)>(36197, $i34);

        staticinvoke <android.opengl.GLES20: void glTexParameterf(int,int,float)>(36197, 10241, 9729.0F);

        staticinvoke <android.opengl.GLES20: void glTexParameterf(int,int,float)>(36197, 10240, 9729.0F);

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>(36197, 10242, 33071);

        staticinvoke <android.opengl.GLES20: void glTexParameteri(int,int,int)>(36197, 10243, 33071);

        $r56 = new android.graphics.SurfaceTexture;

        $r55 = r0.<com.android.org.chromium.media.VideoCapture: int[] mGlTextures>;

        $i39 = $r55[0];

        specialinvoke $r56.<android.graphics.SurfaceTexture: void <init>(int)>($i39);

        r0.<com.android.org.chromium.media.VideoCapture: android.graphics.SurfaceTexture mSurfaceTexture> = $r56;

        $r54 = r0.<com.android.org.chromium.media.VideoCapture: android.graphics.SurfaceTexture mSurfaceTexture>;

        virtualinvoke $r54.<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)>(null);

        $r52 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        $r53 = r0.<com.android.org.chromium.media.VideoCapture: android.graphics.SurfaceTexture mSurfaceTexture>;

        virtualinvoke $r52.<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>($r53);

        $i37 = i10 * i11;

        $i38 = r0.<com.android.org.chromium.media.VideoCapture: int mImageFormat>;

        $i41 = staticinvoke <android.graphics.ImageFormat: int getBitsPerPixel(int)>($i38);

        $i40 = $i37 * $i41;

        i12 = $i40 / 8;

     label25:
        i13 = 0;

     label26:
        if i13 >= 3 goto label32;

     label27:
        r11 = newarray (byte)[i12];

        $r60 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        virtualinvoke $r60.<android.hardware.Camera: void addCallbackBuffer(byte[])>(r11);

     label28:
        i13 = i13 + 1;

        goto label26;

     label29:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoCapture", "Image stabilization not supported.");

     label30:
        goto label24;

     label31:
        $r83 := @caughtexception;

        r3 = $r83;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allocate: ");

        $r77 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoCapture", $r76);

        return 0;

     label32:
        r0.<com.android.org.chromium.media.VideoCapture: int mExpectedFrameSize> = i12;

     label33:
        return 1;

     label34:
        i14 = i11;

        i15 = i10;

        i18 = i9;

        goto label36;

     label35:
        i2 = i5;

        i8 = i6;

        i7 = i4;

        goto label12;

     label36:
        i9 = i18;

        i10 = i15;

        i11 = i14;

        goto label16;

        catch java.lang.RuntimeException from label01 to label02 with label07;
        catch java.io.IOException from label02 to label03 with label31;
        catch java.io.IOException from label04 to label05 with label31;
        catch java.io.IOException from label05 to label06 with label31;
        catch java.io.IOException from label09 to label10 with label31;
        catch java.io.IOException from label10 to label11 with label31;
        catch java.io.IOException from label12 to label13 with label31;
        catch java.io.IOException from label14 to label15 with label31;
        catch java.io.IOException from label16 to label17 with label31;
        catch java.io.IOException from label18 to label19 with label31;
        catch java.io.IOException from label21 to label22 with label31;
        catch java.io.IOException from label23 to label24 with label31;
        catch java.io.IOException from label24 to label25 with label31;
        catch java.io.IOException from label27 to label28 with label31;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.io.IOException from label32 to label33 with label31;
    }

    public void deallocate()
    {
        com.android.org.chromium.media.VideoCapture r0;
        java.io.IOException r1, $r7;
        android.hardware.Camera $r2, $r3, $r5;
        int[] $r4, $r6;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        $r2 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        if $r2 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.org.chromium.media.VideoCapture: int stopCapture()>();

     label2:
        $r3 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        virtualinvoke $r3.<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>(null);

        $r4 = r0.<com.android.org.chromium.media.VideoCapture: int[] mGlTextures>;

        if $r4 == null goto label3;

        $r6 = r0.<com.android.org.chromium.media.VideoCapture: int[] mGlTextures>;

        staticinvoke <android.opengl.GLES20: void glDeleteTextures(int,int[],int)>(1, $r6, 0);

     label3:
        r0.<com.android.org.chromium.media.VideoCapture: com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability> = null;

        $r5 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        virtualinvoke $r5.<android.hardware.Camera: void release()>();

        r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera> = null;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r1 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deallocate: failed to deallocate camera, ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoCapture", $r11);

        return;

        catch java.io.IOException from label2 to label3 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public int getColorspace()
    {
        com.android.org.chromium.media.VideoCapture r0;
        int $i0;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        $i0 = r0.<com.android.org.chromium.media.VideoCapture: int mImageFormat>;

        lookupswitch($i0)
        {
            case 4: goto label7;
            case 16: goto label5;
            case 17: goto label3;
            case 20: goto label4;
            case 256: goto label6;
            case 842094169: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 842094169;

     label3:
        return 17;

     label4:
        return 20;

     label5:
        return 16;

     label6:
        return 256;

     label7:
        return 4;
    }

    public void onFrameAvailable(android.graphics.SurfaceTexture)
    {
        com.android.org.chromium.media.VideoCapture r0;
        android.graphics.SurfaceTexture r1;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        return;
    }

    public void onPreviewFrame(byte[], android.hardware.Camera)
    {
        com.android.org.chromium.media.VideoCapture r0;
        byte[] r1;
        android.hardware.Camera r2;
        java.lang.Throwable r3, $r12;
        boolean z0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11;
        java.util.concurrent.locks.ReentrantLock $r4, $r5, $r13, $r14;
        long $l8;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.hardware.Camera;

        $r4 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        z0 = r0.<com.android.org.chromium.media.VideoCapture: boolean mIsRunning>;

     label02:
        if z0 != 0 goto label04;

        $r13 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r13.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        if r2 == null goto label03;

        virtualinvoke r2.<android.hardware.Camera: void addCallbackBuffer(byte[])>(r1);

     label03:
        return;

     label04:
        $i3 = lengthof r1;

        $i2 = r0.<com.android.org.chromium.media.VideoCapture: int mExpectedFrameSize>;

        if $i3 != $i2 goto label08;

        i0 = specialinvoke r0.<com.android.org.chromium.media.VideoCapture: int getDeviceOrientation()>();

        $i4 = r0.<com.android.org.chromium.media.VideoCapture: int mDeviceOrientation>;

        if i0 == $i4 goto label05;

        r0.<com.android.org.chromium.media.VideoCapture: int mDeviceOrientation> = i0;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onPreviewFrame: device orientation=");

        $i10 = r0.<com.android.org.chromium.media.VideoCapture: int mDeviceOrientation>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", camera orientation=");

        $i11 = r0.<com.android.org.chromium.media.VideoCapture: int mCameraOrientation>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("VideoCapture", $r11);

     label05:
        $i5 = r0.<com.android.org.chromium.media.VideoCapture: int mCameraFacing>;

        if $i5 != 0 goto label07;

     label06:
        i0 = 360 - i0;

     label07:
        $i6 = r0.<com.android.org.chromium.media.VideoCapture: int mCameraOrientation>;

        $i7 = i0 + $i6;

        i1 = $i7 % 360;

        $l8 = r0.<com.android.org.chromium.media.VideoCapture: long mNativeVideoCaptureDeviceAndroid>;

        $i9 = r0.<com.android.org.chromium.media.VideoCapture: int mExpectedFrameSize>;

        specialinvoke r0.<com.android.org.chromium.media.VideoCapture: void nativeOnFrameAvailable(long,byte[],int,int)>($l8, r1, $i9, i1);

     label08:
        $r5 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        if r2 == null goto label03;

        virtualinvoke r2.<android.hardware.Camera: void addCallbackBuffer(byte[])>(r1);

        return;

     label09:
        $r12 := @caughtexception;

        r3 = $r12;

        $r14 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r14.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        if r2 == null goto label10;

        virtualinvoke r2.<android.hardware.Camera: void addCallbackBuffer(byte[])>(r1);

     label10:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public int queryFrameRate()
    {
        com.android.org.chromium.media.VideoCapture r0;
        com.android.org.chromium.media.VideoCapture$CaptureCapability $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        $r1 = r0.<com.android.org.chromium.media.VideoCapture: com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability>;

        $i0 = $r1.<com.android.org.chromium.media.VideoCapture$CaptureCapability: int mDesiredFps>;

        return $i0;
    }

    public int queryHeight()
    {
        com.android.org.chromium.media.VideoCapture r0;
        com.android.org.chromium.media.VideoCapture$CaptureCapability $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        $r1 = r0.<com.android.org.chromium.media.VideoCapture: com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability>;

        $i0 = $r1.<com.android.org.chromium.media.VideoCapture$CaptureCapability: int mHeight>;

        return $i0;
    }

    public int queryWidth()
    {
        com.android.org.chromium.media.VideoCapture r0;
        com.android.org.chromium.media.VideoCapture$CaptureCapability $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        $r1 = r0.<com.android.org.chromium.media.VideoCapture: com.android.org.chromium.media.VideoCapture$CaptureCapability mCurrentCapability>;

        $i0 = $r1.<com.android.org.chromium.media.VideoCapture$CaptureCapability: int mWidth>;

        return $i0;
    }

    public int startCapture()
    {
        com.android.org.chromium.media.VideoCapture r0;
        java.lang.Throwable r1, $r8;
        boolean z0;
        android.hardware.Camera $r2, $r5, $r6;
        java.util.concurrent.locks.ReentrantLock $r3, $r4, $r7, $r9;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        $r2 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoCapture", "startCapture: camera is null");

        return -1;

     label1:
        $r3 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        z0 = r0.<com.android.org.chromium.media.VideoCapture: boolean mIsRunning>;

     label3:
        if z0 == 0 goto label4;

        $r7 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label4:
        r0.<com.android.org.chromium.media.VideoCapture: boolean mIsRunning> = 1;

     label5:
        $r4 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        $r5 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        virtualinvoke $r5.<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)>(r0);

        $r6 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        virtualinvoke $r6.<android.hardware.Camera: void startPreview()>();

        return 0;

     label6:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r1;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public int stopCapture()
    {
        com.android.org.chromium.media.VideoCapture r0;
        java.lang.Throwable r1, $r8;
        boolean z0;
        android.hardware.Camera $r2, $r5, $r6;
        java.util.concurrent.locks.ReentrantLock $r3, $r4, $r7, $r9;

        r0 := @this: com.android.org.chromium.media.VideoCapture;

        $r2 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VideoCapture", "stopCapture: camera is null");

        return 0;

     label1:
        $r3 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label2:
        z0 = r0.<com.android.org.chromium.media.VideoCapture: boolean mIsRunning>;

     label3:
        if z0 != 0 goto label4;

        $r7 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return 0;

     label4:
        r0.<com.android.org.chromium.media.VideoCapture: boolean mIsRunning> = 0;

     label5:
        $r4 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        $r5 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        virtualinvoke $r5.<android.hardware.Camera: void stopPreview()>();

        $r6 = r0.<com.android.org.chromium.media.VideoCapture: android.hardware.Camera mCamera>;

        virtualinvoke $r6.<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)>(null);

        return 0;

     label6:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = r0.<com.android.org.chromium.media.VideoCapture: java.util.concurrent.locks.ReentrantLock mPreviewBufferLock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r1;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
