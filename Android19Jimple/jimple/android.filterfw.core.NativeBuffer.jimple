public class android.filterfw.core.NativeBuffer extends java.lang.Object
{
    private android.filterfw.core.Frame mAttachedFrame;
    private long mDataPointer;
    private boolean mOwnsData;
    private int mRefCount;
    private int mSize;

    static void <clinit>()
    {
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("filterfw");

        return;
    }

    public void <init>()
    {
        android.filterfw.core.NativeBuffer r0;

        r0 := @this: android.filterfw.core.NativeBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterfw.core.NativeBuffer: long mDataPointer> = 0L;

        r0.<android.filterfw.core.NativeBuffer: int mSize> = 0;

        r0.<android.filterfw.core.NativeBuffer: boolean mOwnsData> = 0;

        r0.<android.filterfw.core.NativeBuffer: int mRefCount> = 1;

        return;
    }

    public void <init>(int)
    {
        android.filterfw.core.NativeBuffer r0;
        int i0, $i1, $i2;

        r0 := @this: android.filterfw.core.NativeBuffer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterfw.core.NativeBuffer: long mDataPointer> = 0L;

        r0.<android.filterfw.core.NativeBuffer: int mSize> = 0;

        r0.<android.filterfw.core.NativeBuffer: boolean mOwnsData> = 0;

        r0.<android.filterfw.core.NativeBuffer: int mRefCount> = 1;

        $i1 = virtualinvoke r0.<android.filterfw.core.NativeBuffer: int getElementSize()>();

        $i2 = i0 * $i1;

        specialinvoke r0.<android.filterfw.core.NativeBuffer: boolean allocate(int)>($i2);

        r0.<android.filterfw.core.NativeBuffer: boolean mOwnsData> = 1;

        return;
    }

    private native boolean allocate(int);

    private native boolean deallocate(boolean);

    private native boolean nativeCopyTo(android.filterfw.core.NativeBuffer);

    protected void assertReadable()
    {
        android.filterfw.core.NativeBuffer r0;
        long $l0;
        byte $b1;
        java.lang.NullPointerException $r1;
        int $i2;
        android.filterfw.core.Frame $r2, $r3;
        boolean $z0;

        r0 := @this: android.filterfw.core.NativeBuffer;

        $l0 = r0.<android.filterfw.core.NativeBuffer: long mDataPointer>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $i2 = r0.<android.filterfw.core.NativeBuffer: int mSize>;

        if $i2 == 0 goto label1;

        $r2 = r0.<android.filterfw.core.NativeBuffer: android.filterfw.core.Frame mAttachedFrame>;

        if $r2 == null goto label2;

        $r3 = r0.<android.filterfw.core.NativeBuffer: android.filterfw.core.Frame mAttachedFrame>;

        $z0 = virtualinvoke $r3.<android.filterfw.core.Frame: boolean hasNativeAllocation()>();

        if $z0 != 0 goto label2;

     label1:
        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Attempting to read from null data frame!");

        throw $r1;

     label2:
        return;
    }

    protected void assertWritable()
    {
        android.filterfw.core.NativeBuffer r0;
        boolean $z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.filterfw.core.NativeBuffer;

        $z0 = virtualinvoke r0.<android.filterfw.core.NativeBuffer: boolean isReadOnly()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Attempting to modify read-only native (structured) data!");

        throw $r1;

     label1:
        return;
    }

    void attachToFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.NativeBuffer r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.NativeBuffer;

        r1 := @parameter0: android.filterfw.core.Frame;

        r0.<android.filterfw.core.NativeBuffer: android.filterfw.core.Frame mAttachedFrame> = r1;

        return;
    }

    public int count()
    {
        android.filterfw.core.NativeBuffer r0;
        long $l0;
        byte $b1;
        int $i2, $i3, $i4;

        r0 := @this: android.filterfw.core.NativeBuffer;

        $l0 = r0.<android.filterfw.core.NativeBuffer: long mDataPointer>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $i2 = r0.<android.filterfw.core.NativeBuffer: int mSize>;

        $i3 = virtualinvoke r0.<android.filterfw.core.NativeBuffer: int getElementSize()>();

        $i4 = $i2 / $i3;

        return $i4;

     label1:
        return 0;
    }

    public int getElementSize()
    {
        android.filterfw.core.NativeBuffer r0;

        r0 := @this: android.filterfw.core.NativeBuffer;

        return 1;
    }

    public boolean isReadOnly()
    {
        android.filterfw.core.NativeBuffer r0;
        android.filterfw.core.Frame $r1, $r2;
        boolean $z0;

        r0 := @this: android.filterfw.core.NativeBuffer;

        $r1 = r0.<android.filterfw.core.NativeBuffer: android.filterfw.core.Frame mAttachedFrame>;

        if $r1 == null goto label1;

        $r2 = r0.<android.filterfw.core.NativeBuffer: android.filterfw.core.Frame mAttachedFrame>;

        $z0 = virtualinvoke $r2.<android.filterfw.core.Frame: boolean isReadOnly()>();

        return $z0;

     label1:
        return 0;
    }

    public android.filterfw.core.NativeBuffer mutableCopy()
    {
        android.filterfw.core.NativeBuffer r0, r2;
        java.lang.Class $r3, $r10;
        java.lang.Object $r4;
        int $i0;
        boolean $z0;
        java.lang.RuntimeException $r5, $r7;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13;
        java.lang.String $r14;

        r0 := @this: android.filterfw.core.NativeBuffer;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        r2 = (android.filterfw.core.NativeBuffer) $r4;

     label2:
        $i0 = r0.<android.filterfw.core.NativeBuffer: int mSize>;

        if $i0 <= 0 goto label4;

        $z0 = specialinvoke r0.<android.filterfw.core.NativeBuffer: boolean nativeCopyTo(android.filterfw.core.NativeBuffer)>(r2);

        if $z0 != 0 goto label4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to copy NativeBuffer to mutable instance!");

        throw $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to allocate a copy of ");

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("! Make ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sure the class has a default constructor!");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label4:
        return r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public android.filterfw.core.NativeBuffer release()
    {
        android.filterfw.core.NativeBuffer r0;
        boolean z0, z1, $z2;
        android.filterfw.core.Frame $r1, $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: android.filterfw.core.NativeBuffer;

        $r1 = r0.<android.filterfw.core.NativeBuffer: android.filterfw.core.Frame mAttachedFrame>;

        if $r1 == null goto label4;

        $r2 = r0.<android.filterfw.core.NativeBuffer: android.filterfw.core.Frame mAttachedFrame>;

        $r3 = virtualinvoke $r2.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        if $r3 != null goto label3;

        z1 = 1;

     label1:
        if z1 == 0 goto label2;

        $z2 = r0.<android.filterfw.core.NativeBuffer: boolean mOwnsData>;

        specialinvoke r0.<android.filterfw.core.NativeBuffer: boolean deallocate(boolean)>($z2);

        r0 = null;

     label2:
        return r0;

     label3:
        z1 = 0;

        goto label1;

     label4:
        z0 = r0.<android.filterfw.core.NativeBuffer: boolean mOwnsData>;

        z1 = 0;

        if z0 == 0 goto label1;

        $i0 = r0.<android.filterfw.core.NativeBuffer: int mRefCount>;

        $i1 = -1 + $i0;

        r0.<android.filterfw.core.NativeBuffer: int mRefCount> = $i1;

        $i2 = r0.<android.filterfw.core.NativeBuffer: int mRefCount>;

        if $i2 != 0 goto label6;

        z1 = 1;

     label5:
        goto label1;

     label6:
        z1 = 0;

        goto label5;
    }

    public android.filterfw.core.NativeBuffer retain()
    {
        android.filterfw.core.NativeBuffer r0;
        android.filterfw.core.Frame $r1, $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.filterfw.core.NativeBuffer;

        $r1 = r0.<android.filterfw.core.NativeBuffer: android.filterfw.core.Frame mAttachedFrame>;

        if $r1 == null goto label2;

        $r2 = r0.<android.filterfw.core.NativeBuffer: android.filterfw.core.Frame mAttachedFrame>;

        virtualinvoke $r2.<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>();

     label1:
        return r0;

     label2:
        $z0 = r0.<android.filterfw.core.NativeBuffer: boolean mOwnsData>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.filterfw.core.NativeBuffer: int mRefCount>;

        $i1 = 1 + $i0;

        r0.<android.filterfw.core.NativeBuffer: int mRefCount> = $i1;

        return r0;
    }

    public int size()
    {
        android.filterfw.core.NativeBuffer r0;
        int $i0;

        r0 := @this: android.filterfw.core.NativeBuffer;

        $i0 = r0.<android.filterfw.core.NativeBuffer: int mSize>;

        return $i0;
    }
}
