final class com.android.okhttp.HttpResponseCache$CacheRequestImpl extends java.net.CacheRequest
{
    private java.io.OutputStream body;
    private java.io.OutputStream cacheOut;
    private boolean done;
    private final com.android.okhttp.internal.DiskLruCache$Editor editor;
    final com.android.okhttp.HttpResponseCache this$0;

    public void <init>(com.android.okhttp.HttpResponseCache, com.android.okhttp.internal.DiskLruCache$Editor) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$CacheRequestImpl r0;
        com.android.okhttp.HttpResponseCache r1;
        com.android.okhttp.internal.DiskLruCache$Editor r2;
        java.io.OutputStream $r3, $r5;
        com.android.okhttp.HttpResponseCache$CacheRequestImpl$1 $r4;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheRequestImpl;

        r1 := @parameter0: com.android.okhttp.HttpResponseCache;

        r2 := @parameter1: com.android.okhttp.internal.DiskLruCache$Editor;

        r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: com.android.okhttp.HttpResponseCache this$0> = r1;

        specialinvoke r0.<java.net.CacheRequest: void <init>()>();

        r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: com.android.okhttp.internal.DiskLruCache$Editor editor> = r2;

        $r3 = virtualinvoke r2.<com.android.okhttp.internal.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>(1);

        r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: java.io.OutputStream cacheOut> = $r3;

        $r4 = new com.android.okhttp.HttpResponseCache$CacheRequestImpl$1;

        $r5 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: java.io.OutputStream cacheOut>;

        specialinvoke $r4.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: void <init>(com.android.okhttp.HttpResponseCache$CacheRequestImpl,java.io.OutputStream,com.android.okhttp.HttpResponseCache,com.android.okhttp.internal.DiskLruCache$Editor)>(r0, $r5, r1, r2);

        r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: java.io.OutputStream body> = $r4;

        return;
    }

    static boolean access$700(com.android.okhttp.HttpResponseCache$CacheRequestImpl)
    {
        com.android.okhttp.HttpResponseCache$CacheRequestImpl r0;
        boolean $z0;

        r0 := @parameter0: com.android.okhttp.HttpResponseCache$CacheRequestImpl;

        $z0 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: boolean done>;

        return $z0;
    }

    static boolean access$702(com.android.okhttp.HttpResponseCache$CacheRequestImpl, boolean)
    {
        com.android.okhttp.HttpResponseCache$CacheRequestImpl r0;
        boolean z0;

        r0 := @parameter0: com.android.okhttp.HttpResponseCache$CacheRequestImpl;

        z0 := @parameter1: boolean;

        r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: boolean done> = z0;

        return z0;
    }

    public void abort()
    {
        com.android.okhttp.HttpResponseCache$CacheRequestImpl r0;
        com.android.okhttp.HttpResponseCache r1, $r4;
        java.lang.Throwable r2, $r8;
        boolean $z0;
        java.io.OutputStream $r5;
        com.android.okhttp.internal.DiskLruCache$Editor $r6;
        java.io.IOException $r7;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheRequestImpl;

        r1 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: com.android.okhttp.HttpResponseCache this$0>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: boolean done>;

        if $z0 == 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: boolean done> = 1;

        $r4 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: com.android.okhttp.HttpResponseCache this$0>;

        staticinvoke <com.android.okhttp.HttpResponseCache: int access$908(com.android.okhttp.HttpResponseCache)>($r4);

        exitmonitor r1;

     label04:
        $r5 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: java.io.OutputStream cacheOut>;

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r5);

     label05:
        $r6 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: com.android.okhttp.internal.DiskLruCache$Editor editor>;

        virtualinvoke $r6.<com.android.okhttp.internal.DiskLruCache$Editor: void abort()>();

     label06:
        return;

     label07:
        $r7 := @caughtexception;

        return;

     label08:
        $r8 := @caughtexception;

        r2 = $r8;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public java.io.OutputStream getBody() throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$CacheRequestImpl r0;
        java.io.OutputStream $r1;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheRequestImpl;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: java.io.OutputStream body>;

        return $r1;
    }
}
