public class com.android.internal.content.NativeLibraryHelper extends java.lang.Object
{
    private static final boolean DEBUG_NATIVE;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.internal.content.NativeLibraryHelper r0;

        r0 := @this: com.android.internal.content.NativeLibraryHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int copyNativeBinariesIfNeededLI(java.io.File, java.io.File)
    {
        java.io.File r0, r1;
        java.lang.String r2, r3, $r4, $r5;
        int $i0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        r2 = <android.os.Build: java.lang.String CPU_ABI>;

        r3 = <android.os.Build: java.lang.String CPU_ABI2>;

        $r4 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r5 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $i0 = staticinvoke <com.android.internal.content.NativeLibraryHelper: int nativeCopyNativeBinaries(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, r2, r3);

        return $i0;
    }

    private static native int nativeCopyNativeBinaries(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

    private static native long nativeSumNativeBinaries(java.lang.String, java.lang.String, java.lang.String);

    public static boolean removeNativeBinariesFromDirLI(java.io.File)
    {
        java.io.File r0, $r2, $r5;
        boolean z0, z1, $z2;
        java.io.File[] r1;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.String $r6, $r8;

        r0 := @parameter0: java.io.File;

        z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        z1 = 0;

        if z0 == 0 goto label4;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        z1 = 0;

        if r1 == null goto label4;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label4;

        $r2 = r1[i0];

        $z2 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not delete native binary: ");

        $r5 = r1[i0];

        $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NativeHelper", $r8);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        z1 = 1;

        goto label2;

     label4:
        return z1;
    }

    public static boolean removeNativeBinariesLI(java.lang.String)
    {
        java.lang.String r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0);

        $z0 = staticinvoke <com.android.internal.content.NativeLibraryHelper: boolean removeNativeBinariesFromDirLI(java.io.File)>($r1);

        return $z0;
    }

    public static long sumNativeBinariesLI(java.io.File)
    {
        java.io.File r0;
        java.lang.String r1, r2, $r3;
        long $l0;

        r0 := @parameter0: java.io.File;

        r1 = <android.os.Build: java.lang.String CPU_ABI>;

        r2 = <android.os.Build: java.lang.String CPU_ABI2>;

        $r3 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $l0 = staticinvoke <com.android.internal.content.NativeLibraryHelper: long nativeSumNativeBinaries(java.lang.String,java.lang.String,java.lang.String)>($r3, r1, r2);

        return $l0;
    }

    public static void <clinit>()
    {
        <com.android.internal.content.NativeLibraryHelper: java.lang.String TAG> = "NativeHelper";

        <com.android.internal.content.NativeLibraryHelper: boolean DEBUG_NATIVE> = 0;

        return;
    }
}
