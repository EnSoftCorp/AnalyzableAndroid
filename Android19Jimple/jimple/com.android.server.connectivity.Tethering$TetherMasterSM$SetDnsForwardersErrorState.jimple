class com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState extends com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState
{
    final com.android.server.connectivity.Tethering$TetherMasterSM this$1;

    void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM r1;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState;

        r1 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: com.android.server.connectivity.Tethering$TetherMasterSM this$1> = r1;

        specialinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r1);

        return;
    }

    public void enter()
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM $r3, $r6;
        com.android.server.connectivity.Tethering $r4, $r7;
        android.os.INetworkManagementService $r5, $r8;
        java.lang.Exception $r9, $r10;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Tethering", "Error in setDnsForwarders");

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void notify(int)>(11);

     label1:
        $r3 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r4 = $r3.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r5 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r4);

        interfaceinvoke $r5.<android.os.INetworkManagementService: void stopTethering()>();

     label2:
        $r6 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r7 = $r6.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r8 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r7);

        interfaceinvoke $r8.<android.os.INetworkManagementService: void setIpForwardingEnabled(boolean)>(0);

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        return;

     label5:
        $r10 := @caughtexception;

        goto label2;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label2 to label3 with label4;
    }
}
