public class org.apache.xalan.templates.DecimalFormatProperties extends org.apache.xalan.templates.ElemTemplateElement
{
    static final long serialVersionUID;
    java.text.DecimalFormatSymbols m_dfs;
    private org.apache.xml.utils.QName m_qname;

    public void <init>(int)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        int i0;
        java.text.DecimalFormatSymbols $r1, $r2, $r3;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.DecimalFormatProperties: org.apache.xml.utils.QName m_qname> = null;

        $r1 = new java.text.DecimalFormatSymbols;

        specialinvoke $r1.<java.text.DecimalFormatSymbols: void <init>()>();

        r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs> = $r1;

        $r2 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r2.<java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>("Infinity");

        $r3 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r3.<java.text.DecimalFormatSymbols: void setNaN(java.lang.String)>("NaN");

        r0.<org.apache.xalan.templates.DecimalFormatProperties: int m_docOrderNumber> = i0;

        return;
    }

    public java.text.DecimalFormatSymbols getDecimalFormatSymbols()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        return $r1;
    }

    public char getDecimalSeparator()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        char $c0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $c0 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getDecimalSeparator()>();

        return $c0;
    }

    public char getDigit()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        char $c0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $c0 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getDigit()>();

        return $c0;
    }

    public char getGroupingSeparator()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        char $c0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $c0 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getGroupingSeparator()>();

        return $c0;
    }

    public java.lang.String getInfinity()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $r2 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: java.lang.String getInfinity()>();

        return $r2;
    }

    public char getMinusSign()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        char $c0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $c0 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getMinusSign()>();

        return $c0;
    }

    public java.lang.String getNaN()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $r2 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: java.lang.String getNaN()>();

        return $r2;
    }

    public org.apache.xml.utils.QName getName()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        org.apache.xml.utils.QName $r1, $r2, $r3;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: org.apache.xml.utils.QName m_qname>;

        if $r1 != null goto label1;

        $r3 = new org.apache.xml.utils.QName;

        specialinvoke $r3.<org.apache.xml.utils.QName: void <init>(java.lang.String)>("");

        return $r3;

     label1:
        $r2 = r0.<org.apache.xalan.templates.DecimalFormatProperties: org.apache.xml.utils.QName m_qname>;

        return $r2;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        return "decimal-format";
    }

    public char getPatternSeparator()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        char $c0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $c0 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getPatternSeparator()>();

        return $c0;
    }

    public char getPerMille()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        char $c0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $c0 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getPerMill()>();

        return $c0;
    }

    public char getPercent()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        char $c0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $c0 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getPercent()>();

        return $c0;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        return 83;
    }

    public char getZeroDigit()
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.text.DecimalFormatSymbols $r1;
        char $c0;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        $c0 = virtualinvoke $r1.<java.text.DecimalFormatSymbols: char getZeroDigit()>();

        return $c0;
    }

    public void recompose(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        org.apache.xalan.templates.StylesheetRoot r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: void recomposeDecimalFormats(org.apache.xalan.templates.DecimalFormatProperties)>(r0);

        return;
    }

    public void setDecimalSeparator(char)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        char c0;
        java.text.DecimalFormatSymbols $r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r1.<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)>(c0);

        return;
    }

    public void setDigit(char)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        char c0;
        java.text.DecimalFormatSymbols $r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r1.<java.text.DecimalFormatSymbols: void setDigit(char)>(c0);

        return;
    }

    public void setGroupingSeparator(char)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        char c0;
        java.text.DecimalFormatSymbols $r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r1.<java.text.DecimalFormatSymbols: void setGroupingSeparator(char)>(c0);

        return;
    }

    public void setInfinity(java.lang.String)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.lang.String r1;
        java.text.DecimalFormatSymbols $r2;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r2.<java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)>(r1);

        return;
    }

    public void setMinusSign(char)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        char c0;
        java.text.DecimalFormatSymbols $r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r1.<java.text.DecimalFormatSymbols: void setMinusSign(char)>(c0);

        return;
    }

    public void setNaN(java.lang.String)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        java.lang.String r1;
        java.text.DecimalFormatSymbols $r2;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r2.<java.text.DecimalFormatSymbols: void setNaN(java.lang.String)>(r1);

        return;
    }

    public void setName(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        org.apache.xml.utils.QName r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r0.<org.apache.xalan.templates.DecimalFormatProperties: org.apache.xml.utils.QName m_qname> = r1;

        return;
    }

    public void setPatternSeparator(char)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        char c0;
        java.text.DecimalFormatSymbols $r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r1.<java.text.DecimalFormatSymbols: void setPatternSeparator(char)>(c0);

        return;
    }

    public void setPerMille(char)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        char c0;
        java.text.DecimalFormatSymbols $r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r1.<java.text.DecimalFormatSymbols: void setPerMill(char)>(c0);

        return;
    }

    public void setPercent(char)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        char c0;
        java.text.DecimalFormatSymbols $r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r1.<java.text.DecimalFormatSymbols: void setPercent(char)>(c0);

        return;
    }

    public void setZeroDigit(char)
    {
        org.apache.xalan.templates.DecimalFormatProperties r0;
        char c0;
        java.text.DecimalFormatSymbols $r1;

        r0 := @this: org.apache.xalan.templates.DecimalFormatProperties;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols m_dfs>;

        virtualinvoke $r1.<java.text.DecimalFormatSymbols: void setZeroDigit(char)>(c0);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.DecimalFormatProperties: long serialVersionUID> = -6559409339256269446L;

        return;
    }
}
