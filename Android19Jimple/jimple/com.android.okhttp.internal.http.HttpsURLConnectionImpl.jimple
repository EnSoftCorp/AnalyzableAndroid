public final class com.android.okhttp.internal.http.HttpsURLConnectionImpl extends javax.net.ssl.HttpsURLConnection
{
    private final com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate;

    public void <init>(java.net.URL, com.android.okhttp.OkHttpClient)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.net.URL r1;
        com.android.okhttp.OkHttpClient r2;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: com.android.okhttp.OkHttpClient;

        specialinvoke r0.<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>(r1);

        $r3 = new com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate;

        specialinvoke $r3.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void <init>(com.android.okhttp.internal.http.HttpsURLConnectionImpl,java.net.URL,com.android.okhttp.OkHttpClient,com.android.okhttp.internal.http.HttpsURLConnectionImpl$1)>(r0, r1, r2, null);

        r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate> = $r3;

        return;
    }

    private javax.net.ssl.SSLSocket getSslSocket()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1, $r4, $r6, $r8;
        com.android.okhttp.internal.http.HttpEngine $r2, $r5, $r7, $r9;
        java.lang.IllegalStateException $r3;
        boolean $z0, $z1;
        com.android.okhttp.internal.http.HttpsEngine $r10;
        javax.net.ssl.SSLSocket $r11;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r5 = $r4.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $z0 = $r5.<com.android.okhttp.internal.http.HttpEngine: boolean connected>;

        if $z0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Connection has not yet been established");

        throw $r3;

     label2:
        $r6 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r7 = $r6.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $z1 = $r7 instanceof com.android.okhttp.internal.http.HttpsEngine;

        if $z1 == 0 goto label3;

        $r8 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r9 = $r8.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r10 = (com.android.okhttp.internal.http.HttpsEngine) $r9;

        $r11 = virtualinvoke $r10.<com.android.okhttp.internal.http.HttpsEngine: javax.net.ssl.SSLSocket getSslSocket()>();

        return $r11;

     label3:
        return null;
    }

    public void addRequestProperty(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.lang.String r1, r2;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r3.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void addRequestProperty(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void connect() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: boolean connected> = 1;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void connect()>();

        return;
    }

    public void disconnect()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void disconnect()>();

        return;
    }

    public boolean getAllowUserInteraction()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $z0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: boolean getAllowUserInteraction()>();

        return $z0;
    }

    public java.lang.String getCipherSuite()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.net.SecureCacheResponse r1;
        javax.net.ssl.SSLSocket r2;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r3;
        javax.net.ssl.SSLSession $r4;
        java.lang.String $r5, $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r3 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        r1 = virtualinvoke $r3.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.net.SecureCacheResponse getSecureCacheResponse()>();

        if r1 == null goto label1;

        $r6 = virtualinvoke r1.<java.net.SecureCacheResponse: java.lang.String getCipherSuite()>();

        return $r6;

     label1:
        r2 = specialinvoke r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: javax.net.ssl.SSLSocket getSslSocket()>();

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $r5 = interfaceinvoke $r4.<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>();

        return $r5;

     label2:
        return null;
    }

    public int getConnectTimeout()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: int getConnectTimeout()>();

        return $i0;
    }

    public java.lang.Object getContent() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.lang.Object $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.Object getContent()>();

        return $r2;
    }

    public java.lang.Object getContent(java.lang.Class[]) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.lang.Class[] r1;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: java.lang.Class[];

        $r2 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.Object getContent(java.lang.Class[])>(r1);

        return $r3;
    }

    public java.lang.String getContentEncoding()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.String getContentEncoding()>();

        return $r2;
    }

    public int getContentLength()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: int getContentLength()>();

        return $i0;
    }

    public java.lang.String getContentType()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.String getContentType()>();

        return $r2;
    }

    public long getDate()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        long $l0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $l0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: long getDate()>();

        return $l0;
    }

    public boolean getDefaultUseCaches()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $z0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: boolean getDefaultUseCaches()>();

        return $z0;
    }

    public boolean getDoInput()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $z0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: boolean getDoInput()>();

        return $z0;
    }

    public boolean getDoOutput()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $z0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: boolean getDoOutput()>();

        return $z0;
    }

    public java.io.InputStream getErrorStream()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.io.InputStream $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.io.InputStream getErrorStream()>();

        return $r2;
    }

    public long getExpiration()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        long $l0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $l0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: long getExpiration()>();

        return $l0;
    }

    public java.lang.String getHeaderField(int)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        int i0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.String getHeaderField(int)>(i0);

        return $r2;
    }

    public java.lang.String getHeaderField(java.lang.String)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.lang.String r1, $r3;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.String getHeaderField(java.lang.String)>(r1);

        return $r3;
    }

    public long getHeaderFieldDate(java.lang.String, long)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.lang.String r1;
        long l0, $l1;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $l1 = virtualinvoke $r2.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: long getHeaderFieldDate(java.lang.String,long)>(r1, l0);

        return $l1;
    }

    public int getHeaderFieldInt(java.lang.String, int)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.lang.String r1;
        int i0, $i1;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $i1 = virtualinvoke $r2.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: int getHeaderFieldInt(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public java.lang.String getHeaderFieldKey(int)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        int i0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.String getHeaderFieldKey(int)>(i0);

        return $r2;
    }

    public java.util.Map getHeaderFields()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.util.Map $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.util.Map getHeaderFields()>();

        return $r2;
    }

    public javax.net.ssl.HostnameVerifier getHostnameVerifier()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        com.android.okhttp.OkHttpClient $r2;
        javax.net.ssl.HostnameVerifier $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: com.android.okhttp.OkHttpClient client>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier getHostnameVerifier()>();

        return $r3;
    }

    public com.android.okhttp.internal.http.HttpEngine getHttpEngine()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        com.android.okhttp.internal.http.HttpEngine $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: com.android.okhttp.internal.http.HttpEngine getHttpEngine()>();

        return $r2;
    }

    public long getIfModifiedSince()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        long $l0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $l0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: long getIfModifiedSince()>();

        return $l0;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.io.InputStream $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.io.InputStream getInputStream()>();

        return $r2;
    }

    public boolean getInstanceFollowRedirects()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $z0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: boolean getInstanceFollowRedirects()>();

        return $z0;
    }

    public long getLastModified()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        long $l0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $l0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: long getLastModified()>();

        return $l0;
    }

    public java.security.cert.Certificate[] getLocalCertificates()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.net.SecureCacheResponse r1;
        javax.net.ssl.SSLSocket r2;
        java.security.cert.Certificate[] r3, $r7, $r8;
        java.util.List r4;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r5;
        javax.net.ssl.SSLSession $r6;
        int $i0;
        java.lang.Object[] $r9;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r5 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        r1 = virtualinvoke $r5.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.net.SecureCacheResponse getSecureCacheResponse()>();

        if r1 == null goto label2;

        r4 = virtualinvoke r1.<java.net.SecureCacheResponse: java.util.List getLocalCertificateChain()>();

        r3 = null;

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $r8 = newarray (java.security.cert.Certificate)[$i0];

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r3 = (java.security.cert.Certificate[]) $r9;

     label1:
        return r3;

     label2:
        r2 = specialinvoke r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: javax.net.ssl.SSLSocket getSslSocket()>();

        r3 = null;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $r7 = interfaceinvoke $r6.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getLocalCertificates()>();

        return $r7;
    }

    public java.security.Principal getLocalPrincipal()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.net.SecureCacheResponse r1;
        javax.net.ssl.SSLSocket r2;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r3;
        javax.net.ssl.SSLSession $r4;
        java.security.Principal $r5, $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r3 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        r1 = virtualinvoke $r3.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.net.SecureCacheResponse getSecureCacheResponse()>();

        if r1 == null goto label1;

        $r6 = virtualinvoke r1.<java.net.SecureCacheResponse: java.security.Principal getLocalPrincipal()>();

        return $r6;

     label1:
        r2 = specialinvoke r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: javax.net.ssl.SSLSocket getSslSocket()>();

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $r5 = interfaceinvoke $r4.<javax.net.ssl.SSLSession: java.security.Principal getLocalPrincipal()>();

        return $r5;

     label2:
        return null;
    }

    public java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.io.OutputStream $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.io.OutputStream getOutputStream()>();

        return $r2;
    }

    public java.security.Principal getPeerPrincipal() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.net.SecureCacheResponse r1;
        javax.net.ssl.SSLSocket r2;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r3;
        javax.net.ssl.SSLSession $r4;
        java.security.Principal $r5, $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r3 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        r1 = virtualinvoke $r3.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.net.SecureCacheResponse getSecureCacheResponse()>();

        if r1 == null goto label1;

        $r6 = virtualinvoke r1.<java.net.SecureCacheResponse: java.security.Principal getPeerPrincipal()>();

        return $r6;

     label1:
        r2 = specialinvoke r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: javax.net.ssl.SSLSocket getSslSocket()>();

        if r2 == null goto label2;

        $r4 = virtualinvoke r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $r5 = interfaceinvoke $r4.<javax.net.ssl.SSLSession: java.security.Principal getPeerPrincipal()>();

        return $r5;

     label2:
        return null;
    }

    public java.security.Permission getPermission() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.security.Permission $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.security.Permission getPermission()>();

        return $r2;
    }

    public int getReadTimeout()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: int getReadTimeout()>();

        return $i0;
    }

    public java.lang.String getRequestMethod()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.String getRequestMethod()>();

        return $r2;
    }

    public java.util.Map getRequestProperties()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.util.Map $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.util.Map getRequestProperties()>();

        return $r2;
    }

    public java.lang.String getRequestProperty(java.lang.String)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.lang.String r1, $r3;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.String getRequestProperty(java.lang.String)>(r1);

        return $r3;
    }

    public int getResponseCode() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: int getResponseCode()>();

        return $i0;
    }

    public java.lang.String getResponseMessage() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.String getResponseMessage()>();

        return $r2;
    }

    public javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        com.android.okhttp.OkHttpClient $r2;
        javax.net.ssl.SSLSocketFactory $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: com.android.okhttp.OkHttpClient client>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>();

        return $r3;
    }

    public java.security.cert.Certificate[] getServerCertificates() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.net.SecureCacheResponse r1;
        javax.net.ssl.SSLSocket r2;
        java.security.cert.Certificate[] r3, $r7, $r8;
        java.util.List r4;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r5;
        javax.net.ssl.SSLSession $r6;
        int $i0;
        java.lang.Object[] $r9;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r5 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        r1 = virtualinvoke $r5.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.net.SecureCacheResponse getSecureCacheResponse()>();

        if r1 == null goto label2;

        r4 = virtualinvoke r1.<java.net.SecureCacheResponse: java.util.List getServerCertificateChain()>();

        r3 = null;

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        $r8 = newarray (java.security.cert.Certificate)[$i0];

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r3 = (java.security.cert.Certificate[]) $r9;

     label1:
        return r3;

     label2:
        r2 = specialinvoke r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: javax.net.ssl.SSLSocket getSslSocket()>();

        r3 = null;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<javax.net.ssl.SSLSocket: javax.net.ssl.SSLSession getSession()>();

        $r7 = interfaceinvoke $r6.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

        return $r7;
    }

    public java.net.URL getURL()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.net.URL $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.net.URL getURL()>();

        return $r2;
    }

    public boolean getUseCaches()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $z0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: boolean getUseCaches()>();

        return $z0;
    }

    public void setAllowUserInteraction(boolean)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        boolean z0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setAllowUserInteraction(boolean)>(z0);

        return;
    }

    public void setChunkedStreamingMode(int)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        int i0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setChunkedStreamingMode(int)>(i0);

        return;
    }

    public void setConnectTimeout(int)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        int i0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setConnectTimeout(int)>(i0);

        return;
    }

    public void setDefaultUseCaches(boolean)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        boolean z0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setDefaultUseCaches(boolean)>(z0);

        return;
    }

    public void setDoInput(boolean)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        boolean z0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setDoInput(boolean)>(z0);

        return;
    }

    public void setDoOutput(boolean)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        boolean z0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setDoOutput(boolean)>(z0);

        return;
    }

    public void setFixedLengthStreamingMode(int)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        int i0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setFixedLengthStreamingMode(int)>(i0);

        return;
    }

    public void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        javax.net.ssl.HostnameVerifier r1;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r2;
        com.android.okhttp.OkHttpClient $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: javax.net.ssl.HostnameVerifier;

        $r2 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r3 = $r2.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: com.android.okhttp.OkHttpClient client>;

        virtualinvoke $r3.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier)>(r1);

        return;
    }

    public void setIfModifiedSince(long)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        long l0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setIfModifiedSince(long)>(l0);

        return;
    }

    public void setInstanceFollowRedirects(boolean)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        boolean z0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setInstanceFollowRedirects(boolean)>(z0);

        return;
    }

    public void setReadTimeout(int)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        int i0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setReadTimeout(int)>(i0);

        return;
    }

    public void setRequestMethod(java.lang.String) throws java.net.ProtocolException
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.lang.String r1;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r2.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setRequestMethod(java.lang.String)>(r1);

        return;
    }

    public void setRequestProperty(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        java.lang.String r1, r2;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r3.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setRequestProperty(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        javax.net.ssl.SSLSocketFactory r1;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r2;
        com.android.okhttp.OkHttpClient $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        $r2 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r3 = $r2.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: com.android.okhttp.OkHttpClient client>;

        virtualinvoke $r3.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory)>(r1);

        return;
    }

    public void setUseCaches(boolean)
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        boolean z0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: void setUseCaches(boolean)>(z0);

        return;
    }

    public java.lang.String toString()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: java.lang.String toString()>();

        return $r2;
    }

    public boolean usingProxy()
    {
        com.android.okhttp.internal.http.HttpsURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpsURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpsURLConnectionImpl: com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate delegate>;

        $z0 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpsURLConnectionImpl$HttpUrlConnectionDelegate: boolean usingProxy()>();

        return $z0;
    }
}
