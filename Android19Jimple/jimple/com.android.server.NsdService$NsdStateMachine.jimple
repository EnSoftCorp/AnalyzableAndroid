class com.android.server.NsdService$NsdStateMachine extends com.android.internal.util.StateMachine
{
    private final com.android.server.NsdService$NsdStateMachine$DefaultState mDefaultState;
    private final com.android.server.NsdService$NsdStateMachine$DisabledState mDisabledState;
    private final com.android.server.NsdService$NsdStateMachine$EnabledState mEnabledState;
    final com.android.server.NsdService this$0;

    void <init>(com.android.server.NsdService, java.lang.String)
    {
        com.android.server.NsdService$NsdStateMachine r0;
        com.android.server.NsdService r1;
        java.lang.String r2;
        com.android.server.NsdService$NsdStateMachine$DefaultState $r3, $r6, $r7, $r9;
        com.android.server.NsdService$NsdStateMachine$DisabledState $r4, $r8, $r11;
        com.android.server.NsdService$NsdStateMachine$EnabledState $r5, $r10, $r12;
        boolean $z0;

        r0 := @this: com.android.server.NsdService$NsdStateMachine;

        r1 := @parameter0: com.android.server.NsdService;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService this$0> = r1;

        specialinvoke r0.<com.android.internal.util.StateMachine: void <init>(java.lang.String)>(r2);

        $r3 = new com.android.server.NsdService$NsdStateMachine$DefaultState;

        specialinvoke $r3.<com.android.server.NsdService$NsdStateMachine$DefaultState: void <init>(com.android.server.NsdService$NsdStateMachine)>(r0);

        r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DefaultState mDefaultState> = $r3;

        $r4 = new com.android.server.NsdService$NsdStateMachine$DisabledState;

        specialinvoke $r4.<com.android.server.NsdService$NsdStateMachine$DisabledState: void <init>(com.android.server.NsdService$NsdStateMachine)>(r0);

        r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DisabledState mDisabledState> = $r4;

        $r5 = new com.android.server.NsdService$NsdStateMachine$EnabledState;

        specialinvoke $r5.<com.android.server.NsdService$NsdStateMachine$EnabledState: void <init>(com.android.server.NsdService$NsdStateMachine)>(r0);

        r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$EnabledState mEnabledState> = $r5;

        $r6 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DefaultState mDefaultState>;

        virtualinvoke r0.<com.android.server.NsdService$NsdStateMachine: void addState(com.android.internal.util.State)>($r6);

        $r8 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DisabledState mDisabledState>;

        $r7 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DefaultState mDefaultState>;

        virtualinvoke r0.<com.android.server.NsdService$NsdStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r8, $r7);

        $r10 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$EnabledState mEnabledState>;

        $r9 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DefaultState mDefaultState>;

        virtualinvoke r0.<com.android.server.NsdService$NsdStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r10, $r9);

        $z0 = staticinvoke <com.android.server.NsdService: boolean access$100(com.android.server.NsdService)>(r1);

        if $z0 == 0 goto label2;

        $r12 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$EnabledState mEnabledState>;

        virtualinvoke r0.<com.android.server.NsdService$NsdStateMachine: void setInitialState(com.android.internal.util.State)>($r12);

     label1:
        virtualinvoke r0.<com.android.server.NsdService$NsdStateMachine: void setLogRecSize(int)>(25);

        specialinvoke r0.<com.android.server.NsdService$NsdStateMachine: void registerForNsdSetting()>();

        return;

     label2:
        $r11 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DisabledState mDisabledState>;

        virtualinvoke r0.<com.android.server.NsdService$NsdStateMachine: void setInitialState(com.android.internal.util.State)>($r11);

        goto label1;
    }

    static com.android.server.NsdService$NsdStateMachine$DisabledState access$1400(com.android.server.NsdService$NsdStateMachine)
    {
        com.android.server.NsdService$NsdStateMachine r0;
        com.android.server.NsdService$NsdStateMachine$DisabledState $r1;

        r0 := @parameter0: com.android.server.NsdService$NsdStateMachine;

        $r1 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$DisabledState mDisabledState>;

        return $r1;
    }

    static void access$1500(com.android.server.NsdService$NsdStateMachine, com.android.internal.util.IState)
    {
        com.android.server.NsdService$NsdStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.NsdService$NsdStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.NsdService$NsdStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.server.NsdService$NsdStateMachine$EnabledState access$800(com.android.server.NsdService$NsdStateMachine)
    {
        com.android.server.NsdService$NsdStateMachine r0;
        com.android.server.NsdService$NsdStateMachine$EnabledState $r1;

        r0 := @parameter0: com.android.server.NsdService$NsdStateMachine;

        $r1 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService$NsdStateMachine$EnabledState mEnabledState>;

        return $r1;
    }

    static void access$900(com.android.server.NsdService$NsdStateMachine, com.android.internal.util.IState)
    {
        com.android.server.NsdService$NsdStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.NsdService$NsdStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.NsdService$NsdStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    private void registerForNsdSetting()
    {
        com.android.server.NsdService$NsdStateMachine r0;
        com.android.server.NsdService$NsdStateMachine$1 r1, $r2;
        android.os.Handler $r3;
        com.android.server.NsdService $r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        android.net.Uri $r7;

        r0 := @this: com.android.server.NsdService$NsdStateMachine;

        $r2 = new com.android.server.NsdService$NsdStateMachine$1;

        $r3 = virtualinvoke r0.<com.android.server.NsdService$NsdStateMachine: android.os.Handler getHandler()>();

        specialinvoke $r2.<com.android.server.NsdService$NsdStateMachine$1: void <init>(com.android.server.NsdService$NsdStateMachine,android.os.Handler)>(r0, $r3);

        r1 = $r2;

        $r4 = r0.<com.android.server.NsdService$NsdStateMachine: com.android.server.NsdService this$0>;

        $r5 = staticinvoke <com.android.server.NsdService: android.content.Context access$300(com.android.server.NsdService)>($r4);

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("nsd_on");

        virtualinvoke $r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r7, 0, r1);

        return;
    }

    protected java.lang.String getWhatToString(int)
    {
        com.android.server.NsdService$NsdStateMachine r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: com.android.server.NsdService$NsdStateMachine;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.server.NsdService: java.lang.String access$000(int)>(i0);

        return $r1;
    }
}
