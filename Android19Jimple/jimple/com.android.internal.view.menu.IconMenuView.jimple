public final class com.android.internal.view.menu.IconMenuView extends android.view.ViewGroup implements com.android.internal.view.menu.MenuBuilder$ItemInvoker, com.android.internal.view.menu.MenuView, java.lang.Runnable
{
    private static final int ITEM_CAPTION_CYCLE_DELAY;
    private int mAnimations;
    private boolean mHasStaleChildren;
    private android.graphics.drawable.Drawable mHorizontalDivider;
    private int mHorizontalDividerHeight;
    private java.util.ArrayList mHorizontalDividerRects;
    private android.graphics.drawable.Drawable mItemBackground;
    private boolean mLastChildrenCaptionMode;
    private int[] mLayout;
    private int mLayoutNumRows;
    private int mMaxItems;
    private int mMaxItemsPerRow;
    private int mMaxRows;
    private com.android.internal.view.menu.MenuBuilder mMenu;
    private boolean mMenuBeingLongpressed;
    private android.graphics.drawable.Drawable mMoreIcon;
    private int mNumActualItemsShown;
    private int mRowHeight;
    private android.graphics.drawable.Drawable mVerticalDivider;
    private java.util.ArrayList mVerticalDividerRects;
    private int mVerticalDividerWidth;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3, r4;
        int[] $r5, $r7, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.drawable.Drawable $r6, $r8, $r9, $r10, $r13, $r14, $r16, $r17;
        java.util.ArrayList $r11, $r12;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed> = 0;

        $r5 = <com.android.internal.R$styleable: int[] IconMenuView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, 0, 0);

        $i0 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 64);

        r0.<com.android.internal.view.menu.IconMenuView: int mRowHeight> = $i0;

        $i1 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(1, 2);

        r0.<com.android.internal.view.menu.IconMenuView: int mMaxRows> = $i1;

        $i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(4, 6);

        r0.<com.android.internal.view.menu.IconMenuView: int mMaxItems> = $i2;

        $i3 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(2, 3);

        r0.<com.android.internal.view.menu.IconMenuView: int mMaxItemsPerRow> = $i3;

        $r6 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(3);

        r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mMoreIcon> = $r6;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $r7 = <com.android.internal.R$styleable: int[] MenuView>;

        r4 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r7, 0, 0);

        $r8 = virtualinvoke r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(5);

        r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mItemBackground> = $r8;

        $r9 = virtualinvoke r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider> = $r9;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mHorizontalDividerRects> = $r11;

        $r10 = virtualinvoke r4.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(3);

        r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider> = $r10;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mVerticalDividerRects> = $r12;

        $i4 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        r0.<com.android.internal.view.menu.IconMenuView: int mAnimations> = $i4;

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r14 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        if $r14 == null goto label1;

        $r17 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        $i9 = virtualinvoke $r17.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight> = $i9;

        $i8 = r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        if $i8 != -1 goto label1;

        r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight> = 1;

     label1:
        $r13 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        if $r13 == null goto label2;

        $r16 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        $i6 = virtualinvoke $r16.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth> = $i6;

        $i7 = r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth>;

        if $i7 != -1 goto label2;

        r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth> = 1;

     label2:
        $i5 = r0.<com.android.internal.view.menu.IconMenuView: int mMaxRows>;

        $r15 = newarray (int)[$i5];

        r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout> = $r15;

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: void setDescendantFocusability(int)>(262144);

        return;
    }

    static com.android.internal.view.menu.MenuBuilder access$000(com.android.internal.view.menu.IconMenuView)
    {
        com.android.internal.view.menu.IconMenuView r0;
        com.android.internal.view.menu.MenuBuilder $r1;

        r0 := @parameter0: com.android.internal.view.menu.IconMenuView;

        $r1 = r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.MenuBuilder mMenu>;

        return $r1;
    }

    private void calculateItemFittingMetadata(int)
    {
        com.android.internal.view.menu.IconMenuView r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        com.android.internal.view.menu.IconMenuView$LayoutParams r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        i0 := @parameter0: int;

        i1 = r0.<com.android.internal.view.menu.IconMenuView: int mMaxItemsPerRow>;

        i2 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label5;

        $r2 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.view.View getChildAt(int)>(i3);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (com.android.internal.view.menu.IconMenuView$LayoutParams) $r3;

        r1.<com.android.internal.view.menu.IconMenuView$LayoutParams: int maxNumItemsOnRow> = 1;

        i4 = i1;

     label2:
        if i4 <= 0 goto label3;

        $i6 = r1.<com.android.internal.view.menu.IconMenuView$LayoutParams: int desiredWidth>;

        $i5 = i0 / i4;

        if $i6 >= $i5 goto label4;

        r1.<com.android.internal.view.menu.IconMenuView$LayoutParams: int maxNumItemsOnRow> = i4;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        i4 = i4 + -1;

        goto label2;

     label5:
        return;
    }

    private boolean doItemsFit()
    {
        com.android.internal.view.menu.IconMenuView r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, i8;
        int[] r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r4;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        z0 = 1;

        i0 = 0;

        r1 = r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout>;

        i1 = r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows>;

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        i3 = r1[i2];

        i8 = (int) 1;

        if i3 != i8 goto label3;

        i0 = i0 + 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        i4 = i3;

        i5 = i0;

     label4:
        if i4 <= 0 goto label7;

        i6 = i5 + 1;

        $r2 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.view.View getChildAt(int)>(i5);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r4 = (com.android.internal.view.menu.IconMenuView$LayoutParams) $r3;

        $i7 = $r4.<com.android.internal.view.menu.IconMenuView$LayoutParams: int maxNumItemsOnRow>;

        if $i7 >= i3 goto label6;

        z0 = 0;

     label5:
        return z0;

     label6:
        i4 = i4 + -1;

        i5 = i6;

        goto label4;

     label7:
        i0 = i5;

        goto label2;
    }

    private void layoutItems(int)
    {
        com.android.internal.view.menu.IconMenuView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        float $f0, $f1, $f2;
        double $d0, $d1;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: int getChildCount()>();

        if i1 != 0 goto label2;

        r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows> = 0;

     label1:
        return;

     label2:
        $f1 = (float) i1;

        $i3 = r0.<com.android.internal.view.menu.IconMenuView: int mMaxItemsPerRow>;

        $f0 = (float) $i3;

        $f2 = $f1 / $f0;

        $d0 = (double) $f2;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i5 = (int) $d1;

        $i4 = r0.<com.android.internal.view.menu.IconMenuView: int mMaxRows>;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

     label3:
        $i6 = r0.<com.android.internal.view.menu.IconMenuView: int mMaxRows>;

        if i2 > $i6 goto label1;

        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void layoutItemsUsingGravity(int,int)>(i2, i1);

        if i2 >= i1 goto label1;

        $z0 = specialinvoke r0.<com.android.internal.view.menu.IconMenuView: boolean doItemsFit()>();

        if $z0 != 0 goto label1;

        i2 = i2 + 1;

        goto label3;
    }

    private void layoutItemsUsingGravity(int, int)
    {
        com.android.internal.view.menu.IconMenuView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        int[] r1;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i1 / i0;

        $i5 = i1 % i0;

        i3 = i0 - $i5;

        r1 = r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout>;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        r1[i4] = i2;

        if i4 < i3 goto label2;

        $i6 = r1[i4];

        $i7 = 1 + $i6;

        r1[i4] = $i7;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows> = i0;

        return;
    }

    private void positionChildren(int, int)
    {
        com.android.internal.view.menu.IconMenuView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        int[] r1;
        com.android.internal.view.menu.IconMenuView$LayoutParams r2;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        java.util.ArrayList r3, $r13, $r14, $r15;
        android.graphics.Rect r4, $r9, $r12;
        android.view.View r5;
        android.graphics.drawable.Drawable $r6, $r7, $r8, $r11;
        android.view.ViewGroup$LayoutParams $r10;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r6 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        if $r6 == null goto label1;

        $r15 = r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mHorizontalDividerRects>;

        virtualinvoke $r15.<java.util.ArrayList: void clear()>();

     label1:
        $r7 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        if $r7 == null goto label2;

        $r14 = r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mVerticalDividerRects>;

        virtualinvoke $r14.<java.util.ArrayList: void clear()>();

     label2:
        i2 = r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows>;

        i3 = i2 - 1;

        r1 = r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout>;

        i4 = 0;

        r2 = null;

        f0 = 0.0F;

        $i9 = r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $i7 = i2 - 1;

        $i8 = $i9 * $i7;

        $i10 = i1 - $i8;

        $f6 = (float) $i10;

        $f5 = (float) i2;

        f1 = $f6 / $f5;

        i5 = 0;

     label3:
        if i5 >= i2 goto label9;

        f2 = 0.0F;

        $i12 = r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth>;

        $i11 = r1[i5];

        $i13 = -1 + $i11;

        $i15 = $i12 * $i13;

        $i14 = i0 - $i15;

        $f7 = (float) $i14;

        $i17 = r1[i5];

        $f8 = (float) $i17;

        f3 = $f7 / $f8;

        i6 = 0;

     label4:
        $i16 = r1[i5];

        if i6 >= $i16 goto label6;

        r5 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.view.View getChildAt(int)>(i4);

        $i21 = (int) f3;

        $i25 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i21, 1073741824);

        $i24 = (int) f1;

        $i23 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i24, 1073741824);

        virtualinvoke r5.<android.view.View: void measure(int,int)>($i25, $i23);

        $r10 = virtualinvoke r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.view.menu.IconMenuView$LayoutParams) $r10;

        $i28 = (int) f2;

        r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: int left> = $i28;

        $f12 = f2 + f3;

        $i27 = (int) $f12;

        r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: int right> = $i27;

        $i26 = (int) f0;

        r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: int top> = $i26;

        $f13 = f0 + f1;

        $i30 = (int) $f13;

        r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: int bottom> = $i30;

        f4 = f2 + f3;

        i4 = i4 + 1;

        $r11 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        if $r11 == null goto label5;

        $r13 = r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mVerticalDividerRects>;

        $r12 = new android.graphics.Rect;

        $i33 = (int) f4;

        $i32 = (int) f0;

        $i31 = r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth>;

        $f14 = (float) $i31;

        $f16 = f4 + $f14;

        $i35 = (int) $f16;

        $f17 = f0 + f1;

        $i34 = (int) $f17;

        specialinvoke $r12.<android.graphics.Rect: void <init>(int,int,int,int)>($i33, $i32, $i35, $i34);

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label5:
        $i29 = r0.<com.android.internal.view.menu.IconMenuView: int mVerticalDividerWidth>;

        $f15 = (float) $i29;

        f2 = f4 + $f15;

        i6 = i6 + 1;

        goto label4;

     label6:
        if r2 == null goto label7;

        r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: int right> = i0;

     label7:
        f0 = f0 + f1;

        $r8 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        if $r8 == null goto label8;

        if i5 >= i3 goto label8;

        r3 = r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mHorizontalDividerRects>;

        $r9 = new android.graphics.Rect;

        $i19 = (int) f0;

        $i18 = r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $f9 = (float) $i18;

        $f10 = f0 + $f9;

        $i20 = (int) $f10;

        specialinvoke $r9.<android.graphics.Rect: void <init>(int,int,int,int)>(0, $i19, i0, $i20);

        r4 = $r9;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $i22 = r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $f11 = (float) $i22;

        f0 = f0 + $f11;

     label8:
        i5 = i5 + 1;

        goto label3;

     label9:
        return;
    }

    private void setChildrenCaptionMode(boolean)
    {
        com.android.internal.view.menu.IconMenuView r0;
        boolean z0;
        int i0, $i1;
        android.view.View $r1;
        com.android.internal.view.menu.IconMenuItemView $r2;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.view.menu.IconMenuView: boolean mLastChildrenCaptionMode> = z0;

        $i1 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: int getChildCount()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r1 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.view.View getChildAt(int)>(i0);

        $r2 = (com.android.internal.view.menu.IconMenuItemView) $r1;

        virtualinvoke $r2.<com.android.internal.view.menu.IconMenuItemView: void setCaptionMode(boolean)>(z0);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    private void setCycleShortcutCaptionMode(boolean)
    {
        com.android.internal.view.menu.IconMenuView r0;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: boolean removeCallbacks(java.lang.Runnable)>(r0);

        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void setChildrenCaptionMode(boolean)>(0);

        r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed> = 0;

        return;

     label1:
        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void setChildrenCaptionMode(boolean)>(1);

        return;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof com.android.internal.view.menu.IconMenuView$LayoutParams;

        return $z0;
    }

    com.android.internal.view.menu.IconMenuItemView createMoreItemView()
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.content.Context r1;
        com.android.internal.view.menu.IconMenuItemView r2;
        android.view.LayoutInflater $r3;
        android.view.View $r4;
        android.content.res.Resources $r5;
        java.lang.CharSequence $r6;
        android.graphics.drawable.Drawable $r7;
        com.android.internal.view.menu.IconMenuView$1 $r8;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.content.Context getContext()>();

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367113, null);

        r2 = (com.android.internal.view.menu.IconMenuItemView) $r4;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.CharSequence getText(int)>(17040322);

        $r7 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mMoreIcon>;

        virtualinvoke r2.<com.android.internal.view.menu.IconMenuItemView: void initialize(java.lang.CharSequence,android.graphics.drawable.Drawable)>($r6, $r7);

        $r8 = new com.android.internal.view.menu.IconMenuView$1;

        specialinvoke $r8.<com.android.internal.view.menu.IconMenuView$1: void <init>(com.android.internal.view.menu.IconMenuView)>(r0);

        virtualinvoke r2.<com.android.internal.view.menu.IconMenuItemView: void setOnClickListener(android.view.View$OnClickListener)>($r8);

        return r2;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.view.KeyEvent r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        long $l5;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 82 goto label1;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label2;

        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label2;

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: boolean removeCallbacks(java.lang.Runnable)>(r0);

        $i4 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l5 = (long) $i4;

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: boolean postDelayed(java.lang.Runnable,long)>(r0, $l5);

     label1:
        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z0;

     label2:
        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i2 != 1 goto label1;

        $z1 = r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void setCycleShortcutCaptionMode(boolean)>(0);

        return 1;

     label3:
        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: boolean removeCallbacks(java.lang.Runnable)>(r0);

        goto label1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.util.AttributeSet r1;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r2;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    public com.android.internal.view.menu.IconMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.util.AttributeSet r1;
        com.android.internal.view.menu.IconMenuView$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new com.android.internal.view.menu.IconMenuView$LayoutParams;

        $r3 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.content.Context getContext()>();

        specialinvoke $r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    android.graphics.drawable.Drawable getItemBackgroundDrawable()
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.graphics.drawable.Drawable $r1, $r5;
        android.graphics.drawable.Drawable$ConstantState $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mItemBackground>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $r3 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r2.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r4);

        return $r5;
    }

    public int[] getLayout()
    {
        com.android.internal.view.menu.IconMenuView r0;
        int[] $r1;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        $r1 = r0.<com.android.internal.view.menu.IconMenuView: int[] mLayout>;

        return $r1;
    }

    public int getLayoutNumRows()
    {
        com.android.internal.view.menu.IconMenuView r0;
        int $i0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i0 = r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows>;

        return $i0;
    }

    int getMaxItems()
    {
        com.android.internal.view.menu.IconMenuView r0;
        int $i0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i0 = r0.<com.android.internal.view.menu.IconMenuView: int mMaxItems>;

        return $i0;
    }

    int getNumActualItemsShown()
    {
        com.android.internal.view.menu.IconMenuView r0;
        int $i0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i0 = r0.<com.android.internal.view.menu.IconMenuView: int mNumActualItemsShown>;

        return $i0;
    }

    public int getWindowAnimations()
    {
        com.android.internal.view.menu.IconMenuView r0;
        int $i0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        $i0 = r0.<com.android.internal.view.menu.IconMenuView: int mAnimations>;

        return $i0;
    }

    public void initialize(com.android.internal.view.menu.MenuBuilder)
    {
        com.android.internal.view.menu.IconMenuView r0;
        com.android.internal.view.menu.MenuBuilder r1;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.MenuBuilder mMenu> = r1;

        return;
    }

    public boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)
    {
        com.android.internal.view.menu.IconMenuView r0;
        com.android.internal.view.menu.MenuItemImpl r1;
        com.android.internal.view.menu.MenuBuilder $r2;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 := @parameter0: com.android.internal.view.menu.MenuItemImpl;

        $r2 = r0.<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.MenuBuilder mMenu>;

        $z0 = virtualinvoke $r2.<com.android.internal.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)>(r1, 0);

        return $z0;
    }

    void markStaleChildren()
    {
        com.android.internal.view.menu.IconMenuView r0;
        boolean $z0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        $z0 = r0.<com.android.internal.view.menu.IconMenuView: boolean mHasStaleChildren>;

        if $z0 != 0 goto label1;

        r0.<com.android.internal.view.menu.IconMenuView: boolean mHasStaleChildren> = 1;

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: void requestLayout()>();

     label1:
        return;
    }

    protected void onAttachedToWindow()
    {
        com.android.internal.view.menu.IconMenuView r0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: boolean requestFocus()>();

        return;
    }

    protected void onDetachedFromWindow()
    {
        com.android.internal.view.menu.IconMenuView r0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void setCycleShortcutCaptionMode(boolean)>(0);

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2, r3;
        java.util.ArrayList r4, r5;
        int i0, i1, $i2, $i3;
        java.lang.Object $r6, $r8;
        android.graphics.Rect $r7, $r9;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mHorizontalDivider>;

        if r2 == null goto label2;

        r5 = r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mHorizontalDividerRects>;

        $i3 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        i1 = -1 + $i3;

     label1:
        if i1 < 0 goto label2;

        $r8 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r9 = (android.graphics.Rect) $r8;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r9);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        i1 = i1 + -1;

        goto label1;

     label2:
        r3 = r0.<com.android.internal.view.menu.IconMenuView: android.graphics.drawable.Drawable mVerticalDivider>;

        if r3 == null goto label4;

        r4 = r0.<com.android.internal.view.menu.IconMenuView: java.util.ArrayList mVerticalDividerRects>;

        $i2 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i0 = -1 + $i2;

     label3:
        if i0 < 0 goto label4;

        $r6 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (android.graphics.Rect) $r6;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r7);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        i0 = i0 + -1;

        goto label3;

     label4:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.view.menu.IconMenuView r0;
        boolean z0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View r1;
        com.android.internal.view.menu.IconMenuView$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i5 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: int getChildCount()>();

        i4 = -1 + $i5;

     label1:
        if i4 < 0 goto label2;

        r1 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.view.View getChildAt(int)>(i4);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (com.android.internal.view.menu.IconMenuView$LayoutParams) $r3;

        $i9 = r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: int left>;

        $i8 = r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: int top>;

        $i7 = r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: int right>;

        $i6 = r2.<com.android.internal.view.menu.IconMenuView$LayoutParams: int bottom>;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i9, $i8, $i7, $i6);

        i4 = i4 + -1;

        goto label1;

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.view.menu.IconMenuView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <com.android.internal.view.menu.IconMenuView: int resolveSize(int,int)>(2147483647, i0);

        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void calculateItemFittingMetadata(int)>(i2);

        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void layoutItems(int)>(i2);

        i3 = r0.<com.android.internal.view.menu.IconMenuView: int mLayoutNumRows>;

        $i5 = r0.<com.android.internal.view.menu.IconMenuView: int mRowHeight>;

        $i4 = r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $i6 = $i5 + $i4;

        $i8 = i3 * $i6;

        $i7 = r0.<com.android.internal.view.menu.IconMenuView: int mHorizontalDividerHeight>;

        $i9 = $i8 - $i7;

        $i10 = staticinvoke <com.android.internal.view.menu.IconMenuView: int resolveSize(int,int)>($i9, i1);

        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: void setMeasuredDimension(int,int)>(i2, $i10);

        if i3 <= 0 goto label1;

        $i11 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: int getMeasuredWidth()>();

        $i12 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: int getMeasuredHeight()>();

        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void positionChildren(int,int)>($i11, $i12);

     label1:
        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.os.Parcelable r1, $r4;
        com.android.internal.view.menu.IconMenuView$SavedState r2;
        android.view.View r3;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (com.android.internal.view.menu.IconMenuView$SavedState) r1;

        $r4 = virtualinvoke r2.<com.android.internal.view.menu.IconMenuView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r4);

        $i0 = r2.<com.android.internal.view.menu.IconMenuView$SavedState: int focusedPosition>;

        $i1 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: int getChildCount()>();

        if $i0 < $i1 goto label2;

     label1:
        return;

     label2:
        $i2 = r2.<com.android.internal.view.menu.IconMenuView$SavedState: int focusedPosition>;

        r3 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.view.View getChildAt(int)>($i2);

        if r3 == null goto label1;

        virtualinvoke r3.<android.view.View: boolean requestFocus()>();

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        com.android.internal.view.menu.IconMenuView r0;
        android.os.Parcelable r1;
        android.view.View r2, $r4;
        int i0, $i1;
        com.android.internal.view.menu.IconMenuView$SavedState $r3, $r5;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        r1 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        r2 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.view.View getFocusedChild()>();

        $i1 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: int getChildCount()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r4 = virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: android.view.View getChildAt(int)>(i0);

        if $r4 != r2 goto label2;

        $r5 = new com.android.internal.view.menu.IconMenuView$SavedState;

        specialinvoke $r5.<com.android.internal.view.menu.IconMenuView$SavedState: void <init>(android.os.Parcelable,int)>(r1, i0);

        return $r5;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        $r3 = new com.android.internal.view.menu.IconMenuView$SavedState;

        specialinvoke $r3.<com.android.internal.view.menu.IconMenuView$SavedState: void <init>(android.os.Parcelable,int)>(r1, -1);

        return $r3;
    }

    public void onWindowFocusChanged(boolean)
    {
        com.android.internal.view.menu.IconMenuView r0;
        boolean z0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void setCycleShortcutCaptionMode(boolean)>(0);

     label1:
        specialinvoke r0.<android.view.ViewGroup: void onWindowFocusChanged(boolean)>(z0);

        return;
    }

    public void run()
    {
        com.android.internal.view.menu.IconMenuView r0;
        boolean z0, $z1, $z3;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        z0 = 1;

        $z1 = r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed>;

        if $z1 == 0 goto label4;

        $z3 = r0.<com.android.internal.view.menu.IconMenuView: boolean mLastChildrenCaptionMode>;

        if $z3 != 0 goto label3;

     label1:
        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void setChildrenCaptionMode(boolean)>(z0);

     label2:
        virtualinvoke r0.<com.android.internal.view.menu.IconMenuView: boolean postDelayed(java.lang.Runnable,long)>(r0, 1000L);

        return;

     label3:
        z0 = 0;

        goto label1;

     label4:
        r0.<com.android.internal.view.menu.IconMenuView: boolean mMenuBeingLongpressed> = 1;

        specialinvoke r0.<com.android.internal.view.menu.IconMenuView: void setCycleShortcutCaptionMode(boolean)>(1);

        goto label2;
    }

    void setNumActualItemsShown(int)
    {
        com.android.internal.view.menu.IconMenuView r0;
        int i0;

        r0 := @this: com.android.internal.view.menu.IconMenuView;

        i0 := @parameter0: int;

        r0.<com.android.internal.view.menu.IconMenuView: int mNumActualItemsShown> = i0;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.menu.IconMenuView: int ITEM_CAPTION_CYCLE_DELAY> = 1000;

        return;
    }
}
