public class com.android.org.conscrypt.OpenSSLRandom extends java.security.SecureRandomSpi implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        com.android.org.conscrypt.OpenSSLRandom r0;

        r0 := @this: com.android.org.conscrypt.OpenSSLRandom;

        specialinvoke r0.<java.security.SecureRandomSpi: void <init>()>();

        return;
    }

    protected byte[] engineGenerateSeed(int)
    {
        com.android.org.conscrypt.OpenSSLRandom r0;
        int i0;
        byte[] r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLRandom;

        i0 := @parameter0: int;

        r1 = newarray (byte)[i0];

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void RAND_bytes(byte[])>(r1);

        return r1;
    }

    protected void engineNextBytes(byte[])
    {
        com.android.org.conscrypt.OpenSSLRandom r0;
        byte[] r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLRandom;

        r1 := @parameter0: byte[];

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void RAND_bytes(byte[])>(r1);

        return;
    }

    protected void engineSetSeed(byte[])
    {
        com.android.org.conscrypt.OpenSSLRandom r0;
        byte[] r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLRandom;

        r1 := @parameter0: byte[];

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void RAND_seed(byte[])>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.org.conscrypt.OpenSSLRandom: long serialVersionUID> = 8506210602917522860L;

        return;
    }
}
