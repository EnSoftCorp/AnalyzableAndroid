public class android.view.TextureView extends android.view.View
{
    private static final java.lang.String LOG_TAG;
    private android.graphics.Canvas mCanvas;
    private boolean mHadSurface;
    private android.view.HardwareLayer mLayer;
    private android.view.TextureView$SurfaceTextureListener mListener;
    private final java.lang.Object[] mLock;
    private final android.graphics.Matrix mMatrix;
    private boolean mMatrixChanged;
    private int mNativeWindow;
    private final java.lang.Object[] mNativeWindowLock;
    private boolean mOpaque;
    private int mSaveCount;
    private android.graphics.SurfaceTexture mSurface;
    private boolean mUpdateLayer;
    private android.graphics.SurfaceTexture$OnFrameAvailableListener mUpdateListener;
    private boolean mUpdateSurface;

    public void <init>(android.content.Context)
    {
        android.view.TextureView r0;
        android.content.Context r1;
        android.graphics.Matrix $r2;
        java.lang.Object[] $r3, $r4;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        r0.<android.view.TextureView: boolean mOpaque> = 1;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.TextureView: android.graphics.Matrix mMatrix> = $r2;

        $r3 = newarray (java.lang.Object)[0];

        r0.<android.view.TextureView: java.lang.Object[] mLock> = $r3;

        $r4 = newarray (java.lang.Object)[0];

        r0.<android.view.TextureView: java.lang.Object[] mNativeWindowLock> = $r4;

        specialinvoke r0.<android.view.TextureView: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.view.TextureView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.graphics.Matrix $r3;
        java.lang.Object[] $r4, $r5;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<android.view.TextureView: boolean mOpaque> = 1;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.TextureView: android.graphics.Matrix mMatrix> = $r3;

        $r4 = newarray (java.lang.Object)[0];

        r0.<android.view.TextureView: java.lang.Object[] mLock> = $r4;

        $r5 = newarray (java.lang.Object)[0];

        r0.<android.view.TextureView: java.lang.Object[] mNativeWindowLock> = $r5;

        specialinvoke r0.<android.view.TextureView: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.view.TextureView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        android.graphics.Matrix $r3;
        java.lang.Object[] $r4, $r5;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.view.TextureView: boolean mOpaque> = 1;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.TextureView: android.graphics.Matrix mMatrix> = $r3;

        $r4 = newarray (java.lang.Object)[0];

        r0.<android.view.TextureView: java.lang.Object[] mLock> = $r4;

        $r5 = newarray (java.lang.Object)[0];

        r0.<android.view.TextureView: java.lang.Object[] mNativeWindowLock> = $r5;

        specialinvoke r0.<android.view.TextureView: void init()>();

        return;
    }

    static void access$000(android.view.TextureView)
    {
        android.view.TextureView r0;

        r0 := @parameter0: android.view.TextureView;

        specialinvoke r0.<android.view.TextureView: void destroySurface()>();

        return;
    }

    static void access$100(android.view.TextureView)
    {
        android.view.TextureView r0;

        r0 := @parameter0: android.view.TextureView;

        specialinvoke r0.<android.view.TextureView: void updateLayer()>();

        return;
    }

    private void applyTransformMatrix()
    {
        android.view.TextureView r0;
        boolean $z0;
        android.view.HardwareLayer $r1, $r3;
        android.graphics.Matrix $r2;

        r0 := @this: android.view.TextureView;

        $z0 = r0.<android.view.TextureView: boolean mMatrixChanged>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        if $r1 == null goto label1;

        $r3 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        $r2 = r0.<android.view.TextureView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r3.<android.view.HardwareLayer: void setTransform(android.graphics.Matrix)>($r2);

        r0.<android.view.TextureView: boolean mMatrixChanged> = 0;

     label1:
        return;
    }

    private void applyUpdate()
    {
        android.view.TextureView r0;
        java.lang.Object[] r1;
        java.lang.Throwable r2, $r8;
        android.view.HardwareLayer $r3, $r4;
        boolean $z0, $z1;
        int $i0, $i1;
        android.view.TextureView$SurfaceTextureListener $r5, $r7;
        android.graphics.SurfaceTexture $r6;

        r0 := @this: android.view.TextureView;

        $r3 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        if $r3 != null goto label2;

     label1:
        return;

     label2:
        r1 = r0.<android.view.TextureView: java.lang.Object[] mLock>;

        entermonitor r1;

     label3:
        $z0 = r0.<android.view.TextureView: boolean mUpdateLayer>;

        if $z0 == 0 goto label5;

        r0.<android.view.TextureView: boolean mUpdateLayer> = 0;

        exitmonitor r1;

     label4:
        $r4 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        $i0 = virtualinvoke r0.<android.view.TextureView: int getWidth()>();

        $i1 = virtualinvoke r0.<android.view.TextureView: int getHeight()>();

        $z1 = r0.<android.view.TextureView: boolean mOpaque>;

        virtualinvoke $r4.<android.view.HardwareLayer: void update(int,int,boolean)>($i0, $i1, $z1);

        $r5 = r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener>;

        if $r5 == null goto label1;

        $r7 = r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener>;

        $r6 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        interfaceinvoke $r7.<android.view.TextureView$SurfaceTextureListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>($r6);

        return;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

        r2 = $r8;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void destroySurface()
    {
        android.view.TextureView r0;
        boolean z0;
        java.lang.Object[] r1;
        java.lang.Throwable r2, $r11;
        android.view.HardwareLayer $r3, $r5, $r7;
        android.graphics.SurfaceTexture $r4, $r8, $r9;
        android.view.TextureView$SurfaceTextureListener $r6, $r10;

        r0 := @this: android.view.TextureView;

        $r3 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        if $r3 == null goto label5;

        $r4 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        virtualinvoke $r4.<android.graphics.SurfaceTexture: void detachFromGLContext()>();

        $r5 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        virtualinvoke $r5.<android.view.HardwareLayer: void clearStorage()>();

        z0 = 1;

        $r6 = r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener>;

        if $r6 == null goto label1;

        $r10 = r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener>;

        $r9 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        z0 = interfaceinvoke $r10.<android.view.TextureView$SurfaceTextureListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>($r9);

     label1:
        r1 = r0.<android.view.TextureView: java.lang.Object[] mNativeWindowLock>;

        entermonitor r1;

     label2:
        specialinvoke r0.<android.view.TextureView: void nDestroyNativeWindow()>();

        exitmonitor r1;

     label3:
        $r7 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        virtualinvoke $r7.<android.view.HardwareLayer: void destroy()>();

        if z0 == 0 goto label4;

        $r8 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        virtualinvoke $r8.<android.graphics.SurfaceTexture: void release()>();

     label4:
        r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface> = null;

        r0.<android.view.TextureView: android.view.HardwareLayer mLayer> = null;

        r0.<android.view.TextureView: boolean mHadSurface> = 1;

     label5:
        return;

     label6:
        $r11 := @caughtexception;

        r2 = $r11;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void init()
    {
        android.view.TextureView r0;
        android.graphics.Paint $r1;

        r0 := @this: android.view.TextureView;

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>()>();

        r0.<android.view.TextureView: android.graphics.Paint mLayerPaint> = $r1;

        return;
    }

    private native void nCreateNativeWindow(android.graphics.SurfaceTexture);

    private native void nDestroyNativeWindow();

    private static native boolean nLockCanvas(int, android.graphics.Canvas, android.graphics.Rect);

    private static native void nUnlockCanvasAndPost(int, android.graphics.Canvas);

    private void updateLayer()
    {
        android.view.TextureView r0;
        java.lang.Object[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.view.TextureView;

        r1 = r0.<android.view.TextureView: java.lang.Object[] mLock>;

        entermonitor r1;

     label1:
        r0.<android.view.TextureView: boolean mUpdateLayer> = 1;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void updateLayerAndInvalidate()
    {
        android.view.TextureView r0;
        java.lang.Object[] r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.view.TextureView;

        r1 = r0.<android.view.TextureView: java.lang.Object[] mLock>;

        entermonitor r1;

     label1:
        r0.<android.view.TextureView: boolean mUpdateLayer> = 1;

        exitmonitor r1;

     label2:
        virtualinvoke r0.<android.view.TextureView: void invalidate()>();

        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void buildLayer()
    {
        android.view.TextureView r0;

        r0 := @this: android.view.TextureView;

        return;
    }

    protected void destroyHardwareResources()
    {
        android.view.TextureView r0;

        r0 := @this: android.view.TextureView;

        specialinvoke r0.<android.view.View: void destroyHardwareResources()>();

        specialinvoke r0.<android.view.TextureView: void destroySurface()>();

        virtualinvoke r0.<android.view.TextureView: void invalidateParentCaches()>();

        virtualinvoke r0.<android.view.TextureView: void invalidate(boolean)>(1);

        return;
    }

    boolean destroyLayer(boolean)
    {
        android.view.TextureView r0;
        boolean z0;

        r0 := @this: android.view.TextureView;

        z0 := @parameter0: boolean;

        return 0;
    }

    public final void draw(android.graphics.Canvas)
    {
        android.view.TextureView r0;
        android.graphics.Canvas r1;
        int $i0, $i1, $i2;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = r0.<android.view.TextureView: int mPrivateFlags>;

        $i1 = -6291457 & $i0;

        $i2 = 32 | $i1;

        r0.<android.view.TextureView: int mPrivateFlags> = $i2;

        specialinvoke r0.<android.view.TextureView: void applyUpdate()>();

        specialinvoke r0.<android.view.TextureView: void applyTransformMatrix()>();

        return;
    }

    public android.graphics.Bitmap getBitmap()
    {
        android.view.TextureView r0;
        int $i0, $i1;
        android.graphics.Bitmap $r1;

        r0 := @this: android.view.TextureView;

        $i0 = virtualinvoke r0.<android.view.TextureView: int getWidth()>();

        $i1 = virtualinvoke r0.<android.view.TextureView: int getHeight()>();

        $r1 = virtualinvoke r0.<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)>($i0, $i1);

        return $r1;
    }

    public android.graphics.Bitmap getBitmap(int, int)
    {
        android.view.TextureView r0;
        int i0, i1;
        boolean $z0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        android.graphics.Bitmap$Config $r3;
        android.graphics.Bitmap $r4, $r5;

        r0 := @this: android.view.TextureView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.view.TextureView: boolean isAvailable()>();

        if $z0 == 0 goto label1;

        if i0 <= 0 goto label1;

        if i1 <= 0 goto label1;

        $r1 = virtualinvoke r0.<android.view.TextureView: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config)>($r2, i0, i1, $r3);

        $r5 = virtualinvoke r0.<android.view.TextureView: android.graphics.Bitmap getBitmap(android.graphics.Bitmap)>($r4);

        return $r5;

     label1:
        return null;
    }

    public android.graphics.Bitmap getBitmap(android.graphics.Bitmap)
    {
        android.view.TextureView r0;
        android.graphics.Bitmap r1;
        android.view.View$AttachInfo r2;
        boolean $z0, $z2, $z3, $z4;
        android.view.HardwareLayer $r3, $r4, $r5;
        android.view.HardwareRenderer $r7, $r8, $r9;
        java.lang.IllegalStateException $r10;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.graphics.Bitmap;

        if r1 == null goto label3;

        $z0 = virtualinvoke r0.<android.view.TextureView: boolean isAvailable()>();

        if $z0 == 0 goto label3;

        r2 = r0.<android.view.TextureView: android.view.View$AttachInfo mAttachInfo>;

        if r2 == null goto label1;

        $r7 = r2.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        if $r7 == null goto label1;

        $r8 = r2.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z3 = virtualinvoke $r8.<android.view.HardwareRenderer: boolean isEnabled()>();

        if $z3 == 0 goto label1;

        $r9 = r2.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z4 = virtualinvoke $r9.<android.view.HardwareRenderer: boolean validate()>();

        if $z4 != 0 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not acquire hardware rendering context");

        throw $r10;

     label1:
        specialinvoke r0.<android.view.TextureView: void applyUpdate()>();

        specialinvoke r0.<android.view.TextureView: void applyTransformMatrix()>();

        $r3 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        if $r3 != null goto label2;

        $z2 = r0.<android.view.TextureView: boolean mUpdateSurface>;

        if $z2 == 0 goto label2;

        virtualinvoke r0.<android.view.TextureView: android.view.HardwareLayer getHardwareLayer()>();

     label2:
        $r4 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        if $r4 == null goto label3;

        $r5 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        virtualinvoke $r5.<android.view.HardwareLayer: boolean copyInto(android.graphics.Bitmap)>(r1);

     label3:
        return r1;
    }

    android.view.HardwareLayer getHardwareLayer()
    {
        android.view.TextureView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.HardwareLayer $r1, $r2, $r5, $r12, $r23, $r25;
        boolean $z0, $z1, $z2, $z3;
        android.view.View$AttachInfo $r3, $r8, $r10, $r11, $r24;
        android.graphics.SurfaceTexture $r4, $r7, $r14, $r16, $r17, $r22, $r27;
        android.view.HardwareRenderer $r6, $r9, $r13, $r26;
        android.view.TextureView$2 $r15;
        android.graphics.SurfaceTexture$OnFrameAvailableListener $r18;
        android.graphics.Paint $r19;
        android.view.TextureView$SurfaceTextureListener $r20, $r21;

        r0 := @this: android.view.TextureView;

        $i0 = r0.<android.view.TextureView: int mPrivateFlags>;

        $i1 = 32800 | $i0;

        r0.<android.view.TextureView: int mPrivateFlags> = $i1;

        $i2 = r0.<android.view.TextureView: int mPrivateFlags>;

        $i3 = -6291457 & $i2;

        r0.<android.view.TextureView: int mPrivateFlags> = $i3;

        $r1 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        if $r1 != null goto label5;

        $r8 = r0.<android.view.TextureView: android.view.View$AttachInfo mAttachInfo>;

        if $r8 == null goto label1;

        $r10 = r0.<android.view.TextureView: android.view.View$AttachInfo mAttachInfo>;

        $r9 = $r10.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        if $r9 != null goto label2;

     label1:
        return null;

     label2:
        $r11 = r0.<android.view.TextureView: android.view.View$AttachInfo mAttachInfo>;

        $r13 = $r11.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $z1 = r0.<android.view.TextureView: boolean mOpaque>;

        $r12 = virtualinvoke $r13.<android.view.HardwareRenderer: android.view.HardwareLayer createHardwareLayer(boolean)>($z1);

        r0.<android.view.TextureView: android.view.HardwareLayer mLayer> = $r12;

        $z2 = r0.<android.view.TextureView: boolean mUpdateSurface>;

        if $z2 != 0 goto label3;

        $r24 = r0.<android.view.TextureView: android.view.View$AttachInfo mAttachInfo>;

        $r26 = $r24.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $r25 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        $r27 = virtualinvoke $r26.<android.view.HardwareRenderer: android.graphics.SurfaceTexture createSurfaceTexture(android.view.HardwareLayer)>($r25);

        r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface> = $r27;

     label3:
        $r14 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        $i7 = virtualinvoke r0.<android.view.TextureView: int getWidth()>();

        $i6 = virtualinvoke r0.<android.view.TextureView: int getHeight()>();

        virtualinvoke $r14.<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>($i7, $i6);

        $r16 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        specialinvoke r0.<android.view.TextureView: void nCreateNativeWindow(android.graphics.SurfaceTexture)>($r16);

        $r15 = new android.view.TextureView$2;

        specialinvoke $r15.<android.view.TextureView$2: void <init>(android.view.TextureView)>(r0);

        r0.<android.view.TextureView: android.graphics.SurfaceTexture$OnFrameAvailableListener mUpdateListener> = $r15;

        $r17 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        $r18 = r0.<android.view.TextureView: android.graphics.SurfaceTexture$OnFrameAvailableListener mUpdateListener>;

        virtualinvoke $r17.<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)>($r18);

        $r20 = r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener>;

        if $r20 == null goto label4;

        $z3 = r0.<android.view.TextureView: boolean mUpdateSurface>;

        if $z3 != 0 goto label4;

        $r21 = r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener>;

        $r22 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        $i8 = virtualinvoke r0.<android.view.TextureView: int getWidth()>();

        $i9 = virtualinvoke r0.<android.view.TextureView: int getHeight()>();

        interfaceinvoke $r21.<android.view.TextureView$SurfaceTextureListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>($r22, $i8, $i9);

     label4:
        $r23 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        $r19 = r0.<android.view.TextureView: android.graphics.Paint mLayerPaint>;

        virtualinvoke $r23.<android.view.HardwareLayer: void setLayerPaint(android.graphics.Paint)>($r19);

     label5:
        $z0 = r0.<android.view.TextureView: boolean mUpdateSurface>;

        if $z0 == 0 goto label6;

        r0.<android.view.TextureView: boolean mUpdateSurface> = 0;

        specialinvoke r0.<android.view.TextureView: void updateLayer()>();

        r0.<android.view.TextureView: boolean mMatrixChanged> = 1;

        $r3 = r0.<android.view.TextureView: android.view.View$AttachInfo mAttachInfo>;

        $r6 = $r3.<android.view.View$AttachInfo: android.view.HardwareRenderer mHardwareRenderer>;

        $r5 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        $r4 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        virtualinvoke $r6.<android.view.HardwareRenderer: void setSurfaceTexture(android.view.HardwareLayer,android.graphics.SurfaceTexture)>($r5, $r4);

        $r7 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        $i4 = virtualinvoke r0.<android.view.TextureView: int getWidth()>();

        $i5 = virtualinvoke r0.<android.view.TextureView: int getHeight()>();

        virtualinvoke $r7.<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>($i4, $i5);

     label6:
        specialinvoke r0.<android.view.TextureView: void applyUpdate()>();

        specialinvoke r0.<android.view.TextureView: void applyTransformMatrix()>();

        $r2 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        return $r2;
    }

    public int getLayerType()
    {
        android.view.TextureView r0;

        r0 := @this: android.view.TextureView;

        return 2;
    }

    public android.graphics.SurfaceTexture getSurfaceTexture()
    {
        android.view.TextureView r0;
        android.graphics.SurfaceTexture $r1;

        r0 := @this: android.view.TextureView;

        $r1 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        return $r1;
    }

    public android.view.TextureView$SurfaceTextureListener getSurfaceTextureListener()
    {
        android.view.TextureView r0;
        android.view.TextureView$SurfaceTextureListener $r1;

        r0 := @this: android.view.TextureView;

        $r1 = r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener>;

        return $r1;
    }

    public android.graphics.Matrix getTransform(android.graphics.Matrix)
    {
        android.view.TextureView r0;
        android.graphics.Matrix r1, $r2, $r3;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.graphics.Matrix;

        if r1 != null goto label1;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r1 = $r3;

     label1:
        $r2 = r0.<android.view.TextureView: android.graphics.Matrix mMatrix>;

        virtualinvoke r1.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r2);

        return r1;
    }

    boolean hasStaticLayer()
    {
        android.view.TextureView r0;

        r0 := @this: android.view.TextureView;

        return 1;
    }

    public boolean isAvailable()
    {
        android.view.TextureView r0;
        android.graphics.SurfaceTexture $r1;

        r0 := @this: android.view.TextureView;

        $r1 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOpaque()
    {
        android.view.TextureView r0;
        boolean $z0;

        r0 := @this: android.view.TextureView;

        $z0 = r0.<android.view.TextureView: boolean mOpaque>;

        return $z0;
    }

    public android.graphics.Canvas lockCanvas()
    {
        android.view.TextureView r0;
        android.graphics.Canvas $r1;

        r0 := @this: android.view.TextureView;

        $r1 = virtualinvoke r0.<android.view.TextureView: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);

        return $r1;
    }

    public android.graphics.Canvas lockCanvas(android.graphics.Rect)
    {
        android.view.TextureView r0;
        android.graphics.Rect r1;
        java.lang.Object[] r2;
        java.lang.Throwable r3, $r9;
        boolean $z0, $z1;
        android.graphics.Canvas $r4, $r5, $r6, $r7, $r8;
        int $i0, $i1;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.graphics.Rect;

        $z0 = virtualinvoke r0.<android.view.TextureView: boolean isAvailable()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = r0.<android.view.TextureView: android.graphics.Canvas mCanvas>;

        if $r4 != null goto label2;

        $r8 = new android.graphics.Canvas;

        specialinvoke $r8.<android.graphics.Canvas: void <init>()>();

        r0.<android.view.TextureView: android.graphics.Canvas mCanvas> = $r8;

     label2:
        r2 = r0.<android.view.TextureView: java.lang.Object[] mNativeWindowLock>;

        entermonitor r2;

     label3:
        $i0 = r0.<android.view.TextureView: int mNativeWindow>;

        $r5 = r0.<android.view.TextureView: android.graphics.Canvas mCanvas>;

        $z1 = staticinvoke <android.view.TextureView: boolean nLockCanvas(int,android.graphics.Canvas,android.graphics.Rect)>($i0, $r5, r1);

        if $z1 != 0 goto label8;

        exitmonitor r2;

     label4:
        return null;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        exitmonitor r2;

     label9:
        $r6 = r0.<android.view.TextureView: android.graphics.Canvas mCanvas>;

        $i1 = virtualinvoke $r6.<android.graphics.Canvas: int save()>();

        r0.<android.view.TextureView: int mSaveCount> = $i1;

        $r7 = r0.<android.view.TextureView: android.graphics.Canvas mCanvas>;

        return $r7;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    protected void onAttachedToWindow()
    {
        android.view.TextureView r0;
        boolean $z0, $z1;

        r0 := @this: android.view.TextureView;

        specialinvoke r0.<android.view.View: void onAttachedToWindow()>();

        $z0 = virtualinvoke r0.<android.view.TextureView: boolean isHardwareAccelerated()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextureView", "A TextureView or a subclass can only be used with hardware acceleration enabled.");

     label1:
        $z1 = r0.<android.view.TextureView: boolean mHadSurface>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<android.view.TextureView: void invalidate(boolean)>(1);

        r0.<android.view.TextureView: boolean mHadSurface> = 0;

     label2:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.view.TextureView r0;
        android.view.HardwareLayer $r1;
        android.view.TextureView$1 $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.view.TextureView;

        specialinvoke r0.<android.view.View: void onDetachedFromWindow()>();

        $r1 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        if $r1 == null goto label1;

        $r2 = new android.view.TextureView$1;

        specialinvoke $r2.<android.view.TextureView$1: void <init>(android.view.TextureView)>(r0);

        $z0 = virtualinvoke r0.<android.view.TextureView: boolean executeHardwareAction(java.lang.Runnable)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TextureView was not able to destroy its surface: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextureView", $r6);

     label1:
        return;
    }

    protected final void onDraw(android.graphics.Canvas)
    {
        android.view.TextureView r0;
        android.graphics.Canvas r1;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.graphics.Canvas;

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.view.TextureView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        android.graphics.SurfaceTexture $r1, $r2, $r5;
        android.view.TextureView$SurfaceTextureListener $r3, $r4;

        r0 := @this: android.view.TextureView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.View: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        $i4 = virtualinvoke r0.<android.view.TextureView: int getWidth()>();

        $i5 = virtualinvoke r0.<android.view.TextureView: int getHeight()>();

        virtualinvoke $r2.<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>($i4, $i5);

        specialinvoke r0.<android.view.TextureView: void updateLayer()>();

        $r3 = r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener>;

        if $r3 == null goto label1;

        $r4 = r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener>;

        $r5 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        $i6 = virtualinvoke r0.<android.view.TextureView: int getWidth()>();

        $i7 = virtualinvoke r0.<android.view.TextureView: int getHeight()>();

        interfaceinvoke $r4.<android.view.TextureView$SurfaceTextureListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>($r5, $i6, $i7);

     label1:
        return;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        android.view.TextureView r0;
        android.view.View r1;
        int i0;
        android.graphics.SurfaceTexture $r2, $r3, $r5;
        android.graphics.SurfaceTexture$OnFrameAvailableListener $r4;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.View: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        $r2 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        if $r2 == null goto label1;

        if i0 != 0 goto label2;

        $r5 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        $r4 = r0.<android.view.TextureView: android.graphics.SurfaceTexture$OnFrameAvailableListener mUpdateListener>;

        virtualinvoke $r5.<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)>($r4);

        specialinvoke r0.<android.view.TextureView: void updateLayerAndInvalidate()>();

     label1:
        return;

     label2:
        $r3 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        virtualinvoke $r3.<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)>(null);

        return;
    }

    public void setLayerType(int, android.graphics.Paint)
    {
        android.view.TextureView r0;
        int i0;
        android.graphics.Paint r1, $r2, $r3;

        r0 := @this: android.view.TextureView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Paint;

        $r2 = r0.<android.view.TextureView: android.graphics.Paint mLayerPaint>;

        if r1 == $r2 goto label2;

        if r1 != null goto label1;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r1 = $r3;

     label1:
        r0.<android.view.TextureView: android.graphics.Paint mLayerPaint> = r1;

        virtualinvoke r0.<android.view.TextureView: void invalidate()>();

     label2:
        return;
    }

    public void setOpaque(boolean)
    {
        android.view.TextureView r0;
        boolean z0, $z1;
        android.view.HardwareLayer $r1;

        r0 := @this: android.view.TextureView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.view.TextureView: boolean mOpaque>;

        if z0 == $z1 goto label1;

        r0.<android.view.TextureView: boolean mOpaque> = z0;

        $r1 = r0.<android.view.TextureView: android.view.HardwareLayer mLayer>;

        if $r1 == null goto label1;

        specialinvoke r0.<android.view.TextureView: void updateLayerAndInvalidate()>();

     label1:
        return;
    }

    public void setSurfaceTexture(android.graphics.SurfaceTexture)
    {
        android.view.TextureView r0;
        android.graphics.SurfaceTexture r1, $r2, $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("surfaceTexture must not be null");

        throw $r4;

     label1:
        $r2 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        if $r2 == null goto label2;

        $r3 = r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface>;

        virtualinvoke $r3.<android.graphics.SurfaceTexture: void release()>();

     label2:
        r0.<android.view.TextureView: android.graphics.SurfaceTexture mSurface> = r1;

        r0.<android.view.TextureView: boolean mUpdateSurface> = 1;

        virtualinvoke r0.<android.view.TextureView: void invalidateParentIfNeeded()>();

        return;
    }

    public void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)
    {
        android.view.TextureView r0;
        android.view.TextureView$SurfaceTextureListener r1;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.view.TextureView$SurfaceTextureListener;

        r0.<android.view.TextureView: android.view.TextureView$SurfaceTextureListener mListener> = r1;

        return;
    }

    public void setTransform(android.graphics.Matrix)
    {
        android.view.TextureView r0;
        android.graphics.Matrix r1, $r2;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.graphics.Matrix;

        $r2 = r0.<android.view.TextureView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>(r1);

        r0.<android.view.TextureView: boolean mMatrixChanged> = 1;

        virtualinvoke r0.<android.view.TextureView: void invalidateParentIfNeeded()>();

        return;
    }

    public void unlockCanvasAndPost(android.graphics.Canvas)
    {
        android.view.TextureView r0;
        android.graphics.Canvas r1, $r4, $r5, $r6;
        java.lang.Object[] r2;
        java.lang.Throwable r3, $r7;
        int $i0, $i1;

        r0 := @this: android.view.TextureView;

        r1 := @parameter0: android.graphics.Canvas;

        $r4 = r0.<android.view.TextureView: android.graphics.Canvas mCanvas>;

        if $r4 == null goto label6;

        $r5 = r0.<android.view.TextureView: android.graphics.Canvas mCanvas>;

        if r1 != $r5 goto label6;

        $i0 = r0.<android.view.TextureView: int mSaveCount>;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

        r0.<android.view.TextureView: int mSaveCount> = 0;

        r2 = r0.<android.view.TextureView: java.lang.Object[] mNativeWindowLock>;

        entermonitor r2;

     label1:
        $i1 = r0.<android.view.TextureView: int mNativeWindow>;

        $r6 = r0.<android.view.TextureView: android.graphics.Canvas mCanvas>;

        staticinvoke <android.view.TextureView: void nUnlockCanvasAndPost(int,android.graphics.Canvas)>($i1, $r6);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <android.view.TextureView: java.lang.String LOG_TAG> = "TextureView";

        return;
    }
}
