class android.speech.tts.AudioPlaybackQueueItem extends android.speech.tts.PlaybackQueueItem
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final android.os.ConditionVariable mDone;
    private volatile boolean mFinished;
    private android.media.MediaPlayer mPlayer;
    private final int mStreamType;
    private final android.net.Uri mUri;

    void <init>(android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher, java.lang.Object, android.content.Context, android.net.Uri, int)
    {
        android.speech.tts.AudioPlaybackQueueItem r0;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r1;
        java.lang.Object r2;
        android.content.Context r3;
        android.net.Uri r4;
        int i0;
        android.os.ConditionVariable $r5;

        r0 := @this: android.speech.tts.AudioPlaybackQueueItem;

        r1 := @parameter0: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: android.content.Context;

        r4 := @parameter3: android.net.Uri;

        i0 := @parameter4: int;

        specialinvoke r0.<android.speech.tts.PlaybackQueueItem: void <init>(android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher,java.lang.Object)>(r1, r2);

        r0.<android.speech.tts.AudioPlaybackQueueItem: android.content.Context mContext> = r3;

        r0.<android.speech.tts.AudioPlaybackQueueItem: android.net.Uri mUri> = r4;

        r0.<android.speech.tts.AudioPlaybackQueueItem: int mStreamType> = i0;

        $r5 = new android.os.ConditionVariable;

        specialinvoke $r5.<android.os.ConditionVariable: void <init>()>();

        r0.<android.speech.tts.AudioPlaybackQueueItem: android.os.ConditionVariable mDone> = $r5;

        r0.<android.speech.tts.AudioPlaybackQueueItem: android.media.MediaPlayer mPlayer> = null;

        r0.<android.speech.tts.AudioPlaybackQueueItem: boolean mFinished> = 0;

        return;
    }

    static android.os.ConditionVariable access$000(android.speech.tts.AudioPlaybackQueueItem)
    {
        android.speech.tts.AudioPlaybackQueueItem r0;
        android.os.ConditionVariable $r1;

        r0 := @parameter0: android.speech.tts.AudioPlaybackQueueItem;

        $r1 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.os.ConditionVariable mDone>;

        return $r1;
    }

    static boolean access$102(android.speech.tts.AudioPlaybackQueueItem, boolean)
    {
        android.speech.tts.AudioPlaybackQueueItem r0;
        boolean z0;

        r0 := @parameter0: android.speech.tts.AudioPlaybackQueueItem;

        z0 := @parameter1: boolean;

        r0.<android.speech.tts.AudioPlaybackQueueItem: boolean mFinished> = z0;

        return z0;
    }

    private void finish()
    {
        android.speech.tts.AudioPlaybackQueueItem r0;
        android.media.MediaPlayer $r2, $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.speech.tts.AudioPlaybackQueueItem;

     label1:
        $r2 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.media.MediaPlayer mPlayer>;

        virtualinvoke $r2.<android.media.MediaPlayer: void stop()>();

     label2:
        $r3 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.media.MediaPlayer mPlayer>;

        virtualinvoke $r3.<android.media.MediaPlayer: void release()>();

        return;

     label3:
        $r4 := @caughtexception;

        goto label2;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public void run()
    {
        android.speech.tts.AudioPlaybackQueueItem r0;
        android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher r1;
        java.lang.IllegalArgumentException r2, $r14;
        android.net.Uri $r3;
        android.content.Context $r4;
        android.media.MediaPlayer $r5, $r6, $r8, $r10, $r11, $r12;
        android.speech.tts.AudioPlaybackQueueItem$1 $r7;
        android.speech.tts.AudioPlaybackQueueItem$2 $r9;
        int $i0;
        android.os.ConditionVariable $r13, $r15;
        boolean $z0;

        r0 := @this: android.speech.tts.AudioPlaybackQueueItem;

        r1 = virtualinvoke r0.<android.speech.tts.AudioPlaybackQueueItem: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher getDispatcher()>();

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnStart()>();

        $r4 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.content.Context mContext>;

        $r3 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.net.Uri mUri>;

        $r5 = staticinvoke <android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>($r4, $r3);

        r0.<android.speech.tts.AudioPlaybackQueueItem: android.media.MediaPlayer mPlayer> = $r5;

        $r6 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.media.MediaPlayer mPlayer>;

        if $r6 != null goto label1;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError()>();

        return;

     label1:
        $r8 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.media.MediaPlayer mPlayer>;

        $r7 = new android.speech.tts.AudioPlaybackQueueItem$1;

        specialinvoke $r7.<android.speech.tts.AudioPlaybackQueueItem$1: void <init>(android.speech.tts.AudioPlaybackQueueItem)>(r0);

        virtualinvoke $r8.<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>($r7);

        $r10 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.media.MediaPlayer mPlayer>;

        $r9 = new android.speech.tts.AudioPlaybackQueueItem$2;

        specialinvoke $r9.<android.speech.tts.AudioPlaybackQueueItem$2: void <init>(android.speech.tts.AudioPlaybackQueueItem)>(r0);

        virtualinvoke $r10.<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>($r9);

        $r11 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.media.MediaPlayer mPlayer>;

        $i0 = r0.<android.speech.tts.AudioPlaybackQueueItem: int mStreamType>;

        virtualinvoke $r11.<android.media.MediaPlayer: void setAudioStreamType(int)>($i0);

        $r12 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.media.MediaPlayer mPlayer>;

        virtualinvoke $r12.<android.media.MediaPlayer: void start()>();

        $r13 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.os.ConditionVariable mDone>;

        virtualinvoke $r13.<android.os.ConditionVariable: void block()>();

        specialinvoke r0.<android.speech.tts.AudioPlaybackQueueItem: void finish()>();

     label2:
        $z0 = r0.<android.speech.tts.AudioPlaybackQueueItem: boolean mFinished>;

        if $z0 == 0 goto label4;

        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnDone()>();

        return;

     label3:
        $r14 := @caughtexception;

        r2 = $r14;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("TTS.AudioQueueItem", "MediaPlayer failed", r2);

        $r15 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.os.ConditionVariable mDone>;

        virtualinvoke $r15.<android.os.ConditionVariable: void open()>();

        goto label2;

     label4:
        interfaceinvoke r1.<android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher: void dispatchOnError()>();

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    void stop(boolean)
    {
        android.speech.tts.AudioPlaybackQueueItem r0;
        boolean z0;
        android.os.ConditionVariable $r1;

        r0 := @this: android.speech.tts.AudioPlaybackQueueItem;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.speech.tts.AudioPlaybackQueueItem: android.os.ConditionVariable mDone>;

        virtualinvoke $r1.<android.os.ConditionVariable: void open()>();

        return;
    }

    public static void <clinit>()
    {
        <android.speech.tts.AudioPlaybackQueueItem: java.lang.String TAG> = "TTS.AudioQueueItem";

        return;
    }
}
