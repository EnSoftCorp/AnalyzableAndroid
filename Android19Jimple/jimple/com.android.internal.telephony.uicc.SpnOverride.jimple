public class com.android.internal.telephony.uicc.SpnOverride extends java.lang.Object
{
    static final java.lang.String LOG_TAG;
    static final java.lang.String PARTNER_SPN_OVERRIDE_PATH;
    private java.util.HashMap mCarrierSpnMap;

    void <init>()
    {
        com.android.internal.telephony.uicc.SpnOverride r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.internal.telephony.uicc.SpnOverride;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.telephony.uicc.SpnOverride: java.util.HashMap mCarrierSpnMap> = $r1;

        specialinvoke r0.<com.android.internal.telephony.uicc.SpnOverride: void loadSpnOverrides()>();

        return;
    }

    private void loadSpnOverrides()
    {
        com.android.internal.telephony.uicc.SpnOverride r0;
        java.io.File r1, $r9, $r10, $r28;
        java.io.FileReader r2, $r11;
        java.io.IOException r3, $r17;
        org.xmlpull.v1.XmlPullParserException r4, $r21;
        org.xmlpull.v1.XmlPullParser r5;
        boolean z0;
        java.lang.String r6, r7, $r12, $r13, $r19, $r27, $r31;
        java.util.HashMap $r15;
        java.lang.StringBuilder $r16, $r18, $r20, $r22, $r23, $r24, $r26, $r29, $r30, $r32, $r33;
        java.io.FileNotFoundException $r25;

        r0 := @this: com.android.internal.telephony.uicc.SpnOverride;

        $r9 = new java.io.File;

        $r10 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, "etc/spn-conf.xml");

        r1 = $r9;

     label1:
        $r11 = new java.io.FileReader;

        specialinvoke $r11.<java.io.FileReader: void <init>(java.io.File)>(r1);

        r2 = $r11;

     label2:
        r5 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.Reader)>(r2);

        staticinvoke <com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r5, "spnOverrides");

     label3:
        staticinvoke <com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>(r5);

        $r12 = "spnOverride";

        $r13 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

     label4:
        if z0 != 0 goto label6;

        return;

     label5:
        $r25 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not open ");

        $r28 = staticinvoke <android.os.Environment: java.io.File getRootDirectory()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("etc/spn-conf.xml");

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SpnOverride", $r31);

        return;

     label6:
        r6 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "numeric");

        r7 = interfaceinvoke r5.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "spn");

        $r15 = r0.<com.android.internal.telephony.uicc.SpnOverride: java.util.HashMap mCarrierSpnMap>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r7);

     label7:
        goto label3;

     label8:
        $r21 := @caughtexception;

        r4 = $r21;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in spn-conf parser ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SpnOverride", $r27);

        return;

     label9:
        $r17 := @caughtexception;

        r3 = $r17;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in spn-conf parser ");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SpnOverride", $r19);

        return;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch org.xmlpull.v1.XmlPullParserException from label2 to label3 with label8;
        catch java.io.IOException from label2 to label3 with label9;
        catch org.xmlpull.v1.XmlPullParserException from label3 to label4 with label8;
        catch java.io.IOException from label3 to label4 with label9;
        catch org.xmlpull.v1.XmlPullParserException from label6 to label7 with label8;
        catch java.io.IOException from label6 to label7 with label9;
    }

    boolean containsCarrier(java.lang.String)
    {
        com.android.internal.telephony.uicc.SpnOverride r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.uicc.SpnOverride;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.uicc.SpnOverride: java.util.HashMap mCarrierSpnMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    java.lang.String getSpn(java.lang.String)
    {
        com.android.internal.telephony.uicc.SpnOverride r0;
        java.lang.String r1, $r4;
        java.util.HashMap $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.telephony.uicc.SpnOverride;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.uicc.SpnOverride: java.util.HashMap mCarrierSpnMap>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.uicc.SpnOverride: java.lang.String PARTNER_SPN_OVERRIDE_PATH> = "etc/spn-conf.xml";

        <com.android.internal.telephony.uicc.SpnOverride: java.lang.String LOG_TAG> = "SpnOverride";

        return;
    }
}
