public class org.apache.xalan.templates.ElemWhen extends org.apache.xalan.templates.ElemTemplateElement
{
    static final long serialVersionUID;
    private org.apache.xpath.XPath m_test;

    public void <init>()
    {
        org.apache.xalan.templates.ElemWhen r0;

        r0 := @this: org.apache.xalan.templates.ElemWhen;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        return;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xalan.templates.ElemWhen r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean z0;
        org.apache.xpath.XPath $r2, $r4;
        org.apache.xpath.Expression $r3;

        r0 := @this: org.apache.xalan.templates.ElemWhen;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<org.apache.xalan.templates.ElemWhen: org.apache.xpath.XPath m_test>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $r4 = r0.<org.apache.xalan.templates.ElemWhen: org.apache.xpath.XPath m_test>;

        virtualinvoke $r3.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r4, r1);

     label1:
        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, z0);

        return;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemWhen r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.util.Vector r2;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r3, $r6;
        org.apache.xpath.XPath $r4, $r5;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemWhen;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r3 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        r2 = virtualinvoke $r3.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r4 = r0.<org.apache.xalan.templates.ElemWhen: org.apache.xpath.XPath m_test>;

        if $r4 == null goto label1;

        $r5 = r0.<org.apache.xalan.templates.ElemWhen: org.apache.xpath.XPath m_test>;

        $r6 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i0 = virtualinvoke $r6.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r5.<org.apache.xpath.XPath: void fixupVariables(java.util.Vector,int)>(r2, $i0);

     label1:
        return;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemWhen r0;

        r0 := @this: org.apache.xalan.templates.ElemWhen;

        return "when";
    }

    public org.apache.xpath.XPath getTest()
    {
        org.apache.xalan.templates.ElemWhen r0;
        org.apache.xpath.XPath $r1;

        r0 := @this: org.apache.xalan.templates.ElemWhen;

        $r1 = r0.<org.apache.xalan.templates.ElemWhen: org.apache.xpath.XPath m_test>;

        return $r1;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemWhen r0;

        r0 := @this: org.apache.xalan.templates.ElemWhen;

        return 38;
    }

    public void setTest(org.apache.xpath.XPath)
    {
        org.apache.xalan.templates.ElemWhen r0;
        org.apache.xpath.XPath r1;

        r0 := @this: org.apache.xalan.templates.ElemWhen;

        r1 := @parameter0: org.apache.xpath.XPath;

        r0.<org.apache.xalan.templates.ElemWhen: org.apache.xpath.XPath m_test> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemWhen: long serialVersionUID> = 5984065730262071360L;

        return;
    }
}
