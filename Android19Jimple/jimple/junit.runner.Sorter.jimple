public class junit.runner.Sorter extends java.lang.Object
{

    public void <init>()
    {
        junit.runner.Sorter r0;

        r0 := @this: junit.runner.Sorter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void sortStrings(java.util.Vector, int, int, junit.runner.Sorter$Swapper)
    {
        java.util.Vector r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        junit.runner.Sorter$Swapper r1;
        java.lang.String r2, $r5, $r6, $r8, $r9;
        java.lang.Object $r3, $r4, $r7;

        r0 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: junit.runner.Sorter$Swapper;

        i2 = i0;

        i3 = i1;

        $i4 = i0 + i1;

        $i5 = $i4 / 2;

        $r3 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>($i5);

        r2 = (java.lang.String) $r3;

     label1:
        $r4 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r5 = (java.lang.String) $r4;

        $r6 = (java.lang.String) $r5;

        $i6 = virtualinvoke $r6.<java.lang.String: int compareTo(java.lang.String)>(r2);

        if $i6 >= 0 goto label2;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r7 = virtualinvoke r0.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r8 = (java.lang.String) $r7;

        $r9 = (java.lang.String) $r8;

        $i7 = virtualinvoke r2.<java.lang.String: int compareTo(java.lang.String)>($r9);

        if $i7 >= 0 goto label3;

        i1 = i1 + -1;

        goto label2;

     label3:
        if i0 > i1 goto label4;

        interfaceinvoke r1.<junit.runner.Sorter$Swapper: void swap(java.util.Vector,int,int)>(r0, i0, i1);

        i0 = i0 + 1;

        i1 = i1 + -1;

     label4:
        if i0 <= i1 goto label1;

        if i2 >= i1 goto label5;

        staticinvoke <junit.runner.Sorter: void sortStrings(java.util.Vector,int,int,junit.runner.Sorter$Swapper)>(r0, i2, i1, r1);

     label5:
        if i0 >= i3 goto label6;

        staticinvoke <junit.runner.Sorter: void sortStrings(java.util.Vector,int,int,junit.runner.Sorter$Swapper)>(r0, i0, i3, r1);

     label6:
        return;
    }
}
