public class gov.nist.javax.sip.parser.CallInfoParser extends gov.nist.javax.sip.parser.ParametersParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.CallInfoParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.CallInfoParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.CallInfoParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.CallInfoParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.CallInfoParser r0;
        gov.nist.javax.sip.header.CallInfoList r1, $r5;
        java.lang.Throwable r2, $r31;
        gov.nist.javax.sip.header.CallInfo r3, r4, $r7, $r21;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r6, $r8, $r10, $r11, $r16, $r17, $r18, $r20, $r22, $r25, $r26, $r28, $r29, $r33;
        char $c0, $c1;
        gov.nist.javax.sip.parser.URLParser $r12, $r24;
        gov.nist.javax.sip.address.GenericURI $r13, $r27;
        gov.nist.javax.sip.parser.Lexer $r14, $r30;

        r0 := @this: gov.nist.javax.sip.parser.CallInfoParser;

        $z0 = <gov.nist.javax.sip.parser.CallInfoParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void dbg_enter(java.lang.String)>("CallInfoParser.parse");

     label1:
        $r5 = new gov.nist.javax.sip.header.CallInfoList;

        specialinvoke $r5.<gov.nist.javax.sip.header.CallInfoList: void <init>()>();

        r1 = $r5;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void headerName(int)>(2099);

     label3:
        $r6 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r6.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label8;

        $r7 = new gov.nist.javax.sip.header.CallInfo;

        specialinvoke $r7.<gov.nist.javax.sip.header.CallInfo: void <init>()>();

        r3 = $r7;

        virtualinvoke r3.<gov.nist.javax.sip.header.CallInfo: void setHeaderName(java.lang.String)>("Call-Info");

        $r8 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void SPorHT()>();

        $r10 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

        $r12 = new gov.nist.javax.sip.parser.URLParser;

        $r11 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $r14 = (gov.nist.javax.sip.parser.Lexer) $r11;

        specialinvoke $r12.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r14);

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        virtualinvoke r3.<gov.nist.javax.sip.header.CallInfo: void setInfo(javax.sip.address.URI)>($r13);

        $r16 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(62);

        $r17 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r3);

        virtualinvoke r1.<gov.nist.javax.sip.header.CallInfoList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r3);

     label4:
        $r18 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r18.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 44 goto label3;

        $r20 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r22 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r22.<gov.nist.core.LexerCore: void SPorHT()>();

        $r21 = new gov.nist.javax.sip.header.CallInfo;

        specialinvoke $r21.<gov.nist.javax.sip.header.CallInfo: void <init>()>();

        r4 = $r21;

        $r25 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r25.<gov.nist.core.LexerCore: void SPorHT()>();

        $r26 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r26.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

        $r24 = new gov.nist.javax.sip.parser.URLParser;

        $r29 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $r30 = (gov.nist.javax.sip.parser.Lexer) $r29;

        specialinvoke $r24.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r30);

        $r27 = virtualinvoke $r24.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        virtualinvoke r4.<gov.nist.javax.sip.header.CallInfo: void setInfo(javax.sip.address.URI)>($r27);

        $r28 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r28.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(62);

        $r33 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r33.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r4);

        virtualinvoke r1.<gov.nist.javax.sip.header.CallInfoList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r4);

     label5:
        goto label4;

     label6:
        $r31 := @caughtexception;

        r2 = $r31;

        $z4 = <gov.nist.javax.sip.parser.CallInfoParser: boolean debug>;

        if $z4 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void dbg_leave(java.lang.String)>("CallInfoParser.parse");

     label7:
        throw r2;

     label8:
        $z1 = <gov.nist.javax.sip.parser.CallInfoParser: boolean debug>;

        if $z1 == 0 goto label9;

        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void dbg_leave(java.lang.String)>("CallInfoParser.parse");

     label9:
        return r1;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
