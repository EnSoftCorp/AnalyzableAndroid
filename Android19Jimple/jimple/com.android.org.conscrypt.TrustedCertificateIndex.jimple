public final class com.android.org.conscrypt.TrustedCertificateIndex extends java.lang.Object
{
    private final java.util.Map subjectToTrustAnchors;

    public void <init>()
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors> = $r1;

        return;
    }

    public void <init>(java.util.Set)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.Set r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors> = $r2;

        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void index(java.util.Set)>(r1);

        return;
    }

    private static java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate, java.util.Collection)
    {
        java.security.cert.X509Certificate r0, r6;
        java.util.Collection r1;
        java.security.PublicKey r2, r7, r8;
        java.util.Iterator r3;
        java.security.cert.TrustAnchor r4;
        boolean $z0, $z1;
        java.lang.Object $r9;
        java.lang.Exception $r10;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.util.Collection;

        r2 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.cert.TrustAnchor) $r9;

     label02:
        r6 = virtualinvoke r4.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

     label03:
        if r6 == null goto label07;

     label04:
        r7 = virtualinvoke r6.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

     label05:
        $z1 = virtualinvoke r7.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label01;

     label06:
        return r4;

     label07:
        r8 = virtualinvoke r4.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label08:
        r7 = r8;

        goto label05;

     label09:
        return null;

     label10:
        $r10 := @caughtexception;

        goto label01;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label07 to label08 with label10;
    }

    private void index(java.util.Set)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.Set r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        java.security.cert.TrustAnchor $r4;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.util.Set;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.security.cert.TrustAnchor) $r3;

        virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void index(java.security.cert.TrustAnchor)>($r4);

        goto label1;

     label2:
        return;
    }

    public java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.security.cert.X509Certificate r1, r9;
        javax.security.auth.x500.X500Principal r2;
        java.util.Map r3, $r12;
        java.lang.Throwable r4, $r15;
        java.util.List r5;
        java.util.Iterator r6;
        java.security.cert.TrustAnchor r7;
        java.security.PublicKey r10, r11;
        java.lang.Object $r13, $r14;
        boolean $z0;
        java.lang.Exception $r16;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        r3 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        entermonitor r3;

     label01:
        $r12 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.util.List) $r13;

     label02:
        if r5 != null goto label05;

     label03:
        exitmonitor r3;

     label04:
        return null;

     label05:
        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.security.cert.TrustAnchor) $r14;

     label07:
        r9 = virtualinvoke r7.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

     label08:
        if r9 == null goto label16;

     label09:
        r10 = virtualinvoke r9.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

     label10:
        virtualinvoke r1.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>(r10);

     label11:
        exitmonitor r3;

     label12:
        return r7;

     label13:
        $r15 := @caughtexception;

        r4 = $r15;

     label14:
        exitmonitor r3;

     label15:
        throw r4;

     label16:
        r11 = virtualinvoke r7.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label17:
        r10 = r11;

        goto label10;

     label18:
        exitmonitor r3;

     label19:
        return null;

     label20:
        $r16 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Exception from label07 to label08 with label20;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label20;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Exception from label10 to label11 with label20;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Throwable from label16 to label17 with label13;
        catch java.lang.Throwable from label18 to label19 with label13;
    }

    public java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.security.cert.X509Certificate r1;
        javax.security.auth.x500.X500Principal r2;
        java.util.Map r3, $r7;
        java.lang.Throwable r4, $r9;
        java.util.List r5;
        java.security.cert.TrustAnchor r6;
        java.lang.Object $r8;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        r3 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        entermonitor r3;

     label1:
        $r7 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.util.List) $r8;

     label2:
        if r5 != null goto label5;

     label3:
        exitmonitor r3;

     label4:
        return null;

     label5:
        r6 = staticinvoke <com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate,java.util.Collection)>(r1, r5);

        exitmonitor r3;

     label6:
        return r6;

     label7:
        $r9 := @caughtexception;

        r4 = $r9;

     label8:
        exitmonitor r3;

     label9:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.security.cert.X509Certificate r1;
        java.security.cert.TrustAnchor r2, $r3;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r3 = new java.security.cert.TrustAnchor;

        specialinvoke $r3.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>(r1, null);

        r2 = $r3;

        virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void index(java.security.cert.TrustAnchor)>(r2);

        return r2;
    }

    public void index(java.security.cert.TrustAnchor)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.security.cert.TrustAnchor r1;
        java.security.cert.X509Certificate r2;
        javax.security.auth.x500.X500Principal r3;
        java.util.Map r4, $r7, $r10;
        java.lang.Throwable r5, $r12;
        java.util.List r6;
        java.lang.Object $r8;
        java.util.ArrayList $r9;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.security.cert.TrustAnchor;

        r2 = virtualinvoke r1.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if r2 == null goto label07;

        r3 = virtualinvoke r2.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

     label01:
        r4 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        entermonitor r4;

     label02:
        $r7 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (java.util.List) $r8;

     label03:
        if r6 != null goto label05;

     label04:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>(1);

        r6 = $r9;

        $r10 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r6);

     label05:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r1);

        exitmonitor r4;

     label06:
        return;

     label07:
        r3 = virtualinvoke r1.<java.security.cert.TrustAnchor: javax.security.auth.x500.X500Principal getCA()>();

        goto label01;

     label08:
        $r12 := @caughtexception;

        r5 = $r12;

     label09:
        exitmonitor r4;

     label10:
        throw r5;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void reset()
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.Map r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        interfaceinvoke $r3.<java.util.Map: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void reset(java.util.Set)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.Set r1;
        java.util.Map r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.util.Set;

        r2 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        entermonitor r2;

     label1:
        virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void reset()>();

        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void index(java.util.Set)>(r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
