public class com.android.org.chromium.content.browser.input.WeekPicker extends com.android.org.chromium.content.browser.input.TwoFieldDatePicker
{

    public void <init>(android.content.Context, double, double)
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        android.content.Context r1;
        double d0, d1;
        java.util.Calendar r2;
        android.widget.NumberPicker $r3;
        android.content.res.Resources $r4;
        int $i0, $i2, $i3;
        java.lang.String $r5;
        java.util.TimeZone $r6;
        long $l1;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        r1 := @parameter0: android.content.Context;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<com.android.org.chromium.content.browser.input.TwoFieldDatePicker: void <init>(android.content.Context,double,double)>(r1, d0, d1);

        $r3 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: android.widget.NumberPicker getPositionInYearSpinner()>();

        $r4 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: android.content.res.Resources getResources()>();

        $i0 = <com.android.org.chromium.content.R$string: int accessibility_date_picker_week>;

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        virtualinvoke $r3.<android.widget.NumberPicker: void setContentDescription(java.lang.CharSequence)>($r5);

        $r6 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r6);

        virtualinvoke r2.<java.util.Calendar: void setFirstDayOfWeek(int)>(2);

        virtualinvoke r2.<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>(4);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r2.<java.util.Calendar: void setTimeInMillis(long)>($l1);

        $i2 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getISOWeekYearForDate(java.util.Calendar)>(r2);

        $i3 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getWeekForDate(java.util.Calendar)>(r2);

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: void init(int,int,com.android.org.chromium.content.browser.input.TwoFieldDatePicker$OnMonthOrWeekChangedListener)>($i2, $i3, null);

        return;
    }

    public static java.util.Calendar createDateFromValue(double)
    {
        double d0;
        java.util.Calendar r0;
        java.util.TimeZone $r1;
        long $l0;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r1);

        virtualinvoke r0.<java.util.Calendar: void clear()>();

        virtualinvoke r0.<java.util.Calendar: void setFirstDayOfWeek(int)>(2);

        virtualinvoke r0.<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>(4);

        $l0 = (long) d0;

        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        return r0;
    }

    public static java.util.Calendar createDateFromWeek(int, int)
    {
        int i0, i1;
        java.util.Calendar r0;
        java.util.TimeZone $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r1);

        virtualinvoke r0.<java.util.Calendar: void clear()>();

        virtualinvoke r0.<java.util.Calendar: void setFirstDayOfWeek(int)>(2);

        virtualinvoke r0.<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>(4);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(7, 2);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(1, i0);

        virtualinvoke r0.<java.util.Calendar: void set(int,int)>(3, i1);

        return r0;
    }

    public static int getISOWeekYearForDate(java.util.Calendar)
    {
        java.util.Calendar r0;
        int i0, i1, i2, $i3;

        r0 := @parameter0: java.util.Calendar;

        i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);

        i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);

        i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(3);

        if i1 != 0 goto label2;

        if i2 <= 51 goto label2;

        i0 = i0 + -1;

     label1:
        return i0;

     label2:
        if i1 != 11 goto label1;

        if i2 != 1 goto label1;

        $i3 = i0 + 1;

        return $i3;
    }

    private int getNumberOfWeeks(int)
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        int i0, $i1;
        java.util.Calendar $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar createDateFromWeek(int,int)>(i0, 20);

        $i1 = virtualinvoke $r1.<java.util.Calendar: int getActualMaximum(int)>(3);

        return $i1;
    }

    public static int getWeekForDate(java.util.Calendar)
    {
        java.util.Calendar r0;
        int $i0;

        r0 := @parameter0: java.util.Calendar;

        $i0 = virtualinvoke r0.<java.util.Calendar: int get(int)>(3);

        return $i0;
    }

    protected java.util.Calendar getDateForValue(double)
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        double d0;
        java.util.Calendar $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        d0 := @parameter0: double;

        $r1 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar createDateFromValue(double)>(d0);

        return $r1;
    }

    protected int getMaxPositionInYear(int)
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        int i0, $i1, $i2, $i3;
        java.util.Calendar $r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMaxDate()>();

        $i1 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getISOWeekYearForDate(java.util.Calendar)>($r1);

        if i0 != $i1 goto label1;

        $r2 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMaxDate()>();

        $i3 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getWeekForDate(java.util.Calendar)>($r2);

        return $i3;

     label1:
        $i2 = specialinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: int getNumberOfWeeks(int)>(i0);

        return $i2;
    }

    protected int getMaxYear()
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        $r1 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMaxDate()>();

        $i0 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getISOWeekYearForDate(java.util.Calendar)>($r1);

        return $i0;
    }

    protected int getMinPositionInYear(int)
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        int i0, $i1, $i2;
        java.util.Calendar $r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMinDate()>();

        $i1 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getISOWeekYearForDate(java.util.Calendar)>($r1);

        if i0 != $i1 goto label1;

        $r2 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMinDate()>();

        $i2 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getWeekForDate(java.util.Calendar)>($r2);

        return $i2;

     label1:
        return 1;
    }

    protected int getMinYear()
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        $r1 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMinDate()>();

        $i0 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getISOWeekYearForDate(java.util.Calendar)>($r1);

        return $i0;
    }

    public int getPositionInYear()
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        $i0 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: int getWeek()>();

        return $i0;
    }

    public int getWeek()
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        $r1 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getCurrentDate()>();

        $i0 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getWeekForDate(java.util.Calendar)>($r1);

        return $i0;
    }

    public int getYear()
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        $r1 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getCurrentDate()>();

        $i0 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: int getISOWeekYearForDate(java.util.Calendar)>($r1);

        return $i0;
    }

    protected void setCurrentDate(int, int)
    {
        com.android.org.chromium.content.browser.input.WeekPicker r0;
        int i0, i1;
        java.util.Calendar r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.org.chromium.content.browser.input.WeekPicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar createDateFromWeek(int,int)>(i0, i1);

        $r2 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMinDate()>();

        $z0 = virtualinvoke r1.<java.util.Calendar: boolean before(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMinDate()>();

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: void setCurrentDate(java.util.Calendar)>($r5);

        return;

     label1:
        $r3 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMaxDate()>();

        $z1 = virtualinvoke r1.<java.util.Calendar: boolean after(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r4 = virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: java.util.Calendar getMaxDate()>();

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: void setCurrentDate(java.util.Calendar)>($r4);

        return;

     label2:
        virtualinvoke r0.<com.android.org.chromium.content.browser.input.WeekPicker: void setCurrentDate(java.util.Calendar)>(r1);

        return;
    }
}
