public class gov.nist.core.net.DefaultNetworkLayer extends java.lang.Object implements gov.nist.core.net.NetworkLayer
{
    public static final gov.nist.core.net.DefaultNetworkLayer SINGLETON;
    private javax.net.ssl.SSLServerSocketFactory sslServerSocketFactory;
    private javax.net.ssl.SSLSocketFactory sslSocketFactory;

    static void <clinit>()
    {
        gov.nist.core.net.DefaultNetworkLayer $r0;

        $r0 = new gov.nist.core.net.DefaultNetworkLayer;

        specialinvoke $r0.<gov.nist.core.net.DefaultNetworkLayer: void <init>()>();

        <gov.nist.core.net.DefaultNetworkLayer: gov.nist.core.net.DefaultNetworkLayer SINGLETON> = $r0;

        return;
    }

    private void <init>()
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        javax.net.ServerSocketFactory $r1;
        javax.net.ssl.SSLServerSocketFactory $r2;
        javax.net.SocketFactory $r3;
        javax.net.ssl.SSLSocketFactory $r4;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <javax.net.ssl.SSLServerSocketFactory: javax.net.ServerSocketFactory getDefault()>();

        $r2 = (javax.net.ssl.SSLServerSocketFactory) $r1;

        r0.<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLServerSocketFactory sslServerSocketFactory> = $r2;

        $r3 = staticinvoke <javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()>();

        $r4 = (javax.net.ssl.SSLSocketFactory) $r3;

        r0.<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLSocketFactory sslSocketFactory> = $r4;

        return;
    }

    public java.net.DatagramSocket createDatagramSocket() throws java.net.SocketException
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        java.net.DatagramSocket $r1;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        $r1 = new java.net.DatagramSocket;

        specialinvoke $r1.<java.net.DatagramSocket: void <init>()>();

        return $r1;
    }

    public java.net.DatagramSocket createDatagramSocket(int, java.net.InetAddress) throws java.net.SocketException
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        int i0;
        java.net.InetAddress r1;
        java.net.MulticastSocket r2, $r5;
        java.io.IOException r3, $r6;
        boolean $z0;
        java.net.DatagramSocket $r4;
        java.net.SocketException $r7;
        java.lang.String $r8;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.net.InetAddress;

        $z0 = virtualinvoke r1.<java.net.InetAddress: boolean isMulticastAddress()>();

        if $z0 == 0 goto label4;

     label1:
        $r5 = new java.net.MulticastSocket;

        specialinvoke $r5.<java.net.MulticastSocket: void <init>(int)>(i0);

        r2 = $r5;

        virtualinvoke r2.<java.net.MulticastSocket: void joinGroup(java.net.InetAddress)>(r1);

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.net.SocketException;

        $r8 = virtualinvoke r3.<java.io.IOException: java.lang.String getLocalizedMessage()>();

        specialinvoke $r7.<java.net.SocketException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label4:
        $r4 = new java.net.DatagramSocket;

        specialinvoke $r4.<java.net.DatagramSocket: void <init>(int,java.net.InetAddress)>(i0, r1);

        return $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public javax.net.ssl.SSLServerSocket createSSLServerSocket(int, int, java.net.InetAddress) throws java.io.IOException
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        int i0, i1;
        java.net.InetAddress r1;
        javax.net.ssl.SSLServerSocketFactory $r2;
        java.net.ServerSocket $r3;
        javax.net.ssl.SSLServerSocket $r4;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.net.InetAddress;

        $r2 = r0.<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLServerSocketFactory sslServerSocketFactory>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLServerSocketFactory: java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress)>(i0, i1, r1);

        $r4 = (javax.net.ssl.SSLServerSocket) $r3;

        return $r4;
    }

    public javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress, int) throws java.io.IOException
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        java.net.InetAddress r1;
        int i0;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;
        javax.net.ssl.SSLSocket $r4;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        $r2 = r0.<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>(r1, i0);

        $r4 = (javax.net.ssl.SSLSocket) $r3;

        return $r4;
    }

    public javax.net.ssl.SSLSocket createSSLSocket(java.net.InetAddress, int, java.net.InetAddress) throws java.io.IOException
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        java.net.InetAddress r1, r2;
        int i0;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Socket $r4;
        javax.net.ssl.SSLSocket $r5;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r2 := @parameter2: java.net.InetAddress;

        $r3 = r0.<gov.nist.core.net.DefaultNetworkLayer: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>(r1, i0, r2, 0);

        $r5 = (javax.net.ssl.SSLSocket) $r4;

        return $r5;
    }

    public java.net.ServerSocket createServerSocket(int, int, java.net.InetAddress) throws java.io.IOException
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        int i0, i1;
        java.net.InetAddress r1;
        java.net.ServerSocket $r2;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.net.InetAddress;

        $r2 = new java.net.ServerSocket;

        specialinvoke $r2.<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>(i0, i1, r1);

        return $r2;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int) throws java.io.IOException
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        java.net.InetAddress r1;
        int i0;
        java.net.Socket $r2;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        $r2 = new java.net.Socket;

        specialinvoke $r2.<java.net.Socket: void <init>(java.net.InetAddress,int)>(r1, i0);

        return $r2;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress) throws java.io.IOException
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        java.net.InetAddress r1, r2;
        int i0;
        java.net.Socket $r3, $r4;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r2 := @parameter2: java.net.InetAddress;

        if r2 == null goto label1;

        $r4 = new java.net.Socket;

        specialinvoke $r4.<java.net.Socket: void <init>(java.net.InetAddress,int,java.net.InetAddress,int)>(r1, i0, r2, 0);

        return $r4;

     label1:
        $r3 = new java.net.Socket;

        specialinvoke $r3.<java.net.Socket: void <init>(java.net.InetAddress,int)>(r1, i0);

        return $r3;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int) throws java.io.IOException
    {
        gov.nist.core.net.DefaultNetworkLayer r0;
        java.net.InetAddress r1, r2;
        int i0, i1;
        java.net.Socket r3, $r4, $r5, $r8;
        java.net.InetSocketAddress $r6, $r7;

        r0 := @this: gov.nist.core.net.DefaultNetworkLayer;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r2 := @parameter2: java.net.InetAddress;

        i1 := @parameter3: int;

        if r2 == null goto label1;

        $r8 = new java.net.Socket;

        specialinvoke $r8.<java.net.Socket: void <init>(java.net.InetAddress,int,java.net.InetAddress,int)>(r1, i0, r2, i1);

        return $r8;

     label1:
        if i0 == 0 goto label2;

        $r5 = new java.net.Socket;

        specialinvoke $r5.<java.net.Socket: void <init>()>();

        r3 = $r5;

        $r6 = new java.net.InetSocketAddress;

        specialinvoke $r6.<java.net.InetSocketAddress: void <init>(int)>(i0);

        virtualinvoke r3.<java.net.Socket: void bind(java.net.SocketAddress)>($r6);

        $r7 = new java.net.InetSocketAddress;

        specialinvoke $r7.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r1, i0);

        virtualinvoke r3.<java.net.Socket: void connect(java.net.SocketAddress)>($r7);

        return r3;

     label2:
        $r4 = new java.net.Socket;

        specialinvoke $r4.<java.net.Socket: void <init>(java.net.InetAddress,int)>(r1, i0);

        return $r4;
    }
}
