final class android.app.BackStackState extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    final int mBreadCrumbShortTitleRes;
    final java.lang.CharSequence mBreadCrumbShortTitleText;
    final int mBreadCrumbTitleRes;
    final java.lang.CharSequence mBreadCrumbTitleText;
    final int mIndex;
    final java.lang.String mName;
    final int[] mOps;
    final int mTransition;
    final int mTransitionStyle;

    static void <clinit>()
    {
        android.app.BackStackState$1 $r0;

        $r0 = new android.app.BackStackState$1;

        specialinvoke $r0.<android.app.BackStackState$1: void <init>()>();

        <android.app.BackStackState: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>(android.app.FragmentManagerImpl, android.app.BackStackRecord)
    {
        android.app.BackStackState r0;
        android.app.FragmentManagerImpl r1;
        android.app.BackStackRecord r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        android.app.BackStackRecord$Op r3, r4;
        int[] r5, r6, r7, r8, r9, r10, r11, r12, r13, $r14;
        boolean $z0;
        java.lang.CharSequence $r15, $r18;
        java.lang.String $r16;
        android.app.Fragment $r17, $r22, $r23;
        java.util.ArrayList $r19, $r20, $r21, $r25, $r26;
        java.lang.Object $r24;
        java.lang.IllegalStateException $r27;

        r0 := @this: android.app.BackStackState;

        r1 := @parameter0: android.app.FragmentManagerImpl;

        r2 := @parameter1: android.app.BackStackRecord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = 0;

        r3 = r2.<android.app.BackStackRecord: android.app.BackStackRecord$Op mHead>;

     label01:
        if r3 == null goto label03;

        $r26 = r3.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        if $r26 == null goto label02;

        $r25 = r3.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $i29 = virtualinvoke $r25.<java.util.ArrayList: int size()>();

        i0 = i0 + $i29;

     label02:
        r3 = r3.<android.app.BackStackRecord$Op: android.app.BackStackRecord$Op next>;

        goto label01;

     label03:
        $i14 = r2.<android.app.BackStackRecord: int mNumOp>;

        $i17 = 7 * $i14;

        $i16 = i0 + $i17;

        $r14 = newarray (int)[$i16];

        r0.<android.app.BackStackState: int[] mOps> = $r14;

        $z0 = r2.<android.app.BackStackRecord: boolean mAddToBackStack>;

        if $z0 != 0 goto label04;

        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not on back stack");

        throw $r27;

     label04:
        r4 = r2.<android.app.BackStackRecord: android.app.BackStackRecord$Op mHead>;

        i1 = 0;

     label05:
        if r4 == null goto label12;

        r5 = r0.<android.app.BackStackState: int[] mOps>;

        i2 = i1 + 1;

        $i22 = r4.<android.app.BackStackRecord$Op: int cmd>;

        r5[i1] = $i22;

        r6 = r0.<android.app.BackStackState: int[] mOps>;

        i3 = i2 + 1;

        $r17 = r4.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        if $r17 == null goto label08;

        $r22 = r4.<android.app.BackStackRecord$Op: android.app.Fragment fragment>;

        i4 = $r22.<android.app.Fragment: int mIndex>;

     label06:
        r6[i2] = i4;

        r7 = r0.<android.app.BackStackState: int[] mOps>;

        i5 = i3 + 1;

        $i26 = r4.<android.app.BackStackRecord$Op: int enterAnim>;

        r7[i3] = $i26;

        r8 = r0.<android.app.BackStackState: int[] mOps>;

        i6 = i5 + 1;

        $i27 = r4.<android.app.BackStackRecord$Op: int exitAnim>;

        r8[i5] = $i27;

        r9 = r0.<android.app.BackStackState: int[] mOps>;

        i7 = i6 + 1;

        $i24 = r4.<android.app.BackStackRecord$Op: int popEnterAnim>;

        r9[i6] = $i24;

        r10 = r0.<android.app.BackStackState: int[] mOps>;

        i8 = i7 + 1;

        $i25 = r4.<android.app.BackStackRecord$Op: int popExitAnim>;

        r10[i7] = $i25;

        $r21 = r4.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        if $r21 == null goto label11;

        $r20 = r4.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        i10 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        r12 = r0.<android.app.BackStackState: int[] mOps>;

        i12 = i8 + 1;

        r12[i8] = i10;

        i11 = 0;

        i13 = i12;

     label07:
        if i11 >= i10 goto label09;

        r13 = r0.<android.app.BackStackState: int[] mOps>;

        i15 = i13 + 1;

        $r19 = r4.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        $r24 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r23 = (android.app.Fragment) $r24;

        $i28 = $r23.<android.app.Fragment: int mIndex>;

        r13[i13] = $i28;

        i11 = i11 + 1;

        i13 = i15;

        goto label07;

     label08:
        i4 = -1;

        goto label06;

     label09:
        i9 = i13;

     label10:
        r4 = r4.<android.app.BackStackRecord$Op: android.app.BackStackRecord$Op next>;

        i1 = i9;

        goto label05;

     label11:
        r11 = r0.<android.app.BackStackState: int[] mOps>;

        i9 = i8 + 1;

        r11[i8] = 0;

        goto label10;

     label12:
        $i18 = r2.<android.app.BackStackRecord: int mTransition>;

        r0.<android.app.BackStackState: int mTransition> = $i18;

        $i19 = r2.<android.app.BackStackRecord: int mTransitionStyle>;

        r0.<android.app.BackStackState: int mTransitionStyle> = $i19;

        $r16 = r2.<android.app.BackStackRecord: java.lang.String mName>;

        r0.<android.app.BackStackState: java.lang.String mName> = $r16;

        $i21 = r2.<android.app.BackStackRecord: int mIndex>;

        r0.<android.app.BackStackState: int mIndex> = $i21;

        $i20 = r2.<android.app.BackStackRecord: int mBreadCrumbTitleRes>;

        r0.<android.app.BackStackState: int mBreadCrumbTitleRes> = $i20;

        $r15 = r2.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText>;

        r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText> = $r15;

        $i23 = r2.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes>;

        r0.<android.app.BackStackState: int mBreadCrumbShortTitleRes> = $i23;

        $r18 = r2.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText>;

        r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText> = $r18;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.app.BackStackState r0;
        android.os.Parcel r1;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3;
        android.os.Parcelable$Creator $r4, $r7;
        java.lang.Object $r5, $r8;
        java.lang.CharSequence $r6, $r9;

        r0 := @this: android.app.BackStackState;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.app.BackStackState: int[] mOps> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mTransition> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mTransitionStyle> = $i1;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.app.BackStackState: java.lang.String mName> = $r3;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mIndex> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mBreadCrumbTitleRes> = $i3;

        $r4 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r6 = (java.lang.CharSequence) $r5;

        r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText> = $r6;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.app.BackStackState: int mBreadCrumbShortTitleRes> = $i4;

        $r7 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r9 = (java.lang.CharSequence) $r8;

        r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText> = $r9;

        return;
    }

    public int describeContents()
    {
        android.app.BackStackState r0;

        r0 := @this: android.app.BackStackState;

        return 0;
    }

    public android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl)
    {
        android.app.BackStackState r0;
        android.app.FragmentManagerImpl r1;
        android.app.BackStackRecord r2, $r13;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27;
        android.app.BackStackRecord$Op r3, $r18;
        int[] r4, r5, r6, r7, r8, r9, r10, r12, $r15, $r29, $r36;
        java.util.ArrayList r11, $r20, $r22, $r32;
        android.app.Fragment r14, $r30;
        java.lang.CharSequence $r16, $r19;
        java.lang.String $r17, $r27, $r41;
        boolean $z0, $z1;
        java.lang.StringBuilder $r21, $r24, $r25, $r26, $r28, $r33, $r34, $r35, $r37, $r38, $r39, $r40;
        java.lang.Object $r23, $r31;

        r0 := @this: android.app.BackStackState;

        r1 := @parameter0: android.app.FragmentManagerImpl;

        $r13 = new android.app.BackStackRecord;

        specialinvoke $r13.<android.app.BackStackRecord: void <init>(android.app.FragmentManagerImpl)>(r1);

        r2 = $r13;

        i0 = 0;

        i1 = 0;

     label1:
        $r15 = r0.<android.app.BackStackState: int[] mOps>;

        $i13 = lengthof $r15;

        if i0 >= $i13 goto label8;

        $r18 = new android.app.BackStackRecord$Op;

        specialinvoke $r18.<android.app.BackStackRecord$Op: void <init>()>();

        r3 = $r18;

        r4 = r0.<android.app.BackStackState: int[] mOps>;

        i2 = i0 + 1;

        $i18 = r4[i0];

        r3.<android.app.BackStackRecord$Op: int cmd> = $i18;

        $z0 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z0 == 0 goto label2;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instantiate ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r33 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" op #");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" base fragment #");

        $r36 = r0.<android.app.BackStackState: int[] mOps>;

        $i27 = $r36[i2];

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i27);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r41);

     label2:
        r5 = r0.<android.app.BackStackState: int[] mOps>;

        i3 = i2 + 1;

        i4 = r5[i2];

        if i4 < 0 goto label6;

        $r32 = r1.<android.app.FragmentManagerImpl: java.util.ArrayList mActive>;

        $r31 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        $r30 = (android.app.Fragment) $r31;

        r3.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = $r30;

     label3:
        r6 = r0.<android.app.BackStackState: int[] mOps>;

        i5 = i3 + 1;

        $i22 = r6[i3];

        r3.<android.app.BackStackRecord$Op: int enterAnim> = $i22;

        r7 = r0.<android.app.BackStackState: int[] mOps>;

        i6 = i5 + 1;

        $i20 = r7[i5];

        r3.<android.app.BackStackRecord$Op: int exitAnim> = $i20;

        r8 = r0.<android.app.BackStackState: int[] mOps>;

        i7 = i6 + 1;

        $i21 = r8[i6];

        r3.<android.app.BackStackRecord$Op: int popEnterAnim> = $i21;

        r9 = r0.<android.app.BackStackState: int[] mOps>;

        i8 = i7 + 1;

        $i24 = r9[i7];

        r3.<android.app.BackStackRecord$Op: int popExitAnim> = $i24;

        r10 = r0.<android.app.BackStackState: int[] mOps>;

        i10 = i8 + 1;

        i9 = r10[i8];

        if i9 <= 0 goto label7;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>(int)>(i9);

        r3.<android.app.BackStackRecord$Op: java.util.ArrayList removed> = $r20;

        i11 = 0;

     label4:
        if i11 >= i9 goto label7;

        $z1 = <android.app.FragmentManagerImpl: boolean DEBUG>;

        if $z1 == 0 goto label5;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Instantiate ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" set remove fragment #");

        $r29 = r0.<android.app.BackStackState: int[] mOps>;

        $i25 = $r29[i10];

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("FragmentManager", $r27);

     label5:
        r11 = r1.<android.app.FragmentManagerImpl: java.util.ArrayList mActive>;

        r12 = r0.<android.app.BackStackState: int[] mOps>;

        i12 = i10 + 1;

        $i23 = r12[i10];

        $r23 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>($i23);

        r14 = (android.app.Fragment) $r23;

        $r22 = r3.<android.app.BackStackRecord$Op: java.util.ArrayList removed>;

        virtualinvoke $r22.<java.util.ArrayList: boolean add(java.lang.Object)>(r14);

        i11 = i11 + 1;

        i10 = i12;

        goto label4;

     label6:
        r3.<android.app.BackStackRecord$Op: android.app.Fragment fragment> = null;

        goto label3;

     label7:
        i0 = i10;

        virtualinvoke r2.<android.app.BackStackRecord: void addOp(android.app.BackStackRecord$Op)>(r3);

        i1 = i1 + 1;

        goto label1;

     label8:
        $i15 = r0.<android.app.BackStackState: int mTransition>;

        r2.<android.app.BackStackRecord: int mTransition> = $i15;

        $i14 = r0.<android.app.BackStackState: int mTransitionStyle>;

        r2.<android.app.BackStackRecord: int mTransitionStyle> = $i14;

        $r17 = r0.<android.app.BackStackState: java.lang.String mName>;

        r2.<android.app.BackStackRecord: java.lang.String mName> = $r17;

        $i17 = r0.<android.app.BackStackState: int mIndex>;

        r2.<android.app.BackStackRecord: int mIndex> = $i17;

        r2.<android.app.BackStackRecord: boolean mAddToBackStack> = 1;

        $i16 = r0.<android.app.BackStackState: int mBreadCrumbTitleRes>;

        r2.<android.app.BackStackRecord: int mBreadCrumbTitleRes> = $i16;

        $r16 = r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText>;

        r2.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbTitleText> = $r16;

        $i19 = r0.<android.app.BackStackState: int mBreadCrumbShortTitleRes>;

        r2.<android.app.BackStackRecord: int mBreadCrumbShortTitleRes> = $i19;

        $r19 = r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText>;

        r2.<android.app.BackStackRecord: java.lang.CharSequence mBreadCrumbShortTitleText> = $r19;

        virtualinvoke r2.<android.app.BackStackRecord: void bumpBackStackNesting(int)>(1);

        return r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.app.BackStackState r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r2;
        java.lang.String $r3;
        java.lang.CharSequence $r4, $r5;

        r0 := @this: android.app.BackStackState;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.BackStackState: int[] mOps>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r2);

        $i1 = r0.<android.app.BackStackState: int mTransition>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.app.BackStackState: int mTransitionStyle>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r3 = r0.<android.app.BackStackState: java.lang.String mName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i3 = r0.<android.app.BackStackState: int mIndex>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.app.BackStackState: int mBreadCrumbTitleRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r4 = r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r4, r1, 0);

        $i5 = r0.<android.app.BackStackState: int mBreadCrumbShortTitleRes>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r5 = r0.<android.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText>;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>($r5, r1, 0);

        return;
    }
}
