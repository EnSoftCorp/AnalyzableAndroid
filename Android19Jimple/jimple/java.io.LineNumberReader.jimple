public class java.io.LineNumberReader extends java.io.BufferedReader
{
    private boolean lastWasCR;
    private int lineNumber;
    private boolean markedLastWasCR;
    private int markedLineNumber;

    public void <init>(java.io.Reader)
    {
        java.io.LineNumberReader r0;
        java.io.Reader r1;

        r0 := @this: java.io.LineNumberReader;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);

        r0.<java.io.LineNumberReader: int markedLineNumber> = -1;

        return;
    }

    public void <init>(java.io.Reader, int)
    {
        java.io.LineNumberReader r0;
        java.io.Reader r1;
        int i0;

        r0 := @this: java.io.LineNumberReader;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        specialinvoke r0.<java.io.BufferedReader: void <init>(java.io.Reader,int)>(r1, i0);

        r0.<java.io.LineNumberReader: int markedLineNumber> = -1;

        return;
    }

    public int getLineNumber()
    {
        java.io.LineNumberReader r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int i0;

        r0 := @this: java.io.LineNumberReader;

        r1 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        entermonitor r1;

     label1:
        i0 = r0.<java.io.LineNumberReader: int lineNumber>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void mark(int) throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        int i0, $i1;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        boolean $z0;

        r0 := @this: java.io.LineNumberReader;

        i0 := @parameter0: int;

        r1 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<java.io.BufferedReader: void mark(int)>(i0);

        $i1 = r0.<java.io.LineNumberReader: int lineNumber>;

        r0.<java.io.LineNumberReader: int markedLineNumber> = $i1;

        $z0 = r0.<java.io.LineNumberReader: boolean lastWasCR>;

        r0.<java.io.LineNumberReader: boolean markedLastWasCR> = $z0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int read() throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: java.io.LineNumberReader;

        r1 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        entermonitor r1;

     label01:
        i0 = specialinvoke r0.<java.io.BufferedReader: int read()>();

     label02:
        if i0 != 10 goto label04;

     label03:
        $z0 = r0.<java.io.LineNumberReader: boolean lastWasCR>;

        if $z0 == 0 goto label04;

        i0 = specialinvoke r0.<java.io.BufferedReader: int read()>();

     label04:
        r0.<java.io.LineNumberReader: boolean lastWasCR> = 0;

     label05:
        tableswitch(i0)
        {
            case 10: goto label10;
            case 11: goto label06;
            case 12: goto label06;
            case 13: goto label08;
            default: goto label06;
        };

     label06:
        exitmonitor r1;

     label07:
        return i0;

     label08:
        i0 = 10;

     label09:
        r0.<java.io.LineNumberReader: boolean lastWasCR> = 1;

     label10:
        $i1 = r0.<java.io.LineNumberReader: int lineNumber>;

        $i2 = 1 + $i1;

        r0.<java.io.LineNumberReader: int lineNumber> = $i2;

     label11:
        goto label06;

     label12:
        $r3 := @caughtexception;

        r2 = $r3;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        char[] r1;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;
        char c4;
        boolean $z0;

        r0 := @this: java.io.LineNumberReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        entermonitor r2;

     label01:
        i2 = specialinvoke r0.<java.io.BufferedReader: int read(char[],int,int)>(r1, i0, i1);

     label02:
        if i2 != -1 goto label21;

     label03:
        exitmonitor r2;

     label04:
        return -1;

     label05:
        if i3 >= i2 goto label19;

     label06:
        $i5 = i0 + i3;

        c4 = r1[$i5];

     label07:
        if c4 != 13 goto label10;

     label08:
        $i9 = r0.<java.io.LineNumberReader: int lineNumber>;

        $i8 = 1 + $i9;

        r0.<java.io.LineNumberReader: int lineNumber> = $i8;

        r0.<java.io.LineNumberReader: boolean lastWasCR> = 1;

     label09:
        goto label22;

     label10:
        if c4 != 10 goto label17;

     label11:
        $z0 = r0.<java.io.LineNumberReader: boolean lastWasCR>;

        if $z0 != 0 goto label12;

        $i6 = r0.<java.io.LineNumberReader: int lineNumber>;

        $i7 = 1 + $i6;

        r0.<java.io.LineNumberReader: int lineNumber> = $i7;

     label12:
        r0.<java.io.LineNumberReader: boolean lastWasCR> = 0;

     label13:
        goto label22;

     label14:
        $r4 := @caughtexception;

        r3 = $r4;

     label15:
        exitmonitor r2;

     label16:
        throw r3;

     label17:
        r0.<java.io.LineNumberReader: boolean lastWasCR> = 0;

     label18:
        goto label22;

     label19:
        exitmonitor r2;

     label20:
        return i2;

     label21:
        i3 = 0;

        goto label05;

     label22:
        i3 = i3 + 1;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label11 to label12 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label17 to label18 with label14;
        catch java.lang.Throwable from label19 to label20 with label14;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.lang.String r3;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: java.io.LineNumberReader;

        r1 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $z0 = r0.<java.io.LineNumberReader: boolean lastWasCR>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<java.io.LineNumberReader: void chompNewline()>();

        r0.<java.io.LineNumberReader: boolean lastWasCR> = 0;

     label2:
        r3 = specialinvoke r0.<java.io.BufferedReader: java.lang.String readLine()>();

     label3:
        if r3 == null goto label5;

     label4:
        $i0 = r0.<java.io.LineNumberReader: int lineNumber>;

        $i1 = 1 + $i0;

        r0.<java.io.LineNumberReader: int lineNumber> = $i1;

     label5:
        exitmonitor r1;

     label6:
        return r3;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void reset() throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int $i0;
        boolean $z0;

        r0 := @this: java.io.LineNumberReader;

        r1 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<java.io.BufferedReader: void reset()>();

        $i0 = r0.<java.io.LineNumberReader: int markedLineNumber>;

        r0.<java.io.LineNumberReader: int lineNumber> = $i0;

        $z0 = r0.<java.io.LineNumberReader: boolean markedLastWasCR>;

        r0.<java.io.LineNumberReader: boolean lastWasCR> = $z0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setLineNumber(int)
    {
        java.io.LineNumberReader r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: java.io.LineNumberReader;

        i0 := @parameter0: int;

        r1 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        entermonitor r1;

     label1:
        r0.<java.io.LineNumberReader: int lineNumber> = i0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long skip(long) throws java.io.IOException
    {
        java.io.LineNumberReader r0;
        long l0, l2, $l4;
        java.lang.Object r1;
        int i1, $i6;
        java.lang.Throwable r2, $r8;
        byte $b3, $b5;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6;

        r0 := @this: java.io.LineNumberReader;

        l0 := @parameter0: long;

        $b3 = l0 cmp 0L;

        if $b3 >= 0 goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("charCount < 0: ");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r3;

     label01:
        r1 = r0.<java.io.LineNumberReader: java.lang.Object lock>;

        entermonitor r1;

        i1 = 0;

     label02:
        $l4 = (long) i1;

        $b5 = $l4 cmp l0;

        if $b5 >= 0 goto label07;

     label03:
        $i6 = virtualinvoke r0.<java.io.LineNumberReader: int read()>();

        if $i6 != -1 goto label12;

     label04:
        l2 = (long) i1;

     label05:
        exitmonitor r1;

     label06:
        return l2;

     label07:
        exitmonitor r1;

     label08:
        return l0;

     label09:
        $r8 := @caughtexception;

        r2 = $r8;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

     label12:
        i1 = i1 + 1;

        goto label02;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }
}
