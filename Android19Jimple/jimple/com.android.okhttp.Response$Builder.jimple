public class com.android.okhttp.Response$Builder extends java.lang.Object
{
    private com.android.okhttp.Response$Body body;
    private final int code;
    private final com.android.okhttp.internal.http.RawHeaders headers;
    private com.android.okhttp.Response redirectedBy;
    private final com.android.okhttp.Request request;

    public void <init>(com.android.okhttp.Request, int)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Request r1;
        int i0;
        com.android.okhttp.internal.http.RawHeaders $r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Request;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.okhttp.internal.http.RawHeaders;

        specialinvoke $r2.<com.android.okhttp.internal.http.RawHeaders: void <init>()>();

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.internal.http.RawHeaders headers> = $r2;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("request == null");

        throw $r4;

     label1:
        if i0 > 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("code <= 0");

        throw $r3;

     label2:
        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Request request> = r1;

        r0.<com.android.okhttp.Response$Builder: int code> = i0;

        return;
    }

    static com.android.okhttp.Request access$000(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Request $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Request request>;

        return $r1;
    }

    static int access$100(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        int $i0;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $i0 = r0.<com.android.okhttp.Response$Builder: int code>;

        return $i0;
    }

    static com.android.okhttp.internal.http.RawHeaders access$200(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.internal.http.RawHeaders $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.internal.http.RawHeaders headers>;

        return $r1;
    }

    static com.android.okhttp.Response$Body access$300(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response$Body $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Body body>;

        return $r1;
    }

    static com.android.okhttp.Response access$400(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response redirectedBy>;

        return $r1;
    }

    public com.android.okhttp.Response$Builder addHeader(java.lang.String, java.lang.String)
    {
        com.android.okhttp.Response$Builder r0;
        java.lang.String r1, r2;
        com.android.okhttp.internal.http.RawHeaders $r3;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.internal.http.RawHeaders headers>;

        virtualinvoke $r3.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public com.android.okhttp.Response$Builder body(com.android.okhttp.Response$Body)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response$Body r1;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Response$Body;

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Body body> = r1;

        return r0;
    }

    public com.android.okhttp.Response build()
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Request $r1;
        int $i0;
        com.android.okhttp.Response $r2;
        java.lang.IllegalStateException $r3, $r4;

        r0 := @this: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Request request>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Response has no request.");

        throw $r4;

     label1:
        $i0 = r0.<com.android.okhttp.Response$Builder: int code>;

        if $i0 != -1 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Response has no code.");

        throw $r3;

     label2:
        $r2 = new com.android.okhttp.Response;

        specialinvoke $r2.<com.android.okhttp.Response: void <init>(com.android.okhttp.Response$Builder,com.android.okhttp.Response$1)>(r0, null);

        return $r2;
    }

    public com.android.okhttp.Response$Builder header(java.lang.String, java.lang.String)
    {
        com.android.okhttp.Response$Builder r0;
        java.lang.String r1, r2;
        com.android.okhttp.internal.http.RawHeaders $r3;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.internal.http.RawHeaders headers>;

        virtualinvoke $r3.<com.android.okhttp.internal.http.RawHeaders: void set(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public com.android.okhttp.Response$Builder redirectedBy(com.android.okhttp.Response)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response r1;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Response;

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response redirectedBy> = r1;

        return r0;
    }
}
