public class java.security.spec.ECParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
{
    private final int cofactor;
    private final java.security.spec.EllipticCurve curve;
    private final java.lang.String curveName;
    private final java.security.spec.ECPoint generator;
    private final java.math.BigInteger order;

    public void <init>(java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger, int)
    {
        java.security.spec.ECParameterSpec r0;
        java.security.spec.EllipticCurve r1;
        java.security.spec.ECPoint r2;
        java.math.BigInteger r3;
        int i0;

        r0 := @this: java.security.spec.ECParameterSpec;

        r1 := @parameter0: java.security.spec.EllipticCurve;

        r2 := @parameter1: java.security.spec.ECPoint;

        r3 := @parameter2: java.math.BigInteger;

        i0 := @parameter3: int;

        specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int,java.lang.String)>(r1, r2, r3, i0, null);

        return;
    }

    public void <init>(java.security.spec.EllipticCurve, java.security.spec.ECPoint, java.math.BigInteger, int, java.lang.String)
    {
        java.security.spec.ECParameterSpec r0;
        java.security.spec.EllipticCurve r1, $r5;
        java.security.spec.ECPoint r2, $r6;
        java.math.BigInteger r3, $r7, $r8, $r9;
        int i0, $i1, $i2;
        java.lang.String r4;
        java.lang.IllegalArgumentException $r10, $r11;
        java.lang.NullPointerException $r12, $r13, $r14;

        r0 := @this: java.security.spec.ECParameterSpec;

        r1 := @parameter0: java.security.spec.EllipticCurve;

        r2 := @parameter1: java.security.spec.ECPoint;

        r3 := @parameter2: java.math.BigInteger;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve curve> = r1;

        r0.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint generator> = r2;

        r0.<java.security.spec.ECParameterSpec: java.math.BigInteger order> = r3;

        r0.<java.security.spec.ECParameterSpec: int cofactor> = i0;

        r0.<java.security.spec.ECParameterSpec: java.lang.String curveName> = r4;

        $r5 = r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve curve>;

        if $r5 != null goto label1;

        $r13 = new java.lang.NullPointerException;

        specialinvoke $r13.<java.lang.NullPointerException: void <init>(java.lang.String)>("curve == null");

        throw $r13;

     label1:
        $r6 = r0.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint generator>;

        if $r6 != null goto label2;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("generator == null");

        throw $r14;

     label2:
        $r7 = r0.<java.security.spec.ECParameterSpec: java.math.BigInteger order>;

        if $r7 != null goto label3;

        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>("order == null");

        throw $r12;

     label3:
        $r9 = r0.<java.security.spec.ECParameterSpec: java.math.BigInteger order>;

        $r8 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $i1 = virtualinvoke $r9.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r8);

        if $i1 > 0 goto label4;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("order <= 0");

        throw $r11;

     label4:
        $i2 = r0.<java.security.spec.ECParameterSpec: int cofactor>;

        if $i2 > 0 goto label5;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cofactor <= 0");

        throw $r10;

     label5:
        return;
    }

    public int getCofactor()
    {
        java.security.spec.ECParameterSpec r0;
        int $i0;

        r0 := @this: java.security.spec.ECParameterSpec;

        $i0 = r0.<java.security.spec.ECParameterSpec: int cofactor>;

        return $i0;
    }

    public java.security.spec.EllipticCurve getCurve()
    {
        java.security.spec.ECParameterSpec r0;
        java.security.spec.EllipticCurve $r1;

        r0 := @this: java.security.spec.ECParameterSpec;

        $r1 = r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve curve>;

        return $r1;
    }

    public java.lang.String getCurveName()
    {
        java.security.spec.ECParameterSpec r0;
        java.lang.String $r1;

        r0 := @this: java.security.spec.ECParameterSpec;

        $r1 = r0.<java.security.spec.ECParameterSpec: java.lang.String curveName>;

        return $r1;
    }

    public java.security.spec.ECPoint getGenerator()
    {
        java.security.spec.ECParameterSpec r0;
        java.security.spec.ECPoint $r1;

        r0 := @this: java.security.spec.ECParameterSpec;

        $r1 = r0.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint generator>;

        return $r1;
    }

    public java.math.BigInteger getOrder()
    {
        java.security.spec.ECParameterSpec r0;
        java.math.BigInteger $r1;

        r0 := @this: java.security.spec.ECParameterSpec;

        $r1 = r0.<java.security.spec.ECParameterSpec: java.math.BigInteger order>;

        return $r1;
    }
}
