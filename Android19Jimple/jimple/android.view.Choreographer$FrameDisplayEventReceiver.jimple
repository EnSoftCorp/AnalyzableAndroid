final class android.view.Choreographer$FrameDisplayEventReceiver extends android.view.DisplayEventReceiver implements java.lang.Runnable
{
    private int mFrame;
    private boolean mHavePendingVsync;
    private long mTimestampNanos;
    final android.view.Choreographer this$0;

    public void <init>(android.view.Choreographer, android.os.Looper)
    {
        android.view.Choreographer$FrameDisplayEventReceiver r0;
        android.view.Choreographer r1;
        android.os.Looper r2;

        r0 := @this: android.view.Choreographer$FrameDisplayEventReceiver;

        r1 := @parameter0: android.view.Choreographer;

        r2 := @parameter1: android.os.Looper;

        r0.<android.view.Choreographer$FrameDisplayEventReceiver: android.view.Choreographer this$0> = r1;

        specialinvoke r0.<android.view.DisplayEventReceiver: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void onVsync(long, int, int)
    {
        android.view.Choreographer$FrameDisplayEventReceiver r0;
        long l0, l3, $l5, $l7;
        int i1, i2;
        android.os.Message r1;
        byte $b4;
        boolean $z0;
        android.view.Choreographer $r2, $r4;
        android.view.Choreographer$FrameHandler $r3, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        float $f0, $f1;
        java.lang.String $r11;

        r0 := @this: android.view.Choreographer$FrameDisplayEventReceiver;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i1 == 0 goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Choreographer", "Received vsync from secondary display, but we don\'t support this case yet.  Choreographer needs a way to explicitly request vsync for a specific display to ensure it doesn\'t lose track of its scheduled vsync.");

        virtualinvoke r0.<android.view.Choreographer$FrameDisplayEventReceiver: void scheduleVsync()>();

        return;

     label1:
        l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $b4 = l0 cmp l3;

        if $b4 <= 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Frame time is ");

        $l7 = l0 - l3;

        $f0 = (float) $l7;

        $f1 = 1.0E-6F * $f0;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms in the future!  Check that graphics HAL is generating vsync ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timestamps using the correct timebase.");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Choreographer", $r11);

        l0 = l3;

     label2:
        $z0 = r0.<android.view.Choreographer$FrameDisplayEventReceiver: boolean mHavePendingVsync>;

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Choreographer", "Already have a pending vsync event.  There should only be one at a time.");

     label3:
        r0.<android.view.Choreographer$FrameDisplayEventReceiver: long mTimestampNanos> = l0;

        r0.<android.view.Choreographer$FrameDisplayEventReceiver: int mFrame> = i2;

        $r2 = r0.<android.view.Choreographer$FrameDisplayEventReceiver: android.view.Choreographer this$0>;

        $r3 = staticinvoke <android.view.Choreographer: android.view.Choreographer$FrameHandler access$300(android.view.Choreographer)>($r2);

        r1 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>($r3, r0);

        virtualinvoke r1.<android.os.Message: void setAsynchronous(boolean)>(1);

        $r4 = r0.<android.view.Choreographer$FrameDisplayEventReceiver: android.view.Choreographer this$0>;

        $r5 = staticinvoke <android.view.Choreographer: android.view.Choreographer$FrameHandler access$300(android.view.Choreographer)>($r4);

        $l5 = l0 / 1000000L;

        virtualinvoke $r5.<android.view.Choreographer$FrameHandler: boolean sendMessageAtTime(android.os.Message,long)>(r1, $l5);

        return;

     label4:
        r0.<android.view.Choreographer$FrameDisplayEventReceiver: boolean mHavePendingVsync> = 1;

        goto label3;
    }

    public void run()
    {
        android.view.Choreographer$FrameDisplayEventReceiver r0;
        int $i0;
        long $l1;
        android.view.Choreographer $r1;

        r0 := @this: android.view.Choreographer$FrameDisplayEventReceiver;

        r0.<android.view.Choreographer$FrameDisplayEventReceiver: boolean mHavePendingVsync> = 0;

        $r1 = r0.<android.view.Choreographer$FrameDisplayEventReceiver: android.view.Choreographer this$0>;

        $l1 = r0.<android.view.Choreographer$FrameDisplayEventReceiver: long mTimestampNanos>;

        $i0 = r0.<android.view.Choreographer$FrameDisplayEventReceiver: int mFrame>;

        virtualinvoke $r1.<android.view.Choreographer: void doFrame(long,int)>($l1, $i0);

        return;
    }
}
