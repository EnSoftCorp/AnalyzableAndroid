public abstract class gov.nist.javax.sip.parser.ChallengeParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ChallengeParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ChallengeParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    protected void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ChallengeParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ChallengeParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public void parse(gov.nist.javax.sip.header.AuthenticationHeader) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ChallengeParser r0;
        gov.nist.javax.sip.header.AuthenticationHeader r1;
        gov.nist.core.Token r2;
        java.text.ParseException r3, $r15;
        char c0, $c1;
        gov.nist.core.LexerCore $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r14, $r16;
        java.lang.String $r9;

        r0 := @this: gov.nist.javax.sip.parser.ChallengeParser;

        r1 := @parameter0: gov.nist.javax.sip.header.AuthenticationHeader;

        $r4 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r4.<gov.nist.core.LexerCore: void SPorHT()>();

        $r5 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r7 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r8 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void SPorHT()>();

        $r9 = virtualinvoke r2.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.AuthenticationHeader: void setScheme(java.lang.String)>($r9);

     label1:
        $r10 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r10.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: void parseParameter(gov.nist.javax.sip.header.AuthenticationHeader)>(r1);

        $r11 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: void SPorHT()>();

        $r12 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r12.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

     label2:
        if c0 == 10 goto label6;

        if c0 != 0 goto label3;

        return;

     label3:
        $r14 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r16 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: void SPorHT()>();

     label4:
        goto label1;

     label5:
        $r15 := @caughtexception;

        r3 = $r15;

        throw r3;

     label6:
        return;

        catch java.text.ParseException from label1 to label2 with label5;
        catch java.text.ParseException from label3 to label4 with label5;
    }

    protected void parseParameter(gov.nist.javax.sip.header.AuthenticationHeader) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ChallengeParser r0;
        gov.nist.javax.sip.header.AuthenticationHeader r1;
        java.lang.Throwable r2, $r4;
        boolean $z0, $z1, $z2;
        gov.nist.core.NameValue $r3;

        r0 := @this: gov.nist.javax.sip.parser.ChallengeParser;

        r1 := @parameter0: gov.nist.javax.sip.header.AuthenticationHeader;

        $z0 = <gov.nist.javax.sip.parser.ChallengeParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: void dbg_enter(java.lang.String)>("parseParameter");

     label1:
        $r3 = virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.NameValue nameValue(char)>(61);

        virtualinvoke r1.<gov.nist.javax.sip.header.AuthenticationHeader: void setParameter(gov.nist.core.NameValue)>($r3);

     label2:
        $z1 = <gov.nist.javax.sip.parser.ChallengeParser: boolean debug>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: void dbg_leave(java.lang.String)>("parseParameter");

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        $z2 = <gov.nist.javax.sip.parser.ChallengeParser: boolean debug>;

        if $z2 == 0 goto label5;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: void dbg_leave(java.lang.String)>("parseParameter");

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
