public class org.apache.http.protocol.ResponseContent extends java.lang.Object implements org.apache.http.HttpResponseInterceptor
{

    public void <init>()
    {
        org.apache.http.protocol.ResponseContent r0;

        r0 := @this: org.apache.http.protocol.ResponseContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.protocol.ResponseContent r0;
        org.apache.http.HttpResponse r1;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.ProtocolVersion r3;
        org.apache.http.HttpEntity r4;
        int i0;
        long l1, $l3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.http.StatusLine $r5, $r6;
        byte $b2;
        org.apache.http.Header $r7, $r8, $r9, $r10;
        org.apache.http.HttpVersion $r11;
        java.lang.String $r12;
        org.apache.http.ProtocolException $r13, $r15;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: org.apache.http.protocol.ResponseContent;

        r1 := @parameter0: org.apache.http.HttpResponse;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r14;

     label1:
        $z0 = interfaceinvoke r1.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>("Transfer-Encoding");

        if $z0 == 0 goto label2;

        $r15 = new org.apache.http.ProtocolException;

        specialinvoke $r15.<org.apache.http.ProtocolException: void <init>(java.lang.String)>("Transfer-encoding header already present");

        throw $r15;

     label2:
        $z1 = interfaceinvoke r1.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>("Content-Length");

        if $z1 == 0 goto label3;

        $r13 = new org.apache.http.ProtocolException;

        specialinvoke $r13.<org.apache.http.ProtocolException: void <init>(java.lang.String)>("Content-Length header already present");

        throw $r13;

     label3:
        $r5 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        r3 = interfaceinvoke $r5.<org.apache.http.StatusLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        r4 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if r4 == null goto label8;

        l1 = interfaceinvoke r4.<org.apache.http.HttpEntity: long getContentLength()>();

        $z2 = interfaceinvoke r4.<org.apache.http.HttpEntity: boolean isChunked()>();

        if $z2 == 0 goto label7;

        $r11 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z5 = virtualinvoke r3.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r11);

        if $z5 != 0 goto label7;

        interfaceinvoke r1.<org.apache.http.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked");

     label4:
        $r8 = interfaceinvoke r4.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        if $r8 == null goto label5;

        $z4 = interfaceinvoke r1.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>("Content-Type");

        if $z4 != 0 goto label5;

        $r10 = interfaceinvoke r4.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        interfaceinvoke r1.<org.apache.http.HttpResponse: void addHeader(org.apache.http.Header)>($r10);

     label5:
        $r7 = interfaceinvoke r4.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        if $r7 == null goto label6;

        $z3 = interfaceinvoke r1.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>("Content-Encoding");

        if $z3 != 0 goto label6;

        $r9 = interfaceinvoke r4.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        interfaceinvoke r1.<org.apache.http.HttpResponse: void addHeader(org.apache.http.Header)>($r9);

     label6:
        return;

     label7:
        $b2 = l1 cmp 0L;

        if $b2 < 0 goto label4;

        $l3 = interfaceinvoke r4.<org.apache.http.HttpEntity: long getContentLength()>();

        $r12 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        interfaceinvoke r1.<org.apache.http.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Content-Length", $r12);

        goto label4;

     label8:
        $r6 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        i0 = interfaceinvoke $r6.<org.apache.http.StatusLine: int getStatusCode()>();

        if i0 == 204 goto label6;

        if i0 == 304 goto label6;

        if i0 == 205 goto label6;

        interfaceinvoke r1.<org.apache.http.HttpResponse: void addHeader(java.lang.String,java.lang.String)>("Content-Length", "0");

        return;
    }
}
