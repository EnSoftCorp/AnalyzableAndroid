public class android.preference.VolumePreference$SeekBarVolumizer extends java.lang.Object implements android.widget.SeekBar$OnSeekBarChangeListener, android.os.Handler$Callback
{
    private static final int CHECK_RINGTONE_PLAYBACK_DELAY_MS;
    private static final int MSG_SET_STREAM_VOLUME;
    private static final int MSG_START_SAMPLE;
    private static final int MSG_STOP_SAMPLE;
    private android.media.AudioManager mAudioManager;
    private android.content.Context mContext;
    private android.os.Handler mHandler;
    private int mLastProgress;
    private int mOriginalStreamVolume;
    private android.media.Ringtone mRingtone;
    private android.widget.SeekBar mSeekBar;
    private int mStreamType;
    private int mVolumeBeforeMute;
    private android.database.ContentObserver mVolumeObserver;
    final android.preference.VolumePreference this$0;

    public void <init>(android.preference.VolumePreference, android.content.Context, android.widget.SeekBar, int)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.preference.VolumePreference r1;
        android.content.Context r2;
        android.widget.SeekBar r3;
        int i0;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        r1 := @parameter0: android.preference.VolumePreference;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.widget.SeekBar;

        i0 := @parameter3: int;

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void <init>(android.preference.VolumePreference,android.content.Context,android.widget.SeekBar,int,android.net.Uri)>(r1, r2, r3, i0, null);

        return;
    }

    public void <init>(android.preference.VolumePreference, android.content.Context, android.widget.SeekBar, int, android.net.Uri)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.preference.VolumePreference r1;
        android.content.Context r2;
        android.widget.SeekBar r3;
        int i0;
        android.net.Uri r4;
        android.os.HandlerThread r5, $r10;
        android.preference.VolumePreference$SeekBarVolumizer$1 $r6;
        android.os.Handler $r7, $r11;
        java.lang.Object $r8;
        android.media.AudioManager $r9;
        android.os.Looper $r12;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        r1 := @parameter0: android.preference.VolumePreference;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.widget.SeekBar;

        i0 := @parameter3: int;

        r4 := @parameter4: android.net.Uri;

        r0.<android.preference.VolumePreference$SeekBarVolumizer: android.preference.VolumePreference this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mLastProgress> = -1;

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mVolumeBeforeMute> = -1;

        $r6 = new android.preference.VolumePreference$SeekBarVolumizer$1;

        $r7 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        specialinvoke $r6.<android.preference.VolumePreference$SeekBarVolumizer$1: void <init>(android.preference.VolumePreference$SeekBarVolumizer,android.os.Handler)>(r0, $r7);

        r0.<android.preference.VolumePreference$SeekBarVolumizer: android.database.ContentObserver mVolumeObserver> = $r6;

        r0.<android.preference.VolumePreference$SeekBarVolumizer: android.content.Context mContext> = r2;

        $r8 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("audio");

        $r9 = (android.media.AudioManager) $r8;

        r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.AudioManager mAudioManager> = $r9;

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType> = i0;

        r0.<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar mSeekBar> = r3;

        $r10 = new android.os.HandlerThread;

        specialinvoke $r10.<android.os.HandlerThread: void <init>(java.lang.String)>("VolumePreference.CallbackHandler");

        r5 = $r10;

        virtualinvoke r5.<android.os.HandlerThread: void start()>();

        $r11 = new android.os.Handler;

        $r12 = virtualinvoke r5.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r11.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r12, r0);

        r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler> = $r11;

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void initSeekBar(android.widget.SeekBar,android.net.Uri)>(r3, r4);

        return;
    }

    static void access$000(android.preference.VolumePreference$SeekBarVolumizer)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;

        r0 := @parameter0: android.preference.VolumePreference$SeekBarVolumizer;

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postStopSample()>();

        return;
    }

    static android.widget.SeekBar access$100(android.preference.VolumePreference$SeekBarVolumizer)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.widget.SeekBar $r1;

        r0 := @parameter0: android.preference.VolumePreference$SeekBarVolumizer;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        return $r1;
    }

    static android.media.AudioManager access$200(android.preference.VolumePreference$SeekBarVolumizer)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.media.AudioManager $r1;

        r0 := @parameter0: android.preference.VolumePreference$SeekBarVolumizer;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        return $r1;
    }

    static int access$300(android.preference.VolumePreference$SeekBarVolumizer)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        int $i0;

        r0 := @parameter0: android.preference.VolumePreference$SeekBarVolumizer;

        $i0 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType>;

        return $i0;
    }

    private void initSeekBar(android.widget.SeekBar, android.net.Uri)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.widget.SeekBar r1;
        android.net.Uri r2, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.media.AudioManager $r3, $r4;
        android.content.Context $r5, $r10;
        android.content.ContentResolver $r6;
        java.lang.String[] $r7;
        java.lang.String $r8;
        android.database.ContentObserver $r11;
        android.media.Ringtone $r12, $r13, $r14;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        r1 := @parameter0: android.widget.SeekBar;

        r2 := @parameter1: android.net.Uri;

        $r3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i0 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType>;

        $i1 = virtualinvoke $r3.<android.media.AudioManager: int getStreamMaxVolume(int)>($i0);

        virtualinvoke r1.<android.widget.SeekBar: void setMax(int)>($i1);

        $r4 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType>;

        $i3 = virtualinvoke $r4.<android.media.AudioManager: int getStreamVolume(int)>($i2);

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mOriginalStreamVolume> = $i3;

        $i4 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mOriginalStreamVolume>;

        virtualinvoke r1.<android.widget.SeekBar: void setProgress(int)>($i4);

        virtualinvoke r1.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(r0);

        $r5 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = <android.provider.Settings$System: java.lang.String[] VOLUME_SETTINGS>;

        $i5 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType>;

        $r8 = $r7[$i5];

        $r9 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>($r8);

        $r11 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.database.ContentObserver mVolumeObserver>;

        virtualinvoke $r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r9, 0, $r11);

        if r2 != null goto label1;

        $i8 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType>;

        if $i8 != 2 goto label3;

        r2 = <android.provider.Settings$System: android.net.Uri DEFAULT_RINGTONE_URI>;

     label1:
        $r10 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.content.Context mContext>;

        $r13 = staticinvoke <android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>($r10, r2);

        r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.Ringtone mRingtone> = $r13;

        $r12 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.Ringtone mRingtone>;

        if $r12 == null goto label2;

        $r14 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.Ringtone mRingtone>;

        $i6 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType>;

        virtualinvoke $r14.<android.media.Ringtone: void setStreamType(int)>($i6);

     label2:
        return;

     label3:
        $i7 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType>;

        if $i7 != 5 goto label4;

        r2 = <android.provider.Settings$System: android.net.Uri DEFAULT_NOTIFICATION_URI>;

        goto label1;

     label4:
        r2 = <android.provider.Settings$System: android.net.Uri DEFAULT_ALARM_ALERT_URI>;

        goto label1;
    }

    private void onStartSample()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        boolean $z0;
        android.preference.VolumePreference $r1;
        android.media.Ringtone $r2, $r3;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        $z0 = virtualinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: boolean isSamplePlaying()>();

        if $z0 != 0 goto label1;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.preference.VolumePreference this$0>;

        virtualinvoke $r1.<android.preference.VolumePreference: void onSampleStarting(android.preference.VolumePreference$SeekBarVolumizer)>(r0);

        $r2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.Ringtone mRingtone>;

        if $r2 == null goto label1;

        $r3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.Ringtone mRingtone>;

        virtualinvoke $r3.<android.media.Ringtone: void play()>();

     label1:
        return;
    }

    private void onStopSample()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.media.Ringtone $r1, $r2;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.Ringtone mRingtone>;

        if $r1 == null goto label1;

        $r2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.Ringtone mRingtone>;

        virtualinvoke $r2.<android.media.Ringtone: void stop()>();

     label1:
        return;
    }

    private void postStartSample()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.os.Handler r1, $r3, $r4;
        android.os.Message r2;
        long l0;
        boolean $z0;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        $r3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(1);

        r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        $r4 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        r2 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        $z0 = virtualinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: boolean isSamplePlaying()>();

        if $z0 == 0 goto label2;

        l0 = 1000L;

     label1:
        virtualinvoke r1.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, l0);

        return;

     label2:
        l0 = 0L;

        goto label1;
    }

    private void postStopSample()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.os.Handler $r1, $r2, $r3, $r4;
        android.os.Message $r5;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(1);

        $r2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(2);

        $r4 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        $r3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        $r5 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>($r5);

        return;
    }

    public void changeVolumeBy(int)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        int i0, $i1;
        android.widget.SeekBar $r1, $r2;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        i0 := @parameter0: int;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r1.<android.widget.SeekBar: void incrementProgressBy(int)>(i0);

        $r2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        $i1 = virtualinvoke $r2.<android.widget.SeekBar: int getProgress()>();

        virtualinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postSetVolume(int)>($i1);

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postStartSample()>();

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mVolumeBeforeMute> = -1;

        return;
    }

    public android.widget.SeekBar getSeekBar()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.widget.SeekBar $r1;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        return $r1;
    }

    public boolean handleMessage(android.os.Message)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.os.Message r1;
        int $i0, $i1, $i3, $i4;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        android.media.AudioManager $r6;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid SeekBarVolumizer message: ");

        $i1 = r1.<android.os.Message: int what>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("VolumePreference", $r5);

     label2:
        return 1;

     label3:
        $r6 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i4 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType>;

        $i3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mLastProgress>;

        virtualinvoke $r6.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i4, $i3, 0);

        goto label2;

     label4:
        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void onStartSample()>();

        goto label2;

     label5:
        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void onStopSample()>();

        goto label2;
    }

    public boolean isSamplePlaying()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.media.Ringtone $r1, $r2;
        boolean $z0;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.Ringtone mRingtone>;

        if $r1 == null goto label1;

        $r2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.Ringtone mRingtone>;

        $z0 = virtualinvoke $r2.<android.media.Ringtone: boolean isPlaying()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void muteVolume()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        int $i0, $i1, $i2, $i3;
        android.widget.SeekBar $r1, $r2, $r3;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        $i0 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mVolumeBeforeMute>;

        if $i0 == -1 goto label1;

        $r3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        $i2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mVolumeBeforeMute>;

        virtualinvoke $r3.<android.widget.SeekBar: void setProgress(int)>($i2);

        $i3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mVolumeBeforeMute>;

        virtualinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postSetVolume(int)>($i3);

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postStartSample()>();

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mVolumeBeforeMute> = -1;

        return;

     label1:
        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        $i1 = virtualinvoke $r1.<android.widget.SeekBar: int getProgress()>();

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mVolumeBeforeMute> = $i1;

        $r2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r2.<android.widget.SeekBar: void setProgress(int)>(0);

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postStopSample()>();

        virtualinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postSetVolume(int)>(0);

        return;
    }

    public void onProgressChanged(android.widget.SeekBar, int, boolean)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.widget.SeekBar r1;
        int i0;
        boolean z0;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        r1 := @parameter0: android.widget.SeekBar;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postSetVolume(int)>(i0);

        return;
    }

    public void onRestoreInstanceState(android.preference.VolumePreference$VolumeStore)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.preference.VolumePreference$VolumeStore r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        r1 := @parameter0: android.preference.VolumePreference$VolumeStore;

        $i0 = r1.<android.preference.VolumePreference$VolumeStore: int volume>;

        if $i0 == -1 goto label1;

        $i1 = r1.<android.preference.VolumePreference$VolumeStore: int originalVolume>;

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mOriginalStreamVolume> = $i1;

        $i2 = r1.<android.preference.VolumePreference$VolumeStore: int volume>;

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mLastProgress> = $i2;

        $i3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mLastProgress>;

        virtualinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postSetVolume(int)>($i3);

     label1:
        return;
    }

    public void onSaveInstanceState(android.preference.VolumePreference$VolumeStore)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.preference.VolumePreference$VolumeStore r1;
        int $i0, $i1, $i2;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        r1 := @parameter0: android.preference.VolumePreference$VolumeStore;

        $i0 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mLastProgress>;

        if $i0 < 0 goto label1;

        $i1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mLastProgress>;

        r1.<android.preference.VolumePreference$VolumeStore: int volume> = $i1;

        $i2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mOriginalStreamVolume>;

        r1.<android.preference.VolumePreference$VolumeStore: int originalVolume> = $i2;

     label1:
        return;
    }

    public void onStartTrackingTouch(android.widget.SeekBar)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.widget.SeekBar r1;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        r1 := @parameter0: android.widget.SeekBar;

        return;
    }

    public void onStopTrackingTouch(android.widget.SeekBar)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.widget.SeekBar r1;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        r1 := @parameter0: android.widget.SeekBar;

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postStartSample()>();

        return;
    }

    void postSetVolume(int)
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        int i0;
        android.os.Handler $r1, $r2, $r3;
        android.os.Message $r4;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        i0 := @parameter0: int;

        r0.<android.preference.VolumePreference$SeekBarVolumizer: int mLastProgress> = i0;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(0);

        $r3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        $r2 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(0);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        return;
    }

    public void revertVolume()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        int $i0, $i1;
        android.media.AudioManager $r1;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.media.AudioManager mAudioManager>;

        $i1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mStreamType>;

        $i0 = r0.<android.preference.VolumePreference$SeekBarVolumizer: int mOriginalStreamVolume>;

        virtualinvoke $r1.<android.media.AudioManager: void setStreamVolume(int,int,int)>($i1, $i0, 0);

        return;
    }

    public void startSample()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postStartSample()>();

        return;
    }

    public void stop()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        android.database.ContentObserver $r3;
        android.widget.SeekBar $r4;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postStopSample()>();

        $r1 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.database.ContentObserver mVolumeObserver>;

        virtualinvoke $r2.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r3);

        $r4 = r0.<android.preference.VolumePreference$SeekBarVolumizer: android.widget.SeekBar mSeekBar>;

        virtualinvoke $r4.<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)>(null);

        return;
    }

    public void stopSample()
    {
        android.preference.VolumePreference$SeekBarVolumizer r0;

        r0 := @this: android.preference.VolumePreference$SeekBarVolumizer;

        specialinvoke r0.<android.preference.VolumePreference$SeekBarVolumizer: void postStopSample()>();

        return;
    }

    public static void <clinit>()
    {
        <android.preference.VolumePreference$SeekBarVolumizer: int MSG_STOP_SAMPLE> = 2;

        <android.preference.VolumePreference$SeekBarVolumizer: int MSG_START_SAMPLE> = 1;

        <android.preference.VolumePreference$SeekBarVolumizer: int MSG_SET_STREAM_VOLUME> = 0;

        <android.preference.VolumePreference$SeekBarVolumizer: int CHECK_RINGTONE_PLAYBACK_DELAY_MS> = 1000;

        return;
    }
}
