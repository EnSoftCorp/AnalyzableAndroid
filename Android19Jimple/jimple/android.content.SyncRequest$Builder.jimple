public class android.content.SyncRequest$Builder extends java.lang.Object
{
    private static final int SYNC_TARGET_ADAPTER;
    private static final int SYNC_TARGET_SERVICE;
    private static final int SYNC_TARGET_UNKNOWN;
    private static final int SYNC_TYPE_ONCE;
    private static final int SYNC_TYPE_PERIODIC;
    private static final int SYNC_TYPE_UNKNOWN;
    private android.accounts.Account mAccount;
    private java.lang.String mAuthority;
    private android.content.ComponentName mComponentName;
    private android.os.Bundle mCustomExtras;
    private boolean mDisallowMetered;
    private boolean mExpedited;
    private boolean mIgnoreBackoff;
    private boolean mIgnoreSettings;
    private boolean mIsManual;
    private boolean mNoRetry;
    private int mPriority;
    private long mRxBytes;
    private android.os.Bundle mSyncConfigExtras;
    private long mSyncFlexTimeSecs;
    private long mSyncRunTimeSecs;
    private int mSyncTarget;
    private int mSyncType;
    private long mTxBytes;

    public void <init>()
    {
        android.content.SyncRequest$Builder r0;

        r0 := @this: android.content.SyncRequest$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.SyncRequest$Builder: long mTxBytes> = -1L;

        r0.<android.content.SyncRequest$Builder: long mRxBytes> = -1L;

        r0.<android.content.SyncRequest$Builder: int mPriority> = 0;

        r0.<android.content.SyncRequest$Builder: int mSyncType> = 0;

        r0.<android.content.SyncRequest$Builder: int mSyncTarget> = 0;

        return;
    }

    static long access$100(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        long $l0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $l0 = r0.<android.content.SyncRequest$Builder: long mSyncFlexTimeSecs>;

        return $l0;
    }

    static android.os.Bundle access$1000(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        return $r1;
    }

    static boolean access$1100(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $z0 = r0.<android.content.SyncRequest$Builder: boolean mDisallowMetered>;

        return $z0;
    }

    static long access$1200(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        long $l0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $l0 = r0.<android.content.SyncRequest$Builder: long mTxBytes>;

        return $l0;
    }

    static long access$1300(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        long $l0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $l0 = r0.<android.content.SyncRequest$Builder: long mRxBytes>;

        return $l0;
    }

    static long access$200(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        long $l0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $l0 = r0.<android.content.SyncRequest$Builder: long mSyncRunTimeSecs>;

        return $l0;
    }

    static android.accounts.Account access$300(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        android.accounts.Account $r1;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: android.accounts.Account mAccount>;

        return $r1;
    }

    static java.lang.String access$400(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: java.lang.String mAuthority>;

        return $r1;
    }

    static android.content.ComponentName access$500(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        android.content.ComponentName $r1;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: android.content.ComponentName mComponentName>;

        return $r1;
    }

    static int access$600(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        int $i0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $i0 = r0.<android.content.SyncRequest$Builder: int mSyncType>;

        return $i0;
    }

    static int access$700(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        int $i0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $i0 = r0.<android.content.SyncRequest$Builder: int mSyncTarget>;

        return $i0;
    }

    static boolean access$800(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        boolean $z0;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $z0 = r0.<android.content.SyncRequest$Builder: boolean mExpedited>;

        return $z0;
    }

    static android.os.Bundle access$900(android.content.SyncRequest$Builder)
    {
        android.content.SyncRequest$Builder r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras>;

        return $r1;
    }

    private void setupInterval(long, long)
    {
        android.content.SyncRequest$Builder r0;
        long l0, l1;
        byte $b2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.content.SyncRequest$Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $b2 = l1 cmp l0;

        if $b2 <= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specified run time for the sync must be after the specified flex time.");

        throw $r1;

     label1:
        r0.<android.content.SyncRequest$Builder: long mSyncRunTimeSecs> = l0;

        r0.<android.content.SyncRequest$Builder: long mSyncFlexTimeSecs> = l1;

        return;
    }

    private void validatePeriodicExtras(android.os.Bundle)
    {
        android.content.SyncRequest$Builder r0;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.content.SyncRequest$Builder;

        r1 := @parameter0: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("force", 0);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("do_not_retry", 0);

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("ignore_backoff", 0);

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("ignore_settings", 0);

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("initialize", 0);

        if $z4 != 0 goto label1;

        $z5 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("force", 0);

        if $z5 != 0 goto label1;

        $z6 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("expedited", 0);

        if $z6 == 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal extras were set");

        throw $r2;

     label2:
        return;
    }

    public android.content.SyncRequest build()
    {
        android.content.SyncRequest$Builder r0;
        android.os.Bundle $r1, $r2, $r3, $r4, $r5, $r6, $r10, $r11, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        long $l0, $l1;
        int $i2, $i3, $i4, $i5;
        android.content.SyncRequest $r7;
        java.lang.IllegalArgumentException $r8, $r9, $r14, $r15;
        java.lang.String $r12;
        android.accounts.Account $r13;

        r0 := @this: android.content.SyncRequest$Builder;

        $r1 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras>;

        if $r1 != null goto label01;

        $r20 = new android.os.Bundle;

        specialinvoke $r20.<android.os.Bundle: void <init>()>();

        r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras> = $r20;

     label01:
        $r2 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras>;

        staticinvoke <android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>($r2);

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras> = $r3;

        $z0 = r0.<android.content.SyncRequest$Builder: boolean mIgnoreBackoff>;

        if $z0 == 0 goto label02;

        $r22 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r22.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("ignore_backoff", 1);

     label02:
        $z1 = r0.<android.content.SyncRequest$Builder: boolean mDisallowMetered>;

        if $z1 == 0 goto label03;

        $r21 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r21.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("disallow_metered", 1);

     label03:
        $z2 = r0.<android.content.SyncRequest$Builder: boolean mIgnoreSettings>;

        if $z2 == 0 goto label04;

        $r18 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r18.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("ignore_settings", 1);

     label04:
        $z3 = r0.<android.content.SyncRequest$Builder: boolean mNoRetry>;

        if $z3 == 0 goto label05;

        $r19 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r19.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("do_not_retry", 1);

     label05:
        $z4 = r0.<android.content.SyncRequest$Builder: boolean mExpedited>;

        if $z4 == 0 goto label06;

        $r16 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r16.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("expedited", 1);

     label06:
        $z5 = r0.<android.content.SyncRequest$Builder: boolean mIsManual>;

        if $z5 == 0 goto label07;

        $r17 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        virtualinvoke $r17.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("force", 1);

     label07:
        $r4 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        $l0 = r0.<android.content.SyncRequest$Builder: long mTxBytes>;

        virtualinvoke $r4.<android.os.Bundle: void putLong(java.lang.String,long)>("expected_upload", $l0);

        $r5 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        $l1 = r0.<android.content.SyncRequest$Builder: long mRxBytes>;

        virtualinvoke $r5.<android.os.Bundle: void putLong(java.lang.String,long)>("expected_download", $l1);

        $r6 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        $i2 = r0.<android.content.SyncRequest$Builder: int mPriority>;

        virtualinvoke $r6.<android.os.Bundle: void putInt(java.lang.String,int)>("sync_priority", $i2);

        $i4 = r0.<android.content.SyncRequest$Builder: int mSyncType>;

        if $i4 != 1 goto label09;

        $r11 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras>;

        specialinvoke r0.<android.content.SyncRequest$Builder: void validatePeriodicExtras(android.os.Bundle)>($r11);

        $r10 = r0.<android.content.SyncRequest$Builder: android.os.Bundle mSyncConfigExtras>;

        specialinvoke r0.<android.content.SyncRequest$Builder: void validatePeriodicExtras(android.os.Bundle)>($r10);

        $r13 = r0.<android.content.SyncRequest$Builder: android.accounts.Account mAccount>;

        if $r13 != null goto label08;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Account must not be null for periodic sync.");

        throw $r14;

     label08:
        $r12 = r0.<android.content.SyncRequest$Builder: java.lang.String mAuthority>;

        if $r12 != null goto label10;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must not be null for periodic sync.");

        throw $r15;

     label09:
        $i3 = r0.<android.content.SyncRequest$Builder: int mSyncType>;

        if $i3 != 0 goto label10;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must call either syncOnce() or syncPeriodic()");

        throw $r8;

     label10:
        $i5 = r0.<android.content.SyncRequest$Builder: int mSyncTarget>;

        if $i5 != 0 goto label11;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must specify an adapter with setSyncAdapter(Account, String");

        throw $r9;

     label11:
        $r7 = new android.content.SyncRequest;

        specialinvoke $r7.<android.content.SyncRequest: void <init>(android.content.SyncRequest$Builder)>(r0);

        return $r7;
    }

    public android.content.SyncRequest$Builder setDisallowMetered(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mDisallowMetered> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setExpedited(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mExpedited> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setExtras(android.os.Bundle)
    {
        android.content.SyncRequest$Builder r0;
        android.os.Bundle r1;

        r0 := @this: android.content.SyncRequest$Builder;

        r1 := @parameter0: android.os.Bundle;

        r0.<android.content.SyncRequest$Builder: android.os.Bundle mCustomExtras> = r1;

        return r0;
    }

    public android.content.SyncRequest$Builder setIgnoreBackoff(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mIgnoreBackoff> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setIgnoreSettings(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mIgnoreSettings> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setManual(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mIsManual> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setNoRetry(boolean)
    {
        android.content.SyncRequest$Builder r0;
        boolean z0;

        r0 := @this: android.content.SyncRequest$Builder;

        z0 := @parameter0: boolean;

        r0.<android.content.SyncRequest$Builder: boolean mNoRetry> = z0;

        return r0;
    }

    public android.content.SyncRequest$Builder setPriority(int)
    {
        android.content.SyncRequest$Builder r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.content.SyncRequest$Builder;

        i0 := @parameter0: int;

        if i0 < -2 goto label1;

        if i0 <= 2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Priority must be within range [-2, 2]");

        throw $r1;

     label2:
        r0.<android.content.SyncRequest$Builder: int mPriority> = i0;

        return r0;
    }

    public android.content.SyncRequest$Builder setSyncAdapter(android.accounts.Account, java.lang.String)
    {
        android.content.SyncRequest$Builder r0;
        android.accounts.Account r1;
        java.lang.String r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: android.content.SyncRequest$Builder;

        r1 := @parameter0: android.accounts.Account;

        r2 := @parameter1: java.lang.String;

        $i0 = r0.<android.content.SyncRequest$Builder: int mSyncTarget>;

        if $i0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sync target has already been defined.");

        throw $r4;

     label1:
        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Authority must be non-empty");

        throw $r3;

     label2:
        r0.<android.content.SyncRequest$Builder: int mSyncTarget> = 2;

        r0.<android.content.SyncRequest$Builder: android.accounts.Account mAccount> = r1;

        r0.<android.content.SyncRequest$Builder: java.lang.String mAuthority> = r2;

        r0.<android.content.SyncRequest$Builder: android.content.ComponentName mComponentName> = null;

        return r0;
    }

    public android.content.SyncRequest$Builder setTransferSize(long, long)
    {
        android.content.SyncRequest$Builder r0;
        long l0, l1;

        r0 := @this: android.content.SyncRequest$Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0.<android.content.SyncRequest$Builder: long mRxBytes> = l0;

        r0.<android.content.SyncRequest$Builder: long mTxBytes> = l1;

        return r0;
    }

    public android.content.SyncRequest$Builder syncOnce()
    {
        android.content.SyncRequest$Builder r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.content.SyncRequest$Builder;

        $i0 = r0.<android.content.SyncRequest$Builder: int mSyncType>;

        if $i0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sync type has already been defined.");

        throw $r1;

     label1:
        r0.<android.content.SyncRequest$Builder: int mSyncType> = 2;

        specialinvoke r0.<android.content.SyncRequest$Builder: void setupInterval(long,long)>(0L, 0L);

        return r0;
    }

    public android.content.SyncRequest$Builder syncPeriodic(long, long)
    {
        android.content.SyncRequest$Builder r0;
        long l0, l1;
        int $i2;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.content.SyncRequest$Builder;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i2 = r0.<android.content.SyncRequest$Builder: int mSyncType>;

        if $i2 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Sync type has already been defined.");

        throw $r1;

     label1:
        r0.<android.content.SyncRequest$Builder: int mSyncType> = 1;

        specialinvoke r0.<android.content.SyncRequest$Builder: void setupInterval(long,long)>(l0, l1);

        return r0;
    }

    public static void <clinit>()
    {
        <android.content.SyncRequest$Builder: int SYNC_TYPE_PERIODIC> = 1;

        <android.content.SyncRequest$Builder: int SYNC_TYPE_ONCE> = 2;

        <android.content.SyncRequest$Builder: int SYNC_TARGET_UNKNOWN> = 0;

        <android.content.SyncRequest$Builder: int SYNC_TARGET_SERVICE> = 1;

        <android.content.SyncRequest$Builder: int SYNC_TARGET_ADAPTER> = 2;

        return;
    }
}
