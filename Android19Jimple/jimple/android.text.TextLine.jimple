class android.text.TextLine extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final int TAB_INCREMENT;
    private static final android.text.TextLine[] sCached;
    private final android.text.SpanSet mCharacterStyleSpanSet;
    private char[] mChars;
    private boolean mCharsValid;
    private int mDir;
    private android.text.Layout$Directions mDirections;
    private boolean mHasTabs;
    private int mLen;
    private final android.text.SpanSet mMetricAffectingSpanSpanSet;
    private android.text.TextPaint mPaint;
    private final android.text.SpanSet mReplacementSpanSpanSet;
    private android.text.Spanned mSpanned;
    private int mStart;
    private android.text.Layout$TabStops mTabs;
    private java.lang.CharSequence mText;
    private final android.text.TextPaint mWorkPaint;

    static void <clinit>()
    {
        android.text.TextLine[] $r0;

        <android.text.TextLine: int TAB_INCREMENT> = 20;

        <android.text.TextLine: boolean DEBUG> = 0;

        $r0 = newarray (android.text.TextLine)[3];

        <android.text.TextLine: android.text.TextLine[] sCached> = $r0;

        return;
    }

    void <init>()
    {
        android.text.TextLine r0;
        android.text.TextPaint $r1;
        android.text.SpanSet $r2, $r3, $r4;

        r0 := @this: android.text.TextLine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.text.TextPaint;

        specialinvoke $r1.<android.text.TextPaint: void <init>()>();

        r0.<android.text.TextLine: android.text.TextPaint mWorkPaint> = $r1;

        $r2 = new android.text.SpanSet;

        specialinvoke $r2.<android.text.SpanSet: void <init>(java.lang.Class)>(class "android/text/style/MetricAffectingSpan");

        r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet> = $r2;

        $r3 = new android.text.SpanSet;

        specialinvoke $r3.<android.text.SpanSet: void <init>(java.lang.Class)>(class "android/text/style/CharacterStyle");

        r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet> = $r3;

        $r4 = new android.text.SpanSet;

        specialinvoke $r4.<android.text.SpanSet: void <init>(java.lang.Class)>(class "android/text/style/ReplacementSpan");

        r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet> = $r4;

        return;
    }

    private float drawRun(android.graphics.Canvas, int, int, boolean, float, int, int, int, boolean)
    {
        android.text.TextLine r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, $i5;
        boolean z0, z1, z2;
        float f0, f1, $f2, $f3, $f4;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        f0 := @parameter4: float;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        z1 := @parameter8: boolean;

        $i5 = r0.<android.text.TextLine: int mDir>;

        if $i5 != 1 goto label2;

        z2 = 1;

     label1:
        if z2 != z0 goto label3;

        $f3 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(i0, i1, i1, z0, null);

        f1 = neg $f3;

        $f4 = f0 + f1;

        specialinvoke r0.<android.text.TextLine: float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(i0, i1, i1, z0, r1, $f4, i2, i3, i4, null, 0);

        return f1;

     label2:
        z2 = 0;

        goto label1;

     label3:
        $f2 = specialinvoke r0.<android.text.TextLine: float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(i0, i1, i1, z0, r1, f0, i2, i3, i4, null, z1);

        return $f2;
    }

    private void drawTextRun(android.graphics.Canvas, android.text.TextPaint, int, int, int, int, boolean, float, int)
    {
        android.text.TextLine r0;
        android.graphics.Canvas r1;
        android.text.TextPaint r2;
        int i0, i1, i2, i3, i4, i6, i7, i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1;
        float f0, $f1, $f2;
        byte b5;
        java.lang.CharSequence $r3;
        char[] $r4;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 := @parameter6: boolean;

        f0 := @parameter7: float;

        i4 := @parameter8: int;

        if z0 == 0 goto label2;

        b5 = 1;

     label1:
        $z1 = r0.<android.text.TextLine: boolean mCharsValid>;

        if $z1 == 0 goto label3;

        i7 = i1 - i0;

        i8 = i3 - i2;

        $r4 = r0.<android.text.TextLine: char[] mChars>;

        $f2 = (float) i4;

        virtualinvoke r1.<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)>($r4, i0, i7, i2, i8, f0, $f2, b5, r2);

        return;

     label2:
        b5 = 0;

        goto label1;

     label3:
        i6 = r0.<android.text.TextLine: int mStart>;

        $r3 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i11 = i6 + i0;

        $i12 = i6 + i1;

        $i9 = i6 + i2;

        $i10 = i6 + i3;

        $f1 = (float) i4;

        virtualinvoke r1.<android.graphics.Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,int,android.graphics.Paint)>($r3, $i11, $i12, $i9, $i10, f0, $f1, b5, r2);

        return;
    }

    private static void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt, android.text.TextPaint)
    {
        android.graphics.Paint$FontMetricsInt r0;
        android.text.TextPaint r1;
        int i0, i1, i2, i3, i4;

        r0 := @parameter0: android.graphics.Paint$FontMetricsInt;

        r1 := @parameter1: android.text.TextPaint;

        i0 = r0.<android.graphics.Paint$FontMetricsInt: int top>;

        i1 = r0.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i2 = r0.<android.graphics.Paint$FontMetricsInt: int descent>;

        i3 = r0.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i4 = r0.<android.graphics.Paint$FontMetricsInt: int leading>;

        virtualinvoke r1.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r0);

        staticinvoke <android.text.TextLine: void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int)>(r0, i0, i1, i2, i3, i4);

        return;
    }

    private int getOffsetBeforeAfter(int, int, int, boolean, int, boolean)
    {
        android.text.TextLine r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i11, i13, i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        boolean z0, z1, $z2, $z3;
        android.text.TextPaint r1, $r7;
        android.text.style.MetricAffectingSpan[] r2, $r13;
        android.text.style.ReplacementSpan r3;
        byte b10, b12;
        java.lang.CharSequence r4, $r6, $r8;
        android.text.style.MetricAffectingSpan r5;
        android.text.Spanned $r9, $r10, $r11, $r14;
        java.lang.Object[] $r12, $r15;
        char[] $r16;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

        z1 := @parameter5: boolean;

        if i0 < 0 goto label02;

        if z1 == 0 goto label04;

        i5 = r0.<android.text.TextLine: int mLen>;

     label01:
        if i3 != i5 goto label06;

     label02:
        if z1 == 0 goto label05;

        $r8 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i22 = r0.<android.text.TextLine: int mStart>;

        $i21 = i3 + $i22;

        $i24 = staticinvoke <android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>($r8, $i21);

        $i23 = r0.<android.text.TextLine: int mStart>;

        i4 = $i24 - $i23;

     label03:
        return i4;

     label04:
        i5 = 0;

        goto label01;

     label05:
        $r6 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i17 = r0.<android.text.TextLine: int mStart>;

        $i16 = i3 + $i17;

        $i18 = staticinvoke <android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>($r6, $i16);

        $i20 = r0.<android.text.TextLine: int mStart>;

        $i19 = $i18 - $i20;

        return $i19;

     label06:
        r1 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r7 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r1.<android.text.TextPaint: void set(android.text.TextPaint)>($r7);

        i6 = i1;

        $r9 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        if $r9 != null goto label10;

        i4 = i2;

     label07:
        if z0 == 0 goto label19;

        b10 = 1;

     label08:
        if z1 == 0 goto label20;

        b12 = 0;

     label09:
        $z2 = r0.<android.text.TextLine: boolean mCharsValid>;

        if $z2 == 0 goto label21;

        $r16 = r0.<android.text.TextLine: char[] mChars>;

        $i42 = i4 - i6;

        $i41 = virtualinvoke r1.<android.text.TextPaint: int getTextRunCursor(char[],int,int,int,int,int)>($r16, i6, $i42, b10, i3, b12);

        return $i41;

     label10:
        if z1 == 0 goto label15;

        i7 = i3 + 1;

     label11:
        $i27 = r0.<android.text.TextLine: int mStart>;

        i8 = i2 + $i27;

     label12:
        $r10 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i25 = r0.<android.text.TextLine: int mStart>;

        $i26 = i6 + $i25;

        $i30 = interfaceinvoke $r10.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>($i26, i8, class "android/text/style/MetricAffectingSpan");

        $i28 = r0.<android.text.TextLine: int mStart>;

        i4 = $i30 - $i28;

        if i4 < i7 goto label16;

        $r11 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i29 = r0.<android.text.TextLine: int mStart>;

        $i31 = i6 + $i29;

        $i32 = r0.<android.text.TextLine: int mStart>;

        $i33 = i4 + $i32;

        $r15 = interfaceinvoke $r11.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i31, $i33, class "android/text/style/MetricAffectingSpan");

        $r13 = (android.text.style.MetricAffectingSpan[]) $r15;

        $r14 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $r12 = staticinvoke <android.text.TextUtils: java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class)>($r13, $r14, class "android/text/style/MetricAffectingSpan");

        r2 = (android.text.style.MetricAffectingSpan[]) $r12;

        $i36 = lengthof r2;

        if $i36 <= 0 goto label07;

        r3 = null;

        i9 = 0;

     label13:
        i11 = lengthof r2;

        if i9 >= i11 goto label18;

        r5 = r2[i9];

        $z3 = r5 instanceof android.text.style.ReplacementSpan;

        if $z3 == 0 goto label17;

        r3 = (android.text.style.ReplacementSpan) r5;

     label14:
        i9 = i9 + 1;

        goto label13;

     label15:
        i7 = i3;

        goto label11;

     label16:
        i6 = i4;

        goto label12;

     label17:
        virtualinvoke r5.<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>(r1);

        goto label14;

     label18:
        if r3 == null goto label07;

        if z1 != 0 goto label03;

        return i6;

     label19:
        b10 = 0;

        goto label08;

     label20:
        b12 = 2;

        goto label09;

     label21:
        r4 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i35 = r0.<android.text.TextLine: int mStart>;

        i14 = i6 + $i35;

        $i34 = r0.<android.text.TextLine: int mStart>;

        i13 = i4 + $i34;

        $i40 = r0.<android.text.TextLine: int mStart>;

        i15 = i3 + $i40;

        $i39 = virtualinvoke r1.<android.text.TextPaint: int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int)>(r4, i14, i13, b10, i15, b12);

        $i38 = r0.<android.text.TextLine: int mStart>;

        $i37 = $i39 - $i38;

        return $i37;
    }

    private float handleReplacement(android.text.style.ReplacementSpan, android.text.TextPaint, int, int, boolean, android.graphics.Canvas, float, int, int, int, android.graphics.Paint$FontMetricsInt, boolean)
    {
        android.text.TextLine r0;
        android.text.style.ReplacementSpan r1;
        android.text.TextPaint r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14;
        boolean z0, z1, z2;
        android.graphics.Canvas r3;
        float f0, f1;
        android.graphics.Paint$FontMetricsInt r4;
        java.lang.CharSequence $r5, $r6;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.text.style.ReplacementSpan;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        r3 := @parameter5: android.graphics.Canvas;

        f0 := @parameter6: float;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        r4 := @parameter10: android.graphics.Paint$FontMetricsInt;

        z1 := @parameter11: boolean;

        $i13 = r0.<android.text.TextLine: int mStart>;

        i5 = i0 + $i13;

        $i12 = r0.<android.text.TextLine: int mStart>;

        i6 = i1 + $i12;

        if z1 != 0 goto label1;

        f1 = 0.0F;

        if r3 == null goto label4;

        f1 = 0.0F;

        if z0 == 0 goto label4;

     label1:
        if r4 == null goto label8;

        z2 = 1;

     label2:
        i7 = 0;

        i9 = 0;

        i8 = 0;

        i11 = 0;

        i10 = 0;

        if z2 == 0 goto label3;

        i7 = r4.<android.graphics.Paint$FontMetricsInt: int top>;

        i9 = r4.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i8 = r4.<android.graphics.Paint$FontMetricsInt: int descent>;

        i11 = r4.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i10 = r4.<android.graphics.Paint$FontMetricsInt: int leading>;

     label3:
        $r5 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i14 = virtualinvoke r1.<android.text.style.ReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)>(r2, $r5, i5, i6, r4);

        f1 = (float) $i14;

        if z2 == 0 goto label4;

        staticinvoke <android.text.TextLine: void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int)>(r4, i7, i9, i8, i11, i10);

     label4:
        if r3 == null goto label6;

        if z0 == 0 goto label5;

        f0 = f0 - f1;

     label5:
        $r6 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        virtualinvoke r1.<android.text.style.ReplacementSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>(r3, $r6, i5, i6, f0, i2, i3, i4, r2);

     label6:
        if z0 == 0 goto label7;

        f1 = neg f1;

     label7:
        return f1;

     label8:
        z2 = 0;

        goto label2;
    }

    private float handleRun(int, int, int, boolean, android.graphics.Canvas, float, int, int, int, android.graphics.Paint$FontMetricsInt, boolean)
    {
        android.text.TextLine r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46;
        boolean z0, z1, z2, z3, z4, $z5;
        android.graphics.Canvas r1;
        float f0, f1, $f2, $f3, $f4, $f5;
        android.graphics.Paint$FontMetricsInt r2;
        android.text.TextPaint r3, r6, r8, $r13, $r18, $r32, $r35;
        android.text.style.ReplacementSpan r4;
        android.text.style.MetricAffectingSpan r5;
        android.text.Spanned $r7, $r9, $r11;
        android.text.SpanSet $r10, $r12, $r14, $r15, $r16, $r17, $r19, $r21, $r26, $r27, $r30, $r34;
        int[] $r20, $r22, $r28, $r29;
        java.lang.Object[] $r23, $r33;
        android.text.style.CharacterStyle[] $r24;
        android.text.style.CharacterStyle $r25;
        android.text.style.MetricAffectingSpan[] $r31;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: android.graphics.Canvas;

        f0 := @parameter5: float;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        r2 := @parameter9: android.graphics.Paint$FontMetricsInt;

        z1 := @parameter10: boolean;

        if i0 != i1 goto label02;

        r8 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r35 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r8.<android.text.TextPaint: void set(android.text.TextPaint)>($r35);

        if r2 == null goto label01;

        staticinvoke <android.text.TextLine: void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint)>(r2, r8);

     label01:
        return 0.0F;

     label02:
        $r7 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        if $r7 != null goto label06;

        r6 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r32 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r6.<android.text.TextPaint: void set(android.text.TextPaint)>($r32);

        if z1 != 0 goto label03;

        if i1 >= i1 goto label05;

     label03:
        z4 = 1;

     label04:
        $f5 = specialinvoke r0.<android.text.TextLine: float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(r6, i0, i1, i0, i2, z0, r1, f0, i3, i4, i5, r2, z4);

        return $f5;

     label05:
        z4 = 0;

        goto label04;

     label06:
        $r10 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $r9 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i17 = r0.<android.text.TextLine: int mStart>;

        $i16 = i0 + $i17;

        $i18 = r0.<android.text.TextLine: int mStart>;

        $i15 = i2 + $i18;

        virtualinvoke $r10.<android.text.SpanSet: void init(android.text.Spanned,int,int)>($r9, $i16, $i15);

        $r12 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $r11 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i19 = r0.<android.text.TextLine: int mStart>;

        $i22 = i0 + $i19;

        $i20 = r0.<android.text.TextLine: int mStart>;

        $i21 = i2 + $i20;

        virtualinvoke $r12.<android.text.SpanSet: void init(android.text.Spanned,int,int)>($r11, $i22, $i21);

        f1 = f0;

        i6 = i0;

     label07:
        if i6 >= i1 goto label26;

        r3 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r13 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r3.<android.text.TextPaint: void set(android.text.TextPaint)>($r13);

        $r14 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $i23 = r0.<android.text.TextLine: int mStart>;

        $i26 = i6 + $i23;

        $i24 = r0.<android.text.TextLine: int mStart>;

        $i27 = i2 + $i24;

        $i25 = virtualinvoke $r14.<android.text.SpanSet: int getNextTransition(int,int)>($i26, $i27);

        $i29 = r0.<android.text.TextLine: int mStart>;

        i7 = $i25 - $i29;

        i8 = staticinvoke <java.lang.Math: int min(int,int)>(i7, i1);

        r4 = null;

        i10 = 0;

     label08:
        $r15 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        i9 = $r15.<android.text.SpanSet: int numberOfSpans>;

        if i10 >= i9 goto label12;

        $r30 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $r29 = $r30.<android.text.SpanSet: int[] spanStarts>;

        $i41 = $r29[i10];

        $i44 = r0.<android.text.TextLine: int mStart>;

        $i43 = i8 + $i44;

        if $i41 >= $i43 goto label09;

        $r27 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $r28 = $r27.<android.text.SpanSet: int[] spanEnds>;

        $i45 = $r28[i10];

        $i42 = r0.<android.text.TextLine: int mStart>;

        $i46 = i6 + $i42;

        if $i45 > $i46 goto label10;

     label09:
        i10 = i10 + 1;

        goto label08;

     label10:
        $r34 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        $r33 = $r34.<android.text.SpanSet: java.lang.Object[] spans>;

        $r31 = (android.text.style.MetricAffectingSpan[]) $r33;

        r5 = $r31[i10];

        $z5 = r5 instanceof android.text.style.ReplacementSpan;

        if $z5 == 0 goto label11;

        r4 = (android.text.style.ReplacementSpan) r5;

        goto label09;

     label11:
        virtualinvoke r5.<android.text.style.MetricAffectingSpan: void updateDrawState(android.text.TextPaint)>(r3);

        goto label09;

     label12:
        if r4 == null goto label17;

        if z1 != 0 goto label13;

        if i8 >= i1 goto label16;

     label13:
        z2 = 1;

     label14:
        $f4 = specialinvoke r0.<android.text.TextLine: float handleReplacement(android.text.style.ReplacementSpan,android.text.TextPaint,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(r4, r3, i6, i8, z0, r1, f0, i3, i4, i5, r2, z2);

        f0 = f0 + $f4;

     label15:
        i6 = i7;

        goto label07;

     label16:
        z2 = 0;

        goto label14;

     label17:
        i12 = i6;

     label18:
        if i12 >= i8 goto label15;

        $r16 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $i28 = r0.<android.text.TextLine: int mStart>;

        $i30 = i12 + $i28;

        $i32 = r0.<android.text.TextLine: int mStart>;

        $i31 = i8 + $i32;

        $i34 = virtualinvoke $r16.<android.text.SpanSet: int getNextTransition(int,int)>($i30, $i31);

        $i33 = r0.<android.text.TextLine: int mStart>;

        i11 = $i34 - $i33;

        $r18 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r3.<android.text.TextPaint: void set(android.text.TextPaint)>($r18);

        i14 = 0;

     label19:
        $r17 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        i13 = $r17.<android.text.SpanSet: int numberOfSpans>;

        if i14 >= i13 goto label22;

        $r21 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $r22 = $r21.<android.text.SpanSet: int[] spanStarts>;

        $i36 = $r22[i14];

        $i37 = r0.<android.text.TextLine: int mStart>;

        $i35 = i11 + $i37;

        if $i36 >= $i35 goto label20;

        $r19 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $r20 = $r19.<android.text.SpanSet: int[] spanEnds>;

        $i40 = $r20[i14];

        $i38 = r0.<android.text.TextLine: int mStart>;

        $i39 = i12 + $i38;

        if $i40 > $i39 goto label21;

     label20:
        i14 = i14 + 1;

        goto label19;

     label21:
        $r26 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        $r23 = $r26.<android.text.SpanSet: java.lang.Object[] spans>;

        $r24 = (android.text.style.CharacterStyle[]) $r23;

        $r25 = $r24[i14];

        virtualinvoke $r25.<android.text.style.CharacterStyle: void updateDrawState(android.text.TextPaint)>(r3);

        goto label20;

     label22:
        if z1 != 0 goto label23;

        if i11 >= i1 goto label25;

     label23:
        z3 = 1;

     label24:
        $f3 = specialinvoke r0.<android.text.TextLine: float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(r3, i12, i11, i6, i7, z0, r1, f0, i3, i4, i5, r2, z3);

        f0 = f0 + $f3;

        i12 = i11;

        goto label18;

     label25:
        z3 = 0;

        goto label24;

     label26:
        $f2 = f0 - f1;

        return $f2;
    }

    private float handleText(android.text.TextPaint, int, int, int, int, boolean, android.graphics.Canvas, float, int, int, int, android.graphics.Paint$FontMetricsInt, boolean)
    {
        android.text.TextLine r0;
        android.text.TextPaint r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        boolean z0, z1, z2, $z3;
        android.graphics.Canvas r2;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12;
        android.graphics.Paint$FontMetricsInt r3;
        android.graphics.Paint$Style r4, r5, $r7, $r9;
        byte b12;
        java.lang.CharSequence $r6;
        char[] $r8;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.text.TextPaint;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z0 := @parameter5: boolean;

        r2 := @parameter6: android.graphics.Canvas;

        f0 := @parameter7: float;

        i4 := @parameter8: int;

        i5 := @parameter9: int;

        i6 := @parameter10: int;

        r3 := @parameter11: android.graphics.Paint$FontMetricsInt;

        z1 := @parameter12: boolean;

        if r3 == null goto label01;

        staticinvoke <android.text.TextLine: void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint)>(r3, r1);

     label01:
        i7 = i1 - i0;

        if i7 != 0 goto label03;

        f1 = 0.0F;

     label02:
        return f1;

     label03:
        i8 = i3 - i2;

        if z1 != 0 goto label04;

        f1 = 0.0F;

        if r2 == null goto label06;

        $i26 = r1.<android.text.TextPaint: int bgColor>;

        if $i26 != 0 goto label04;

        $i25 = r1.<android.text.TextPaint: int underlineColor>;

        if $i25 != 0 goto label04;

        f1 = 0.0F;

        if z0 == 0 goto label06;

     label04:
        if z0 == 0 goto label11;

        b12 = 1;

     label05:
        $z3 = r0.<android.text.TextLine: boolean mCharsValid>;

        if $z3 == 0 goto label12;

        $r8 = r0.<android.text.TextLine: char[] mChars>;

        f1 = virtualinvoke r1.<android.text.TextPaint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)>($r8, i0, i7, i2, i8, b12, null, 0);

     label06:
        if r2 == null goto label10;

        if z0 == 0 goto label07;

        f0 = f0 - f1;

     label07:
        $i18 = r1.<android.text.TextPaint: int bgColor>;

        if $i18 == 0 goto label08;

        i11 = virtualinvoke r1.<android.text.TextPaint: int getColor()>();

        r5 = virtualinvoke r1.<android.text.TextPaint: android.graphics.Paint$Style getStyle()>();

        $i24 = r1.<android.text.TextPaint: int bgColor>;

        virtualinvoke r1.<android.text.TextPaint: void setColor(int)>($i24);

        $r9 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r9);

        f6 = (float) i4;

        f5 = f0 + f1;

        f7 = (float) i6;

        virtualinvoke r2.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(f0, f6, f5, f7, r1);

        virtualinvoke r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>(r5);

        virtualinvoke r1.<android.text.TextPaint: void setColor(int)>(i11);

     label08:
        $i21 = r1.<android.text.TextPaint: int underlineColor>;

        if $i21 == 0 goto label09;

        $i19 = r1.<android.text.TextPaint: int baselineShift>;

        $i20 = i5 + $i19;

        $f11 = (float) $i20;

        $f9 = virtualinvoke r1.<android.text.TextPaint: float getTextSize()>();

        $f10 = 0.11111111F * $f9;

        f2 = $f11 + $f10;

        i10 = virtualinvoke r1.<android.text.TextPaint: int getColor()>();

        r4 = virtualinvoke r1.<android.text.TextPaint: android.graphics.Paint$Style getStyle()>();

        z2 = virtualinvoke r1.<android.text.TextPaint: boolean isAntiAlias()>();

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>($r7);

        virtualinvoke r1.<android.text.TextPaint: void setAntiAlias(boolean)>(1);

        $i23 = r1.<android.text.TextPaint: int underlineColor>;

        virtualinvoke r1.<android.text.TextPaint: void setColor(int)>($i23);

        f4 = f0 + f1;

        $f12 = r1.<android.text.TextPaint: float underlineThickness>;

        f3 = f2 + $f12;

        virtualinvoke r2.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(f0, f2, f4, f3, r1);

        virtualinvoke r1.<android.text.TextPaint: void setStyle(android.graphics.Paint$Style)>(r4);

        virtualinvoke r1.<android.text.TextPaint: void setColor(int)>(i10);

        virtualinvoke r1.<android.text.TextPaint: void setAntiAlias(boolean)>(z2);

     label09:
        $i22 = r1.<android.text.TextPaint: int baselineShift>;

        i9 = i5 + $i22;

        specialinvoke r0.<android.text.TextLine: void drawTextRun(android.graphics.Canvas,android.text.TextPaint,int,int,int,int,boolean,float,int)>(r2, r1, i0, i1, i2, i3, z0, f0, i9);

     label10:
        if z0 == 0 goto label02;

        $f8 = neg f1;

        return $f8;

     label11:
        b12 = 0;

        goto label05;

     label12:
        i13 = r0.<android.text.TextLine: int mStart>;

        $r6 = r0.<android.text.TextLine: java.lang.CharSequence mText>;

        $i15 = i13 + i0;

        $i14 = i13 + i1;

        $i17 = i13 + i2;

        $i16 = i13 + i3;

        f1 = virtualinvoke r1.<android.text.TextPaint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int)>($r6, $i15, $i14, $i17, $i16, b12, null, 0);

        goto label06;
    }

    private float measureRun(int, int, int, boolean, android.graphics.Paint$FontMetricsInt)
    {
        android.text.TextLine r0;
        int i0, i1, i2;
        boolean z0;
        android.graphics.Paint$FontMetricsInt r1;
        float $f0;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: android.graphics.Paint$FontMetricsInt;

        $f0 = specialinvoke r0.<android.text.TextLine: float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)>(i0, i1, i2, z0, null, 0.0F, 0, 0, 0, r1, 1);

        return $f0;
    }

    static android.text.TextLine obtain()
    {
        android.text.TextLine[] r0, $r3, $r5, $r7, $r8;
        java.lang.Throwable r1, $r9;
        int i0;
        android.text.TextLine r2, $r4, $r6;

        r0 = <android.text.TextLine: android.text.TextLine[] sCached>;

        entermonitor r0;

     label1:
        $r3 = <android.text.TextLine: android.text.TextLine[] sCached>;

        i0 = lengthof $r3;

     label2:
        i0 = i0 + -1;

        if i0 < 0 goto label5;

     label3:
        $r5 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $r6 = $r5[i0];

        if $r6 == null goto label2;

        $r7 = <android.text.TextLine: android.text.TextLine[] sCached>;

        r2 = $r7[i0];

        $r8 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $r8[i0] = null;

        exitmonitor r0;

     label4:
        return r2;

     label5:
        exitmonitor r0;

     label6:
        $r4 = new android.text.TextLine;

        specialinvoke $r4.<android.text.TextLine: void <init>()>();

        return $r4;

     label7:
        $r9 := @caughtexception;

        r1 = $r9;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static android.text.TextLine recycle(android.text.TextLine)
    {
        android.text.TextLine r0, $r8;
        android.text.TextLine[] r1, $r6, $r7, $r9;
        int i0, $i1;
        java.lang.Throwable r2, $r10;
        android.text.SpanSet $r3, $r4, $r5;

        r0 := @parameter0: android.text.TextLine;

        r0.<android.text.TextLine: java.lang.CharSequence mText> = null;

        r0.<android.text.TextLine: android.text.TextPaint mPaint> = null;

        r0.<android.text.TextLine: android.text.Layout$Directions mDirections> = null;

        $r3 = r0.<android.text.TextLine: android.text.SpanSet mMetricAffectingSpanSpanSet>;

        virtualinvoke $r3.<android.text.SpanSet: void recycle()>();

        $r4 = r0.<android.text.TextLine: android.text.SpanSet mCharacterStyleSpanSet>;

        virtualinvoke $r4.<android.text.SpanSet: void recycle()>();

        $r5 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        virtualinvoke $r5.<android.text.SpanSet: void recycle()>();

        r1 = <android.text.TextLine: android.text.TextLine[] sCached>;

        entermonitor r1;

        i0 = 0;

     label1:
        $r6 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $i1 = lengthof $r6;

        if i0 >= $i1 goto label2;

        $r7 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $r8 = $r7[i0];

        if $r8 != null goto label7;

        $r9 = <android.text.TextLine: android.text.TextLine[] sCached>;

        $r9[i0] = r0;

     label2:
        exitmonitor r1;

     label3:
        return null;

     label4:
        $r10 := @caughtexception;

        r2 = $r10;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        i0 = i0 + 1;

        goto label1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static void updateMetrics(android.graphics.Paint$FontMetricsInt, int, int, int, int, int)
    {
        android.graphics.Paint$FontMetricsInt r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        r0 := @parameter0: android.graphics.Paint$FontMetricsInt;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $i5 = r0.<android.graphics.Paint$FontMetricsInt: int top>;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, i0);

        r0.<android.graphics.Paint$FontMetricsInt: int top> = $i6;

        $i7 = r0.<android.graphics.Paint$FontMetricsInt: int ascent>;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i1);

        r0.<android.graphics.Paint$FontMetricsInt: int ascent> = $i8;

        $i9 = r0.<android.graphics.Paint$FontMetricsInt: int descent>;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, i2);

        r0.<android.graphics.Paint$FontMetricsInt: int descent> = $i10;

        $i11 = r0.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i11, i3);

        r0.<android.graphics.Paint$FontMetricsInt: int bottom> = $i12;

        $i13 = r0.<android.graphics.Paint$FontMetricsInt: int leading>;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i13, i4);

        r0.<android.graphics.Paint$FontMetricsInt: int leading> = $i14;

        return;
    }

    float ascent(int)
    {
        android.text.TextLine r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.text.style.MetricAffectingSpan[] r1;
        android.text.TextPaint r2, $r6, $r8, $r9;
        android.text.Spanned $r3, $r4;
        java.lang.Object[] $r5;
        float $f0, $f1, $f2;
        android.text.style.MetricAffectingSpan $r7;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        $r3 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        if $r3 != null goto label1;

        $r9 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        $f2 = virtualinvoke $r9.<android.text.TextPaint: float ascent()>();

        return $f2;

     label1:
        $i4 = r0.<android.text.TextLine: int mStart>;

        i1 = i0 + $i4;

        $r4 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        $i5 = i1 + 1;

        $r5 = interfaceinvoke $r4.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i1, $i5, class "android/text/style/MetricAffectingSpan");

        r1 = (android.text.style.MetricAffectingSpan[]) $r5;

        $i6 = lengthof r1;

        if $i6 != 0 goto label2;

        $r8 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        $f1 = virtualinvoke $r8.<android.text.TextPaint: float ascent()>();

        return $f1;

     label2:
        r2 = r0.<android.text.TextLine: android.text.TextPaint mWorkPaint>;

        $r6 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r2.<android.text.TextPaint: void set(android.text.TextPaint)>($r6);

        i2 = lengthof r1;

        i3 = 0;

     label3:
        if i3 >= i2 goto label4;

        $r7 = r1[i3];

        virtualinvoke $r7.<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>(r2);

        i3 = i3 + 1;

        goto label3;

     label4:
        $f0 = virtualinvoke r2.<android.text.TextPaint: float ascent()>();

        return $f0;
    }

    void draw(android.graphics.Canvas, float, int, int, int)
    {
        android.text.TextLine r0;
        android.graphics.Canvas r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        int[] r2;
        android.graphics.RectF r3, $r7;
        boolean z0, z1, z2, $z3, $z4;
        android.graphics.Bitmap r4;
        android.text.TextPaint r5;
        android.text.Layout$Directions $r6, $r10, $r11, $r12, $r13;
        char[] $r8, $r9;
        android.emoji.EmojiFactory $r14;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.graphics.Canvas;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z3 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z3 != 0 goto label03;

        $r11 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        $r10 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if $r11 != $r10 goto label02;

        $i30 = r0.<android.text.TextLine: int mLen>;

        specialinvoke r0.<android.text.TextLine: float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean)>(r1, 0, $i30, 0, f0, i0, i1, i2, 0);

     label01:
        return;

     label02:
        $r13 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        $r12 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_RIGHT_TO_LEFT>;

        if $r13 != $r12 goto label03;

        $i29 = r0.<android.text.TextLine: int mLen>;

        specialinvoke r0.<android.text.TextLine: float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean)>(r1, 0, $i29, 1, f0, i0, i1, i2, 0);

        return;

     label03:
        f1 = 0.0F;

        $r6 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        r2 = $r6.<android.text.Layout$Directions: int[] mDirections>;

        r3 = null;

        $i17 = lengthof r2;

        i3 = -2 + $i17;

        i4 = 0;

     label04:
        i5 = lengthof r2;

        if i4 >= i5 goto label01;

        i6 = r2[i4];

        $i18 = i4 + 1;

        $i15 = r2[$i18];

        $i16 = 67108863 & $i15;

        i7 = i6 + $i16;

        i8 = r0.<android.text.TextLine: int mLen>;

        if i7 <= i8 goto label05;

        i7 = r0.<android.text.TextLine: int mLen>;

     label05:
        $i20 = i4 + 1;

        $i21 = r2[$i20];

        $i19 = 67108864 & $i21;

        if $i19 == 0 goto label14;

        z0 = 1;

     label06:
        i10 = i6;

        $z4 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z4 == 0 goto label15;

        i9 = i6;

     label07:
        if i9 > i7 goto label20;

        z1 = r0.<android.text.TextLine: boolean mHasTabs>;

        r4 = null;

        i11 = 0;

        if z1 == 0 goto label08;

        i12 = i7;

        r4 = null;

        i11 = 0;

        if i9 >= i12 goto label08;

        $r9 = r0.<android.text.TextLine: char[] mChars>;

        i11 = $r9[i9];

        r4 = null;

        if i11 < 55296 goto label08;

        r4 = null;

        if i11 >= 56320 goto label08;

        i13 = i9 + 1;

        i14 = i7;

        r4 = null;

        if i13 >= i14 goto label08;

        $r8 = r0.<android.text.TextLine: char[] mChars>;

        i11 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>($r8, i9);

        $i27 = <android.text.Layout: int MIN_EMOJI>;

        if i11 < $i27 goto label16;

        $i28 = <android.text.Layout: int MAX_EMOJI>;

        if i11 > $i28 goto label16;

        $r14 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        r4 = virtualinvoke $r14.<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>(i11);

     label08:
        if i9 == i7 goto label09;

        if i11 == 9 goto label09;

        if r4 == null goto label13;

     label09:
        f2 = f0 + f1;

        if i4 != i3 goto label10;

        $i26 = r0.<android.text.TextLine: int mLen>;

        if i9 == $i26 goto label17;

     label10:
        z2 = 1;

     label11:
        $f11 = specialinvoke r0.<android.text.TextLine: float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean)>(r1, i10, i9, z0, f2, i0, i1, i2, z2);

        f1 = f1 + $f11;

        if i11 != 9 goto label18;

        $i25 = r0.<android.text.TextLine: int mDir>;

        $f17 = (float) $i25;

        $i24 = r0.<android.text.TextLine: int mDir>;

        $f19 = (float) $i24;

        $f18 = f1 * $f19;

        $f16 = virtualinvoke r0.<android.text.TextLine: float nextTab(float)>($f18);

        f1 = $f17 * $f16;

     label12:
        i10 = i9 + 1;

     label13:
        i9 = i9 + 1;

        goto label07;

     label14:
        z0 = 0;

        goto label06;

     label15:
        i9 = i7;

        goto label07;

     label16:
        r4 = null;

        if i11 <= 65535 goto label08;

        i9 = i9 + 1;

        goto label13;

     label17:
        z2 = 0;

        goto label11;

     label18:
        if r4 == null goto label12;

        f3 = virtualinvoke r0.<android.text.TextLine: float ascent(int)>(i9);

        $i22 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        f5 = (float) $i22;

        $f10 = neg f3;

        $f14 = $f10 / f5;

        $i23 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        $f13 = (float) $i23;

        f4 = $f14 * $f13;

        if r3 != null goto label19;

        $r7 = new android.graphics.RectF;

        specialinvoke $r7.<android.graphics.RectF: void <init>()>();

        r3 = $r7;

     label19:
        f7 = f0 + f1;

        $f12 = (float) i1;

        f6 = f3 + $f12;

        $f15 = f0 + f1;

        f9 = f4 + $f15;

        f8 = (float) i1;

        virtualinvoke r3.<android.graphics.RectF: void set(float,float,float,float)>(f7, f6, f9, f8);

        r5 = r0.<android.text.TextLine: android.text.TextPaint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>(r4, null, r3, r5);

        f1 = f1 + f4;

        i9 = i9 + 1;

        goto label12;

     label20:
        i4 = i4 + 2;

        goto label04;
    }

    int getOffsetToLeftRightOf(int, boolean)
    {
        android.text.TextLine r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, $i22, i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49;
        boolean z0, z1, z2, z3, z4, z5, z6, z7;
        int[] r1;
        byte b11;
        android.text.Layout$Directions $r2;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = r0.<android.text.TextLine: int mLen>;

        $i24 = r0.<android.text.TextLine: int mDir>;

        if $i24 != -1 goto label10;

        z1 = 1;

     label01:
        $r2 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        r1 = $r2.<android.text.Layout$Directions: int[] mDirections>;

        i2 = 0;

        i3 = 0;

        i4 = i1;

        i5 = -1;

        if i0 != 0 goto label11;

        i6 = -2;

     label02:
        if z0 != z1 goto label29;

        z5 = 1;

     label03:
        if z5 == 0 goto label30;

        b11 = 2;

     label04:
        i10 = i6 + b11;

        if i10 < 0 goto label38;

        $i28 = lengthof r1;

        if i10 >= $i28 goto label38;

        $i25 = r1[i10];

        i13 = 0 + $i25;

        $i26 = i10 + 1;

        $i31 = r1[$i26];

        $i32 = 67108863 & $i31;

        i12 = i13 + $i32;

        if i12 <= i1 goto label05;

        i12 = i1;

     label05:
        $i29 = i10 + 1;

        $i30 = r1[$i29];

        $i34 = $i30 >>> 26;

        i14 = 63 & $i34;

        $i35 = i14 & 1;

        if $i35 == 0 goto label31;

        z6 = 1;

     label06:
        if z0 != z6 goto label32;

        z7 = 1;

     label07:
        if i5 != -1 goto label35;

        if z7 == 0 goto label33;

        i15 = i13;

     label08:
        i5 = specialinvoke r0.<android.text.TextLine: int getOffsetBeforeAfter(int,int,int,boolean,int,boolean)>(i10, i13, i12, z6, i15, z7);

        if z7 == 0 goto label34;

     label09:
        if i5 != i12 goto label36;

        i6 = i10;

        i2 = i14;

        goto label02;

     label10:
        z1 = 0;

        goto label01;

     label11:
        if i0 != i1 goto label12;

        i6 = lengthof r1;

        i2 = 0;

        goto label02;

     label12:
        i6 = 0;

     label13:
        i7 = lengthof r1;

        i2 = 0;

        z2 = 0;

        if i6 >= i7 goto label17;

        $i38 = r1[i6];

        i3 = 0 + $i38;

        if i0 < i3 goto label24;

        $i37 = i6 + 1;

        $i36 = r1[$i37];

        $i42 = 67108863 & $i36;

        i4 = i3 + $i42;

        if i4 <= i1 goto label14;

        i4 = i1;

     label14:
        if i0 >= i4 goto label24;

        $i41 = i6 + 1;

        $i40 = r1[$i41];

        $i39 = $i40 >>> 26;

        i2 = 63 & $i39;

        z2 = 0;

        if i0 != i3 goto label17;

        i17 = i0 - 1;

        i16 = 0;

     label15:
        i19 = lengthof r1;

        i18 = i16;

        z2 = 0;

        if i18 >= i19 goto label17;

        $i46 = r1[i16];

        i21 = 0 + $i46;

        if i17 < i21 goto label23;

        $i45 = i16 + 1;

        $i44 = r1[$i45];

        $i43 = 67108863 & $i44;

        i20 = i21 + $i43;

        if i20 <= i1 goto label16;

        i20 = i1;

     label16:
        if i17 >= i20 goto label23;

        $i49 = i16 + 1;

        $i48 = r1[$i49];

        $i47 = $i48 >>> 26;

        i23 = 63 & $i47;

        if i23 >= i2 goto label23;

        i6 = i16;

        i2 = i23;

        i3 = i21;

        i4 = i20;

        z2 = 1;

     label17:
        $i22 = lengthof r1;

        if i6 == $i22 goto label02;

        $i33 = i2 & 1;

        if $i33 == 0 goto label25;

        z3 = 1;

     label18:
        if z0 != z3 goto label26;

        z4 = 1;

     label19:
        if z4 == 0 goto label27;

        i8 = i4;

     label20:
        if i0 != i8 goto label21;

        if z4 == z2 goto label02;

     label21:
        i5 = specialinvoke r0.<android.text.TextLine: int getOffsetBeforeAfter(int,int,int,boolean,int,boolean)>(i6, i3, i4, z3, i0, z4);

        if z4 == 0 goto label28;

        i9 = i4;

     label22:
        if i5 == i9 goto label02;

        return i5;

     label23:
        i16 = i16 + 2;

        goto label15;

     label24:
        i6 = i6 + 2;

        goto label13;

     label25:
        z3 = 0;

        goto label18;

     label26:
        z4 = 0;

        goto label19;

     label27:
        i8 = i3;

        goto label20;

     label28:
        i9 = i3;

        goto label22;

     label29:
        z5 = 0;

        goto label03;

     label30:
        b11 = -2;

        goto label04;

     label31:
        z6 = 0;

        goto label06;

     label32:
        z7 = 0;

        goto label07;

     label33:
        i15 = i12;

        goto label08;

     label34:
        i12 = i13;

        goto label09;

     label35:
        if i14 >= i2 goto label36;

        if z7 == 0 goto label37;

        i5 = i13;

     label36:
        return i5;

     label37:
        i5 = i12;

        goto label36;

     label38:
        if i5 != -1 goto label41;

        if z5 == 0 goto label40;

        $i27 = r0.<android.text.TextLine: int mLen>;

        i5 = 1 + $i27;

     label39:
        goto label36;

     label40:
        i5 = -1;

        goto label39;

     label41:
        if i5 > i1 goto label36;

        if z5 == 0 goto label43;

        i5 = i1;

     label42:
        goto label36;

     label43:
        i5 = 0;

        goto label42;
    }

    float measure(int, boolean, android.graphics.Paint$FontMetricsInt)
    {
        android.text.TextLine r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7;
        android.graphics.Paint$FontMetricsInt r1;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        char[] r2;
        int[] r3;
        android.graphics.Bitmap r4;
        android.text.Layout$Directions $r5, $r6, $r7, $r9, $r10;
        android.emoji.EmojiFactory $r8;

        r0 := @this: android.text.TextLine;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.graphics.Paint$FontMetricsInt;

        if z0 == 0 goto label03;

        i1 = i0 - 1;

     label01:
        if i1 >= 0 goto label04;

        f0 = 0.0F;

     label02:
        return f0;

     label03:
        i1 = i0;

        goto label01;

     label04:
        f0 = 0.0F;

        $z6 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z6 != 0 goto label06;

        $r6 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        $r7 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if $r6 != $r7 goto label05;

        $i25 = r0.<android.text.TextLine: int mLen>;

        $f18 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(0, i0, $i25, 0, r1);

        return $f18;

     label05:
        $r10 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        $r9 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_RIGHT_TO_LEFT>;

        if $r10 != $r9 goto label06;

        $i26 = r0.<android.text.TextLine: int mLen>;

        $f19 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(0, i0, $i26, 1, r1);

        return $f19;

     label06:
        r2 = r0.<android.text.TextLine: char[] mChars>;

        $r5 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        r3 = $r5.<android.text.Layout$Directions: int[] mDirections>;

        i2 = 0;

     label07:
        $i9 = lengthof r3;

        if i2 >= $i9 goto label02;

        i3 = r3[i2];

        $i11 = i2 + 1;

        $i10 = r3[$i11];

        $i13 = 67108863 & $i10;

        i4 = i3 + $i13;

        $i12 = r0.<android.text.TextLine: int mLen>;

        if i4 <= $i12 goto label08;

        i4 = r0.<android.text.TextLine: int mLen>;

     label08:
        $i15 = i2 + 1;

        $i14 = r3[$i15];

        $i17 = 67108864 & $i14;

        if $i17 == 0 goto label16;

        z1 = 1;

     label09:
        i5 = i3;

        $z7 = r0.<android.text.TextLine: boolean mHasTabs>;

        if $z7 == 0 goto label17;

        i6 = i3;

     label10:
        if i6 > i4 goto label29;

        z2 = r0.<android.text.TextLine: boolean mHasTabs>;

        r4 = null;

        i7 = 0;

        if z2 == 0 goto label11;

        r4 = null;

        i7 = 0;

        if i6 >= i4 goto label11;

        i7 = r2[i6];

        r4 = null;

        if i7 < 55296 goto label11;

        r4 = null;

        if i7 >= 56320 goto label11;

        i8 = i6 + 1;

        r4 = null;

        if i8 >= i4 goto label11;

        i7 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>(r2, i6);

        $i24 = <android.text.Layout: int MIN_EMOJI>;

        if i7 < $i24 goto label18;

        $i23 = <android.text.Layout: int MAX_EMOJI>;

        if i7 > $i23 goto label18;

        $r8 = <android.text.Layout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        r4 = virtualinvoke $r8.<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>(i7);

     label11:
        if i6 == i4 goto label12;

        if i7 == 9 goto label12;

        if r4 == null goto label19;

     label12:
        if i1 < i5 goto label20;

        if i1 >= i6 goto label20;

        z3 = 1;

     label13:
        $i16 = r0.<android.text.TextLine: int mDir>;

        if $i16 != -1 goto label21;

        z5 = 1;

     label14:
        if z5 != z1 goto label22;

        z4 = 1;

     label15:
        if z3 == 0 goto label23;

        if z4 == 0 goto label23;

        $f13 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(i5, i0, i6, z1, r1);

        $f17 = f0 + $f13;

        return $f17;

     label16:
        z1 = 0;

        goto label09;

     label17:
        i6 = i4;

        goto label10;

     label18:
        r4 = null;

        if i7 <= 65535 goto label11;

        i6 = i6 + 1;

     label19:
        i6 = i6 + 1;

        goto label10;

     label20:
        z3 = 0;

        goto label13;

     label21:
        z5 = 0;

        goto label14;

     label22:
        z4 = 0;

        goto label15;

     label23:
        f2 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(i5, i6, i6, z1, r1);

        if z4 == 0 goto label25;

     label24:
        f0 = f0 + f2;

        if z3 == 0 goto label26;

        $f15 = specialinvoke r0.<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)>(i5, i0, i6, z1, null);

        $f14 = f0 + $f15;

        return $f14;

     label25:
        f2 = neg f2;

        goto label24;

     label26:
        if i7 != 9 goto label27;

        if i0 == i6 goto label02;

        $i21 = r0.<android.text.TextLine: int mDir>;

        $f10 = (float) $i21;

        $i22 = r0.<android.text.TextLine: int mDir>;

        $f12 = (float) $i22;

        $f11 = f0 * $f12;

        $f16 = virtualinvoke r0.<android.text.TextLine: float nextTab(float)>($f11);

        f0 = $f10 * $f16;

        if i1 == i6 goto label02;

     label27:
        if r4 == null goto label28;

        f1 = virtualinvoke r0.<android.text.TextLine: float ascent(int)>(i6);

        $i18 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        $f4 = (float) $i18;

        $f3 = neg f1;

        $f6 = $f4 * $f3;

        $i20 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        $f5 = (float) $i20;

        $f9 = $f6 / $f5;

        $i19 = r0.<android.text.TextLine: int mDir>;

        $f8 = (float) $i19;

        $f7 = $f9 * $f8;

        f0 = f0 + $f7;

        i6 = i6 + 1;

     label28:
        i5 = i6 + 1;

        goto label19;

     label29:
        i2 = i2 + 2;

        goto label07;
    }

    float metrics(android.graphics.Paint$FontMetricsInt)
    {
        android.text.TextLine r0;
        android.graphics.Paint$FontMetricsInt r1;
        int $i0;
        float $f0;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.graphics.Paint$FontMetricsInt;

        $i0 = r0.<android.text.TextLine: int mLen>;

        $f0 = virtualinvoke r0.<android.text.TextLine: float measure(int,boolean,android.graphics.Paint$FontMetricsInt)>($i0, 0, r1);

        return $f0;
    }

    float nextTab(float)
    {
        android.text.TextLine r0;
        float f0, $f1, $f2;
        android.text.Layout$TabStops $r1, $r2;

        r0 := @this: android.text.TextLine;

        f0 := @parameter0: float;

        $r1 = r0.<android.text.TextLine: android.text.Layout$TabStops mTabs>;

        if $r1 == null goto label1;

        $r2 = r0.<android.text.TextLine: android.text.Layout$TabStops mTabs>;

        $f2 = virtualinvoke $r2.<android.text.Layout$TabStops: float nextTab(float)>(f0);

        return $f2;

     label1:
        $f1 = staticinvoke <android.text.Layout$TabStops: float nextDefaultStop(float,int)>(f0, 20);

        return $f1;
    }

    void set(android.text.TextPaint, java.lang.CharSequence, int, int, int, android.text.Layout$Directions, boolean, android.text.Layout$TabStops)
    {
        android.text.TextLine r0;
        android.text.TextPaint r1;
        java.lang.CharSequence r2;
        int i0, i1, i2, i3, i4, i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.text.Layout$Directions r3, $r6, $r13;
        boolean z0, z1, z2, z3, $z4, $z5;
        android.text.Layout$TabStops r4;
        char[] r5, $r7, $r8, $r10, $r12;
        android.text.SpanSet $r9, $r11, $r15, $r17;
        android.text.Spanned $r14, $r16;
        java.lang.IllegalArgumentException $r18;

        r0 := @this: android.text.TextLine;

        r1 := @parameter0: android.text.TextPaint;

        r2 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Directions;

        z0 := @parameter6: boolean;

        r4 := @parameter7: android.text.Layout$TabStops;

        r0.<android.text.TextLine: android.text.TextPaint mPaint> = r1;

        r0.<android.text.TextLine: java.lang.CharSequence mText> = r2;

        r0.<android.text.TextLine: int mStart> = i0;

        $i6 = i1 - i0;

        r0.<android.text.TextLine: int mLen> = $i6;

        r0.<android.text.TextLine: int mDir> = i2;

        r0.<android.text.TextLine: android.text.Layout$Directions mDirections> = r3;

        $r6 = r0.<android.text.TextLine: android.text.Layout$Directions mDirections>;

        if $r6 != null goto label01;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Directions cannot be null");

        throw $r18;

     label01:
        r0.<android.text.TextLine: boolean mHasTabs> = z0;

        r0.<android.text.TextLine: android.text.Spanned mSpanned> = null;

        z1 = r2 instanceof android.text.Spanned;

        z2 = 0;

        if z1 == 0 goto label02;

        $r14 = (android.text.Spanned) r2;

        r0.<android.text.TextLine: android.text.Spanned mSpanned> = $r14;

        $r17 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        $r16 = r0.<android.text.TextLine: android.text.Spanned mSpanned>;

        virtualinvoke $r17.<android.text.SpanSet: void init(android.text.Spanned,int,int)>($r16, i0, i1);

        $r15 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        $i14 = $r15.<android.text.SpanSet: int numberOfSpans>;

        if $i14 <= 0 goto label09;

        z2 = 1;

     label02:
        if z2 != 0 goto label03;

        if z0 != 0 goto label03;

        $r13 = <android.text.Layout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if r3 == $r13 goto label10;

     label03:
        z3 = 1;

     label04:
        r0.<android.text.TextLine: boolean mCharsValid> = z3;

        $z4 = r0.<android.text.TextLine: boolean mCharsValid>;

        if $z4 == 0 goto label12;

        $r7 = r0.<android.text.TextLine: char[] mChars>;

        if $r7 == null goto label05;

        $r12 = r0.<android.text.TextLine: char[] mChars>;

        $i13 = lengthof $r12;

        $i12 = r0.<android.text.TextLine: int mLen>;

        if $i13 >= $i12 goto label06;

     label05:
        $i8 = r0.<android.text.TextLine: int mLen>;

        $i9 = staticinvoke <com.android.internal.util.ArrayUtils: int idealCharArraySize(int)>($i8);

        $r8 = newarray (char)[$i9];

        r0.<android.text.TextLine: char[] mChars> = $r8;

     label06:
        $r10 = r0.<android.text.TextLine: char[] mChars>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r2, i0, i1, $r10, 0);

        if z2 == 0 goto label12;

        r5 = r0.<android.text.TextLine: char[] mChars>;

        i3 = i0;

     label07:
        if i3 >= i1 goto label12;

        $r9 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        i4 = virtualinvoke $r9.<android.text.SpanSet: int getNextTransition(int,int)>(i3, i1);

        $r11 = r0.<android.text.TextLine: android.text.SpanSet mReplacementSpanSpanSet>;

        $z5 = virtualinvoke $r11.<android.text.SpanSet: boolean hasSpansIntersecting(int,int)>(i3, i4);

        if $z5 == 0 goto label11;

        $i10 = i3 - i0;

        r5[$i10] = 65532;

        $i11 = i3 - i0;

        i5 = 1 + $i11;

        i7 = i4 - i0;

     label08:
        if i5 >= i7 goto label11;

        r5[i5] = 65279;

        i5 = i5 + 1;

        goto label08;

     label09:
        z2 = 0;

        goto label02;

     label10:
        z3 = 0;

        goto label04;

     label11:
        i3 = i4;

        goto label07;

     label12:
        r0.<android.text.TextLine: android.text.Layout$TabStops mTabs> = r4;

        return;
    }
}
