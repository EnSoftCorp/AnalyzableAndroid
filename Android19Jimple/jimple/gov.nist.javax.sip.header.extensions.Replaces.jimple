public class gov.nist.javax.sip.header.extensions.Replaces extends gov.nist.javax.sip.header.ParametersHeader implements javax.sip.header.ExtensionHeader, gov.nist.javax.sip.header.extensions.ReplacesHeader
{
    public static final java.lang.String NAME;
    private static final long serialVersionUID;
    public java.lang.String callId;
    public gov.nist.javax.sip.header.CallIdentifier callIdentifier;

    public void <init>()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        specialinvoke r0.<gov.nist.javax.sip.header.ParametersHeader: void <init>(java.lang.String)>("Replaces");

        return;
    }

    public void <init>(java.lang.String) throws java.lang.IllegalArgumentException
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        java.lang.String r1;
        gov.nist.javax.sip.header.CallIdentifier $r2;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.header.ParametersHeader: void <init>(java.lang.String)>("Replaces");

        $r2 = new gov.nist.javax.sip.header.CallIdentifier;

        specialinvoke $r2.<gov.nist.javax.sip.header.CallIdentifier: void <init>(java.lang.String)>(r1);

        r0.<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.javax.sip.header.CallIdentifier callIdentifier> = $r2;

        return;
    }

    public java.lang.String encodeBody()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        java.lang.String r1, $r2, $r8, $r10;
        gov.nist.core.NameValueList $r3, $r7;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r9;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        $r2 = r0.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String callId>;

        if $r2 != null goto label2;

        r1 = null;

     label1:
        return r1;

     label2:
        r1 = r0.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String callId>;

        $r3 = r0.<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.core.NameValueList parameters>;

        $z0 = virtualinvoke $r3.<gov.nist.core.NameValueList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r7 = r0.<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.core.NameValueList parameters>;

        $r8 = virtualinvoke $r7.<gov.nist.core.NameValueList: java.lang.String encode()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String getCallId()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        $r1 = r0.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String callId>;

        return $r1;
    }

    public gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        gov.nist.javax.sip.header.CallIdentifier $r1;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        $r1 = r0.<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.javax.sip.header.CallIdentifier callIdentifier>;

        return $r1;
    }

    public java.lang.String getFromTag()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        gov.nist.core.NameValueList $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        $r1 = r0.<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.core.NameValueList parameters>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getParameter(java.lang.String)>("from-tag");

        return $r2;
    }

    public java.lang.String getToTag()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        gov.nist.core.NameValueList $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        $r1 = r0.<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.core.NameValueList parameters>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getParameter(java.lang.String)>("to-tag");

        return $r2;
    }

    public boolean hasFromTag()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.header.extensions.Replaces: boolean hasParameter(java.lang.String)>("from-tag");

        return $z0;
    }

    public boolean hasToTag()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.header.extensions.Replaces: boolean hasParameter(java.lang.String)>("to-tag");

        return $z0;
    }

    public void removeFromTag()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        gov.nist.core.NameValueList $r1;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        $r1 = r0.<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r1.<gov.nist.core.NameValueList: boolean delete(java.lang.String)>("from-tag");

        return;
    }

    public void removeToTag()
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        gov.nist.core.NameValueList $r1;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        $r1 = r0.<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r1.<gov.nist.core.NameValueList: boolean delete(java.lang.String)>("to-tag");

        return;
    }

    public void setCallId(java.lang.String)
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String callId> = r1;

        return;
    }

    public void setCallIdentifier(gov.nist.javax.sip.header.CallIdentifier)
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        gov.nist.javax.sip.header.CallIdentifier r1;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        r1 := @parameter0: gov.nist.javax.sip.header.CallIdentifier;

        r0.<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.javax.sip.header.CallIdentifier callIdentifier> = r1;

        return;
    }

    public void setFromTag(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        java.lang.String r1, $r2;
        boolean $z0;
        java.text.ParseException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("null tag ");

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

        $r3 = new java.text.ParseException;

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>("bad tag", 0);

        throw $r3;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.header.extensions.Replaces: void setParameter(java.lang.String,java.lang.String)>("from-tag", r1);

        return;
    }

    public void setToTag(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        java.lang.String r1, $r2;
        boolean $z0;
        java.text.ParseException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("null tag ");

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

        $r3 = new java.text.ParseException;

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>("bad tag", 0);

        throw $r3;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.header.extensions.Replaces: void setParameter(java.lang.String,java.lang.String)>("to-tag", r1);

        return;
    }

    public void setValue(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.extensions.Replaces r0;
        java.lang.String r1;
        java.text.ParseException $r2;

        r0 := @this: gov.nist.javax.sip.header.extensions.Replaces;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.text.ParseException;

        specialinvoke $r2.<java.text.ParseException: void <init>(java.lang.String,int)>(r1, 0);

        throw $r2;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.header.extensions.Replaces: long serialVersionUID> = 8765762413224043300L;

        <gov.nist.javax.sip.header.extensions.Replaces: java.lang.String NAME> = "Replaces";

        return;
    }
}
