public class gov.nist.javax.sip.parser.DateParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.DateParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.DateParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.DateParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.DateParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.DateParser r0;
        java.lang.Throwable r1, $r24;
        java.util.Calendar r2;
        java.lang.String r3, $r13, $r15, $r20;
        gov.nist.javax.sip.header.SIPDateHeader r4, $r17;
        boolean $z0, $z1, $z2, $z3;
        gov.nist.core.LexerCore $r5, $r7, $r10, $r12, $r14, $r16;
        java.lang.StringBuilder $r19, $r22, $r23;
        java.text.ParseException $r21;

        r0 := @this: gov.nist.javax.sip.parser.DateParser;

        $z0 = <gov.nist.javax.sip.parser.DateParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void dbg_enter(java.lang.String)>("DateParser.parse");

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void headerName(int)>(2080);

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: int wkday()>();

        $r5 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r7 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(32);

        r2 = virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: java.util.Calendar date()>();

        $r10 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(32);

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void time(java.util.Calendar)>(r2);

        $r12 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(32);

        $r14 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        $r13 = virtualinvoke $r14.<gov.nist.core.LexerCore: java.lang.String ttoken()>();

        r3 = virtualinvoke $r13.<java.lang.String: java.lang.String toLowerCase()>();

        $r15 = "gmt";

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 != 0 goto label4;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad Time Zone ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: java.text.ParseException createParseException(java.lang.String)>($r20);

        throw $r21;

     label2:
        $r24 := @caughtexception;

        r1 = $r24;

        $z3 = <gov.nist.javax.sip.parser.DateParser: boolean debug>;

        if $z3 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void dbg_leave(java.lang.String)>("DateParser.parse");

     label3:
        throw r1;

     label4:
        $r16 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

        $r17 = new gov.nist.javax.sip.header.SIPDateHeader;

        specialinvoke $r17.<gov.nist.javax.sip.header.SIPDateHeader: void <init>()>();

        r4 = $r17;

        virtualinvoke r4.<gov.nist.javax.sip.header.SIPDateHeader: void setDate(java.util.Calendar)>(r2);

     label5:
        $z2 = <gov.nist.javax.sip.parser.DateParser: boolean debug>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void dbg_leave(java.lang.String)>("DateParser.parse");

     label6:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
    }
}
