public class android.filterfw.geometry.Quad extends java.lang.Object
{
    public android.filterfw.geometry.Point p0;
    public android.filterfw.geometry.Point p1;
    public android.filterfw.geometry.Point p2;
    public android.filterfw.geometry.Point p3;

    public void <init>()
    {
        android.filterfw.geometry.Quad r0;

        r0 := @this: android.filterfw.geometry.Quad;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(android.filterfw.geometry.Point, android.filterfw.geometry.Point, android.filterfw.geometry.Point, android.filterfw.geometry.Point)
    {
        android.filterfw.geometry.Quad r0;
        android.filterfw.geometry.Point r1, r2, r3, r4;

        r0 := @this: android.filterfw.geometry.Quad;

        r1 := @parameter0: android.filterfw.geometry.Point;

        r2 := @parameter1: android.filterfw.geometry.Point;

        r3 := @parameter2: android.filterfw.geometry.Point;

        r4 := @parameter3: android.filterfw.geometry.Point;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0> = r1;

        r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1> = r2;

        r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2> = r3;

        r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3> = r4;

        return;
    }

    public boolean IsInUnitRange()
    {
        android.filterfw.geometry.Quad r0;
        android.filterfw.geometry.Point $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.filterfw.geometry.Quad;

        $r1 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $z0 = virtualinvoke $r1.<android.filterfw.geometry.Point: boolean IsInUnitRange()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $z1 = virtualinvoke $r2.<android.filterfw.geometry.Point: boolean IsInUnitRange()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $z2 = virtualinvoke $r3.<android.filterfw.geometry.Point: boolean IsInUnitRange()>();

        if $z2 == 0 goto label1;

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $z3 = virtualinvoke $r4.<android.filterfw.geometry.Point: boolean IsInUnitRange()>();

        if $z3 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.filterfw.geometry.Rectangle boundingBox()
    {
        android.filterfw.geometry.Quad r0;
        java.lang.Float[] r1, r3;
        java.util.List r2, r4;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        android.filterfw.geometry.Point $r5, $r7, $r8, $r10, $r13, $r15, $r16, $r18;
        java.lang.Float $r6, $r9, $r11, $r12, $r14, $r17, $r19, $r21, $r23, $r24, $r25, $r28;
        java.lang.Object $r20, $r22, $r26, $r29;
        android.filterfw.geometry.Rectangle $r27;

        r0 := @this: android.filterfw.geometry.Quad;

        r1 = newarray (java.lang.Float)[4];

        $r5 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f4 = $r5.<android.filterfw.geometry.Point: float x>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f4);

        r1[0] = $r6;

        $r7 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f5 = $r7.<android.filterfw.geometry.Point: float x>;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f5);

        r1[1] = $r9;

        $r8 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f6 = $r8.<android.filterfw.geometry.Point: float x>;

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f6);

        r1[2] = $r11;

        $r10 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f7 = $r10.<android.filterfw.geometry.Point: float x>;

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f7);

        r1[3] = $r12;

        r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        r3 = newarray (java.lang.Float)[4];

        $r13 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f8 = $r13.<android.filterfw.geometry.Point: float y>;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f8);

        r3[0] = $r14;

        $r15 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f9 = $r15.<android.filterfw.geometry.Point: float y>;

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f9);

        r3[1] = $r17;

        $r16 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f10 = $r16.<android.filterfw.geometry.Point: float y>;

        $r19 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f10);

        r3[2] = $r19;

        $r18 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f11 = $r18.<android.filterfw.geometry.Point: float y>;

        $r21 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f11);

        r3[3] = $r21;

        r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        $r20 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>(r2);

        $r24 = (java.lang.Float) $r20;

        f0 = virtualinvoke $r24.<java.lang.Float: float floatValue()>();

        $r22 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>(r4);

        $r23 = (java.lang.Float) $r22;

        f1 = virtualinvoke $r23.<java.lang.Float: float floatValue()>();

        $r26 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r2);

        $r25 = (java.lang.Float) $r26;

        f2 = virtualinvoke $r25.<java.lang.Float: float floatValue()>();

        $r29 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r4);

        $r28 = (java.lang.Float) $r29;

        f3 = virtualinvoke $r28.<java.lang.Float: float floatValue()>();

        $r27 = new android.filterfw.geometry.Rectangle;

        $f12 = f2 - f0;

        $f13 = f3 - f1;

        specialinvoke $r27.<android.filterfw.geometry.Rectangle: void <init>(float,float,float,float)>(f0, f1, $f12, $f13);

        return $r27;
    }

    public float getBoundingHeight()
    {
        android.filterfw.geometry.Quad r0;
        java.lang.Float[] r1;
        java.util.List r2;
        android.filterfw.geometry.Point $r3, $r5, $r7, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.Float $r4, $r6, $r8, $r10, $r11, $r14;
        java.lang.Object $r12, $r13;

        r0 := @this: android.filterfw.geometry.Quad;

        r1 = newarray (java.lang.Float)[4];

        $r3 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f0 = $r3.<android.filterfw.geometry.Point: float y>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r1[0] = $r4;

        $r5 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f1 = $r5.<android.filterfw.geometry.Point: float y>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        r1[1] = $r6;

        $r7 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f2 = $r7.<android.filterfw.geometry.Point: float y>;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        r1[2] = $r8;

        $r9 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f3 = $r9.<android.filterfw.geometry.Point: float y>;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        r1[3] = $r10;

        r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r12 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r2);

        $r11 = (java.lang.Float) $r12;

        $f4 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        $r13 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>(r2);

        $r14 = (java.lang.Float) $r13;

        $f5 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();

        $f6 = $f4 - $f5;

        return $f6;
    }

    public float getBoundingWidth()
    {
        android.filterfw.geometry.Quad r0;
        java.lang.Float[] r1;
        java.util.List r2;
        android.filterfw.geometry.Point $r3, $r5, $r7, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.Float $r4, $r6, $r8, $r10, $r11, $r14;
        java.lang.Object $r12, $r13;

        r0 := @this: android.filterfw.geometry.Quad;

        r1 = newarray (java.lang.Float)[4];

        $r3 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f0 = $r3.<android.filterfw.geometry.Point: float x>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        r1[0] = $r4;

        $r5 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f1 = $r5.<android.filterfw.geometry.Point: float x>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        r1[1] = $r6;

        $r7 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f2 = $r7.<android.filterfw.geometry.Point: float x>;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f2);

        r1[2] = $r8;

        $r9 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f3 = $r9.<android.filterfw.geometry.Point: float x>;

        $r10 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f3);

        r1[3] = $r10;

        r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        $r12 = staticinvoke <java.util.Collections: java.lang.Object max(java.util.Collection)>(r2);

        $r11 = (java.lang.Float) $r12;

        $f4 = virtualinvoke $r11.<java.lang.Float: float floatValue()>();

        $r13 = staticinvoke <java.util.Collections: java.lang.Object min(java.util.Collection)>(r2);

        $r14 = (java.lang.Float) $r13;

        $f5 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();

        $f6 = $f4 - $f5;

        return $f6;
    }

    public android.filterfw.geometry.Quad scaled(float)
    {
        android.filterfw.geometry.Quad r0, $r1;
        float f0;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.filterfw.geometry.Quad;

        f0 := @parameter0: float;

        $r1 = new android.filterfw.geometry.Quad;

        $r2 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $r5 = virtualinvoke $r4.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        $r6 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $r7 = virtualinvoke $r6.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        $r8 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $r9 = virtualinvoke $r8.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        specialinvoke $r1.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r3, $r5, $r7, $r9);

        return $r1;
    }

    public android.filterfw.geometry.Quad scaled(float, float)
    {
        android.filterfw.geometry.Quad r0, $r1;
        float f0, f1;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.filterfw.geometry.Quad;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = new android.filterfw.geometry.Quad;

        $r2 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $r5 = virtualinvoke $r4.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        $r6 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $r7 = virtualinvoke $r6.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        $r8 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $r9 = virtualinvoke $r8.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        specialinvoke $r1.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r3, $r5, $r7, $r9);

        return $r1;
    }

    public java.lang.String toString()
    {
        android.filterfw.geometry.Quad r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14;
        android.filterfw.geometry.Point $r3, $r6, $r9, $r12;
        java.lang.String $r15;

        r0 := @this: android.filterfw.geometry.Quad;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r3 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r9 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public android.filterfw.geometry.Quad translated(float, float)
    {
        android.filterfw.geometry.Quad r0, $r1;
        float f0, f1;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.filterfw.geometry.Quad;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = new android.filterfw.geometry.Quad;

        $r2 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>(f0, f1);

        $r4 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $r5 = virtualinvoke $r4.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>(f0, f1);

        $r6 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $r7 = virtualinvoke $r6.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>(f0, f1);

        $r8 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $r9 = virtualinvoke $r8.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>(f0, f1);

        specialinvoke $r1.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r3, $r5, $r7, $r9);

        return $r1;
    }

    public android.filterfw.geometry.Quad translated(android.filterfw.geometry.Point)
    {
        android.filterfw.geometry.Quad r0, $r2;
        android.filterfw.geometry.Point r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: android.filterfw.geometry.Quad;

        r1 := @parameter0: android.filterfw.geometry.Point;

        $r2 = new android.filterfw.geometry.Quad;

        $r3 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $r4 = virtualinvoke $r3.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r1);

        $r5 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $r6 = virtualinvoke $r5.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r1);

        $r7 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $r8 = virtualinvoke $r7.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r1);

        $r9 = r0.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $r10 = virtualinvoke $r9.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r1);

        specialinvoke $r2.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r4, $r6, $r8, $r10);

        return $r2;
    }
}
