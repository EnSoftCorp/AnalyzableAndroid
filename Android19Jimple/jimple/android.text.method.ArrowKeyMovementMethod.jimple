public class android.text.method.ArrowKeyMovementMethod extends android.text.method.BaseMovementMethod implements android.text.method.MovementMethod
{
    private static final java.lang.Object LAST_TAP_DOWN;
    private static android.text.method.ArrowKeyMovementMethod sInstance;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.text.method.ArrowKeyMovementMethod: java.lang.Object LAST_TAP_DOWN> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.method.ArrowKeyMovementMethod r0;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        specialinvoke r0.<android.text.method.BaseMovementMethod: void <init>()>();

        return;
    }

    private static int getCurrentLineTop(android.text.Spannable, android.text.Layout)
    {
        android.text.Spannable r0;
        android.text.Layout r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.text.Spannable;

        r1 := @parameter1: android.text.Layout;

        $i0 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r0);

        $i1 = virtualinvoke r1.<android.text.Layout: int getLineForOffset(int)>($i0);

        $i2 = virtualinvoke r1.<android.text.Layout: int getLineTop(int)>($i1);

        return $i2;
    }

    public static android.text.method.MovementMethod getInstance()
    {
        android.text.method.ArrowKeyMovementMethod $r0, $r1, $r2;

        $r0 = <android.text.method.ArrowKeyMovementMethod: android.text.method.ArrowKeyMovementMethod sInstance>;

        if $r0 != null goto label1;

        $r2 = new android.text.method.ArrowKeyMovementMethod;

        specialinvoke $r2.<android.text.method.ArrowKeyMovementMethod: void <init>()>();

        <android.text.method.ArrowKeyMovementMethod: android.text.method.ArrowKeyMovementMethod sInstance> = $r2;

     label1:
        $r1 = <android.text.method.ArrowKeyMovementMethod: android.text.method.ArrowKeyMovementMethod sInstance>;

        return $r1;
    }

    private static int getPageHeight(android.widget.TextView)
    {
        android.widget.TextView r0;
        android.graphics.Rect r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @parameter0: android.widget.TextView;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r1 = $r2;

        $z0 = virtualinvoke r0.<android.widget.TextView: boolean getGlobalVisibleRect(android.graphics.Rect)>(r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        return $i0;

     label1:
        return 0;
    }

    private static boolean isSelecting(android.text.Spannable)
    {
        android.text.Spannable r0;
        int $i0, $i1;

        r0 := @parameter0: android.text.Spannable;

        $i0 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r0, 1);

        if $i0 == 1 goto label1;

        $i1 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>(r0, 2048);

        if $i1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    protected boolean bottom(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z0 == 0 goto label2;

        $i1 = interfaceinvoke r2.<android.text.Spannable: int length()>();

        staticinvoke <android.text.Selection: void extendSelection(android.text.Spannable,int)>(r2, $i1);

     label1:
        return 1;

     label2:
        $i0 = interfaceinvoke r2.<android.text.Spannable: int length()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r2, $i0);

        goto label1;
    }

    public boolean canSelectArbitrarily()
    {
        android.text.method.ArrowKeyMovementMethod r0;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        return 1;
    }

    protected boolean down(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z2;

     label1:
        $z1 = staticinvoke <android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z1;
    }

    protected boolean end(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = virtualinvoke r0.<android.text.method.ArrowKeyMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z0;
    }

    protected boolean handleMovementKey(android.widget.TextView, android.text.Spannable, int, int, android.view.KeyEvent)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, i1, $i2, $i3, $i4;
        android.view.KeyEvent r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.view.KeyEvent;

        tableswitch(i0)
        {
            case 23: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.<android.text.method.BaseMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>(r1, r2, i0, i1, r3);

        return $z0;

     label2:
        $z1 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>(i1);

        if $z1 == 0 goto label1;

        $i2 = virtualinvoke r3.<android.view.KeyEvent: int getAction()>();

        if $i2 != 0 goto label1;

        $i3 = virtualinvoke r3.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label1;

        $i4 = staticinvoke <android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent)>(r2, 2048, r3);

        if $i4 == 0 goto label1;

        $z2 = virtualinvoke r1.<android.widget.TextView: boolean showContextMenu()>();

        return $z2;
    }

    protected boolean home(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = virtualinvoke r0.<android.text.method.ArrowKeyMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>(r1, r2);

        return $z0;
    }

    public void initialize(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r2, 0);

        return;
    }

    protected boolean left(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <android.text.Selection: boolean extendLeft(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z2;

     label1:
        $z1 = staticinvoke <android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z1;
    }

    protected boolean leftWord(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0;
        android.text.method.WordIterator r3;
        boolean $z0, $z1;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 = virtualinvoke r1.<android.widget.TextView: int getSelectionEnd()>();

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.method.WordIterator getWordIterator()>();

        virtualinvoke r3.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>(r2, i0, i0);

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        $z1 = staticinvoke <android.text.Selection: boolean moveToPreceding(android.text.Spannable,android.text.Selection$PositionIterator,boolean)>(r2, r3, $z0);

        return $z1;
    }

    protected boolean lineEnd(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <android.text.Selection: boolean extendToRightEdge(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z2;

     label1:
        $z1 = staticinvoke <android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z1;
    }

    protected boolean lineStart(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <android.text.Selection: boolean extendToLeftEdge(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z2;

     label1:
        $z1 = staticinvoke <android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z1;
    }

    public void onTakeFocus(android.widget.TextView, android.text.Spannable, int)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0, $i1, $i2, $i3;
        android.text.Layout $r3;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 := @parameter2: int;

        $i1 = i0 & 130;

        if $i1 == 0 goto label2;

        $r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        if $r3 != null goto label1;

        $i3 = interfaceinvoke r2.<android.text.Spannable: int length()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r2, $i3);

     label1:
        return;

     label2:
        $i2 = interfaceinvoke r2.<android.text.Spannable: int length()>();

        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r2, $i2);

        return;
    }

    public boolean onTouchEvent(android.widget.TextView, android.text.Spannable, android.view.MotionEvent)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.view.MotionEvent r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        boolean z0, $z1, $z2, $z3, $z5, $z6;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.Object $r4, $r5;
        android.view.ViewParent $r6;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 := @parameter2: android.view.MotionEvent;

        i0 = -1;

        i1 = -1;

        i2 = virtualinvoke r3.<android.view.MotionEvent: int getAction()>();

        if i2 != 1 goto label1;

        i0 = staticinvoke <android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)>(r1, r2);

        i1 = staticinvoke <android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)>(r1, r2);

     label1:
        z0 = staticinvoke <android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>(r1, r2, r3);

        $z1 = virtualinvoke r1.<android.widget.TextView: boolean isFocused()>();

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r1.<android.widget.TextView: boolean didTouchFocusSelect()>();

        if $z2 != 0 goto label2;

        if i2 != 0 goto label3;

        $z6 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z6 == 0 goto label2;

        $f5 = virtualinvoke r3.<android.view.MotionEvent: float getX()>();

        $f4 = virtualinvoke r3.<android.view.MotionEvent: float getY()>();

        i4 = virtualinvoke r1.<android.widget.TextView: int getOffsetForPosition(float,float)>($f5, $f4);

        $r5 = <android.text.method.ArrowKeyMovementMethod: java.lang.Object LAST_TAP_DOWN>;

        interfaceinvoke r2.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>($r5, i4, i4, 34);

        $r6 = virtualinvoke r1.<android.widget.TextView: android.view.ViewParent getParent()>();

        interfaceinvoke $r6.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label2:
        return z0;

     label3:
        if i2 != 2 goto label4;

        $z5 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z5 == 0 goto label2;

        if z0 == 0 goto label2;

        virtualinvoke r1.<android.widget.TextView: void cancelLongPress()>();

        $f3 = virtualinvoke r3.<android.view.MotionEvent: float getX()>();

        $f2 = virtualinvoke r3.<android.view.MotionEvent: float getY()>();

        $i7 = virtualinvoke r1.<android.widget.TextView: int getOffsetForPosition(float,float)>($f3, $f2);

        staticinvoke <android.text.Selection: void extendSelection(android.text.Spannable,int)>(r2, $i7);

        return 1;

     label4:
        if i2 != 1 goto label2;

        if i1 < 0 goto label5;

        $i6 = virtualinvoke r1.<android.widget.TextView: int getScrollY()>();

        if i1 != $i6 goto label6;

     label5:
        if i0 < 0 goto label7;

        $i5 = virtualinvoke r1.<android.widget.TextView: int getScrollX()>();

        if i0 == $i5 goto label7;

     label6:
        virtualinvoke r1.<android.widget.TextView: boolean moveCursorToVisibleOffset()>();

        return 1;

     label7:
        $f0 = virtualinvoke r3.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r3.<android.view.MotionEvent: float getY()>();

        i3 = virtualinvoke r1.<android.widget.TextView: int getOffsetForPosition(float,float)>($f0, $f1);

        $z3 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z3 == 0 goto label8;

        $r4 = <android.text.method.ArrowKeyMovementMethod: java.lang.Object LAST_TAP_DOWN>;

        interfaceinvoke r2.<android.text.Spannable: void removeSpan(java.lang.Object)>($r4);

        staticinvoke <android.text.Selection: void extendSelection(android.text.Spannable,int)>(r2, i3);

     label8:
        staticinvoke <android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>(r2);

        staticinvoke <android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>(r2);

        return 1;
    }

    protected boolean pageDown(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        boolean z0, z1;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        $i2 = staticinvoke <android.text.method.ArrowKeyMovementMethod: int getCurrentLineTop(android.text.Spannable,android.text.Layout)>(r2, r3);

        $i3 = staticinvoke <android.text.method.ArrowKeyMovementMethod: int getPageHeight(android.widget.TextView)>(r1);

        i0 = $i2 + $i3;

        z1 = 0;

     label1:
        i1 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        if z0 == 0 goto label3;

        staticinvoke <android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)>(r2, r3);

     label2:
        $i4 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        if $i4 != i1 goto label4;

        return z1;

     label3:
        staticinvoke <android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)>(r2, r3);

        goto label2;

     label4:
        z1 = 1;

        $i5 = staticinvoke <android.text.method.ArrowKeyMovementMethod: int getCurrentLineTop(android.text.Spannable,android.text.Layout)>(r2, r3);

        if $i5 < i0 goto label1;

        return 1;
    }

    protected boolean pageUp(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        boolean z0, z1;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        $i2 = staticinvoke <android.text.method.ArrowKeyMovementMethod: int getCurrentLineTop(android.text.Spannable,android.text.Layout)>(r2, r3);

        $i3 = staticinvoke <android.text.method.ArrowKeyMovementMethod: int getPageHeight(android.widget.TextView)>(r1);

        i0 = $i2 - $i3;

        z1 = 0;

     label1:
        i1 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        if z0 == 0 goto label3;

        staticinvoke <android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)>(r2, r3);

     label2:
        $i4 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        if $i4 != i1 goto label4;

        return z1;

     label3:
        staticinvoke <android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)>(r2, r3);

        goto label2;

     label4:
        z1 = 1;

        $i5 = staticinvoke <android.text.method.ArrowKeyMovementMethod: int getCurrentLineTop(android.text.Spannable,android.text.Layout)>(r2, r3);

        if $i5 > i0 goto label1;

        return 1;
    }

    protected boolean right(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <android.text.Selection: boolean extendRight(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z2;

     label1:
        $z1 = staticinvoke <android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z1;
    }

    protected boolean rightWord(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        int i0;
        android.text.method.WordIterator r3;
        boolean $z0, $z1;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        i0 = virtualinvoke r1.<android.widget.TextView: int getSelectionEnd()>();

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.method.WordIterator getWordIterator()>();

        virtualinvoke r3.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>(r2, i0, i0);

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        $z1 = staticinvoke <android.text.Selection: boolean moveToFollowing(android.text.Spannable,android.text.Selection$PositionIterator,boolean)>(r2, r3, $z0);

        return $z1;
    }

    protected boolean top(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        boolean $z0;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z0 == 0 goto label2;

        staticinvoke <android.text.Selection: void extendSelection(android.text.Spannable,int)>(r2, 0);

     label1:
        return 1;

     label2:
        staticinvoke <android.text.Selection: void setSelection(android.text.Spannable,int)>(r2, 0);

        goto label1;
    }

    protected boolean up(android.widget.TextView, android.text.Spannable)
    {
        android.text.method.ArrowKeyMovementMethod r0;
        android.widget.TextView r1;
        android.text.Spannable r2;
        android.text.Layout r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.text.method.ArrowKeyMovementMethod;

        r1 := @parameter0: android.widget.TextView;

        r2 := @parameter1: android.text.Spannable;

        r3 = virtualinvoke r1.<android.widget.TextView: android.text.Layout getLayout()>();

        $z0 = staticinvoke <android.text.method.ArrowKeyMovementMethod: boolean isSelecting(android.text.Spannable)>(r2);

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z2;

     label1:
        $z1 = staticinvoke <android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)>(r2, r3);

        return $z1;
    }
}
