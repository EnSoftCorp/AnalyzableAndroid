public abstract class android.net.INetworkPolicyManager$Stub extends android.os.Binder implements android.net.INetworkPolicyManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_getNetworkPolicies;
    static final int TRANSACTION_getNetworkQuotaInfo;
    static final int TRANSACTION_getRestrictBackground;
    static final int TRANSACTION_getUidPolicy;
    static final int TRANSACTION_getUidsWithPolicy;
    static final int TRANSACTION_isNetworkMetered;
    static final int TRANSACTION_isUidForeground;
    static final int TRANSACTION_registerListener;
    static final int TRANSACTION_setNetworkPolicies;
    static final int TRANSACTION_setRestrictBackground;
    static final int TRANSACTION_setUidPolicy;
    static final int TRANSACTION_snoozeLimit;
    static final int TRANSACTION_unregisterListener;

    public void <init>()
    {
        android.net.INetworkPolicyManager$Stub r0;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.net.INetworkPolicyManager");

        return;
    }

    public static android.net.INetworkPolicyManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.net.INetworkPolicyManager$Stub$Proxy $r2;
        boolean $z0;
        android.net.INetworkPolicyManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.net.INetworkPolicyManager;

        if $z0 == 0 goto label2;

        $r3 = (android.net.INetworkPolicyManager) r1;

        return $r3;

     label2:
        $r2 = new android.net.INetworkPolicyManager$Stub$Proxy;

        specialinvoke $r2.<android.net.INetworkPolicyManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkPolicyManager$Stub r0;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.net.INetworkPolicyManager$Stub r0;
        int i0, i1, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.os.Parcel r1, r2;
        android.net.NetworkState r3, r4;
        boolean z0, z1, z2, z3, $z4;
        byte b2, b3, b4;
        android.net.NetworkQuotaInfo r5;
        android.net.NetworkTemplate r6;
        android.net.NetworkPolicy[] r7, $r16;
        int[] r8;
        android.os.Parcelable$Creator $r9, $r11, $r14, $r17;
        java.lang.Object $r10, $r12, $r13;
        java.lang.Object[] $r15;
        android.os.IBinder $r18, $r20;
        android.net.INetworkPolicyListener $r19, $r21;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label15;
            case 11: goto label18;
            case 12: goto label20;
            case 13: goto label24;
            case 1598968902: goto label02;
            default: goto label01;
        };

     label01:
        $z4 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z4;

     label02:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.net.INetworkPolicyManager");

        return 1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setUidPolicy(int,int)>($i12, $i13);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label04:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i6 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: int getUidPolicy(int)>($i14);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i6);

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r8 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: int[] getUidsWithPolicy(int)>($i10);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r8);

        return 1;

     label06:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        z3 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: boolean isUidForeground(int)>($i11);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        b4 = 0;

        if z3 == 0 goto label07;

        b4 = 1;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b4);

        return 1;

     label08:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r18 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r19 = staticinvoke <android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)>($r18);

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void registerListener(android.net.INetworkPolicyListener)>($r19);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label09:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r20 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r21 = staticinvoke <android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)>($r20);

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void unregisterListener(android.net.INetworkPolicyListener)>($r21);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label10:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r17 = <android.net.NetworkPolicy: android.os.Parcelable$Creator CREATOR>;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r17);

        $r16 = (android.net.NetworkPolicy[]) $r15;

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setNetworkPolicies(android.net.NetworkPolicy[])>($r16);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label11:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        r7 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: android.net.NetworkPolicy[] getNetworkPolicies()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r7, 1);

        return 1;

     label12:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i8 == 0 goto label14;

        $r14 = <android.net.NetworkTemplate: android.os.Parcelable$Creator CREATOR>;

        $r13 = interfaceinvoke $r14.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r6 = (android.net.NetworkTemplate) $r13;

     label13:
        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void snoozeLimit(android.net.NetworkTemplate)>(r6);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        r6 = null;

        goto label13;

     label15:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i9 == 0 goto label17;

        z2 = 1;

     label16:
        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setRestrictBackground(boolean)>(z2);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label17:
        z2 = 0;

        goto label16;

     label18:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        z1 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: boolean getRestrictBackground()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        b3 = 0;

        if z1 == 0 goto label19;

        b3 = 1;

     label19:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b3);

        return 1;

     label20:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i7 == 0 goto label22;

        $r11 = <android.net.NetworkState: android.os.Parcelable$Creator CREATOR>;

        $r12 = interfaceinvoke $r11.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r4 = (android.net.NetworkState) $r12;

     label21:
        r5 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>(r4);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r5 == null goto label23;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r5.<android.net.NetworkQuotaInfo: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        return 1;

     label22:
        r4 = null;

        goto label21;

     label23:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        return 1;

     label24:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i5 == 0 goto label27;

        $r9 = <android.net.NetworkState: android.os.Parcelable$Creator CREATOR>;

        $r10 = interfaceinvoke $r9.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r3 = (android.net.NetworkState) $r10;

     label25:
        z0 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: boolean isNetworkMetered(android.net.NetworkState)>(r3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        b2 = 0;

        if z0 == 0 goto label26;

        b2 = 1;

     label26:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

        return 1;

     label27:
        r3 = null;

        goto label25;
    }

    public static void <clinit>()
    {
        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_unregisterListener> = 6;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_snoozeLimit> = 9;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setUidPolicy> = 1;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setRestrictBackground> = 10;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setNetworkPolicies> = 7;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_registerListener> = 5;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_isUidForeground> = 4;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_isNetworkMetered> = 13;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getUidsWithPolicy> = 3;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getUidPolicy> = 2;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getRestrictBackground> = 11;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getNetworkQuotaInfo> = 12;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getNetworkPolicies> = 8;

        <android.net.INetworkPolicyManager$Stub: java.lang.String DESCRIPTOR> = "android.net.INetworkPolicyManager";

        return;
    }
}
