final class org.apache.harmony.xml.parsers.SAXParserImpl extends javax.xml.parsers.SAXParser
{
    private java.util.Map initialFeatures;
    private org.xml.sax.Parser parser;
    private org.xml.sax.XMLReader reader;

    void <init>(java.util.Map) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.parsers.SAXParserImpl r0;
        java.util.Map r1, r2;
        boolean $z0;
        java.util.HashMap $r3;

        r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<javax.xml.parsers.SAXParser: void <init>()>();

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

     label1:
        r0.<org.apache.harmony.xml.parsers.SAXParserImpl: java.util.Map initialFeatures> = r2;

        specialinvoke r0.<org.apache.harmony.xml.parsers.SAXParserImpl: void resetInternal()>();

        return;

     label2:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(java.util.Map)>(r1);

        r2 = $r3;

        goto label1;
    }

    private void resetInternal() throws org.xml.sax.SAXNotSupportedException, org.xml.sax.SAXNotRecognizedException
    {
        org.apache.harmony.xml.parsers.SAXParserImpl r0;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        org.apache.harmony.xml.ExpatReader $r3;
        java.util.Map $r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r8, $r10;
        org.xml.sax.XMLReader $r7;
        java.lang.String $r9;
        java.lang.Boolean $r11;

        r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        $r3 = new org.apache.harmony.xml.ExpatReader;

        specialinvoke $r3.<org.apache.harmony.xml.ExpatReader: void <init>()>();

        r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader> = $r3;

        $r4 = r0.<org.apache.harmony.xml.parsers.SAXParserImpl: java.util.Map initialFeatures>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r6;

        $r7 = r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        $r8 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $r10 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (java.lang.Boolean) $r10;

        $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        interfaceinvoke $r7.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>($r9, $z1);

        goto label1;

     label2:
        return;
    }

    public org.xml.sax.Parser getParser()
    {
        org.apache.harmony.xml.parsers.SAXParserImpl r0;
        org.xml.sax.Parser $r1, $r2;
        org.xml.sax.helpers.XMLReaderAdapter $r3;
        org.xml.sax.XMLReader $r4;

        r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        $r1 = r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.Parser parser>;

        if $r1 != null goto label1;

        $r3 = new org.xml.sax.helpers.XMLReaderAdapter;

        $r4 = r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        specialinvoke $r3.<org.xml.sax.helpers.XMLReaderAdapter: void <init>(org.xml.sax.XMLReader)>($r4);

        r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.Parser parser> = $r3;

     label1:
        $r2 = r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.Parser parser>;

        return $r2;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.parsers.SAXParserImpl r0;
        java.lang.String r1;
        org.xml.sax.XMLReader $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        $r3 = interfaceinvoke $r2.<org.xml.sax.XMLReader: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public org.xml.sax.XMLReader getXMLReader()
    {
        org.apache.harmony.xml.parsers.SAXParserImpl r0;
        org.xml.sax.XMLReader $r1;

        r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        $r1 = r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        return $r1;
    }

    public boolean isNamespaceAware()
    {
        org.apache.harmony.xml.parsers.SAXParserImpl r0;
        boolean z0;
        org.xml.sax.XMLReader $r2;
        org.xml.sax.SAXException $r3;

        r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

     label1:
        $r2 = r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        z0 = interfaceinvoke $r2.<org.xml.sax.XMLReader: boolean getFeature(java.lang.String)>("http://xml.org/sax/features/namespaces");

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    public boolean isValidating()
    {
        org.apache.harmony.xml.parsers.SAXParserImpl r0;

        r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        return 0;
    }

    public void reset()
    {
        org.apache.harmony.xml.parsers.SAXParserImpl r0;
        org.xml.sax.SAXNotRecognizedException $r3;
        java.lang.AssertionError $r4, $r6;
        org.xml.sax.SAXNotSupportedException $r5;

        r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

     label1:
        specialinvoke r0.<org.apache.harmony.xml.parsers.SAXParserImpl: void resetInternal()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

        catch org.xml.sax.SAXNotRecognizedException from label1 to label2 with label3;
        catch org.xml.sax.SAXNotSupportedException from label1 to label2 with label4;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.apache.harmony.xml.parsers.SAXParserImpl r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.xml.sax.XMLReader $r3;

        r0 := @this: org.apache.harmony.xml.parsers.SAXParserImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader reader>;

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }
}
