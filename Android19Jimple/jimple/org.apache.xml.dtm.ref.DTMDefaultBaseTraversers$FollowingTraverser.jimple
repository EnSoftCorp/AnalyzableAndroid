class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser extends org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser
{
    final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers,org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)>(r1, null);

        return;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }

    public int first(int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        int i0, i1, i3, i4, $i5, $i6;
        short s2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i1 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i0);

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        s2 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: short _type(int)>(i1);

        if 2 == s2 goto label1;

        if 13 != s2 goto label2;

     label1:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i1 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int _parent(int)>(i1);

        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i3 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int _firstch(int)>(i1);

        if -1 == i3 goto label2;

        $r8 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i6 = virtualinvoke $r8.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i3);

        return $i6;

     label2:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i4 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int _nextsib(int)>(i1);

        if -1 != i4 goto label3;

        $r7 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i1 = virtualinvoke $r7.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int _parent(int)>(i1);

     label3:
        if -1 != i4 goto label4;

        if -1 != i1 goto label2;

     label4:
        $r6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r6.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i4);

        return $i5;
    }

    public int first(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        int i0, i1, i3, i4, $i5, $i6, $i7, $i8;
        short s2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        s2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: short getNodeType(int)>(i0);

        if 2 == s2 goto label1;

        if 13 != s2 goto label3;

     label1:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i0 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getParent(int)>(i0);

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i3 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getFirstChild(int)>(i0);

        if -1 == i3 goto label3;

        $r7 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i8 = virtualinvoke $r7.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getExpandedTypeID(int)>(i3);

        if $i8 != i1 goto label2;

        return i3;

     label2:
        $i7 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: int next(int,int,int)>(i0, i3, i1);

        return $i7;

     label3:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i4 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getNextSibling(int)>(i0);

        if -1 != i4 goto label5;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i0 = virtualinvoke $r6.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getParent(int)>(i0);

        if -1 != i4 goto label4;

        if -1 != i0 goto label3;

     label4:
        return i4;

     label5:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int getExpandedTypeID(int)>(i4);

        if $i5 != i1 goto label6;

        return i4;

     label6:
        $i6 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: int next(int,int,int)>(i0, i4, i1);

        return $i6;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        int i0, i1, i2, $i4;
        short s3;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i1);

     label1:
        i2 = i2 + 1;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        s3 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: short _type(int)>(i2);

        if -1 != s3 goto label2;

        return -1;

     label2:
        if 2 == s3 goto label1;

        if 13 == s3 goto label1;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i4 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i2);

        return $i4;
    }

    public int next(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser r0;
        int i0, i1, i2, i3, i4, $i5;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i3 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i1);

     label1:
        i3 = i3 + 1;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i4 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int _exptype(int)>(i3);

        if -1 != i4 goto label2;

        return -1;

     label2:
        if i4 != i2 goto label1;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i3);

        return $i5;
    }
}
