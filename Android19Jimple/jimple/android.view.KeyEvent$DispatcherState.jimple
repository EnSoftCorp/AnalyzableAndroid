public class android.view.KeyEvent$DispatcherState extends java.lang.Object
{
    android.util.SparseIntArray mActiveLongPresses;
    int mDownKeyCode;
    java.lang.Object mDownTarget;

    public void <init>()
    {
        android.view.KeyEvent$DispatcherState r0;
        android.util.SparseIntArray $r1;

        r0 := @this: android.view.KeyEvent$DispatcherState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseIntArray;

        specialinvoke $r1.<android.util.SparseIntArray: void <init>()>();

        r0.<android.view.KeyEvent$DispatcherState: android.util.SparseIntArray mActiveLongPresses> = $r1;

        return;
    }

    public void handleUpEvent(android.view.KeyEvent)
    {
        android.view.KeyEvent$DispatcherState r0;
        android.view.KeyEvent r1;
        int i0, i1, $i2;
        android.util.SparseIntArray $r2, $r3;

        r0 := @this: android.view.KeyEvent$DispatcherState;

        r1 := @parameter0: android.view.KeyEvent;

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $r2 = r0.<android.view.KeyEvent$DispatcherState: android.util.SparseIntArray mActiveLongPresses>;

        i1 = virtualinvoke $r2.<android.util.SparseIntArray: int indexOfKey(int)>(i0);

        if i1 < 0 goto label1;

        staticinvoke <android.view.KeyEvent: int access$076(android.view.KeyEvent,int)>(r1, 288);

        $r3 = r0.<android.view.KeyEvent$DispatcherState: android.util.SparseIntArray mActiveLongPresses>;

        virtualinvoke $r3.<android.util.SparseIntArray: void removeAt(int)>(i1);

     label1:
        $i2 = r0.<android.view.KeyEvent$DispatcherState: int mDownKeyCode>;

        if $i2 != i0 goto label2;

        staticinvoke <android.view.KeyEvent: int access$076(android.view.KeyEvent,int)>(r1, 512);

        r0.<android.view.KeyEvent$DispatcherState: int mDownKeyCode> = 0;

        r0.<android.view.KeyEvent$DispatcherState: java.lang.Object mDownTarget> = null;

     label2:
        return;
    }

    public boolean isTracking(android.view.KeyEvent)
    {
        android.view.KeyEvent$DispatcherState r0;
        android.view.KeyEvent r1;
        int $i0, $i1;

        r0 := @this: android.view.KeyEvent$DispatcherState;

        r1 := @parameter0: android.view.KeyEvent;

        $i0 = r0.<android.view.KeyEvent$DispatcherState: int mDownKeyCode>;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void performedLongPress(android.view.KeyEvent)
    {
        android.view.KeyEvent$DispatcherState r0;
        android.view.KeyEvent r1;
        android.util.SparseIntArray $r2;
        int $i0;

        r0 := @this: android.view.KeyEvent$DispatcherState;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = r0.<android.view.KeyEvent$DispatcherState: android.util.SparseIntArray mActiveLongPresses>;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        virtualinvoke $r2.<android.util.SparseIntArray: void put(int,int)>($i0, 1);

        return;
    }

    public void reset()
    {
        android.view.KeyEvent$DispatcherState r0;
        android.util.SparseIntArray $r1;

        r0 := @this: android.view.KeyEvent$DispatcherState;

        r0.<android.view.KeyEvent$DispatcherState: int mDownKeyCode> = 0;

        r0.<android.view.KeyEvent$DispatcherState: java.lang.Object mDownTarget> = null;

        $r1 = r0.<android.view.KeyEvent$DispatcherState: android.util.SparseIntArray mActiveLongPresses>;

        virtualinvoke $r1.<android.util.SparseIntArray: void clear()>();

        return;
    }

    public void reset(java.lang.Object)
    {
        android.view.KeyEvent$DispatcherState r0;
        java.lang.Object r1, $r2;

        r0 := @this: android.view.KeyEvent$DispatcherState;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<android.view.KeyEvent$DispatcherState: java.lang.Object mDownTarget>;

        if $r2 != r1 goto label1;

        r0.<android.view.KeyEvent$DispatcherState: int mDownKeyCode> = 0;

        r0.<android.view.KeyEvent$DispatcherState: java.lang.Object mDownTarget> = null;

     label1:
        return;
    }

    public void startTracking(android.view.KeyEvent, java.lang.Object)
    {
        android.view.KeyEvent$DispatcherState r0;
        android.view.KeyEvent r1;
        java.lang.Object r2;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.view.KeyEvent$DispatcherState;

        r1 := @parameter0: android.view.KeyEvent;

        r2 := @parameter1: java.lang.Object;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i0 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only start tracking on a down event");

        throw $r3;

     label1:
        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        r0.<android.view.KeyEvent$DispatcherState: int mDownKeyCode> = $i1;

        r0.<android.view.KeyEvent$DispatcherState: java.lang.Object mDownTarget> = r2;

        return;
    }
}
