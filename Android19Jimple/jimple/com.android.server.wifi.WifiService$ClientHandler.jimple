class com.android.server.wifi.WifiService$ClientHandler extends android.os.Handler
{
    final com.android.server.wifi.WifiService this$0;

    void <init>(com.android.server.wifi.WifiService, android.os.Looper)
    {
        com.android.server.wifi.WifiService$ClientHandler r0;
        com.android.server.wifi.WifiService r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.wifi.WifiService$ClientHandler;

        r1 := @parameter0: com.android.server.wifi.WifiService;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.wifi.WifiService$ClientHandler: com.android.server.wifi.WifiService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    private void replyFailed(android.os.Message, int)
    {
        com.android.server.wifi.WifiService$ClientHandler r0;
        android.os.Message r1, r2;
        int i0;
        android.os.Messenger $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.wifi.WifiService$ClientHandler;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = 8;

     label1:
        $r4 = r1.<android.os.Message: android.os.Messenger replyTo>;

        virtualinvoke $r4.<android.os.Messenger: void send(android.os.Message)>(r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.wifi.WifiService$ClientHandler r0;
        android.os.Message r1, $r5, $r13, $r18;
        android.net.wifi.WifiConfiguration r2;
        int i0, $i1, $i3, $i4, $i6, $i7, $i8;
        com.android.server.wifi.WifiService $r3, $r12, $r17, $r20, $r24, $r28;
        android.net.wifi.WifiStateMachine $r4, $r11, $r16;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r26, $r27, $r29, $r31, $r35, $r36;
        java.lang.String $r10, $r30, $r34;
        boolean $z0;
        android.net.wifi.WifiConfiguration$ProxySettings $r14, $r15;
        com.android.server.wifi.WifiTrafficPoller $r19, $r32;
        com.android.internal.util.AsyncChannel $r21;
        android.os.Messenger $r22, $r23, $r33;
        android.content.Context $r25;

        r0 := @this: com.android.server.wifi.WifiService$ClientHandler;

        r1 := @parameter0: android.os.Message;

        $i1 = r1.<android.os.Message: int what>;

        lookupswitch($i1)
        {
            case 69632: goto label02;
            case 69633: goto label06;
            case 69636: goto label04;
            case 151553: goto label07;
            case 151556: goto label13;
            case 151559: goto label07;
            case 151562: goto label13;
            case 151566: goto label13;
            case 151569: goto label13;
            case 151572: goto label13;
            default: goto label01;
        };

     label01:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClientHandler.handleMessage ignoring msg=");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("WifiService", $r34);

        return;

     label02:
        $i7 = r1.<android.os.Message: int arg1>;

        if $i7 != 0 goto label03;

        $r28 = r0.<com.android.server.wifi.WifiService$ClientHandler: com.android.server.wifi.WifiService this$0>;

        $r32 = staticinvoke <com.android.server.wifi.WifiService: com.android.server.wifi.WifiTrafficPoller access$100(com.android.server.wifi.WifiService)>($r28);

        $r33 = r1.<android.os.Message: android.os.Messenger replyTo>;

        virtualinvoke $r32.<com.android.server.wifi.WifiTrafficPoller: void addClient(android.os.Messenger)>($r33);

        return;

     label03:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client connection failure, error=");

        $i8 = r1.<android.os.Message: int arg1>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WifiService", $r30);

        return;

     label04:
        $i6 = r1.<android.os.Message: int arg1>;

        if $i6 != 2 goto label05;

     label05:
        $r20 = r0.<com.android.server.wifi.WifiService$ClientHandler: com.android.server.wifi.WifiService this$0>;

        $r19 = staticinvoke <com.android.server.wifi.WifiService: com.android.server.wifi.WifiTrafficPoller access$100(com.android.server.wifi.WifiService)>($r20);

        $r22 = r1.<android.os.Message: android.os.Messenger replyTo>;

        virtualinvoke $r19.<com.android.server.wifi.WifiTrafficPoller: void removeClient(android.os.Messenger)>($r22);

        return;

     label06:
        $r21 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r21.<com.android.internal.util.AsyncChannel: void <init>()>();

        $r24 = r0.<com.android.server.wifi.WifiService$ClientHandler: com.android.server.wifi.WifiService this$0>;

        $r25 = staticinvoke <com.android.server.wifi.WifiService: android.content.Context access$200(com.android.server.wifi.WifiService)>($r24);

        $r23 = r1.<android.os.Message: android.os.Messenger replyTo>;

        virtualinvoke $r21.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>($r25, r0, $r23);

        return;

     label07:
        $r6 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.net.wifi.WifiConfiguration) $r6;

        i0 = r1.<android.os.Message: int arg1>;

        if r2 == null goto label10;

        $z0 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: boolean isValid()>();

        if $z0 == 0 goto label10;

        $r14 = r2.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$ProxySettings proxySettings>;

        $r15 = <android.net.wifi.WifiConfiguration$ProxySettings: android.net.wifi.WifiConfiguration$ProxySettings PAC>;

        if $r14 == $r15 goto label08;

        $r17 = r0.<com.android.server.wifi.WifiService$ClientHandler: com.android.server.wifi.WifiService this$0>;

        $r16 = $r17.<com.android.server.wifi.WifiService: android.net.wifi.WifiStateMachine mWifiStateMachine>;

        $r18 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Message)>(r1);

        virtualinvoke $r16.<android.net.wifi.WifiStateMachine: void sendMessage(android.os.Message)>($r18);

        return;

     label08:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WifiService", "ClientHandler.handleMessage cannot process msg with PAC");

        $i4 = r1.<android.os.Message: int what>;

        if $i4 != 151553 goto label09;

        specialinvoke r0.<com.android.server.wifi.WifiService$ClientHandler: void replyFailed(android.os.Message,int)>(r1, 151554);

        return;

     label09:
        specialinvoke r0.<com.android.server.wifi.WifiService$ClientHandler: void replyFailed(android.os.Message,int)>(r1, 151560);

        return;

     label10:
        if r2 != null goto label11;

        if i0 == -1 goto label11;

        $r12 = r0.<com.android.server.wifi.WifiService$ClientHandler: com.android.server.wifi.WifiService this$0>;

        $r11 = $r12.<com.android.server.wifi.WifiService: android.net.wifi.WifiStateMachine mWifiStateMachine>;

        $r13 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Message)>(r1);

        virtualinvoke $r11.<android.net.wifi.WifiStateMachine: void sendMessage(android.os.Message)>($r13);

        return;

     label11:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClientHandler.handleMessage ignoring invalid msg=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WifiService", $r10);

        $i3 = r1.<android.os.Message: int what>;

        if $i3 != 151553 goto label12;

        specialinvoke r0.<com.android.server.wifi.WifiService$ClientHandler: void replyFailed(android.os.Message,int)>(r1, 151554);

        return;

     label12:
        specialinvoke r0.<com.android.server.wifi.WifiService$ClientHandler: void replyFailed(android.os.Message,int)>(r1, 151560);

        return;

     label13:
        $r3 = r0.<com.android.server.wifi.WifiService$ClientHandler: com.android.server.wifi.WifiService this$0>;

        $r4 = $r3.<com.android.server.wifi.WifiService: android.net.wifi.WifiStateMachine mWifiStateMachine>;

        $r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Message)>(r1);

        virtualinvoke $r4.<android.net.wifi.WifiStateMachine: void sendMessage(android.os.Message)>($r5);

        return;
    }
}
