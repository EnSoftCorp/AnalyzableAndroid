public class com.android.internal.view.IInputConnectionWrapper extends com.android.internal.view.IInputContext$Stub
{
    private static final int DO_BEGIN_BATCH_EDIT;
    private static final int DO_CLEAR_META_KEY_STATES;
    private static final int DO_COMMIT_COMPLETION;
    private static final int DO_COMMIT_CORRECTION;
    private static final int DO_COMMIT_TEXT;
    private static final int DO_DELETE_SURROUNDING_TEXT;
    private static final int DO_END_BATCH_EDIT;
    private static final int DO_FINISH_COMPOSING_TEXT;
    private static final int DO_GET_CURSOR_CAPS_MODE;
    private static final int DO_GET_EXTRACTED_TEXT;
    private static final int DO_GET_SELECTED_TEXT;
    private static final int DO_GET_TEXT_AFTER_CURSOR;
    private static final int DO_GET_TEXT_BEFORE_CURSOR;
    private static final int DO_PERFORM_CONTEXT_MENU_ACTION;
    private static final int DO_PERFORM_EDITOR_ACTION;
    private static final int DO_PERFORM_PRIVATE_COMMAND;
    private static final int DO_REPORT_FULLSCREEN_MODE;
    private static final int DO_SEND_KEY_EVENT;
    private static final int DO_SET_COMPOSING_REGION;
    private static final int DO_SET_COMPOSING_TEXT;
    private static final int DO_SET_SELECTION;
    static final java.lang.String TAG;
    private android.os.Handler mH;
    private java.lang.ref.WeakReference mInputConnection;
    private android.os.Looper mMainLooper;

    public void <init>(android.os.Looper, android.view.inputmethod.InputConnection)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Looper r1, $r5;
        android.view.inputmethod.InputConnection r2;
        java.lang.ref.WeakReference $r3;
        com.android.internal.view.IInputConnectionWrapper$MyHandler $r4;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: android.view.inputmethod.InputConnection;

        specialinvoke r0.<com.android.internal.view.IInputContext$Stub: void <init>()>();

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection> = $r3;

        r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Looper mMainLooper> = r1;

        $r4 = new com.android.internal.view.IInputConnectionWrapper$MyHandler;

        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Looper mMainLooper>;

        specialinvoke $r4.<com.android.internal.view.IInputConnectionWrapper$MyHandler: void <init>(com.android.internal.view.IInputConnectionWrapper,android.os.Looper)>(r0, $r5);

        r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH> = $r4;

        return;
    }

    public void beginBatchEdit()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(90);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void clearMetaKeyStates(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(130, i0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void commitCompletion(android.view.inputmethod.CompletionInfo)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.CompletionInfo r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>(55, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void commitCorrection(android.view.inputmethod.CorrectionInfo)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>(56, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void commitText(java.lang.CharSequence, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.CharSequence r1;
        int i0;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(50, i0, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void deleteSurroundingText(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(80, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    void dispatchMessage(android.os.Message)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message r1;
        android.os.Looper $r2, $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.os.Message;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r3 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Looper mMainLooper>;

        if $r2 != $r3 goto label1;

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void executeMessage(android.os.Message)>(r1);

        virtualinvoke r1.<android.os.Message: void recycle()>();

        return;

     label1:
        $r4 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void endBatchEdit()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(95);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    void executeMessage(android.os.Message)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message r1;
        boolean z0, $z1, $z2, $z5, $z8, $z10, $z11, $z13, $z16, $z18, $z21, $z22, $z24, $z25, $z29, $z30, $z31, $z33, $z34, $z35, $z36;
        android.view.inputmethod.InputConnection r2, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r26, r28, r29, r35;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r3, r21, r23, r25, r30, r33;
        android.os.RemoteException r20, r22, r24, r27, r34, $r111, $r112, $r113, $r114, $r120;
        int $i0, $i3, $i6, $i10, $i11, $i14, $i16, $i17, $i18, $i20, $i21, $i23, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i37, $i39, $i40, $i41, $i43, $i44, $i45, $i46, $i48, $i49, $i50, $i55, $i56, i59;
        java.lang.ref.WeakReference $r31, $r38, $r39, $r46, $r48, $r49, $r52, $r53, $r55, $r61, $r64, $r65, $r67, $r70, $r71, $r75, $r78, $r89, $r99, $r102, $r107;
        java.lang.Object $r32, $r36, $r37, $r40, $r41, $r42, $r45, $r47, $r50, $r51, $r54, $r57, $r58, $r60, $r62, $r63, $r66, $r68, $r69, $r73, $r74, $r77, $r79, $r80, $r82, $r83, $r84, $r87, $r90, $r91, $r95, $r98, $r103, $r106, $r108;
        java.lang.String $r43, $r116;
        android.os.Bundle $r44;
        android.view.KeyEvent $r56;
        java.lang.CharSequence $r59, $r85, $r97, $r109, $r119;
        android.view.inputmethod.CompletionInfo $r72;
        android.view.inputmethod.CorrectionInfo $r76;
        com.android.internal.view.IInputContextCallback $r81, $r86, $r88, $r92, $r96, $r100, $r101, $r104, $r105, $r110;
        android.view.inputmethod.ExtractedTextRequest $r93;
        android.view.inputmethod.ExtractedText $r94;
        java.lang.StringBuilder $r115, $r117, $r118;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.os.Message;

        z0 = 1;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 10: goto label02;
            case 20: goto label11;
            case 25: goto label20;
            case 30: goto label29;
            case 40: goto label38;
            case 50: goto label47;
            case 55: goto label59;
            case 56: goto label62;
            case 57: goto label50;
            case 58: goto label53;
            case 59: goto label56;
            case 60: goto label65;
            case 63: goto label68;
            case 65: goto label71;
            case 70: goto label73;
            case 80: goto label79;
            case 90: goto label82;
            case 95: goto label85;
            case 100: goto label88;
            case 120: goto label93;
            case 130: goto label76;
            default: goto label01;
        };

     label01:
        $r118 = new java.lang.StringBuilder;

        specialinvoke $r118.<java.lang.StringBuilder: void <init>()>();

        $r117 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i55 = r1.<android.os.Message: int what>;

        $r115 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i55);

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", $r116);

        return;

     label02:
        $r108 = r1.<android.os.Message: java.lang.Object obj>;

        r33 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r108;

     label03:
        $r107 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r106 = virtualinvoke $r107.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r35 = (android.view.inputmethod.InputConnection) $r106;

     label04:
        if r35 == null goto label06;

     label05:
        $z35 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z35 != 0 goto label09;

     label06:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getTextAfterCursor on inactive InputConnection");

        $r105 = r33.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i46 = r33.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r105.<com.android.internal.view.IInputContextCallback: void setTextAfterCursor(java.lang.CharSequence,int)>(null, $i46);

     label07:
        return;

     label08:
        $r112 := @caughtexception;

        r34 = $r112;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setTextAfterCursor", r34);

        return;

     label09:
        $r104 = r33.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i44 = r1.<android.os.Message: int arg1>;

        $i45 = r1.<android.os.Message: int arg2>;

        $r119 = interfaceinvoke r35.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>($i44, $i45);

        $i56 = r33.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r104.<com.android.internal.view.IInputContextCallback: void setTextAfterCursor(java.lang.CharSequence,int)>($r119, $i56);

     label10:
        return;

     label11:
        $r98 = r1.<android.os.Message: java.lang.Object obj>;

        r30 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r98;

     label12:
        $r99 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r95 = virtualinvoke $r99.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r28 = (android.view.inputmethod.InputConnection) $r95;

     label13:
        if r28 == null goto label15;

     label14:
        $z36 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z36 != 0 goto label18;

     label15:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getTextBeforeCursor on inactive InputConnection");

        $r96 = r30.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i39 = r30.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r96.<com.android.internal.view.IInputContextCallback: void setTextBeforeCursor(java.lang.CharSequence,int)>(null, $i39);

     label16:
        return;

     label17:
        $r111 := @caughtexception;

        r27 = $r111;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setTextBeforeCursor", r27);

        return;

     label18:
        $r110 = r30.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i49 = r1.<android.os.Message: int arg1>;

        $i50 = r1.<android.os.Message: int arg2>;

        $r109 = interfaceinvoke r28.<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>($i49, $i50);

        $i48 = r30.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r110.<com.android.internal.view.IInputContextCallback: void setTextBeforeCursor(java.lang.CharSequence,int)>($r109, $i48);

     label19:
        return;

     label20:
        $r87 = r1.<android.os.Message: java.lang.Object obj>;

        r25 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r87;

     label21:
        $r102 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r103 = virtualinvoke $r102.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r29 = (android.view.inputmethod.InputConnection) $r103;

     label22:
        if r29 == null goto label24;

     label23:
        $z34 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z34 != 0 goto label27;

     label24:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getSelectedText on inactive InputConnection");

        $r100 = r25.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i43 = r25.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r100.<com.android.internal.view.IInputContextCallback: void setSelectedText(java.lang.CharSequence,int)>(null, $i43);

     label25:
        return;

     label26:
        $r114 := @caughtexception;

        r24 = $r114;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setSelectedText", r24);

        return;

     label27:
        $r101 = r25.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i41 = r1.<android.os.Message: int arg1>;

        $r97 = interfaceinvoke r29.<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>($i41);

        $i40 = r25.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r101.<com.android.internal.view.IInputContextCallback: void setSelectedText(java.lang.CharSequence,int)>($r97, $i40);

     label28:
        return;

     label29:
        $r90 = r1.<android.os.Message: java.lang.Object obj>;

        r23 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r90;

     label30:
        $r89 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r91 = virtualinvoke $r89.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r26 = (android.view.inputmethod.InputConnection) $r91;

     label31:
        if r26 == null goto label33;

     label32:
        $z33 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z33 != 0 goto label36;

     label33:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getCursorCapsMode on inactive InputConnection");

        $r88 = r23.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i34 = r23.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r88.<com.android.internal.view.IInputContextCallback: void setCursorCapsMode(int,int)>(0, $i34);

     label34:
        return;

     label35:
        $r120 := @caughtexception;

        r22 = $r120;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setCursorCapsMode", r22);

        return;

     label36:
        $r86 = r23.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i35 = r1.<android.os.Message: int arg1>;

        $i32 = interfaceinvoke r26.<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>($i35);

        $i33 = r23.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r86.<com.android.internal.view.IInputContextCallback: void setCursorCapsMode(int,int)>($i32, $i33);

     label37:
        return;

     label38:
        $r84 = r1.<android.os.Message: java.lang.Object obj>;

        r21 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r84;

     label39:
        $r78 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r79 = virtualinvoke $r78.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r19 = (android.view.inputmethod.InputConnection) $r79;

     label40:
        if r19 == null goto label42;

     label41:
        $z30 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z30 != 0 goto label45;

     label42:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "getExtractedText on inactive InputConnection");

        $r81 = r21.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $i28 = r21.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r81.<com.android.internal.view.IInputContextCallback: void setExtractedText(android.view.inputmethod.ExtractedText,int)>(null, $i28);

     label43:
        return;

     label44:
        $r113 := @caughtexception;

        r20 = $r113;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("IInputConnectionWrapper", "Got RemoteException calling setExtractedText", r20);

        return;

     label45:
        $r92 = r21.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback>;

        $r80 = r21.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg1>;

        $r93 = (android.view.inputmethod.ExtractedTextRequest) $r80;

        $i29 = r1.<android.os.Message: int arg1>;

        $r94 = interfaceinvoke r19.<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>($r93, $i29);

        $i37 = r21.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq>;

        interfaceinvoke $r92.<com.android.internal.view.IInputContextCallback: void setExtractedText(android.view.inputmethod.ExtractedText,int)>($r94, $i37);

     label46:
        return;

     label47:
        $r71 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r83 = virtualinvoke $r71.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r18 = (android.view.inputmethod.InputConnection) $r83;

        if r18 == null goto label48;

        $z31 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z31 != 0 goto label49;

     label48:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitText on inactive InputConnection");

        return;

     label49:
        $r82 = r1.<android.os.Message: java.lang.Object obj>;

        $r85 = (java.lang.CharSequence) $r82;

        $i31 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r18.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>($r85, $i31);

        return;

     label50:
        $r65 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r66 = virtualinvoke $r65.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r17 = (android.view.inputmethod.InputConnection) $r66;

        if r17 == null goto label51;

        $z21 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z21 != 0 goto label52;

     label51:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "setSelection on inactive InputConnection");

        return;

     label52:
        $i21 = r1.<android.os.Message: int arg1>;

        $i20 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r17.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>($i21, $i20);

        return;

     label53:
        $r67 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r68 = virtualinvoke $r67.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r15 = (android.view.inputmethod.InputConnection) $r68;

        if r15 == null goto label54;

        $z24 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z24 != 0 goto label55;

     label54:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "performEditorAction on inactive InputConnection");

        return;

     label55:
        $i18 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r15.<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>($i18);

        return;

     label56:
        $r61 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r60 = virtualinvoke $r61.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r16 = (android.view.inputmethod.InputConnection) $r60;

        if r16 == null goto label57;

        $z22 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z22 != 0 goto label58;

     label57:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "performContextMenuAction on inactive InputConnection");

        return;

     label58:
        $i23 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r16.<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>($i23);

        return;

     label59:
        $r70 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r69 = virtualinvoke $r70.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r14 = (android.view.inputmethod.InputConnection) $r69;

        if r14 == null goto label60;

        $z25 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z25 != 0 goto label61;

     label60:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitCompletion on inactive InputConnection");

        return;

     label61:
        $r73 = r1.<android.os.Message: java.lang.Object obj>;

        $r72 = (android.view.inputmethod.CompletionInfo) $r73;

        interfaceinvoke r14.<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>($r72);

        return;

     label62:
        $r75 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r74 = virtualinvoke $r75.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r13 = (android.view.inputmethod.InputConnection) $r74;

        if r13 == null goto label63;

        $z29 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z29 != 0 goto label64;

     label63:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "commitCorrection on inactive InputConnection");

        return;

     label64:
        $r77 = r1.<android.os.Message: java.lang.Object obj>;

        $r76 = (android.view.inputmethod.CorrectionInfo) $r77;

        interfaceinvoke r13.<android.view.inputmethod.InputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>($r76);

        return;

     label65:
        $r64 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r63 = virtualinvoke $r64.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r12 = (android.view.inputmethod.InputConnection) $r63;

        if r12 == null goto label66;

        $z16 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z16 != 0 goto label67;

     label66:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "setComposingText on inactive InputConnection");

        return;

     label67:
        $r58 = r1.<android.os.Message: java.lang.Object obj>;

        $r59 = (java.lang.CharSequence) $r58;

        $i14 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r12.<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>($r59, $i14);

        return;

     label68:
        $r53 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r62 = virtualinvoke $r53.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r11 = (android.view.inputmethod.InputConnection) $r62;

        if r11 == null goto label69;

        $z18 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z18 != 0 goto label70;

     label69:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "setComposingRegion on inactive InputConnection");

        return;

     label70:
        $i17 = r1.<android.os.Message: int arg1>;

        $i16 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r11.<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>($i17, $i16);

        return;

     label71:
        $r55 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r54 = virtualinvoke $r55.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r10 = (android.view.inputmethod.InputConnection) $r54;

        if r10 != null goto label72;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "finishComposingText on inactive InputConnection");

        return;

     label72:
        interfaceinvoke r10.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

        return;

     label73:
        $r52 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r51 = virtualinvoke $r52.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r9 = (android.view.inputmethod.InputConnection) $r51;

        if r9 == null goto label74;

        $z11 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z11 != 0 goto label75;

     label74:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "sendKeyEvent on inactive InputConnection");

        return;

     label75:
        $r57 = r1.<android.os.Message: java.lang.Object obj>;

        $r56 = (android.view.KeyEvent) $r57;

        interfaceinvoke r9.<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r56);

        return;

     label76:
        $r31 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r32 = virtualinvoke $r31.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r8 = (android.view.inputmethod.InputConnection) $r32;

        if r8 == null goto label77;

        $z2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z2 != 0 goto label78;

     label77:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "clearMetaKeyStates on inactive InputConnection");

        return;

     label78:
        $i3 = r1.<android.os.Message: int arg1>;

        interfaceinvoke r8.<android.view.inputmethod.InputConnection: boolean clearMetaKeyStates(int)>($i3);

        return;

     label79:
        $r48 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r47 = virtualinvoke $r48.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r7 = (android.view.inputmethod.InputConnection) $r47;

        if r7 == null goto label80;

        $z13 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z13 != 0 goto label81;

     label80:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "deleteSurroundingText on inactive InputConnection");

        return;

     label81:
        $i10 = r1.<android.os.Message: int arg1>;

        $i11 = r1.<android.os.Message: int arg2>;

        interfaceinvoke r7.<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>($i10, $i11);

        return;

     label82:
        $r49 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r50 = virtualinvoke $r49.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (android.view.inputmethod.InputConnection) $r50;

        if r6 == null goto label83;

        $z10 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z10 != 0 goto label84;

     label83:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "beginBatchEdit on inactive InputConnection");

        return;

     label84:
        interfaceinvoke r6.<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>();

        return;

     label85:
        $r46 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r45 = virtualinvoke $r46.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.view.inputmethod.InputConnection) $r45;

        if r5 == null goto label86;

        $z5 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z5 != 0 goto label87;

     label86:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "endBatchEdit on inactive InputConnection");

        return;

     label87:
        interfaceinvoke r5.<android.view.inputmethod.InputConnection: boolean endBatchEdit()>();

        return;

     label88:
        $r39 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r40 = virtualinvoke $r39.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.view.inputmethod.InputConnection) $r40;

        if r4 == null goto label89;

        $z8 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z8 != 0 goto label90;

     label89:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "showStatusIcon on inactive InputConnection");

        return;

     label90:
        $i6 = r1.<android.os.Message: int arg1>;

        i59 = (int) 1;

        if $i6 != i59 goto label92;

     label91:
        interfaceinvoke r4.<android.view.inputmethod.InputConnection: boolean reportFullscreenMode(boolean)>(z0);

        return;

     label92:
        z0 = 0;

        goto label91;

     label93:
        $r38 = r0.<com.android.internal.view.IInputConnectionWrapper: java.lang.ref.WeakReference mInputConnection>;

        $r36 = virtualinvoke $r38.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r2 = (android.view.inputmethod.InputConnection) $r36;

        if r2 == null goto label94;

        $z1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>();

        if $z1 != 0 goto label95;

     label94:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IInputConnectionWrapper", "performPrivateCommand on inactive InputConnection");

        return;

     label95:
        $r37 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = (com.android.internal.view.IInputConnectionWrapper$SomeArgs) $r37;

        $r42 = r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg1>;

        $r43 = (java.lang.String) $r42;

        $r41 = r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg2>;

        $r44 = (android.os.Bundle) $r41;

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>($r43, $r44);

        return;

        catch android.os.RemoteException from label03 to label04 with label08;
        catch android.os.RemoteException from label05 to label06 with label08;
        catch android.os.RemoteException from label06 to label07 with label08;
        catch android.os.RemoteException from label09 to label10 with label08;
        catch android.os.RemoteException from label12 to label13 with label17;
        catch android.os.RemoteException from label14 to label15 with label17;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch android.os.RemoteException from label18 to label19 with label17;
        catch android.os.RemoteException from label21 to label22 with label26;
        catch android.os.RemoteException from label23 to label24 with label26;
        catch android.os.RemoteException from label24 to label25 with label26;
        catch android.os.RemoteException from label27 to label28 with label26;
        catch android.os.RemoteException from label30 to label31 with label35;
        catch android.os.RemoteException from label32 to label33 with label35;
        catch android.os.RemoteException from label33 to label34 with label35;
        catch android.os.RemoteException from label36 to label37 with label35;
        catch android.os.RemoteException from label39 to label40 with label44;
        catch android.os.RemoteException from label41 to label42 with label44;
        catch android.os.RemoteException from label42 to label43 with label44;
        catch android.os.RemoteException from label45 to label46 with label44;
    }

    public void finishComposingText()
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessage(int)>(65);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void getCursorCapsMode(int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.view.IInputContextCallback;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageISC(int,int,int,com.android.internal.view.IInputContextCallback)>(30, i0, i1, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void getExtractedText(android.view.inputmethod.ExtractedTextRequest, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.internal.view.IInputContextCallback;

        $r3 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIOSC(int,int,java.lang.Object,int,com.android.internal.view.IInputContextCallback)>(40, i0, r1, i1, r2);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    public void getSelectedText(int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.view.IInputContextCallback;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageISC(int,int,int,com.android.internal.view.IInputContextCallback)>(25, i0, i1, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void getTextAfterCursor(int, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: com.android.internal.view.IInputContextCallback;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIISC(int,int,int,int,com.android.internal.view.IInputContextCallback)>(10, i0, i1, i2, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void getTextBeforeCursor(int, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: com.android.internal.view.IInputContextCallback;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIISC(int,int,int,int,com.android.internal.view.IInputContextCallback)>(20, i0, i1, i2, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public boolean isActive()
    {
        com.android.internal.view.IInputConnectionWrapper r0;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        return 1;
    }

    android.os.Message obtainMessage(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(i0);

        return $r2;
    }

    android.os.Message obtainMessageII(int, int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        android.os.Handler $r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int,int,int)>(i0, i1, i2);

        return $r2;
    }

    android.os.Message obtainMessageIISC(int, int, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2, i3;
        com.android.internal.view.IInputContextCallback r1;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r2, $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: com.android.internal.view.IInputContextCallback;

        $r3 = new com.android.internal.view.IInputConnectionWrapper$SomeArgs;

        specialinvoke $r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>();

        r2 = $r3;

        r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback> = r1;

        r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq> = i3;

        $r4 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, i2, r2);

        return $r5;
    }

    android.os.Message obtainMessageIO(int, int, java.lang.Object)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        java.lang.Object r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, 0, r1);

        return $r3;
    }

    android.os.Message obtainMessageIOSC(int, int, java.lang.Object, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        java.lang.Object r1;
        com.android.internal.view.IInputContextCallback r2;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r3, $r4;
        android.os.Handler $r5;
        android.os.Message $r6;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i2 := @parameter3: int;

        r2 := @parameter4: com.android.internal.view.IInputContextCallback;

        $r4 = new com.android.internal.view.IInputConnectionWrapper$SomeArgs;

        specialinvoke $r4.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>();

        r3 = $r4;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg1> = r1;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback> = r2;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq> = i2;

        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, 0, r3);

        return $r6;
    }

    android.os.Message obtainMessageISC(int, int, int, com.android.internal.view.IInputContextCallback)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1, i2;
        com.android.internal.view.IInputContextCallback r1;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r2, $r3;
        android.os.Handler $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: com.android.internal.view.IInputContextCallback;

        $r3 = new com.android.internal.view.IInputConnectionWrapper$SomeArgs;

        specialinvoke $r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>();

        r2 = $r3;

        r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: com.android.internal.view.IInputContextCallback callback> = r1;

        r2.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: int seq> = i2;

        $r4 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r5 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, i1, 0, r2);

        return $r5;
    }

    android.os.Message obtainMessageO(int, java.lang.Object)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        java.lang.Object r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, 0, 0, r1);

        return $r3;
    }

    android.os.Message obtainMessageOO(int, java.lang.Object, java.lang.Object)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        java.lang.Object r1, r2;
        com.android.internal.view.IInputConnectionWrapper$SomeArgs r3, $r4;
        android.os.Handler $r5;
        android.os.Message $r6;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r4 = new com.android.internal.view.IInputConnectionWrapper$SomeArgs;

        specialinvoke $r4.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: void <init>()>();

        r3 = $r4;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg1> = r1;

        r3.<com.android.internal.view.IInputConnectionWrapper$SomeArgs: java.lang.Object arg2> = r2;

        $r5 = r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Handler mH>;

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(i0, 0, 0, r3);

        return $r6;
    }

    public void performContextMenuAction(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(59, i0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void performEditorAction(int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(58, i0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void performPrivateCommand(java.lang.String, android.os.Bundle)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.Message $r3;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        $r3 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>(120, r1, r2);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r3);

        return;
    }

    public void reportFullscreenMode(boolean)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        boolean z0;
        byte b0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(100, b0, 0);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void sendKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        android.view.KeyEvent r1;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageO(int,java.lang.Object)>(70, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void setComposingRegion(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(63, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public void setComposingText(java.lang.CharSequence, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        java.lang.CharSequence r1;
        int i0;
        android.os.Message $r2;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageIO(int,int,java.lang.Object)>(60, i0, r1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r2);

        return;
    }

    public void setSelection(int, int)
    {
        com.android.internal.view.IInputConnectionWrapper r0;
        int i0, i1;
        android.os.Message $r1;

        r0 := @this: com.android.internal.view.IInputConnectionWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: android.os.Message obtainMessageII(int,int,int)>(57, i0, i1);

        virtualinvoke r0.<com.android.internal.view.IInputConnectionWrapper: void dispatchMessage(android.os.Message)>($r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.view.IInputConnectionWrapper: java.lang.String TAG> = "IInputConnectionWrapper";

        <com.android.internal.view.IInputConnectionWrapper: int DO_SET_SELECTION> = 57;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SET_COMPOSING_TEXT> = 60;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SET_COMPOSING_REGION> = 63;

        <com.android.internal.view.IInputConnectionWrapper: int DO_SEND_KEY_EVENT> = 70;

        <com.android.internal.view.IInputConnectionWrapper: int DO_REPORT_FULLSCREEN_MODE> = 100;

        <com.android.internal.view.IInputConnectionWrapper: int DO_PERFORM_PRIVATE_COMMAND> = 120;

        <com.android.internal.view.IInputConnectionWrapper: int DO_PERFORM_EDITOR_ACTION> = 58;

        <com.android.internal.view.IInputConnectionWrapper: int DO_PERFORM_CONTEXT_MENU_ACTION> = 59;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_TEXT_BEFORE_CURSOR> = 20;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_TEXT_AFTER_CURSOR> = 10;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_SELECTED_TEXT> = 25;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_EXTRACTED_TEXT> = 40;

        <com.android.internal.view.IInputConnectionWrapper: int DO_GET_CURSOR_CAPS_MODE> = 30;

        <com.android.internal.view.IInputConnectionWrapper: int DO_FINISH_COMPOSING_TEXT> = 65;

        <com.android.internal.view.IInputConnectionWrapper: int DO_END_BATCH_EDIT> = 95;

        <com.android.internal.view.IInputConnectionWrapper: int DO_DELETE_SURROUNDING_TEXT> = 80;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_TEXT> = 50;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_CORRECTION> = 56;

        <com.android.internal.view.IInputConnectionWrapper: int DO_COMMIT_COMPLETION> = 55;

        <com.android.internal.view.IInputConnectionWrapper: int DO_CLEAR_META_KEY_STATES> = 130;

        <com.android.internal.view.IInputConnectionWrapper: int DO_BEGIN_BATCH_EDIT> = 90;

        return;
    }
}
