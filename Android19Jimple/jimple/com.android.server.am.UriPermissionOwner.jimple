final class com.android.server.am.UriPermissionOwner extends java.lang.Object
{
    android.os.Binder externalToken;
    final java.lang.Object owner;
    java.util.HashSet readUriPermissions;
    final com.android.server.am.ActivityManagerService service;
    java.util.HashSet writeUriPermissions;

    void <init>(com.android.server.am.ActivityManagerService, java.lang.Object)
    {
        com.android.server.am.UriPermissionOwner r0;
        com.android.server.am.ActivityManagerService r1;
        java.lang.Object r2;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.UriPermissionOwner: com.android.server.am.ActivityManagerService service> = r1;

        r0.<com.android.server.am.UriPermissionOwner: java.lang.Object owner> = r2;

        return;
    }

    static com.android.server.am.UriPermissionOwner fromExternalToken(android.os.IBinder)
    {
        android.os.IBinder r0;
        boolean $z0;
        com.android.server.am.UriPermissionOwner$ExternalToken $r1;
        com.android.server.am.UriPermissionOwner $r2;

        r0 := @parameter0: android.os.IBinder;

        $z0 = r0 instanceof com.android.server.am.UriPermissionOwner$ExternalToken;

        if $z0 == 0 goto label1;

        $r1 = (com.android.server.am.UriPermissionOwner$ExternalToken) r0;

        $r2 = virtualinvoke $r1.<com.android.server.am.UriPermissionOwner$ExternalToken: com.android.server.am.UriPermissionOwner getOwner()>();

        return $r2;

     label1:
        return null;
    }

    public void addReadPermission(com.android.server.am.UriPermission)
    {
        com.android.server.am.UriPermissionOwner r0;
        com.android.server.am.UriPermission r1;
        java.util.HashSet $r2, $r3, $r4;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        r1 := @parameter0: com.android.server.am.UriPermission;

        $r2 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        if $r2 != null goto label1;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions> = $r4;

     label1:
        $r3 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addWritePermission(com.android.server.am.UriPermission)
    {
        com.android.server.am.UriPermissionOwner r0;
        com.android.server.am.UriPermission r1;
        java.util.HashSet $r2, $r3, $r4;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        r1 := @parameter0: com.android.server.am.UriPermission;

        $r2 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        if $r2 != null goto label1;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions> = $r4;

     label1:
        $r3 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    android.os.Binder getExternalTokenLocked()
    {
        com.android.server.am.UriPermissionOwner r0;
        android.os.Binder $r1, $r2;
        com.android.server.am.UriPermissionOwner$ExternalToken $r3;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        $r1 = r0.<com.android.server.am.UriPermissionOwner: android.os.Binder externalToken>;

        if $r1 != null goto label1;

        $r3 = new com.android.server.am.UriPermissionOwner$ExternalToken;

        specialinvoke $r3.<com.android.server.am.UriPermissionOwner$ExternalToken: void <init>(com.android.server.am.UriPermissionOwner)>(r0);

        r0.<com.android.server.am.UriPermissionOwner: android.os.Binder externalToken> = $r3;

     label1:
        $r2 = r0.<com.android.server.am.UriPermissionOwner: android.os.Binder externalToken>;

        return $r2;
    }

    public void removeReadPermission(com.android.server.am.UriPermission)
    {
        com.android.server.am.UriPermissionOwner r0;
        com.android.server.am.UriPermission r1;
        java.util.HashSet $r2, $r3;
        int $i0;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        r1 := @parameter0: com.android.server.am.UriPermission;

        $r2 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        $i0 = virtualinvoke $r3.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label1;

        r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions> = null;

     label1:
        return;
    }

    void removeUriPermissionLocked(android.net.Uri, int)
    {
        com.android.server.am.UriPermissionOwner r0;
        android.net.Uri r1, $r10, $r16;
        int i0, $i1, $i2, $i3, $i4;
        java.util.Iterator r2, r4;
        com.android.server.am.UriPermission r3, r5;
        java.util.HashSet $r6, $r7, $r8, $r11, $r13, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r9, $r15;
        com.android.server.am.ActivityManagerService $r12, $r17;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label3;

        $r11 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        if $r11 == null goto label3;

        $r13 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        r4 = virtualinvoke $r13.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.am.UriPermission) $r15;

        $r16 = r5.<com.android.server.am.UriPermission: android.net.Uri uri>;

        $z3 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label1;

        virtualinvoke r5.<com.android.server.am.UriPermission: void removeReadOwner(com.android.server.am.UriPermissionOwner)>(r0);

        $r17 = r0.<com.android.server.am.UriPermissionOwner: com.android.server.am.ActivityManagerService service>;

        virtualinvoke $r17.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>(r5);

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        $r14 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        $i4 = virtualinvoke $r14.<java.util.HashSet: int size()>();

        if $i4 != 0 goto label3;

        r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions> = null;

     label3:
        $i2 = i0 & 2;

        if $i2 == 0 goto label6;

        $r6 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        if $r6 == null goto label6;

        $r7 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        r2 = virtualinvoke $r7.<java.util.HashSet: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.am.UriPermission) $r9;

        $r10 = r3.<com.android.server.am.UriPermission: android.net.Uri uri>;

        $z1 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label4;

        virtualinvoke r3.<com.android.server.am.UriPermission: void removeWriteOwner(com.android.server.am.UriPermissionOwner)>(r0);

        $r12 = r0.<com.android.server.am.UriPermissionOwner: com.android.server.am.ActivityManagerService service>;

        virtualinvoke $r12.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>(r3);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label4;

     label5:
        $r8 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        $i3 = virtualinvoke $r8.<java.util.HashSet: int size()>();

        if $i3 != 0 goto label6;

        r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions> = null;

     label6:
        return;
    }

    void removeUriPermissionsLocked()
    {
        com.android.server.am.UriPermissionOwner r0;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        virtualinvoke r0.<com.android.server.am.UriPermissionOwner: void removeUriPermissionsLocked(int)>(3);

        return;
    }

    void removeUriPermissionsLocked(int)
    {
        com.android.server.am.UriPermissionOwner r0;
        int i0, $i1, $i2;
        java.util.Iterator r1, r3;
        com.android.server.am.UriPermission r2, r4;
        java.util.HashSet $r5, $r6, $r9, $r10;
        boolean $z0, $z1;
        java.lang.Object $r7, $r12;
        com.android.server.am.ActivityManagerService $r8, $r11;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        i0 := @parameter0: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label3;

        $r9 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        if $r9 == null goto label3;

        $r10 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        r3 = virtualinvoke $r10.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.am.UriPermission) $r12;

        virtualinvoke r4.<com.android.server.am.UriPermission: void removeReadOwner(com.android.server.am.UriPermissionOwner)>(r0);

        $r11 = r0.<com.android.server.am.UriPermissionOwner: com.android.server.am.ActivityManagerService service>;

        virtualinvoke $r11.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>(r4);

        goto label1;

     label2:
        r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions> = null;

     label3:
        $i2 = i0 & 2;

        if $i2 == 0 goto label6;

        $r5 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        if $r5 == null goto label6;

        $r6 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        r1 = virtualinvoke $r6.<java.util.HashSet: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.am.UriPermission) $r7;

        virtualinvoke r2.<com.android.server.am.UriPermission: void removeWriteOwner(com.android.server.am.UriPermissionOwner)>(r0);

        $r8 = r0.<com.android.server.am.UriPermissionOwner: com.android.server.am.ActivityManagerService service>;

        virtualinvoke $r8.<com.android.server.am.ActivityManagerService: void removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)>(r2);

        goto label4;

     label5:
        r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions> = null;

     label6:
        return;
    }

    public void removeWritePermission(com.android.server.am.UriPermission)
    {
        com.android.server.am.UriPermissionOwner r0;
        com.android.server.am.UriPermission r1;
        java.util.HashSet $r2, $r3;
        int $i0;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        r1 := @parameter0: com.android.server.am.UriPermission;

        $r2 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        $i0 = virtualinvoke $r3.<java.util.HashSet: int size()>();

        if $i0 != 0 goto label1;

        r0.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions> = null;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        com.android.server.am.UriPermissionOwner r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.am.UriPermissionOwner;

        $r1 = r0.<com.android.server.am.UriPermissionOwner: java.lang.Object owner>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }
}
