public class javax.net.ssl.HandshakeCompletedEvent extends java.util.EventObject
{
    private transient javax.net.ssl.SSLSession session;

    public void <init>(javax.net.ssl.SSLSocket, javax.net.ssl.SSLSession)
    {
        javax.net.ssl.HandshakeCompletedEvent r0;
        javax.net.ssl.SSLSocket r1;
        javax.net.ssl.SSLSession r2;

        r0 := @this: javax.net.ssl.HandshakeCompletedEvent;

        r1 := @parameter0: javax.net.ssl.SSLSocket;

        r2 := @parameter1: javax.net.ssl.SSLSession;

        specialinvoke r0.<java.util.EventObject: void <init>(java.lang.Object)>(r1);

        r0.<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession session> = r2;

        return;
    }

    public java.lang.String getCipherSuite()
    {
        javax.net.ssl.HandshakeCompletedEvent r0;
        javax.net.ssl.SSLSession $r1;
        java.lang.String $r2;

        r0 := @this: javax.net.ssl.HandshakeCompletedEvent;

        $r1 = r0.<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession session>;

        $r2 = interfaceinvoke $r1.<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>();

        return $r2;
    }

    public java.security.cert.Certificate[] getLocalCertificates()
    {
        javax.net.ssl.HandshakeCompletedEvent r0;
        javax.net.ssl.SSLSession $r1;
        java.security.cert.Certificate[] $r2;

        r0 := @this: javax.net.ssl.HandshakeCompletedEvent;

        $r1 = r0.<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession session>;

        $r2 = interfaceinvoke $r1.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getLocalCertificates()>();

        return $r2;
    }

    public java.security.Principal getLocalPrincipal()
    {
        javax.net.ssl.HandshakeCompletedEvent r0;
        javax.net.ssl.SSLSession $r1;
        java.security.Principal $r2;

        r0 := @this: javax.net.ssl.HandshakeCompletedEvent;

        $r1 = r0.<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession session>;

        $r2 = interfaceinvoke $r1.<javax.net.ssl.SSLSession: java.security.Principal getLocalPrincipal()>();

        return $r2;
    }

    public javax.security.cert.X509Certificate[] getPeerCertificateChain() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        javax.net.ssl.HandshakeCompletedEvent r0;
        javax.net.ssl.SSLSession $r1;
        javax.security.cert.X509Certificate[] $r2;

        r0 := @this: javax.net.ssl.HandshakeCompletedEvent;

        $r1 = r0.<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession session>;

        $r2 = interfaceinvoke $r1.<javax.net.ssl.SSLSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()>();

        return $r2;
    }

    public java.security.cert.Certificate[] getPeerCertificates() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        javax.net.ssl.HandshakeCompletedEvent r0;
        javax.net.ssl.SSLSession $r1;
        java.security.cert.Certificate[] $r2;

        r0 := @this: javax.net.ssl.HandshakeCompletedEvent;

        $r1 = r0.<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession session>;

        $r2 = interfaceinvoke $r1.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

        return $r2;
    }

    public java.security.Principal getPeerPrincipal() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        javax.net.ssl.HandshakeCompletedEvent r0;
        javax.net.ssl.SSLSession $r1;
        java.security.Principal $r2;

        r0 := @this: javax.net.ssl.HandshakeCompletedEvent;

        $r1 = r0.<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession session>;

        $r2 = interfaceinvoke $r1.<javax.net.ssl.SSLSession: java.security.Principal getPeerPrincipal()>();

        return $r2;
    }

    public javax.net.ssl.SSLSession getSession()
    {
        javax.net.ssl.HandshakeCompletedEvent r0;
        javax.net.ssl.SSLSession $r1;

        r0 := @this: javax.net.ssl.HandshakeCompletedEvent;

        $r1 = r0.<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession session>;

        return $r1;
    }

    public javax.net.ssl.SSLSocket getSocket()
    {
        javax.net.ssl.HandshakeCompletedEvent r0;
        java.lang.Object $r1;
        javax.net.ssl.SSLSocket $r2;

        r0 := @this: javax.net.ssl.HandshakeCompletedEvent;

        $r1 = r0.<javax.net.ssl.HandshakeCompletedEvent: java.lang.Object source>;

        $r2 = (javax.net.ssl.SSLSocket) $r1;

        return $r2;
    }
}
