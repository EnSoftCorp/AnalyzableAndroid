public final class com.android.commands.bmgr.Bmgr extends java.lang.Object
{
    static final java.lang.String BMGR_NOT_RUNNING_ERR;
    static final java.lang.String TRANSPORT_NOT_RUNNING_ERR;
    private java.lang.String[] mArgs;
    android.app.backup.IBackupManager mBmgr;
    private int mNextArg;
    android.app.backup.IRestoreSession mRestore;

    public void <init>()
    {
        com.android.commands.bmgr.Bmgr r0;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void doBackup()
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String r1, $r6;
        android.os.RemoteException r2, $r4;
        android.app.backup.IBackupManager $r3;
        java.io.PrintStream $r5, $r7;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r1 != null goto label1;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label1:
        $r3 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r3.<android.app.backup.IBackupManager: void dataChanged(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r6 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void doEnable()
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String r1, $r8, $r10, $r13;
        android.os.RemoteException r2, $r12;
        boolean z0;
        android.app.backup.IBackupManager $r4;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.io.PrintStream $r6, $r14, $r15;
        java.lang.NumberFormatException $r11;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r1 != null goto label1;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label1:
        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r1);

        $r4 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r4.<android.app.backup.IBackupManager: void setBackupEnabled(boolean)>(z0);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup Manager now ");

        $r8 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String enableToString(boolean)>(z0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label4:
        $r12 := @caughtexception;

        r2 = $r12;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r13 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private void doEnabled()
    {
        com.android.commands.bmgr.Bmgr r0;
        android.os.RemoteException r1, $r9;
        boolean z0;
        android.app.backup.IBackupManager $r2;
        java.lang.StringBuilder $r3, $r5, $r7;
        java.io.PrintStream $r4, $r10, $r12;
        java.lang.String $r6, $r8, $r11;

        r0 := @this: com.android.commands.bmgr.Bmgr;

     label1:
        $r2 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        z0 = interfaceinvoke $r2.<android.app.backup.IBackupManager: boolean isBackupEnabled()>();

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Backup Manager currently ");

        $r6 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String enableToString(boolean)>(z0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        $r11 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void doList()
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String r1, $r3, $r7, $r8, $r12;
        android.os.RemoteException r2, $r11;
        boolean $z0, $z1, $z2;
        android.app.backup.IBackupManager $r4;
        android.app.backup.IRestoreSession $r5, $r6, $r9;
        java.io.PrintStream $r10, $r13, $r14;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        $r3 = "transports";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doListTransports()>();

        return;

     label1:
        $r4 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        $r5 = interfaceinvoke $r4.<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>(null, null);

        r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore> = $r5;

        $r6 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        if $r6 != null goto label4;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

     label2:
        return;

     label3:
        $r11 := @caughtexception;

        r2 = $r11;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r12 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

     label4:
        $r7 = "sets";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label7;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doListRestoreSets()>();

     label5:
        $r9 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        interfaceinvoke $r9.<android.app.backup.IRestoreSession: void endRestoreSession()>();

     label6:
        return;

     label7:
        $r8 = "transports";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label5;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doListTransports()>();

     label8:
        goto label5;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch android.os.RemoteException from label4 to label5 with label3;
        catch android.os.RemoteException from label5 to label6 with label3;
        catch android.os.RemoteException from label7 to label8 with label3;
    }

    private void doListRestoreSets()
    {
        com.android.commands.bmgr.Bmgr r0;
        com.android.commands.bmgr.Bmgr$RestoreObserver r1, $r3;
        android.os.RemoteException r2, $r7;
        android.app.backup.IRestoreSession $r4;
        int $i0;
        android.app.backup.RestoreSet[] $r5;
        java.io.PrintStream $r6, $r8, $r10;
        java.lang.String $r9;

        r0 := @this: com.android.commands.bmgr.Bmgr;

     label1:
        $r3 = new com.android.commands.bmgr.Bmgr$RestoreObserver;

        specialinvoke $r3.<com.android.commands.bmgr.Bmgr$RestoreObserver: void <init>(com.android.commands.bmgr.Bmgr)>(r0);

        r1 = $r3;

        $r4 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        $i0 = interfaceinvoke $r4.<android.app.backup.IRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>(r1);

        if $i0 == 0 goto label3;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Unable to request restore sets");

     label2:
        return;

     label3:
        virtualinvoke r1.<com.android.commands.bmgr.Bmgr$RestoreObserver: void waitForCompletion()>();

        $r5 = r1.<com.android.commands.bmgr.Bmgr$RestoreObserver: android.app.backup.RestoreSet[] sets>;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void printRestoreSets(android.app.backup.RestoreSet[])>($r5);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        $r9 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the backup transport.  Is the system running?");

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void doListTransports()
    {
        com.android.commands.bmgr.Bmgr r0;
        android.os.RemoteException r1, $r15;
        java.lang.String r2, r4, r5, $r12, $r17;
        java.lang.String[] r3;
        int i0, i1, $i2;
        android.app.backup.IBackupManager $r6, $r7;
        java.io.PrintStream $r8, $r11, $r14, $r16;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r13;

        r0 := @this: com.android.commands.bmgr.Bmgr;

     label01:
        $r6 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r2 = interfaceinvoke $r6.<android.app.backup.IBackupManager: java.lang.String getCurrentTransport()>();

        $r7 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r3 = interfaceinvoke $r7.<android.app.backup.IBackupManager: java.lang.String[] listAllTransports()>();

     label02:
        if r3 == null goto label04;

     label03:
        $i2 = lengthof r3;

        if $i2 != 0 goto label06;

     label04:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("No transports available.");

     label05:
        return;

     label06:
        i0 = lengthof r3;

     label07:
        i1 = 0;

     label08:
        if i1 >= i0 goto label15;

     label09:
        r4 = r3[i1];

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label13;

     label10:
        r5 = "  * ";

     label11:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label12:
        i1 = i1 + 1;

        goto label08;

     label13:
        r5 = "    ";

        goto label11;

     label14:
        $r15 := @caughtexception;

        r1 = $r15;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r17 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

     label15:
        return;

        catch android.os.RemoteException from label01 to label02 with label14;
        catch android.os.RemoteException from label03 to label04 with label14;
        catch android.os.RemoteException from label04 to label05 with label14;
        catch android.os.RemoteException from label06 to label07 with label14;
        catch android.os.RemoteException from label09 to label10 with label14;
        catch android.os.RemoteException from label11 to label12 with label14;
    }

    private void doRestore()
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String r1, r4;
        long l0;
        java.util.HashSet r3, $r6;
        int $i1;
        java.io.PrintStream $r5;
        java.lang.NumberFormatException $r7;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r1 != null goto label01;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label01:
        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);

        if $i1 < 0 goto label03;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doRestorePackage(java.lang.String)>(r1);

     label02:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("done");

        return;

     label03:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r1, 16);

     label04:
        r3 = null;

     label05:
        r4 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

     label06:
        if r4 == null goto label11;

        if r3 != null goto label08;

     label07:
        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r3 = $r6;

     label08:
        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

     label09:
        goto label05;

     label10:
        $r7 := @caughtexception;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label11:
        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doRestoreAll(long,java.util.HashSet)>(l0, r3);

     label12:
        goto label02;

        catch java.lang.NumberFormatException from label03 to label04 with label10;
        catch java.lang.NumberFormatException from label05 to label06 with label10;
        catch java.lang.NumberFormatException from label07 to label08 with label10;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
        catch java.lang.NumberFormatException from label11 to label12 with label10;
    }

    private void doRestoreAll(long, java.util.HashSet)
    {
        com.android.commands.bmgr.Bmgr r0;
        long l0, $l6;
        java.util.HashSet r1;
        com.android.commands.bmgr.Bmgr$RestoreObserver r2, $r8;
        android.os.RemoteException r3, $r25;
        int i1, i2, i3, $i4, $i7, $i8, $i9;
        boolean z0;
        android.app.backup.RestoreSet[] r4, r5;
        android.app.backup.RestoreSet r6;
        java.lang.String[] r7;
        android.app.backup.IBackupManager $r9;
        android.app.backup.IRestoreSession $r10, $r11, $r12, $r14, $r22, $r26;
        java.io.PrintStream $r13, $r15, $r16, $r24, $r27, $r28;
        byte $b5;
        java.lang.StringBuilder $r17, $r19, $r21;
        java.lang.String $r18, $r20, $r29;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.HashSet;

        $r8 = new com.android.commands.bmgr.Bmgr$RestoreObserver;

        specialinvoke $r8.<com.android.commands.bmgr.Bmgr$RestoreObserver: void <init>(com.android.commands.bmgr.Bmgr)>(r0);

        r2 = $r8;

     label01:
        $r9 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        $r11 = interfaceinvoke $r9.<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>(null, null);

        r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore> = $r11;

        $r10 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        if $r10 != null goto label03;

        $r24 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

     label02:
        return;

     label03:
        $r12 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        i1 = interfaceinvoke $r12.<android.app.backup.IRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>(r2);

     label04:
        z0 = 0;

        r4 = null;

        if i1 != 0 goto label14;

     label05:
        virtualinvoke r2.<com.android.commands.bmgr.Bmgr$RestoreObserver: void waitForCompletion()>();

        r4 = r2.<com.android.commands.bmgr.Bmgr$RestoreObserver: android.app.backup.RestoreSet[] sets>;

     label06:
        z0 = 0;

        if r4 == null goto label14;

        r5 = r4;

     label07:
        i2 = lengthof r5;

     label08:
        i3 = 0;

     label09:
        z0 = 0;

        if i3 >= i2 goto label14;

     label10:
        r6 = r5[i3];

        $l6 = r6.<android.app.backup.RestoreSet: long token>;

        $b5 = $l6 cmp l0;

        if $b5 != 0 goto label29;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheduling restore: ");

        $r18 = r6.<android.app.backup.RestoreSet: java.lang.String name>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

     label11:
        if r1 != null goto label23;

     label12:
        $r26 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        $i9 = interfaceinvoke $r26.<android.app.backup.IRestoreSession: int restoreAll(long,android.app.backup.IRestoreObserver)>(l0, r2);

        if $i9 != 0 goto label22;

     label13:
        z0 = 1;

     label14:
        if z0 != 0 goto label17;

        if r4 == null goto label16;

     label15:
        $i4 = lengthof r4;

        if $i4 != 0 goto label25;

     label16:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("No available restore sets; no restore performed");

     label17:
        if z0 == 0 goto label19;

     label18:
        virtualinvoke r2.<com.android.commands.bmgr.Bmgr$RestoreObserver: void waitForCompletion()>();

     label19:
        $r14 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        interfaceinvoke $r14.<android.app.backup.IRestoreSession: void endRestoreSession()>();

     label20:
        return;

     label21:
        $r25 := @caughtexception;

        r3 = $r25;

        $r28 = <java.lang.System: java.io.PrintStream err>;

        $r29 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

     label22:
        z0 = 0;

        goto label14;

     label23:
        $i8 = virtualinvoke r1.<java.util.HashSet: int size()>();

        r7 = newarray (java.lang.String)[$i8];

        virtualinvoke r1.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>(r7);

        $r22 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        $i7 = interfaceinvoke $r22.<android.app.backup.IRestoreSession: int restoreSome(long,android.app.backup.IRestoreObserver,java.lang.String[])>(l0, r2, r7);

        if $i7 != 0 goto label28;

     label24:
        z0 = 1;

        goto label27;

     label25:
        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("No matching restore set token.  Available sets:");

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void printRestoreSets(android.app.backup.RestoreSet[])>(r4);

     label26:
        goto label17;

     label27:
        goto label14;

     label28:
        z0 = 0;

        goto label27;

     label29:
        i3 = i3 + 1;

        goto label09;

        catch android.os.RemoteException from label01 to label02 with label21;
        catch android.os.RemoteException from label03 to label04 with label21;
        catch android.os.RemoteException from label05 to label06 with label21;
        catch android.os.RemoteException from label07 to label08 with label21;
        catch android.os.RemoteException from label10 to label11 with label21;
        catch android.os.RemoteException from label12 to label13 with label21;
        catch android.os.RemoteException from label15 to label16 with label21;
        catch android.os.RemoteException from label16 to label17 with label21;
        catch android.os.RemoteException from label18 to label19 with label21;
        catch android.os.RemoteException from label19 to label20 with label21;
        catch android.os.RemoteException from label23 to label24 with label21;
        catch android.os.RemoteException from label25 to label26 with label21;
    }

    private void doRestorePackage(java.lang.String)
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String r1, $r13, $r17;
        android.os.RemoteException r2, $r15;
        com.android.commands.bmgr.Bmgr$RestoreObserver r3, $r7;
        android.app.backup.IBackupManager $r4;
        android.app.backup.IRestoreSession $r5, $r6, $r8, $r14;
        int $i0;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.io.PrintStream $r10, $r16, $r18, $r19;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        $r5 = interfaceinvoke $r4.<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>(r1, null);

        r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore> = $r5;

        $r6 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        if $r6 != null goto label3;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

     label2:
        return;

     label3:
        $r7 = new com.android.commands.bmgr.Bmgr$RestoreObserver;

        specialinvoke $r7.<com.android.commands.bmgr.Bmgr$RestoreObserver: void <init>(com.android.commands.bmgr.Bmgr)>(r0);

        r3 = $r7;

        $r8 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        $i0 = interfaceinvoke $r8.<android.app.backup.IRestoreSession: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>(r1, r3);

        if $i0 != 0 goto label7;

        virtualinvoke r3.<com.android.commands.bmgr.Bmgr$RestoreObserver: void waitForCompletion()>();

     label4:
        $r14 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IRestoreSession mRestore>;

        interfaceinvoke $r14.<android.app.backup.IRestoreSession: void endRestoreSession()>();

     label5:
        return;

     label6:
        $r15 := @caughtexception;

        r2 = $r15;

        $r18 = <java.lang.System: java.io.PrintStream err>;

        $r17 = virtualinvoke r2.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

     label7:
        $r10 = <java.lang.System: java.io.PrintStream err>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to restore package ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label8:
        goto label4;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
        catch android.os.RemoteException from label7 to label8 with label6;
    }

    private void doRun()
    {
        com.android.commands.bmgr.Bmgr r0;
        android.os.RemoteException r1, $r3;
        android.app.backup.IBackupManager $r2;
        java.io.PrintStream $r4, $r6;
        java.lang.String $r5;

        r0 := @this: com.android.commands.bmgr.Bmgr;

     label1:
        $r2 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r2.<android.app.backup.IBackupManager: void backupNow()>();

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void doTransport()
    {
        com.android.commands.bmgr.Bmgr r0;
        android.os.RemoteException r1, $r18;
        java.lang.String r2, r3, $r12, $r19, $r20;
        android.app.backup.IBackupManager $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r17;
        java.io.PrintStream $r6, $r15, $r21, $r22;

        r0 := @this: com.android.commands.bmgr.Bmgr;

     label01:
        r2 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

     label02:
        if r2 != null goto label05;

     label03:
        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

     label04:
        return;

     label05:
        $r4 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        r3 = interfaceinvoke $r4.<android.app.backup.IBackupManager: java.lang.String selectBackupTransport(java.lang.String)>(r2);

     label06:
        if r3 != null goto label10;

     label07:
        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown transport \'");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' specified; no changes made.");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label08:
        return;

     label09:
        $r18 := @caughtexception;

        r1 = $r18;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r20 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

     label10:
        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selected transport ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (formerly ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label11:
        return;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
        catch android.os.RemoteException from label10 to label11 with label09;
    }

    private void doWipe()
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String r1, r2, $r11, $r15;
        android.os.RemoteException r3, $r12;
        android.app.backup.IBackupManager $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10;
        java.io.PrintStream $r6, $r13, $r14;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r1 != null goto label1;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label1:
        r2 = specialinvoke r0.<com.android.commands.bmgr.Bmgr: java.lang.String nextArg()>();

        if r2 != null goto label2;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label2:
        $r4 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        interfaceinvoke $r4.<android.app.backup.IBackupManager: void clearBackupData(java.lang.String,java.lang.String)>(r1, r2);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wiped backup data for ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r11);

     label3:
        return;

     label4:
        $r12 := @caughtexception;

        r3 = $r12;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r15 = virtualinvoke r3.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private java.lang.String enableToString(boolean)
    {
        com.android.commands.bmgr.Bmgr r0;
        boolean z0;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        return "enabled";

     label1:
        return "disabled";
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.Exception r1, $r3;
        com.android.commands.bmgr.Bmgr $r2;
        java.io.PrintStream $r4;

        r0 := @parameter0: java.lang.String[];

     label1:
        $r2 = new com.android.commands.bmgr.Bmgr;

        specialinvoke $r2.<com.android.commands.bmgr.Bmgr: void <init>()>();

        virtualinvoke $r2.<com.android.commands.bmgr.Bmgr: void run(java.lang.String[])>(r0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Exception caught:");

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        $i1 = r0.<com.android.commands.bmgr.Bmgr: int mNextArg>;

        $r2 = r0.<com.android.commands.bmgr.Bmgr: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.commands.bmgr.Bmgr: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.bmgr.Bmgr: int mNextArg>;

        r1 = $r3[$i2];

        $i3 = r0.<com.android.commands.bmgr.Bmgr: int mNextArg>;

        $i4 = 1 + $i3;

        r0.<com.android.commands.bmgr.Bmgr: int mNextArg> = $i4;

        return r1;
    }

    private void printRestoreSets(android.app.backup.RestoreSet[])
    {
        com.android.commands.bmgr.Bmgr r0;
        android.app.backup.RestoreSet[] r1;
        int i0, i1, $i2;
        android.app.backup.RestoreSet r2;
        java.io.PrintStream $r3, $r5;
        java.lang.StringBuilder $r4, $r6, $r8, $r9, $r11;
        long $l3;
        java.lang.String $r7, $r10, $r12;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 := @parameter0: android.app.backup.RestoreSet[];

        if r1 == null goto label1;

        $i2 = lengthof r1;

        if $i2 != 0 goto label3;

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("No restore sets");

     label2:
        return;

     label3:
        i0 = lengthof r1;

        i1 = 0;

     label4:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $l3 = r2.<android.app.backup.RestoreSet: long token>;

        $r7 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r10 = r2.<android.app.backup.RestoreSet: java.lang.String name>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r12);

        i1 = i1 + 1;

        goto label4;
    }

    private static void showUsage()
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("usage: bmgr [backup|restore|list|transport|run]");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("       bmgr backup PACKAGE");

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("       bmgr enable BOOL");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("       bmgr enabled");

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("       bmgr list transports");

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("       bmgr list sets");

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("       bmgr transport WHICH");

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("       bmgr restore TOKEN");

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("       bmgr restore TOKEN PACKAGE...");

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("       bmgr restore PACKAGE");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("       bmgr run");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("       bmgr wipe TRANSPORT PACKAGE");

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("The \'backup\' command schedules a backup pass for the named package.");

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Note that the backup pass will effectively be a no-op if the package");

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("does not actually have changed data to store.");

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("");

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("The \'enable\' command enables or disables the entire backup mechanism.");

        $r19 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>("If the argument is \'true\' it will be enabled, otherwise it will be");

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("disabled.  When disabled, neither backup or restore operations will");

        $r21 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("be performed.");

        $r20 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("");

        $r23 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>("The \'enabled\' command reports the current enabled/disabled state of");

        $r22 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("the backup mechanism.");

        $r25 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>("");

        $r24 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("The \'list transports\' command reports the names of the backup transports");

        $r27 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("currently available on the device.  These names can be passed as arguments");

        $r26 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>("to the \'transport\' and \'wipe\' commands.  The currently selected transport");

        $r29 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("is indicated with a \'*\' character.");

        $r28 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("");

        $r31 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>("The \'list sets\' command reports the token and name of each restore set");

        $r30 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("available to the device via the current transport.");

        $r34 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>("");

        $r35 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>("The \'transport\' command designates the named transport as the currently");

        $r32 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("active one.  This setting is persistent across reboots.");

        $r33 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>("");

        $r38 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("The \'restore\' command when given just a restore token initiates a full-system");

        $r39 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>("restore operation from the currently active transport.  It will deliver");

        $r36 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>("the restore set designated by the TOKEN argument to each application");

        $r37 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("that had contributed data to that restore set.");

        $r42 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>("");

        $r43 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r43.<java.io.PrintStream: void println(java.lang.String)>("The \'restore\' command when given a token and one or more package names");

        $r40 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>("initiates a restore operation of just those given packages from the restore");

        $r41 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>("set designated by the TOKEN argument.  It is effectively the same as the");

        $r46 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>("\'restore\' operation supplying only a token, but applies a filter to the");

        $r47 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>("set of applications to be restored.");

        $r44 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("");

        $r45 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r45.<java.io.PrintStream: void println(java.lang.String)>("The \'restore\' command when given just a package name intiates a restore of");

        $r51 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>("just that one package according to the restore set selection algorithm");

        $r50 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>("used by the RestoreSession.restorePackage() method.");

        $r49 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>("");

        $r48 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("The \'run\' command causes any scheduled backup operation to be initiated");

        $r55 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>("immediately, without the usual waiting period for batching together");

        $r54 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("data changes.");

        $r53 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r53.<java.io.PrintStream: void println(java.lang.String)>("");

        $r52 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>("The \'wipe\' command causes all backed-up data for the given package to be");

        $r58 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>("erased from the given transport\'s storage.  The next backup operation");

        $r57 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("that the given application performs will rewrite its entire data set.");

        $r56 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r56.<java.io.PrintStream: void println(java.lang.String)>("Transport names to use here are those reported by \'list transports\'.");

        return;
    }

    public void run(java.lang.String[])
    {
        com.android.commands.bmgr.Bmgr r0;
        java.lang.String[] r1;
        java.lang.String r2, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        int $i0;
        android.os.IBinder $r3;
        android.app.backup.IBackupManager $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.io.PrintStream $r14, $r15;

        r0 := @this: com.android.commands.bmgr.Bmgr;

        r1 := @parameter0: java.lang.String[];

        $i0 = lengthof r1;

        if $i0 >= 1 goto label01;

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;

     label01:
        $r3 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("backup");

        $r4 = staticinvoke <android.app.backup.IBackupManager$Stub: android.app.backup.IBackupManager asInterface(android.os.IBinder)>($r3);

        r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr> = $r4;

        $r5 = r0.<com.android.commands.bmgr.Bmgr: android.app.backup.IBackupManager mBmgr>;

        if $r5 != null goto label02;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Error: Could not access the Backup Manager.  Is the system running?");

        return;

     label02:
        r0.<com.android.commands.bmgr.Bmgr: java.lang.String[] mArgs> = r1;

        r2 = r1[0];

        r0.<com.android.commands.bmgr.Bmgr: int mNextArg> = 1;

        $r6 = "enabled";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label03;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doEnabled()>();

        return;

     label03:
        $r7 = "enable";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label04;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doEnable()>();

        return;

     label04:
        $r8 = "run";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label05;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doRun()>();

        return;

     label05:
        $r9 = "backup";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label06;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doBackup()>();

        return;

     label06:
        $r10 = "list";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label07;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doList()>();

        return;

     label07:
        $r11 = "restore";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label08;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doRestore()>();

        return;

     label08:
        $r12 = "transport";

        $z6 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label09;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doTransport()>();

        return;

     label09:
        $r13 = "wipe";

        $z7 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label10;

        specialinvoke r0.<com.android.commands.bmgr.Bmgr: void doWipe()>();

        return;

     label10:
        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Unknown command");

        staticinvoke <com.android.commands.bmgr.Bmgr: void showUsage()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.commands.bmgr.Bmgr: java.lang.String TRANSPORT_NOT_RUNNING_ERR> = "Error: Could not access the backup transport.  Is the system running?";

        <com.android.commands.bmgr.Bmgr: java.lang.String BMGR_NOT_RUNNING_ERR> = "Error: Could not access the Backup Manager.  Is the system running?";

        return;
    }
}
