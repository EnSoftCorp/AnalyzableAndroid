public class gov.nist.javax.sip.stack.UDPMessageProcessor extends gov.nist.javax.sip.stack.MessageProcessor
{
    private static final int HIGHWAT;
    private static final int LOWAT;
    protected boolean isRunning;
    protected java.util.LinkedList messageChannels;
    protected java.util.LinkedList messageQueue;
    private int port;
    protected java.net.DatagramSocket sock;
    protected int threadPoolSize;

    protected void <init>(java.net.InetAddress, gov.nist.javax.sip.stack.SIPTransactionStack, int) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        java.net.InetAddress r1, $r11;
        gov.nist.javax.sip.stack.SIPTransactionStack r2;
        int i0, $i1, $i2, $i3;
        java.net.SocketException r3, $r17;
        java.util.LinkedList $r4;
        gov.nist.core.net.NetworkLayer $r5;
        java.net.DatagramSocket $r6, $r7, $r8, $r12, $r15;
        gov.nist.core.ThreadAuditor $r9, $r14;
        boolean $z0, $z1, $z2;
        java.lang.String $r10, $r13, $r18;
        long $l4;
        java.io.IOException $r16;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: gov.nist.javax.sip.stack.SIPTransactionStack;

        i0 := @parameter2: int;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageProcessor: void <init>(java.net.InetAddress,int,java.lang.String,gov.nist.javax.sip.stack.SIPTransactionStack)>(r1, i0, "udp", r2);

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r2;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue> = $r4;

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: int port> = i0;

     label1:
        $r5 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()>();

        $r6 = interfaceinvoke $r5.<gov.nist.core.net.NetworkLayer: java.net.DatagramSocket createDatagramSocket(int,java.net.InetAddress)>(i0, r1);

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock> = $r6;

        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        $i1 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPTransactionStack: int getReceiveUdpBufferSize()>();

        virtualinvoke $r7.<java.net.DatagramSocket: void setReceiveBufferSize(int)>($i1);

        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        $i2 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPTransactionStack: int getSendUdpBufferSize()>();

        virtualinvoke $r8.<java.net.DatagramSocket: void setSendBufferSize(int)>($i2);

        $r9 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        $z0 = virtualinvoke $r9.<gov.nist.core.ThreadAuditor: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $r15 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        $r14 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        $l4 = virtualinvoke $r14.<gov.nist.core.ThreadAuditor: long getPingIntervalInMillisecs()>();

        $i3 = (int) $l4;

        virtualinvoke $r15.<java.net.DatagramSocket: void setSoTimeout(int)>($i3);

     label2:
        $r10 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("0.0.0.0");

        if $z1 != 0 goto label3;

        $r13 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("::0");

        if $z2 == 0 goto label4;

     label3:
        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        $r11 = virtualinvoke $r12.<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageProcessor: void setIpAddress(java.net.InetAddress)>($r11);

     label4:
        return;

     label5:
        $r17 := @caughtexception;

        r3 = $r17;

        $r16 = new java.io.IOException;

        $r18 = virtualinvoke r3.<java.net.SocketException: java.lang.String getMessage()>();

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r16;

        catch java.net.SocketException from label1 to label2 with label5;
        catch java.net.SocketException from label2 to label3 with label5;
        catch java.net.SocketException from label3 to label4 with label5;
    }

    public gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.core.HostPort) throws java.net.UnknownHostException
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        gov.nist.core.HostPort r1;
        gov.nist.javax.sip.stack.UDPMessageChannel $r2;
        java.net.InetAddress $r3;
        int $i0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r1 := @parameter0: gov.nist.core.HostPort;

        $r2 = new gov.nist.javax.sip.stack.UDPMessageChannel;

        $r3 = virtualinvoke r1.<gov.nist.core.HostPort: java.net.InetAddress getInetAddress()>();

        $i0 = virtualinvoke r1.<gov.nist.core.HostPort: int getPort()>();

        $r4 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r2.<gov.nist.javax.sip.stack.UDPMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.UDPMessageProcessor)>($r3, $i0, $r4, r0);

        return $r2;
    }

    public gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress, int) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        java.net.InetAddress r1;
        int i0;
        gov.nist.javax.sip.stack.UDPMessageChannel $r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        $r2 = new gov.nist.javax.sip.stack.UDPMessageChannel;

        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r2.<gov.nist.javax.sip.stack.UDPMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.UDPMessageProcessor)>(r1, i0, $r3, r0);

        return $r2;
    }

    public int getDefaultTargetPort()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        return 5060;
    }

    public int getMaximumMessageSize()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        return 8192;
    }

    public int getPort()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: int port>;

        return $i0;
    }

    public gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    public java.lang.String getTransport()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        return "udp";
    }

    public boolean inUse()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        java.util.LinkedList r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean z0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r1 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r1;

     label1:
        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i0 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        if $i0 == 0 goto label8;

     label2:
        z0 = 1;

     label3:
        exitmonitor r1;

     label4:
        return z0;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        z0 = 0;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        return 0;
    }

    public void run()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        gov.nist.core.ThreadAuditor$ThreadHandle r1;
        java.lang.Exception r2, $r54;
        java.io.IOException r3, $r43;
        java.util.LinkedList r5, r9, $r13, $r24, $r25, $r26, $r27, $r28, $r29, $r46, $r55;
        java.lang.Throwable r6, r10, $r41, $r52;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        java.net.DatagramPacket r8, $r17;
        float f0, $f1;
        boolean z0, $z1, $z2, $z4, $z5, $z7, $z8, $z9;
        gov.nist.javax.sip.stack.UDPMessageChannel r11, $r21, $r44;
        gov.nist.javax.sip.stack.SIPTransactionStack $r12, $r14, $r20, $r22, $r23, $r31, $r32, $r35, $r37, $r40, $r45, $r47, $r49, $r51, $r53, $r57, $r59;
        gov.nist.core.ThreadAuditor $r15;
        java.net.DatagramSocket $r16, $r18;
        byte[] $r19;
        byte $b9;
        double $d0, $d1, $d2, $d3, $d4;
        gov.nist.core.StackLogger $r30, $r36, $r50, $r56, $r58;
        java.lang.StringBuilder $r33, $r34, $r38;
        java.lang.String $r39;
        java.net.SocketTimeoutException $r42;
        java.net.SocketException $r48;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        $r13 = new java.util.LinkedList;

        specialinvoke $r13.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageChannels> = $r13;

        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i2 = $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i2 == -1 goto label02;

        i1 = 0;

     label01:
        $r37 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i10 = $r37.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if i1 >= $i10 goto label02;

        $r44 = new gov.nist.javax.sip.stack.UDPMessageChannel;

        $r45 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r44.<gov.nist.javax.sip.stack.UDPMessageChannel: void <init>(gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.UDPMessageProcessor)>($r45, r0);

        r11 = $r44;

        $r46 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageChannels>;

        virtualinvoke $r46.<java.util.LinkedList: boolean add(java.lang.Object)>(r11);

        i1 = i1 + 1;

        goto label01;

     label02:
        $r14 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r15 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        r1 = virtualinvoke $r15.<gov.nist.core.ThreadAuditor: gov.nist.core.ThreadAuditor$ThreadHandle addCurrentThread()>();

     label03:
        $z1 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning>;

        if $z1 == 0 goto label30;

     label04:
        virtualinvoke r1.<gov.nist.core.ThreadAuditor$ThreadHandle: void ping()>();

        $r16 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        i0 = virtualinvoke $r16.<java.net.DatagramSocket: int getReceiveBufferSize()>();

        $r17 = new java.net.DatagramPacket;

        $r19 = newarray (byte)[i0];

        specialinvoke $r17.<java.net.DatagramPacket: void <init>(byte[],int)>($r19, i0);

        r8 = $r17;

        $r18 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        virtualinvoke $r18.<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>(r8);

        $r20 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean stackDoesCongestionControl>;

        if $z2 == 0 goto label19;

        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i4 = virtualinvoke $r27.<java.util.LinkedList: int size()>();

        if $i4 < 5000 goto label06;

        $r40 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label03;

        $r35 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r36 = virtualinvoke $r35.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r36.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping message -- queue length exceeded");

     label05:
        goto label03;

     label06:
        $r26 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i6 = virtualinvoke $r26.<java.util.LinkedList: int size()>();

        if $i6 <= 2500 goto label19;

        $r29 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i5 = virtualinvoke $r29.<java.util.LinkedList: int size()>();

        if $i5 >= 5000 goto label19;

        $r28 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i8 = virtualinvoke $r28.<java.util.LinkedList: int size()>();

        $i7 = -2500 + $i8;

        $f1 = (float) $i7;

        f0 = $f1 / 2500.0F;

        $d2 = staticinvoke <java.lang.Math: double random()>();

        $d1 = (double) f0;

        $d0 = 1.0 - $d1;

        $b9 = $d2 cmpl $d0;

        if $b9 <= 0 goto label18;

     label07:
        z0 = 1;

     label08:
        if z0 == 0 goto label19;

     label09:
        $r32 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r32.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label03;

        $r31 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r30 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping message with probability  ");

        $d4 = (double) f0;

        $d3 = 1.0 - $d4;

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r39);

     label10:
        goto label03;

     label11:
        $r48 := @caughtexception;

        $r47 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r47.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label12;

        $r57 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r56 = virtualinvoke $r57.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r56.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("UDPMessageProcessor: Stopping");

     label12:
        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning> = 0;

        r5 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r5;

     label13:
        $r55 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        virtualinvoke $r55.<java.lang.Object: void notifyAll()>();

        exitmonitor r5;

     label14:
        goto label03;

     label15:
        $r52 := @caughtexception;

        r6 = $r52;

     label16:
        exitmonitor r5;

     label17:
        throw r6;

     label18:
        z0 = 0;

        goto label08;

     label19:
        $r23 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i3 = $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i3 == -1 goto label26;

        r9 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r9;

     label20:
        $r25 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        virtualinvoke $r25.<java.util.LinkedList: boolean add(java.lang.Object)>(r8);

        $r24 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        virtualinvoke $r24.<java.lang.Object: void notify()>();

        exitmonitor r9;

     label21:
        goto label03;

     label22:
        $r41 := @caughtexception;

        r10 = $r41;

     label23:
        exitmonitor r9;

     label24:
        throw r10;

     label25:
        $r43 := @caughtexception;

        r3 = $r43;

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning> = 0;

        virtualinvoke r3.<java.io.IOException: void printStackTrace()>();

        $r49 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r49.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label03;

        $r51 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r50 = virtualinvoke $r51.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r50.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("UDPMessageProcessor: Got an IO Exception");

        goto label03;

     label26:
        $r21 = new gov.nist.javax.sip.stack.UDPMessageChannel;

        $r22 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r21.<gov.nist.javax.sip.stack.UDPMessageChannel: void <init>(gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.UDPMessageProcessor,java.net.DatagramPacket)>($r22, r0, r8);

     label27:
        goto label03;

     label28:
        $r54 := @caughtexception;

        r2 = $r54;

        $r53 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z9 = virtualinvoke $r53.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label29;

        $r59 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r58 = virtualinvoke $r59.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r58.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("UDPMessageProcessor: Unexpected Exception - quitting");

     label29:
        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r2);

     label30:
        return;

     label31:
        $r42 := @caughtexception;

        goto label03;

        catch java.net.SocketTimeoutException from label04 to label05 with label31;
        catch java.net.SocketException from label04 to label05 with label11;
        catch java.io.IOException from label04 to label05 with label25;
        catch java.lang.Exception from label04 to label05 with label28;
        catch java.net.SocketTimeoutException from label06 to label07 with label31;
        catch java.net.SocketException from label06 to label07 with label11;
        catch java.io.IOException from label06 to label07 with label25;
        catch java.lang.Exception from label06 to label07 with label28;
        catch java.net.SocketTimeoutException from label09 to label10 with label31;
        catch java.net.SocketException from label09 to label10 with label11;
        catch java.io.IOException from label09 to label10 with label25;
        catch java.lang.Exception from label09 to label10 with label28;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.net.SocketTimeoutException from label19 to label20 with label31;
        catch java.net.SocketException from label19 to label20 with label11;
        catch java.io.IOException from label19 to label20 with label25;
        catch java.lang.Exception from label19 to label20 with label28;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label23 to label24 with label22;
        catch java.net.SocketTimeoutException from label24 to label25 with label31;
        catch java.net.SocketException from label24 to label25 with label11;
        catch java.io.IOException from label24 to label25 with label25;
        catch java.lang.Exception from label24 to label25 with label28;
        catch java.net.SocketTimeoutException from label26 to label27 with label31;
        catch java.net.SocketException from label26 to label27 with label11;
        catch java.io.IOException from label26 to label27 with label25;
        catch java.lang.Exception from label26 to label27 with label28;
    }

    public void start() throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        java.lang.Thread r1, $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning> = 1;

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r1 = $r2;

        virtualinvoke r1.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke r1.<java.lang.Thread: void setName(java.lang.String)>("UDPMessageProcessorThread");

        virtualinvoke r1.<java.lang.Thread: void setPriority(int)>(10);

        virtualinvoke r1.<java.lang.Thread: void start()>();

        return;
    }

    public void stop()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        java.util.LinkedList r1, $r3;
        java.lang.Throwable r2, $r5;
        java.net.DatagramSocket $r4;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r1 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r1;

     label1:
        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning> = 0;

        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        $r4 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        virtualinvoke $r4.<java.net.DatagramSocket: void close()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.stack.UDPMessageProcessor: int LOWAT> = 2500;

        <gov.nist.javax.sip.stack.UDPMessageProcessor: int HIGHWAT> = 5000;

        return;
    }
}
