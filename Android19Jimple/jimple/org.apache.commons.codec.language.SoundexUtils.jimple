final class org.apache.commons.codec.language.SoundexUtils extends java.lang.Object
{

    void <init>()
    {
        org.apache.commons.codec.language.SoundexUtils r0;

        r0 := @this: org.apache.commons.codec.language.SoundexUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String clean(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r4;
        int i0, i1, i2, i3, $i4;
        char[] r1;
        char $c5, $c6;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i4 != 0 goto label2;

     label1:
        return r0;

     label2:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r1 = newarray (char)[i0];

        i1 = 0;

        i2 = 0;

     label3:
        if i1 >= i0 goto label5;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c5);

        if $z0 == 0 goto label7;

        i3 = i2 + 1;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        r1[i2] = $c6;

     label4:
        i1 = i1 + 1;

        i2 = i3;

        goto label3;

     label5:
        if i2 != i0 goto label6;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        return $r4;

     label6:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i2);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        return $r3;

     label7:
        i3 = i2;

        goto label4;
    }

    static int difference(org.apache.commons.codec.StringEncoder, java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.StringEncoder r0;
        java.lang.String r1, r2, $r3, $r4;
        int $i0;

        r0 := @parameter0: org.apache.commons.codec.StringEncoder;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = interfaceinvoke r0.<org.apache.commons.codec.StringEncoder: java.lang.String encode(java.lang.String)>(r1);

        $r4 = interfaceinvoke r0.<org.apache.commons.codec.StringEncoder: java.lang.String encode(java.lang.String)>(r2);

        $i0 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: int differenceEncoded(java.lang.String,java.lang.String)>($r3, $r4);

        return $i0;
    }

    static int differenceEncoded(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, $i3, $i4;
        char $c5, $c6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        if r1 != null goto label3;

     label1:
        i0 = 0;

     label2:
        return i0;

     label3:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i4);

        i0 = 0;

        i2 = 0;

     label4:
        if i2 >= i1 goto label2;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if $c5 != $c6 goto label5;

        i0 = i0 + 1;

     label5:
        i2 = i2 + 1;

        goto label4;
    }
}
