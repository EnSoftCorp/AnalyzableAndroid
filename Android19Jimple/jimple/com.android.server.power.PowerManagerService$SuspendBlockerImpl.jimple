final class com.android.server.power.PowerManagerService$SuspendBlockerImpl extends java.lang.Object implements com.android.server.power.SuspendBlocker
{
    private final java.lang.String mName;
    private int mReferenceCount;
    final com.android.server.power.PowerManagerService this$0;

    public void <init>(com.android.server.power.PowerManagerService, java.lang.String)
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        com.android.server.power.PowerManagerService r1;
        java.lang.String r2;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: com.android.server.power.PowerManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName> = r2;

        return;
    }

    public void acquire()
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        java.lang.Throwable r1, $r3;
        int $i0, $i1, $i2;
        java.lang.String $r2;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

        entermonitor r0;

     label1:
        $i0 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        $i1 = 1 + $i0;

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount> = $i1;

        $i2 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        if $i2 != 1 goto label2;

        $r2 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$2500(java.lang.String)>($r2);

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        java.lang.Throwable r1, $r9;
        int $i0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7, $r8;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

     label1:
        $i0 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        if $i0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspend blocker \"");

        $r4 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" was finalized without being released!");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("PowerManagerService", $r7);

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount> = 0;

        $r8 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$2400(java.lang.String)>($r8);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void release()
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        java.lang.Throwable r1, $r8, $r10;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

        entermonitor r0;

     label1:
        $i0 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        $i1 = -1 + $i0;

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount> = $i1;

        $i2 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        if $i2 != 0 goto label4;

        $r9 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        staticinvoke <com.android.server.power.PowerManagerService: void access$2400(java.lang.String)>($r9);

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $i3 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        if $i3 >= 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suspend blocker \"");

        $r4 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" was released without being acquired!");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new java.lang.Throwable;

        specialinvoke $r8.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PowerManagerService", $r7, $r8);

        r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount> = 0;

     label5:
        goto label2;

     label6:
        $r10 := @caughtexception;

        r1 = $r10;

     label7:
        exitmonitor r0;

     label8:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.lang.String toString()
    {
        com.android.server.power.PowerManagerService$SuspendBlockerImpl r0;
        java.lang.Throwable r1, $r8;
        java.lang.String r2, $r4;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        int $i0;

        r0 := @this: com.android.server.power.PowerManagerService$SuspendBlockerImpl;

        entermonitor r0;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: java.lang.String mName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ref count=");

        $i0 = r0.<com.android.server.power.PowerManagerService$SuspendBlockerImpl: int mReferenceCount>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r0;

     label2:
        return r2;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
