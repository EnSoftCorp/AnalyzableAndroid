public class android.filterfw.geometry.Rectangle extends android.filterfw.geometry.Quad
{

    public void <init>()
    {
        android.filterfw.geometry.Rectangle r0;

        r0 := @this: android.filterfw.geometry.Rectangle;

        specialinvoke r0.<android.filterfw.geometry.Quad: void <init>()>();

        return;
    }

    public void <init>(float, float, float, float)
    {
        android.filterfw.geometry.Rectangle r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        android.filterfw.geometry.Point $r1, $r2, $r3, $r4;

        r0 := @this: android.filterfw.geometry.Rectangle;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $r1 = new android.filterfw.geometry.Point;

        specialinvoke $r1.<android.filterfw.geometry.Point: void <init>(float,float)>(f0, f1);

        $r2 = new android.filterfw.geometry.Point;

        $f4 = f0 + f2;

        specialinvoke $r2.<android.filterfw.geometry.Point: void <init>(float,float)>($f4, f1);

        $r3 = new android.filterfw.geometry.Point;

        $f5 = f1 + f3;

        specialinvoke $r3.<android.filterfw.geometry.Point: void <init>(float,float)>(f0, $f5);

        $r4 = new android.filterfw.geometry.Point;

        $f7 = f0 + f2;

        $f6 = f1 + f3;

        specialinvoke $r4.<android.filterfw.geometry.Point: void <init>(float,float)>($f7, $f6);

        specialinvoke r0.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r1, $r2, $r3, $r4);

        return;
    }

    public void <init>(android.filterfw.geometry.Point, android.filterfw.geometry.Point)
    {
        android.filterfw.geometry.Rectangle r0;
        android.filterfw.geometry.Point r1, r2, $r3, $r4, $r5;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.filterfw.geometry.Rectangle;

        r1 := @parameter0: android.filterfw.geometry.Point;

        r2 := @parameter1: android.filterfw.geometry.Point;

        $f0 = r2.<android.filterfw.geometry.Point: float x>;

        $r3 = virtualinvoke r1.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>($f0, 0.0F);

        $f1 = r2.<android.filterfw.geometry.Point: float y>;

        $r4 = virtualinvoke r1.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>(0.0F, $f1);

        $f3 = r2.<android.filterfw.geometry.Point: float x>;

        $f2 = r2.<android.filterfw.geometry.Point: float y>;

        $r5 = virtualinvoke r1.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>($f3, $f2);

        specialinvoke r0.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>(r1, $r3, $r4, $r5);

        return;
    }

    private void <init>(android.filterfw.geometry.Point, android.filterfw.geometry.Point, android.filterfw.geometry.Point, android.filterfw.geometry.Point)
    {
        android.filterfw.geometry.Rectangle r0;
        android.filterfw.geometry.Point r1, r2, r3, r4;

        r0 := @this: android.filterfw.geometry.Rectangle;

        r1 := @parameter0: android.filterfw.geometry.Point;

        r2 := @parameter1: android.filterfw.geometry.Point;

        r3 := @parameter2: android.filterfw.geometry.Point;

        r4 := @parameter3: android.filterfw.geometry.Point;

        specialinvoke r0.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>(r1, r2, r3, r4);

        return;
    }

    public static android.filterfw.geometry.Rectangle fromCenterVerticalAxis(android.filterfw.geometry.Point, android.filterfw.geometry.Point, android.filterfw.geometry.Point)
    {
        android.filterfw.geometry.Point r0, r1, r2, r3, r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        float $f0, $f1, $f2, $f3;
        android.filterfw.geometry.Rectangle $r6;

        r0 := @parameter0: android.filterfw.geometry.Point;

        r1 := @parameter1: android.filterfw.geometry.Point;

        r2 := @parameter2: android.filterfw.geometry.Point;

        $f0 = r2.<android.filterfw.geometry.Point: float y>;

        $f1 = $f0 / 2.0F;

        r3 = virtualinvoke r1.<android.filterfw.geometry.Point: android.filterfw.geometry.Point scaledTo(float)>($f1);

        $r5 = virtualinvoke r1.<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotated90(int)>(1);

        $f2 = r2.<android.filterfw.geometry.Point: float x>;

        $f3 = $f2 / 2.0F;

        r4 = virtualinvoke $r5.<android.filterfw.geometry.Point: android.filterfw.geometry.Point scaledTo(float)>($f3);

        $r6 = new android.filterfw.geometry.Rectangle;

        $r7 = virtualinvoke r0.<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(android.filterfw.geometry.Point)>(r4);

        $r8 = virtualinvoke $r7.<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(android.filterfw.geometry.Point)>(r3);

        $r9 = virtualinvoke r0.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r4);

        $r11 = virtualinvoke $r9.<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(android.filterfw.geometry.Point)>(r3);

        $r10 = virtualinvoke r0.<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(android.filterfw.geometry.Point)>(r4);

        $r13 = virtualinvoke $r10.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r3);

        $r12 = virtualinvoke r0.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r4);

        $r14 = virtualinvoke $r12.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>(r3);

        specialinvoke $r6.<android.filterfw.geometry.Rectangle: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r8, $r11, $r13, $r14);

        return $r6;
    }

    public static android.filterfw.geometry.Rectangle fromRotatedRect(android.filterfw.geometry.Point, android.filterfw.geometry.Point, float)
    {
        android.filterfw.geometry.Point r0, r1, r2, r3, r4, r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32;
        android.filterfw.geometry.Rectangle $r10;

        r0 := @parameter0: android.filterfw.geometry.Point;

        r1 := @parameter1: android.filterfw.geometry.Point;

        f0 := @parameter2: float;

        $r6 = new android.filterfw.geometry.Point;

        $f3 = r0.<android.filterfw.geometry.Point: float x>;

        $f1 = r1.<android.filterfw.geometry.Point: float x>;

        $f2 = $f1 / 2.0F;

        $f8 = $f3 - $f2;

        $f6 = r0.<android.filterfw.geometry.Point: float y>;

        $f4 = r1.<android.filterfw.geometry.Point: float y>;

        $f5 = $f4 / 2.0F;

        $f7 = $f6 - $f5;

        specialinvoke $r6.<android.filterfw.geometry.Point: void <init>(float,float)>($f8, $f7);

        r2 = $r6;

        $r7 = new android.filterfw.geometry.Point;

        $f10 = r0.<android.filterfw.geometry.Point: float x>;

        $f9 = r1.<android.filterfw.geometry.Point: float x>;

        $f11 = $f9 / 2.0F;

        $f16 = $f10 + $f11;

        $f15 = r0.<android.filterfw.geometry.Point: float y>;

        $f13 = r1.<android.filterfw.geometry.Point: float y>;

        $f12 = $f13 / 2.0F;

        $f14 = $f15 - $f12;

        specialinvoke $r7.<android.filterfw.geometry.Point: void <init>(float,float)>($f16, $f14);

        r3 = $r7;

        $r8 = new android.filterfw.geometry.Point;

        $f20 = r0.<android.filterfw.geometry.Point: float x>;

        $f18 = r1.<android.filterfw.geometry.Point: float x>;

        $f17 = $f18 / 2.0F;

        $f25 = $f20 - $f17;

        $f21 = r0.<android.filterfw.geometry.Point: float y>;

        $f19 = r1.<android.filterfw.geometry.Point: float y>;

        $f22 = $f19 / 2.0F;

        $f24 = $f21 + $f22;

        specialinvoke $r8.<android.filterfw.geometry.Point: void <init>(float,float)>($f25, $f24);

        r4 = $r8;

        $r9 = new android.filterfw.geometry.Point;

        $f29 = r0.<android.filterfw.geometry.Point: float x>;

        $f23 = r1.<android.filterfw.geometry.Point: float x>;

        $f28 = $f23 / 2.0F;

        $f30 = $f29 + $f28;

        $f31 = r0.<android.filterfw.geometry.Point: float y>;

        $f26 = r1.<android.filterfw.geometry.Point: float y>;

        $f27 = $f26 / 2.0F;

        $f32 = $f31 + $f27;

        specialinvoke $r9.<android.filterfw.geometry.Point: void <init>(float,float)>($f30, $f32);

        r5 = $r9;

        $r10 = new android.filterfw.geometry.Rectangle;

        $r13 = virtualinvoke r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotatedAround(android.filterfw.geometry.Point,float)>(r0, f0);

        $r14 = virtualinvoke r3.<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotatedAround(android.filterfw.geometry.Point,float)>(r0, f0);

        $r11 = virtualinvoke r4.<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotatedAround(android.filterfw.geometry.Point,float)>(r0, f0);

        $r12 = virtualinvoke r5.<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotatedAround(android.filterfw.geometry.Point,float)>(r0, f0);

        specialinvoke $r10.<android.filterfw.geometry.Rectangle: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r13, $r14, $r11, $r12);

        return $r10;
    }

    public android.filterfw.geometry.Point center()
    {
        android.filterfw.geometry.Rectangle r0;
        android.filterfw.geometry.Point $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.filterfw.geometry.Rectangle;

        $r2 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p0>;

        $r1 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p1>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>($r1);

        $r4 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p2>;

        $r5 = virtualinvoke $r3.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>($r4);

        $r6 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p3>;

        $r7 = virtualinvoke $r5.<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>($r6);

        $r8 = virtualinvoke $r7.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(0.25F);

        return $r8;
    }

    public float getHeight()
    {
        android.filterfw.geometry.Rectangle r0;
        android.filterfw.geometry.Point $r1, $r2, $r3;
        float $f0;

        r0 := @this: android.filterfw.geometry.Rectangle;

        $r2 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p2>;

        $r1 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(android.filterfw.geometry.Point)>($r1);

        $f0 = virtualinvoke $r3.<android.filterfw.geometry.Point: float length()>();

        return $f0;
    }

    public float getWidth()
    {
        android.filterfw.geometry.Rectangle r0;
        android.filterfw.geometry.Point $r1, $r2, $r3;
        float $f0;

        r0 := @this: android.filterfw.geometry.Rectangle;

        $r2 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p1>;

        $r1 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(android.filterfw.geometry.Point)>($r1);

        $f0 = virtualinvoke $r3.<android.filterfw.geometry.Point: float length()>();

        return $f0;
    }

    public volatile android.filterfw.geometry.Quad scaled(float)
    {
        android.filterfw.geometry.Rectangle r0, $r1;
        float f0;

        r0 := @this: android.filterfw.geometry.Rectangle;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle scaled(float)>(f0);

        return $r1;
    }

    public volatile android.filterfw.geometry.Quad scaled(float, float)
    {
        android.filterfw.geometry.Rectangle r0, $r1;
        float f0, f1;

        r0 := @this: android.filterfw.geometry.Rectangle;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle scaled(float,float)>(f0, f1);

        return $r1;
    }

    public android.filterfw.geometry.Rectangle scaled(float)
    {
        android.filterfw.geometry.Rectangle r0, $r1;
        float f0;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.filterfw.geometry.Rectangle;

        f0 := @parameter0: float;

        $r1 = new android.filterfw.geometry.Rectangle;

        $r2 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        $r4 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p1>;

        $r5 = virtualinvoke $r4.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        $r6 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p2>;

        $r7 = virtualinvoke $r6.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        $r8 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p3>;

        $r9 = virtualinvoke $r8.<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>(f0);

        specialinvoke $r1.<android.filterfw.geometry.Rectangle: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r3, $r5, $r7, $r9);

        return $r1;
    }

    public android.filterfw.geometry.Rectangle scaled(float, float)
    {
        android.filterfw.geometry.Rectangle r0, $r1;
        float f0, f1;
        android.filterfw.geometry.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.filterfw.geometry.Rectangle;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = new android.filterfw.geometry.Rectangle;

        $r2 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p0>;

        $r3 = virtualinvoke $r2.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        $r4 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p1>;

        $r5 = virtualinvoke $r4.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        $r6 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p2>;

        $r7 = virtualinvoke $r6.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        $r8 = r0.<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point p3>;

        $r9 = virtualinvoke $r8.<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>(f0, f1);

        specialinvoke $r1.<android.filterfw.geometry.Rectangle: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r3, $r5, $r7, $r9);

        return $r1;
    }
}
