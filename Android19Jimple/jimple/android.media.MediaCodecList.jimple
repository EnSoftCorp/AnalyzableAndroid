public final class android.media.MediaCodecList extends java.lang.Object
{

    static void <clinit>()
    {
        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("media_jni");

        staticinvoke <android.media.MediaCodecList: void native_init()>();

        return;
    }

    private void <init>()
    {
        android.media.MediaCodecList r0;

        r0 := @this: android.media.MediaCodecList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static final native int findCodecByName(java.lang.String);

    static final native android.media.MediaCodecInfo$CodecCapabilities getCodecCapabilities(int, java.lang.String);

    public static final native int getCodecCount();

    public static final android.media.MediaCodecInfo getCodecInfoAt(int)
    {
        int i0, $i1;
        java.lang.IllegalArgumentException $r0;
        android.media.MediaCodecInfo $r1;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = staticinvoke <android.media.MediaCodecList: int getCodecCount()>();

        if i0 <= $i1 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        $r1 = new android.media.MediaCodecInfo;

        specialinvoke $r1.<android.media.MediaCodecInfo: void <init>(int)>(i0);

        return $r1;
    }

    static final native java.lang.String getCodecName(int);

    static final native java.lang.String[] getSupportedTypes(int);

    static final native boolean isEncoder(int);

    private static final native void native_init();
}
