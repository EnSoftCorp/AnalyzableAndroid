class com.android.org.chromium.content.browser.LongPressDetector extends java.lang.Object
{
    private static final int LONGPRESS_TIMEOUT;
    private static final int TAP_TIMEOUT;
    private android.view.MotionEvent mCurrentDownEvent;
    private boolean mInLongPress;
    private final com.android.org.chromium.content.browser.LongPressDetector$LongPressDelegate mLongPressDelegate;
    private final android.os.Handler mLongPressHandler;
    private boolean mMoveConfirmed;
    private int mTouchInitialX;
    private int mTouchInitialY;
    private final int mTouchSlopSquare;

    static void <clinit>()
    {
        int $i0, $i1;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        <com.android.org.chromium.content.browser.LongPressDetector: int LONGPRESS_TIMEOUT> = $i0;

        $i1 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        <com.android.org.chromium.content.browser.LongPressDetector: int TAP_TIMEOUT> = $i1;

        return;
    }

    void <init>(android.content.Context, com.android.org.chromium.content.browser.LongPressDetector$LongPressDelegate)
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        android.content.Context r1;
        com.android.org.chromium.content.browser.LongPressDetector$LongPressDelegate r2;
        int i0, $i1;
        com.android.org.chromium.content.browser.LongPressDetector$LongPressHandler $r3;
        android.view.ViewConfiguration $r4;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.org.chromium.content.browser.LongPressDetector$LongPressDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.LongPressDetector: com.android.org.chromium.content.browser.LongPressDetector$LongPressDelegate mLongPressDelegate> = r2;

        $r3 = new com.android.org.chromium.content.browser.LongPressDetector$LongPressHandler;

        specialinvoke $r3.<com.android.org.chromium.content.browser.LongPressDetector$LongPressHandler: void <init>(com.android.org.chromium.content.browser.LongPressDetector)>(r0);

        r0.<com.android.org.chromium.content.browser.LongPressDetector: android.os.Handler mLongPressHandler> = $r3;

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        i0 = virtualinvoke $r4.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $i1 = i0 * i0;

        r0.<com.android.org.chromium.content.browser.LongPressDetector: int mTouchSlopSquare> = $i1;

        return;
    }

    static void access$000(com.android.org.chromium.content.browser.LongPressDetector)
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;

        r0 := @parameter0: com.android.org.chromium.content.browser.LongPressDetector;

        specialinvoke r0.<com.android.org.chromium.content.browser.LongPressDetector: void dispatchLongPress()>();

        return;
    }

    private static long calculateLongPressTimeoutTime(android.view.MotionEvent)
    {
        android.view.MotionEvent r0;
        long $l0, $l2, $l4, $l5, $l6;
        int $i1, $i3;

        r0 := @parameter0: android.view.MotionEvent;

        $l0 = virtualinvoke r0.<android.view.MotionEvent: long getEventTime()>();

        $i1 = <com.android.org.chromium.content.browser.LongPressDetector: int TAP_TIMEOUT>;

        $l2 = (long) $i1;

        $l5 = $l0 + $l2;

        $i3 = <com.android.org.chromium.content.browser.LongPressDetector: int LONGPRESS_TIMEOUT>;

        $l4 = (long) $i3;

        $l6 = $l5 + $l4;

        return $l6;
    }

    private void dispatchLongPress()
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        android.view.MotionEvent $r1, $r3;
        com.android.org.chromium.content.browser.LongPressDetector$LongPressDelegate $r2;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean mInLongPress> = 1;

        $r2 = r0.<com.android.org.chromium.content.browser.LongPressDetector: com.android.org.chromium.content.browser.LongPressDetector$LongPressDelegate mLongPressDelegate>;

        $r1 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        interfaceinvoke $r2.<com.android.org.chromium.content.browser.LongPressDetector$LongPressDelegate: void onLongPress(android.view.MotionEvent)>($r1);

        $r3 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        virtualinvoke $r3.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent> = null;

        return;
    }

    void cancelLongPress()
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        boolean $z0;
        android.os.Handler $r1;
        android.view.MotionEvent $r2;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean mInLongPress> = 0;

        $z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean hasPendingMessage()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.os.Handler mLongPressHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(2);

        $r2 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        virtualinvoke $r2.<android.view.MotionEvent: void recycle()>();

        r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent> = null;

     label1:
        return;
    }

    void cancelLongPressIfNeeded(android.view.MotionEvent)
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        android.view.MotionEvent r1, $r2, $r3, $r4, $r5, $r6;
        int i0, i1, i2, $i6, $i7, $i8, $i9, $i10;
        float f0, f1, $f2, $f3, $f4, $f5;
        boolean $z0;
        long $l3, $l4, $l11, $l12;
        byte $b5, $b13;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean hasPendingMessage()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        if $r2 == null goto label1;

        $l3 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        $r3 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        $l4 = virtualinvoke $r3.<android.view.MotionEvent: long getDownTime()>();

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label2;

     label1:
        return;

     label2:
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i6 = i0 & 255;

        tableswitch($i6)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label4;
            default: goto label3;
        };

     label3:
        return;

     label4:
        $r6 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        $l12 = staticinvoke <com.android.org.chromium.content.browser.LongPressDetector: long calculateLongPressTimeoutTime(android.view.MotionEvent)>($r6);

        $l11 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $b13 = $l12 cmp $l11;

        if $b13 <= 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.LongPressDetector: void cancelLongPress()>();

        return;

     label5:
        $r4 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        $f3 = virtualinvoke $r4.<android.view.MotionEvent: float getX()>();

        $f2 = f1 - $f3;

        i1 = (int) $f2;

        $r5 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        $f4 = virtualinvoke $r5.<android.view.MotionEvent: float getY()>();

        $f5 = f0 - $f4;

        i2 = (int) $f5;

        $i9 = i1 * i1;

        $i7 = i2 * i2;

        $i10 = $i9 + $i7;

        $i8 = r0.<com.android.org.chromium.content.browser.LongPressDetector: int mTouchSlopSquare>;

        if $i10 <= $i8 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.LongPressDetector: void cancelLongPress()>();

        return;
    }

    void cancelLongPressIfNeeded(java.util.Iterator)
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        java.util.Iterator r1;
        long l0, $l1;
        android.view.MotionEvent r2, $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        byte $b2;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        r1 := @parameter0: java.util.Iterator;

        $r3 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        if $r3 != null goto label2;

     label1:
        return;

     label2:
        $r4 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        l0 = virtualinvoke $r4.<android.view.MotionEvent: long getDownTime()>();

     label3:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.view.MotionEvent) $r5;

        $l1 = virtualinvoke r2.<android.view.MotionEvent: long getDownTime()>();

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.LongPressDetector: void cancelLongPressIfNeeded(android.view.MotionEvent)>(r2);

        goto label3;
    }

    boolean confirmOfferMoveEventToJavaScript(android.view.MotionEvent)
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1;
        float $f0, $f1;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean mMoveConfirmed>;

        if $z0 != 0 goto label1;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i3 = r0.<com.android.org.chromium.content.browser.LongPressDetector: int mTouchInitialX>;

        i0 = $i2 - $i3;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i4 = staticinvoke <java.lang.Math: int round(float)>($f1);

        $i5 = r0.<com.android.org.chromium.content.browser.LongPressDetector: int mTouchInitialY>;

        i1 = $i4 - $i5;

        $i7 = i0 * i0;

        $i6 = i1 * i1;

        $i9 = $i7 + $i6;

        $i8 = r0.<com.android.org.chromium.content.browser.LongPressDetector: int mTouchSlopSquare>;

        if $i9 < $i8 goto label1;

        r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean mMoveConfirmed> = 1;

     label1:
        $z1 = r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean mMoveConfirmed>;

        return $z1;
    }

    boolean hasPendingMessage()
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        android.view.MotionEvent $r1;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        $r1 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isInLongPress()
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        $z0 = r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean mInLongPress>;

        return $z0;
    }

    void onOfferTouchEventToJavaScript(android.view.MotionEvent)
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        android.view.MotionEvent r1;
        int $i0, $i1, $i2;
        float $f0, $f1;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label1;

        r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean mMoveConfirmed> = 0;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        r0.<com.android.org.chromium.content.browser.LongPressDetector: int mTouchInitialX> = $i1;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f1);

        r0.<com.android.org.chromium.content.browser.LongPressDetector: int mTouchInitialY> = $i2;

     label1:
        return;
    }

    void startLongPressTimerIfNeeded(android.view.MotionEvent)
    {
        com.android.org.chromium.content.browser.LongPressDetector r0;
        android.view.MotionEvent r1, $r2, $r3, $r4;
        int $i0;
        android.os.Handler $r5;
        long $l1;

        r0 := @this: com.android.org.chromium.content.browser.LongPressDetector;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 == 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        if $r2 != null goto label1;

        $r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent> = $r3;

        $r5 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.os.Handler mLongPressHandler>;

        $r4 = r0.<com.android.org.chromium.content.browser.LongPressDetector: android.view.MotionEvent mCurrentDownEvent>;

        $l1 = staticinvoke <com.android.org.chromium.content.browser.LongPressDetector: long calculateLongPressTimeoutTime(android.view.MotionEvent)>($r4);

        virtualinvoke $r5.<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>(2, $l1);

        r0.<com.android.org.chromium.content.browser.LongPressDetector: boolean mInLongPress> = 0;

        return;
    }
}
