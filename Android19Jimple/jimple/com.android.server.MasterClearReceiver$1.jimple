class com.android.server.MasterClearReceiver$1 extends java.lang.Thread
{
    final com.android.server.MasterClearReceiver this$0;
    final android.content.Context val$context;

    void <init>(com.android.server.MasterClearReceiver, java.lang.String, android.content.Context)
    {
        com.android.server.MasterClearReceiver$1 r0;
        com.android.server.MasterClearReceiver r1;
        java.lang.String r2;
        android.content.Context r3;

        r0 := @this: com.android.server.MasterClearReceiver$1;

        r1 := @parameter0: com.android.server.MasterClearReceiver;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        r0.<com.android.server.MasterClearReceiver$1: com.android.server.MasterClearReceiver this$0> = r1;

        r0.<com.android.server.MasterClearReceiver$1: android.content.Context val$context> = r3;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    public void run()
    {
        com.android.server.MasterClearReceiver$1 r0;
        java.io.IOException r1, $r3;
        android.content.Context $r2;

        r0 := @this: com.android.server.MasterClearReceiver$1;

     label1:
        $r2 = r0.<com.android.server.MasterClearReceiver$1: android.content.Context val$context>;

        staticinvoke <android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)>($r2);

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("MasterClear", "Still running after master clear?!");

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MasterClear", "Can\'t perform master clear/factory reset", r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
