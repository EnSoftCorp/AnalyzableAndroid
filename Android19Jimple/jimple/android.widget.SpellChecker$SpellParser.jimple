class android.widget.SpellChecker$SpellParser extends java.lang.Object
{
    private java.lang.Object mRange;
    final android.widget.SpellChecker this$0;

    private void <init>(android.widget.SpellChecker)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker r1;
        java.lang.Object $r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.widget.SpellChecker;

        r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange> = $r2;

        return;
    }

    void <init>(android.widget.SpellChecker, android.widget.SpellChecker$1)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker r1;
        android.widget.SpellChecker$1 r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.widget.SpellChecker;

        r2 := @parameter1: android.widget.SpellChecker$1;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void <init>(android.widget.SpellChecker)>(r1);

        return;
    }

    private void removeRangeSpan(android.text.Editable)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        java.lang.Object $r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.text.Editable;

        $r2 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>($r2);

        return;
    }

    private void removeSpansAt(android.text.Editable, int, java.lang.Object[])
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object[] r2;
        java.lang.Object r3;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.text.Editable;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object[];

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r3 = r2[i2];

        $i3 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>(r3);

        if $i3 <= i0 goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $i4 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r3);

        if $i4 < i0 goto label2;

        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>(r3);

        goto label2;

     label4:
        return;
    }

    private void setRangeSpan(android.text.Editable, int, int)
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        r1 := @parameter0: android.text.Editable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        interfaceinvoke r1.<android.text.Editable: void setSpan(java.lang.Object,int,int,int)>($r2, i0, i1, 33);

        return;
    }

    public boolean isFinished()
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker $r1;
        android.widget.TextView $r2;
        java.lang.CharSequence $r3;
        java.lang.Object $r4;
        android.text.Editable $r5;
        int $i0;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        $r1 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r2 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r1);

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = (android.text.Editable) $r3;

        $r4 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        $i0 = interfaceinvoke $r5.<android.text.Editable: int getSpanStart(java.lang.Object)>($r4);

        if $i0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void parse()
    {
        android.widget.SpellChecker$SpellParser r0;
        android.text.Editable r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31;
        android.text.style.SpellCheckSpan[] r2, $r45;
        android.text.style.SuggestionSpan[] r3;
        boolean z0, z1, z2, z3, z4, $z5, $z6;
        android.text.style.SpellCheckSpan r4, $r26, $r34;
        android.widget.TextView $r5;
        android.widget.SpellChecker $r6, $r7, $r11, $r14, $r15, $r18, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r39, $r43, $r46, $r47, $r48, $r51;
        java.lang.CharSequence $r8;
        java.lang.Object $r9, $r10, $r50;
        android.text.method.WordIterator $r12, $r13, $r16, $r22, $r24, $r28, $r30, $r32, $r49, $r52, $r53;
        java.lang.Object[] $r17, $r20;
        java.lang.StringBuilder $r35, $r36, $r37, $r38, $r40;
        java.lang.String $r41, $r44;
        int[] $r42;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        $r6 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r5 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r6);

        $r8 = virtualinvoke $r5.<android.widget.TextView: java.lang.CharSequence getText()>();

        r1 = (android.text.Editable) $r8;

        $r7 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $z5 = staticinvoke <android.widget.SpellChecker: boolean access$400(android.widget.SpellChecker)>($r7);

        if $z5 == 0 goto label03;

        $r50 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        $i31 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r50);

        $i30 = -50 + $i31;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i30);

     label01:
        $r9 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        i1 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r9);

        $i17 = 350 + i0;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i17);

        $r11 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r13 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r11);

        virtualinvoke $r13.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>(r1, i0, i2);

        $r14 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r12 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r14);

        i3 = virtualinvoke $r12.<android.text.method.WordIterator: int preceding(int)>(i0);

        if i3 != -1 goto label04;

        $r47 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r53 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r47);

        i4 = virtualinvoke $r53.<android.text.method.WordIterator: int following(int)>(i0);

        if i4 == -1 goto label02;

        $r51 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r52 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r51);

        i3 = virtualinvoke $r52.<android.text.method.WordIterator: int getBeginning(int)>(i4);

     label02:
        if i4 != -1 goto label05;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>(r1);

        return;

     label03:
        $r10 = r0.<android.widget.SpellChecker$SpellParser: java.lang.Object mRange>;

        i0 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r10);

        goto label01;

     label04:
        $r15 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r16 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r15);

        i4 = virtualinvoke $r16.<android.text.method.WordIterator: int getEnd(int)>(i3);

        goto label02;

     label05:
        $i21 = i0 - 1;

        $i18 = i1 + 1;

        $r17 = interfaceinvoke r1.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i21, $i18, class "android/text/style/SpellCheckSpan");

        r2 = (android.text.style.SpellCheckSpan[]) $r17;

        $i19 = i0 - 1;

        $i20 = i1 + 1;

        $r20 = interfaceinvoke r1.<android.text.Editable: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i19, $i20, class "android/text/style/SuggestionSpan");

        r3 = (android.text.style.SuggestionSpan[]) $r20;

        $r19 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        z0 = staticinvoke <android.widget.SpellChecker: boolean access$400(android.widget.SpellChecker)>($r19);

        i5 = 0;

        if z0 == 0 goto label22;

        i12 = i2;

        z1 = 0;

        if i12 >= i1 goto label06;

        z1 = 1;

     label06:
        $r31 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r32 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r31);

        i11 = virtualinvoke $r32.<android.text.method.WordIterator: int preceding(int)>(i2);

        if i11 == -1 goto label09;

        z3 = 1;

     label07:
        if z3 == 0 goto label08;

        $r48 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r49 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r48);

        i11 = virtualinvoke $r49.<android.text.method.WordIterator: int getEnd(int)>(i11);

        if i11 == -1 goto label10;

        z3 = 1;

     label08:
        if z3 != 0 goto label11;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>(r1);

        return;

     label09:
        z3 = 0;

        goto label07;

     label10:
        z3 = 0;

        goto label08;

     label11:
        i13 = i3;

        z4 = 1;

        i14 = 0;

     label12:
        $r33 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $i27 = staticinvoke <android.widget.SpellChecker: int access$600(android.widget.SpellChecker)>($r33);

        if i14 >= $i27 goto label15;

        $r46 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r45 = staticinvoke <android.widget.SpellChecker: android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker)>($r46);

        r4 = $r45[i14];

        $r43 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r42 = staticinvoke <android.widget.SpellChecker: int[] access$800(android.widget.SpellChecker)>($r43);

        $i28 = $r42[i14];

        if $i28 < 0 goto label13;

        $z6 = virtualinvoke r4.<android.text.style.SpellCheckSpan: boolean isSpellCheckInProgress()>();

        if $z6 == 0 goto label14;

     label13:
        i14 = i14 + 1;

        goto label12;

     label14:
        i16 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>(r4);

        i15 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>(r4);

        if i15 < i13 goto label13;

        if i11 < i16 goto label13;

        if i16 > i13 goto label19;

        if i11 > i15 goto label19;

        z4 = 0;

     label15:
        if i11 >= i0 goto label20;

     label16:
        i3 = i11;

     label17:
        if z1 == 0 goto label36;

        if i3 > i1 goto label36;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void setRangeSpan(android.text.Editable,int,int)>(r1, i3, i1);

     label18:
        $r18 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        staticinvoke <android.widget.SpellChecker: void access$1000(android.widget.SpellChecker)>($r18);

        return;

     label19:
        interfaceinvoke r1.<android.text.Editable: void removeSpan(java.lang.Object)>(r4);

        i13 = staticinvoke <java.lang.Math: int min(int,int)>(i16, i13);

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i15, i11);

        goto label13;

     label20:
        if i11 > i13 goto label21;

        $r41 = staticinvoke <android.widget.SpellChecker: java.lang.String access$300()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to spellcheck invalid region, from ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r41, $r44);

        goto label16;

     label21:
        if z4 == 0 goto label16;

        $r39 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        staticinvoke <android.widget.SpellChecker: void access$900(android.widget.SpellChecker,android.text.Editable,int,int)>($r39, r1, i13, i11);

        goto label16;

     label22:
        i6 = i3;

        z1 = 0;

        if i6 > i1 goto label17;

        if i4 < i0 goto label31;

        if i4 <= i3 goto label31;

        if i5 < 50 goto label23;

        z1 = 1;

        goto label17;

     label23:
        if i3 >= i0 goto label24;

        if i4 <= i0 goto label24;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i0, r2);

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i0, r3);

     label24:
        if i3 >= i1 goto label25;

        if i4 <= i1 goto label25;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i1, r2);

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeSpansAt(android.text.Editable,int,java.lang.Object[])>(r1, i1, r3);

     label25:
        z2 = 1;

        if i4 != i0 goto label27;

        i9 = 0;

     label26:
        $i25 = lengthof r2;

        if i9 >= $i25 goto label27;

        $r34 = r2[i9];

        $i26 = interfaceinvoke r1.<android.text.Editable: int getSpanEnd(java.lang.Object)>($r34);

        if $i26 != i0 goto label34;

        z2 = 0;

     label27:
        if i3 != i1 goto label29;

        i10 = 0;

     label28:
        $i23 = lengthof r2;

        if i10 >= $i23 goto label29;

        $r26 = r2[i10];

        $i24 = interfaceinvoke r1.<android.text.Editable: int getSpanStart(java.lang.Object)>($r26);

        if $i24 != i1 goto label35;

        z2 = 0;

     label29:
        if z2 == 0 goto label30;

        $r25 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        staticinvoke <android.widget.SpellChecker: void access$900(android.widget.SpellChecker,android.text.Editable,int,int)>($r25, r1, i3, i4);

     label30:
        i5 = i5 + 1;

     label31:
        i7 = i4;

        $r23 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r22 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r23);

        i4 = virtualinvoke $r22.<android.text.method.WordIterator: int following(int)>(i4);

        if i2 >= i1 goto label33;

        if i4 == -1 goto label32;

        if i4 < i2 goto label33;

     label32:
        $i22 = i7 + 350;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i22);

        $r27 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r28 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r27);

        virtualinvoke $r28.<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>(r1, i7, i2);

        $r29 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r30 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r29);

        i4 = virtualinvoke $r30.<android.text.method.WordIterator: int following(int)>(i7);

     label33:
        i8 = i4;

        z1 = 0;

        if i8 == -1 goto label17;

        $r21 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r24 = staticinvoke <android.widget.SpellChecker: android.text.method.WordIterator access$500(android.widget.SpellChecker)>($r21);

        i3 = virtualinvoke $r24.<android.text.method.WordIterator: int getBeginning(int)>(i4);

        if i3 != -1 goto label22;

        z1 = 0;

        goto label17;

     label34:
        i9 = i9 + 1;

        goto label26;

     label35:
        i10 = i10 + 1;

        goto label28;

     label36:
        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>(r1);

        goto label18;
    }

    public void parse(int, int)
    {
        android.widget.SpellChecker$SpellParser r0;
        int i0, i1, i2, i3;
        android.widget.SpellChecker $r1, $r3;
        android.widget.TextView $r2, $r4;
        java.lang.CharSequence $r5;
        android.text.Editable $r6;
        java.lang.String $r7, $r13;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r2 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r1);

        i2 = virtualinvoke $r2.<android.widget.TextView: int length()>();

        if i1 <= i2 goto label3;

        $r7 = staticinvoke <android.widget.SpellChecker: java.lang.String access$300()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parse invalid region, from ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r13);

        i3 = i2;

     label1:
        if i3 <= i0 goto label2;

        $r3 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r4 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r3);

        $r5 = virtualinvoke $r4.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r6 = (android.text.Editable) $r5;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void setRangeSpan(android.text.Editable,int,int)>($r6, i0, i3);

        virtualinvoke r0.<android.widget.SpellChecker$SpellParser: void parse()>();

     label2:
        return;

     label3:
        i3 = i1;

        goto label1;
    }

    public void stop()
    {
        android.widget.SpellChecker$SpellParser r0;
        android.widget.SpellChecker $r1;
        android.widget.TextView $r2;
        java.lang.CharSequence $r3;
        android.text.Editable $r4;

        r0 := @this: android.widget.SpellChecker$SpellParser;

        $r1 = r0.<android.widget.SpellChecker$SpellParser: android.widget.SpellChecker this$0>;

        $r2 = staticinvoke <android.widget.SpellChecker: android.widget.TextView access$200(android.widget.SpellChecker)>($r1);

        $r3 = virtualinvoke $r2.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r4 = (android.text.Editable) $r3;

        specialinvoke r0.<android.widget.SpellChecker$SpellParser: void removeRangeSpan(android.text.Editable)>($r4);

        return;
    }
}
