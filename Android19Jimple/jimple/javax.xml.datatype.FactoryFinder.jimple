final class javax.xml.datatype.FactoryFinder extends java.lang.Object
{
    private static final java.lang.String CLASS_NAME;
    private static final int DEFAULT_LINE_LENGTH;
    private static java.util.Properties cacheProps;
    private static boolean debug;
    private static boolean firstTime;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.String r0, $r2;
        java.util.Properties $r1;

        <javax.xml.datatype.FactoryFinder: int DEFAULT_LINE_LENGTH> = 80;

        <javax.xml.datatype.FactoryFinder: java.lang.String CLASS_NAME> = "javax.xml.datatype.FactoryFinder";

        z0 = 1;

        <javax.xml.datatype.FactoryFinder: boolean debug> = 0;

        $r1 = new java.util.Properties;

        specialinvoke $r1.<java.util.Properties: void <init>()>();

        <javax.xml.datatype.FactoryFinder: java.util.Properties cacheProps> = $r1;

        <javax.xml.datatype.FactoryFinder: boolean firstTime> = 1;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("jaxp.debug");

        if r0 == null goto label2;

        $r2 = "false";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

     label1:
        <javax.xml.datatype.FactoryFinder: boolean debug> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;

        return;
    }

    private void <init>()
    {
        javax.xml.datatype.FactoryFinder r0;

        r0 := @this: javax.xml.datatype.FactoryFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void debugPrintln(java.lang.String)
    {
        java.lang.String r0, $r5;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintStream $r2;

        r0 := @parameter0: java.lang.String;

        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label1;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("javax.xml.datatype.FactoryFinder:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        return;
    }

    static java.lang.Object find(java.lang.String, java.lang.String) throws javax.xml.datatype.FactoryFinder$ConfigurationError
    {
        java.lang.String r0, r1, r3, r6, r7, r8, $r16, $r17, $r24, $r33, $r35, $r41, $r46;
        java.lang.ClassLoader r2;
        java.lang.Exception r4, $r47;
        java.lang.Object r5, r9, $r22;
        java.util.Properties r10, $r21, $r39;
        java.lang.Throwable r11, $r48;
        java.io.File r12, $r38;
        java.lang.StringBuilder $r13, $r14, $r15, $r18, $r19, $r20, $r23, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r34, $r36, $r37, $r42, $r43, $r44, $r45, $r49, $r50, $r51, $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javax.xml.datatype.FactoryFinder$ConfigurationError $r29;
        java.io.FileInputStream $r40;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.ClassLoader findClassLoader()>();

        r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r0);

        if r3 == null goto label03;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label03;

        $z6 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z6 == 0 goto label01;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the system property ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r46 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r46);

     label01:
        r5 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(r3, r2);

     label02:
        return r5;

     label03:
        r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r16 = <java.io.File: java.lang.String separator>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib");

        $r17 = <java.io.File: java.lang.String separator>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jaxp.properties");

        r7 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = <javax.xml.datatype.FactoryFinder: boolean firstTime>;

        if $z0 == 0 goto label07;

        r10 = <javax.xml.datatype.FactoryFinder: java.util.Properties cacheProps>;

        entermonitor r10;

     label04:
        $z3 = <javax.xml.datatype.FactoryFinder: boolean firstTime>;

        if $z3 == 0 goto label06;

        $r38 = new java.io.File;

        specialinvoke $r38.<java.io.File: void <init>(java.lang.String)>(r7);

        r12 = $r38;

        <javax.xml.datatype.FactoryFinder: boolean firstTime> = 0;

        $z5 = virtualinvoke r12.<java.io.File: boolean exists()>();

        if $z5 == 0 goto label06;

        $z4 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z4 == 0 goto label05;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read properties file ");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r41);

     label05:
        $r39 = <javax.xml.datatype.FactoryFinder: java.util.Properties cacheProps>;

        $r40 = new java.io.FileInputStream;

        specialinvoke $r40.<java.io.FileInputStream: void <init>(java.io.File)>(r12);

        virtualinvoke $r39.<java.util.Properties: void load(java.io.InputStream)>($r40);

     label06:
        exitmonitor r10;

     label07:
        $r21 = <javax.xml.datatype.FactoryFinder: java.util.Properties cacheProps>;

        r8 = virtualinvoke $r21.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r0);

        $z1 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z1 == 0 goto label08;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in $java.home/jaxp.properties");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r35);

     label08:
        if r8 == null goto label15;

     label09:
        r9 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(r8, r2);

     label10:
        return r9;

     label11:
        $r48 := @caughtexception;

        r11 = $r48;

     label12:
        exitmonitor r10;

     label13:
        throw r11;

     label14:
        $r47 := @caughtexception;

        r4 = $r47;

        $z7 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z7 == 0 goto label15;

        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();

     label15:
        r5 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object findJarServiceProvider(java.lang.String)>(r0);

        if r5 != null goto label02;

        if r1 != null goto label16;

        $r29 = new javax.xml.datatype.FactoryFinder$ConfigurationError;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider for ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be found");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<javax.xml.datatype.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r33, null);

        throw $r29;

     label16:
        $z2 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z2 == 0 goto label17;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loaded from fallback value: ");

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r24);

     label17:
        $r22 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(r1, r2);

        return $r22;

        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Exception from label13 to label14 with label14;
    }

    private static java.lang.ClassLoader findClassLoader() throws javax.xml.datatype.FactoryFinder$ConfigurationError
    {
        java.lang.ClassLoader r0;
        java.lang.Thread $r1;
        boolean $z0, $z1;
        java.lang.Class $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r6, $r10;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using context class loader: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r10);

     label1:
        if r0 != null goto label2;

        $r2 = class "javax/xml/datatype/FactoryFinder";

        r0 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z1 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z1 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using the class loader of FactoryFinder: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r6);

     label2:
        return r0;
    }

    private static java.lang.Object findJarServiceProvider(java.lang.String) throws javax.xml.datatype.FactoryFinder$ConfigurationError
    {
        java.lang.String r0, r1, r7, $r15, $r21, $r26;
        java.lang.ClassLoader r2;
        java.io.InputStream r3;
        java.io.BufferedReader r4, $r14, $r28;
        java.lang.Throwable r5, $r31;
        java.lang.StringBuilder $r9, $r10, $r11, $r16, $r18, $r19, $r20, $r22, $r23, $r24, $r25;
        java.lang.Thread $r12;
        boolean $z0, $z1, $z2;
        java.io.InputStreamReader $r13, $r29;
        java.lang.Object $r17;
        java.lang.Class $r27;
        java.io.UnsupportedEncodingException $r30;
        java.io.IOException $r32;

        r0 := @parameter0: java.lang.String;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r2 = virtualinvoke $r12.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r3 = null;

        if r2 == null goto label01;

        r3 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label01:
        if r3 != null goto label02;

        $r27 = class "javax/xml/datatype/FactoryFinder";

        r2 = virtualinvoke $r27.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r3 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

     label02:
        if r3 != null goto label04;

     label03:
        return null;

     label04:
        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label05;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found jar resource=");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using ClassLoader: ");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r26);

     label05:
        $r14 = new java.io.BufferedReader;

        $r13 = new java.io.InputStreamReader;

        specialinvoke $r13.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r3, "UTF-8");

        specialinvoke $r14.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r13, 80);

        r4 = $r14;

     label06:
        r7 = virtualinvoke r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        if r7 == null goto label03;

        $r15 = "";

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 != 0 goto label03;

        $z1 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z1 == 0 goto label08;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found in resource, value=");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r21);

     label08:
        $r17 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)>(r7, r2);

        return $r17;

     label09:
        $r30 := @caughtexception;

        $r28 = new java.io.BufferedReader;

        $r29 = new java.io.InputStreamReader;

        specialinvoke $r29.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r3);

        specialinvoke $r28.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r29, 80);

        r4 = $r28;

        goto label06;

     label10:
        $r32 := @caughtexception;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        return null;

     label11:
        $r31 := @caughtexception;

        r5 = $r31;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r5;

        catch java.io.UnsupportedEncodingException from label05 to label06 with label09;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.lang.Throwable from label06 to label07 with label11;
    }

    static java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader) throws javax.xml.datatype.FactoryFinder$ConfigurationError
    {
        java.lang.String r0, $r11, $r13, $r22, $r27;
        java.lang.ClassLoader r1;
        java.lang.Exception r2, $r14;
        java.lang.ClassNotFoundException r3, $r21;
        java.lang.Class r4, r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r15, $r17, $r18, $r19, $r20, $r23, $r25, $r26, $r28;
        javax.xml.datatype.FactoryFinder$ConfigurationError $r16, $r24;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        if r1 != null goto label4;

     label1:
        r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loaded ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r11 = staticinvoke <javax.xml.datatype.FactoryFinder: java.lang.String which(java.lang.Class)>(r5);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)>($r13);

     label3:
        $r6 = virtualinvoke r5.<java.lang.Class: java.lang.Object newInstance()>();

        return $r6;

     label4:
        r4 = virtualinvoke r1.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label5:
        r5 = r4;

        goto label2;

     label6:
        $r21 := @caughtexception;

        r3 = $r21;

        $r24 = new javax.xml.datatype.FactoryFinder$ConfigurationError;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<javax.xml.datatype.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r27, r3);

        throw $r24;

     label7:
        $r14 := @caughtexception;

        r2 = $r14;

        $r16 = new javax.xml.datatype.FactoryFinder$ConfigurationError;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Provider ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be instantiated: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<javax.xml.datatype.FactoryFinder$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r22, r2);

        throw $r16;

        catch java.lang.ClassNotFoundException from label1 to label2 with label6;
        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.ClassNotFoundException from label2 to label3 with label6;
        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.ClassNotFoundException from label3 to label4 with label6;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
        catch java.lang.Exception from label4 to label5 with label7;
    }

    private static java.lang.String which(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Throwable r1, $r16;
        java.lang.ThreadDeath r2, $r14;
        java.lang.VirtualMachineError r3, $r15;
        java.lang.String r4, $r9, $r10, $r13;
        java.lang.ClassLoader r5;
        java.net.URL r6, r7;
        java.lang.StringBuilder $r8, $r11, $r12;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

     label01:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label02:
        if r5 == null goto label06;

     label03:
        r6 = virtualinvoke r5.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r4);

     label04:
        if r6 == null goto label11;

     label05:
        $r13 = virtualinvoke r6.<java.net.URL: java.lang.String toString()>();

        return $r13;

     label06:
        r7 = staticinvoke <java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>(r4);

     label07:
        r6 = r7;

        goto label04;

     label08:
        $r15 := @caughtexception;

        r3 = $r15;

        throw r3;

     label09:
        $r14 := @caughtexception;

        r2 = $r14;

        throw r2;

     label10:
        $r16 := @caughtexception;

        r1 = $r16;

        $z0 = <javax.xml.datatype.FactoryFinder: boolean debug>;

        if $z0 == 0 goto label11;

        virtualinvoke r1.<java.lang.Throwable: void printStackTrace()>();

     label11:
        return "unknown location";

        catch java.lang.VirtualMachineError from label01 to label02 with label08;
        catch java.lang.ThreadDeath from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.VirtualMachineError from label03 to label04 with label08;
        catch java.lang.ThreadDeath from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.VirtualMachineError from label05 to label06 with label08;
        catch java.lang.ThreadDeath from label05 to label06 with label09;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.VirtualMachineError from label06 to label07 with label08;
        catch java.lang.ThreadDeath from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label10;
    }
}
