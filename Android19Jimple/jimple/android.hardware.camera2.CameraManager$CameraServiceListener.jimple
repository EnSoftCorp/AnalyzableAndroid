class android.hardware.camera2.CameraManager$CameraServiceListener extends android.hardware.ICameraServiceListener$Stub
{
    public static final int STATUS_ENUMERATING;
    public static final int STATUS_NOT_AVAILABLE;
    public static final int STATUS_NOT_PRESENT;
    public static final int STATUS_PRESENT;
    private static final java.lang.String TAG;
    private final android.util.ArrayMap mDeviceStatus;
    final android.hardware.camera2.CameraManager this$0;

    private void <init>(android.hardware.camera2.CameraManager)
    {
        android.hardware.camera2.CameraManager$CameraServiceListener r0;
        android.hardware.camera2.CameraManager r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.hardware.camera2.CameraManager$CameraServiceListener;

        r1 := @parameter0: android.hardware.camera2.CameraManager;

        r0.<android.hardware.camera2.CameraManager$CameraServiceListener: android.hardware.camera2.CameraManager this$0> = r1;

        specialinvoke r0.<android.hardware.ICameraServiceListener$Stub: void <init>()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.hardware.camera2.CameraManager$CameraServiceListener: android.util.ArrayMap mDeviceStatus> = $r2;

        return;
    }

    void <init>(android.hardware.camera2.CameraManager, android.hardware.camera2.CameraManager$1)
    {
        android.hardware.camera2.CameraManager$CameraServiceListener r0;
        android.hardware.camera2.CameraManager r1;
        android.hardware.camera2.CameraManager$1 r2;

        r0 := @this: android.hardware.camera2.CameraManager$CameraServiceListener;

        r1 := @parameter0: android.hardware.camera2.CameraManager;

        r2 := @parameter1: android.hardware.camera2.CameraManager$1;

        specialinvoke r0.<android.hardware.camera2.CameraManager$CameraServiceListener: void <init>(android.hardware.camera2.CameraManager)>(r1);

        return;
    }

    private boolean isAvailable(int)
    {
        android.hardware.camera2.CameraManager$CameraServiceListener r0;
        int i0;

        r0 := @this: android.hardware.camera2.CameraManager$CameraServiceListener;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean validStatus(int)
    {
        android.hardware.camera2.CameraManager$CameraServiceListener r0;
        int i0;

        r0 := @this: android.hardware.camera2.CameraManager$CameraServiceListener;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case -2147483648: goto label2;
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.camera2.CameraManager$CameraServiceListener r0;

        r0 := @this: android.hardware.camera2.CameraManager$CameraServiceListener;

        return r0;
    }

    public void onStatusChanged(int, int) throws android.os.RemoteException
    {
        android.hardware.camera2.CameraManager$CameraServiceListener r0;
        int i0, i1, i2, i3, $i5, $i6;
        java.lang.Object r1, $r15, $r24, $r26;
        java.lang.Throwable r2, $r34;
        java.lang.Object[] r3, r8, r9, r10;
        java.lang.String r4, $r14, $r30, $r33, $r36;
        java.lang.Integer r5, $r12, $r13, $r18, $r31, $r32, $r35;
        android.os.Handler r6;
        android.hardware.camera2.CameraManager$AvailabilityListener r7;
        android.hardware.camera2.CameraManager $r11, $r16, $r19, $r21;
        boolean $z0, $z2, $z3, $z5, $z6, $z7;
        android.util.ArrayMap $r17, $r20, $r22, $r23;
        android.hardware.camera2.CameraManager$CameraServiceListener$2 $r25;
        android.hardware.camera2.CameraManager$CameraServiceListener$1 $r27;
        java.lang.Boolean $r28, $r29;

        r0 := @this: android.hardware.camera2.CameraManager$CameraServiceListener;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r11 = r0.<android.hardware.camera2.CameraManager$CameraServiceListener: android.hardware.camera2.CameraManager this$0>;

        r1 = staticinvoke <android.hardware.camera2.CameraManager: java.lang.Object access$100(android.hardware.camera2.CameraManager)>($r11);

        entermonitor r1;

     label01:
        r3 = newarray (java.lang.Object)[2];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r3[0] = $r12;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r3[1] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Camera id %d has status changed to 0x%x", r3);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraServiceListener", $r14);

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1);

        $z0 = specialinvoke r0.<android.hardware.camera2.CameraManager$CameraServiceListener: boolean validStatus(int)>(i0);

        if $z0 != 0 goto label03;

        r10 = newarray (java.lang.Object)[2];

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r10[0] = $r31;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r10[1] = $r35;

        $r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Ignoring invalid device %d status 0x%x", r10);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CameraServiceListener", $r36);

        exitmonitor r1;

     label02:
        return;

     label03:
        $r17 = r0.<android.hardware.camera2.CameraManager$CameraServiceListener: android.util.ArrayMap mDeviceStatus>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r15 = virtualinvoke $r17.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r18);

        r5 = (java.lang.Integer) $r15;

     label04:
        if r5 == null goto label10;

     label05:
        $i6 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        if $i6 != i0 goto label10;

        r9 = newarray (java.lang.Object)[1];

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r9[0] = $r32;

        $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Device status changed to 0x%x, which is what it already was", r9);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraServiceListener", $r33);

        exitmonitor r1;

     label06:
        return;

     label07:
        $r34 := @caughtexception;

        r2 = $r34;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        if r5 == null goto label13;

     label11:
        $z3 = specialinvoke r0.<android.hardware.camera2.CameraManager$CameraServiceListener: boolean isAvailable(int)>(i0);

        $i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $z6 = specialinvoke r0.<android.hardware.camera2.CameraManager$CameraServiceListener: boolean isAvailable(int)>($i5);

        if $z3 != $z6 goto label13;

        r8 = newarray (java.lang.Object)[2];

        $z5 = specialinvoke r0.<android.hardware.camera2.CameraManager$CameraServiceListener: boolean isAvailable(int)>(i0);

        $r28 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        r8[0] = $r28;

        $z7 = specialinvoke r0.<android.hardware.camera2.CameraManager$CameraServiceListener: boolean isAvailable(int)>(i0);

        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        r8[1] = $r29;

        $r30 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Device status was previously available (%d),  and is now again available (%d)so no new client visible update will be sent", r8);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraServiceListener", $r30);

        exitmonitor r1;

     label12:
        return;

     label13:
        $r16 = r0.<android.hardware.camera2.CameraManager$CameraServiceListener: android.hardware.camera2.CameraManager this$0>;

        $r20 = staticinvoke <android.hardware.camera2.CameraManager: android.util.ArrayMap access$200(android.hardware.camera2.CameraManager)>($r16);

        i2 = virtualinvoke $r20.<android.util.ArrayMap: int size()>();

     label14:
        i3 = 0;

     label15:
        if i3 >= i2 goto label20;

     label16:
        $r19 = r0.<android.hardware.camera2.CameraManager$CameraServiceListener: android.hardware.camera2.CameraManager this$0>;

        $r23 = staticinvoke <android.hardware.camera2.CameraManager: android.util.ArrayMap access$200(android.hardware.camera2.CameraManager)>($r19);

        $r24 = virtualinvoke $r23.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r6 = (android.os.Handler) $r24;

        $r21 = r0.<android.hardware.camera2.CameraManager$CameraServiceListener: android.hardware.camera2.CameraManager this$0>;

        $r22 = staticinvoke <android.hardware.camera2.CameraManager: android.util.ArrayMap access$200(android.hardware.camera2.CameraManager)>($r21);

        $r26 = virtualinvoke $r22.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        r7 = (android.hardware.camera2.CameraManager$AvailabilityListener) $r26;

        $z2 = specialinvoke r0.<android.hardware.camera2.CameraManager$CameraServiceListener: boolean isAvailable(int)>(i0);

        if $z2 == 0 goto label18;

        $r27 = new android.hardware.camera2.CameraManager$CameraServiceListener$1;

        specialinvoke $r27.<android.hardware.camera2.CameraManager$CameraServiceListener$1: void <init>(android.hardware.camera2.CameraManager$CameraServiceListener,android.hardware.camera2.CameraManager$AvailabilityListener,java.lang.String)>(r0, r7, r4);

        virtualinvoke r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r27);

     label17:
        goto label22;

     label18:
        $r25 = new android.hardware.camera2.CameraManager$CameraServiceListener$2;

        specialinvoke $r25.<android.hardware.camera2.CameraManager$CameraServiceListener$2: void <init>(android.hardware.camera2.CameraManager$CameraServiceListener,android.hardware.camera2.CameraManager$AvailabilityListener,java.lang.String)>(r0, r7, r4);

        virtualinvoke r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r25);

     label19:
        goto label22;

     label20:
        exitmonitor r1;

     label21:
        return;

     label22:
        i3 = i3 + 1;

        goto label15;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.Throwable from label16 to label17 with label07;
        catch java.lang.Throwable from label18 to label19 with label07;
        catch java.lang.Throwable from label20 to label21 with label07;
    }

    public static void <clinit>()
    {
        <android.hardware.camera2.CameraManager$CameraServiceListener: java.lang.String TAG> = "CameraServiceListener";

        <android.hardware.camera2.CameraManager$CameraServiceListener: int STATUS_PRESENT> = 1;

        <android.hardware.camera2.CameraManager$CameraServiceListener: int STATUS_NOT_PRESENT> = 0;

        <android.hardware.camera2.CameraManager$CameraServiceListener: int STATUS_NOT_AVAILABLE> = -2147483648;

        <android.hardware.camera2.CameraManager$CameraServiceListener: int STATUS_ENUMERATING> = 2;

        return;
    }
}
