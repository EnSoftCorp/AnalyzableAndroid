public class com.android.org.conscrypt.DigitalSignature extends java.lang.Object
{
    private final javax.crypto.Cipher cipher;
    private final java.security.MessageDigest md5;
    private byte[] md5_hash;
    private final java.security.MessageDigest sha;
    private byte[] sha_hash;
    private final java.security.Signature signature;

    public void <init>(java.lang.String)
    {
        com.android.org.conscrypt.DigitalSignature r0;
        java.lang.String r1, $r5, $r6;
        javax.crypto.NoSuchPaddingException r2, $r12;
        java.security.NoSuchAlgorithmException r3, $r10;
        java.security.MessageDigest $r4, $r8;
        boolean $z0, $z1;
        java.security.Signature $r7;
        javax.crypto.Cipher $r9;
        java.lang.AssertionError $r11, $r13;

        r0 := @this: com.android.org.conscrypt.DigitalSignature;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest sha> = $r4;

        $r5 = "RSA";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest md5> = $r8;

        $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/ECB/PKCS1Padding");

        r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher> = $r9;

        r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature> = null;

     label2:
        return;

     label3:
        $r6 = "DSA";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label6;

        $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>("NONEwithDSA");

        r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature> = $r7;

        r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher> = null;

        r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest md5> = null;

     label4:
        return;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>(r3);

        throw $r11;

     label6:
        r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher> = null;

        r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature> = null;

        r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest md5> = null;

     label7:
        return;

     label8:
        $r12 := @caughtexception;

        r2 = $r12;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2);

        throw $r13;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label8;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch javax.crypto.NoSuchPaddingException from label3 to label4 with label8;
        catch java.security.NoSuchAlgorithmException from label6 to label7 with label5;
        catch javax.crypto.NoSuchPaddingException from label6 to label7 with label8;
    }

    public void init(java.security.PrivateKey)
    {
        com.android.org.conscrypt.DigitalSignature r0;
        java.security.PrivateKey r1;
        java.security.InvalidKeyException r2, $r7;
        java.security.Signature $r3, $r6;
        javax.crypto.Cipher $r4, $r5;
        com.android.org.conscrypt.AlertException $r8;
        javax.net.ssl.SSLException $r9;

        r0 := @this: com.android.org.conscrypt.DigitalSignature;

        r1 := @parameter0: java.security.PrivateKey;

     label1:
        $r3 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        if $r3 == null goto label3;

        $r6 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        virtualinvoke $r6.<java.security.Signature: void initSign(java.security.PrivateKey)>(r1);

     label2:
        return;

     label3:
        $r4 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r4 == null goto label6;

        $r5 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, r1);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new com.android.org.conscrypt.AlertException;

        $r9 = new javax.net.ssl.SSLException;

        specialinvoke $r9.<javax.net.ssl.SSLException: void <init>(java.lang.String,java.lang.Throwable)>("init - invalid private key", r2);

        specialinvoke $r8.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(42, $r9);

        throw $r8;

     label6:
        return;

        catch java.security.InvalidKeyException from label1 to label2 with label5;
        catch java.security.InvalidKeyException from label3 to label4 with label5;
    }

    public void init(java.security.cert.Certificate)
    {
        com.android.org.conscrypt.DigitalSignature r0;
        java.security.cert.Certificate r1;
        java.security.InvalidKeyException r2, $r7;
        java.security.Signature $r3, $r6;
        javax.crypto.Cipher $r4, $r5;
        com.android.org.conscrypt.AlertException $r8;
        javax.net.ssl.SSLException $r9;

        r0 := @this: com.android.org.conscrypt.DigitalSignature;

        r1 := @parameter0: java.security.cert.Certificate;

     label1:
        $r3 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        if $r3 == null goto label3;

        $r6 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        virtualinvoke $r6.<java.security.Signature: void initVerify(java.security.cert.Certificate)>(r1);

     label2:
        return;

     label3:
        $r4 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r4 == null goto label6;

        $r5 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.cert.Certificate)>(2, r1);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new com.android.org.conscrypt.AlertException;

        $r9 = new javax.net.ssl.SSLException;

        specialinvoke $r9.<javax.net.ssl.SSLException: void <init>(java.lang.String,java.lang.Throwable)>("init - invalid certificate", r2);

        specialinvoke $r8.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(42, $r9);

        throw $r8;

     label6:
        return;

        catch java.security.InvalidKeyException from label1 to label2 with label5;
        catch java.security.InvalidKeyException from label3 to label4 with label5;
    }

    public void setMD5(byte[])
    {
        com.android.org.conscrypt.DigitalSignature r0;
        byte[] r1;

        r0 := @this: com.android.org.conscrypt.DigitalSignature;

        r1 := @parameter0: byte[];

        r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash> = r1;

        return;
    }

    public void setSHA(byte[])
    {
        com.android.org.conscrypt.DigitalSignature r0;
        byte[] r1;

        r0 := @this: com.android.org.conscrypt.DigitalSignature;

        r1 := @parameter0: byte[];

        r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash> = r1;

        return;
    }

    public byte[] sign()
    {
        com.android.org.conscrypt.DigitalSignature r0;
        byte[] r5, $r7, $r9, $r13, $r15, $r19, $r20, $r22, $r24, $r25, $r26, $r31, $r32, $r34, $r35, $r37, $r39, $r41, $r43, $r44, $r46;
        java.security.MessageDigest $r6, $r8, $r27, $r38;
        java.security.Signature $r10, $r14, $r17, $r23, $r29, $r36;
        javax.crypto.Cipher $r11, $r12, $r16, $r18, $r28, $r33;
        int $i0, $i3;
        java.security.DigestException $r40;
        java.security.SignatureException $r42;
        javax.crypto.BadPaddingException $r45;
        javax.crypto.IllegalBlockSizeException $r47;

        r0 := @this: com.android.org.conscrypt.DigitalSignature;

     label01:
        $r6 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest md5>;

        if $r6 == null goto label02;

        $r37 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        if $r37 != null goto label02;

        $r34 = newarray (byte)[16];

        r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash> = $r34;

        $r38 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest md5>;

        $r39 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        $r35 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        $i3 = lengthof $r35;

        virtualinvoke $r38.<java.security.MessageDigest: int digest(byte[],int,int)>($r39, 0, $i3);

     label02:
        $r7 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        if $r7 == null goto label03;

        $r29 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        if $r29 == null goto label06;

        $r36 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        $r31 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        virtualinvoke $r36.<java.security.Signature: void update(byte[])>($r31);

     label03:
        $r8 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest sha>;

        if $r8 == null goto label04;

        $r22 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        if $r22 != null goto label04;

        $r25 = newarray (byte)[20];

        r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash> = $r25;

        $r27 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest sha>;

        $r26 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        $r24 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        $i0 = lengthof $r24;

        virtualinvoke $r27.<java.security.MessageDigest: int digest(byte[],int,int)>($r26, 0, $i0);

     label04:
        $r9 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        if $r9 == null goto label05;

        $r17 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        if $r17 == null goto label09;

        $r23 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        $r20 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        virtualinvoke $r23.<java.security.Signature: void update(byte[])>($r20);

     label05:
        $r10 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        if $r10 == null goto label12;

        $r14 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        $r15 = virtualinvoke $r14.<java.security.Signature: byte[] sign()>();

        return $r15;

     label06:
        $r28 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r28 == null goto label03;

        $r33 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        $r32 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        virtualinvoke $r33.<javax.crypto.Cipher: byte[] update(byte[])>($r32);

     label07:
        goto label03;

     label08:
        $r40 := @caughtexception;

        $r41 = <com.android.org.conscrypt.util.EmptyArray: byte[] BYTE>;

        return $r41;

     label09:
        $r16 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r16 == null goto label05;

        $r18 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        $r19 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        virtualinvoke $r18.<javax.crypto.Cipher: byte[] update(byte[])>($r19);

     label10:
        goto label05;

     label11:
        $r42 := @caughtexception;

        $r43 = <com.android.org.conscrypt.util.EmptyArray: byte[] BYTE>;

        return $r43;

     label12:
        $r11 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r11 == null goto label13;

        $r12 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        $r13 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal()>();

        return $r13;

     label13:
        r5 = <com.android.org.conscrypt.util.EmptyArray: byte[] BYTE>;

     label14:
        return r5;

     label15:
        $r45 := @caughtexception;

        $r44 = <com.android.org.conscrypt.util.EmptyArray: byte[] BYTE>;

        return $r44;

     label16:
        $r47 := @caughtexception;

        $r46 = <com.android.org.conscrypt.util.EmptyArray: byte[] BYTE>;

        return $r46;

        catch java.security.DigestException from label01 to label02 with label08;
        catch java.security.SignatureException from label01 to label02 with label11;
        catch javax.crypto.BadPaddingException from label01 to label02 with label15;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label16;
        catch java.security.DigestException from label02 to label03 with label08;
        catch java.security.SignatureException from label02 to label03 with label11;
        catch javax.crypto.BadPaddingException from label02 to label03 with label15;
        catch javax.crypto.IllegalBlockSizeException from label02 to label03 with label16;
        catch java.security.DigestException from label03 to label04 with label08;
        catch java.security.SignatureException from label03 to label04 with label11;
        catch javax.crypto.BadPaddingException from label03 to label04 with label15;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label16;
        catch java.security.DigestException from label04 to label05 with label08;
        catch java.security.SignatureException from label04 to label05 with label11;
        catch javax.crypto.BadPaddingException from label04 to label05 with label15;
        catch javax.crypto.IllegalBlockSizeException from label04 to label05 with label16;
        catch java.security.DigestException from label05 to label06 with label08;
        catch java.security.SignatureException from label05 to label06 with label11;
        catch javax.crypto.BadPaddingException from label05 to label06 with label15;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label16;
        catch java.security.DigestException from label06 to label07 with label08;
        catch java.security.SignatureException from label06 to label07 with label11;
        catch javax.crypto.BadPaddingException from label06 to label07 with label15;
        catch javax.crypto.IllegalBlockSizeException from label06 to label07 with label16;
        catch java.security.DigestException from label09 to label10 with label08;
        catch java.security.SignatureException from label09 to label10 with label11;
        catch javax.crypto.BadPaddingException from label09 to label10 with label15;
        catch javax.crypto.IllegalBlockSizeException from label09 to label10 with label16;
        catch java.security.DigestException from label12 to label13 with label08;
        catch java.security.SignatureException from label12 to label13 with label11;
        catch javax.crypto.BadPaddingException from label12 to label13 with label15;
        catch javax.crypto.IllegalBlockSizeException from label12 to label13 with label16;
        catch java.security.DigestException from label13 to label14 with label08;
        catch java.security.SignatureException from label13 to label14 with label11;
        catch javax.crypto.BadPaddingException from label13 to label14 with label15;
        catch javax.crypto.IllegalBlockSizeException from label13 to label14 with label16;
    }

    public void update(byte[])
    {
        com.android.org.conscrypt.DigitalSignature r0;
        byte[] r1;
        java.security.MessageDigest $r2, $r3, $r4, $r5;

        r0 := @this: com.android.org.conscrypt.DigitalSignature;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest sha>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest sha>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>(r1);

     label1:
        $r3 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest md5>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest md5>;

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>(r1);

     label2:
        return;
    }

    public boolean verifySignature(byte[])
    {
        com.android.org.conscrypt.DigitalSignature r0;
        byte[] r1, r4, r5, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r27, $r30, $r35;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0, z1, $z2;
        java.security.Signature $r7, $r29, $r31;
        javax.crypto.Cipher $r8, $r9;
        java.security.MessageDigest $r10, $r11, $r21, $r28, $r34;
        java.security.SignatureException $r32;
        javax.crypto.IllegalBlockSizeException $r33;
        javax.crypto.BadPaddingException $r36;

        r0 := @this: com.android.org.conscrypt.DigitalSignature;

        r1 := @parameter0: byte[];

        $r7 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        if $r7 == null goto label06;

     label01:
        $r26 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        if $r26 != null goto label02;

        $r34 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest sha>;

        $r35 = virtualinvoke $r34.<java.security.MessageDigest: byte[] digest()>();

        r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash> = $r35;

     label02:
        $r31 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        $r30 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        virtualinvoke $r31.<java.security.Signature: void update(byte[])>($r30);

        $r29 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.Signature signature>;

        z1 = virtualinvoke $r29.<java.security.Signature: boolean verify(byte[])>(r1);

     label03:
        z0 = z1;

     label04:
        return z0;

     label05:
        $r32 := @caughtexception;

        return 0;

     label06:
        $r8 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        if $r8 == null goto label16;

     label07:
        $r9 = r0.<com.android.org.conscrypt.DigitalSignature: javax.crypto.Cipher cipher>;

        r4 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1);

     label08:
        $r10 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest sha>;

        if $r10 == null goto label09;

        $r27 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        if $r27 != null goto label09;

        $r28 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest sha>;

        $r25 = virtualinvoke $r28.<java.security.MessageDigest: byte[] digest()>();

        r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash> = $r25;

     label09:
        $r11 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest md5>;

        if $r11 == null goto label10;

        $r24 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        if $r24 != null goto label10;

        $r21 = r0.<com.android.org.conscrypt.DigitalSignature: java.security.MessageDigest md5>;

        $r22 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest()>();

        r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash> = $r22;

     label10:
        $r13 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        if $r13 == null goto label14;

        $r14 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        if $r14 == null goto label14;

        $r16 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        $i1 = lengthof $r16;

        $r15 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        $i2 = lengthof $r15;

        $i3 = $i1 + $i2;

        r5 = newarray (byte)[$i3];

        $r18 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        $r17 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        $i4 = lengthof $r17;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r18, 0, r5, 0, $i4);

        $r23 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        $r20 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        $i5 = lengthof $r20;

        $r19 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        $i6 = lengthof $r19;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, 0, r5, $i5, $i6);

     label11:
        $z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, r5);

        return $z2;

     label12:
        $r33 := @caughtexception;

        return 0;

     label13:
        $r36 := @caughtexception;

        return 0;

     label14:
        $r12 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        if $r12 == null goto label15;

        r5 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] md5_hash>;

        goto label11;

     label15:
        r5 = r0.<com.android.org.conscrypt.DigitalSignature: byte[] sha_hash>;

        goto label11;

     label16:
        if r1 == null goto label17;

        i0 = lengthof r1;

        z0 = 0;

        if i0 != 0 goto label04;

     label17:
        return 1;

        catch java.security.SignatureException from label01 to label02 with label05;
        catch java.security.SignatureException from label02 to label03 with label05;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label12;
        catch javax.crypto.BadPaddingException from label07 to label08 with label13;
    }
}
