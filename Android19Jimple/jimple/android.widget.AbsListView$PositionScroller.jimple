class android.widget.AbsListView$PositionScroller extends java.lang.Object implements java.lang.Runnable
{
    private static final int MOVE_DOWN_BOUND;
    private static final int MOVE_DOWN_POS;
    private static final int MOVE_OFFSET;
    private static final int MOVE_UP_BOUND;
    private static final int MOVE_UP_POS;
    private static final int SCROLL_DURATION;
    private int mBoundPos;
    private final int mExtraScroll;
    private int mLastSeenPos;
    private int mMode;
    private int mOffsetFromTop;
    private int mScrollDuration;
    private int mTargetPos;
    final android.widget.AbsListView this$0;

    void <init>(android.widget.AbsListView)
    {
        android.widget.AbsListView$PositionScroller r0;
        android.widget.AbsListView r1;
        android.content.Context $r2;
        android.view.ViewConfiguration $r3;
        int $i0;

        r0 := @this: android.widget.AbsListView$PositionScroller;

        r1 := @parameter0: android.widget.AbsListView;

        r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.widget.AbsListView: android.content.Context access$3200(android.widget.AbsListView)>(r1);

        $r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke $r3.<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>();

        r0.<android.widget.AbsListView$PositionScroller: int mExtraScroll> = $i0;

        return;
    }

    public void run()
    {
        android.widget.AbsListView$PositionScroller r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        android.view.View r1, r2, r3, r4, $r8;
        android.widget.AbsListView $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r45, $r48, $r49, $r50, $r51, $r52, $r53;
        android.graphics.Rect $r22, $r30, $r40, $r44, $r46, $r47;

        r0 := @this: android.widget.AbsListView$PositionScroller;

        $r5 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i0 = virtualinvoke $r5.<android.widget.AbsListView: int getHeight()>();

        $r6 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i1 = $r6.<android.widget.AbsListView: int mFirstPosition>;

        $i33 = r0.<android.widget.AbsListView$PositionScroller: int mMode>;

        tableswitch($i33)
        {
            case 1: goto label02;
            case 2: goto label09;
            case 3: goto label06;
            case 4: goto label13;
            case 5: goto label16;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $r39 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i75 = virtualinvoke $r39.<android.widget.AbsListView: int getChildCount()>();

        i28 = -1 + $i75;

        i29 = i1 + i28;

        if i28 < 0 goto label01;

        $i76 = r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos>;

        if i29 != $i76 goto label03;

        $r53 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r53.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label03:
        $r50 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        r4 = virtualinvoke $r50.<android.widget.AbsListView: android.view.View getChildAt(int)>(i28);

        i27 = virtualinvoke r4.<android.view.View: int getHeight()>();

        $i83 = virtualinvoke r4.<android.view.View: int getTop()>();

        i31 = i0 - $i83;

        $r52 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i85 = $r52.<android.widget.AbsListView: int mItemCount>;

        $i84 = -1 + $i85;

        if i29 >= $i84 goto label05;

        $r48 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r47 = $r48.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i87 = $r47.<android.graphics.Rect: int bottom>;

        $i86 = r0.<android.widget.AbsListView$PositionScroller: int mExtraScroll>;

        i32 = staticinvoke <java.lang.Math: int max(int,int)>($i87, $i86);

     label04:
        $i81 = i27 - i31;

        i30 = i32 + $i81;

        $r45 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i80 = r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration>;

        virtualinvoke $r45.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>(i30, $i80, 1);

        r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos> = i29;

        $i82 = r0.<android.widget.AbsListView$PositionScroller: int mTargetPos>;

        if i29 >= $i82 goto label01;

        $r49 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r49.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label05:
        $r51 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r46 = $r51.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i32 = $r46.<android.graphics.Rect: int bottom>;

        goto label04;

     label06:
        $r29 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i23 = virtualinvoke $r29.<android.widget.AbsListView: int getChildCount()>();

        $i62 = r0.<android.widget.AbsListView$PositionScroller: int mBoundPos>;

        if i1 == $i62 goto label01;

        if i23 <= 1 goto label01;

        $i60 = i1 + i23;

        $r28 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i61 = $r28.<android.widget.AbsListView: int mItemCount>;

        if $i60 >= $i61 goto label01;

        i22 = i1 + 1;

        $i59 = r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos>;

        if i22 != $i59 goto label07;

        $r33 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r33.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label07:
        $r27 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        r3 = virtualinvoke $r27.<android.widget.AbsListView: android.view.View getChildAt(int)>(1);

        i24 = virtualinvoke r3.<android.view.View: int getHeight()>();

        i26 = virtualinvoke r3.<android.view.View: int getTop()>();

        $r31 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r30 = $r31.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i63 = $r30.<android.graphics.Rect: int bottom>;

        $i64 = r0.<android.widget.AbsListView$PositionScroller: int mExtraScroll>;

        i25 = staticinvoke <java.lang.Math: int max(int,int)>($i63, $i64);

        $i68 = r0.<android.widget.AbsListView$PositionScroller: int mBoundPos>;

        if i22 >= $i68 goto label08;

        $r37 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i71 = i24 + i26;

        $i70 = $i71 - i25;

        $i72 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i70);

        $i65 = r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration>;

        virtualinvoke $r37.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>($i72, $i65, 1);

        r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos> = i22;

        $r32 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r32.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label08:
        if i26 <= i25 goto label01;

        $r36 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i69 = i26 - i25;

        $i67 = r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration>;

        virtualinvoke $r36.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>($i69, $i67, 1);

        return;

     label09:
        $i66 = r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos>;

        if i1 != $i66 goto label10;

        $r38 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r38.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label10:
        $r34 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        r2 = virtualinvoke $r34.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        if r2 == null goto label01;

        i21 = virtualinvoke r2.<android.view.View: int getTop()>();

        if i1 <= 0 goto label12;

        $i74 = r0.<android.widget.AbsListView$PositionScroller: int mExtraScroll>;

        $r43 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r44 = $r43.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i73 = $r44.<android.graphics.Rect: int top>;

        i20 = staticinvoke <java.lang.Math: int max(int,int)>($i74, $i73);

     label11:
        $r41 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i78 = i21 - i20;

        $i77 = r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration>;

        virtualinvoke $r41.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>($i78, $i77, 1);

        r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos> = i1;

        $i79 = r0.<android.widget.AbsListView$PositionScroller: int mTargetPos>;

        if i1 <= $i79 goto label01;

        $r42 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r42.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label12:
        $r35 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r40 = $r35.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i20 = $r40.<android.graphics.Rect: int top>;

        goto label11;

     label13:
        $r20 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i49 = virtualinvoke $r20.<android.widget.AbsListView: int getChildCount()>();

        i12 = -2 + $i49;

        if i12 < 0 goto label01;

        i13 = i1 + i12;

        $i48 = r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos>;

        if i13 != $i48 goto label14;

        $r24 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r24.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label14:
        $r19 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        r1 = virtualinvoke $r19.<android.widget.AbsListView: android.view.View getChildAt(int)>(i12);

        i14 = virtualinvoke r1.<android.view.View: int getHeight()>();

        i16 = virtualinvoke r1.<android.view.View: int getTop()>();

        i15 = i0 - i16;

        $r21 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r22 = $r21.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i54 = $r22.<android.graphics.Rect: int top>;

        $i53 = r0.<android.widget.AbsListView$PositionScroller: int mExtraScroll>;

        i18 = staticinvoke <java.lang.Math: int max(int,int)>($i54, $i53);

        r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos> = i13;

        $i52 = r0.<android.widget.AbsListView$PositionScroller: int mBoundPos>;

        if i13 <= $i52 goto label15;

        $r25 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i56 = i15 - i18;

        $i55 = neg $i56;

        $i57 = r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration>;

        virtualinvoke $r25.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>($i55, $i57, 1);

        $r23 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r23.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label15:
        i17 = i0 - i18;

        i19 = i16 + i14;

        if i17 <= i19 goto label01;

        $r26 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i50 = i17 - i19;

        $i58 = neg $i50;

        $i51 = r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration>;

        virtualinvoke $r26.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>($i58, $i51, 1);

        return;

     label16:
        $i34 = r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos>;

        if $i34 != i1 goto label17;

        $r18 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r18.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label17:
        r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos> = i1;

        $r7 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i2 = virtualinvoke $r7.<android.widget.AbsListView: int getChildCount()>();

        i3 = r0.<android.widget.AbsListView$PositionScroller: int mTargetPos>;

        $i35 = i1 + i2;

        i4 = -1 + $i35;

        if i3 >= i1 goto label19;

        $i46 = i1 - i3;

        i5 = 1 + $i46;

     label18:
        $f4 = (float) i5;

        $f1 = (float) i2;

        $f3 = $f4 / $f1;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        f0 = staticinvoke <java.lang.Math: float min(float,float)>($f2, 1.0F);

        if i3 >= i1 goto label20;

        $r13 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i44 = virtualinvoke $r13.<android.widget.AbsListView: int getHeight()>();

        $i45 = neg $i44;

        $f12 = (float) $i45;

        $f15 = f0 * $f12;

        i10 = (int) $f15;

        $i47 = r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration>;

        $f17 = (float) $i47;

        $f16 = f0 * $f17;

        i11 = (int) $f16;

        $r17 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r17.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>(i10, i11, 1);

        $r16 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r16.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label19:
        i5 = 0;

        if i3 <= i4 goto label18;

        i5 = i3 - i4;

        goto label18;

     label20:
        if i3 <= i4 goto label21;

        $r12 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i42 = virtualinvoke $r12.<android.widget.AbsListView: int getHeight()>();

        $f8 = (float) $i42;

        $f9 = f0 * $f8;

        i8 = (int) $f9;

        $i43 = r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration>;

        $f13 = (float) $i43;

        $f14 = f0 * $f13;

        i9 = (int) $f14;

        $r14 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r14.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>(i8, i9, 1);

        $r15 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r15.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label21:
        $r9 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i37 = i3 - i1;

        $r8 = virtualinvoke $r9.<android.widget.AbsListView: android.view.View getChildAt(int)>($i37);

        $i36 = virtualinvoke $r8.<android.view.View: int getTop()>();

        $i40 = r0.<android.widget.AbsListView$PositionScroller: int mOffsetFromTop>;

        i6 = $i36 - $i40;

        $i39 = r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration>;

        $f5 = (float) $i39;

        $i38 = staticinvoke <java.lang.Math: int abs(int)>(i6);

        $f7 = (float) $i38;

        $r10 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i41 = virtualinvoke $r10.<android.widget.AbsListView: int getHeight()>();

        $f6 = (float) $i41;

        $f10 = $f7 / $f6;

        $f11 = $f5 * $f10;

        i7 = (int) $f11;

        $r11 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r11.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>(i6, i7, 1);

        return;
    }

    void scrollToVisible(int, int, int)
    {
        android.widget.AbsListView$PositionScroller r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23;
        android.view.View r1, r2;
        android.widget.AbsListView $r3, $r4, $r6, $r7, $r9, $r19, $r20, $r21;
        android.graphics.Rect $r5, $r8;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18;
        java.lang.String $r16;

        r0 := @this: android.widget.AbsListView$PositionScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r3 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i3 = $r3.<android.widget.AbsListView: int mFirstPosition>;

        $r4 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i14 = virtualinvoke $r4.<android.widget.AbsListView: int getChildCount()>();

        $i13 = i3 + $i14;

        i4 = -1 + $i13;

        $r6 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r5 = $r6.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i5 = $r5.<android.graphics.Rect: int top>;

        $r7 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i15 = virtualinvoke $r7.<android.widget.AbsListView: int getHeight()>();

        $r9 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r8 = $r9.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i16 = $r8.<android.graphics.Rect: int bottom>;

        i6 = $i15 - $i16;

        if i0 < i3 goto label1;

        if i0 <= i4 goto label2;

     label1:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scrollToVisible called with targetPos ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not visible [");

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AbsListView", $r16);

     label2:
        if i1 < i3 goto label3;

        if i1 <= i4 goto label4;

     label3:
        i1 = -1;

     label4:
        $r19 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i18 = i0 - i3;

        r1 = virtualinvoke $r19.<android.widget.AbsListView: android.view.View getChildAt(int)>($i18);

        i7 = virtualinvoke r1.<android.view.View: int getTop()>();

        i8 = virtualinvoke r1.<android.view.View: int getBottom()>();

        i9 = 0;

        if i8 <= i6 goto label5;

        i9 = i8 - i6;

     label5:
        if i7 >= i5 goto label6;

        i9 = i7 - i5;

     label6:
        if i9 != 0 goto label7;

        return;

     label7:
        if i1 < 0 goto label8;

        $r20 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i19 = i1 - i3;

        r2 = virtualinvoke $r20.<android.widget.AbsListView: android.view.View getChildAt(int)>($i19);

        i10 = virtualinvoke r2.<android.view.View: int getTop()>();

        i11 = virtualinvoke r2.<android.view.View: int getBottom()>();

        i12 = staticinvoke <java.lang.Math: int abs(int)>(i9);

        if i9 >= 0 goto label9;

        $i20 = i11 + i12;

        if $i20 <= i6 goto label9;

        $i23 = i11 - i6;

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i23);

     label8:
        $r21 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r21.<android.widget.AbsListView: void smoothScrollBy(int,int)>(i9, i2);

        return;

     label9:
        if i9 <= 0 goto label8;

        $i22 = i10 - i12;

        if $i22 >= i5 goto label8;

        $i21 = i10 - i5;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i21);

        goto label8;
    }

    void start(int)
    {
        android.widget.AbsListView$PositionScroller r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.widget.AbsListView $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0;
        android.widget.AbsListView$PositionScroller$1 $r7;

        r0 := @this: android.widget.AbsListView$PositionScroller;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.widget.AbsListView$PositionScroller: void stop()>();

        $r1 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $z0 = $r1.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 == 0 goto label2;

        $r6 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r7 = new android.widget.AbsListView$PositionScroller$1;

        specialinvoke $r7.<android.widget.AbsListView$PositionScroller$1: void <init>(android.widget.AbsListView$PositionScroller,int)>(r0, i0);

        $r6.<android.widget.AbsListView: java.lang.Runnable mPositionScrollAfterLayout> = $r7;

     label1:
        return;

     label2:
        $r2 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i1 = virtualinvoke $r2.<android.widget.AbsListView: int getChildCount()>();

        if i1 == 0 goto label1;

        $r3 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i2 = $r3.<android.widget.AbsListView: int mFirstPosition>;

        $i6 = i2 + i1;

        i3 = -1 + $i6;

        $r4 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i8 = virtualinvoke $r4.<android.widget.AbsListView: int getCount()>();

        $i7 = -1 + $i8;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i7, i0);

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i9);

        if i4 >= i2 goto label5;

        $i11 = i2 - i4;

        i5 = 1 + $i11;

        r0.<android.widget.AbsListView$PositionScroller: int mMode> = 2;

     label3:
        if i5 <= 0 goto label7;

        $i12 = 200 / i5;

        r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration> = $i12;

     label4:
        r0.<android.widget.AbsListView$PositionScroller: int mTargetPos> = i4;

        r0.<android.widget.AbsListView$PositionScroller: int mBoundPos> = -1;

        r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos> = -1;

        $r5 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r5.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label5:
        if i4 <= i3 goto label6;

        $i10 = i4 - i3;

        i5 = 1 + $i10;

        r0.<android.widget.AbsListView$PositionScroller: int mMode> = 1;

        goto label3;

     label6:
        virtualinvoke r0.<android.widget.AbsListView$PositionScroller: void scrollToVisible(int,int,int)>(i4, -1, 200);

        return;

     label7:
        r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration> = 200;

        goto label4;
    }

    void start(int, int)
    {
        android.widget.AbsListView$PositionScroller r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.widget.AbsListView $r1, $r2, $r3, $r4, $r5, $r7;
        boolean $z0;
        android.widget.AbsListView$PositionScroller$2 $r6;

        r0 := @this: android.widget.AbsListView$PositionScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.AbsListView$PositionScroller: void stop()>();

        if i1 != -1 goto label02;

        virtualinvoke r0.<android.widget.AbsListView$PositionScroller: void start(int)>(i0);

     label01:
        return;

     label02:
        $r1 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $z0 = $r1.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 == 0 goto label03;

        $r7 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r6 = new android.widget.AbsListView$PositionScroller$2;

        specialinvoke $r6.<android.widget.AbsListView$PositionScroller$2: void <init>(android.widget.AbsListView$PositionScroller,int,int)>(r0, i0, i1);

        $r7.<android.widget.AbsListView: java.lang.Runnable mPositionScrollAfterLayout> = $r6;

        return;

     label03:
        $r2 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i2 = virtualinvoke $r2.<android.widget.AbsListView: int getChildCount()>();

        if i2 == 0 goto label01;

        $r3 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i3 = $r3.<android.widget.AbsListView: int mFirstPosition>;

        $i13 = i3 + i2;

        i4 = -1 + $i13;

        $r4 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i14 = virtualinvoke $r4.<android.widget.AbsListView: int getCount()>();

        $i16 = -1 + $i14;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i0);

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        if i5 >= i3 goto label07;

        i10 = i4 - i1;

        if i10 < 1 goto label01;

        $i19 = i3 - i5;

        i11 = 1 + $i19;

        i12 = i10 - 1;

        if i12 >= i11 goto label06;

        i9 = i12;

        r0.<android.widget.AbsListView$PositionScroller: int mMode> = 4;

     label04:
        if i9 <= 0 goto label10;

        $i18 = 200 / i9;

        r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration> = $i18;

     label05:
        r0.<android.widget.AbsListView$PositionScroller: int mTargetPos> = i5;

        r0.<android.widget.AbsListView$PositionScroller: int mBoundPos> = i1;

        r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos> = -1;

        $r5 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r5.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label06:
        i9 = i11;

        r0.<android.widget.AbsListView$PositionScroller: int mMode> = 2;

        goto label04;

     label07:
        if i5 <= i4 goto label09;

        i6 = i1 - i3;

        if i6 < 1 goto label01;

        $i17 = i5 - i4;

        i7 = 1 + $i17;

        i8 = i6 - 1;

        if i8 >= i7 goto label08;

        i9 = i8;

        r0.<android.widget.AbsListView$PositionScroller: int mMode> = 3;

        goto label04;

     label08:
        i9 = i7;

        r0.<android.widget.AbsListView$PositionScroller: int mMode> = 1;

        goto label04;

     label09:
        virtualinvoke r0.<android.widget.AbsListView$PositionScroller: void scrollToVisible(int,int,int)>(i5, i1, 200);

        return;

     label10:
        r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration> = 200;

        goto label05;
    }

    void startWithOffset(int, int)
    {
        android.widget.AbsListView$PositionScroller r0;
        int i0, i1;

        r0 := @this: android.widget.AbsListView$PositionScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.AbsListView$PositionScroller: void startWithOffset(int,int,int)>(i0, i1, 200);

        return;
    }

    void startWithOffset(int, int, int)
    {
        android.widget.AbsListView$PositionScroller r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22;
        float f0, $f1, $f2, $f3, $f4;
        android.widget.AbsListView $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11;
        boolean $z0;
        android.view.View $r6;
        byte $b21;
        android.widget.AbsListView$PositionScroller$3 $r9;

        r0 := @this: android.widget.AbsListView$PositionScroller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.widget.AbsListView$PositionScroller: void stop()>();

        $r1 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $z0 = $r1.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 == 0 goto label2;

        $r11 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $r9 = new android.widget.AbsListView$PositionScroller$3;

        specialinvoke $r9.<android.widget.AbsListView$PositionScroller$3: void <init>(android.widget.AbsListView$PositionScroller,int,int,int)>(r0, i0, i1, i2);

        $r11.<android.widget.AbsListView: java.lang.Runnable mPositionScrollAfterLayout> = $r9;

     label1:
        return;

     label2:
        $r2 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i3 = virtualinvoke $r2.<android.widget.AbsListView: int getChildCount()>();

        if i3 == 0 goto label1;

        $r3 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i9 = virtualinvoke $r3.<android.widget.AbsListView: int getPaddingTop()>();

        i4 = i1 + $i9;

        $r4 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i11 = virtualinvoke $r4.<android.widget.AbsListView: int getCount()>();

        $i10 = -1 + $i11;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i10, i0);

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i13);

        r0.<android.widget.AbsListView$PositionScroller: int mTargetPos> = $i12;

        r0.<android.widget.AbsListView$PositionScroller: int mOffsetFromTop> = i4;

        r0.<android.widget.AbsListView$PositionScroller: int mBoundPos> = -1;

        r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos> = -1;

        r0.<android.widget.AbsListView$PositionScroller: int mMode> = 5;

        $r5 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        i5 = $r5.<android.widget.AbsListView: int mFirstPosition>;

        $i14 = i5 + i3;

        i6 = -1 + $i14;

        $i16 = r0.<android.widget.AbsListView$PositionScroller: int mTargetPos>;

        if $i16 >= i5 goto label5;

        $i22 = r0.<android.widget.AbsListView$PositionScroller: int mTargetPos>;

        i8 = i5 - $i22;

     label3:
        $f3 = (float) i8;

        $f2 = (float) i3;

        f0 = $f3 / $f2;

        $b21 = f0 cmpg 1.0F;

        if $b21 >= 0 goto label7;

     label4:
        r0.<android.widget.AbsListView$PositionScroller: int mScrollDuration> = i2;

        r0.<android.widget.AbsListView$PositionScroller: int mLastSeenPos> = -1;

        $r10 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r10.<android.widget.AbsListView: void postOnAnimation(java.lang.Runnable)>(r0);

        return;

     label5:
        $i15 = r0.<android.widget.AbsListView$PositionScroller: int mTargetPos>;

        if $i15 <= i6 goto label6;

        $i19 = r0.<android.widget.AbsListView$PositionScroller: int mTargetPos>;

        i8 = $i19 - i6;

        goto label3;

     label6:
        $r7 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i18 = r0.<android.widget.AbsListView$PositionScroller: int mTargetPos>;

        $i17 = $i18 - i5;

        $r6 = virtualinvoke $r7.<android.widget.AbsListView: android.view.View getChildAt(int)>($i17);

        i7 = virtualinvoke $r6.<android.view.View: int getTop()>();

        $r8 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        $i20 = i7 - i4;

        virtualinvoke $r8.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>($i20, i2, 1);

        return;

     label7:
        $f1 = (float) i2;

        $f4 = $f1 / f0;

        i2 = (int) $f4;

        goto label4;
    }

    void stop()
    {
        android.widget.AbsListView$PositionScroller r0;
        android.widget.AbsListView $r1;

        r0 := @this: android.widget.AbsListView$PositionScroller;

        $r1 = r0.<android.widget.AbsListView$PositionScroller: android.widget.AbsListView this$0>;

        virtualinvoke $r1.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>(r0);

        return;
    }

    public static void <clinit>()
    {
        <android.widget.AbsListView$PositionScroller: int SCROLL_DURATION> = 200;

        <android.widget.AbsListView$PositionScroller: int MOVE_UP_POS> = 2;

        <android.widget.AbsListView$PositionScroller: int MOVE_UP_BOUND> = 4;

        <android.widget.AbsListView$PositionScroller: int MOVE_OFFSET> = 5;

        <android.widget.AbsListView$PositionScroller: int MOVE_DOWN_POS> = 1;

        <android.widget.AbsListView$PositionScroller: int MOVE_DOWN_BOUND> = 3;

        return;
    }
}
