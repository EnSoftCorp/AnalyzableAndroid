public class com.android.internal.telephony.cdma.CdmaConnection extends com.android.internal.telephony.Connection
{
    static final int EVENT_DTMF_DONE;
    static final int EVENT_NEXT_POST_DIAL;
    static final int EVENT_PAUSE_DONE;
    static final int EVENT_WAKE_LOCK_TIMEOUT;
    static final java.lang.String LOG_TAG;
    static final int PAUSE_DELAY_MILLIS;
    private static final boolean VDBG;
    static final int WAKE_LOCK_TIMEOUT_MILLIS;
    java.lang.String mAddress;
    com.android.internal.telephony.Connection$DisconnectCause mCause;
    long mConnectTime;
    long mConnectTimeReal;
    long mCreateTime;
    java.lang.String mDialString;
    long mDisconnectTime;
    boolean mDisconnected;
    long mDuration;
    android.os.Handler mHandler;
    long mHoldingStartTime;
    int mIndex;
    boolean mIsIncoming;
    int mNextPostDialChar;
    int mNumberPresentation;
    com.android.internal.telephony.cdma.CdmaCallTracker mOwner;
    com.android.internal.telephony.cdma.CdmaCall mParent;
    private android.os.PowerManager$WakeLock mPartialWakeLock;
    com.android.internal.telephony.Connection$PostDialState mPostDialState;
    java.lang.String mPostDialString;

    void <init>(android.content.Context, com.android.internal.telephony.DriverCall, com.android.internal.telephony.cdma.CdmaCallTracker, int)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.content.Context r1;
        com.android.internal.telephony.DriverCall r2;
        com.android.internal.telephony.cdma.CdmaCallTracker r3, $r7;
        int i0, $i1, $i3, $i4;
        com.android.internal.telephony.Connection$DisconnectCause $r4;
        com.android.internal.telephony.Connection$PostDialState $r5;
        com.android.internal.telephony.cdma.CdmaConnection$MyHandler $r6;
        android.os.Looper $r8;
        java.lang.String $r9, $r10;
        boolean $z0;
        long $l2;
        com.android.internal.telephony.DriverCall$State $r11;
        com.android.internal.telephony.cdma.CdmaCall $r12, $r13;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.DriverCall;

        r3 := @parameter2: com.android.internal.telephony.cdma.CdmaCallTracker;

        i0 := @parameter3: int;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>()>();

        $r4 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause NOT_DISCONNECTED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause mCause> = $r4;

        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState NOT_STARTED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = $r5;

        $i1 = <com.android.internal.telephony.PhoneConstants: int PRESENTATION_ALLOWED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i1;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void createWakeLock(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner> = r3;

        $r6 = new com.android.internal.telephony.cdma.CdmaConnection$MyHandler;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r6.<com.android.internal.telephony.cdma.CdmaConnection$MyHandler: void <init>(com.android.internal.telephony.cdma.CdmaConnection,android.os.Looper)>(r0, $r8);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler> = $r6;

        $r9 = r2.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress> = $r9;

        $z0 = r2.<com.android.internal.telephony.DriverCall: boolean isMT>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming> = $z0;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mCreateTime> = $l2;

        $r10 = r2.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = $r10;

        $i3 = r2.<com.android.internal.telephony.DriverCall: int namePresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCnapNamePresentation> = $i3;

        $i4 = r2.<com.android.internal.telephony.DriverCall: int numberPresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i4;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex> = i0;

        $r11 = r2.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        $r13 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall parentFromDCState(com.android.internal.telephony.DriverCall$State)>($r11);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = $r13;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        virtualinvoke $r12.<com.android.internal.telephony.cdma.CdmaCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.DriverCall)>(r0, r2);

        return;
    }

    void <init>(android.content.Context, com.android.internal.telephony.cdma.CdmaCallWaitingNotification, com.android.internal.telephony.cdma.CdmaCallTracker, com.android.internal.telephony.cdma.CdmaCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.content.Context r1;
        com.android.internal.telephony.cdma.CdmaCallWaitingNotification r2;
        com.android.internal.telephony.cdma.CdmaCallTracker r3, $r8;
        com.android.internal.telephony.cdma.CdmaCall r4;
        com.android.internal.telephony.Connection$DisconnectCause $r5;
        com.android.internal.telephony.Connection$PostDialState $r6;
        int $i0, $i1, $i2;
        com.android.internal.telephony.cdma.CdmaConnection$MyHandler $r7;
        android.os.Looper $r9;
        java.lang.String $r10, $r11;
        long $l3;
        com.android.internal.telephony.Call$State $r12;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.cdma.CdmaCallWaitingNotification;

        r3 := @parameter2: com.android.internal.telephony.cdma.CdmaCallTracker;

        r4 := @parameter3: com.android.internal.telephony.cdma.CdmaCall;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>()>();

        $r5 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause NOT_DISCONNECTED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause mCause> = $r5;

        $r6 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState NOT_STARTED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = $r6;

        $i0 = <com.android.internal.telephony.PhoneConstants: int PRESENTATION_ALLOWED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i0;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void createWakeLock(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner> = r3;

        $r7 = new com.android.internal.telephony.cdma.CdmaConnection$MyHandler;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r9 = virtualinvoke $r8.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r7.<com.android.internal.telephony.cdma.CdmaConnection$MyHandler: void <init>(com.android.internal.telephony.cdma.CdmaConnection,android.os.Looper)>(r0, $r9);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler> = $r7;

        $r10 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String number>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress> = $r10;

        $i1 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int numberPresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i1;

        $r11 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: java.lang.String name>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = $r11;

        $i2 = r2.<com.android.internal.telephony.cdma.CdmaCallWaitingNotification: int namePresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCnapNamePresentation> = $i2;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex> = -1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming> = 1;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mCreateTime> = $l3;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTime> = 0L;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = r4;

        $r12 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State WAITING>;

        virtualinvoke r4.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r12);

        return;
    }

    void <init>(android.content.Context, java.lang.String, com.android.internal.telephony.cdma.CdmaCallTracker, com.android.internal.telephony.cdma.CdmaCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.content.Context r1;
        java.lang.String r2, r5, $r13, $r18, $r19, $r20;
        com.android.internal.telephony.cdma.CdmaCallTracker r3, $r9;
        com.android.internal.telephony.cdma.CdmaCall r4;
        com.android.internal.telephony.Connection$DisconnectCause $r6;
        com.android.internal.telephony.Connection$PostDialState $r7;
        int $i0, $i3, $i4;
        com.android.internal.telephony.cdma.CdmaConnection$MyHandler $r8;
        android.os.Looper $r10;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r16, $r17;
        com.android.internal.telephony.Call$State $r21, $r22, $r23, $r24;
        long $l5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.internal.telephony.cdma.CdmaCallTracker;

        r4 := @parameter3: com.android.internal.telephony.cdma.CdmaCall;

        specialinvoke r0.<com.android.internal.telephony.Connection: void <init>()>();

        $r6 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause NOT_DISCONNECTED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause mCause> = $r6;

        $r7 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState NOT_STARTED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = $r7;

        $i0 = <com.android.internal.telephony.PhoneConstants: int PRESENTATION_ALLOWED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i0;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void createWakeLock(android.content.Context)>(r1);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner> = r3;

        $r8 = new com.android.internal.telephony.cdma.CdmaConnection$MyHandler;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r10 = virtualinvoke $r9.<com.android.internal.telephony.cdma.CdmaCallTracker: android.os.Looper getLooper()>();

        specialinvoke $r8.<com.android.internal.telephony.cdma.CdmaConnection$MyHandler: void <init>(com.android.internal.telephony.cdma.CdmaConnection,android.os.Looper)>(r0, $r10);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler> = $r8;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mDialString> = r2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CDMAConn] CdmaConnection: dialString=");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaConnection", $r13);

        r5 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: java.lang.String formatDialString(java.lang.String)>(r2);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CDMAConn] CdmaConnection:formated dialString=");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaConnection", $r18);

        $r20 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>(r5);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress> = $r20;

        $r19 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>(r5);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString> = $r19;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex> = -1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming> = 0;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = null;

        $i4 = <com.android.internal.telephony.PhoneConstants: int PRESENTATION_ALLOWED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCnapNamePresentation> = $i4;

        $i3 = <com.android.internal.telephony.PhoneConstants: int PRESENTATION_ALLOWED>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i3;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mCreateTime> = $l5;

        if r4 == null goto label1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = r4;

        $r23 = r4.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState>;

        $r21 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        if $r23 != $r21 goto label2;

        $r22 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        virtualinvoke r4.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r22);

     label1:
        return;

     label2:
        $r24 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        virtualinvoke r4.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r24);

        return;
    }

    static void access$000(com.android.internal.telephony.cdma.CdmaConnection)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;

        r0 := @parameter0: com.android.internal.telephony.cdma.CdmaConnection;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return;
    }

    private void acquireWakeLock()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>("acquireWakeLock");

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r1.<android.os.PowerManager$WakeLock: void acquire()>();

        return;
    }

    private void createWakeLock(android.content.Context)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.os.PowerManager $r3;
        android.os.PowerManager$WakeLock $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r3 = (android.os.PowerManager) $r2;

        $r4 = virtualinvoke $r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "CdmaConnection");

        r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock> = $r4;

        return;
    }

    private void doDisconnect()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0, $l1, $l2, $l3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex> = -1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDisconnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTimeReal>;

        $l3 = $l1 - $l2;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDuration> = $l3;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected> = 1;

        return;
    }

    static boolean equalsHandlesNulls(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    private static int findNextPCharOrNonPOrNonWCharIndex(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, i1, i2, $i5;
        boolean z0, $z1, $z2, $z3, $z4;
        char c3, $c4, $c6;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        z0 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isWait(char)>($c4);

        i1 = i0 + 1;

        i2 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i1 >= i2 goto label3;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z2 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isWait(char)>(c3);

        if $z2 == 0 goto label2;

        z0 = 1;

     label2:
        $z3 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isWait(char)>(c3);

        if $z3 != 0 goto label5;

        $z4 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isPause(char)>(c3);

        if $z4 != 0 goto label5;

     label3:
        if i1 >= i2 goto label4;

        $i5 = i0 + 1;

        if i1 <= $i5 goto label4;

        if z0 != 0 goto label4;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z1 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isPause(char)>($c6);

        if $z1 == 0 goto label4;

        i1 = i0 + 1;

     label4:
        return i1;

     label5:
        i1 = i1 + 1;

        goto label1;
    }

    private static char findPOrWCharToAppend(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1, $i4;
        char c2, $c3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isPause(char)>($c3);

        if $z0 == 0 goto label3;

        c2 = 44;

     label1:
        $i4 = i0 + 1;

        if i1 <= $i4 goto label2;

        c2 = 59;

     label2:
        return c2;

     label3:
        c2 = 59;

        goto label1;
    }

    public static java.lang.String formatDialString(java.lang.String)
    {
        java.lang.String r0, $r3, $r4;
        int i0, i1, i3, $i4, $i6;
        java.lang.StringBuilder r1, $r2;
        char c2, $c5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label7;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z0 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isPause(char)>(c2);

        if $z0 != 0 goto label3;

        $z1 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean isWait(char)>(c2);

        if $z1 == 0 goto label6;

     label3:
        $i4 = i0 - 1;

        if i1 >= $i4 goto label4;

        i3 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: int findNextPCharOrNonPOrNonWCharIndex(java.lang.String,int)>(r0, i1);

        if i3 >= i0 goto label5;

        $c5 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: char findPOrWCharToAppend(java.lang.String,int,int)>(r0, i1, i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i6 = i1 + 1;

        if i3 <= $i6 goto label4;

        i1 = i3 - 1;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        if i3 != i0 goto label4;

        i1 = i0 - 1;

        goto label4;

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label4;

     label7:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCode(java.lang.String)>($r3);

        return $r4;
    }

    private boolean isConnectingInOrOut()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall $r1, $r3, $r4, $r5, $r8;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2;
        com.android.internal.telephony.Call$State $r6, $r7, $r9, $r10;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r3 = $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        if $r4 == $r3 goto label1;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r7 = $r5.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState>;

        $r6 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DIALING>;

        if $r7 == $r6 goto label1;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r10 = $r8.<com.android.internal.telephony.cdma.CdmaCall: com.android.internal.telephony.Call$State mState>;

        $r9 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ALERTING>;

        if $r10 != $r9 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean isPause(char)
    {
        char c0;

        c0 := @parameter0: char;

        if c0 != 44 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean isWait(char)
    {
        char c0;

        c0 := @parameter0: char;

        if c0 != 59 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void log(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[CDMAConn] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("CdmaConnection", $r5);

        return;
    }

    private com.android.internal.telephony.cdma.CdmaCall parentFromDCState(com.android.internal.telephony.DriverCall$State)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.DriverCall$State r1;
        int[] $r2;
        int $i0, $i1;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        com.android.internal.telephony.cdma.CdmaCallTracker $r8, $r10, $r12;
        com.android.internal.telephony.cdma.CdmaCall $r9, $r11, $r13;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.DriverCall$State;

        $r2 = <com.android.internal.telephony.cdma.CdmaConnection$1: int[] $SwitchMap$com$android$internal$telephony$DriverCall$State>;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.DriverCall$State: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label4;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal call state: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        $r12 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r13 = $r12.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mForegroundCall>;

        return $r13;

     label3:
        $r10 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r11 = $r10.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        return $r11;

     label4:
        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r9 = $r8.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mRingingCall>;

        return $r9;
    }

    private boolean processPostDialChar(char)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        char c0;
        boolean $z0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2, $r3;
        android.os.Handler $r4, $r5, $r8;
        android.os.Message $r6, $r10;
        com.android.internal.telephony.cdma.CdmaCallTracker $r7;
        com.android.internal.telephony.CommandsInterface $r9;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        c0 := @parameter0: char;

        $z0 = staticinvoke <android.telephony.PhoneNumberUtils: boolean is12Key(char)>(c0);

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r9 = $r7.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.CommandsInterface mCi>;

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        $r10 = virtualinvoke $r8.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        interfaceinvoke $r9.<com.android.internal.telephony.CommandsInterface: void sendDtmf(char,android.os.Message)>(c0, $r10);

        return 1;

     label1:
        if c0 != 44 goto label2;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState PAUSE>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r3);

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        $r6 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke $r5.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r6, 2000L);

        return 1;

     label2:
        if c0 != 59 goto label3;

        $r2 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r2);

        return 1;

     label3:
        if c0 != 78 goto label4;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r1);

        return 1;

     label4:
        return 0;
    }

    private void releaseWakeLock()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.os.PowerManager$WakeLock r1, $r3, $r4;
        java.lang.Throwable r2, $r5;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r3.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>("releaseWakeLock");

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void setPostDialState(com.android.internal.telephony.Connection$PostDialState)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState r1, $r5, $r10;
        android.os.PowerManager$WakeLock r2, $r6;
        java.lang.Throwable r3, $r11;
        android.os.Message r4;
        boolean $z0;
        android.os.Handler $r7, $r8, $r9, $r12;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.Connection$PostDialState;

        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        if r1 == $r5 goto label01;

        $r10 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState PAUSE>;

        if r1 != $r10 goto label10;

     label01:
        r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        entermonitor r2;

     label02:
        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r6.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label05;

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        virtualinvoke $r9.<android.os.Handler: void removeMessages(int)>(4);

     label03:
        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        r4 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int)>(4);

        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r4, 60000L);

        exitmonitor r2;

     label04:
        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState> = r1;

        return;

     label05:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void acquireWakeLock()>();

     label06:
        goto label03;

     label07:
        $r11 := @caughtexception;

        r3 = $r11;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        $r12 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        virtualinvoke $r12.<android.os.Handler: void removeMessages(int)>(4);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        goto label04;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void cancelPostDial()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r1);

        return;
    }

    boolean compareTo(com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.DriverCall r1;
        java.lang.String r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.DriverCall;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming>;

        if $z0 != 0 goto label2;

        $z4 = r1.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z4 != 0 goto label2;

     label1:
        return 1;

     label2:
        $r3 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        $i0 = r1.<com.android.internal.telephony.DriverCall: int TOA>;

        r2 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>($r3, $i0);

        $z2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming>;

        $z1 = r1.<com.android.internal.telephony.DriverCall: boolean isMT>;

        if $z2 != $z1 goto label3;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress>;

        $z3 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r4, r2);

        if $z3 != 0 goto label1;

     label3:
        return 0;
    }

    com.android.internal.telephony.Connection$DisconnectCause disconnectCauseFromCode(int)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int i0, i1, $i2;
        com.android.internal.telephony.cdma.CDMAPhone r1;
        com.android.internal.telephony.uicc.UiccCardApplication r2;
        com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState r3, $r26;
        com.android.internal.telephony.Connection$DisconnectCause $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r22, $r23, $r24, $r25, $r27;
        com.android.internal.telephony.cdma.CdmaCallTracker $r18;
        android.telephony.ServiceState $r20;
        com.android.internal.telephony.uicc.UiccController $r21;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 17: goto label03;
            case 34: goto label04;
            case 68: goto label05;
            case 240: goto label06;
            case 241: goto label07;
            case 1000: goto label08;
            case 1001: goto label09;
            case 1002: goto label10;
            case 1003: goto label11;
            case 1004: goto label12;
            case 1005: goto label13;
            case 1006: goto label14;
            case 1007: goto label15;
            case 1008: goto label16;
            case 1009: goto label17;
            default: goto label01;
        };

     label01:
        $r18 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        r1 = $r18.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        $r20 = virtualinvoke r1.<com.android.internal.telephony.cdma.CDMAPhone: android.telephony.ServiceState getServiceState()>();

        i1 = virtualinvoke $r20.<android.telephony.ServiceState: int getState()>();

        $r21 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>();

        r2 = virtualinvoke $r21.<com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccCardApplication getUiccCardApplication(int)>(2);

        if r2 == null goto label18;

        r3 = virtualinvoke r2.<com.android.internal.telephony.uicc.UiccCardApplication: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState getState()>();

     label02:
        if i1 != 3 goto label19;

        $r27 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause POWER_OFF>;

        return $r27;

     label03:
        $r19 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause BUSY>;

        return $r19;

     label04:
        $r16 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CONGESTION>;

        return $r16;

     label05:
        $r17 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause LIMIT_EXCEEDED>;

        return $r17;

     label06:
        $r14 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CALL_BARRED>;

        return $r14;

     label07:
        $r15 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause FDN_BLOCKED>;

        return $r15;

     label08:
        $r13 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_LOCKED_UNTIL_POWER_CYCLE>;

        return $r13;

     label09:
        $r12 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_DROP>;

        return $r12;

     label10:
        $r11 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_INTERCEPT>;

        return $r11;

     label11:
        $r10 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_REORDER>;

        return $r10;

     label12:
        $r9 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_SO_REJECT>;

        return $r9;

     label13:
        $r8 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_RETRY_ORDER>;

        return $r8;

     label14:
        $r7 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_ACCESS_FAILURE>;

        return $r7;

     label15:
        $r6 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_PREEMPTED>;

        return $r6;

     label16:
        $r5 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_NOT_EMERGENCY>;

        return $r5;

     label17:
        $r4 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause CDMA_ACCESS_BLOCKED>;

        return $r4;

     label18:
        r3 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_UNKNOWN>;

        goto label02;

     label19:
        if i1 == 1 goto label20;

        if i1 != 2 goto label21;

     label20:
        $r22 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause OUT_OF_SERVICE>;

        return $r22;

     label21:
        $i2 = r1.<com.android.internal.telephony.cdma.CDMAPhone: int mCdmaSubscriptionSource>;

        if $i2 != 0 goto label22;

        $r26 = <com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState: com.android.internal.telephony.uicc.IccCardApplicationStatus$AppState APPSTATE_READY>;

        if r3 == $r26 goto label22;

        $r25 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause ICC_ERROR>;

        return $r25;

     label22:
        if i0 != 16 goto label23;

        $r23 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause NORMAL>;

        return $r23;

     label23:
        $r24 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause ERROR_UNSPECIFIED>;

        return $r24;
    }

    public void dispose()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        return;
    }

    void fakeHoldBeforeDial()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall $r1, $r3, $r5, $r6;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2;
        com.android.internal.telephony.Call$State $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if $r1 == null goto label1;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        virtualinvoke $r6.<com.android.internal.telephony.cdma.CdmaCall: void detach(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label1:
        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r3 = $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CdmaCall mBackgroundCall>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = $r3;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        virtualinvoke $r5.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r4);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void onStartedHolding()>();

        return;
    }

    protected void finalize()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        android.os.PowerManager$WakeLock $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.PowerManager$WakeLock mPartialWakeLock>;

        $z0 = virtualinvoke $r1.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CdmaConnection", "[CdmaConn] UNEXPECTED; mPartialWakeLock is held when finalizing.");

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return;
    }

    public java.lang.String getAddress()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress>;

        return $r1;
    }

    int getCDMAIndex() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int $i0, $i1, $i2;
        com.android.internal.telephony.CallStateException $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex>;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mIndex>;

        $i2 = 1 + $i1;

        return $i2;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("CDMA connection index not assigned");

        throw $r1;
    }

    public volatile com.android.internal.telephony.Call getCall()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall getCall()>();

        return $r1;
    }

    public com.android.internal.telephony.cdma.CdmaCall getCall()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        return $r1;
    }

    public long getConnectTime()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $l0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTime>;

        return $l0;
    }

    public long getCreateTime()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $l0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mCreateTime>;

        return $l0;
    }

    public com.android.internal.telephony.Connection$DisconnectCause getDisconnectCause()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$DisconnectCause $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause mCause>;

        return $r1;
    }

    public long getDisconnectTime()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $l0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDisconnectTime>;

        return $l0;
    }

    public long getDurationMillis()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0, $l2, $l4, $l5, $l6, $l7;
        byte $b1, $b3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $l0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTimeReal>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return 0L;

     label1:
        $l2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDuration>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label2;

        $l5 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTimeReal>;

        $l7 = $l5 - $l6;

        return $l7;

     label2:
        $l4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDuration>;

        return $l4;
    }

    public long getHoldDurationMillis()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Call$State $r1, $r2;
        long $l0, $l1, $l2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>();

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r1 == $r2 goto label1;

        return 0L;

     label1:
        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mHoldingStartTime>;

        $l2 = $l0 - $l1;

        return $l2;
    }

    public int getNumberPresentation()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation>;

        return $i0;
    }

    public java.lang.String getOrigDialString()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        java.lang.String $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mDialString>;

        return $r1;
    }

    public com.android.internal.telephony.Connection$PostDialState getPostDialState()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        return $r1;
    }

    public java.lang.String getRemainingPostDialString()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        java.lang.String r1, $r6, $r7, $r8, $r9, $r10;
        int i0, i1, $i2, $i3, $i4;
        com.android.internal.telephony.Connection$PostDialState $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r2 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        if $r3 == $r2 goto label1;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r4 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState COMPLETE>;

        if $r5 == $r4 goto label1;

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        if $r6 == null goto label1;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        if $i2 > $i3 goto label3;

     label1:
        r1 = "";

     label2:
        return r1;

     label3:
        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $i4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        r1 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i4);

        if r1 == null goto label2;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(59);

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

        if i0 <= 0 goto label5;

        if i0 < i1 goto label4;

        if i1 > 0 goto label5;

     label4:
        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r10;

     label5:
        if i1 <= 0 goto label2;

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        return $r9;
    }

    public com.android.internal.telephony.Call$State getState()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.Call$State $r1, $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        if $z0 == 0 goto label1;

        $r2 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State DISCONNECTED>;

        return $r2;

     label1:
        $r1 = specialinvoke r0.<com.android.internal.telephony.Connection: com.android.internal.telephony.Call$State getState()>();

        return $r1;
    }

    public com.android.internal.telephony.UUSInfo getUUSInfo()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        return null;
    }

    public void hangup() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r1;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: void hangup(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

        return;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("disconnected");

        throw $r1;
    }

    public boolean isIncoming()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming>;

        return $z0;
    }

    void onConnectedInOrOut()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0, $l1, $l2;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTime> = $l0;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTimeReal> = $l1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mDuration> = 0L;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onConnectedInOrOut: connectTime=");

        $l2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: long mConnectTime>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r4);

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mIsIncoming>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void processNextPostDialChar()>();

        return;

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return;
    }

    boolean onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$DisconnectCause r1;
        boolean z0, z1;
        com.android.internal.telephony.cdma.CdmaCall r2, $r5;
        com.android.internal.telephony.cdma.CdmaCallTracker $r3;
        com.android.internal.telephony.cdma.CDMAPhone $r4;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.Connection$DisconnectCause;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause mCause> = r1;

        z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        z1 = 0;

        if z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void doDisconnect()>();

        $r3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r4 = $r3.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        virtualinvoke $r4.<com.android.internal.telephony.cdma.CDMAPhone: void notifyDisconnect(com.android.internal.telephony.Connection)>(r0);

        r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        z1 = 0;

        if r2 == null goto label1;

        $r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        z1 = virtualinvoke $r5.<com.android.internal.telephony.cdma.CdmaCall: boolean connectionDisconnected(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return z1;
    }

    void onHangupLocal()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$DisconnectCause $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r1 = <com.android.internal.telephony.Connection$DisconnectCause: com.android.internal.telephony.Connection$DisconnectCause LOCAL>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause mCause> = $r1;

        return;
    }

    void onLocalDisconnect()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.cdma.CdmaCall $r1, $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void doDisconnect()>();

        $r1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCall: void detach(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label1:
        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        return;
    }

    void onRemoteDisconnect(int)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        int i0;
        com.android.internal.telephony.Connection$DisconnectCause $r1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$DisconnectCause disconnectCauseFromCode(int)>(i0);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean onDisconnect(com.android.internal.telephony.Connection$DisconnectCause)>($r1);

        return;
    }

    void onStartedHolding()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        long $l0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: long mHoldingStartTime> = $l0;

        return;
    }

    public void proceedAfterWaitChar()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.Connection$PostDialState $r1, $r2, $r3, $r6;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r1 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WAIT>;

        if $r2 == $r1 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CdmaConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WAIT but was ");

        $r6 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CdmaConnection", $r8);

        return;

     label1:
        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r3);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void processNextPostDialChar()>();

        return;
    }

    public void proceedAfterWildChar(java.lang.String)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        java.lang.String r1, $r7, $r8, $r10, $r13, $r16, $r20;
        java.lang.StringBuilder r2, $r6, $r11, $r12, $r14, $r15, $r17, $r18;
        com.android.internal.telephony.Connection$PostDialState $r3, $r4, $r5, $r19;
        int $i0;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r3 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState WILD>;

        if $r4 == $r3 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CdmaConnection.proceedAfterWaitChar(): Expected getPostDialState() to be WILD but was ");

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("CdmaConnection", $r20);

        return;

     label1:
        $r5 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        r2 = $r6;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $i0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString> = $r10;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar> = 0;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proceedAfterWildChar: new postDialString is ");

        $r13 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r16);

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void processNextPostDialChar()>();

        return;
    }

    void processNextPostDialChar()
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        char c0;
        android.os.Registrant r1;
        android.os.Message r2, $r16;
        com.android.internal.telephony.Connection$PostDialState r3, $r6, $r7, $r9, $r13;
        android.os.AsyncResult r4;
        java.lang.String r5, $r8, $r12, $r20;
        int i1, $i2, $i3, $i4;
        com.android.internal.telephony.cdma.CdmaCallTracker $r10;
        com.android.internal.telephony.cdma.CDMAPhone $r11;
        android.os.Handler $r14;
        boolean $z0;
        java.lang.StringBuilder $r15, $r17, $r18, $r19;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $r7 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        $r6 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState CANCELLED>;

        if $r7 != $r6 goto label2;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

     label1:
        return;

     label2:
        $r8 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        if $r8 == null goto label3;

        $r12 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        $i2 = virtualinvoke $r12.<java.lang.String: int length()>();

        $i3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        if $i2 > $i3 goto label5;

     label3:
        $r9 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState COMPLETE>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r9);

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void releaseWakeLock()>();

        c0 = 0;

     label4:
        $r10 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        $r11 = $r10.<com.android.internal.telephony.cdma.CdmaCallTracker: com.android.internal.telephony.cdma.CDMAPhone mPhone>;

        r1 = $r11.<com.android.internal.telephony.cdma.CDMAPhone: android.os.Registrant mPostDialHandler>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<android.os.Registrant: android.os.Message messageForRegistrant()>();

        if r2 == null goto label1;

        r3 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Connection$PostDialState mPostDialState>;

        r4 = staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>(r2);

        r4.<android.os.AsyncResult: java.lang.Object result> = r0;

        r4.<android.os.AsyncResult: java.lang.Object userObj> = r3;

        r2.<android.os.Message: int arg1> = c0;

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

        return;

     label5:
        $r13 = <com.android.internal.telephony.Connection$PostDialState: com.android.internal.telephony.Connection$PostDialState STARTED>;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void setPostDialState(com.android.internal.telephony.Connection$PostDialState)>($r13);

        r5 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mPostDialString>;

        i1 = r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar>;

        $i4 = i1 + 1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNextPostDialChar> = $i4;

        c0 = virtualinvoke r5.<java.lang.String: char charAt(int)>(i1);

        $z0 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean processPostDialChar(char)>(c0);

        if $z0 != 0 goto label4;

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaConnection: android.os.Handler mHandler>;

        $r16 = virtualinvoke $r14.<android.os.Handler: android.os.Message obtainMessage(int)>(3);

        virtualinvoke $r16.<android.os.Message: void sendToTarget()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processNextPostDialChar: c=");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isn\'t valid!");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("CDMA", $r20);

        return;
    }

    public void separate() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        boolean $z0;
        com.android.internal.telephony.CallStateException $r1;
        com.android.internal.telephony.cdma.CdmaCallTracker $r2;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        $z0 = r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean mDisconnected>;

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCallTracker mOwner>;

        virtualinvoke $r2.<com.android.internal.telephony.cdma.CdmaCallTracker: void separate(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

        return;

     label1:
        $r1 = new com.android.internal.telephony.CallStateException;

        specialinvoke $r1.<com.android.internal.telephony.CallStateException: void <init>(java.lang.String)>("disconnected");

        throw $r1;
    }

    boolean update(com.android.internal.telephony.DriverCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.DriverCall r1;
        boolean z0, z1, z2, z3, z4, z5, $z6, $z7, $z8, $z9, $z10;
        com.android.internal.telephony.cdma.CdmaCall r2, $r9, $r24, $r25, $r38, $r39;
        com.android.internal.telephony.Call$State $r3, $r4, $r33, $r34;
        com.android.internal.telephony.DriverCall$State $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r18, $r20, $r21, $r23, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r36;
        java.lang.String $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r22, $r35, $r37, $r40, $r41;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.DriverCall;

        z0 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean isConnectingInOrOut()>();

        $r3 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>();

        $r4 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r3 != $r4 goto label08;

        z1 = 1;

     label01:
        $r5 = r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state>;

        r2 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall parentFromDCState(com.android.internal.telephony.DriverCall$State)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("parent= ");

        $r9 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newParent= ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r13);

        $r14 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress>;

        $r12 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        z2 = staticinvoke <com.android.internal.telephony.cdma.CdmaConnection: boolean equalsHandlesNulls(java.lang.Object,java.lang.Object)>($r14, $r12);

        z3 = 0;

        if z2 != 0 goto label02;

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>("update: phone # changed!");

        $r40 = r1.<com.android.internal.telephony.DriverCall: java.lang.String number>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mAddress> = $r40;

        z3 = 1;

     label02:
        $r15 = r1.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r15);

        if $z6 == 0 goto label09;

        $r41 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName>;

        $z10 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r41);

        if $z10 != 0 goto label03;

        z3 = 1;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = "";

     label03:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--dssds----");

        $r19 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r22);

        $i0 = r1.<com.android.internal.telephony.DriverCall: int namePresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mCnapNamePresentation> = $i0;

        $i1 = r1.<com.android.internal.telephony.DriverCall: int numberPresentation>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: int mNumberPresentation> = $i1;

        $r24 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if r2 == $r24 goto label10;

        $r39 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        if $r39 == null goto label04;

        $r38 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        virtualinvoke $r38.<com.android.internal.telephony.cdma.CdmaCall: void detach(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label04:
        virtualinvoke r2.<com.android.internal.telephony.cdma.CdmaCall: void attach(com.android.internal.telephony.Connection,com.android.internal.telephony.DriverCall)>(r0, r1);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = r2;

        z5 = 1;

     label05:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update, wasConnectingInOrOut=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", wasHolding=");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isConnectingInOrOut=");

        $z8 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean isConnectingInOrOut()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", changed=");

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z5);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void log(java.lang.String)>($r35);

        if z0 == 0 goto label06;

        $z9 = specialinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: boolean isConnectingInOrOut()>();

        if $z9 != 0 goto label06;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void onConnectedInOrOut()>();

     label06:
        if z5 == 0 goto label07;

        if z1 != 0 goto label07;

        $r34 = virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.Call$State getState()>();

        $r33 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State HOLDING>;

        if $r34 != $r33 goto label07;

        virtualinvoke r0.<com.android.internal.telephony.cdma.CdmaConnection: void onStartedHolding()>();

     label07:
        return z5;

     label08:
        z1 = 0;

        goto label01;

     label09:
        $r16 = r1.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        $r17 = r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName>;

        $z7 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z7 != 0 goto label03;

        z3 = 1;

        $r37 = r1.<com.android.internal.telephony.DriverCall: java.lang.String name>;

        r0.<com.android.internal.telephony.cdma.CdmaConnection: java.lang.String mCnapName> = $r37;

        goto label03;

     label10:
        $r25 = r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent>;

        z4 = virtualinvoke $r25.<com.android.internal.telephony.cdma.CdmaCall: boolean update(com.android.internal.telephony.cdma.CdmaConnection,com.android.internal.telephony.DriverCall)>(r0, r1);

        if z3 != 0 goto label11;

        if z4 == 0 goto label13;

     label11:
        z5 = 1;

     label12:
        goto label05;

     label13:
        z5 = 0;

        goto label12;
    }

    public void updateParent(com.android.internal.telephony.cdma.CdmaCall, com.android.internal.telephony.cdma.CdmaCall)
    {
        com.android.internal.telephony.cdma.CdmaConnection r0;
        com.android.internal.telephony.cdma.CdmaCall r1, r2;
        com.android.internal.telephony.Call$State $r3;

        r0 := @this: com.android.internal.telephony.cdma.CdmaConnection;

        r1 := @parameter0: com.android.internal.telephony.cdma.CdmaCall;

        r2 := @parameter1: com.android.internal.telephony.cdma.CdmaCall;

        if r2 == r1 goto label2;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.telephony.cdma.CdmaCall: void detach(com.android.internal.telephony.cdma.CdmaConnection)>(r0);

     label1:
        $r3 = <com.android.internal.telephony.Call$State: com.android.internal.telephony.Call$State ACTIVE>;

        virtualinvoke r2.<com.android.internal.telephony.cdma.CdmaCall: void attachFake(com.android.internal.telephony.Connection,com.android.internal.telephony.Call$State)>(r0, $r3);

        r0.<com.android.internal.telephony.cdma.CdmaConnection: com.android.internal.telephony.cdma.CdmaCall mParent> = r2;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.telephony.cdma.CdmaConnection: int WAKE_LOCK_TIMEOUT_MILLIS> = 60000;

        <com.android.internal.telephony.cdma.CdmaConnection: boolean VDBG> = 0;

        <com.android.internal.telephony.cdma.CdmaConnection: int PAUSE_DELAY_MILLIS> = 2000;

        <com.android.internal.telephony.cdma.CdmaConnection: java.lang.String LOG_TAG> = "CdmaConnection";

        <com.android.internal.telephony.cdma.CdmaConnection: int EVENT_WAKE_LOCK_TIMEOUT> = 4;

        <com.android.internal.telephony.cdma.CdmaConnection: int EVENT_PAUSE_DONE> = 2;

        <com.android.internal.telephony.cdma.CdmaConnection: int EVENT_NEXT_POST_DIAL> = 3;

        <com.android.internal.telephony.cdma.CdmaConnection: int EVENT_DTMF_DONE> = 1;

        return;
    }
}
