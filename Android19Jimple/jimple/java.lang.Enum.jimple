public abstract class java.lang.Enum extends java.lang.Object implements java.io.Serializable, java.lang.Comparable
{
    private static final long serialVersionUID;
    private static final libcore.util.BasicLruCache sharedConstantsCache;
    private final java.lang.String name;
    private final int ordinal;

    static void <clinit>()
    {
        java.lang.Enum$1 $r0;

        <java.lang.Enum: long serialVersionUID> = -4300926546619394005L;

        $r0 = new java.lang.Enum$1;

        specialinvoke $r0.<java.lang.Enum$1: void <init>(int)>(64);

        <java.lang.Enum: libcore.util.BasicLruCache sharedConstantsCache> = $r0;

        return;
    }

    protected void <init>(java.lang.String, int)
    {
        java.lang.Enum r0;
        java.lang.String r1;
        int i0;

        r0 := @this: java.lang.Enum;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.lang.Enum: java.lang.String name> = r1;

        r0.<java.lang.Enum: int ordinal> = i0;

        return;
    }

    public static java.lang.Enum[] getSharedConstants(java.lang.Class)
    {
        java.lang.Class r0;
        libcore.util.BasicLruCache $r1;
        java.lang.Object $r2;
        java.lang.Enum[] $r3, $r4;

        r0 := @parameter0: java.lang.Class;

        $r1 = <java.lang.Enum: libcore.util.BasicLruCache sharedConstantsCache>;

        $r2 = virtualinvoke $r1.<libcore.util.BasicLruCache: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.Enum[]) $r2;

        $r4 = (java.lang.Enum[]) $r3;

        return $r4;
    }

    public static java.lang.Enum valueOf(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1, $r8, $r10, $r11, $r17;
        java.lang.Enum[] r2;
        int i0, i1;
        java.lang.Enum r3;
        java.lang.IllegalArgumentException $r4, $r13;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r12, $r14, $r15;
        boolean $z0;
        java.lang.NullPointerException $r16, $r18;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r18 = new java.lang.NullPointerException;

        specialinvoke $r18.<java.lang.NullPointerException: void <init>(java.lang.String)>("enumType == null");

        throw $r18;

     label1:
        if r1 != null goto label2;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("name == null");

        throw $r16;

     label2:
        r2 = staticinvoke <java.lang.Enum: java.lang.Enum[] getSharedConstants(java.lang.Class)>(r0);

        if r2 != null goto label3;

        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not an enum type");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label3:
        i0 = lengthof r2;

        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        r3 = r2[i1];

        $r11 = virtualinvoke r3.<java.lang.Enum: java.lang.String name()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label5;

        return r3;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a constant in ");

        $r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;
    }

    protected final java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Enum r0;
        java.lang.CloneNotSupportedException $r1;

        r0 := @this: java.lang.Enum;

        $r1 = new java.lang.CloneNotSupportedException;

        specialinvoke $r1.<java.lang.CloneNotSupportedException: void <init>(java.lang.String)>("Enums may not be cloned");

        throw $r1;
    }

    public final int compareTo(java.lang.Enum)
    {
        java.lang.Enum r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: java.lang.Enum;

        r1 := @parameter0: java.lang.Enum;

        $i1 = r0.<java.lang.Enum: int ordinal>;

        $i0 = r1.<java.lang.Enum: int ordinal>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.lang.Enum r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.lang.Enum;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Enum) r1;

        $i0 = virtualinvoke r0.<java.lang.Enum: int compareTo(java.lang.Enum)>($r2);

        return $i0;
    }

    public final boolean equals(java.lang.Object)
    {
        java.lang.Enum r0;
        java.lang.Object r1;

        r0 := @this: java.lang.Enum;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected final void finalize()
    {
        java.lang.Enum r0;

        r0 := @this: java.lang.Enum;

        return;
    }

    public final java.lang.Class getDeclaringClass()
    {
        java.lang.Enum r0;
        java.lang.Class r1, r2;

        r0 := @this: java.lang.Enum;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        if class "java/lang/Enum" != r2 goto label1;

        return r1;

     label1:
        return r2;
    }

    public final int hashCode()
    {
        java.lang.Enum r0;
        int i0, i1, $i2;
        java.lang.String $r1, $r2;

        r0 := @this: java.lang.Enum;

        i0 = r0.<java.lang.Enum: int ordinal>;

        $r1 = r0.<java.lang.Enum: java.lang.String name>;

        if $r1 != null goto label2;

        i1 = 0;

     label1:
        $i2 = i1 + i0;

        return $i2;

     label2:
        $r2 = r0.<java.lang.Enum: java.lang.String name>;

        i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        goto label1;
    }

    public final java.lang.String name()
    {
        java.lang.Enum r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Enum;

        $r1 = r0.<java.lang.Enum: java.lang.String name>;

        return $r1;
    }

    public final int ordinal()
    {
        java.lang.Enum r0;
        int $i0;

        r0 := @this: java.lang.Enum;

        $i0 = r0.<java.lang.Enum: int ordinal>;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Enum r0;
        java.lang.String $r1;

        r0 := @this: java.lang.Enum;

        $r1 = r0.<java.lang.Enum: java.lang.String name>;

        return $r1;
    }
}
