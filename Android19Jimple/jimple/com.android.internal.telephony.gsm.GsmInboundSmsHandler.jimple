public class com.android.internal.telephony.gsm.GsmInboundSmsHandler extends com.android.internal.telephony.InboundSmsHandler
{
    private final com.android.internal.telephony.gsm.UsimDataDownloadHandler mDataDownloadHandler;

    private void <init>(android.content.Context, com.android.internal.telephony.SmsStorageMonitor, com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.gsm.GsmInboundSmsHandler r0;
        android.content.Context r1;
        com.android.internal.telephony.SmsStorageMonitor r2;
        com.android.internal.telephony.PhoneBase r3;
        com.android.internal.telephony.gsm.GsmCellBroadcastHandler $r4;
        com.android.internal.telephony.CommandsInterface $r5, $r8;
        android.os.Handler $r6;
        com.android.internal.telephony.gsm.UsimDataDownloadHandler $r7;

        r0 := @this: com.android.internal.telephony.gsm.GsmInboundSmsHandler;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.telephony.SmsStorageMonitor;

        r3 := @parameter2: com.android.internal.telephony.PhoneBase;

        $r4 = staticinvoke <com.android.internal.telephony.gsm.GsmCellBroadcastHandler: com.android.internal.telephony.gsm.GsmCellBroadcastHandler makeGsmCellBroadcastHandler(android.content.Context,com.android.internal.telephony.PhoneBase)>(r1, r3);

        specialinvoke r0.<com.android.internal.telephony.InboundSmsHandler: void <init>(java.lang.String,android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase,com.android.internal.telephony.CellBroadcastHandler)>("GsmInboundSmsHandler", r1, r2, r3, $r4);

        $r5 = r3.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r6 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: android.os.Handler getHandler()>();

        interfaceinvoke $r5.<com.android.internal.telephony.CommandsInterface: void setOnNewGsmSms(android.os.Handler,int,java.lang.Object)>($r6, 1, null);

        $r7 = new com.android.internal.telephony.gsm.UsimDataDownloadHandler;

        $r8 = r3.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        specialinvoke $r7.<com.android.internal.telephony.gsm.UsimDataDownloadHandler: void <init>(com.android.internal.telephony.CommandsInterface)>($r8);

        r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.gsm.UsimDataDownloadHandler mDataDownloadHandler> = $r7;

        return;
    }

    public static com.android.internal.telephony.gsm.GsmInboundSmsHandler makeInboundSmsHandler(android.content.Context, com.android.internal.telephony.SmsStorageMonitor, com.android.internal.telephony.PhoneBase)
    {
        android.content.Context r0;
        com.android.internal.telephony.SmsStorageMonitor r1;
        com.android.internal.telephony.PhoneBase r2;
        com.android.internal.telephony.gsm.GsmInboundSmsHandler r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.internal.telephony.SmsStorageMonitor;

        r2 := @parameter2: com.android.internal.telephony.PhoneBase;

        $r4 = new com.android.internal.telephony.gsm.GsmInboundSmsHandler;

        specialinvoke $r4.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void <init>(android.content.Context,com.android.internal.telephony.SmsStorageMonitor,com.android.internal.telephony.PhoneBase)>(r0, r1, r2);

        r3 = $r4;

        virtualinvoke r3.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void start()>();

        return r3;
    }

    private static int resultToCause(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label2;
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        return 255;

     label2:
        return 0;

     label3:
        return 211;
    }

    protected void acknowledgeLastIncomingSms(boolean, int, android.os.Message)
    {
        com.android.internal.telephony.gsm.GsmInboundSmsHandler r0;
        boolean z0;
        int i0, $i1;
        android.os.Message r1;
        com.android.internal.telephony.PhoneBase $r2;
        com.android.internal.telephony.CommandsInterface $r3;

        r0 := @this: com.android.internal.telephony.gsm.GsmInboundSmsHandler;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.PhoneBase mPhone>;

        $r3 = $r2.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $i1 = staticinvoke <com.android.internal.telephony.gsm.GsmInboundSmsHandler: int resultToCause(int)>(i0);

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void acknowledgeLastIncomingGsmSms(boolean,int,android.os.Message)>(z0, $i1, r1);

        return;
    }

    protected int dispatchMessageRadioSpecific(com.android.internal.telephony.SmsMessageBase)
    {
        com.android.internal.telephony.gsm.GsmInboundSmsHandler r0;
        com.android.internal.telephony.SmsMessageBase r1;
        com.android.internal.telephony.gsm.SmsMessage r2;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder r3, r4, $r10, $r11, $r14, $r15;
        com.android.internal.telephony.uicc.UsimServiceTable r5;
        com.android.internal.telephony.SmsStorageMonitor $r6;
        com.android.internal.telephony.SmsConstants$MessageClass $r7, $r9;
        int $i0, $i1;
        com.android.internal.telephony.PhoneBase $r8, $r12, $r16;
        java.lang.String $r13, $r17;
        com.android.internal.telephony.gsm.UsimDataDownloadHandler $r18;

        r0 := @this: com.android.internal.telephony.gsm.GsmInboundSmsHandler;

        r1 := @parameter0: com.android.internal.telephony.SmsMessageBase;

        r2 = (com.android.internal.telephony.gsm.SmsMessage) r1;

        $z4 = virtualinvoke r2.<com.android.internal.telephony.gsm.SmsMessage: boolean isTypeZero()>();

        if $z4 == 0 goto label2;

        virtualinvoke r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void log(java.lang.String)>("Received short message type 0, Don\'t display or store it. Send Ack");

     label1:
        return 1;

     label2:
        $z5 = virtualinvoke r2.<com.android.internal.telephony.gsm.SmsMessage: boolean isUsimDataDownload()>();

        if $z5 == 0 goto label3;

        $r16 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.PhoneBase mPhone>;

        r5 = virtualinvoke $r16.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.uicc.UsimServiceTable getUsimServiceTable()>();

        $r18 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.gsm.UsimDataDownloadHandler mDataDownloadHandler>;

        $i1 = virtualinvoke $r18.<com.android.internal.telephony.gsm.UsimDataDownloadHandler: int handleUsimDataDownload(com.android.internal.telephony.uicc.UsimServiceTable,com.android.internal.telephony.gsm.SmsMessage)>(r5, r2);

        return $i1;

     label3:
        $z6 = virtualinvoke r2.<com.android.internal.telephony.gsm.SmsMessage: boolean isMWISetMessage()>();

        if $z6 == 0 goto label6;

        $r12 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.PhoneBase mPhone>;

        virtualinvoke $r12.<com.android.internal.telephony.PhoneBase: void setVoiceMessageWaiting(int,int)>(1, -1);

        z1 = virtualinvoke r2.<com.android.internal.telephony.gsm.SmsMessage: boolean isMwiDontStore()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received voice mail indicator set SMS shouldStore=");

        z3 = 0;

        if z1 != 0 goto label4;

        z3 = 1;

     label4:
        $r15 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void log(java.lang.String)>($r17);

     label5:
        if z1 != 0 goto label1;

        $r6 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.SmsStorageMonitor mStorageMonitor>;

        $z7 = virtualinvoke $r6.<com.android.internal.telephony.SmsStorageMonitor: boolean isStorageAvailable()>();

        if $z7 != 0 goto label8;

        $r7 = virtualinvoke r2.<com.android.internal.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsConstants$MessageClass getMessageClass()>();

        $r9 = <com.android.internal.telephony.SmsConstants$MessageClass: com.android.internal.telephony.SmsConstants$MessageClass CLASS_0>;

        if $r7 == $r9 goto label8;

        return 3;

     label6:
        z0 = virtualinvoke r2.<com.android.internal.telephony.gsm.SmsMessage: boolean isMWIClearMessage()>();

        z1 = 0;

        if z0 == 0 goto label5;

        $r8 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.PhoneBase mPhone>;

        virtualinvoke $r8.<com.android.internal.telephony.PhoneBase: void setVoiceMessageWaiting(int,int)>(1, 0);

        z1 = virtualinvoke r2.<com.android.internal.telephony.gsm.SmsMessage: boolean isMwiDontStore()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received voice mail indicator clear SMS shouldStore=");

        z2 = 0;

        if z1 != 0 goto label7;

        z2 = 1;

     label7:
        $r11 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void log(java.lang.String)>($r13);

        goto label5;

     label8:
        $i0 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>(r1);

        return $i0;
    }

    protected boolean is3gpp2()
    {
        com.android.internal.telephony.gsm.GsmInboundSmsHandler r0;

        r0 := @this: com.android.internal.telephony.gsm.GsmInboundSmsHandler;

        return 0;
    }

    protected void onQuitting()
    {
        com.android.internal.telephony.gsm.GsmInboundSmsHandler r0;
        com.android.internal.telephony.PhoneBase $r1;
        com.android.internal.telephony.CommandsInterface $r2;
        android.os.Handler $r3;
        com.android.internal.telephony.CellBroadcastHandler $r4;

        r0 := @this: com.android.internal.telephony.gsm.GsmInboundSmsHandler;

        $r1 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.PhoneBase mPhone>;

        $r2 = $r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r3 = virtualinvoke r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: android.os.Handler getHandler()>();

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unSetOnNewGsmSms(android.os.Handler)>($r3);

        $r4 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.CellBroadcastHandler mCellBroadcastHandler>;

        virtualinvoke $r4.<com.android.internal.telephony.CellBroadcastHandler: void dispose()>();

        virtualinvoke r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void log(java.lang.String)>("unregistered for 3GPP SMS");

        specialinvoke r0.<com.android.internal.telephony.InboundSmsHandler: void onQuitting()>();

        return;
    }

    protected void onUpdatePhoneObject(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.gsm.GsmInboundSmsHandler r0;
        com.android.internal.telephony.PhoneBase r1;
        com.android.internal.telephony.CellBroadcastHandler $r2;
        android.content.Context $r3;
        com.android.internal.telephony.gsm.GsmCellBroadcastHandler $r4;

        r0 := @this: com.android.internal.telephony.gsm.GsmInboundSmsHandler;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        specialinvoke r0.<com.android.internal.telephony.InboundSmsHandler: void onUpdatePhoneObject(com.android.internal.telephony.PhoneBase)>(r1);

        virtualinvoke r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: void log(java.lang.String)>("onUpdatePhoneObject: dispose of old CellBroadcastHandler and make a new one");

        $r2 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.CellBroadcastHandler mCellBroadcastHandler>;

        virtualinvoke $r2.<com.android.internal.telephony.CellBroadcastHandler: void dispose()>();

        $r3 = r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: android.content.Context mContext>;

        $r4 = staticinvoke <com.android.internal.telephony.gsm.GsmCellBroadcastHandler: com.android.internal.telephony.gsm.GsmCellBroadcastHandler makeGsmCellBroadcastHandler(android.content.Context,com.android.internal.telephony.PhoneBase)>($r3, r1);

        r0.<com.android.internal.telephony.gsm.GsmInboundSmsHandler: com.android.internal.telephony.CellBroadcastHandler mCellBroadcastHandler> = $r4;

        return;
    }
}
