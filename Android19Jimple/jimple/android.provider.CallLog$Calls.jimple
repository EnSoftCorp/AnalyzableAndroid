public class android.provider.CallLog$Calls extends java.lang.Object implements android.provider.BaseColumns
{
    public static final java.lang.String ALLOW_VOICEMAILS_PARAM_KEY;
    public static final java.lang.String CACHED_FORMATTED_NUMBER;
    public static final java.lang.String CACHED_LOOKUP_URI;
    public static final java.lang.String CACHED_MATCHED_NUMBER;
    public static final java.lang.String CACHED_NAME;
    public static final java.lang.String CACHED_NORMALIZED_NUMBER;
    public static final java.lang.String CACHED_NUMBER_LABEL;
    public static final java.lang.String CACHED_NUMBER_TYPE;
    public static final java.lang.String CACHED_PHOTO_ID;
    public static final android.net.Uri CONTENT_FILTER_URI;
    public static final java.lang.String CONTENT_ITEM_TYPE;
    public static final java.lang.String CONTENT_TYPE;
    public static final android.net.Uri CONTENT_URI;
    public static final android.net.Uri CONTENT_URI_WITH_VOICEMAIL;
    public static final java.lang.String COUNTRY_ISO;
    public static final java.lang.String DATE;
    public static final java.lang.String DEFAULT_SORT_ORDER;
    public static final java.lang.String DURATION;
    public static final java.lang.String GEOCODED_LOCATION;
    public static final int INCOMING_TYPE;
    public static final java.lang.String IS_READ;
    public static final java.lang.String LIMIT_PARAM_KEY;
    public static final int MISSED_TYPE;
    public static final java.lang.String NEW;
    public static final java.lang.String NUMBER;
    public static final java.lang.String NUMBER_PRESENTATION;
    public static final java.lang.String OFFSET_PARAM_KEY;
    public static final int OUTGOING_TYPE;
    public static final int PRESENTATION_ALLOWED;
    public static final int PRESENTATION_PAYPHONE;
    public static final int PRESENTATION_RESTRICTED;
    public static final int PRESENTATION_UNKNOWN;
    public static final java.lang.String TYPE;
    public static final int VOICEMAIL_TYPE;
    public static final java.lang.String VOICEMAIL_URI;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1, $r2, $r5;
        android.net.Uri$Builder $r3, $r4;

        <android.provider.CallLog$Calls: java.lang.String VOICEMAIL_URI> = "voicemail_uri";

        <android.provider.CallLog$Calls: int VOICEMAIL_TYPE> = 4;

        <android.provider.CallLog$Calls: java.lang.String TYPE> = "type";

        <android.provider.CallLog$Calls: int PRESENTATION_UNKNOWN> = 3;

        <android.provider.CallLog$Calls: int PRESENTATION_RESTRICTED> = 2;

        <android.provider.CallLog$Calls: int PRESENTATION_PAYPHONE> = 4;

        <android.provider.CallLog$Calls: int PRESENTATION_ALLOWED> = 1;

        <android.provider.CallLog$Calls: int OUTGOING_TYPE> = 2;

        <android.provider.CallLog$Calls: java.lang.String OFFSET_PARAM_KEY> = "offset";

        <android.provider.CallLog$Calls: java.lang.String NUMBER_PRESENTATION> = "presentation";

        <android.provider.CallLog$Calls: java.lang.String NUMBER> = "number";

        <android.provider.CallLog$Calls: java.lang.String NEW> = "new";

        <android.provider.CallLog$Calls: int MISSED_TYPE> = 3;

        <android.provider.CallLog$Calls: java.lang.String LIMIT_PARAM_KEY> = "limit";

        <android.provider.CallLog$Calls: java.lang.String IS_READ> = "is_read";

        <android.provider.CallLog$Calls: int INCOMING_TYPE> = 1;

        <android.provider.CallLog$Calls: java.lang.String GEOCODED_LOCATION> = "geocoded_location";

        <android.provider.CallLog$Calls: java.lang.String DURATION> = "duration";

        <android.provider.CallLog$Calls: java.lang.String DEFAULT_SORT_ORDER> = "date DESC";

        <android.provider.CallLog$Calls: java.lang.String DATE> = "date";

        <android.provider.CallLog$Calls: java.lang.String COUNTRY_ISO> = "countryiso";

        <android.provider.CallLog$Calls: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/calls";

        <android.provider.CallLog$Calls: java.lang.String CONTENT_ITEM_TYPE> = "vnd.android.cursor.item/calls";

        <android.provider.CallLog$Calls: java.lang.String CACHED_PHOTO_ID> = "photo_id";

        <android.provider.CallLog$Calls: java.lang.String CACHED_NUMBER_TYPE> = "numbertype";

        <android.provider.CallLog$Calls: java.lang.String CACHED_NUMBER_LABEL> = "numberlabel";

        <android.provider.CallLog$Calls: java.lang.String CACHED_NORMALIZED_NUMBER> = "normalized_number";

        <android.provider.CallLog$Calls: java.lang.String CACHED_NAME> = "name";

        <android.provider.CallLog$Calls: java.lang.String CACHED_MATCHED_NUMBER> = "matched_number";

        <android.provider.CallLog$Calls: java.lang.String CACHED_LOOKUP_URI> = "lookup_uri";

        <android.provider.CallLog$Calls: java.lang.String CACHED_FORMATTED_NUMBER> = "formatted_number";

        <android.provider.CallLog$Calls: java.lang.String ALLOW_VOICEMAILS_PARAM_KEY> = "allow_voicemails";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://call_log/calls");

        <android.provider.CallLog$Calls: android.net.Uri CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://call_log/calls/filter");

        <android.provider.CallLog$Calls: android.net.Uri CONTENT_FILTER_URI> = $r1;

        $r2 = <android.provider.CallLog$Calls: android.net.Uri CONTENT_URI>;

        $r3 = virtualinvoke $r2.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("allow_voicemails", "true");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        <android.provider.CallLog$Calls: android.net.Uri CONTENT_URI_WITH_VOICEMAIL> = $r5;

        return;
    }

    public void <init>()
    {
        android.provider.CallLog$Calls r0;

        r0 := @this: android.provider.CallLog$Calls;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri addCall(com.android.internal.telephony.CallerInfo, android.content.Context, java.lang.String, int, int, long, int)
    {
        com.android.internal.telephony.CallerInfo r0;
        android.content.Context r1;
        java.lang.String r2, r6, r12, $r23, $r24, $r25, $r27, $r32, $r37, $r39, $r41;
        int i0, i1, i3, $i5, $i6, $i11, $i13, $i15;
        long l2, $l7, $l9, $l10, $l14;
        android.content.ContentResolver r3;
        byte b4, $b8;
        android.content.ContentValues r4, $r16, $r35;
        android.net.Uri r5, r7, r14, $r21, $r26, $r29, $r36;
        java.lang.String[] r8, r9, r13, r15, $r28, $r34;
        java.lang.Throwable r10, $r40;
        android.database.Cursor r11;
        boolean $z0, $z1;
        java.lang.Integer $r17, $r18, $r20, $r38, $r42;
        java.lang.Long $r19, $r22;
        android.net.Uri$Builder $r30, $r31, $r33;

        r0 := @parameter0: com.android.internal.telephony.CallerInfo;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        i3 := @parameter6: int;

        r3 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        b4 = 1;

        $i6 = <com.android.internal.telephony.PhoneConstants: int PRESENTATION_RESTRICTED>;

        if i0 != $i6 goto label09;

        b4 = 2;

     label01:
        if b4 == 1 goto label02;

        r2 = "";

        if r0 == null goto label02;

        r0.<com.android.internal.telephony.CallerInfo: java.lang.String name> = "";

     label02:
        $r16 = new android.content.ContentValues;

        specialinvoke $r16.<android.content.ContentValues: void <init>(int)>(6);

        r4 = $r16;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("number", r2);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b4);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("presentation", $r17);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("type", $r18);

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date", $r19);

        $l7 = (long) i3;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("duration", $r22);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("new", $r20);

        if i1 != 3 goto label03;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("is_read", $r42);

     label03:
        if r0 == null goto label04;

        $r37 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String name>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("name", $r37);

        $i13 = r0.<com.android.internal.telephony.CallerInfo: int numberType>;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("numbertype", $r38);

        $r41 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String numberLabel>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("numberlabel", $r41);

     label04:
        if r0 == null goto label08;

        $l9 = r0.<com.android.internal.telephony.CallerInfo: long person_id>;

        $b8 = $l9 cmp 0L;

        if $b8 <= 0 goto label08;

        $r23 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String normalizedNumber>;

        if $r23 == null goto label12;

        r12 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String normalizedNumber>;

        r14 = <android.provider.ContactsContract$CommonDataKinds$Phone: android.net.Uri CONTENT_URI>;

        $r34 = newarray (java.lang.String)[1];

        $r34[0] = "_id";

        r13 = $r34;

        r15 = newarray (java.lang.String)[2];

        $l14 = r0.<com.android.internal.telephony.CallerInfo: long person_id>;

        $r39 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l14);

        r15[0] = $r39;

        r15[1] = r12;

        r11 = virtualinvoke r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r14, r13, "contact_id =? AND data4 =?", r15, null);

     label05:
        if r11 == null goto label08;

     label06:
        $i11 = interfaceinvoke r11.<android.database.Cursor: int getCount()>();

        if $i11 <= 0 goto label07;

        $z1 = interfaceinvoke r11.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label07;

        $r29 = <android.provider.ContactsContract$DataUsageFeedback: android.net.Uri FEEDBACK_URI>;

        $r33 = virtualinvoke $r29.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r32 = interfaceinvoke r11.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r31 = virtualinvoke $r33.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r32);

        $r30 = virtualinvoke $r31.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("type", "call");

        $r36 = virtualinvoke $r30.<android.net.Uri$Builder: android.net.Uri build()>();

        $r35 = new android.content.ContentValues;

        specialinvoke $r35.<android.content.ContentValues: void <init>()>();

        virtualinvoke r3.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r36, $r35, null, null);

     label07:
        interfaceinvoke r11.<android.database.Cursor: void close()>();

     label08:
        $r21 = <android.provider.CallLog$Calls: android.net.Uri CONTENT_URI>;

        r5 = virtualinvoke r3.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r21, r4);

        staticinvoke <android.provider.CallLog$Calls: void removeExpiredEntries(android.content.Context)>(r1);

        return r5;

     label09:
        $i5 = <com.android.internal.telephony.PhoneConstants: int PRESENTATION_PAYPHONE>;

        if i0 != $i5 goto label10;

        b4 = 4;

        goto label01;

     label10:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label11;

        $i15 = <com.android.internal.telephony.PhoneConstants: int PRESENTATION_UNKNOWN>;

        if i0 != $i15 goto label01;

     label11:
        b4 = 3;

        goto label01;

     label12:
        $r25 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber>;

        if $r25 == null goto label14;

        r6 = r0.<com.android.internal.telephony.CallerInfo: java.lang.String phoneNumber>;

     label13:
        $r26 = <android.provider.ContactsContract$CommonDataKinds$Callable: android.net.Uri CONTENT_FILTER_URI>;

        $r24 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>(r6);

        r7 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r26, $r24);

        $r28 = newarray (java.lang.String)[1];

        $r28[0] = "_id";

        r8 = $r28;

        r9 = newarray (java.lang.String)[1];

        $l10 = r0.<com.android.internal.telephony.CallerInfo: long person_id>;

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l10);

        r9[0] = $r27;

        r11 = virtualinvoke r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r7, r8, "contact_id =?", r9, null);

        goto label05;

     label14:
        r6 = r2;

        goto label13;

     label15:
        $r40 := @caughtexception;

        r10 = $r40;

        interfaceinvoke r11.<android.database.Cursor: void close()>();

        throw r10;

        catch java.lang.Throwable from label06 to label07 with label15;
    }

    public static java.lang.String getLastOutgoingCall(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver r1;
        android.database.Cursor r2;
        java.lang.Throwable r3, $r8;
        java.lang.String r4, r5;
        java.lang.String[] $r6;
        android.net.Uri $r7;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r2 = null;

     label1:
        $r7 = <android.provider.CallLog$Calls: android.net.Uri CONTENT_URI>;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "number";

        r2 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r7, $r6, "type = 2", null, "date DESC LIMIT 1");

     label2:
        if r2 == null goto label4;

     label3:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label6;

     label4:
        r4 = "";

        if r2 == null goto label5;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label5:
        return r4;

     label6:
        r5 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(0);

     label7:
        r4 = r5;

        if r2 == null goto label5;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return r4;

     label8:
        $r8 := @caughtexception;

        r3 = $r8;

        if r2 == null goto label9;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    private static void removeExpiredEntries(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver $r1;
        android.net.Uri $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = <android.provider.CallLog$Calls: android.net.Uri CONTENT_URI>;

        virtualinvoke $r1.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r2, "_id IN (SELECT _id FROM calls ORDER BY date DESC LIMIT -1 OFFSET 500)", null);

        return;
    }
}
