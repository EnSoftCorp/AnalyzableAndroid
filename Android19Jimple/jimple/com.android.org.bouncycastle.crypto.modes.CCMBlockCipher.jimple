public class com.android.org.bouncycastle.crypto.modes.CCMBlockCipher extends java.lang.Object implements com.android.org.bouncycastle.crypto.modes.AEADBlockCipher
{
    private java.io.ByteArrayOutputStream associatedText;
    private int blockSize;
    private com.android.org.bouncycastle.crypto.BlockCipher cipher;
    private java.io.ByteArrayOutputStream data;
    private boolean forEncryption;
    private byte[] initialAssociatedText;
    private com.android.org.bouncycastle.crypto.CipherParameters keyParam;
    private byte[] macBlock;
    private int macSize;
    private byte[] nonce;

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        java.io.ByteArrayOutputStream $r2, $r3;
        int $i0, $i1, $i2;
        byte[] $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream associatedText> = $r2;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream data> = $r3;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher> = r1;

        $i0 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize> = $i0;

        $i1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        $r4 = newarray (byte)[$i1];

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock> = $r4;

        $i2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        if $i2 == 16 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cipher required with a block size of 16.");

        throw $r5;

     label1:
        return;
    }

    private int calculateMac(byte[], int, int, byte[])
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, r2, r4, r5, $r9, $r10, $r11, $r13, $r15, $r16;
        int i0, i1, i2, i3, i4, i6, i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i24, $i25, $i26, $i27, $i29, $i31, $i33, $i34, $i36, $i37, $i38, $i39, $i41, $i46, $i47;
        com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac r3, $r6;
        byte b5, $b10, $b17, $b22, $b23, $b28, $b30, $b32, $b35, $b40, $b42, $b43, $b44, $b45, $b48;
        com.android.org.bouncycastle.crypto.BlockCipher $r7;
        boolean $z0, $z1;
        com.android.org.bouncycastle.crypto.CipherParameters $r8;
        java.io.ByteArrayOutputStream $r12, $r14;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        $r6 = new com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac;

        $r7 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $i8 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i9 = 8 * $i8;

        specialinvoke $r6.<com.android.org.bouncycastle.crypto.macs.CBCBlockCipherMac: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,int)>($r7, $i9);

        r3 = $r6;

        $r8 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.CipherParameters keyParam>;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void init(com.android.org.bouncycastle.crypto.CipherParameters)>($r8);

        r4 = newarray (byte)[16];

        $z0 = specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean hasAssociatedText()>();

        if $z0 == 0 goto label1;

        $b42 = r4[0];

        $b43 = 64 | $b42;

        $b48 = (byte) $b43;

        r4[0] = $b48;

     label1:
        $b10 = r4[0];

        $i12 = interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: int getMacSize()>();

        $i11 = -2 + $i12;

        $i14 = $i11 / 2;

        $i13 = 7 & $i14;

        $i16 = $i13 << 3;

        $i15 = $b10 | $i16;

        $b17 = (byte) $i15;

        r4[0] = $b17;

        $b23 = r4[0];

        $r9 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i20 = lengthof $r9;

        $i21 = 15 - $i20;

        $i18 = -1 + $i21;

        $i19 = 7 & $i18;

        $i24 = $b23 | $i19;

        $b22 = (byte) $i24;

        r4[0] = $b22;

        $r11 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $r10 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i26 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r4, 1, $i26);

        i2 = i1;

        i3 = 1;

     label2:
        if i2 <= 0 goto label3;

        $i46 = lengthof r4;

        $i41 = $i46 - i3;

        $i47 = i2 & 255;

        $b40 = (byte) $i47;

        r4[$i41] = $b40;

        i2 = i2 >>> 8;

        i3 = i3 + 1;

        goto label2;

     label3:
        $i25 = lengthof r4;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r4, 0, $i25);

        $z1 = specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean hasAssociatedText()>();

        if $z1 == 0 goto label9;

        i4 = specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int getAssociatedTextLength()>();

        if i4 >= 65280 goto label8;

        $i38 = i4 >> 8;

        $b44 = (byte) $i38;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b44);

        $b45 = (byte) i4;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b45);

        b5 = 2;

     label4:
        $r13 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        if $r13 == null goto label5;

        $r15 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        $r16 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        $i39 = lengthof $r16;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte[],int,int)>($r15, 0, $i39);

     label5:
        $r12 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream associatedText>;

        $i34 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: int size()>();

        if $i34 <= 0 goto label6;

        $r14 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream associatedText>;

        r5 = virtualinvoke $r14.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i36 = lengthof r5;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r5, 0, $i36);

     label6:
        $i37 = b5 + i4;

        i6 = $i37 % 16;

        if i6 == 0 goto label9;

        i7 = i6;

     label7:
        if i7 == 16 goto label9;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>(0);

        i7 = i7 + 1;

        goto label7;

     label8:
        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>(-1);

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>(-2);

        $i27 = i4 >> 24;

        $b28 = (byte) $i27;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b28);

        $i33 = i4 >> 16;

        $b32 = (byte) $i33;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b32);

        $i31 = i4 >> 8;

        $b30 = (byte) $i31;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b30);

        $b35 = (byte) i4;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>($b35);

        b5 = 6;

        goto label4;

     label9:
        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r1, i0, i1);

        $i29 = interfaceinvoke r3.<com.android.org.bouncycastle.crypto.Mac: int doFinal(byte[],int)>(r2, 0);

        return $i29;
    }

    private int getAssociatedTextLength()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        int i0, i1, $i2;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2, $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream associatedText>;

        i0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: int size()>();

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        if $r2 != null goto label2;

        i1 = 0;

     label1:
        $i2 = i1 + i0;

        return $i2;

     label2:
        $r3 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText>;

        i1 = lengthof $r3;

        goto label1;
    }

    private boolean hasAssociatedText()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $i0 = specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int getAssociatedTextLength()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int doFinal(byte[], int) throws java.lang.IllegalStateException, com.android.org.bouncycastle.crypto.InvalidCipherTextException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, r2, r3;
        int i0, $i1, $i2, $i3;
        java.io.ByteArrayOutputStream $r4;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r4 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream data>;

        r2 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i1 = lengthof r2;

        r3 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] processPacket(byte[],int,int)>(r2, 0, $i1);

        $i2 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, i0, $i2);

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: void reset()>();

        $i3 = lengthof r3;

        return $i3;
    }

    public java.lang.String getAlgorithmName()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        java.lang.StringBuilder $r1, $r4, $r5;
        com.android.org.bouncycastle.crypto.BlockCipher $r2;
        java.lang.String $r3, $r6;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/CCM");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public byte[] getMac()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $i0 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        r1 = newarray (byte)[$i0];

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        return r1;
    }

    public int getOutputSize(int)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.io.ByteArrayOutputStream $r1;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream data>;

        $i2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: int size()>();

        i1 = i0 + $i2;

        $z0 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $i6 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i7 = i1 + $i6;

        return $i7;

     label1:
        $i3 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        if i1 >= $i3 goto label2;

        return 0;

     label2:
        $i4 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i5 = i1 - $i4;

        return $i5;
    }

    public com.android.org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        return $r1;
    }

    public int getUpdateOutputSize(int)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        int i0;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        i0 := @parameter0: int;

        return 0;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        boolean z0, $z1, $z2;
        com.android.org.bouncycastle.crypto.CipherParameters r1, $r7;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV r2;
        com.android.org.bouncycastle.crypto.params.AEADParameters r3;
        java.lang.IllegalArgumentException $r4, $r9;
        byte[] $r5, $r6, $r8, $r10, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.org.bouncycastle.crypto.params.KeyParameter $r14;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean forEncryption> = z0;

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.AEADParameters;

        if $z1 == 0 goto label3;

        r3 = (com.android.org.bouncycastle.crypto.params.AEADParameters) r1;

        $r12 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.params.AEADParameters: byte[] getNonce()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce> = $r12;

        $r13 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.params.AEADParameters: byte[] getAssociatedText()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText> = $r13;

        $i4 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.params.AEADParameters: int getMacSize()>();

        $i5 = $i4 / 8;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize> = $i5;

        $r14 = virtualinvoke r3.<com.android.org.bouncycastle.crypto.params.AEADParameters: com.android.org.bouncycastle.crypto.params.KeyParameter getKey()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.CipherParameters keyParam> = $r14;

     label1:
        $r8 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        if $r8 == null goto label2;

        $r10 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i2 = lengthof $r10;

        if $i2 < 7 goto label2;

        $r11 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i3 = lengthof $r11;

        if $i3 <= 13 goto label5;

     label2:
        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("nonce must have length from 7 to 13 octets");

        throw $r9;

     label3:
        $z2 = r1 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        if $z2 == 0 goto label4;

        r2 = (com.android.org.bouncycastle.crypto.params.ParametersWithIV) r1;

        $r5 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce> = $r5;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] initialAssociatedText> = null;

        $r6 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $i0 = lengthof $r6;

        $i1 = $i0 / 2;

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize> = $i1;

        $r7 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: com.android.org.bouncycastle.crypto.CipherParameters getParameters()>();

        r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.CipherParameters keyParam> = $r7;

        goto label1;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid parameters passed to CCM");

        throw $r4;

     label5:
        return;
    }

    public void processAADByte(byte)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte b0;
        java.io.ByteArrayOutputStream $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream associatedText>;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>(b0);

        return;
    }

    public void processAADBytes(byte[], int, int)
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1;
        int i0, i1;
        java.io.ByteArrayOutputStream $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream associatedText>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public int processByte(byte, byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte b0;
        byte[] r1;
        int i1;
        java.io.ByteArrayOutputStream $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream data>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>(b0);

        return 0;
    }

    public int processBytes(byte[], int, int, byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, r2;
        int i0, i1, i2;
        java.io.ByteArrayOutputStream $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $r3 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream data>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return 0;
    }

    public byte[] processPacket(byte[], int, int) throws java.lang.IllegalStateException, com.android.org.bouncycastle.crypto.InvalidCipherTextException
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        byte[] r1, r2, r5, r6, r7, r8, $r9, $r11, $r12, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i36, $i39, $i40, $i41, $i43, $i44, $i45, $i46, $i47, $i48, $i50, $i51, $i53, $i54;
        com.android.org.bouncycastle.crypto.modes.SICBlockCipher r3, $r15;
        boolean z0, $z1, $z2;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV r4, $r13;
        com.android.org.bouncycastle.crypto.CipherParameters $r10, $r14;
        byte $b14;
        com.android.org.bouncycastle.crypto.BlockCipher $r16;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException $r23;
        java.lang.IllegalStateException $r28, $r29;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r10 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.CipherParameters keyParam>;

        if $r10 != null goto label1;

        $r29 = new java.lang.IllegalStateException;

        specialinvoke $r29.<java.lang.IllegalStateException: void <init>(java.lang.String)>("CCM cipher unitialized.");

        throw $r29;

     label1:
        $r9 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i10 = lengthof $r9;

        i2 = 15 - $i10;

        if i2 >= 4 goto label2;

        $i53 = i2 * 8;

        $i50 = 1 << $i53;

        if i1 < $i50 goto label2;

        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("CCM packet too large for choice of q.");

        throw $r28;

     label2:
        $i9 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        r2 = newarray (byte)[$i9];

        $i12 = i2 - 1;

        $i11 = 7 & $i12;

        $b14 = (byte) $i11;

        r2[0] = $b14;

        $r11 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $r12 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] nonce>;

        $i13 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, r2, 1, $i13);

        $r15 = new com.android.org.bouncycastle.crypto.modes.SICBlockCipher;

        $r16 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        specialinvoke $r15.<com.android.org.bouncycastle.crypto.modes.SICBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher)>($r16);

        r3 = $r15;

        z0 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean forEncryption>;

        $r13 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r14 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.CipherParameters keyParam>;

        specialinvoke $r13.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>($r14, r2);

        r4 = $r13;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(z0, r4);

        i3 = i0;

        i4 = 0;

        $z1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: boolean forEncryption>;

        if $z1 == 0 goto label6;

        $i36 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i41 = i1 + $i36;

        r5 = newarray (byte)[$i41];

        $r25 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int calculateMac(byte[],int,int,byte[])>(r1, i0, i1, $r25);

        $r24 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $r26 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r24, 0, $r26, 0);

     label3:
        $i39 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        $i40 = i1 - $i39;

        if i3 >= $i40 goto label4;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r1, i3, r5, i4);

        $i51 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        i4 = i4 + $i51;

        $i54 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        i3 = i3 + $i54;

        goto label3;

     label4:
        $i47 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        r8 = newarray (byte)[$i47];

        $i46 = i1 - i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, r8, 0, $i46);

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r8, 0, r8, 0);

        $i48 = i1 - i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r5, i4, $i48);

        $i44 = i1 - i3;

        i8 = i4 + $i44;

        $r27 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $i43 = lengthof r5;

        $i45 = $i43 - i8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r27, 0, r5, i8, $i45);

     label5:
        return r5;

     label6:
        $i17 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i15 = i1 - $i17;

        r5 = newarray (byte)[$i15];

        $i19 = i0 + i1;

        $i16 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        $i18 = $i19 - $i16;

        $r17 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $i20 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i18, $r17, 0, $i20);

        $r19 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $r20 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r19, 0, $r20, 0);

        i5 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int macSize>;

     label7:
        $r18 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        i6 = lengthof $r18;

        i7 = 0;

        if i5 == i6 goto label8;

        $r21 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $r21[i5] = 0;

        i5 = i5 + 1;

        goto label7;

     label8:
        $i24 = lengthof r5;

        $i25 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        $i23 = $i24 - $i25;

        if i7 >= $i23 goto label9;

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r1, i3, r5, i7);

        $i34 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        i7 = i7 + $i34;

        $i35 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        i3 = i3 + $i35;

        goto label8;

     label9:
        $i22 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        r6 = newarray (byte)[$i22];

        $i29 = lengthof r5;

        $i28 = $i29 - i7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, r6, 0, $i28);

        interfaceinvoke r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r6, 0, r6, 0);

        $i26 = lengthof r5;

        $i33 = $i26 - i7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r5, i7, $i33);

        $i32 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int blockSize>;

        r7 = newarray (byte)[$i32];

        $i31 = lengthof r5;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: int calculateMac(byte[],int,int,byte[])>(r5, 0, $i31, r7);

        $r22 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: byte[] macBlock>;

        $z2 = staticinvoke <com.android.org.bouncycastle.util.Arrays: boolean constantTimeAreEqual(byte[],byte[])>($r22, r7);

        if $z2 != 0 goto label5;

        $r23 = new com.android.org.bouncycastle.crypto.InvalidCipherTextException;

        specialinvoke $r23.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: void <init>(java.lang.String)>("mac check in CCM failed");

        throw $r23;
    }

    public void reset()
    {
        com.android.org.bouncycastle.crypto.modes.CCMBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher $r1;
        java.io.ByteArrayOutputStream $r2, $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.modes.CCMBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.BlockCipher: void reset()>();

        $r2 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream associatedText>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void reset()>();

        $r3 = r0.<com.android.org.bouncycastle.crypto.modes.CCMBlockCipher: java.io.ByteArrayOutputStream data>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void reset()>();

        return;
    }
}
