public class gov.nist.javax.sip.parser.AlertInfoParser extends gov.nist.javax.sip.parser.ParametersParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.AlertInfoParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.AlertInfoParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.AlertInfoParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.AlertInfoParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.AlertInfoParser r0;
        gov.nist.javax.sip.header.AlertInfoList r1, $r4;
        java.lang.Throwable r2, $r22;
        gov.nist.javax.sip.header.AlertInfo r3, $r6;
        boolean $z0, $z1, $z3;
        gov.nist.core.LexerCore $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r19, $r20;
        char $c0, $c1, $c2;
        java.lang.String $r10;
        gov.nist.javax.sip.parser.URLParser $r16;
        gov.nist.javax.sip.parser.Lexer $r18;
        gov.nist.javax.sip.address.GenericURI $r21;

        r0 := @this: gov.nist.javax.sip.parser.AlertInfoParser;

        $z0 = <gov.nist.javax.sip.parser.AlertInfoParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.AlertInfoParser: void dbg_enter(java.lang.String)>("AlertInfoParser.parse");

     label01:
        $r4 = new gov.nist.javax.sip.header.AlertInfoList;

        specialinvoke $r4.<gov.nist.javax.sip.header.AlertInfoList: void <init>()>();

        r1 = $r4;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.AlertInfoParser: void headerName(int)>(2061);

     label03:
        $r5 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label11;

        $r6 = new gov.nist.javax.sip.header.AlertInfo;

        specialinvoke $r6.<gov.nist.javax.sip.header.AlertInfo: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<gov.nist.javax.sip.header.AlertInfo: void setHeaderName(java.lang.String)>("Alert-Info");

     label04:
        $r7 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 60 goto label09;

        $r14 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

        $r16 = new gov.nist.javax.sip.parser.URLParser;

        $r19 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        $r18 = (gov.nist.javax.sip.parser.Lexer) $r19;

        specialinvoke $r16.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r18);

        $r21 = virtualinvoke $r16.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        virtualinvoke r3.<gov.nist.javax.sip.header.AlertInfo: void setAlertInfo(javax.sip.address.URI)>($r21);

        $r20 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(62);

     label05:
        $r11 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r3);

        virtualinvoke r1.<gov.nist.javax.sip.header.AlertInfoList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r3);

        $r12 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r12.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 != 44 goto label03;

        $r13 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

     label06:
        goto label04;

     label07:
        $r22 := @caughtexception;

        r2 = $r22;

        $z3 = <gov.nist.javax.sip.parser.AlertInfoParser: boolean debug>;

        if $z3 == 0 goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.parser.AlertInfoParser: void dbg_leave(java.lang.String)>("AlertInfoParser.parse");

     label08:
        throw r2;

     label09:
        $r9 = r0.<gov.nist.javax.sip.parser.AlertInfoParser: gov.nist.core.LexerCore lexer>;

        $r10 = virtualinvoke $r9.<gov.nist.core.LexerCore: java.lang.String byteStringNoSemicolon()>();

        virtualinvoke r3.<gov.nist.javax.sip.header.AlertInfo: void setAlertInfo(java.lang.String)>($r10);

     label10:
        goto label05;

     label11:
        $z1 = <gov.nist.javax.sip.parser.AlertInfoParser: boolean debug>;

        if $z1 == 0 goto label12;

        virtualinvoke r0.<gov.nist.javax.sip.parser.AlertInfoParser: void dbg_leave(java.lang.String)>("AlertInfoParser.parse");

     label12:
        return r1;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
    }
}
