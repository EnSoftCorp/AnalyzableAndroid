public class com.android.org.bouncycastle.crypto.StreamBlockCipher extends java.lang.Object implements com.android.org.bouncycastle.crypto.StreamCipher
{
    private com.android.org.bouncycastle.crypto.BlockCipher cipher;
    private byte[] oneByte;

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher)
    {
        com.android.org.bouncycastle.crypto.StreamBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        byte[] $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.StreamBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[1];

        r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: byte[] oneByte> = $r2;

        $i0 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        if $i0 == 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("block cipher block size != 1.");

        throw $r3;

     label1:
        r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher> = r1;

        return;
    }

    public java.lang.String getAlgorithmName()
    {
        com.android.org.bouncycastle.crypto.StreamBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher $r1;
        java.lang.String $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.StreamBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r2 = interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        return $r2;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.StreamBlockCipher r0;
        boolean z0;
        com.android.org.bouncycastle.crypto.CipherParameters r1;
        com.android.org.bouncycastle.crypto.BlockCipher $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.StreamBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        $r2 = r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.BlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(z0, r1);

        return;
    }

    public void processBytes(byte[], int, int, byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException
    {
        com.android.org.bouncycastle.crypto.StreamBlockCipher r0;
        byte[] r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        com.android.org.bouncycastle.crypto.BlockCipher $r3;
        com.android.org.bouncycastle.crypto.DataLengthException $r4;

        r0 := @this: com.android.org.bouncycastle.crypto.StreamBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $i5 = i2 + i1;

        $i4 = lengthof r2;

        if $i5 <= $i4 goto label1;

        $r4 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r4.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("output buffer too small in processBytes()");

        throw $r4;

     label1:
        i3 = 0;

     label2:
        if i3 == i1 goto label3;

        $r3 = r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $i7 = i0 + i3;

        $i6 = i2 + i3;

        interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r1, $i7, r2, $i6);

        i3 = i3 + 1;

        goto label2;

     label3:
        return;
    }

    public void reset()
    {
        com.android.org.bouncycastle.crypto.StreamBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.StreamBlockCipher;

        $r1 = r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.BlockCipher: void reset()>();

        return;
    }

    public byte returnByte(byte)
    {
        com.android.org.bouncycastle.crypto.StreamBlockCipher r0;
        byte b0, $b2;
        byte[] $r1, $r2, $r3, $r5;
        com.android.org.bouncycastle.crypto.BlockCipher $r4;

        r0 := @this: com.android.org.bouncycastle.crypto.StreamBlockCipher;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: byte[] oneByte>;

        $r1[0] = b0;

        $r4 = r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r3 = r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: byte[] oneByte>;

        $r2 = r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: byte[] oneByte>;

        interfaceinvoke $r4.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r3, 0, $r2, 0);

        $r5 = r0.<com.android.org.bouncycastle.crypto.StreamBlockCipher: byte[] oneByte>;

        $b2 = $r5[0];

        return $b2;
    }
}
