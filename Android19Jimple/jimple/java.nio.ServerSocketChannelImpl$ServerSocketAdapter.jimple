class java.nio.ServerSocketChannelImpl$ServerSocketAdapter extends java.net.ServerSocket
{
    private final java.nio.ServerSocketChannelImpl channelImpl;

    void <init>(java.nio.ServerSocketChannelImpl) throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.ServerSocketChannelImpl r1;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        r1 := @parameter0: java.nio.ServerSocketChannelImpl;

        specialinvoke r0.<java.net.ServerSocket: void <init>()>();

        r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl> = r1;

        return;
    }

    public java.net.Socket accept() throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.channels.SocketChannel r1;
        java.nio.ServerSocketChannelImpl $r2, $r3;
        boolean $z0;
        java.net.Socket $r4;
        java.nio.channels.IllegalBlockingModeException $r5, $r6;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        $r2 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        $z0 = staticinvoke <java.nio.ServerSocketChannelImpl: boolean access$000(java.nio.ServerSocketChannelImpl)>($r2);

        if $z0 != 0 goto label1;

        $r6 = new java.nio.channels.IllegalBlockingModeException;

        specialinvoke $r6.<java.nio.channels.IllegalBlockingModeException: void <init>()>();

        throw $r6;

     label1:
        $r3 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        r1 = virtualinvoke $r3.<java.nio.ServerSocketChannelImpl: java.nio.channels.SocketChannel accept()>();

        if r1 != null goto label2;

        $r5 = new java.nio.channels.IllegalBlockingModeException;

        specialinvoke $r5.<java.nio.channels.IllegalBlockingModeException: void <init>()>();

        throw $r5;

     label2:
        $r4 = virtualinvoke r1.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        return $r4;
    }

    public void bind(java.net.SocketAddress) throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.net.SocketAddress r1;
        java.nio.ServerSocketChannelImpl $r2;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        r1 := @parameter0: java.net.SocketAddress;

        specialinvoke r0.<java.net.ServerSocket: void bind(java.net.SocketAddress)>(r1);

        $r2 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        staticinvoke <java.nio.ServerSocketChannelImpl: boolean access$002(java.nio.ServerSocketChannelImpl,boolean)>($r2, 1);

        return;
    }

    public void bind(java.net.SocketAddress, int) throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.net.SocketAddress r1;
        int i0;
        java.nio.ServerSocketChannelImpl $r2;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        r1 := @parameter0: java.net.SocketAddress;

        i0 := @parameter1: int;

        specialinvoke r0.<java.net.ServerSocket: void bind(java.net.SocketAddress,int)>(r1, i0);

        $r2 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        staticinvoke <java.nio.ServerSocketChannelImpl: boolean access$002(java.nio.ServerSocketChannelImpl,boolean)>($r2, 1);

        return;
    }

    public void close() throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.ServerSocketChannelImpl r1, $r3, $r4;
        java.lang.Throwable r2, $r5;
        boolean $z0;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        r1 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        entermonitor r1;

     label1:
        $r3 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        $z0 = virtualinvoke $r3.<java.nio.ServerSocketChannelImpl: boolean isOpen()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        virtualinvoke $r4.<java.nio.ServerSocketChannelImpl: void close()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        specialinvoke r0.<java.net.ServerSocket: void close()>();

     label5:
        goto label2;

     label6:
        $r5 := @caughtexception;

        r2 = $r5;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public java.nio.channels.ServerSocketChannel getChannel()
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.ServerSocketChannelImpl $r1;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        $r1 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        return $r1;
    }

    public java.net.Socket implAccept(java.nio.SocketChannelImpl) throws java.io.IOException
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.SocketChannelImpl r1;
        java.net.Socket r2;
        java.lang.Throwable r3, r4, $r5, $r6;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        r1 := @parameter0: java.nio.SocketChannelImpl;

        r2 = virtualinvoke r1.<java.nio.SocketChannelImpl: java.net.Socket socket()>();

     label1:
        entermonitor r0;

     label2:
        specialinvoke r0.<java.net.ServerSocket: void implAccept(java.net.Socket)>(r2);

        virtualinvoke r1.<java.nio.SocketChannelImpl: void setConnected()>();

        virtualinvoke r1.<java.nio.SocketChannelImpl: void setBound(boolean)>(1);

        virtualinvoke r1.<java.nio.SocketChannelImpl: void finishAccept()>();

        exitmonitor r0;

     label3:
        goto label4;

     label4:
        return r2;

     label5:
        $r5 := @caughtexception;

        r4 = $r5;

     label6:
        exitmonitor r0;

     label7:
        throw r4;

     label8:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r2.<java.net.Socket: void close()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    public boolean isBound()
    {
        java.nio.ServerSocketChannelImpl$ServerSocketAdapter r0;
        java.nio.ServerSocketChannelImpl $r1;
        boolean $z0;

        r0 := @this: java.nio.ServerSocketChannelImpl$ServerSocketAdapter;

        $r1 = r0.<java.nio.ServerSocketChannelImpl$ServerSocketAdapter: java.nio.ServerSocketChannelImpl channelImpl>;

        $z0 = staticinvoke <java.nio.ServerSocketChannelImpl: boolean access$000(java.nio.ServerSocketChannelImpl)>($r1);

        return $z0;
    }
}
