public class android.net.DummyDataStateTracker extends android.net.BaseNetworkStateTracker
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    private static final boolean VDBG;
    private boolean mDefaultRouteSet;
    private boolean mIsDefaultOrHipri;
    private boolean mPrivateDnsRouteSet;
    private android.os.Handler mTarget;
    private boolean mTeardownRequested;

    public void <init>(int, java.lang.String)
    {
        android.net.DummyDataStateTracker r0;
        int i0;
        java.lang.String r1;
        android.net.NetworkInfo $r2;

        r0 := @this: android.net.DummyDataStateTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.net.BaseNetworkStateTracker: void <init>()>();

        r0.<android.net.DummyDataStateTracker: boolean mTeardownRequested> = 0;

        r0.<android.net.DummyDataStateTracker: boolean mPrivateDnsRouteSet> = 0;

        r0.<android.net.DummyDataStateTracker: boolean mDefaultRouteSet> = 0;

        r0.<android.net.DummyDataStateTracker: boolean mIsDefaultOrHipri> = 0;

        $r2 = new android.net.NetworkInfo;

        specialinvoke $r2.<android.net.NetworkInfo: void <init>(int)>(i0);

        r0.<android.net.DummyDataStateTracker: android.net.NetworkInfo mNetworkInfo> = $r2;

        return;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DummyDataStateTracker", r0);

        return;
    }

    private static void loge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("DummyDataStateTracker", r0);

        return;
    }

    private void setDetailedState(android.net.NetworkInfo$DetailedState, java.lang.String, java.lang.String)
    {
        android.net.DummyDataStateTracker r0;
        android.net.NetworkInfo$DetailedState r1, $r7;
        java.lang.String r2, r3, $r11;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r10;
        android.net.NetworkInfo $r6, $r12, $r13;
        android.os.Handler $r14;
        android.os.Message $r15;

        r0 := @this: android.net.DummyDataStateTracker;

        r1 := @parameter0: android.net.NetworkInfo$DetailedState;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDetailed state, old =");

        $r6 = r0.<android.net.DummyDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $r7 = virtualinvoke $r6.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and new state=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.DummyDataStateTracker: void log(java.lang.String)>($r11);

        $r12 = r0.<android.net.DummyDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        virtualinvoke $r12.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r14 = r0.<android.net.DummyDataStateTracker: android.os.Handler mTarget>;

        $r13 = r0.<android.net.DummyDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $r15 = virtualinvoke $r14.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(458752, $r13);

        virtualinvoke $r15.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void addStackedLink(android.net.LinkProperties)
    {
        android.net.DummyDataStateTracker r0;
        android.net.LinkProperties r1, $r2;

        r0 := @this: android.net.DummyDataStateTracker;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = r0.<android.net.DummyDataStateTracker: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r2.<android.net.LinkProperties: boolean addStackedLink(android.net.LinkProperties)>(r1);

        return;
    }

    public void captivePortalCheckComplete()
    {
        android.net.DummyDataStateTracker r0;

        r0 := @this: android.net.DummyDataStateTracker;

        return;
    }

    public void captivePortalCheckCompleted(boolean)
    {
        android.net.DummyDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.DummyDataStateTracker;

        z0 := @parameter0: boolean;

        return;
    }

    public void defaultRouteSet(boolean)
    {
        android.net.DummyDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.DummyDataStateTracker;

        z0 := @parameter0: boolean;

        r0.<android.net.DummyDataStateTracker: boolean mDefaultRouteSet> = z0;

        return;
    }

    public android.net.LinkCapabilities getLinkCapabilities()
    {
        android.net.DummyDataStateTracker r0;
        android.net.LinkCapabilities $r1, $r2;

        r0 := @this: android.net.DummyDataStateTracker;

        $r1 = new android.net.LinkCapabilities;

        $r2 = r0.<android.net.DummyDataStateTracker: android.net.LinkCapabilities mLinkCapabilities>;

        specialinvoke $r1.<android.net.LinkCapabilities: void <init>(android.net.LinkCapabilities)>($r2);

        return $r1;
    }

    public android.net.LinkProperties getLinkProperties()
    {
        android.net.DummyDataStateTracker r0;
        android.net.LinkProperties $r1, $r2;

        r0 := @this: android.net.DummyDataStateTracker;

        $r1 = new android.net.LinkProperties;

        $r2 = r0.<android.net.DummyDataStateTracker: android.net.LinkProperties mLinkProperties>;

        specialinvoke $r1.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r2);

        return $r1;
    }

    public android.net.NetworkInfo getNetworkInfo()
    {
        android.net.DummyDataStateTracker r0;
        android.net.NetworkInfo $r1;

        r0 := @this: android.net.DummyDataStateTracker;

        $r1 = r0.<android.net.DummyDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        return $r1;
    }

    public java.lang.String getTcpBufferSizesPropName()
    {
        android.net.DummyDataStateTracker r0;

        r0 := @this: android.net.DummyDataStateTracker;

        return "net.tcp.buffersize.unknown";
    }

    public boolean isAvailable()
    {
        android.net.DummyDataStateTracker r0;

        r0 := @this: android.net.DummyDataStateTracker;

        return 1;
    }

    public boolean isDefaultRouteSet()
    {
        android.net.DummyDataStateTracker r0;
        boolean $z0;

        r0 := @this: android.net.DummyDataStateTracker;

        $z0 = r0.<android.net.DummyDataStateTracker: boolean mDefaultRouteSet>;

        return $z0;
    }

    public boolean isPrivateDnsRouteSet()
    {
        android.net.DummyDataStateTracker r0;
        boolean $z0;

        r0 := @this: android.net.DummyDataStateTracker;

        $z0 = r0.<android.net.DummyDataStateTracker: boolean mPrivateDnsRouteSet>;

        return $z0;
    }

    public boolean isTeardownRequested()
    {
        android.net.DummyDataStateTracker r0;
        boolean $z0;

        r0 := @this: android.net.DummyDataStateTracker;

        $z0 = r0.<android.net.DummyDataStateTracker: boolean mTeardownRequested>;

        return $z0;
    }

    public void privateDnsRouteSet(boolean)
    {
        android.net.DummyDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.DummyDataStateTracker;

        z0 := @parameter0: boolean;

        r0.<android.net.DummyDataStateTracker: boolean mPrivateDnsRouteSet> = z0;

        return;
    }

    public boolean reconnect()
    {
        android.net.DummyDataStateTracker r0;
        android.net.NetworkInfo$DetailedState $r1, $r2;

        r0 := @this: android.net.DummyDataStateTracker;

        $r1 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTING>;

        specialinvoke r0.<android.net.DummyDataStateTracker: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r1, "enabled", null);

        $r2 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        specialinvoke r0.<android.net.DummyDataStateTracker: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r2, "enabled", null);

        virtualinvoke r0.<android.net.DummyDataStateTracker: void setTeardownRequested(boolean)>(0);

        return 1;
    }

    public void releaseWakeLock()
    {
        android.net.DummyDataStateTracker r0;

        r0 := @this: android.net.DummyDataStateTracker;

        return;
    }

    public void removeStackedLink(android.net.LinkProperties)
    {
        android.net.DummyDataStateTracker r0;
        android.net.LinkProperties r1, $r2;

        r0 := @this: android.net.DummyDataStateTracker;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = r0.<android.net.DummyDataStateTracker: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r2.<android.net.LinkProperties: boolean removeStackedLink(android.net.LinkProperties)>(r1);

        return;
    }

    public void setDependencyMet(boolean)
    {
        android.net.DummyDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.DummyDataStateTracker;

        z0 := @parameter0: boolean;

        return;
    }

    public void setPolicyDataEnable(boolean)
    {
        android.net.DummyDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.DummyDataStateTracker;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean setRadio(boolean)
    {
        android.net.DummyDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.DummyDataStateTracker;

        z0 := @parameter0: boolean;

        return 1;
    }

    public void setTeardownRequested(boolean)
    {
        android.net.DummyDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.DummyDataStateTracker;

        z0 := @parameter0: boolean;

        r0.<android.net.DummyDataStateTracker: boolean mTeardownRequested> = z0;

        return;
    }

    public void setUserDataEnable(boolean)
    {
        android.net.DummyDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.DummyDataStateTracker;

        z0 := @parameter0: boolean;

        return;
    }

    public void startMonitoring(android.content.Context, android.os.Handler)
    {
        android.net.DummyDataStateTracker r0;
        android.content.Context r1;
        android.os.Handler r2;

        r0 := @this: android.net.DummyDataStateTracker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r0.<android.net.DummyDataStateTracker: android.os.Handler mTarget> = r2;

        r0.<android.net.DummyDataStateTracker: android.content.Context mContext> = r1;

        return;
    }

    public void supplyMessenger(android.os.Messenger)
    {
        android.net.DummyDataStateTracker r0;
        android.os.Messenger r1;

        r0 := @this: android.net.DummyDataStateTracker;

        r1 := @parameter0: android.os.Messenger;

        return;
    }

    public boolean teardown()
    {
        android.net.DummyDataStateTracker r0;
        android.net.NetworkInfo$DetailedState $r1, $r2;

        r0 := @this: android.net.DummyDataStateTracker;

        $r1 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTING>;

        specialinvoke r0.<android.net.DummyDataStateTracker: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r1, "disabled", null);

        $r2 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        specialinvoke r0.<android.net.DummyDataStateTracker: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r2, "disabled", null);

        return 1;
    }

    public java.lang.String toString()
    {
        android.net.DummyDataStateTracker r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;

        r0 := @this: android.net.DummyDataStateTracker;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("Dummy data state: none, dummy!");

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <android.net.DummyDataStateTracker: java.lang.String TAG> = "DummyDataStateTracker";

        <android.net.DummyDataStateTracker: boolean DBG> = 1;

        return;
    }
}
