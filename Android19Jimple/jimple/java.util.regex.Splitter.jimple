public class java.util.regex.Splitter extends java.lang.Object
{
    private static final java.lang.String METACHARACTERS;

    private void <init>()
    {
        java.util.regex.Splitter r0;

        r0 := @this: java.util.regex.Splitter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String[] fastSplit(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1, $r3, $r4, $r5, $r8;
        int i0, i1, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17;
        char c2, $c15;
        java.lang.String[] r2, $r6, $r7;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 != 0 goto label02;

     label01:
        return null;

     label02:
        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if i1 != 1 goto label04;

        $r8 = "\\?*+[](){}^$.|";

        $i17 = virtualinvoke $r8.<java.lang.String: int indexOf(int)>(c2);

        if $i17 != -1 goto label04;

     label03:
        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label05;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "";

        return $r7;

     label04:
        if i1 != 2 goto label01;

        if c2 != 92 goto label01;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $r3 = "\\?*+[](){}^$.|";

        $i10 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(c2);

        if $i10 != -1 goto label03;

        return null;

     label05:
        i3 = 0;

        i4 = 0;

     label06:
        $i11 = i3 + 1;

        if $i11 == i0 goto label07;

        i9 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(c2, i4);

        if i9 == -1 goto label07;

        i3 = i3 + 1;

        i4 = i9 + 1;

        goto label06;

     label07:
        i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 != 0 goto label09;

        if i4 != i5 goto label09;

        if i3 != i5 goto label08;

        $r6 = <libcore.util.EmptyArray: java.lang.String[] STRING>;

        return $r6;

     label08:
        i4 = i4 + -1;

        $i13 = i4 - 1;

        $c15 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i13);

        if $c15 == c2 goto label08;

        $i14 = virtualinvoke r1.<java.lang.String: int length()>();

        $i16 = $i14 - i4;

        i3 = i3 - $i16;

        i5 = i4;

     label09:
        $i12 = i3 + 1;

        r2 = newarray (java.lang.String)[$i12];

        i6 = 0;

        i7 = 0;

     label10:
        if i7 == i3 goto label11;

        i8 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(c2, i6);

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i6, i8);

        r2[i7] = $r5;

        i6 = i8 + 1;

        i7 = i7 + 1;

        goto label10;

     label11:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i6, i5);

        r2[i3] = $r4;

        return r2;
    }

    private static java.lang.String[] finishSplit(java.util.List, java.lang.String, int, int)
    {
        java.util.List r0;
        java.lang.String r1, $r6, $r8;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String[] $r2, $r4;
        java.lang.Object[] $r3;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i3 goto label2;

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r8);

     label1:
        $i5 = interfaceinvoke r0.<java.util.List: int size()>();

        $r2 = newarray (java.lang.String)[$i5];

        $r3 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r4 = (java.lang.String[]) $r3;

        return $r4;

     label2:
        if i1 == 0 goto label3;

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>("");

        goto label1;

     label3:
        $i4 = interfaceinvoke r0.<java.util.List: int size()>();

        i2 = -1 + $i4;

     label4:
        if i2 < 0 goto label1;

        $r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        interfaceinvoke r0.<java.util.List: java.lang.Object remove(int)>(i2);

        i2 = i2 + -1;

        goto label4;
    }

    public static java.lang.String[] split(java.util.regex.Pattern, java.lang.String, java.lang.String, int)
    {
        java.util.regex.Pattern r0;
        java.lang.String r1, r2, $r9;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String[] r3, $r8, $r10;
        java.util.ArrayList r4, $r6;
        java.util.regex.Matcher r5, $r7;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.regex.Pattern;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 = staticinvoke <java.util.regex.Splitter: java.lang.String[] fastSplit(java.lang.String,java.lang.String,int)>(r1, r2, i0);

        if r3 == null goto label1;

        return r3;

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = "";

        return $r10;

     label2:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r4 = $r6;

        $r7 = new java.util.regex.Matcher;

        specialinvoke $r7.<java.util.regex.Matcher: void <init>(java.util.regex.Pattern,java.lang.CharSequence)>(r0, r2);

        r5 = $r7;

        i1 = 0;

     label3:
        $i2 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $i3 = 1 + $i2;

        if $i3 == i0 goto label4;

        $z1 = virtualinvoke r5.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label4;

        $i4 = virtualinvoke r5.<java.util.regex.Matcher: int start()>();

        $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i4);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        i1 = virtualinvoke r5.<java.util.regex.Matcher: int end()>();

        goto label3;

     label4:
        $r8 = staticinvoke <java.util.regex.Splitter: java.lang.String[] finishSplit(java.util.List,java.lang.String,int,int)>(r4, r2, i1, i0);

        return $r8;
    }

    public static void <clinit>()
    {
        <java.util.regex.Splitter: java.lang.String METACHARACTERS> = "\\?*+[](){}^$.|";

        return;
    }
}
