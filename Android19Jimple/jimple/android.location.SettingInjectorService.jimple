public abstract class android.location.SettingInjectorService extends android.app.Service
{
    public static final java.lang.String ACTION_INJECTED_SETTING_CHANGED;
    public static final java.lang.String ACTION_SERVICE_INTENT;
    public static final java.lang.String ATTRIBUTES_NAME;
    public static final java.lang.String ENABLED_KEY;
    public static final java.lang.String MESSENGER_KEY;
    public static final java.lang.String META_DATA_NAME;
    public static final java.lang.String SUMMARY_KEY;
    private static final java.lang.String TAG;
    private final java.lang.String mName;

    public void <init>(java.lang.String)
    {
        android.location.SettingInjectorService r0;
        java.lang.String r1;

        r0 := @this: android.location.SettingInjectorService;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.app.Service: void <init>()>();

        r0.<android.location.SettingInjectorService: java.lang.String mName> = r1;

        return;
    }

    private void onHandleIntent(android.content.Intent)
    {
        android.location.SettingInjectorService r0;
        android.content.Intent r1;
        java.lang.RuntimeException r2, r4, $r5, $r6;
        java.lang.String r3;
        boolean z0;

        r0 := @this: android.location.SettingInjectorService;

        r1 := @parameter0: android.content.Intent;

     label1:
        r3 = virtualinvoke r0.<android.location.SettingInjectorService: java.lang.String onGetSummary()>();

     label2:
        z0 = virtualinvoke r0.<android.location.SettingInjectorService: boolean onGetEnabled()>();

     label3:
        specialinvoke r0.<android.location.SettingInjectorService: void sendStatus(android.content.Intent,java.lang.String,boolean)>(r1, r3, z0);

        return;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        specialinvoke r0.<android.location.SettingInjectorService: void sendStatus(android.content.Intent,java.lang.String,boolean)>(r1, null, 1);

        throw r2;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

        specialinvoke r0.<android.location.SettingInjectorService: void sendStatus(android.content.Intent,java.lang.String,boolean)>(r1, r3, 1);

        throw r4;

        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label2 to label3 with label5;
    }

    private void sendStatus(android.content.Intent, java.lang.String, boolean)
    {
        android.location.SettingInjectorService r0;
        android.content.Intent r1;
        java.lang.String r2, $r10, $r20, $r23, $r26;
        boolean z0, $z1;
        android.os.Message r3;
        android.os.Bundle r4, $r7;
        android.os.Messenger r5;
        android.os.RemoteException r6, $r22;
        android.os.Parcelable $r8;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r24, $r25;

        r0 := @this: android.location.SettingInjectorService;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r7 = new android.os.Bundle;

        specialinvoke $r7.<android.os.Bundle: void <init>()>();

        r4 = $r7;

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("summary", r2);

        virtualinvoke r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("enabled", z0);

        virtualinvoke r3.<android.os.Message: void setData(android.os.Bundle)>(r4);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SettingInjectorService", 3);

        if $z1 == 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<android.location.SettingInjectorService: java.lang.String mName>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": received ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", summary=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", enabled=");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sending message: ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SettingInjectorService", $r20);

     label1:
        $r8 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("messenger");

        r5 = (android.os.Messenger) $r8;

     label2:
        virtualinvoke r5.<android.os.Messenger: void send(android.os.Message)>(r3);

     label3:
        return;

     label4:
        $r22 := @caughtexception;

        r6 = $r22;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = r0.<android.location.SettingInjectorService: java.lang.String mName>;

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": sending dynamic status failed");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SettingInjectorService", $r26, r6);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.location.SettingInjectorService r0;
        android.content.Intent r1;

        r0 := @this: android.location.SettingInjectorService;

        r1 := @parameter0: android.content.Intent;

        return null;
    }

    protected abstract boolean onGetEnabled();

    protected abstract java.lang.String onGetSummary();

    public final void onStart(android.content.Intent, int)
    {
        android.location.SettingInjectorService r0;
        android.content.Intent r1;
        int i0;

        r0 := @this: android.location.SettingInjectorService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        specialinvoke r0.<android.app.Service: void onStart(android.content.Intent,int)>(r1, i0);

        return;
    }

    public final int onStartCommand(android.content.Intent, int, int)
    {
        android.location.SettingInjectorService r0;
        android.content.Intent r1;
        int i0, i1;

        r0 := @this: android.location.SettingInjectorService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.location.SettingInjectorService: void onHandleIntent(android.content.Intent)>(r1);

        virtualinvoke r0.<android.location.SettingInjectorService: void stopSelf(int)>(i1);

        return 2;
    }

    public static void <clinit>()
    {
        <android.location.SettingInjectorService: java.lang.String TAG> = "SettingInjectorService";

        <android.location.SettingInjectorService: java.lang.String SUMMARY_KEY> = "summary";

        <android.location.SettingInjectorService: java.lang.String META_DATA_NAME> = "android.location.SettingInjectorService";

        <android.location.SettingInjectorService: java.lang.String MESSENGER_KEY> = "messenger";

        <android.location.SettingInjectorService: java.lang.String ENABLED_KEY> = "enabled";

        <android.location.SettingInjectorService: java.lang.String ATTRIBUTES_NAME> = "injected-location-setting";

        <android.location.SettingInjectorService: java.lang.String ACTION_SERVICE_INTENT> = "android.location.SettingInjectorService";

        <android.location.SettingInjectorService: java.lang.String ACTION_INJECTED_SETTING_CHANGED> = "android.location.InjectedSettingChanged";

        return;
    }
}
