final class java.util.jar.JarFile$JarFileInputStream extends java.io.FilterInputStream
{
    private long count;
    private boolean done;
    private java.util.jar.JarVerifier$VerifierEntry entry;
    private java.util.zip.ZipEntry zipEntry;

    void <init>(java.io.InputStream, java.util.zip.ZipEntry, java.util.jar.JarVerifier$VerifierEntry)
    {
        java.util.jar.JarFile$JarFileInputStream r0;
        java.io.InputStream r1;
        java.util.zip.ZipEntry r2, $r4;
        java.util.jar.JarVerifier$VerifierEntry r3;
        long $l0;

        r0 := @this: java.util.jar.JarFile$JarFileInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.util.zip.ZipEntry;

        r3 := @parameter2: java.util.jar.JarVerifier$VerifierEntry;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<java.util.jar.JarFile$JarFileInputStream: boolean done> = 0;

        r0.<java.util.jar.JarFile$JarFileInputStream: java.util.zip.ZipEntry zipEntry> = r2;

        $r4 = r0.<java.util.jar.JarFile$JarFileInputStream: java.util.zip.ZipEntry zipEntry>;

        $l0 = virtualinvoke $r4.<java.util.zip.ZipEntry: long getSize()>();

        r0.<java.util.jar.JarFile$JarFileInputStream: long count> = $l0;

        r0.<java.util.jar.JarFile$JarFileInputStream: java.util.jar.JarVerifier$VerifierEntry entry> = r3;

        return;
    }

    public int available() throws java.io.IOException
    {
        java.util.jar.JarFile$JarFileInputStream r0;
        boolean $z0;
        int $i0;

        r0 := @this: java.util.jar.JarFile$JarFileInputStream;

        $z0 = r0.<java.util.jar.JarFile$JarFileInputStream: boolean done>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = specialinvoke r0.<java.io.FilterInputStream: int available()>();

        return $i0;
    }

    public int read() throws java.io.IOException
    {
        java.util.jar.JarFile$JarFileInputStream r0;
        int i0;
        boolean $z0;
        long $l1, $l3, $l5, $l6;
        byte $b2, $b4;
        java.util.jar.JarVerifier$VerifierEntry $r1, $r2, $r3;

        r0 := @this: java.util.jar.JarFile$JarFileInputStream;

        $z0 = r0.<java.util.jar.JarFile$JarFileInputStream: boolean done>;

        if $z0 == 0 goto label2;

        i0 = -1;

     label1:
        return i0;

     label2:
        $l1 = r0.<java.util.jar.JarFile$JarFileInputStream: long count>;

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label5;

        i0 = specialinvoke r0.<java.io.FilterInputStream: int read()>();

        if i0 == -1 goto label4;

        $r3 = r0.<java.util.jar.JarFile$JarFileInputStream: java.util.jar.JarVerifier$VerifierEntry entry>;

        virtualinvoke $r3.<java.util.jar.JarVerifier$VerifierEntry: void write(int)>(i0);

        $l5 = r0.<java.util.jar.JarFile$JarFileInputStream: long count>;

        $l6 = $l5 - 1L;

        r0.<java.util.jar.JarFile$JarFileInputStream: long count> = $l6;

     label3:
        $l3 = r0.<java.util.jar.JarFile$JarFileInputStream: long count>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label1;

        r0.<java.util.jar.JarFile$JarFileInputStream: boolean done> = 1;

        $r2 = r0.<java.util.jar.JarFile$JarFileInputStream: java.util.jar.JarVerifier$VerifierEntry entry>;

        virtualinvoke $r2.<java.util.jar.JarVerifier$VerifierEntry: void verify()>();

        return i0;

     label4:
        r0.<java.util.jar.JarFile$JarFileInputStream: long count> = 0L;

        goto label3;

     label5:
        r0.<java.util.jar.JarFile$JarFileInputStream: boolean done> = 1;

        $r1 = r0.<java.util.jar.JarFile$JarFileInputStream: java.util.jar.JarVerifier$VerifierEntry entry>;

        virtualinvoke $r1.<java.util.jar.JarVerifier$VerifierEntry: void verify()>();

        return -1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.util.jar.JarFile$JarFileInputStream r0;
        byte[] r1;
        int i0, i1, i2, i3;
        boolean $z0;
        long $l4, $l6, $l8, $l9, $l11, $l12, $l13, $l14;
        byte $b5, $b7, $b10;
        java.util.jar.JarVerifier$VerifierEntry $r2, $r3, $r4;

        r0 := @this: java.util.jar.JarFile$JarFileInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<java.util.jar.JarFile$JarFileInputStream: boolean done>;

        if $z0 == 0 goto label2;

        i2 = -1;

     label1:
        return i2;

     label2:
        $l4 = r0.<java.util.jar.JarFile$JarFileInputStream: long count>;

        $b5 = $l4 cmp 0L;

        if $b5 <= 0 goto label6;

        i2 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[],int,int)>(r1, i0, i1);

        if i2 == -1 goto label5;

        i3 = i2;

        $l9 = r0.<java.util.jar.JarFile$JarFileInputStream: long count>;

        $l8 = (long) i3;

        $b10 = $l9 cmp $l8;

        if $b10 >= 0 goto label3;

        $l13 = r0.<java.util.jar.JarFile$JarFileInputStream: long count>;

        i3 = (int) $l13;

     label3:
        $r4 = r0.<java.util.jar.JarFile$JarFileInputStream: java.util.jar.JarVerifier$VerifierEntry entry>;

        virtualinvoke $r4.<java.util.jar.JarVerifier$VerifierEntry: void write(byte[],int,int)>(r1, i0, i3);

        $l11 = r0.<java.util.jar.JarFile$JarFileInputStream: long count>;

        $l12 = (long) i3;

        $l14 = $l11 - $l12;

        r0.<java.util.jar.JarFile$JarFileInputStream: long count> = $l14;

     label4:
        $l6 = r0.<java.util.jar.JarFile$JarFileInputStream: long count>;

        $b7 = $l6 cmp 0L;

        if $b7 != 0 goto label1;

        r0.<java.util.jar.JarFile$JarFileInputStream: boolean done> = 1;

        $r3 = r0.<java.util.jar.JarFile$JarFileInputStream: java.util.jar.JarVerifier$VerifierEntry entry>;

        virtualinvoke $r3.<java.util.jar.JarVerifier$VerifierEntry: void verify()>();

        return i2;

     label5:
        r0.<java.util.jar.JarFile$JarFileInputStream: long count> = 0L;

        goto label4;

     label6:
        r0.<java.util.jar.JarFile$JarFileInputStream: boolean done> = 1;

        $r2 = r0.<java.util.jar.JarFile$JarFileInputStream: java.util.jar.JarVerifier$VerifierEntry entry>;

        virtualinvoke $r2.<java.util.jar.JarVerifier$VerifierEntry: void verify()>();

        return -1;
    }

    public long skip(long) throws java.io.IOException
    {
        java.util.jar.JarFile$JarFileInputStream r0;
        long l0, $l1;

        r0 := @this: java.util.jar.JarFile$JarFileInputStream;

        l0 := @parameter0: long;

        $l1 = staticinvoke <libcore.io.Streams: long skipByReading(java.io.InputStream,long)>(r0, l0);

        return $l1;
    }
}
