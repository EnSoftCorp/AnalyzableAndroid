class com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher extends java.lang.Object implements android.app.IInstrumentationWatcher
{
    private final boolean mRawMode;
    final com.android.uiautomator.testrunner.UiAutomatorTestRunner this$0;

    private void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner r1;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: com.android.uiautomator.testrunner.UiAutomatorTestRunner;

        r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: com.android.uiautomator.testrunner.UiAutomatorTestRunner this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: boolean mRawMode> = 1;

        return;
    }

    void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner, com.android.uiautomator.testrunner.UiAutomatorTestRunner$1)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner r1;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$1 r2;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: com.android.uiautomator.testrunner.UiAutomatorTestRunner;

        r2 := @parameter1: com.android.uiautomator.testrunner.UiAutomatorTestRunner$1;

        specialinvoke r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner)>(r1);

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("I\'m just a fake!");

        throw $r1;
    }

    public void instrumentationFinished(android.content.ComponentName, int, android.os.Bundle)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        android.content.ComponentName r1;
        int i0;
        android.os.Bundle r2;
        java.lang.Throwable r3, $r21;
        java.util.Iterator r4;
        java.lang.String r5, $r10, $r19;
        java.lang.StringBuilder $r6, $r8, $r9, $r14, $r15, $r16, $r18, $r20;
        java.io.PrintStream $r7, $r13;
        java.util.Set $r11;
        java.lang.Object $r12, $r17;
        boolean $z0;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        entermonitor r0;

        goto label03;

     label01:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label02:
        return;

     label03:
        if r2 == null goto label10;

     label04:
        $r11 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r12;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_RESULT: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r17 = virtualinvoke r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r5);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label06:
        goto label05;

     label07:
        $r21 := @caughtexception;

        r3 = $r21;

     label08:
        exitmonitor r0;

     label09:
        throw r3;

     label10:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_CODE: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label11:
        goto label01;

        catch java.lang.Throwable from label01 to label01 with label07;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public void instrumentationStatus(android.content.ComponentName, int, android.os.Bundle)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        android.content.ComponentName r1;
        int i0;
        android.os.Bundle r2;
        java.lang.Throwable r3, $r21;
        java.util.Iterator r4;
        java.lang.String r5, $r10, $r19;
        java.lang.StringBuilder $r6, $r8, $r9, $r14, $r15, $r16, $r18, $r20;
        java.io.PrintStream $r7, $r13;
        java.util.Set $r11;
        java.lang.Object $r12, $r17;
        boolean $z0;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        entermonitor r0;

        goto label03;

     label01:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label02:
        return;

     label03:
        if r2 == null goto label10;

     label04:
        $r11 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r4 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r12;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_STATUS: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r17 = virtualinvoke r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r5);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r19);

     label06:
        goto label05;

     label07:
        $r21 := @caughtexception;

        r3 = $r21;

     label08:
        exitmonitor r0;

     label09:
        throw r3;

     label10:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_STATUS_CODE: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label11:
        goto label01;

        catch java.lang.Throwable from label01 to label01 with label07;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }
}
