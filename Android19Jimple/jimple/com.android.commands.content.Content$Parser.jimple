class com.android.commands.content.Content$Parser extends java.lang.Object
{
    private static final java.lang.String ARGUMENT_ARG;
    private static final java.lang.String ARGUMENT_BIND;
    private static final java.lang.String ARGUMENT_CALL;
    private static final java.lang.String ARGUMENT_DELETE;
    private static final java.lang.String ARGUMENT_EXTRA;
    private static final java.lang.String ARGUMENT_INSERT;
    private static final java.lang.String ARGUMENT_METHOD;
    private static final java.lang.String ARGUMENT_PREFIX;
    private static final java.lang.String ARGUMENT_PROJECTION;
    private static final java.lang.String ARGUMENT_QUERY;
    private static final java.lang.String ARGUMENT_SORT;
    private static final java.lang.String ARGUMENT_UPDATE;
    private static final java.lang.String ARGUMENT_URI;
    private static final java.lang.String ARGUMENT_USER;
    private static final java.lang.String ARGUMENT_WHERE;
    private static final java.lang.String COLON;
    private static final java.lang.String TYPE_BOOLEAN;
    private static final java.lang.String TYPE_DOUBLE;
    private static final java.lang.String TYPE_FLOAT;
    private static final java.lang.String TYPE_INTEGER;
    private static final java.lang.String TYPE_LONG;
    private static final java.lang.String TYPE_STRING;
    private final com.android.commands.content.Content$Tokenizer mTokenizer;

    public void <init>(java.lang.String[])
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String[] r1;
        com.android.commands.content.Content$Tokenizer $r2;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.commands.content.Content$Tokenizer;

        specialinvoke $r2.<com.android.commands.content.Content$Tokenizer: void <init>(java.lang.String[])>(r1);

        r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer> = $r2;

        return;
    }

    private java.lang.String argumentValueRequired(java.lang.String)
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r1, r2, $r8;
        com.android.commands.content.Content$Tokenizer $r3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r2 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("--");

        if $z1 == 0 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No value for argument: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        return r2;
    }

    private void parseBindValue(android.content.ContentValues)
    {
        com.android.commands.content.Content$Parser r0;
        android.content.ContentValues r1;
        java.lang.String r2, r3, r4, r5, $r7, $r8, $r9, $r10, $r12, $r15, $r17, $r23, $r27, $r35;
        int i0, i1, $i2, $i3, $i4;
        com.android.commands.content.Content$Tokenizer $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        long $l5;
        java.lang.Long $r11;
        double $d0;
        java.lang.IllegalArgumentException $r13, $r20, $r24, $r34;
        java.lang.Double $r14;
        java.lang.StringBuilder $r16, $r18, $r19, $r21, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33;
        java.lang.Boolean $r22;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 := @parameter0: android.content.ContentValues;

        $r6 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r2 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r6);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $r34 = new java.lang.IllegalArgumentException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding not well formed: ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r35);

        throw $r34;

     label1:
        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>(":");

        if i0 >= 0 goto label2;

        $r24 = new java.lang.IllegalArgumentException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding not well formed: ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r27);

        throw $r24;

     label2:
        $i2 = i0 + 1;

        i1 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String,int)>(":", $i2);

        if i1 >= 0 goto label3;

        $r20 = new java.lang.IllegalArgumentException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding not well formed: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r20;

     label3:
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i3 = i0 + 1;

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i3, i1);

        $i4 = i1 + 1;

        r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i4);

        $r7 = "s";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label4;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>(r3, r5);

        return;

     label4:
        $r8 = "b";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z2 == 0 goto label5;

        $z7 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r5);

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>(r3, $r22);

        return;

     label5:
        $r9 = "i";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z3 != 0 goto label6;

        $r10 = "l";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z4 == 0 goto label7;

     label6:
        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r5);

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>(r3, $r11);

        return;

     label7:
        $r12 = "f";

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z5 != 0 goto label8;

        $r15 = "d";

        $z6 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z6 == 0 goto label9;

     label8:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r5);

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>(r3, $r14);

        return;

     label9:
        $r13 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported type: ");

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;
    }

    private com.android.commands.content.Content$DeleteCommand parseDeleteCommand()
    {
        com.android.commands.content.Content$Parser r0;
        android.net.Uri r1;
        int i0;
        java.lang.String r2, r3, $r7, $r8, $r9, $r13, $r15, $r16;
        com.android.commands.content.Content$Tokenizer $r4;
        com.android.commands.content.Content$DeleteCommand $r5;
        java.lang.IllegalArgumentException $r6, $r10;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 = null;

        i0 = 0;

        r2 = null;

     label1:
        $r4 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r3 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r4);

        if r3 == null goto label5;

        $r7 = "--uri";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r16 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r16);

        goto label1;

     label2:
        $r8 = "--user";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label3;

        $r15 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        goto label1;

     label3:
        $r9 = "--where";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label4;

        r2 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        goto label1;

     label4:
        $r10 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label5:
        if r1 != null goto label6;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r6;

     label6:
        $r5 = new com.android.commands.content.Content$DeleteCommand;

        specialinvoke $r5.<com.android.commands.content.Content$DeleteCommand: void <init>(android.net.Uri,int,java.lang.String)>(r1, i0, r2);

        return $r5;
    }

    private com.android.commands.content.Content$InsertCommand parseInsertCommand()
    {
        com.android.commands.content.Content$Parser r0;
        android.net.Uri r1;
        int i0, $i1;
        android.content.ContentValues r2, $r4;
        java.lang.String r3, $r9, $r10, $r11, $r16, $r17, $r18;
        com.android.commands.content.Content$Tokenizer $r5;
        com.android.commands.content.Content$InsertCommand $r6;
        java.lang.IllegalArgumentException $r7, $r8, $r13;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r12, $r14, $r15;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 = null;

        i0 = 0;

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        r2 = $r4;

     label1:
        $r5 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r3 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r5);

        if r3 == null goto label5;

        $r9 = "--uri";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r18 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r18);

        goto label1;

     label2:
        $r10 = "--user";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label3;

        $r16 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r3);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        goto label1;

     label3:
        $r11 = "--bind";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label4;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.content.ContentValues)>(r2);

        goto label1;

     label4:
        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r13;

     label5:
        if r1 != null goto label6;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r8;

     label6:
        $i1 = virtualinvoke r2.<android.content.ContentValues: int size()>();

        if $i1 != 0 goto label7;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bindings not specified. Did you specify --bind argument(s)?");

        throw $r7;

     label7:
        $r6 = new com.android.commands.content.Content$InsertCommand;

        specialinvoke $r6.<com.android.commands.content.Content$InsertCommand: void <init>(android.net.Uri,int,android.content.ContentValues)>(r1, i0, r2);

        return $r6;
    }

    private com.android.commands.content.Content$UpdateCommand parseUpdateCommand()
    {
        com.android.commands.content.Content$Parser r0;
        android.net.Uri r1;
        int i0, $i1;
        java.lang.String r2, r4, $r10, $r11, $r12, $r13, $r17, $r19, $r20;
        android.content.ContentValues r3, $r5;
        com.android.commands.content.Content$Tokenizer $r6;
        com.android.commands.content.Content$UpdateCommand $r7;
        java.lang.IllegalArgumentException $r8, $r9, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r15, $r16, $r18;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 = null;

        i0 = 0;

        r2 = null;

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        r3 = $r5;

     label1:
        $r6 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r4 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r6);

        if r4 == null goto label6;

        $r10 = "--uri";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r20 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r4);

        r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r20);

        goto label1;

     label2:
        $r11 = "--user";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label3;

        $r19 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r4);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

        goto label1;

     label3:
        $r12 = "--where";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label4;

        r2 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r4);

        goto label1;

     label4:
        $r13 = "--bind";

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label5;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.content.ContentValues)>(r3);

        goto label1;

     label5:
        $r14 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label6:
        if r1 != null goto label7;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r9;

     label7:
        $i1 = virtualinvoke r3.<android.content.ContentValues: int size()>();

        if $i1 != 0 goto label8;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bindings not specified. Did you specify --bind argument(s)?");

        throw $r8;

     label8:
        $r7 = new com.android.commands.content.Content$UpdateCommand;

        specialinvoke $r7.<com.android.commands.content.Content$UpdateCommand: void <init>(android.net.Uri,int,android.content.ContentValues,java.lang.String)>(r1, i0, r3, r2);

        return $r7;
    }

    public com.android.commands.content.Content$CallCommand parseCallCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.String r1, r2, r5, $r11, $r12, $r13, $r14, $r15, $r19, $r21, $r22;
        int i0;
        android.net.Uri r3;
        android.content.ContentValues r4, $r6;
        com.android.commands.content.Content$Tokenizer $r7;
        com.android.commands.content.Content$CallCommand $r8;
        java.lang.IllegalArgumentException $r9, $r10, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r17, $r18, $r20;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 = null;

        i0 = 0;

        r2 = null;

        r3 = null;

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        r4 = $r6;

     label1:
        $r7 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r5 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r7);

        if r5 == null goto label7;

        $r11 = "--uri";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        $r22 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r5);

        r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r22);

        goto label1;

     label2:
        $r12 = "--user";

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label3;

        $r21 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r5);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21);

        goto label1;

     label3:
        $r13 = "--method";

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label4;

        r1 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r5);

        goto label1;

     label4:
        $r14 = "--arg";

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z3 == 0 goto label5;

        r2 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r5);

        goto label1;

     label5:
        $r15 = "--extra";

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z4 == 0 goto label6;

        specialinvoke r0.<com.android.commands.content.Content$Parser: void parseBindValue(android.content.ContentValues)>(r4);

        goto label1;

     label6:
        $r16 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r16;

     label7:
        if r3 != null goto label8;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r10;

     label8:
        if r1 != null goto label9;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider method not specified.");

        throw $r9;

     label9:
        $r8 = new com.android.commands.content.Content$CallCommand;

        specialinvoke $r8.<com.android.commands.content.Content$CallCommand: void <init>(android.net.Uri,int,java.lang.String,java.lang.String,android.content.ContentValues)>(r3, i0, r1, r2, r4);

        return $r8;
    }

    public com.android.commands.content.Content$Command parseCommand()
    {
        com.android.commands.content.Content$Parser r0;
        java.lang.IllegalArgumentException r1, $r9, $r18;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r8, $r12, $r25, $r26;
        com.android.commands.content.Content$Tokenizer $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r10, $r11, $r13, $r20, $r22, $r24;
        com.android.commands.content.Content$QueryCommand $r14;
        com.android.commands.content.Content$CallCommand $r15;
        com.android.commands.content.Content$DeleteCommand $r16;
        com.android.commands.content.Content$UpdateCommand $r17;
        com.android.commands.content.Content$InsertCommand $r19;
        java.io.PrintStream $r21, $r23;

        r0 := @this: com.android.commands.content.Content$Parser;

     label1:
        $r3 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r2 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r3);

        $r4 = "insert";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r19 = specialinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$InsertCommand parseInsertCommand()>();

        return $r19;

     label2:
        $r5 = "delete";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label3;

        $r16 = specialinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$DeleteCommand parseDeleteCommand()>();

        return $r16;

     label3:
        $r6 = "update";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label4;

        $r17 = specialinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$UpdateCommand parseUpdateCommand()>();

        return $r17;

     label4:
        $r7 = "query";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label5;

        $r14 = virtualinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$QueryCommand parseQueryCommand()>();

        return $r14;

     label5:
        $r8 = "call";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label6;

        $r15 = virtualinvoke r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$CallCommand parseCallCommand()>();

        return $r15;

     label6:
        $r9 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported operation: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label7:
        $r18 := @caughtexception;

        r1 = $r18;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>("usage: adb shell content [subcommand] [options]\n\nusage: adb shell content insert --uri <URI> [--user <USER_ID>] --bind <BINDING> [--bind <BINDING>...]\n  <URI> a content provider URI.\n  <BINDING> binds a typed value to a column and is formatted:\n  <COLUMN_NAME>:<TYPE>:<COLUMN_VALUE> where:\n  <TYPE> specifies data type such as:\n  b - boolean, s - string, i - integer, l - long, f - float, d - double\n  Note: Omit the value for passing an empty string, e.g column:s:\n  Example:\n  # Add \"new_setting\" secure setting with value \"new_value\".\n  adb shell content insert --uri content://settings/secure --bind name:s:new_setting --bind value:s:new_value\n\nusage: adb shell content update --uri <URI> [--user <USER_ID>] [--where <WHERE>]\n  <WHERE> is a SQL style where clause in quotes (You have to escape single quotes - see example below).\n  Example:\n  # Change \"new_setting\" secure setting to \"newer_value\".\n  adb shell content update --uri content://settings/secure --bind value:s:newer_value --where \"name=\'new_setting\'\"\n\nusage: adb shell content delete --uri <URI> [--user <USER_ID>] --bind <BINDING> [--bind <BINDING>...] [--where <WHERE>]\n  Example:\n  # Remove \"new_setting\" secure setting.\n  adb shell content delete --uri content://settings/secure --where \"name=\'new_setting\'\"\n\nusage: adb shell content query --uri <URI> [--user <USER_ID>] [--projection <PROJECTION>] [--where <WHERE>] [--sort <SORT_ORDER>]\n  <PROJECTION> is a list of colon separated column names and is formatted:\n  <COLUMN_NAME>[:<COLUMN_NAME>...]\n  <SORT_ORDER> is the order in which rows in the result should be sorted.\n  Example:\n  # Select \"name\" and \"value\" columns from secure settings where \"name\" is equal to \"new_setting\" and sort the result by name in ascending order.\n  adb shell content query --uri content://settings/secure --projection name:value --where \"name=\'new_setting\'\" --sort \"name ASC\"\n\nusage: adb shell content call --uri <URI> --method <METHOD> [--arg <ARG>]\n       [--extra <BINDING> ...]\n  <METHOD> is the name of a provider-defined method\n  <ARG> is an optional string argument\n  <BINDING> is like --bind above, typed data of the form <KEY>:{b,s,i,l,f,d}:<VAL>\n\n");

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[ERROR] ");

        $r25 = virtualinvoke r1.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label7;
        catch java.lang.IllegalArgumentException from label2 to label3 with label7;
        catch java.lang.IllegalArgumentException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label4 to label5 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
        catch java.lang.IllegalArgumentException from label6 to label7 with label7;
    }

    public com.android.commands.content.Content$QueryCommand parseQueryCommand()
    {
        com.android.commands.content.Content$Parser r0;
        android.net.Uri r1;
        int i0;
        java.lang.String[] r2;
        java.lang.String r3, r4, r5, $r9, $r10, $r11, $r12, $r13, $r17, $r19, $r20, $r21;
        com.android.commands.content.Content$Tokenizer $r6;
        com.android.commands.content.Content$QueryCommand $r7;
        java.lang.IllegalArgumentException $r8, $r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r15, $r16, $r18;

        r0 := @this: com.android.commands.content.Content$Parser;

        r1 = null;

        i0 = 0;

        r2 = null;

        r3 = null;

        r4 = null;

     label1:
        $r6 = r0.<com.android.commands.content.Content$Parser: com.android.commands.content.Content$Tokenizer mTokenizer>;

        r5 = staticinvoke <com.android.commands.content.Content$Tokenizer: java.lang.String access$000(com.android.commands.content.Content$Tokenizer)>($r6);

        if r5 == null goto label7;

        $r9 = "--uri";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 == 0 goto label2;

        $r21 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r5);

        r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r21);

        goto label1;

     label2:
        $r10 = "--user";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 0 goto label3;

        $r20 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r5);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        goto label1;

     label3:
        $r11 = "--where";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label4;

        r4 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r5);

        goto label1;

     label4:
        $r12 = "--sort";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z3 == 0 goto label5;

        r3 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r5);

        goto label1;

     label5:
        $r13 = "--projection";

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z4 == 0 goto label6;

        $r19 = specialinvoke r0.<com.android.commands.content.Content$Parser: java.lang.String argumentValueRequired(java.lang.String)>(r5);

        r2 = virtualinvoke $r19.<java.lang.String: java.lang.String[] split(java.lang.String)>("[\\s]*:[\\s]*");

        goto label1;

     label6:
        $r14 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported argument: ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label7:
        if r1 != null goto label8;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content provider URI not specified. Did you specify --uri argument?");

        throw $r8;

     label8:
        $r7 = new com.android.commands.content.Content$QueryCommand;

        specialinvoke $r7.<com.android.commands.content.Content$QueryCommand: void <init>(android.net.Uri,int,java.lang.String[],java.lang.String,java.lang.String)>(r1, i0, r2, r4, r3);

        return $r7;
    }

    public static void <clinit>()
    {
        <com.android.commands.content.Content$Parser: java.lang.String TYPE_STRING> = "s";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_LONG> = "l";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_INTEGER> = "i";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_FLOAT> = "f";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_DOUBLE> = "d";

        <com.android.commands.content.Content$Parser: java.lang.String TYPE_BOOLEAN> = "b";

        <com.android.commands.content.Content$Parser: java.lang.String COLON> = ":";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_WHERE> = "--where";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_USER> = "--user";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_URI> = "--uri";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_UPDATE> = "update";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_SORT> = "--sort";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_QUERY> = "query";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_PROJECTION> = "--projection";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_PREFIX> = "--";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_METHOD> = "--method";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_INSERT> = "insert";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_EXTRA> = "--extra";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_DELETE> = "delete";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_CALL> = "call";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_BIND> = "--bind";

        <com.android.commands.content.Content$Parser: java.lang.String ARGUMENT_ARG> = "--arg";

        return;
    }
}
