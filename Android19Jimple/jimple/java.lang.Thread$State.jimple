public final enum class java.lang.Thread$State extends java.lang.Enum
{
    private static final java.lang.Thread$State[] $VALUES;
    public static final enum java.lang.Thread$State BLOCKED;
    public static final enum java.lang.Thread$State NEW;
    public static final enum java.lang.Thread$State RUNNABLE;
    public static final enum java.lang.Thread$State TERMINATED;
    public static final enum java.lang.Thread$State TIMED_WAITING;
    public static final enum java.lang.Thread$State WAITING;

    static void <clinit>()
    {
        java.lang.Thread$State[] r0;
        java.lang.Thread$State $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r1 = new java.lang.Thread$State;

        specialinvoke $r1.<java.lang.Thread$State: void <init>(java.lang.String,int)>("NEW", 0);

        <java.lang.Thread$State: java.lang.Thread$State NEW> = $r1;

        $r2 = new java.lang.Thread$State;

        specialinvoke $r2.<java.lang.Thread$State: void <init>(java.lang.String,int)>("RUNNABLE", 1);

        <java.lang.Thread$State: java.lang.Thread$State RUNNABLE> = $r2;

        $r3 = new java.lang.Thread$State;

        specialinvoke $r3.<java.lang.Thread$State: void <init>(java.lang.String,int)>("BLOCKED", 2);

        <java.lang.Thread$State: java.lang.Thread$State BLOCKED> = $r3;

        $r4 = new java.lang.Thread$State;

        specialinvoke $r4.<java.lang.Thread$State: void <init>(java.lang.String,int)>("WAITING", 3);

        <java.lang.Thread$State: java.lang.Thread$State WAITING> = $r4;

        $r5 = new java.lang.Thread$State;

        specialinvoke $r5.<java.lang.Thread$State: void <init>(java.lang.String,int)>("TIMED_WAITING", 4);

        <java.lang.Thread$State: java.lang.Thread$State TIMED_WAITING> = $r5;

        $r6 = new java.lang.Thread$State;

        specialinvoke $r6.<java.lang.Thread$State: void <init>(java.lang.String,int)>("TERMINATED", 5);

        <java.lang.Thread$State: java.lang.Thread$State TERMINATED> = $r6;

        r0 = newarray (java.lang.Thread$State)[6];

        $r7 = <java.lang.Thread$State: java.lang.Thread$State NEW>;

        r0[0] = $r7;

        $r8 = <java.lang.Thread$State: java.lang.Thread$State RUNNABLE>;

        r0[1] = $r8;

        $r9 = <java.lang.Thread$State: java.lang.Thread$State BLOCKED>;

        r0[2] = $r9;

        $r10 = <java.lang.Thread$State: java.lang.Thread$State WAITING>;

        r0[3] = $r10;

        $r11 = <java.lang.Thread$State: java.lang.Thread$State TIMED_WAITING>;

        r0[4] = $r11;

        $r12 = <java.lang.Thread$State: java.lang.Thread$State TERMINATED>;

        r0[5] = $r12;

        <java.lang.Thread$State: java.lang.Thread$State[] $VALUES> = r0;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        java.lang.Thread$State r0;
        java.lang.String r1;
        int i0;

        r0 := @this: java.lang.Thread$State;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static java.lang.Thread$State valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        java.lang.Thread$State $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "java/lang/Thread$State", r0);

        $r2 = (java.lang.Thread$State) $r1;

        return $r2;
    }

    public static java.lang.Thread$State[] values()
    {
        java.lang.Thread$State[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <java.lang.Thread$State: java.lang.Thread$State[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (java.lang.Thread$State[]) $r1;

        return $r2;
    }
}
