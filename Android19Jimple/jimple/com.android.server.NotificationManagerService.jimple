public class com.android.server.NotificationManagerService extends android.app.INotificationManager$Stub
{
    private static final java.lang.String ATTR_NAME;
    private static final java.lang.String ATTR_VERSION;
    private static final boolean DBG;
    private static final int DB_VERSION;
    private static final int DEFAULT_STREAM_TYPE;
    private static final long[] DEFAULT_VIBRATE_PATTERN;
    private static final java.lang.String ENABLED_NOTIFICATION_LISTENERS_SEPARATOR;
    private static final boolean ENABLE_BLOCKED_NOTIFICATIONS;
    private static final boolean ENABLE_BLOCKED_TOASTS;
    private static final int JUNK_SCORE;
    private static final int LONG_DELAY;
    private static final int MAX_PACKAGE_NOTIFICATIONS;
    private static final int MESSAGE_TIMEOUT;
    private static final int NOTIFICATION_PRIORITY_MULTIPLIER;
    private static final int SCORE_DISPLAY_THRESHOLD;
    private static final int SCORE_INTERRUPTION_THRESHOLD;
    private static final boolean SCORE_ONGOING_HIGHER;
    private static final int SHORT_DELAY;
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_BLOCKED_PKGS;
    private static final java.lang.String TAG_BODY;
    private static final java.lang.String TAG_PACKAGE;
    private static final int VIBRATE_PATTERN_MAXLEN;
    final android.app.IActivityManager mAm;
    private final android.app.AppOpsManager mAppOps;
    com.android.server.NotificationManagerService$Archive mArchive;
    private com.android.server.LightsService$Light mAttentionLight;
    private android.media.IAudioService mAudioService;
    private java.util.HashSet mBlockedPackages;
    final android.content.Context mContext;
    private int mDefaultNotificationColor;
    private int mDefaultNotificationLedOff;
    private int mDefaultNotificationLedOn;
    private long[] mDefaultVibrationPattern;
    private int mDisabledNotifications;
    private java.util.HashSet mEnabledListenerPackageNames;
    private java.util.HashSet mEnabledListenersForCurrentUser;
    private long[] mFallbackVibrationPattern;
    final android.os.IBinder mForegroundToken;
    private com.android.server.NotificationManagerService$WorkerHandler mHandler;
    private boolean mInCall;
    private android.content.BroadcastReceiver mIntentReceiver;
    private com.android.server.NotificationManagerService$NotificationRecord mLedNotification;
    private java.util.ArrayList mLights;
    private java.util.ArrayList mListeners;
    private com.android.server.StatusBarManagerService$NotificationCallbacks mNotificationCallbacks;
    private com.android.server.LightsService$Light mNotificationLight;
    private final java.util.ArrayList mNotificationList;
    private boolean mNotificationPulseEnabled;
    private android.util.AtomicFile mPolicyFile;
    private final java.util.ArrayList mScorers;
    private boolean mScreenOn;
    private java.util.ArrayList mServicesBinding;
    private com.android.server.NotificationManagerService$SettingsObserver mSettingsObserver;
    private com.android.server.NotificationManagerService$NotificationRecord mSoundNotification;
    private com.android.server.StatusBarManagerService mStatusBar;
    private boolean mSystemReady;
    private java.util.ArrayList mToastQueue;
    final android.os.UserManager mUserManager;
    private com.android.server.NotificationManagerService$NotificationRecord mVibrateNotification;
    private android.os.Vibrator mVibrator;

    static void <clinit>()
    {
        long[] $r0;

        <com.android.server.NotificationManagerService: int VIBRATE_PATTERN_MAXLEN> = 17;

        <com.android.server.NotificationManagerService: java.lang.String TAG_PACKAGE> = "package";

        <com.android.server.NotificationManagerService: java.lang.String TAG_BODY> = "notification-policy";

        <com.android.server.NotificationManagerService: java.lang.String TAG_BLOCKED_PKGS> = "blocked-packages";

        <com.android.server.NotificationManagerService: java.lang.String TAG> = "NotificationService";

        <com.android.server.NotificationManagerService: int SHORT_DELAY> = 2000;

        <com.android.server.NotificationManagerService: boolean SCORE_ONGOING_HIGHER> = 0;

        <com.android.server.NotificationManagerService: int SCORE_INTERRUPTION_THRESHOLD> = -10;

        <com.android.server.NotificationManagerService: int SCORE_DISPLAY_THRESHOLD> = -20;

        <com.android.server.NotificationManagerService: int NOTIFICATION_PRIORITY_MULTIPLIER> = 10;

        <com.android.server.NotificationManagerService: int MESSAGE_TIMEOUT> = 2;

        <com.android.server.NotificationManagerService: int MAX_PACKAGE_NOTIFICATIONS> = 50;

        <com.android.server.NotificationManagerService: int LONG_DELAY> = 3500;

        <com.android.server.NotificationManagerService: int JUNK_SCORE> = -1000;

        <com.android.server.NotificationManagerService: boolean ENABLE_BLOCKED_TOASTS> = 1;

        <com.android.server.NotificationManagerService: boolean ENABLE_BLOCKED_NOTIFICATIONS> = 1;

        <com.android.server.NotificationManagerService: java.lang.String ENABLED_NOTIFICATION_LISTENERS_SEPARATOR> = ":";

        <com.android.server.NotificationManagerService: int DEFAULT_STREAM_TYPE> = 5;

        <com.android.server.NotificationManagerService: int DB_VERSION> = 1;

        <com.android.server.NotificationManagerService: boolean DBG> = 0;

        <com.android.server.NotificationManagerService: java.lang.String ATTR_VERSION> = "version";

        <com.android.server.NotificationManagerService: java.lang.String ATTR_NAME> = "name";

        $r0 = newarray (long)[4];

        $r0[0] = 0L;

        $r0[1] = 250L;

        $r0[2] = 250L;

        $r0[3] = 250L;

        <com.android.server.NotificationManagerService: long[] DEFAULT_VIBRATE_PATTERN> = $r0;

        return;
    }

    void <init>(android.content.Context, com.android.server.StatusBarManagerService, com.android.server.LightsService)
    {
        com.android.server.NotificationManagerService r0;
        android.content.Context r1, $r36, $r40, $r50, $r51, $r55, $r61, $r64;
        com.android.server.StatusBarManagerService r2;
        com.android.server.LightsService r3;
        android.content.res.Resources r4;
        android.content.IntentFilter r5, r6, r7, $r45, $r48, $r57;
        java.lang.String[] r8;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String r9, $r68, $r74, $r79;
        java.lang.IllegalAccessException r10, $r70;
        java.lang.InstantiationException r11, $r83;
        java.lang.ClassNotFoundException r12, $r76;
        com.android.internal.notification.NotificationScorer r13;
        java.util.ArrayList $r14, $r16, $r17, $r19, $r23, $r29, $r62;
        android.os.Binder $r15;
        java.util.HashSet $r18, $r20, $r21;
        com.android.server.NotificationManagerService$Archive $r22;
        java.lang.Object $r24, $r31, $r35, $r60;
        android.os.Vibrator $r25;
        com.android.server.NotificationManagerService$4 $r26;
        com.android.server.NotificationManagerService$5 $r27;
        android.os.UserManager $r28;
        android.app.IActivityManager $r30;
        android.app.AppOpsManager $r32;
        com.android.server.StatusBarManagerService$NotificationCallbacks $r33;
        com.android.server.NotificationManagerService$WorkerHandler $r34, $r54;
        com.android.server.LightsService$Light $r37, $r38;
        long[] $r39, $r41, $r42, $r43;
        android.content.BroadcastReceiver $r44, $r47, $r58;
        android.content.ContentResolver $r46;
        com.android.server.NotificationManagerService$SettingsObserver $r53, $r63;
        java.lang.Class $r59;
        java.lang.ClassLoader $r65;
        java.lang.StringBuilder $r66, $r67, $r69, $r71, $r72, $r73, $r75, $r77, $r78, $r80, $r81, $r82;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.StatusBarManagerService;

        r3 := @parameter2: com.android.server.LightsService;

        specialinvoke r0.<android.app.INotificationManager$Stub: void <init>()>();

        $r15 = new android.os.Binder;

        specialinvoke $r15.<android.os.Binder: void <init>()>();

        r0.<com.android.server.NotificationManagerService: android.os.IBinder mForegroundToken> = $r15;

        r0.<com.android.server.NotificationManagerService: boolean mScreenOn> = 1;

        r0.<com.android.server.NotificationManagerService: boolean mInCall> = 0;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList> = $r14;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.NotificationManagerService: java.util.ArrayList mLights> = $r17;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners> = $r16;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.NotificationManagerService: java.util.ArrayList mServicesBinding> = $r19;

        $r18 = new java.util.HashSet;

        specialinvoke $r18.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.NotificationManagerService: java.util.HashSet mEnabledListenersForCurrentUser> = $r18;

        $r21 = new java.util.HashSet;

        specialinvoke $r21.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.NotificationManagerService: java.util.HashSet mEnabledListenerPackageNames> = $r21;

        $r20 = new java.util.HashSet;

        specialinvoke $r20.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.NotificationManagerService: java.util.HashSet mBlockedPackages> = $r20;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.NotificationManagerService: java.util.ArrayList mScorers> = $r23;

        $r22 = new com.android.server.NotificationManagerService$Archive;

        specialinvoke $r22.<com.android.server.NotificationManagerService$Archive: void <init>()>();

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$Archive mArchive> = $r22;

        $r26 = new com.android.server.NotificationManagerService$4;

        specialinvoke $r26.<com.android.server.NotificationManagerService$4: void <init>(com.android.server.NotificationManagerService)>(r0);

        r0.<com.android.server.NotificationManagerService: com.android.server.StatusBarManagerService$NotificationCallbacks mNotificationCallbacks> = $r26;

        $r27 = new com.android.server.NotificationManagerService$5;

        specialinvoke $r27.<com.android.server.NotificationManagerService$5: void <init>(com.android.server.NotificationManagerService)>(r0);

        r0.<com.android.server.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver> = $r27;

        r0.<com.android.server.NotificationManagerService: android.content.Context mContext> = r1;

        $r24 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r25 = (android.os.Vibrator) $r24;

        r0.<com.android.server.NotificationManagerService: android.os.Vibrator mVibrator> = $r25;

        $r30 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r0.<com.android.server.NotificationManagerService: android.app.IActivityManager mAm> = $r30;

        $r31 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("user");

        $r28 = (android.os.UserManager) $r31;

        r0.<com.android.server.NotificationManagerService: android.os.UserManager mUserManager> = $r28;

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue> = $r29;

        $r34 = new com.android.server.NotificationManagerService$WorkerHandler;

        specialinvoke $r34.<com.android.server.NotificationManagerService$WorkerHandler: void <init>(com.android.server.NotificationManagerService,com.android.server.NotificationManagerService$1)>(r0, null);

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$WorkerHandler mHandler> = $r34;

        $r35 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("appops");

        $r32 = (android.app.AppOpsManager) $r35;

        r0.<com.android.server.NotificationManagerService: android.app.AppOpsManager mAppOps> = $r32;

        specialinvoke r0.<com.android.server.NotificationManagerService: void importOldBlockDb()>();

        r0.<com.android.server.NotificationManagerService: com.android.server.StatusBarManagerService mStatusBar> = r2;

        $r33 = r0.<com.android.server.NotificationManagerService: com.android.server.StatusBarManagerService$NotificationCallbacks mNotificationCallbacks>;

        virtualinvoke r2.<com.android.server.StatusBarManagerService: void setNotificationCallbacks(com.android.server.StatusBarManagerService$NotificationCallbacks)>($r33);

        $r37 = virtualinvoke r3.<com.android.server.LightsService: com.android.server.LightsService$Light getLight(int)>(4);

        r0.<com.android.server.NotificationManagerService: com.android.server.LightsService$Light mNotificationLight> = $r37;

        $r38 = virtualinvoke r3.<com.android.server.LightsService: com.android.server.LightsService$Light getLight(int)>(5);

        r0.<com.android.server.NotificationManagerService: com.android.server.LightsService$Light mAttentionLight> = $r38;

        $r36 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        r4 = virtualinvoke $r36.<android.content.Context: android.content.res.Resources getResources()>();

        $i4 = virtualinvoke r4.<android.content.res.Resources: int getColor(int)>(17170543);

        r0.<com.android.server.NotificationManagerService: int mDefaultNotificationColor> = $i4;

        $i3 = virtualinvoke r4.<android.content.res.Resources: int getInteger(int)>(17694753);

        r0.<com.android.server.NotificationManagerService: int mDefaultNotificationLedOn> = $i3;

        $i2 = virtualinvoke r4.<android.content.res.Resources: int getInteger(int)>(17694754);

        r0.<com.android.server.NotificationManagerService: int mDefaultNotificationLedOff> = $i2;

        $r39 = <com.android.server.NotificationManagerService: long[] DEFAULT_VIBRATE_PATTERN>;

        $r43 = staticinvoke <com.android.server.NotificationManagerService: long[] getLongArray(android.content.res.Resources,int,int,long[])>(r4, 17236009, 17, $r39);

        r0.<com.android.server.NotificationManagerService: long[] mDefaultVibrationPattern> = $r43;

        $r42 = <com.android.server.NotificationManagerService: long[] DEFAULT_VIBRATE_PATTERN>;

        $r41 = staticinvoke <com.android.server.NotificationManagerService: long[] getLongArray(android.content.res.Resources,int,int,long[])>(r4, 17236010, 17, $r42);

        r0.<com.android.server.NotificationManagerService: long[] mFallbackVibrationPattern> = $r41;

        $r40 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r46 = virtualinvoke $r40.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i5 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r46, "device_provisioned", 0);

        if $i5 != 0 goto label1;

        r0.<com.android.server.NotificationManagerService: int mDisabledNotifications> = 262144;

     label1:
        $r45 = new android.content.IntentFilter;

        specialinvoke $r45.<android.content.IntentFilter: void <init>()>();

        r5 = $r45;

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PHONE_STATE");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_PRESENT");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_STOPPED");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_SWITCHED");

        $r50 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r44 = r0.<com.android.server.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r50.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r44, r5);

        $r48 = new android.content.IntentFilter;

        specialinvoke $r48.<android.content.IntentFilter: void <init>()>();

        r6 = $r48;

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_ADDED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_REMOVED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_CHANGED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.PACKAGE_RESTARTED");

        virtualinvoke r6.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.QUERY_PACKAGE_RESTART");

        virtualinvoke r6.<android.content.IntentFilter: void addDataScheme(java.lang.String)>("package");

        $r55 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r47 = r0.<com.android.server.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r55.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r47, r6);

        $r57 = new android.content.IntentFilter;

        specialinvoke $r57.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE");

        r7 = $r57;

        $r51 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r58 = r0.<com.android.server.NotificationManagerService: android.content.BroadcastReceiver mIntentReceiver>;

        virtualinvoke $r51.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r58, r7);

        $r53 = new com.android.server.NotificationManagerService$SettingsObserver;

        $r54 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$WorkerHandler mHandler>;

        specialinvoke $r53.<com.android.server.NotificationManagerService$SettingsObserver: void <init>(com.android.server.NotificationManagerService,android.os.Handler)>(r0, $r54);

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$SettingsObserver mSettingsObserver> = $r53;

        $r63 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$SettingsObserver mSettingsObserver>;

        virtualinvoke $r63.<com.android.server.NotificationManagerService$SettingsObserver: void observe()>();

        r8 = virtualinvoke r4.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(17236012);

        i0 = lengthof r8;

        i1 = 0;

     label2:
        if i1 >= i0 goto label8;

        r9 = r8[i1];

     label3:
        $r64 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r65 = virtualinvoke $r64.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r59 = virtualinvoke $r65.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r9);

        $r60 = virtualinvoke $r59.<java.lang.Class: java.lang.Object newInstance()>();

        r13 = (com.android.internal.notification.NotificationScorer) $r60;

        $r61 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        interfaceinvoke r13.<com.android.internal.notification.NotificationScorer: void initialize(android.content.Context)>($r61);

        $r62 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mScorers>;

        virtualinvoke $r62.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $r76 := @caughtexception;

        r12 = $r76;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find scorer ");

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", $r74, r12);

        goto label4;

     label6:
        $r83 := @caughtexception;

        r11 = $r83;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t instantiate scorer ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r78 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", $r79, r11);

        goto label4;

     label7:
        $r70 := @caughtexception;

        r10 = $r70;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem accessing scorer ");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", $r68, r10);

        goto label4;

     label8:
        return;

        catch java.lang.ClassNotFoundException from label3 to label4 with label5;
        catch java.lang.InstantiationException from label3 to label4 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label7;
    }

    static java.util.HashSet access$000(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        java.util.HashSet $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: java.util.HashSet mEnabledListenersForCurrentUser>;

        return $r1;
    }

    static java.util.ArrayList access$100(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        return $r1;
    }

    static com.android.server.NotificationManagerService$NotificationRecord access$1002(com.android.server.NotificationManagerService, com.android.server.NotificationManagerService$NotificationRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: com.android.server.NotificationManagerService$NotificationRecord;

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mVibrateNotification> = r1;

        return r1;
    }

    static java.util.ArrayList access$1100(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mLights>;

        return $r1;
    }

    static com.android.server.NotificationManagerService$NotificationRecord access$1200(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mLedNotification>;

        return $r1;
    }

    static com.android.server.NotificationManagerService$NotificationRecord access$1202(com.android.server.NotificationManagerService, com.android.server.NotificationManagerService$NotificationRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: com.android.server.NotificationManagerService$NotificationRecord;

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mLedNotification> = r1;

        return r1;
    }

    static void access$1300(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        specialinvoke r0.<com.android.server.NotificationManagerService: void updateLightsLocked()>();

        return;
    }

    static java.util.HashSet access$1400(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        java.util.HashSet $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: java.util.HashSet mEnabledListenerPackageNames>;

        return $r1;
    }

    static boolean access$1502(com.android.server.NotificationManagerService, boolean)
    {
        com.android.server.NotificationManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.NotificationManagerService: boolean mScreenOn> = z0;

        return z0;
    }

    static boolean access$1602(com.android.server.NotificationManagerService, boolean)
    {
        com.android.server.NotificationManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.NotificationManagerService: boolean mInCall> = z0;

        return z0;
    }

    static void access$1700(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        specialinvoke r0.<com.android.server.NotificationManagerService: void updateNotificationPulse()>();

        return;
    }

    static com.android.server.LightsService$Light access$1800(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.LightsService$Light $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: com.android.server.LightsService$Light mNotificationLight>;

        return $r1;
    }

    static com.android.server.NotificationManagerService$SettingsObserver access$1900(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$SettingsObserver $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$SettingsObserver mSettingsObserver>;

        return $r1;
    }

    static java.util.ArrayList access$200(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mServicesBinding>;

        return $r1;
    }

    static boolean access$2000(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $z0 = r0.<com.android.server.NotificationManagerService: boolean mNotificationPulseEnabled>;

        return $z0;
    }

    static boolean access$2002(com.android.server.NotificationManagerService, boolean)
    {
        com.android.server.NotificationManagerService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.NotificationManagerService: boolean mNotificationPulseEnabled> = z0;

        return z0;
    }

    static void access$2200(com.android.server.NotificationManagerService, com.android.server.NotificationManagerService$ToastRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$ToastRecord r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: com.android.server.NotificationManagerService$ToastRecord;

        specialinvoke r0.<com.android.server.NotificationManagerService: void handleTimeout(com.android.server.NotificationManagerService$ToastRecord)>(r1);

        return;
    }

    static int access$2300(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = staticinvoke <com.android.server.NotificationManagerService: int clamp(int,int,int)>(i0, i1, i2);

        return $i3;
    }

    static java.util.ArrayList access$2400(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mScorers>;

        return $r1;
    }

    static boolean access$2500(com.android.server.NotificationManagerService, java.lang.String, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.NotificationManagerService: boolean noteNotificationOp(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static int access$2600(com.android.server.NotificationManagerService, java.lang.String, java.lang.String, int, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, $i2;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $i2 = specialinvoke r0.<com.android.server.NotificationManagerService: int indexOfNotificationLocked(java.lang.String,java.lang.String,int,int)>(r1, r2, i0, i1);

        return $i2;
    }

    static com.android.server.StatusBarManagerService access$2700(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.StatusBarManagerService $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        return $r1;
    }

    static com.android.server.LightsService$Light access$2800(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.LightsService$Light $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: com.android.server.LightsService$Light mAttentionLight>;

        return $r1;
    }

    static void access$2900(com.android.server.NotificationManagerService, android.app.Notification, java.lang.CharSequence)
    {
        com.android.server.NotificationManagerService r0;
        android.app.Notification r1;
        java.lang.CharSequence r2;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: android.app.Notification;

        r2 := @parameter2: java.lang.CharSequence;

        specialinvoke r0.<com.android.server.NotificationManagerService: void sendAccessibilityEvent(android.app.Notification,java.lang.CharSequence)>(r1, r2);

        return;
    }

    static java.util.ArrayList access$300(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        return $r1;
    }

    static void access$3000(com.android.server.NotificationManagerService, com.android.server.NotificationManagerService$NotificationRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: com.android.server.NotificationManagerService$NotificationRecord;

        specialinvoke r0.<com.android.server.NotificationManagerService: void notifyPostedLocked(com.android.server.NotificationManagerService$NotificationRecord)>(r1);

        return;
    }

    static void access$3100(com.android.server.NotificationManagerService, com.android.server.NotificationManagerService$NotificationRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: com.android.server.NotificationManagerService$NotificationRecord;

        specialinvoke r0.<com.android.server.NotificationManagerService: void notifyRemovedLocked(com.android.server.NotificationManagerService$NotificationRecord)>(r1);

        return;
    }

    static boolean access$3200(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $z0 = r0.<com.android.server.NotificationManagerService: boolean mSystemReady>;

        return $z0;
    }

    static long[] access$3300(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        long[] $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: long[] mDefaultVibrationPattern>;

        return $r1;
    }

    static long[] access$3400(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        long[] $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: long[] mFallbackVibrationPattern>;

        return $r1;
    }

    static void access$3500(com.android.server.NotificationManagerService, com.android.server.NotificationManagerService$NotificationRecord, boolean)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1;
        boolean z0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: com.android.server.NotificationManagerService$NotificationRecord;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.NotificationManagerService: void cancelNotificationLocked(com.android.server.NotificationManagerService$NotificationRecord,boolean)>(r1, z0);

        return;
    }

    static java.lang.String access$400(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1, $r2;
        int i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = staticinvoke <com.android.server.NotificationManagerService: java.lang.String idDebugString(android.content.Context,java.lang.String,int)>(r0, r1, i0);

        return $r2;
    }

    static int access$500(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        int $i0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $i0 = r0.<com.android.server.NotificationManagerService: int mDisabledNotifications>;

        return $i0;
    }

    static int access$502(com.android.server.NotificationManagerService, int)
    {
        com.android.server.NotificationManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        i0 := @parameter1: int;

        r0.<com.android.server.NotificationManagerService: int mDisabledNotifications> = i0;

        return i0;
    }

    static android.media.IAudioService access$600(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        android.media.IAudioService $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: android.media.IAudioService mAudioService>;

        return $r1;
    }

    static android.os.Vibrator access$700(com.android.server.NotificationManagerService)
    {
        com.android.server.NotificationManagerService r0;
        android.os.Vibrator $r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        $r1 = r0.<com.android.server.NotificationManagerService: android.os.Vibrator mVibrator>;

        return $r1;
    }

    static void access$800(com.android.server.NotificationManagerService, java.lang.String, java.lang.String, int, int, int, boolean, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3;
        boolean z0;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        z0 := @parameter6: boolean;

        i3 := @parameter7: int;

        specialinvoke r0.<com.android.server.NotificationManagerService: void cancelNotification(java.lang.String,java.lang.String,int,int,int,boolean,int)>(r1, r2, i0, i1, i2, z0, i3);

        return;
    }

    static com.android.server.NotificationManagerService$NotificationRecord access$902(com.android.server.NotificationManagerService, com.android.server.NotificationManagerService$NotificationRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1;

        r0 := @parameter0: com.android.server.NotificationManagerService;

        r1 := @parameter1: com.android.server.NotificationManagerService$NotificationRecord;

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mSoundNotification> = r1;

        return r1;
    }

    private void cancelNotification(java.lang.String, java.lang.String, int, int, int, boolean, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, i3;
        boolean z0;
        com.android.server.NotificationManagerService$7 $r3;
        com.android.server.NotificationManagerService$WorkerHandler $r4;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        i3 := @parameter6: int;

        $r4 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$WorkerHandler mHandler>;

        $r3 = new com.android.server.NotificationManagerService$7;

        specialinvoke $r3.<com.android.server.NotificationManagerService$7: void <init>(com.android.server.NotificationManagerService,java.lang.String,int,java.lang.String,int,int,int,boolean)>(r0, r1, i0, r2, i3, i1, i2, z0);

        virtualinvoke $r4.<com.android.server.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private void cancelNotificationLocked(com.android.server.NotificationManagerService$NotificationRecord, boolean)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1, $r9, $r10, $r13;
        boolean z0;
        long l0, l1, l2;
        java.lang.Throwable r2, r4, r6, $r22, $r23, $r27;
        android.media.IRingtonePlayer r5;
        android.app.PendingIntent$CanceledException r7, $r28;
        int $i3;
        android.app.Notification $r8, $r19, $r21;
        java.util.ArrayList $r11;
        android.service.notification.StatusBarNotification $r12, $r32;
        com.android.server.NotificationManagerService$Archive $r14;
        android.os.Vibrator $r15;
        android.media.IAudioService $r16;
        android.os.IBinder $r17;
        android.app.PendingIntent $r18, $r24;
        com.android.server.StatusBarManagerService $r20;
        android.os.RemoteException $r25;
        java.lang.StringBuilder $r26, $r30, $r31;
        java.lang.String $r29, $r33;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: com.android.server.NotificationManagerService$NotificationRecord;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label02;

        $r21 = virtualinvoke r1.<com.android.server.NotificationManagerService$NotificationRecord: android.app.Notification getNotification()>();

        $r18 = $r21.<android.app.Notification: android.app.PendingIntent deleteIntent>;

        if $r18 == null goto label02;

     label01:
        $r19 = virtualinvoke r1.<com.android.server.NotificationManagerService$NotificationRecord: android.app.Notification getNotification()>();

        $r24 = $r19.<android.app.Notification: android.app.PendingIntent deleteIntent>;

        virtualinvoke $r24.<android.app.PendingIntent: void send()>();

     label02:
        $r8 = virtualinvoke r1.<com.android.server.NotificationManagerService$NotificationRecord: android.app.Notification getNotification()>();

        $i3 = $r8.<android.app.Notification: int icon>;

        if $i3 == 0 goto label05;

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label03:
        $r20 = r0.<com.android.server.NotificationManagerService: com.android.server.StatusBarManagerService mStatusBar>;

        $r17 = r1.<com.android.server.NotificationManagerService$NotificationRecord: android.os.IBinder statusBarKey>;

        virtualinvoke $r20.<com.android.server.StatusBarManagerService: void removeNotification(android.os.IBinder)>($r17);

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        r1.<com.android.server.NotificationManagerService$NotificationRecord: android.os.IBinder statusBarKey> = null;

        specialinvoke r0.<com.android.server.NotificationManagerService: void notifyRemovedLocked(com.android.server.NotificationManagerService$NotificationRecord)>(r1);

     label05:
        $r10 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mSoundNotification>;

        if $r10 != r1 goto label10;

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mSoundNotification> = null;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label06:
        $r16 = r0.<com.android.server.NotificationManagerService: android.media.IAudioService mAudioService>;

        r5 = interfaceinvoke $r16.<android.media.IAudioService: android.media.IRingtonePlayer getRingtonePlayer()>();

     label07:
        if r5 == null goto label09;

     label08:
        interfaceinvoke r5.<android.media.IRingtonePlayer: void stopAsync()>();

     label09:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label10:
        $r9 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mVibrateNotification>;

        if $r9 != r1 goto label13;

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mVibrateNotification> = null;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label11:
        $r15 = r0.<com.android.server.NotificationManagerService: android.os.Vibrator mVibrator>;

        virtualinvoke $r15.<android.os.Vibrator: void cancel()>();

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label13:
        $r11 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mLights>;

        virtualinvoke $r11.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r13 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mLedNotification>;

        if $r13 != r1 goto label14;

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mLedNotification> = null;

     label14:
        $r14 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$Archive mArchive>;

        $r12 = r1.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        virtualinvoke $r14.<com.android.server.NotificationManagerService$Archive: void record(android.service.notification.StatusBarNotification)>($r12);

        return;

     label15:
        $r28 := @caughtexception;

        r7 = $r28;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("canceled PendingIntent for ");

        $r32 = r1.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r29 = virtualinvoke $r32.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", $r33, r7);

        goto label02;

     label16:
        $r23 := @caughtexception;

        r6 = $r23;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r6;

     label17:
        $r27 := @caughtexception;

        r4 = $r27;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

     label18:
        $r22 := @caughtexception;

        r2 = $r22;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

     label19:
        $r25 := @caughtexception;

        goto label09;

        catch android.app.PendingIntent$CanceledException from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch android.os.RemoteException from label06 to label07 with label19;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch android.os.RemoteException from label08 to label09 with label19;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label11 to label12 with label18;
    }

    private void cancelToastLocked(int)
    {
        com.android.server.NotificationManagerService r0;
        int i0, $i1, $i2;
        com.android.server.NotificationManagerService$ToastRecord r1;
        java.util.ArrayList $r3, $r6, $r8;
        java.lang.Object $r4;
        android.app.ITransientNotification $r5, $r13;
        android.os.RemoteException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r17;
        java.lang.String $r14, $r16;

        r0 := @this: com.android.server.NotificationManagerService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.NotificationManagerService$ToastRecord) $r4;

     label1:
        $r5 = r1.<com.android.server.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        interfaceinvoke $r5.<android.app.ITransientNotification: void hide()>();

     label2:
        $r6 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $i1 = r1.<com.android.server.NotificationManagerService$ToastRecord: int pid>;

        specialinvoke r0.<com.android.server.NotificationManagerService: void keepProcessAliveLocked(int)>($i1);

        $r8 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label3;

        specialinvoke r0.<com.android.server.NotificationManagerService: void showNextToastLocked()>();

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object died trying to hide notification ");

        $r13 = r1.<com.android.server.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r14 = r1.<com.android.server.NotificationManagerService$ToastRecord: java.lang.String pkg>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r16);

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label4;
    }

    private com.android.server.NotificationManagerService$NotificationListenerInfo checkListenerToken(android.service.notification.INotificationListener)
    {
        com.android.server.NotificationManagerService r0;
        android.service.notification.INotificationListener r1, $r13;
        android.os.IBinder r2, $r12;
        int i0, i1;
        com.android.server.NotificationManagerService$NotificationListenerInfo r3;
        java.util.ArrayList $r4, $r10;
        java.lang.SecurityException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        java.lang.Object $r11;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 = interfaceinvoke r1.<android.service.notification.INotificationListener: android.os.IBinder asBinder()>();

        $r4 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r10 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.NotificationManagerService$NotificationListenerInfo) $r11;

        $r13 = r3.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.service.notification.INotificationListener listener>;

        $r12 = interfaceinvoke $r13.<android.service.notification.INotificationListener: android.os.IBinder asBinder()>();

        if $r12 != r2 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = new java.lang.SecurityException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disallowed call from unknown listener: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    private static final int clamp(int, int, int)
    {
        int i0, i1, i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= i1 goto label1;

        return i1;

     label1:
        if i0 <= i2 goto label2;

        return i2;

     label2:
        return i0;
    }

    static long[] getLongArray(android.content.res.Resources, int, int, long[])
    {
        android.content.res.Resources r0;
        int i0, i1, i2, i3, $i4, $i5;
        long[] r1, r3;
        int[] r2;
        long $l6;

        r0 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: long[];

        r2 = virtualinvoke r0.<android.content.res.Resources: int[] getIntArray(int)>(i0);

        if r2 != null goto label1;

        return r1;

     label1:
        $i4 = lengthof r2;

        if $i4 <= i1 goto label4;

        i2 = i1;

     label2:
        r3 = newarray (long)[i2];

        i3 = 0;

     label3:
        if i3 >= i2 goto label5;

        $i5 = r2[i3];

        $l6 = (long) $i5;

        r3[i3] = $l6;

        i3 = i3 + 1;

        goto label3;

     label4:
        i2 = lengthof r2;

        goto label2;

     label5:
        return r3;
    }

    private void handleTimeout(com.android.server.NotificationManagerService$ToastRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$ToastRecord r1;
        java.util.ArrayList r2;
        java.lang.Throwable r3, $r6;
        int i0;
        android.app.ITransientNotification $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: com.android.server.NotificationManagerService$ToastRecord;

        r2 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r2;

     label1:
        $r5 = r1.<com.android.server.NotificationManagerService$ToastRecord: java.lang.String pkg>;

        $r4 = r1.<com.android.server.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        i0 = specialinvoke r0.<com.android.server.NotificationManagerService: int indexOfToastLocked(java.lang.String,android.app.ITransientNotification)>($r5, $r4);

     label2:
        if i0 < 0 goto label4;

     label3:
        specialinvoke r0.<com.android.server.NotificationManagerService: void cancelToastLocked(int)>(i0);

     label4:
        exitmonitor r2;

     label5:
        return;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private static java.lang.String idDebugString(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0, r2, r7;
        java.lang.String r1, r5;
        int i0;
        android.content.res.Resources r3;
        android.content.res.Resources$NotFoundException $r8;
        android.content.pm.PackageManager$NameNotFoundException $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 == null goto label7;

     label1:
        r7 = virtualinvoke r0.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>(r1, 0);

     label2:
        r2 = r7;

     label3:
        r3 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

     label4:
        r5 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getResourceName(int)>(i0);

     label5:
        return r5;

     label6:
        $r9 := @caughtexception;

        r2 = r0;

        goto label3;

     label7:
        r2 = r0;

        goto label3;

     label8:
        $r8 := @caughtexception;

        return "<name unknown>";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label6;
        catch android.content.res.Resources$NotFoundException from label4 to label5 with label8;
    }

    private void importOldBlockDb()
    {
        com.android.server.NotificationManagerService r0;
        android.content.pm.PackageManager r1;
        java.util.Iterator r2;
        java.lang.String r3;
        android.content.Context $r5;
        java.util.HashSet $r6, $r7;
        boolean $z0;
        android.util.AtomicFile $r8, $r9;
        java.lang.Object $r10;
        android.content.pm.PackageInfo $r11;
        android.content.pm.ApplicationInfo $r12;
        android.content.pm.PackageManager$NameNotFoundException $r13;
        int $i0;

        r0 := @this: com.android.server.NotificationManagerService;

        specialinvoke r0.<com.android.server.NotificationManagerService: void loadBlockDb()>();

        $r5 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        r1 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = r0.<com.android.server.NotificationManagerService: java.util.HashSet mBlockedPackages>;

        r2 = virtualinvoke $r6.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r10;

     label2:
        $r11 = virtualinvoke r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r3, 0);

        $r12 = $r11.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r12.<android.content.pm.ApplicationInfo: int uid>;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void setNotificationsEnabledForPackage(java.lang.String,int,boolean)>(r3, $i0, 0);

     label3:
        goto label1;

     label4:
        $r13 := @caughtexception;

        goto label1;

     label5:
        $r7 = r0.<com.android.server.NotificationManagerService: java.util.HashSet mBlockedPackages>;

        virtualinvoke $r7.<java.util.HashSet: void clear()>();

        $r8 = r0.<com.android.server.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        if $r8 == null goto label6;

        $r9 = r0.<com.android.server.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        virtualinvoke $r9.<android.util.AtomicFile: void delete()>();

     label6:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    private int indexOfNotificationLocked(java.lang.String, java.lang.String, int, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, r2, $r8, $r10, $r11;
        int i0, i1, i2, i3, $i4;
        java.util.ArrayList r3;
        com.android.server.NotificationManagerService$NotificationRecord r4;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2;
        android.service.notification.StatusBarNotification $r6, $r7, $r9, $r12;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label6;

        $r5 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r4 = (com.android.server.NotificationManagerService$NotificationRecord) $r5;

        $z0 = specialinvoke r0.<com.android.server.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.NotificationManagerService$NotificationRecord,int)>(r4, i1);

        if $z0 == 0 goto label2;

        $r6 = r4.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $i4 = virtualinvoke $r6.<android.service.notification.StatusBarNotification: int getId()>();

        if $i4 == i0 goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if r2 != null goto label5;

        $r12 = r4.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r11 = virtualinvoke $r12.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        if $r11 != null goto label2;

     label4:
        $r9 = r4.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r10 = virtualinvoke $r9.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        return i3;

     label5:
        $r7 = r4.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r8 = virtualinvoke $r7.<android.service.notification.StatusBarNotification: java.lang.String getTag()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label4;

        goto label2;

     label6:
        return -1;
    }

    private int indexOfToastLocked(java.lang.String, android.app.ITransientNotification)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, $r7;
        android.app.ITransientNotification r2, $r8;
        android.os.IBinder r3, $r9;
        java.util.ArrayList r4;
        int i0, i1;
        com.android.server.NotificationManagerService$ToastRecord r5;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.ITransientNotification;

        r3 = interfaceinvoke r2.<android.app.ITransientNotification: android.os.IBinder asBinder()>();

        r4 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r6 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.NotificationManagerService$ToastRecord) $r6;

        $r7 = r5.<com.android.server.NotificationManagerService$ToastRecord: java.lang.String pkg>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r8 = r5.<com.android.server.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        $r9 = interfaceinvoke $r8.<android.app.ITransientNotification: android.os.IBinder asBinder()>();

        if $r9 != r3 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    private void keepProcessAliveLocked(int)
    {
        com.android.server.NotificationManagerService r0;
        int i0, i1, i2, i3, $i4;
        java.util.ArrayList r1;
        android.app.IActivityManager r3;
        android.os.IBinder r4;
        boolean z0;
        java.lang.Object $r5;
        com.android.server.NotificationManagerService$ToastRecord $r6;
        android.os.RemoteException $r7;

        r0 := @this: com.android.server.NotificationManagerService;

        i0 := @parameter0: int;

        i1 = 0;

        r1 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r5 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r6 = (com.android.server.NotificationManagerService$ToastRecord) $r5;

        $i4 = $r6.<com.android.server.NotificationManagerService$ToastRecord: int pid>;

        if $i4 != i0 goto label2;

        i1 = i1 + 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        r3 = r0.<com.android.server.NotificationManagerService: android.app.IActivityManager mAm>;

        r4 = r0.<com.android.server.NotificationManagerService: android.os.IBinder mForegroundToken>;

     label4:
        if i1 <= 0 goto label7;

        z0 = 1;

     label5:
        interfaceinvoke r3.<android.app.IActivityManager: void setProcessForeground(android.os.IBinder,int,boolean)>(r4, i0, z0);

     label6:
        return;

     label7:
        z0 = 0;

        goto label5;

     label8:
        $r7 := @caughtexception;

        return;

        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label5 to label6 with label8;
    }

    private void loadBlockDb()
    {
        com.android.server.NotificationManagerService r0;
        java.util.HashSet r1, $r17, $r23;
        java.lang.Throwable r2, r4, $r27, $r30;
        java.io.FileInputStream r3;
        org.xmlpull.v1.XmlPullParserException r5, $r26;
        java.lang.NumberFormatException r6, $r28;
        java.io.IOException r7, $r25;
        org.xmlpull.v1.XmlPullParser r9;
        int i0, i1;
        java.lang.String r10, r11, $r18, $r19, $r20, $r21, $r22, $r24;
        boolean z0, $z1, $z2, $z3;
        android.util.AtomicFile $r12, $r13, $r16;
        java.io.File $r14, $r15;
        java.io.FileNotFoundException $r29;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 = r0.<com.android.server.NotificationManagerService: java.util.HashSet mBlockedPackages>;

        entermonitor r1;

     label01:
        $r12 = r0.<com.android.server.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        if $r12 != null goto label17;

        $r13 = new android.util.AtomicFile;

        $r15 = new java.io.File;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>("/data/system");

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, "notification_policy.xml");

        specialinvoke $r13.<android.util.AtomicFile: void <init>(java.io.File)>($r15);

        r0.<com.android.server.NotificationManagerService: android.util.AtomicFile mPolicyFile> = $r13;

        $r17 = r0.<com.android.server.NotificationManagerService: java.util.HashSet mBlockedPackages>;

        virtualinvoke $r17.<java.util.HashSet: void clear()>();

     label02:
        r3 = null;

     label03:
        $r16 = r0.<com.android.server.NotificationManagerService: android.util.AtomicFile mPolicyFile>;

        r3 = virtualinvoke $r16.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r9 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r3, null);

     label04:
        i0 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label05:
        if i0 == 1 goto label38;

     label06:
        r10 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

     label07:
        if i0 != 2 goto label04;

     label08:
        $r18 = "notification-policy";

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label10;

        $r22 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

     label09:
        goto label04;

     label10:
        $r19 = "blocked-packages";

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z2 == 0 goto label04;

     label11:
        i1 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label12:
        if i1 == 1 goto label04;

     label13:
        r11 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r21 = "package";

        $z3 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z3 == 0 goto label19;

        $r23 = r0.<com.android.server.NotificationManagerService: java.util.HashSet mBlockedPackages>;

        $r24 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        virtualinvoke $r23.<java.util.HashSet: boolean add(java.lang.Object)>($r24);

     label14:
        goto label11;

     label15:
        $r29 := @caughtexception;

     label16:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

     label17:
        exitmonitor r1;

     label18:
        return;

     label19:
        $r20 = "blocked-packages";

        z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r11);

     label20:
        if z0 == 0 goto label11;

        if i1 != 3 goto label11;

        goto label04;

     label21:
        $r25 := @caughtexception;

        r7 = $r25;

     label22:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unable to read blocked notifications database", r7);

     label23:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

     label24:
        goto label17;

     label25:
        $r27 := @caughtexception;

        r2 = $r27;

     label26:
        exitmonitor r1;

     label27:
        throw r2;

     label28:
        $r28 := @caughtexception;

        r6 = $r28;

     label29:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unable to parse blocked notifications database", r6);

     label30:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

     label31:
        goto label17;

     label32:
        $r26 := @caughtexception;

        r5 = $r26;

     label33:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", "Unable to parse blocked notifications database", r5);

     label34:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

     label35:
        goto label17;

     label36:
        $r30 := @caughtexception;

        r4 = $r30;

     label37:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

        throw r4;

     label38:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r3);

     label39:
        goto label17;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.io.FileNotFoundException from label03 to label04 with label15;
        catch java.io.IOException from label03 to label04 with label21;
        catch java.lang.NumberFormatException from label03 to label04 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label32;
        catch java.lang.Throwable from label03 to label04 with label36;
        catch java.io.FileNotFoundException from label04 to label05 with label15;
        catch java.io.IOException from label04 to label05 with label21;
        catch java.lang.NumberFormatException from label04 to label05 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label32;
        catch java.lang.Throwable from label04 to label05 with label36;
        catch java.io.FileNotFoundException from label06 to label07 with label15;
        catch java.io.IOException from label06 to label07 with label21;
        catch java.lang.NumberFormatException from label06 to label07 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label32;
        catch java.lang.Throwable from label06 to label07 with label36;
        catch java.io.FileNotFoundException from label08 to label09 with label15;
        catch java.io.IOException from label08 to label09 with label21;
        catch java.lang.NumberFormatException from label08 to label09 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label09 with label32;
        catch java.lang.Throwable from label08 to label09 with label36;
        catch java.io.FileNotFoundException from label10 to label11 with label15;
        catch java.io.IOException from label10 to label11 with label21;
        catch java.lang.NumberFormatException from label10 to label11 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label32;
        catch java.lang.Throwable from label10 to label11 with label36;
        catch java.io.FileNotFoundException from label11 to label12 with label15;
        catch java.io.IOException from label11 to label12 with label21;
        catch java.lang.NumberFormatException from label11 to label12 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label32;
        catch java.lang.Throwable from label11 to label12 with label36;
        catch java.io.FileNotFoundException from label13 to label14 with label15;
        catch java.io.IOException from label13 to label14 with label21;
        catch java.lang.NumberFormatException from label13 to label14 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label32;
        catch java.lang.Throwable from label13 to label14 with label36;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.io.FileNotFoundException from label19 to label20 with label15;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.NumberFormatException from label19 to label20 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label32;
        catch java.lang.Throwable from label19 to label20 with label36;
        catch java.lang.Throwable from label22 to label23 with label36;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label29 to label30 with label36;
        catch java.lang.Throwable from label30 to label31 with label25;
        catch java.lang.Throwable from label33 to label34 with label36;
        catch java.lang.Throwable from label34 to label35 with label25;
        catch java.lang.Throwable from label37 to label38 with label25;
        catch java.lang.Throwable from label38 to label39 with label25;
    }

    private boolean noteNotificationOp(java.lang.String, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, $r6;
        int i0, $i1;
        android.app.AppOpsManager $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        $i1 = virtualinvoke $r2.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>(11, i0, r1);

        if $i1 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifications are disabled by AppOps for ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r6);

        return 0;

     label1:
        return 1;
    }

    private boolean notificationMatchesUserId(com.android.server.NotificationManagerService$NotificationRecord, int)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: com.android.server.NotificationManagerService$NotificationRecord;

        i0 := @parameter1: int;

        if i0 == -1 goto label1;

        $i1 = virtualinvoke r1.<com.android.server.NotificationManagerService$NotificationRecord: int getUserId()>();

        if $i1 == -1 goto label1;

        $i2 = virtualinvoke r1.<com.android.server.NotificationManagerService$NotificationRecord: int getUserId()>();

        if $i2 != i0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void notifyPostedLocked(com.android.server.NotificationManagerService$NotificationRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1;
        android.service.notification.StatusBarNotification r2, $r5;
        java.util.Iterator r3;
        com.android.server.NotificationManagerService$NotificationListenerInfo r4;
        java.util.ArrayList $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.android.server.NotificationManagerService$2 $r8;
        com.android.server.NotificationManagerService$WorkerHandler $r9;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: com.android.server.NotificationManagerService$NotificationRecord;

        $r5 = r1.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        r2 = virtualinvoke $r5.<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification clone()>();

        $r6 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        r3 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.NotificationManagerService$NotificationListenerInfo) $r7;

        $r9 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$WorkerHandler mHandler>;

        $r8 = new com.android.server.NotificationManagerService$2;

        specialinvoke $r8.<com.android.server.NotificationManagerService$2: void <init>(com.android.server.NotificationManagerService,com.android.server.NotificationManagerService$NotificationListenerInfo,android.service.notification.StatusBarNotification)>(r0, r4, r2);

        virtualinvoke $r9.<com.android.server.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    private void notifyRemovedLocked(com.android.server.NotificationManagerService$NotificationRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$NotificationRecord r1;
        android.service.notification.StatusBarNotification r2, $r5;
        java.util.Iterator r3;
        com.android.server.NotificationManagerService$NotificationListenerInfo r4;
        java.util.ArrayList $r6;
        boolean $z0;
        java.lang.Object $r7;
        com.android.server.NotificationManagerService$3 $r8;
        com.android.server.NotificationManagerService$WorkerHandler $r9;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: com.android.server.NotificationManagerService$NotificationRecord;

        $r5 = r1.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        r2 = virtualinvoke $r5.<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification cloneLight()>();

        $r6 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        r3 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.NotificationManagerService$NotificationListenerInfo) $r7;

        $r9 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$WorkerHandler mHandler>;

        $r8 = new com.android.server.NotificationManagerService$3;

        specialinvoke $r8.<com.android.server.NotificationManagerService$3: void <init>(com.android.server.NotificationManagerService,com.android.server.NotificationManagerService$NotificationListenerInfo,android.service.notification.StatusBarNotification)>(r0, r4, r2);

        virtualinvoke $r9.<com.android.server.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r8);

        goto label1;

     label2:
        return;
    }

    private void registerListenerService(android.content.ComponentName, int)
    {
        com.android.server.NotificationManagerService r0;
        android.content.ComponentName r1, $r31;
        int i0, i1, $i2, $i4;
        java.util.ArrayList r2, $r13, $r14, $r15, $r27, $r33, $r35;
        java.lang.Throwable r3, $r42;
        java.lang.String r4, $r8, $r28, $r41;
        com.android.server.NotificationManagerService$NotificationListenerInfo r5;
        android.content.Intent r6, $r16, $r20;
        java.lang.SecurityException r7, $r43;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r26, $r29, $r30, $r39, $r40, $r44;
        boolean $z0, $z2, $z4;
        android.content.Context $r19, $r22, $r36;
        com.android.server.NotificationManagerService$1 $r21;
        android.app.PendingIntent $r23;
        android.os.UserHandle $r25;
        java.lang.Object $r32;
        android.content.ServiceConnection $r37, $r38;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void checkCallerIsSystem()>();

        r2 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r2;

     label01:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mServicesBinding>;

        $z0 = virtualinvoke $r13.<java.util.ArrayList: boolean contains(java.lang.Object)>(r4);

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r14 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mServicesBinding>;

        virtualinvoke $r14.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        $r15 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $i2 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label04:
        if i1 < 0 goto label07;

     label05:
        $r33 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $r32 = virtualinvoke $r33.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.NotificationManagerService$NotificationListenerInfo) $r32;

        $r31 = r5.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ComponentName component>;

        $z4 = virtualinvoke r1.<android.content.ComponentName: boolean equals(java.lang.Object)>($r31);

        if $z4 == 0 goto label19;

        $i4 = r5.<com.android.server.NotificationManagerService$NotificationListenerInfo: int userid>;

        if $i4 != i0 goto label19;

        $r35 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        virtualinvoke $r35.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        $r38 = r5.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ServiceConnection connection>;

        if $r38 == null goto label19;

        $r36 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r37 = r5.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ServiceConnection connection>;

        virtualinvoke $r36.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r37);

     label06:
        goto label19;

     label07:
        $r16 = new android.content.Intent;

        specialinvoke $r16.<android.content.Intent: void <init>(java.lang.String)>("android.service.notification.NotificationListenerService");

        r6 = $r16;

        virtualinvoke r6.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r1);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.client_label", 17040564);

        $r19 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r20 = new android.content.Intent;

        specialinvoke $r20.<android.content.Intent: void <init>(java.lang.String)>("android.settings.NOTIFICATION_LISTENER_SETTINGS");

        $r23 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>($r19, 0, $r20, 0);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.client_intent", $r23);

     label08:
        $r22 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r21 = new com.android.server.NotificationManagerService$1;

        specialinvoke $r21.<com.android.server.NotificationManagerService$1: void <init>(com.android.server.NotificationManagerService,java.lang.String,int)>(r0, r4, i0);

        $r25 = new android.os.UserHandle;

        specialinvoke $r25.<android.os.UserHandle: void <init>(int)>(i0);

        $z2 = virtualinvoke $r22.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r6, $r21, 1, $r25);

        if $z2 != 0 goto label17;

        $r27 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mServicesBinding>;

        virtualinvoke $r27.<java.util.ArrayList: boolean remove(java.lang.Object)>(r4);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind listener service: ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r28);

     label09:
        exitmonitor r2;

     label10:
        return;

     label11:
        $r42 := @caughtexception;

        r3 = $r42;

     label12:
        exitmonitor r2;

     label13:
        throw r3;

     label14:
        $r43 := @caughtexception;

        r7 = $r43;

     label15:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind listener service: ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("NotificationService", $r41, r7);

        exitmonitor r2;

     label16:
        return;

     label17:
        exitmonitor r2;

     label18:
        return;

     label19:
        i1 = i1 + -1;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.SecurityException from label08 to label09 with label14;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
        catch java.lang.Throwable from label17 to label18 with label11;
    }

    private void scheduleTimeoutLocked(com.android.server.NotificationManagerService$ToastRecord)
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$ToastRecord r1;
        android.os.Message r2;
        long l0;
        com.android.server.NotificationManagerService$WorkerHandler $r3, $r4, $r5;
        int $i1;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: com.android.server.NotificationManagerService$ToastRecord;

        $r3 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r3.<com.android.server.NotificationManagerService$WorkerHandler: void removeCallbacksAndMessages(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$WorkerHandler mHandler>;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r4, 2, r1);

        $i1 = r1.<com.android.server.NotificationManagerService$ToastRecord: int duration>;

        if $i1 != 1 goto label2;

        l0 = 3500L;

     label1:
        $r5 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$WorkerHandler mHandler>;

        virtualinvoke $r5.<com.android.server.NotificationManagerService$WorkerHandler: boolean sendMessageDelayed(android.os.Message,long)>(r2, l0);

        return;

     label2:
        l0 = 2000L;

        goto label1;
    }

    private void sendAccessibilityEvent(android.app.Notification, java.lang.CharSequence)
    {
        com.android.server.NotificationManagerService r0;
        android.app.Notification r1;
        java.lang.CharSequence r2, r5;
        android.view.accessibility.AccessibilityManager r3;
        android.view.accessibility.AccessibilityEvent r4;
        android.content.Context $r6;
        boolean $z0, $z1;
        java.lang.Class $r7;
        java.lang.String $r8;
        java.util.List $r9;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.app.Notification;

        r2 := @parameter1: java.lang.CharSequence;

        $r6 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        r3 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r6);

        $z0 = virtualinvoke r3.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r4 = staticinvoke <android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>(64);

        virtualinvoke r4.<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>(r2);

        $r7 = class "android/app/Notification";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r4.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r8);

        virtualinvoke r4.<android.view.accessibility.AccessibilityEvent: void setParcelableData(android.os.Parcelable)>(r1);

        r5 = r1.<android.app.Notification: java.lang.CharSequence tickerText>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z1 != 0 goto label2;

        $r9 = virtualinvoke r4.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        virtualinvoke r3.<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r4);

        return;
    }

    private void showNextToastLocked()
    {
        com.android.server.NotificationManagerService r0;
        com.android.server.NotificationManagerService$ToastRecord r1;
        int i0, $i2, $i3;
        java.util.ArrayList $r3, $r15, $r16, $r18, $r20;
        java.lang.Object $r4, $r17;
        android.app.ITransientNotification $r5, $r9;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r14;
        java.lang.String $r12, $r13;

        r0 := @this: com.android.server.NotificationManagerService;

        $r3 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.NotificationManagerService$ToastRecord) $r4;

     label1:
        if r1 == null goto label3;

     label2:
        $r5 = r1.<com.android.server.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        interfaceinvoke $r5.<android.app.ITransientNotification: void show()>();

        specialinvoke r0.<com.android.server.NotificationManagerService: void scheduleTimeoutLocked(com.android.server.NotificationManagerService$ToastRecord)>(r1);

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object died trying to show notification ");

        $r9 = r1.<com.android.server.NotificationManagerService$ToastRecord: android.app.ITransientNotification callback>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r12 = r1.<com.android.server.NotificationManagerService$ToastRecord: java.lang.String pkg>;

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r13);

        $r15 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i0 = virtualinvoke $r15.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 < 0 goto label5;

        $r20 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        virtualinvoke $r20.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label5:
        $i2 = r1.<com.android.server.NotificationManagerService$ToastRecord: int pid>;

        specialinvoke r0.<com.android.server.NotificationManagerService: void keepProcessAliveLocked(int)>($i2);

        $r16 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $i3 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label6;

        $r18 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r17 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.NotificationManagerService$ToastRecord) $r17;

        goto label1;

     label6:
        r1 = null;

        goto label1;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void unregisterListenerService(android.content.ComponentName, int)
    {
        com.android.server.NotificationManagerService r0;
        android.content.ComponentName r1, $r9;
        int i0, i1, $i2, $i3;
        java.util.ArrayList r2, $r7, $r8, $r12;
        java.lang.Throwable r3, $r15;
        com.android.server.NotificationManagerService$NotificationListenerInfo r4;
        android.content.ServiceConnection r5, $r14;
        java.lang.IllegalArgumentException r6, $r17;
        java.lang.Object $r10;
        boolean $z0;
        android.content.Context $r13;
        java.lang.StringBuilder $r16, $r18, $r19, $r20, $r21;
        java.lang.String $r22;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void checkCallerIsSystem()>();

        r2 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r2;

     label01:
        $r7 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label02:
        if i1 < 0 goto label13;

     label03:
        $r8 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r4 = (com.android.server.NotificationManagerService$NotificationListenerInfo) $r10;

        $r9 = r4.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ComponentName component>;

        $z0 = virtualinvoke r1.<android.content.ComponentName: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label06;

        $i3 = r4.<com.android.server.NotificationManagerService$NotificationListenerInfo: int userid>;

        if $i3 != i0 goto label06;

        $r12 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        virtualinvoke $r12.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        r5 = r4.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ServiceConnection connection>;

     label04:
        if r5 == null goto label06;

     label05:
        $r13 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r14 = r4.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ServiceConnection connection>;

        virtualinvoke $r13.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r14);

     label06:
        i1 = i1 + -1;

        goto label02;

     label07:
        $r17 := @caughtexception;

        r6 = $r17;

     label08:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listener ");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be unbound: ");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r22);

     label09:
        goto label06;

     label10:
        $r15 := @caughtexception;

        r3 = $r15;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        exitmonitor r2;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.IllegalArgumentException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
    }

    private void updateLightsLocked()
    {
        com.android.server.NotificationManagerService r0;
        android.app.Notification r1;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        com.android.server.NotificationManagerService$NotificationRecord $r2, $r3, $r5, $r10;
        com.android.server.LightsService$Light $r4, $r7;
        boolean $z0, $z1, $z2;
        android.service.notification.StatusBarNotification $r6;
        java.util.ArrayList $r8, $r9;
        java.lang.Object $r11;

        r0 := @this: com.android.server.NotificationManagerService;

        $r2 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mLedNotification>;

        if $r2 != null goto label1;

        $r8 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mLights>;

        i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i3 <= 0 goto label1;

        $r9 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mLights>;

        $i6 = i3 - 1;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i6);

        $r10 = (com.android.server.NotificationManagerService$NotificationRecord) $r11;

        r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mLedNotification> = $r10;

     label1:
        $r3 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mLedNotification>;

        if $r3 == null goto label2;

        $z0 = r0.<com.android.server.NotificationManagerService: boolean mInCall>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.server.NotificationManagerService: boolean mScreenOn>;

        if $z1 == 0 goto label4;

     label2:
        $r4 = r0.<com.android.server.NotificationManagerService: com.android.server.LightsService$Light mNotificationLight>;

        virtualinvoke $r4.<com.android.server.LightsService$Light: void turnOff()>();

     label3:
        return;

     label4:
        $r5 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mLedNotification>;

        $r6 = $r5.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        r1 = virtualinvoke $r6.<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>();

        i0 = r1.<android.app.Notification: int ledARGB>;

        i1 = r1.<android.app.Notification: int ledOnMS>;

        i2 = r1.<android.app.Notification: int ledOffMS>;

        $i4 = r1.<android.app.Notification: int defaults>;

        $i5 = 4 & $i4;

        if $i5 == 0 goto label5;

        i0 = r0.<com.android.server.NotificationManagerService: int mDefaultNotificationColor>;

        i1 = r0.<com.android.server.NotificationManagerService: int mDefaultNotificationLedOn>;

        i2 = r0.<com.android.server.NotificationManagerService: int mDefaultNotificationLedOff>;

     label5:
        $z2 = r0.<com.android.server.NotificationManagerService: boolean mNotificationPulseEnabled>;

        if $z2 == 0 goto label3;

        $r7 = r0.<com.android.server.NotificationManagerService: com.android.server.LightsService$Light mNotificationLight>;

        virtualinvoke $r7.<com.android.server.LightsService$Light: void setFlashing(int,int,int,int)>(i0, 1, i1, i2);

        return;
    }

    private void updateNotificationPulse()
    {
        com.android.server.NotificationManagerService r0;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.NotificationManagerService: void updateLightsLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean areNotificationsEnabledForPackage(java.lang.String, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1;
        int i0, $i1;
        android.app.AppOpsManager $r2;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void checkCallerIsSystem()>();

        $r2 = r0.<com.android.server.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        $i1 = virtualinvoke $r2.<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>(11, i0, r1);

        if $i1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void cancelAll(int)
    {
        com.android.server.NotificationManagerService r0;
        int i0, i1, $i2, $i3, $i4;
        java.util.ArrayList r1, $r4, $r5, $r7;
        java.lang.Throwable r2, $r8;
        com.android.server.NotificationManagerService$NotificationRecord r3;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.android.server.NotificationManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label02:
        if i1 < 0 goto label10;

     label03:
        $r5 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.NotificationManagerService$NotificationRecord) $r6;

        $z0 = specialinvoke r0.<com.android.server.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.NotificationManagerService$NotificationRecord,int)>(r3, i0);

        if $z0 != 0 goto label05;

     label04:
        goto label12;

     label05:
        $i3 = virtualinvoke r3.<com.android.server.NotificationManagerService$NotificationRecord: int getFlags()>();

        $i4 = 34 & $i3;

        if $i4 != 0 goto label12;

        $r7 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        specialinvoke r0.<com.android.server.NotificationManagerService: void cancelNotificationLocked(com.android.server.NotificationManagerService$NotificationRecord,boolean)>(r3, 1);

     label06:
        goto label12;

     label07:
        $r8 := @caughtexception;

        r2 = $r8;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        specialinvoke r0.<com.android.server.NotificationManagerService: void updateLightsLocked()>();

        exitmonitor r1;

     label11:
        return;

     label12:
        i1 = i1 + -1;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public void cancelAllNotifications(java.lang.String, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void checkCallerIsSystemOrSameApp(java.lang.String)>(r1);

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i1, $i2, i0, 1, 0, "cancelAllNotifications", r1);

        virtualinvoke r0.<com.android.server.NotificationManagerService: boolean cancelAllNotificationsInt(java.lang.String,int,int,boolean,int)>(r1, 0, 64, 1, $i3);

        return;
    }

    public void cancelAllNotificationsFromListener(android.service.notification.INotificationListener)
    {
        com.android.server.NotificationManagerService r0;
        android.service.notification.INotificationListener r1;
        com.android.server.NotificationManagerService$NotificationListenerInfo r2;
        long l0;
        java.lang.Throwable r3, $r4;
        int $i1;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 = specialinvoke r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationListenerInfo checkListenerToken(android.service.notification.INotificationListener)>(r1);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $i1 = r2.<com.android.server.NotificationManagerService$NotificationListenerInfo: int userid>;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void cancelAll(int)>($i1);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    boolean cancelAllNotificationsInt(java.lang.String, int, int, boolean, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, $r16;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8, $i9, $i10;
        boolean z0, z1, $z2, $z3;
        java.lang.Object[] r2;
        java.util.ArrayList r3, $r9, $r10, $r13;
        java.lang.Throwable r4, $r14;
        com.android.server.NotificationManagerService$NotificationRecord r5;
        java.lang.Integer $r6, $r7, $r8;
        java.lang.Object $r11;
        android.service.notification.StatusBarNotification $r15;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i2 := @parameter4: int;

        r2 = newarray (java.lang.Object)[4];

        r2[0] = r1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r2[1] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r2[2] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        r2[3] = $r8;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2752, r2);

        r3 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r3;

     label01:
        $r9 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i3 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

     label02:
        z1 = 0;

        i4 = i3 - 1;

     label03:
        if i4 < 0 goto label19;

     label04:
        $r10 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (com.android.server.NotificationManagerService$NotificationRecord) $r11;

        $z2 = specialinvoke r0.<com.android.server.NotificationManagerService: boolean notificationMatchesUserId(com.android.server.NotificationManagerService$NotificationRecord,int)>(r5, i2);

        if $z2 != 0 goto label06;

     label05:
        goto label23;

     label06:
        $i7 = virtualinvoke r5.<com.android.server.NotificationManagerService$NotificationRecord: int getUserId()>();

        if $i7 != -1 goto label08;

     label07:
        if r1 == null goto label23;

     label08:
        $i6 = virtualinvoke r5.<com.android.server.NotificationManagerService$NotificationRecord: int getFlags()>();

        $i9 = i0 & $i6;

        if $i9 != i0 goto label23;

        $i8 = virtualinvoke r5.<com.android.server.NotificationManagerService$NotificationRecord: int getFlags()>();

        $i10 = i1 & $i8;

        if $i10 != 0 goto label23;

     label09:
        if r1 == null goto label11;

     label10:
        $r15 = r5.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r16 = virtualinvoke $r15.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label23;

     label11:
        z1 = 1;

        if z0 != 0 goto label14;

     label12:
        exitmonitor r3;

     label13:
        return 1;

     label14:
        $r13 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        virtualinvoke $r13.<java.util.ArrayList: java.lang.Object remove(int)>(i4);

        specialinvoke r0.<com.android.server.NotificationManagerService: void cancelNotificationLocked(com.android.server.NotificationManagerService$NotificationRecord,boolean)>(r5, 0);

     label15:
        goto label23;

     label16:
        $r14 := @caughtexception;

        r4 = $r14;

     label17:
        exitmonitor r3;

     label18:
        throw r4;

     label19:
        if z1 == 0 goto label21;

     label20:
        specialinvoke r0.<com.android.server.NotificationManagerService: void updateLightsLocked()>();

     label21:
        exitmonitor r3;

     label22:
        return z1;

     label23:
        i4 = i4 + -1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.lang.Throwable from label20 to label21 with label16;
        catch java.lang.Throwable from label21 to label22 with label16;
    }

    public void cancelNotificationFromListener(android.service.notification.INotificationListener, java.lang.String, java.lang.String, int)
    {
        com.android.server.NotificationManagerService r0;
        android.service.notification.INotificationListener r1;
        java.lang.String r2, r3;
        int i0, $i2;
        com.android.server.NotificationManagerService$NotificationListenerInfo r4;
        long l1;
        java.lang.Throwable r5, $r6;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 = specialinvoke r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationListenerInfo checkListenerToken(android.service.notification.INotificationListener)>(r1);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $i2 = r4.<com.android.server.NotificationManagerService$NotificationListenerInfo: int userid>;

        specialinvoke r0.<com.android.server.NotificationManagerService: void cancelNotification(java.lang.String,java.lang.String,int,int,int,boolean,int)>(r2, r3, i0, 0, 66, 1, $i2);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void cancelNotificationWithTag(java.lang.String, java.lang.String, int, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, r2;
        int i0, i1, i2, $i4, $i5, $i6;
        byte b3;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void checkCallerIsSystemOrSameApp(java.lang.String)>(r1);

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i2 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>($i4, $i5, i1, 1, 0, "cancelNotificationWithTag", r1);

        $i6 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i6 != 1000 goto label2;

        b3 = 0;

     label1:
        specialinvoke r0.<com.android.server.NotificationManagerService: void cancelNotification(java.lang.String,java.lang.String,int,int,int,boolean,int)>(r1, r2, i0, 0, b3, 0, i2);

        return;

     label2:
        b3 = 64;

        goto label1;
    }

    public void cancelToast(java.lang.String, android.app.ITransientNotification)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, $r10, $r16, $r24;
        android.app.ITransientNotification r2;
        java.util.ArrayList r3;
        java.lang.Throwable r4, r5, $r23, $r25;
        long l0;
        int i1;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.ITransientNotification;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancelToast pkg=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callback=");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("NotificationService", $r10);

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not cancelling notification. pkg=");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callback=");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r16);

        return;

     label02:
        r3 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r3;

     label03:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label04:
        i1 = specialinvoke r0.<com.android.server.NotificationManagerService: int indexOfToastLocked(java.lang.String,android.app.ITransientNotification)>(r1, r2);

     label05:
        if i1 < 0 goto label12;

     label06:
        specialinvoke r0.<com.android.server.NotificationManagerService: void cancelToastLocked(int)>(i1);

     label07:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        exitmonitor r3;

     label08:
        return;

     label09:
        $r25 := @caughtexception;

        r4 = $r25;

     label10:
        exitmonitor r3;

     label11:
        throw r4;

     label12:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Toast already cancelled. pkg=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callback=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r24);

     label13:
        goto label07;

     label14:
        $r23 := @caughtexception;

        r5 = $r23;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

     label16:
        throw r5;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label09;
    }

    void checkCallerIsSystem()
    {
        com.android.server.NotificationManagerService r0;
        boolean $z0;
        java.lang.SecurityException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.android.server.NotificationManagerService;

        $z0 = virtualinvoke r0.<com.android.server.NotificationManagerService: boolean isCallerSystem()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.SecurityException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disallowed call for uid ");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    void checkCallerIsSystemOrSameApp(java.lang.String)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, $r14, $r21;
        int i0, $i1, $i2, $i3;
        android.os.RemoteException r2, $r13;
        android.content.pm.ApplicationInfo r3;
        boolean $z0, $z1;
        android.content.pm.IPackageManager $r4;
        java.lang.SecurityException $r5, $r16;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r17, $r18, $r19, $r20;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.server.NotificationManagerService: boolean isCallerSystem()>();

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label3:
        $r4 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 0, $i1);

        $i2 = r3.<android.content.pm.ApplicationInfo: int uid>;

        $z1 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i2, i0);

        if $z1 != 0 goto label1;

        $r5 = new java.lang.SecurityException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling uid ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gave package");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which is owned by uid ");

        $i3 = r3.<android.content.pm.ApplicationInfo: int uid>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.SecurityException: void <init>(java.lang.String)>($r14);

        throw $r5;

     label4:
        $r13 := @caughtexception;

        r2 = $r13;

        $r16 = new java.lang.SecurityException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.SecurityException: void <init>(java.lang.String)>($r21);

        throw $r16;

        catch android.os.RemoteException from label3 to label4 with label4;
    }

    void disableNonexistentListeners()
    {
        com.android.server.NotificationManagerService r0;
        int i0, i1, i2, i3, $i4, $i5;
        java.lang.String r1, r4, $r17, $r18, $r20, $r21, $r24, $r25, $r29, $r32, $r33;
        java.util.List r2;
        java.util.HashSet r3, $r13;
        java.lang.String[] r5;
        java.util.ArrayList r6, $r16;
        android.content.pm.ServiceInfo r7;
        android.content.Context $r8, $r10, $r14;
        android.content.ContentResolver $r9, $r15;
        boolean $z0, $z1, $z2, $z5, $z6;
        android.content.Intent $r11;
        android.content.pm.PackageManager $r12;
        android.content.ComponentName $r19, $r26;
        java.lang.Object $r22;
        android.content.pm.ResolveInfo $r23;
        java.lang.StringBuilder $r27, $r28, $r30, $r31, $r34, $r35, $r36;

        r0 := @this: com.android.server.NotificationManagerService;

        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $r8 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r9, "enabled_notification_listeners", i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label9;

        $r10 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r12 = virtualinvoke $r10.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.service.notification.NotificationListenerService");

        r2 = virtualinvoke $r12.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r11, 132, i0);

        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        r3 = $r13;

        i1 = 0;

        i2 = interfaceinvoke r2.<java.util.List: int size()>();

     label1:
        if i1 >= i2 goto label4;

        $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r23 = (android.content.pm.ResolveInfo) $r22;

        r7 = $r23.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r21 = "android.permission.BIND_NOTIFICATION_LISTENER_SERVICE";

        $r20 = r7.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z6 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z6 != 0 goto label3;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping notification listener service ");

        $r32 = r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r29 = r7.<android.content.pm.ServiceInfo: java.lang.String name>;

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": it does not require the permission ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_NOTIFICATION_LISTENER_SERVICE");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("NotificationService", $r33);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r26 = new android.content.ComponentName;

        $r25 = r7.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r24 = r7.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r26.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r25, $r24);

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r26);

        goto label2;

     label4:
        r4 = "";

        $z1 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label8;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r16 = new java.util.ArrayList;

        $i4 = lengthof r5;

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i4);

        r6 = $r16;

        i3 = 0;

     label5:
        $i5 = lengthof r5;

        if i3 >= $i5 goto label7;

        $r17 = r5[i3];

        $r19 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r17);

        $z5 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r19);

        if $z5 == 0 goto label6;

        $r18 = r5[i3];

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

     label6:
        i3 = i3 + 1;

        goto label5;

     label7:
        r4 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(":", r6);

     label8:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 != 0 goto label9;

        $r14 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r15, "enabled_notification_listeners", r4, i0);

     label9:
        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.NotificationManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.Iterator r4, r5, r10;
        java.util.ArrayList r6, r8, $r27, $r29, $r30, $r31, $r32, $r64, $r72, $r76;
        java.lang.Throwable r7, r9, $r99, $r100;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.StringBuilder r11, $r16, $r17, $r19, $r20, $r23, $r24, $r25, $r26, $r34, $r35, $r36, $r37, $r39, $r40, $r42, $r45, $r46, $r47, $r49, $r52, $r54, $r56, $r57, $r58, $r59, $r60, $r66, $r68, $r69, $r78, $r79, $r80, $r82, $r83, $r84, $r85, $r86, $r89, $r91, $r92, $r93, $r94, $r96, $r98;
        com.android.server.NotificationManagerService$NotificationListenerInfo r12;
        android.content.ComponentName r13, $r81;
        java.lang.String r14, $r22, $r28, $r38, $r41, $r44, $r48, $r51, $r53, $r55, $r65, $r67, $r88, $r95, $r97;
        android.content.Context $r15, $r74;
        java.util.HashSet $r18, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.NotificationManagerService$NotificationRecord $r33, $r43, $r75;
        com.android.server.NotificationManagerService$Archive $r50, $r62;
        java.lang.Object $r61, $r63, $r71, $r73, $r77, $r87;
        com.android.server.NotificationManagerService$ToastRecord $r70;
        android.service.notification.INotificationListener $r90;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r15 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $i7 = virtualinvoke $r15.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i7 == 0 goto label01;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump NotificationManager from from pid=");

        $i13 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r98 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r97);

        return;

     label01:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Current Notification Manager state:");

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Listeners (");

        $r18 = r0.<com.android.server.NotificationManagerService: java.util.HashSet mEnabledListenersForCurrentUser>;

        $i8 = virtualinvoke $r18.<java.util.HashSet: int size()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") enabled for current user:");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        $r21 = r0.<com.android.server.NotificationManagerService: java.util.HashSet mEnabledListenersForCurrentUser>;

        r4 = virtualinvoke $r21.<java.util.HashSet: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r87 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.content.ComponentName) $r87;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r96 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r95);

        goto label02;

     label03:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Live listeners (");

        $r27 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $i9 = virtualinvoke $r27.<java.util.ArrayList: int size()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("):");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r28);

        $r29 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        r5 = virtualinvoke $r29.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r71 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.server.NotificationManagerService$NotificationListenerInfo) $r71;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r81 = r12.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ComponentName component>;

        $r82 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r81);

        $r80 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (user ");

        $i11 = r12.<com.android.server.NotificationManagerService$NotificationListenerInfo: int userid>;

        $r78 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r90 = r12.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.service.notification.INotificationListener listener>;

        r11 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r90);

        $z5 = r12.<com.android.server.NotificationManagerService$NotificationListenerInfo: boolean isSystem>;

        if $z5 == 0 goto label06;

        r14 = " SYSTEM";

     label05:
        $r89 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r88);

        goto label04;

     label06:
        r14 = "";

        goto label05;

     label07:
        r6 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r6;

     label08:
        $r30 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i0 = virtualinvoke $r30.<java.util.ArrayList: int size()>();

     label09:
        if i0 <= 0 goto label16;

     label10:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Toast Queue:");

     label11:
        i1 = 0;

     label12:
        if i1 >= i0 goto label15;

     label13:
        $r72 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r73 = virtualinvoke $r72.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r70 = (com.android.server.NotificationManagerService$ToastRecord) $r73;

        virtualinvoke $r70.<com.android.server.NotificationManagerService$ToastRecord: void dump(java.io.PrintWriter,java.lang.String)>(r2, "    ");

     label14:
        i1 = i1 + 1;

        goto label12;

     label15:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label16:
        exitmonitor r6;

     label17:
        r8 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r8;

     label18:
        $r32 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i2 = virtualinvoke $r32.<java.util.ArrayList: int size()>();

     label19:
        if i2 <= 0 goto label29;

     label20:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Notification List:");

     label21:
        i3 = 0;

     label22:
        if i3 >= i2 goto label28;

     label23:
        $r76 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r77 = virtualinvoke $r76.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r75 = (com.android.server.NotificationManagerService$NotificationRecord) $r77;

        $r74 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        virtualinvoke $r75.<com.android.server.NotificationManagerService$NotificationRecord: void dump(java.io.PrintWriter,java.lang.String,android.content.Context)>(r2, "    ", $r74);

     label24:
        i3 = i3 + 1;

        goto label22;

     label25:
        $r99 := @caughtexception;

        r7 = $r99;

     label26:
        exitmonitor r6;

     label27:
        throw r7;

     label28:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label29:
        $r31 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mLights>;

        i4 = virtualinvoke $r31.<java.util.ArrayList: int size()>();

     label30:
        if i4 <= 0 goto label37;

     label31:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Lights List:");

     label32:
        i5 = 0;

     label33:
        if i5 >= i4 goto label36;

     label34:
        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r64 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mLights>;

        $r63 = virtualinvoke $r64.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r66 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63);

        $r65 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r65);

     label35:
        i5 = i5 + 1;

        goto label33;

     label36:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  ");

     label37:
        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSoundNotification=");

        $r33 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mSoundNotification>;

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mVibrateNotification=");

        $r43 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationRecord mVibrateNotification>;

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mDisabledNotifications=0x");

        $i10 = r0.<com.android.server.NotificationManagerService: int mDisabledNotifications>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r44 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mSystemReady=");

        $z2 = r0.<com.android.server.NotificationManagerService: boolean mSystemReady>;

        $r54 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r55);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mArchive=");

        $r50 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$Archive mArchive>;

        $r51 = virtualinvoke $r50.<com.android.server.NotificationManagerService$Archive: java.lang.String toString()>();

        $r52 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        $r62 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$Archive mArchive>;

        r10 = virtualinvoke $r62.<com.android.server.NotificationManagerService$Archive: java.util.Iterator descendingIterator()>();

     label38:
        i6 = 0;

     label39:
        $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label42;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r61 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61);

        $r67 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r67);

     label40:
        i6 = i6 + 1;

        if i6 < 5 goto label39;

     label41:
        $z4 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label42;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("    ...");

     label42:
        exitmonitor r8;

     label43:
        return;

     label44:
        $r100 := @caughtexception;

        r9 = $r100;

     label45:
        exitmonitor r8;

     label46:
        throw r9;

        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label10 to label11 with label25;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label18 to label19 with label44;
        catch java.lang.Throwable from label20 to label21 with label44;
        catch java.lang.Throwable from label23 to label24 with label44;
        catch java.lang.Throwable from label26 to label27 with label25;
        catch java.lang.Throwable from label28 to label29 with label44;
        catch java.lang.Throwable from label29 to label30 with label44;
        catch java.lang.Throwable from label31 to label32 with label44;
        catch java.lang.Throwable from label34 to label35 with label44;
        catch java.lang.Throwable from label36 to label37 with label44;
        catch java.lang.Throwable from label37 to label38 with label44;
        catch java.lang.Throwable from label39 to label40 with label44;
        catch java.lang.Throwable from label41 to label42 with label44;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Throwable from label45 to label46 with label44;
    }

    public void enqueueNotificationInternal(java.lang.String, java.lang.String, int, int, java.lang.String, int, android.app.Notification, int[], int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, r2, r3, $r14, $r24, $r32, $r43, $r45, $r49;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10;
        android.app.Notification r4;
        int[] r5;
        boolean z0, $z1, $z2, $z4, $z5, $z6;
        android.os.UserHandle r6, $r11;
        java.lang.Object[] r7;
        java.util.ArrayList r8, $r36, $r39;
        java.lang.Throwable r9, $r46;
        com.android.server.NotificationManagerService$NotificationRecord r10;
        java.lang.Integer $r12, $r13;
        java.lang.StringBuilder $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r28, $r29, $r30, $r31, $r33, $r34, $r35, $r40, $r41, $r42, $r47, $r48;
        java.lang.IllegalArgumentException $r17, $r26;
        com.android.server.NotificationManagerService$6 $r22;
        android.widget.RemoteViews $r25;
        com.android.server.NotificationManagerService$WorkerHandler $r27;
        android.service.notification.StatusBarNotification $r37, $r44;
        java.lang.Object $r38;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        i2 := @parameter5: int;

        r4 := @parameter6: android.app.Notification;

        r5 := @parameter7: int[];

        i3 := @parameter8: int;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void checkCallerIsSystemOrSameApp(java.lang.String)>(r1);

        $z1 = virtualinvoke r0.<com.android.server.NotificationManagerService: boolean isUidSystem(int)>(i0);

        if $z1 != 0 goto label01;

        $r45 = "android";

        $z6 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z6 == 0 goto label20;

     label01:
        z0 = 1;

     label02:
        i4 = staticinvoke <android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>(i1, i0, i3, 1, 0, "enqueueNotification", r1);

        $r11 = new android.os.UserHandle;

        specialinvoke $r11.<android.os.UserHandle: void <init>(int)>(i4);

        r6 = $r11;

        if z0 != 0 goto label11;

        r8 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r8;

        i5 = 0;

     label03:
        $r36 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i6 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

     label04:
        i7 = 0;

     label05:
        if i7 >= i6 goto label10;

     label06:
        $r39 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r38 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r10 = (com.android.server.NotificationManagerService$NotificationRecord) $r38;

        $r37 = r10.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $r43 = virtualinvoke $r37.<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>();

        $z5 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label21;

        $r44 = r10.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $i10 = virtualinvoke $r44.<android.service.notification.StatusBarNotification: int getUserId()>();

        if $i10 != i4 goto label21;

     label07:
        i5 = i5 + 1;

        if i5 < 50 goto label21;

     label08:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package has already posted ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r47 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notifications.  Not showing more.  package=");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r49);

        exitmonitor r8;

     label09:
        return;

     label10:
        exitmonitor r8;

     label11:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("com.android.providers.downloads");

        if $z2 == 0 goto label12;

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("DownloadManager", 2);

        if $z4 == 0 goto label13;

     label12:
        r7 = newarray (java.lang.Object)[5];

        r7[0] = r1;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        r7[1] = $r12;

        r7[2] = r3;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        r7[3] = $r13;

        $r14 = virtualinvoke r4.<android.app.Notification: java.lang.String toString()>();

        r7[4] = $r14;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2750, r7);

     label13:
        if r1 == null goto label14;

        if r4 != null goto label18;

     label14:
        $r17 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null not allowed: pkg=");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notification=");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r24);

        throw $r17;

     label15:
        $r46 := @caughtexception;

        r9 = $r46;

     label16:
        exitmonitor r8;

     label17:
        throw r9;

     label18:
        $i9 = r4.<android.app.Notification: int icon>;

        if $i9 == 0 goto label19;

        $r25 = r4.<android.app.Notification: android.widget.RemoteViews contentView>;

        if $r25 != null goto label19;

        $r26 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("contentView required: pkg=");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $r35 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notification=");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r32);

        throw $r26;

     label19:
        $r27 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$WorkerHandler mHandler>;

        $r22 = new com.android.server.NotificationManagerService$6;

        specialinvoke $r22.<com.android.server.NotificationManagerService$6: void <init>(com.android.server.NotificationManagerService,android.app.Notification,java.lang.String,int,boolean,int,java.lang.String,int,android.os.UserHandle,int)>(r0, r4, r1, i0, z0, i2, r3, i1, r6, i4);

        virtualinvoke $r27.<com.android.server.NotificationManagerService$WorkerHandler: boolean post(java.lang.Runnable)>($r22);

        r5[0] = i2;

        return;

     label20:
        z0 = 0;

        goto label02;

     label21:
        i7 = i7 + 1;

        goto label05;

        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void enqueueNotificationWithTag(java.lang.String, java.lang.String, java.lang.String, int, android.app.Notification, int[], int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, r2, r3;
        int i0, i1, $i2, $i3;
        android.app.Notification r4;
        int[] r5;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: android.app.Notification;

        r5 := @parameter5: int[];

        i1 := @parameter6: int;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        virtualinvoke r0.<com.android.server.NotificationManagerService: void enqueueNotificationInternal(java.lang.String,java.lang.String,int,int,java.lang.String,int,android.app.Notification,int[],int)>(r1, r2, $i2, $i3, r3, i0, r4, r5, i1);

        return;
    }

    public void enqueueToast(java.lang.String, android.app.ITransientNotification, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, $r12, $r21, $r25, $r36, $r37;
        android.app.ITransientNotification r2;
        int i0, i1, i3, i4, i5, i6, $i8, $i9;
        boolean z0, $z1, $z2, $z4, $z5;
        java.util.ArrayList r3, $r13, $r15, $r16, $r18, $r30;
        java.lang.Throwable r4, r5, $r34, $r35;
        long l2;
        com.android.server.NotificationManagerService$ToastRecord r6, $r14, $r20, $r28;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r19, $r22, $r23, $r24, $r26, $r27, $r31, $r32, $r33;
        java.lang.Object $r17, $r29;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.ITransientNotification;

        i0 := @parameter2: int;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not doing toast. pkg=");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" callback=");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r12);

        return;

     label02:
        $z1 = virtualinvoke r0.<com.android.server.NotificationManagerService: boolean isCallerSystem()>();

        if $z1 != 0 goto label03;

        $r37 = "android";

        $z5 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z5 == 0 goto label05;

     label03:
        z0 = 1;

     label04:
        $i8 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z2 = specialinvoke r0.<com.android.server.NotificationManagerService: boolean noteNotificationOp(java.lang.String,int)>(r1, $i8);

        if $z2 != 0 goto label06;

        if z0 != 0 goto label06;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Suppressing toast from package ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by user request.");

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r36);

        return;

     label05:
        z0 = 0;

        goto label04;

     label06:
        r3 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        entermonitor r3;

     label07:
        i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label08:
        i3 = specialinvoke r0.<com.android.server.NotificationManagerService: int indexOfToastLocked(java.lang.String,android.app.ITransientNotification)>(r1, r2);

     label09:
        if i3 < 0 goto label18;

     label10:
        $r30 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r29 = virtualinvoke $r30.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r28 = (com.android.server.NotificationManagerService$ToastRecord) $r29;

        virtualinvoke $r28.<com.android.server.NotificationManagerService$ToastRecord: void update(int)>(i0);

     label11:
        if i3 != 0 goto label13;

     label12:
        specialinvoke r0.<com.android.server.NotificationManagerService: void showNextToastLocked()>();

     label13:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r3;

     label14:
        return;

     label15:
        $r35 := @caughtexception;

        r4 = $r35;

     label16:
        exitmonitor r3;

     label17:
        throw r4;

     label18:
        if z0 != 0 goto label28;

        i4 = 0;

     label19:
        $r18 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        i6 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

     label20:
        i5 = 0;

     label21:
        if i5 >= i6 goto label28;

     label22:
        $r16 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $r17 = virtualinvoke $r16.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r20 = (com.android.server.NotificationManagerService$ToastRecord) $r17;

        $r21 = $r20.<com.android.server.NotificationManagerService$ToastRecord: java.lang.String pkg>;

        $z4 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label27;

     label23:
        i4 = i4 + 1;

        if i4 < 50 goto label27;

     label24:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package has already posted ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" toasts. Not showing more. Package=");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("NotificationService", $r25);

     label25:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        exitmonitor r3;

     label26:
        return;

     label27:
        i5 = i5 + 1;

        goto label21;

     label28:
        $r14 = new com.android.server.NotificationManagerService$ToastRecord;

        specialinvoke $r14.<com.android.server.NotificationManagerService$ToastRecord: void <init>(int,java.lang.String,android.app.ITransientNotification,int)>(i1, r1, r2, i0);

        r6 = $r14;

        $r13 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        $r15 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mToastQueue>;

        $i9 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        i3 = -1 + $i9;

        specialinvoke r0.<com.android.server.NotificationManagerService: void keepProcessAliveLocked(int)>(i1);

     label29:
        goto label11;

     label30:
        $r34 := @caughtexception;

        r5 = $r34;

     label31:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

     label32:
        throw r5;

        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label08 to label09 with label30;
        catch java.lang.Throwable from label10 to label11 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label19 to label20 with label30;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch java.lang.Throwable from label24 to label25 with label30;
        catch java.lang.Throwable from label25 to label26 with label15;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label15;
    }

    public android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList r2, $r7, $r8, $r10;
        java.lang.Throwable r3, $r13;
        android.service.notification.StatusBarNotification[] r4;
        android.content.Context $r5;
        android.app.AppOpsManager $r6;
        java.lang.Object $r9;
        android.service.notification.StatusBarNotification $r11;
        com.android.server.NotificationManagerService$NotificationRecord $r12;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_NOTIFICATIONS", "NotificationManagerService.getActiveNotifications");

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r6 = r0.<com.android.server.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        $i3 = virtualinvoke $r6.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>(25, i0, r1);

        if $i3 != 0 goto label11;

        r2 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r2;

     label01:
        $r7 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        r4 = newarray (android.service.notification.StatusBarNotification)[$i4];

        $r8 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label06;

     label04:
        $r10 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r9 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r12 = (com.android.server.NotificationManagerService$NotificationRecord) $r9;

        $r11 = $r12.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        r4[i2] = $r11;

     label05:
        i2 = i2 + 1;

        goto label03;

     label06:
        exitmonitor r2;

     label07:
        return r4;

     label08:
        $r13 := @caughtexception;

        r3 = $r13;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        return null;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.service.notification.StatusBarNotification[] getActiveNotificationsFromListener(android.service.notification.INotificationListener)
    {
        com.android.server.NotificationManagerService r0;
        android.service.notification.INotificationListener r1;
        com.android.server.NotificationManagerService$NotificationListenerInfo r2;
        android.service.notification.StatusBarNotification[] r3, $r10;
        java.util.ArrayList r4, r5, $r8, $r9, $r13;
        java.lang.Throwable r6, $r15;
        int i0, i1;
        android.service.notification.StatusBarNotification r7;
        java.lang.Object[] $r11;
        java.lang.Object $r12;
        boolean $z0;
        com.android.server.NotificationManagerService$NotificationRecord $r14;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 = specialinvoke r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationListenerInfo checkListenerToken(android.service.notification.INotificationListener)>(r1);

        r3 = newarray (android.service.notification.StatusBarNotification)[0];

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

        r5 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r5;

     label01:
        $r9 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r13 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        $r12 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r14 = (com.android.server.NotificationManagerService$NotificationRecord) $r12;

        r7 = $r14.<com.android.server.NotificationManagerService$NotificationRecord: android.service.notification.StatusBarNotification sbn>;

        $z0 = virtualinvoke r2.<com.android.server.NotificationManagerService$NotificationListenerInfo: boolean enabledAndUserMatches(android.service.notification.StatusBarNotification)>(r7);

        if $z0 == 0 goto label11;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label05:
        goto label11;

     label06:
        exitmonitor r5;

     label07:
        $r11 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        $r10 = (android.service.notification.StatusBarNotification[]) $r11;

        return $r10;

     label08:
        $r15 := @caughtexception;

        r6 = $r15;

     label09:
        exitmonitor r5;

     label10:
        throw r6;

     label11:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String, int)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1;
        int i0, i1, $i2;
        com.android.server.NotificationManagerService$Archive r2, $r7;
        java.lang.Throwable r3, $r8;
        android.service.notification.StatusBarNotification[] r4;
        android.content.Context $r5;
        android.app.AppOpsManager $r6;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.ACCESS_NOTIFICATIONS", "NotificationManagerService.getHistoricalNotifications");

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r6 = r0.<com.android.server.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        $i2 = virtualinvoke $r6.<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>(25, i1, r1);

        if $i2 != 0 goto label6;

        r2 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$Archive mArchive>;

        entermonitor r2;

     label1:
        $r7 = r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$Archive mArchive>;

        r4 = virtualinvoke $r7.<com.android.server.NotificationManagerService$Archive: android.service.notification.StatusBarNotification[] getArray(int)>(i0);

        exitmonitor r2;

     label2:
        return r4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isCallerSystem()
    {
        com.android.server.NotificationManagerService r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.NotificationManagerService;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $z0 = virtualinvoke r0.<com.android.server.NotificationManagerService: boolean isUidSystem(int)>($i0);

        return $z0;
    }

    boolean isUidSystem(int)
    {
        com.android.server.NotificationManagerService r0;
        int i0, i1;

        r0 := @this: com.android.server.NotificationManagerService;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if i1 == 1000 goto label1;

        if i1 == 1001 goto label1;

        if i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    void rebindListenerServices()
    {
        com.android.server.NotificationManagerService r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i9, $i11;
        java.lang.String r1, $r29, $r34, $r35, $r37;
        com.android.server.NotificationManagerService$NotificationListenerInfo[] r2, r5;
        java.util.ArrayList r3, r6, $r16, $r18, $r20;
        java.lang.Throwable r4, $r36;
        java.util.HashSet r7, r8, $r19, $r21;
        java.lang.String[] r9;
        android.content.ComponentName r10, r11, r13;
        com.android.server.NotificationManagerService$NotificationListenerInfo r12;
        android.content.ContentResolver $r14;
        android.content.Context $r15;
        java.lang.Object[] $r17;
        java.lang.StringBuilder $r22, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33;
        java.lang.Object $r23;

        r0 := @this: com.android.server.NotificationManagerService;

        i0 = staticinvoke <android.app.ActivityManager: int getCurrentUser()>();

        $r15 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r14 = virtualinvoke $r15.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r14, "enabled_notification_listeners", i0);

        $r16 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $i7 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        r2 = newarray (com.android.server.NotificationManagerService$NotificationListenerInfo)[$i7];

        r3 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r3;

     label01:
        $r18 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $r17 = virtualinvoke $r18.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r2);

        r5 = (com.android.server.NotificationManagerService$NotificationListenerInfo[]) $r17;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r6 = $r20;

        $r21 = new java.util.HashSet;

        specialinvoke $r21.<java.util.HashSet: void <init>()>();

        r7 = $r21;

        $r19 = new java.util.HashSet;

        specialinvoke $r19.<java.util.HashSet: void <init>()>();

        r8 = $r19;

     label02:
        if r1 == null goto label10;

     label03:
        r9 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

     label04:
        i1 = 0;

     label05:
        $i11 = lengthof r9;

        if i1 >= $i11 goto label09;

        $r35 = r9[i1];

        r13 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>($r35);

     label06:
        if r13 == null goto label19;

     label07:
        virtualinvoke r7.<java.util.HashSet: boolean add(java.lang.Object)>(r13);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        $r37 = virtualinvoke r13.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r8.<java.util.HashSet: boolean add(java.lang.Object)>($r37);

     label08:
        goto label19;

     label09:
        r0.<com.android.server.NotificationManagerService: java.util.HashSet mEnabledListenersForCurrentUser> = r7;

        r0.<com.android.server.NotificationManagerService: java.util.HashSet mEnabledListenerPackageNames> = r8;

     label10:
        exitmonitor r3;

     label11:
        i2 = lengthof r5;

        i3 = 0;

     label12:
        if i3 >= i2 goto label16;

        r12 = r5[i3];

        r11 = r12.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ComponentName component>;

        i6 = r12.<com.android.server.NotificationManagerService$NotificationListenerInfo: int userid>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("disabling notification listener for user ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r34);

        $i9 = r12.<com.android.server.NotificationManagerService$NotificationListenerInfo: int userid>;

        specialinvoke r0.<com.android.server.NotificationManagerService: void unregisterListenerService(android.content.ComponentName,int)>(r11, $i9);

        i3 = i3 + 1;

        goto label12;

     label13:
        $r36 := @caughtexception;

        r4 = $r36;

     label14:
        exitmonitor r3;

     label15:
        throw r4;

     label16:
        i4 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        i5 = 0;

     label17:
        if i5 >= i4 goto label18;

        $r23 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r10 = (android.content.ComponentName) $r23;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enabling notification listener for user ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r29);

        specialinvoke r0.<com.android.server.NotificationManagerService: void registerListenerService(android.content.ComponentName,int)>(r10, i0);

        i5 = i5 + 1;

        goto label17;

     label18:
        return;

     label19:
        i1 = i1 + 1;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void registerListener(android.service.notification.INotificationListener, android.content.ComponentName, int)
    {
        com.android.server.NotificationManagerService r0;
        android.service.notification.INotificationListener r1;
        android.content.ComponentName r2;
        int i0;
        java.util.ArrayList r3, $r9;
        com.android.server.NotificationManagerService$NotificationListenerInfo r4, $r7;
        java.lang.Throwable r6, $r10;
        android.os.IBinder $r8;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.service.notification.INotificationListener;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void checkCallerIsSystem()>();

        r3 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r3;

     label1:
        $r7 = new com.android.server.NotificationManagerService$NotificationListenerInfo;

        specialinvoke $r7.<com.android.server.NotificationManagerService$NotificationListenerInfo: void <init>(com.android.server.NotificationManagerService,android.service.notification.INotificationListener,android.content.ComponentName,int,boolean)>(r0, r1, r2, i0, 1);

        r4 = $r7;

        $r8 = interfaceinvoke r1.<android.service.notification.INotificationListener: android.os.IBinder asBinder()>();

        interfaceinvoke $r8.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r4, 0);

        $r9 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label2:
        exitmonitor r3;

     label3:
        return;

     label4:
        $r10 := @caughtexception;

        r6 = $r10;

     label5:
        exitmonitor r3;

     label6:
        throw r6;

     label7:
        $r11 := @caughtexception;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    com.android.server.NotificationManagerService$NotificationListenerInfo removeListenerImpl(android.service.notification.INotificationListener, int)
    {
        com.android.server.NotificationManagerService r0;
        android.service.notification.INotificationListener r1, $r9;
        int i0, i1, $i2, $i3;
        com.android.server.NotificationManagerService$NotificationListenerInfo r2, r5;
        java.util.ArrayList r3, $r6, $r7, $r12;
        java.lang.Throwable r4, $r13;
        java.lang.Object $r8, $r14;
        android.os.IBinder $r10, $r11;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.service.notification.INotificationListener;

        i0 := @parameter1: int;

        r2 = null;

        r3 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mNotificationList>;

        entermonitor r3;

     label01:
        $r6 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label02:
        if i1 < 0 goto label05;

     label03:
        $r7 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r5 = (com.android.server.NotificationManagerService$NotificationListenerInfo) $r8;

        $r9 = r5.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.service.notification.INotificationListener listener>;

        $r11 = interfaceinvoke $r9.<android.service.notification.INotificationListener: android.os.IBinder asBinder()>();

        $r10 = interfaceinvoke r1.<android.service.notification.INotificationListener: android.os.IBinder asBinder()>();

        if $r11 != $r10 goto label10;

        $i3 = r5.<com.android.server.NotificationManagerService$NotificationListenerInfo: int userid>;

        if $i3 != i0 goto label10;

        $r12 = r0.<com.android.server.NotificationManagerService: java.util.ArrayList mListeners>;

        $r14 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        r2 = (com.android.server.NotificationManagerService$NotificationListenerInfo) $r14;

     label04:
        goto label10;

     label05:
        exitmonitor r3;

     label06:
        return r2;

     label07:
        $r13 := @caughtexception;

        r4 = $r13;

     label08:
        exitmonitor r3;

     label09:
        throw r4;

     label10:
        i1 = i1 + -1;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public void setNotificationsEnabledForPackage(java.lang.String, int, boolean)
    {
        com.android.server.NotificationManagerService r0;
        java.lang.String r1, r3, $r9;
        int i0, $i3;
        boolean z0;
        java.lang.StringBuilder r2, $r5, $r6, $r7, $r8;
        android.app.AppOpsManager r4;
        byte b1;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void checkCallerIsSystem()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        if z0 == 0 goto label4;

        r3 = "en";

     label1:
        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("abling notifications for ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("NotificationService", $r9);

        r4 = r0.<com.android.server.NotificationManagerService: android.app.AppOpsManager mAppOps>;

        if z0 == 0 goto label5;

        b1 = 0;

     label2:
        virtualinvoke r4.<android.app.AppOpsManager: void setMode(int,int,java.lang.String,int)>(11, i0, r1, b1);

        if z0 != 0 goto label3;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        virtualinvoke r0.<com.android.server.NotificationManagerService: boolean cancelAllNotificationsInt(java.lang.String,int,int,boolean,int)>(r1, 0, 0, 1, $i3);

     label3:
        return;

     label4:
        r3 = "dis";

        goto label1;

     label5:
        b1 = 1;

        goto label2;
    }

    void systemReady()
    {
        com.android.server.NotificationManagerService r0;
        android.os.IBinder $r1;
        android.media.IAudioService $r2;

        r0 := @this: com.android.server.NotificationManagerService;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("audio");

        $r2 = staticinvoke <android.media.IAudioService$Stub: android.media.IAudioService asInterface(android.os.IBinder)>($r1);

        r0.<com.android.server.NotificationManagerService: android.media.IAudioService mAudioService> = $r2;

        r0.<com.android.server.NotificationManagerService: boolean mSystemReady> = 1;

        virtualinvoke r0.<com.android.server.NotificationManagerService: void rebindListenerServices()>();

        return;
    }

    public void unregisterListener(android.service.notification.INotificationListener, int)
    {
        com.android.server.NotificationManagerService r0;
        android.service.notification.INotificationListener r1;
        int i0;
        com.android.server.NotificationManagerService$NotificationListenerInfo r2;
        android.content.ServiceConnection $r3, $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.NotificationManagerService;

        r1 := @parameter0: android.service.notification.INotificationListener;

        i0 := @parameter1: int;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        r2 = virtualinvoke r0.<com.android.server.NotificationManagerService: com.android.server.NotificationManagerService$NotificationListenerInfo removeListenerImpl(android.service.notification.INotificationListener,int)>(r1, i0);

        if r2 == null goto label1;

        $r3 = r2.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ServiceConnection connection>;

        if $r3 == null goto label1;

        $r5 = r0.<com.android.server.NotificationManagerService: android.content.Context mContext>;

        $r4 = r2.<com.android.server.NotificationManagerService$NotificationListenerInfo: android.content.ServiceConnection connection>;

        virtualinvoke $r5.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r4);

        return;
    }
}
