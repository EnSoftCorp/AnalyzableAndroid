public abstract class android.database.sqlite.SQLiteClosable extends java.lang.Object implements java.io.Closeable
{
    private int mReferenceCount;

    public void <init>()
    {
        android.database.sqlite.SQLiteClosable r0;

        r0 := @this: android.database.sqlite.SQLiteClosable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.database.sqlite.SQLiteClosable: int mReferenceCount> = 1;

        return;
    }

    public void acquireReference()
    {
        android.database.sqlite.SQLiteClosable r0;
        java.lang.Throwable r1, $r7;
        int $i0, $i1, $i2;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.database.sqlite.SQLiteClosable;

        entermonitor r0;

     label1:
        $i0 = r0.<android.database.sqlite.SQLiteClosable: int mReferenceCount>;

        if $i0 > 0 goto label5;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attempt to re-open an already-closed object: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        $r7 := @caughtexception;

        r1 = $r7;

     label3:
        exitmonitor r0;

     label4:
        throw r1;

     label5:
        $i1 = r0.<android.database.sqlite.SQLiteClosable: int mReferenceCount>;

        $i2 = 1 + $i1;

        r0.<android.database.sqlite.SQLiteClosable: int mReferenceCount> = $i2;

        exitmonitor r0;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public void close()
    {
        android.database.sqlite.SQLiteClosable r0;

        r0 := @this: android.database.sqlite.SQLiteClosable;

        virtualinvoke r0.<android.database.sqlite.SQLiteClosable: void releaseReference()>();

        return;
    }

    protected abstract void onAllReferencesReleased();

    protected void onAllReferencesReleasedFromContainer()
    {
        android.database.sqlite.SQLiteClosable r0;

        r0 := @this: android.database.sqlite.SQLiteClosable;

        virtualinvoke r0.<android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>();

        return;
    }

    public void releaseReference()
    {
        android.database.sqlite.SQLiteClosable r0;
        java.lang.Throwable r1, $r2;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.database.sqlite.SQLiteClosable;

        entermonitor r0;

     label1:
        $i1 = r0.<android.database.sqlite.SQLiteClosable: int mReferenceCount>;

        i0 = -1 + $i1;

        r0.<android.database.sqlite.SQLiteClosable: int mReferenceCount> = i0;

     label2:
        if i0 != 0 goto label6;

        z0 = 1;

     label3:
        exitmonitor r0;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>();

     label5:
        return;

     label6:
        z0 = 0;

        goto label3;

     label7:
        $r2 := @caughtexception;

        r1 = $r2;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void releaseReferenceFromContainer()
    {
        android.database.sqlite.SQLiteClosable r0;
        java.lang.Throwable r1, $r2;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.database.sqlite.SQLiteClosable;

        entermonitor r0;

     label1:
        $i1 = r0.<android.database.sqlite.SQLiteClosable: int mReferenceCount>;

        i0 = -1 + $i1;

        r0.<android.database.sqlite.SQLiteClosable: int mReferenceCount> = i0;

     label2:
        if i0 != 0 goto label6;

        z0 = 1;

     label3:
        exitmonitor r0;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>();

     label5:
        return;

     label6:
        z0 = 0;

        goto label3;

     label7:
        $r2 := @caughtexception;

        r1 = $r2;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
