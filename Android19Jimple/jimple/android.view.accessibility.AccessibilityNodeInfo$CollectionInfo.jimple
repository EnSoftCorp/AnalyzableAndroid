public final class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo extends java.lang.Object
{
    private static final int MAX_POOL_SIZE;
    private static final android.util.Pools$SynchronizedPool sPool;
    private int mColumnCount;
    private boolean mHierarchical;
    private int mRowCount;

    static void <clinit>()
    {
        android.util.Pools$SynchronizedPool $r0;

        <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int MAX_POOL_SIZE> = 20;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(20);

        <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.util.Pools$SynchronizedPool sPool> = $r0;

        return;
    }

    private void <init>(int, int, boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int mRowCount> = i0;

        r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int mColumnCount> = i1;

        r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: boolean mHierarchical> = z0;

        return;
    }

    private void clear()
    {
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int mRowCount> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int mColumnCount> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: boolean mHierarchical> = 0;

        return;
    }

    public static android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int, int, boolean)
    {
        int i0, i1;
        boolean z0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r0, $r3;
        android.util.Pools$SynchronizedPool $r1;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.util.Pools$SynchronizedPool sPool>;

        $r2 = virtualinvoke $r1.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r0 = (android.view.accessibility.AccessibilityNodeInfo$CollectionInfo) $r2;

        if r0 == null goto label1;

        return r0;

     label1:
        $r3 = new android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        specialinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: void <init>(int,int,boolean)>(i0, i1, z0);

        return $r3;
    }

    public static android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r0, $r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int mRowCount>;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int mColumnCount>;

        $z0 = r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: boolean mHierarchical>;

        $r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean)>($i1, $i0, $z0);

        return $r1;
    }

    public int getColumnCount()
    {
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int mColumnCount>;

        return $i0;
    }

    public int getRowCount()
    {
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int mRowCount>;

        return $i0;
    }

    public boolean isHierarchical()
    {
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        $z0 = r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: boolean mHierarchical>;

        return $z0;
    }

    void recycle()
    {
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: void clear()>();

        $r1 = <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }
}
