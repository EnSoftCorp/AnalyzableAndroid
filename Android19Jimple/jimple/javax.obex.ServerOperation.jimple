public final class javax.obex.ServerOperation extends java.lang.Object implements javax.obex.Operation, javax.obex.BaseStream
{
    public boolean finalBitSet;
    public boolean isAborted;
    private boolean mClosed;
    private java.lang.String mExceptionString;
    private boolean mGetOperation;
    private boolean mHasBody;
    private java.io.InputStream mInput;
    private javax.obex.ServerRequestHandler mListener;
    private int mMaxPacketLength;
    private javax.obex.ServerSession mParent;
    private javax.obex.PrivateInputStream mPrivateInput;
    private javax.obex.PrivateOutputStream mPrivateOutput;
    private boolean mPrivateOutputOpen;
    private boolean mRequestFinished;
    private int mResponseSize;
    private boolean mSendBodyHeader;
    public javax.obex.HeaderSet replyHeader;
    public javax.obex.HeaderSet requestHeader;

    public void <init>(javax.obex.ServerSession, java.io.InputStream, int, int, javax.obex.ServerRequestHandler) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        javax.obex.ServerSession r1, $r21, $r33, $r39, $r45;
        java.io.InputStream r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, $i16, $i18, $i19, $i20;
        javax.obex.ServerRequestHandler r3, $r11, $r15, $r43;
        byte[] r4, r5, $r14, $r17, $r24, $r25, $r26, $r31, $r32, $r38, $r40, $r42;
        javax.obex.HeaderSet $r6, $r7, $r12, $r13, $r16, $r20, $r22, $r23, $r27, $r28, $r29, $r30, $r34, $r35, $r36, $r37, $r41;
        javax.obex.PrivateInputStream $r8, $r9, $r10, $r18, $r19;
        boolean $z0, $z1, $z2, $z3, $z6, $z7, $z10;
        long $l12, $l17;
        byte $b13;
        java.io.IOException $r44, $r46;

        r0 := @this: javax.obex.ServerOperation;

        r1 := @parameter0: javax.obex.ServerSession;

        r2 := @parameter1: java.io.InputStream;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: javax.obex.ServerRequestHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.obex.ServerOperation: boolean mSendBodyHeader> = 1;

        r0.<javax.obex.ServerOperation: boolean isAborted> = 0;

        r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent> = r1;

        r0.<javax.obex.ServerOperation: java.io.InputStream mInput> = r2;

        r0.<javax.obex.ServerOperation: int mMaxPacketLength> = i1;

        r0.<javax.obex.ServerOperation: boolean mClosed> = 0;

        $r6 = new javax.obex.HeaderSet;

        specialinvoke $r6.<javax.obex.HeaderSet: void <init>()>();

        r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader> = $r6;

        $r7 = new javax.obex.HeaderSet;

        specialinvoke $r7.<javax.obex.HeaderSet: void <init>()>();

        r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader> = $r7;

        $r8 = new javax.obex.PrivateInputStream;

        specialinvoke $r8.<javax.obex.PrivateInputStream: void <init>(javax.obex.BaseStream)>(r0);

        r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput> = $r8;

        r0.<javax.obex.ServerOperation: int mResponseSize> = 3;

        r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener> = r3;

        r0.<javax.obex.ServerOperation: boolean mRequestFinished> = 0;

        r0.<javax.obex.ServerOperation: boolean mPrivateOutputOpen> = 0;

        r0.<javax.obex.ServerOperation: boolean mHasBody> = 0;

        if i0 == 2 goto label01;

        if i0 != 130 goto label04;

     label01:
        r0.<javax.obex.ServerOperation: boolean mGetOperation> = 0;

        $i4 = i0 & 128;

        if $i4 != 0 goto label03;

        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 0;

     label02:
        $i6 = virtualinvoke r2.<java.io.InputStream: int read()>();

        $i5 = $i6 << 8;

        $i7 = virtualinvoke r2.<java.io.InputStream: int read()>();

        i2 = $i5 + $i7;

        if i2 <= 65534 goto label07;

        $r45 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r45.<javax.obex.ServerSession: void sendResponse(int,byte[])>(206, null);

        $r44 = new java.io.IOException;

        specialinvoke $r44.<java.io.IOException: void <init>(java.lang.String)>("Packet received was too large");

        throw $r44;

     label03:
        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 1;

        r0.<javax.obex.ServerOperation: boolean mRequestFinished> = 1;

        goto label02;

     label04:
        if i0 == 3 goto label05;

        if i0 != 131 goto label06;

     label05:
        r0.<javax.obex.ServerOperation: boolean mGetOperation> = 1;

        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 0;

        if i0 != 131 goto label02;

        r0.<javax.obex.ServerOperation: boolean mRequestFinished> = 1;

        goto label02;

     label06:
        $r46 = new java.io.IOException;

        specialinvoke $r46.<java.io.IOException: void <init>(java.lang.String)>("ServerOperation can not handle such request");

        throw $r46;

     label07:
        if i2 <= 3 goto label16;

        $i9 = i2 - 3;

        r4 = newarray (byte)[$i9];

        i3 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r4);

     label08:
        $i11 = lengthof r4;

        if i3 == $i11 goto label09;

        $i18 = lengthof r4;

        $i19 = $i18 - i3;

        $i20 = virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>(r4, i3, $i19);

        i3 = i3 + $i20;

        goto label08;

     label09:
        $r12 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        r5 = staticinvoke <javax.obex.ObexHelper: byte[] updateHeaderSet(javax.obex.HeaderSet,byte[])>($r12, r4);

        if r5 == null goto label10;

        r0.<javax.obex.ServerOperation: boolean mHasBody> = 1;

     label10:
        $r11 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        $l12 = virtualinvoke $r11.<javax.obex.ServerRequestHandler: long getConnectionId()>();

        $b13 = $l12 cmp -1L;

        if $b13 == 0 goto label13;

        $r35 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r40 = $r35.<javax.obex.HeaderSet: byte[] mConnectionID>;

        if $r40 == null goto label13;

        $r43 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        $r41 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r42 = $r41.<javax.obex.HeaderSet: byte[] mConnectionID>;

        $l17 = staticinvoke <javax.obex.ObexHelper: long convertToLong(byte[])>($r42);

        virtualinvoke $r43.<javax.obex.ServerRequestHandler: void setConnectionId(long)>($l17);

     label11:
        $r13 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r14 = $r13.<javax.obex.HeaderSet: byte[] mAuthResp>;

        if $r14 == null goto label14;

        $r39 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r37 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r38 = $r37.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $z10 = virtualinvoke $r39.<javax.obex.ServerSession: boolean handleAuthResp(byte[])>($r38);

        if $z10 != 0 goto label14;

        r0.<javax.obex.ServerOperation: java.lang.String mExceptionString> = "Authentication Failed";

        $r33 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r33.<javax.obex.ServerSession: void sendResponse(int,byte[])>(193, null);

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        $r34 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r34.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

     label12:
        return;

     label13:
        $r15 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        virtualinvoke $r15.<javax.obex.ServerRequestHandler: void setConnectionId(long)>(1L);

        goto label11;

     label14:
        $r16 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r17 = $r16.<javax.obex.HeaderSet: byte[] mAuthChall>;

        if $r17 == null goto label15;

        $r21 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r22 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        virtualinvoke $r21.<javax.obex.ServerSession: boolean handleAuthChall(javax.obex.HeaderSet)>($r22);

        $r23 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r20 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r25 = $r20.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i15 = lengthof $r25;

        $r24 = newarray (byte)[$i15];

        $r23.<javax.obex.HeaderSet: byte[] mAuthResp> = $r24;

        $r29 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r31 = $r29.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r28 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r32 = $r28.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r27 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r26 = $r27.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i16 = lengthof $r26;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r31, 0, $r32, 0, $i16);

        $r30 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r30.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

        $r36 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r36.<javax.obex.HeaderSet: byte[] mAuthChall> = null;

     label15:
        if r5 == null goto label18;

        $r18 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r18.<javax.obex.PrivateInputStream: void writeBytes(byte[],int)>(r5, 1);

     label16:
        $z0 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z0 != 0 goto label17;

        $z3 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z3 != 0 goto label17;

        $r9 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        $i8 = virtualinvoke $r9.<javax.obex.PrivateInputStream: int available()>();

        if $i8 != 0 goto label17;

        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

        $r10 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        $i10 = virtualinvoke $r10.<javax.obex.PrivateInputStream: int available()>();

        if $i10 <= 0 goto label16;

     label17:
        $z2 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z2 == 0 goto label12;

        $z1 = r0.<javax.obex.ServerOperation: boolean mRequestFinished>;

        if $z1 != 0 goto label12;

        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

        goto label17;

     label18:
        $z6 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z6 != 0 goto label16;

        $z7 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z7 != 0 goto label16;

        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

        $r19 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        $i14 = virtualinvoke $r19.<javax.obex.PrivateInputStream: int available()>();

        if $i14 <= 0 goto label18;

        goto label16;
    }

    public void abort() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.io.IOException $r1;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Called from a server");

        throw $r1;
    }

    public void close() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;

        r0 := @this: javax.obex.ServerOperation;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        return;
    }

    public boolean continueOperation(boolean, boolean) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        boolean z0, z1, z2, $z3, $z5;
        java.lang.Throwable r1, $r3;
        int $i0, $i1;
        javax.obex.PrivateOutputStream $r2;

        r0 := @this: javax.obex.ServerOperation;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = 1;

        entermonitor r0;

     label01:
        $z3 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z3 != 0 goto label11;

        $z5 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z5 != 0 goto label10;

     label02:
        if z0 == 0 goto label05;

     label03:
        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

     label04:
        exitmonitor r0;

        return z2;

     label05:
        $i0 = r0.<javax.obex.ServerOperation: int mResponseSize>;

        if $i0 > 3 goto label06;

        $r2 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        $i1 = virtualinvoke $r2.<javax.obex.PrivateOutputStream: int size()>();

        if $i1 <= 0 goto label09;

     label06:
        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

     label07:
        goto label04;

     label08:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

     label09:
        z2 = 0;

        goto label04;

     label10:
        z2 = 0;

        goto label04;

     label11:
        virtualinvoke r0.<javax.obex.ServerOperation: boolean sendReply(int)>(144);

     label12:
        goto label04;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    public void ensureNotDone() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;

        r0 := @this: javax.obex.ServerOperation;

        return;
    }

    public void ensureOpen() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.lang.String $r1, $r4;
        boolean $z0;
        java.io.IOException $r2, $r3;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = r0.<javax.obex.ServerOperation: java.lang.String mExceptionString>;

        if $r1 == null goto label1;

        $r3 = new java.io.IOException;

        $r4 = r0.<javax.obex.ServerOperation: java.lang.String mExceptionString>;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label1:
        $z0 = r0.<javax.obex.ServerOperation: boolean mClosed>;

        if $z0 == 0 goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Operation has already ended");

        throw $r2;

     label2:
        return;
    }

    public java.lang.String getEncoding()
    {
        javax.obex.ServerOperation r0;

        r0 := @this: javax.obex.ServerOperation;

        return null;
    }

    public int getHeaderLength()
    {
        javax.obex.ServerOperation r0;
        long l0;
        javax.obex.ServerRequestHandler $r1;
        byte $b1;
        javax.obex.HeaderSet $r2, $r4, $r6;
        byte[] $r3, $r5;
        int $i2;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        l0 = virtualinvoke $r1.<javax.obex.ServerRequestHandler: long getConnectionId()>();

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label2;

        $r6 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r6.<javax.obex.HeaderSet: byte[] mConnectionID> = null;

     label1:
        $r4 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r5 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>($r4, 0);

        $i2 = lengthof $r5;

        return $i2;

     label2:
        $r2 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r3 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>(l0);

        $r2.<javax.obex.HeaderSet: byte[] mConnectionID> = $r3;

        goto label1;
    }

    public long getLength()
    {
        javax.obex.ServerOperation r0;
        java.lang.Long r2;
        long l0;
        javax.obex.HeaderSet $r3;
        java.lang.Object $r4;
        java.io.IOException $r5;

        r0 := @this: javax.obex.ServerOperation;

     label1:
        $r3 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r4 = virtualinvoke $r3.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(195);

        r2 = (java.lang.Long) $r4;

     label2:
        if r2 != null goto label3;

        return -1L;

     label3:
        l0 = virtualinvoke r2.<java.lang.Long: long longValue()>();

     label4:
        return l0;

     label5:
        $r5 := @caughtexception;

        return -1L;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public int getMaxPacketSize()
    {
        javax.obex.ServerOperation r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: javax.obex.ServerOperation;

        $i0 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        $i1 = -6 + $i0;

        $i2 = virtualinvoke r0.<javax.obex.ServerOperation: int getHeaderLength()>();

        $i3 = $i1 - $i2;

        return $i3;
    }

    public javax.obex.HeaderSet getReceivedHeader() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        javax.obex.HeaderSet $r1;

        r0 := @this: javax.obex.ServerOperation;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        $r1 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        return $r1;
    }

    public int getResponseCode() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.io.IOException $r1;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Called from a server");

        throw $r1;
    }

    public java.lang.String getType()
    {
        javax.obex.ServerOperation r0;
        java.lang.String r2;
        javax.obex.HeaderSet $r3;
        java.lang.Object $r4;
        java.io.IOException $r5;

        r0 := @this: javax.obex.ServerOperation;

     label1:
        $r3 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r4 = virtualinvoke $r3.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(66);

        r2 = (java.lang.String) $r4;

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean isValidBody()
    {
        javax.obex.ServerOperation r0;
        boolean $z0;

        r0 := @this: javax.obex.ServerOperation;

        $z0 = r0.<javax.obex.ServerOperation: boolean mHasBody>;

        return $z0;
    }

    public void noBodyHeader()
    {
        javax.obex.ServerOperation r0;

        r0 := @this: javax.obex.ServerOperation;

        r0.<javax.obex.ServerOperation: boolean mSendBodyHeader> = 0;

        return;
    }

    public java.io.DataInputStream openDataInputStream() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.io.DataInputStream $r1;
        java.io.InputStream $r2;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = new java.io.DataInputStream;

        $r2 = virtualinvoke r0.<javax.obex.ServerOperation: java.io.InputStream openInputStream()>();

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        return $r1;
    }

    public java.io.DataOutputStream openDataOutputStream() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        java.io.DataOutputStream $r1;
        java.io.OutputStream $r2;

        r0 := @this: javax.obex.ServerOperation;

        $r1 = new java.io.DataOutputStream;

        $r2 = virtualinvoke r0.<javax.obex.ServerOperation: java.io.OutputStream openOutputStream()>();

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

        return $r1;
    }

    public java.io.InputStream openInputStream() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        javax.obex.PrivateInputStream $r1;

        r0 := @this: javax.obex.ServerOperation;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        $r1 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        return $r1;
    }

    public java.io.OutputStream openOutputStream() throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        boolean $z0, $z1;
        javax.obex.PrivateOutputStream $r1, $r2, $r3;
        int $i0;
        java.io.IOException $r4, $r5;

        r0 := @this: javax.obex.ServerOperation;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        $z0 = r0.<javax.obex.ServerOperation: boolean mPrivateOutputOpen>;

        if $z0 == 0 goto label1;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("no more input streams available, stream already opened");

        throw $r5;

     label1:
        $z1 = r0.<javax.obex.ServerOperation: boolean mRequestFinished>;

        if $z1 != 0 goto label2;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("no  output streams available ,request not finished");

        throw $r4;

     label2:
        $r1 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r1 != null goto label3;

        $r3 = new javax.obex.PrivateOutputStream;

        $i0 = virtualinvoke r0.<javax.obex.ServerOperation: int getMaxPacketSize()>();

        specialinvoke $r3.<javax.obex.PrivateOutputStream: void <init>(javax.obex.BaseStream,int)>(r0, $i0);

        r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput> = $r3;

     label3:
        r0.<javax.obex.ServerOperation: boolean mPrivateOutputOpen> = 1;

        $r2 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        return $r2;
    }

    public void sendHeaders(javax.obex.HeaderSet) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        javax.obex.HeaderSet r1, $r3;
        int[] r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        java.io.IOException $r5;

        r0 := @this: javax.obex.ServerOperation;

        r1 := @parameter0: javax.obex.HeaderSet;

        virtualinvoke r0.<javax.obex.ServerOperation: void ensureOpen()>();

        if r1 != null goto label1;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Headers may not be null");

        throw $r5;

     label1:
        r2 = virtualinvoke r1.<javax.obex.HeaderSet: int[] getHeaderList()>();

        if r2 == null goto label3;

        i0 = 0;

     label2:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label3;

        $r3 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $i3 = r2[i0];

        $i2 = r2[i0];

        $r4 = virtualinvoke r1.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i2);

        virtualinvoke $r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i3, $r4);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public boolean sendReply(int) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i38, $i39, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i54, $i55;
        java.io.ByteArrayOutputStream r1, $r9;
        java.lang.Throwable r2, $r66;
        long l1, $l23, $l29;
        byte[] r3, r4, r5, r6, r7, r8, $r13, $r16, $r23, $r28, $r30, $r35, $r36, $r39, $r42, $r43, $r47, $r49;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z7, $z8, $z9, $z10;
        javax.obex.ServerRequestHandler $r10, $r21, $r25, $r48;
        javax.obex.HeaderSet $r11, $r14, $r22, $r24, $r27, $r29, $r32, $r33, $r34, $r37, $r38, $r40, $r44, $r45, $r46, $r51, $r52, $r53, $r65;
        byte $b14, $b24, $b37, $b40, $b41, $b52, $b53;
        javax.obex.PrivateOutputStream $r12, $r63, $r64, $r69, $r72, $r74;
        javax.obex.ServerSession $r15, $r26, $r41, $r50, $r55, $r56, $r61, $r67, $r70;
        java.io.InputStream $r17, $r18, $r19, $r20, $r57, $r58, $r62;
        javax.obex.PrivateInputStream $r31, $r68, $r73;
        java.io.IOException $r54, $r59, $r60, $r71;

        r0 := @this: javax.obex.ServerOperation;

        i0 := @parameter0: int;

        entermonitor r0;

     label01:
        $r9 = new java.io.ByteArrayOutputStream;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r9;

        $r10 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        l1 = virtualinvoke $r10.<javax.obex.ServerRequestHandler: long getConnectionId()>();

     label02:
        $b14 = l1 cmp -1L;

        if $b14 != 0 goto label16;

     label03:
        $r65 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r65.<javax.obex.HeaderSet: byte[] mConnectionID> = null;

     label04:
        $r14 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        r3 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>($r14, 1);

     label05:
        i2 = -1;

        i3 = -1;

     label06:
        $r12 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r12 == null goto label08;

        $r74 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        i2 = virtualinvoke $r74.<javax.obex.PrivateOutputStream: int size()>();

     label07:
        i3 = i2;

     label08:
        $i16 = lengthof r3;

        $i15 = 3 + $i16;

        $i17 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        if $i15 <= $i17 goto label23;

     label09:
        i4 = 0;

        i5 = 0;

     label10:
        $i49 = lengthof r3;

        if i4 == $i49 goto label20;

        $i48 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        i6 = -3 + $i48;

        i4 = staticinvoke <javax.obex.ObexHelper: int findHeaderEnd(byte[],int,int)>(r3, i5, i6);

     label11:
        if i4 != -1 goto label18;

     label12:
        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        $r68 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        if $r68 == null goto label13;

        $r73 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r73.<javax.obex.PrivateInputStream: void close()>();

     label13:
        $r69 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r69 == null goto label14;

        $r72 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        virtualinvoke $r72.<javax.obex.PrivateOutputStream: void close()>();

     label14:
        $r70 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r70.<javax.obex.ServerSession: void sendResponse(int,byte[])>(208, null);

        $r71 = new java.io.IOException;

        specialinvoke $r71.<java.io.IOException: void <init>(java.lang.String)>("OBEX Packet exceeds max packet size");

        throw $r71;

     label15:
        $r66 := @caughtexception;

        r2 = $r66;

        exitmonitor r0;

        throw r2;

     label16:
        $r11 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r13 = staticinvoke <javax.obex.ObexHelper: byte[] convertToByteArray(long)>(l1);

        $r11.<javax.obex.HeaderSet: byte[] mConnectionID> = $r13;

     label17:
        goto label04;

     label18:
        $i50 = i4 - i5;

        r4 = newarray (byte)[$i50];

        i7 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, i5, r4, 0, i7);

        $r67 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r67.<javax.obex.ServerSession: void sendResponse(int,byte[])>(i0, r4);

     label19:
        i5 = i4;

        goto label10;

     label20:
        if i2 <= 0 goto label22;

        z0 = 1;

     label21:
        exitmonitor r0;

        return z0;

     label22:
        z0 = 0;

        goto label21;

     label23:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>(r3);

        $z1 = r0.<javax.obex.ServerOperation: boolean mGetOperation>;

        if $z1 == 0 goto label26;

     label24:
        if i0 != 160 goto label26;

     label25:
        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 1;

     label26:
        $z2 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z2 != 0 goto label27;

        $i46 = lengthof r3;

        $i44 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        $i47 = -20 + $i44;

        if $i46 >= $i47 goto label33;

     label27:
        if i2 <= 0 goto label33;

     label28:
        $i35 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        $i36 = lengthof r3;

        $i34 = $i35 - $i36;

        $i43 = -6 + $i34;

        if i2 <= $i43 goto label29;

        $i54 = r0.<javax.obex.ServerOperation: int mMaxPacketLength>;

        $i55 = lengthof r3;

        $i45 = $i54 - $i55;

        i2 = -6 + $i45;

     label29:
        $r63 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        r5 = virtualinvoke $r63.<javax.obex.PrivateOutputStream: byte[] readBytes(int)>(i2);

        $z8 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z8 != 0 goto label30;

        $r64 = r0.<javax.obex.ServerOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        $z9 = virtualinvoke $r64.<javax.obex.PrivateOutputStream: boolean isClosed()>();

        if $z9 == 0 goto label43;

     label30:
        $z7 = r0.<javax.obex.ServerOperation: boolean mSendBodyHeader>;

        if $z7 != 1 goto label33;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(73);

     label31:
        i13 = i2 + 3;

     label32:
        $i42 = i13 >> 8;

        $b41 = (byte) $i42;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b41);

        $b40 = (byte) i13;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b40);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>(r5);

     label33:
        $z3 = r0.<javax.obex.ServerOperation: boolean finalBitSet>;

        if $z3 == 0 goto label36;

     label34:
        if i0 != 160 goto label36;

        if i3 > 0 goto label36;

     label35:
        $z6 = r0.<javax.obex.ServerOperation: boolean mSendBodyHeader>;

        if $z6 != 1 goto label36;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(73);

        $b37 = (byte) 0;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b37);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(3);

     label36:
        r0.<javax.obex.ServerOperation: int mResponseSize> = 3;

        $r15 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r16 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r15.<javax.obex.ServerSession: void sendResponse(int,byte[])>(i0, $r16);

     label37:
        if i0 != 144 goto label74;

     label38:
        $r18 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        i9 = virtualinvoke $r18.<java.io.InputStream: int read()>();

        $r17 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        $i20 = virtualinvoke $r17.<java.io.InputStream: int read()>();

        $i19 = $i20 << 8;

        $r19 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        $i18 = virtualinvoke $r19.<java.io.InputStream: int read()>();

        i8 = $i19 + $i18;

     label39:
        if i9 == 2 goto label50;

        if i9 == 130 goto label50;

        if i9 == 3 goto label50;

        if i9 == 131 goto label50;

        if i8 <= 3 goto label47;

     label40:
        $i33 = i8 - 3;

        r8 = newarray (byte)[$i33];

        $r58 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        i11 = virtualinvoke $r58.<java.io.InputStream: int read(byte[])>(r8);

     label41:
        $i31 = lengthof r8;

        if i11 == $i31 goto label47;

        $r62 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        $i32 = lengthof r8;

        $i39 = $i32 - i11;

        $i38 = virtualinvoke $r62.<java.io.InputStream: int read(byte[],int,int)>(r8, i11, $i39);

        i11 = i11 + $i38;

     label42:
        goto label41;

     label43:
        $z10 = r0.<javax.obex.ServerOperation: boolean mSendBodyHeader>;

        if $z10 != 1 goto label33;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(72);

     label44:
        i12 = i2 + 3;

     label45:
        $i51 = i12 >> 8;

        $b53 = (byte) $i51;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b53);

        $b52 = (byte) i12;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b52);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>(r5);

     label46:
        goto label33;

     label47:
        if i9 != 255 goto label49;

     label48:
        $r61 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r61.<javax.obex.ServerSession: void sendResponse(int,byte[])>(160, null);

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        r0.<javax.obex.ServerOperation: boolean isAborted> = 1;

        r0.<javax.obex.ServerOperation: java.lang.String mExceptionString> = "Abort Received";

        $r59 = new java.io.IOException;

        specialinvoke $r59.<java.io.IOException: void <init>(java.lang.String)>("Abort Received");

        throw $r59;

     label49:
        $r55 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r55.<javax.obex.ServerSession: void sendResponse(int,byte[])>(192, null);

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        r0.<javax.obex.ServerOperation: java.lang.String mExceptionString> = "Bad Request Received";

        $r60 = new java.io.IOException;

        specialinvoke $r60.<java.io.IOException: void <init>(java.lang.String)>("Bad Request Received");

        throw $r60;

     label50:
        if i9 != 130 goto label54;

     label51:
        r0.<javax.obex.ServerOperation: boolean finalBitSet> = 1;

     label52:
        if i8 <= 65534 goto label57;

     label53:
        $r56 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r56.<javax.obex.ServerSession: void sendResponse(int,byte[])>(206, null);

        $r54 = new java.io.IOException;

        specialinvoke $r54.<java.io.IOException: void <init>(java.lang.String)>("Packet received was too large");

        throw $r54;

     label54:
        if i9 != 131 goto label52;

     label55:
        r0.<javax.obex.ServerOperation: boolean mRequestFinished> = 1;

     label56:
        goto label52;

     label57:
        if i8 <= 3 goto label73;

     label58:
        $i22 = i8 - 3;

        r6 = newarray (byte)[$i22];

        $r20 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        i10 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>(r6);

     label59:
        $i21 = lengthof r6;

        if i10 == $i21 goto label61;

        $r57 = r0.<javax.obex.ServerOperation: java.io.InputStream mInput>;

        $i30 = lengthof r6;

        $i28 = $i30 - i10;

        $i27 = virtualinvoke $r57.<java.io.InputStream: int read(byte[],int,int)>(r6, i10, $i28);

        i10 = i10 + $i27;

     label60:
        goto label59;

     label61:
        $r22 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        r7 = staticinvoke <javax.obex.ObexHelper: byte[] updateHeaderSet(javax.obex.HeaderSet,byte[])>($r22, r6);

     label62:
        if r7 == null goto label64;

     label63:
        r0.<javax.obex.ServerOperation: boolean mHasBody> = 1;

     label64:
        $r21 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        $l23 = virtualinvoke $r21.<javax.obex.ServerRequestHandler: long getConnectionId()>();

        $b24 = $l23 cmp -1L;

        if $b24 == 0 goto label67;

        $r52 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r47 = $r52.<javax.obex.HeaderSet: byte[] mConnectionID>;

        if $r47 == null goto label67;

        $r48 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        $r46 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r49 = $r46.<javax.obex.HeaderSet: byte[] mConnectionID>;

        $l29 = staticinvoke <javax.obex.ObexHelper: long convertToLong(byte[])>($r49);

        virtualinvoke $r48.<javax.obex.ServerRequestHandler: void setConnectionId(long)>($l29);

     label65:
        $r24 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r23 = $r24.<javax.obex.HeaderSet: byte[] mAuthResp>;

        if $r23 == null goto label70;

        $r41 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r40 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r39 = $r40.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $z5 = virtualinvoke $r41.<javax.obex.ServerSession: boolean handleAuthResp(byte[])>($r39);

        if $z5 != 0 goto label69;

        r0.<javax.obex.ServerOperation: java.lang.String mExceptionString> = "Authentication Failed";

        $r50 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        virtualinvoke $r50.<javax.obex.ServerSession: void sendResponse(int,byte[])>(193, null);

        r0.<javax.obex.ServerOperation: boolean mClosed> = 1;

        $r53 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r53.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

     label66:
        z0 = 0;

        goto label21;

     label67:
        $r25 = r0.<javax.obex.ServerOperation: javax.obex.ServerRequestHandler mListener>;

        virtualinvoke $r25.<javax.obex.ServerRequestHandler: void setConnectionId(long)>(1L);

     label68:
        goto label65;

     label69:
        $r51 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r51.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

     label70:
        $r29 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r30 = $r29.<javax.obex.HeaderSet: byte[] mAuthChall>;

        if $r30 == null goto label71;

        $r26 = r0.<javax.obex.ServerOperation: javax.obex.ServerSession mParent>;

        $r32 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        virtualinvoke $r26.<javax.obex.ServerSession: boolean handleAuthChall(javax.obex.HeaderSet)>($r32);

        $r37 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r27 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r28 = $r27.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i26 = lengthof $r28;

        $r36 = newarray (byte)[$i26];

        $r37.<javax.obex.HeaderSet: byte[] mAuthResp> = $r36;

        $r38 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r42 = $r38.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r33 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r43 = $r33.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r34 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet replyHeader>;

        $r35 = $r34.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i25 = lengthof $r35;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r42, 0, $r43, 0, $i25);

        $r45 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r45.<javax.obex.HeaderSet: byte[] mAuthResp> = null;

        $r44 = r0.<javax.obex.ServerOperation: javax.obex.HeaderSet requestHeader>;

        $r44.<javax.obex.HeaderSet: byte[] mAuthChall> = null;

     label71:
        if r7 == null goto label73;

     label72:
        $r31 = r0.<javax.obex.ServerOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r31.<javax.obex.PrivateInputStream: void writeBytes(byte[],int)>(r7, 1);

     label73:
        z0 = 1;

        goto label21;

     label74:
        z0 = 0;

        goto label21;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.lang.Throwable from label18 to label19 with label15;
        catch java.lang.Throwable from label23 to label24 with label15;
        catch java.lang.Throwable from label25 to label26 with label15;
        catch java.lang.Throwable from label26 to label27 with label15;
        catch java.lang.Throwable from label28 to label29 with label15;
        catch java.lang.Throwable from label29 to label30 with label15;
        catch java.lang.Throwable from label30 to label31 with label15;
        catch java.lang.Throwable from label32 to label33 with label15;
        catch java.lang.Throwable from label33 to label34 with label15;
        catch java.lang.Throwable from label35 to label36 with label15;
        catch java.lang.Throwable from label36 to label37 with label15;
        catch java.lang.Throwable from label38 to label39 with label15;
        catch java.lang.Throwable from label40 to label41 with label15;
        catch java.lang.Throwable from label41 to label42 with label15;
        catch java.lang.Throwable from label43 to label44 with label15;
        catch java.lang.Throwable from label45 to label46 with label15;
        catch java.lang.Throwable from label48 to label49 with label15;
        catch java.lang.Throwable from label49 to label50 with label15;
        catch java.lang.Throwable from label51 to label52 with label15;
        catch java.lang.Throwable from label53 to label54 with label15;
        catch java.lang.Throwable from label55 to label56 with label15;
        catch java.lang.Throwable from label58 to label59 with label15;
        catch java.lang.Throwable from label59 to label60 with label15;
        catch java.lang.Throwable from label61 to label62 with label15;
        catch java.lang.Throwable from label63 to label64 with label15;
        catch java.lang.Throwable from label64 to label65 with label15;
        catch java.lang.Throwable from label65 to label66 with label15;
        catch java.lang.Throwable from label67 to label68 with label15;
        catch java.lang.Throwable from label69 to label70 with label15;
        catch java.lang.Throwable from label70 to label71 with label15;
        catch java.lang.Throwable from label72 to label73 with label15;
    }

    public void streamClosed(boolean) throws java.io.IOException
    {
        javax.obex.ServerOperation r0;
        boolean z0;

        r0 := @this: javax.obex.ServerOperation;

        z0 := @parameter0: boolean;

        return;
    }
}
