public class com.android.server.pm.UserManagerService extends android.os.IUserManager$Stub
{
    private static final java.lang.String ATTR_CREATION_TIME;
    private static final java.lang.String ATTR_FAILED_ATTEMPTS;
    private static final java.lang.String ATTR_FLAGS;
    private static final java.lang.String ATTR_ICON_PATH;
    private static final java.lang.String ATTR_ID;
    private static final java.lang.String ATTR_KEY;
    private static final java.lang.String ATTR_LAST_LOGGED_IN_TIME;
    private static final java.lang.String ATTR_LAST_RETRY_MS;
    private static final java.lang.String ATTR_MULTIPLE;
    private static final java.lang.String ATTR_NEXT_SERIAL_NO;
    private static final java.lang.String ATTR_PARTIAL;
    private static final java.lang.String ATTR_PIN_HASH;
    private static final java.lang.String ATTR_SALT;
    private static final java.lang.String ATTR_SERIAL_NO;
    private static final java.lang.String ATTR_TYPE_BOOLEAN;
    private static final java.lang.String ATTR_TYPE_STRING;
    private static final java.lang.String ATTR_TYPE_STRING_ARRAY;
    private static final java.lang.String ATTR_USER_VERSION;
    private static final java.lang.String ATTR_VALUE_TYPE;
    private static final int BACKOFF_INC_INTERVAL;
    private static final int[] BACKOFF_TIMES;
    private static final boolean DBG;
    private static final long EPOCH_PLUS_30_YEARS;
    private static final java.lang.String LOG_TAG;
    private static final int MIN_USER_ID;
    private static final java.lang.String RESTRICTIONS_FILE_PREFIX;
    private static final java.lang.String TAG_ENTRY;
    private static final java.lang.String TAG_NAME;
    private static final java.lang.String TAG_RESTRICTIONS;
    private static final java.lang.String TAG_USER;
    private static final java.lang.String TAG_USERS;
    private static final java.lang.String TAG_VALUE;
    private static final java.lang.String USER_INFO_DIR;
    private static final java.lang.String USER_LIST_FILENAME;
    private static final java.lang.String USER_PHOTO_FILENAME;
    private static final int USER_VERSION;
    private static final java.lang.String XML_SUFFIX;
    private static com.android.server.pm.UserManagerService sInstance;
    private final java.io.File mBaseUserPath;
    private final android.content.Context mContext;
    private boolean mGuestEnabled;
    private final android.os.Handler mHandler;
    private final java.lang.Object mInstallLock;
    private int mNextSerialNumber;
    private final java.lang.Object mPackagesLock;
    private final com.android.server.pm.PackageManagerService mPm;
    private final android.util.SparseBooleanArray mRemovingUserIds;
    private final android.util.SparseArray mRestrictionsPinStates;
    private int[] mUserIds;
    private final java.io.File mUserListFile;
    private com.android.internal.content.PackageMonitor mUserPackageMonitor;
    private final android.util.SparseArray mUserRestrictions;
    private int mUserVersion;
    private final android.util.SparseArray mUsers;
    private final java.io.File mUsersDir;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        int[] $r6;

        <com.android.server.pm.UserManagerService: java.lang.String XML_SUFFIX> = ".xml";

        <com.android.server.pm.UserManagerService: int USER_VERSION> = 4;

        <com.android.server.pm.UserManagerService: java.lang.String USER_PHOTO_FILENAME> = "photo.png";

        <com.android.server.pm.UserManagerService: java.lang.String USER_LIST_FILENAME> = "userlist.xml";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_VALUE> = "value";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_USERS> = "users";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_USER> = "user";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_RESTRICTIONS> = "restrictions";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_NAME> = "name";

        <com.android.server.pm.UserManagerService: java.lang.String TAG_ENTRY> = "entry";

        <com.android.server.pm.UserManagerService: java.lang.String RESTRICTIONS_FILE_PREFIX> = "res_";

        <com.android.server.pm.UserManagerService: int MIN_USER_ID> = 10;

        <com.android.server.pm.UserManagerService: java.lang.String LOG_TAG> = "UserManagerService";

        <com.android.server.pm.UserManagerService: long EPOCH_PLUS_30_YEARS> = 946080000000L;

        <com.android.server.pm.UserManagerService: boolean DBG> = 0;

        <com.android.server.pm.UserManagerService: int BACKOFF_INC_INTERVAL> = 5;

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_VALUE_TYPE> = "type";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_USER_VERSION> = "version";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_STRING_ARRAY> = "sa";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_STRING> = "s";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_TYPE_BOOLEAN> = "b";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_SERIAL_NO> = "serialNumber";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_SALT> = "salt";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PIN_HASH> = "pinHash";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_PARTIAL> = "partial";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_NEXT_SERIAL_NO> = "nextSerialNumber";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_MULTIPLE> = "m";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_LAST_RETRY_MS> = "lastAttemptMs";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_LAST_LOGGED_IN_TIME> = "lastLoggedIn";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_KEY> = "key";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_ID> = "id";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_ICON_PATH> = "icon";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_FLAGS> = "flags";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_FAILED_ATTEMPTS> = "failedAttempts";

        <com.android.server.pm.UserManagerService: java.lang.String ATTR_CREATION_TIME> = "created";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("system");

        $r2 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("users");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.server.pm.UserManagerService: java.lang.String USER_INFO_DIR> = $r5;

        $r6 = newarray (int)[5];

        $r6[0] = 0;

        $r6[1] = 30000;

        $r6[2] = 60000;

        $r6[3] = 300000;

        $r6[4] = 1800000;

        <com.android.server.pm.UserManagerService: int[] BACKOFF_TIMES> = $r6;

        return;
    }

    void <init>(android.content.Context, com.android.server.pm.PackageManagerService, java.lang.Object, java.lang.Object)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.Context r1;
        com.android.server.pm.PackageManagerService r2;
        java.lang.Object r3, r4;
        java.io.File $r5, $r6, $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.pm.PackageManagerService;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r6 = new java.io.File;

        $r7 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "user");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,java.lang.Object,java.lang.Object,java.io.File,java.io.File)>(r1, r2, r3, r4, $r5, $r6);

        return;
    }

    private void <init>(android.content.Context, com.android.server.pm.PackageManagerService, java.lang.Object, java.lang.Object, java.io.File, java.io.File)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.Context r1;
        com.android.server.pm.PackageManagerService r2;
        java.lang.Object r3, r4, r7, r9, $r31, $r40;
        java.io.File r5, r6, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.Throwable r8, r10, $r42, $r43;
        java.util.ArrayList r11, $r29;
        int i0, i1, $i3, $i4, $i5;
        android.content.pm.UserInfo r12, r13;
        android.util.SparseArray $r14, $r15, $r17, $r30, $r41;
        android.util.SparseBooleanArray $r16;
        android.os.Handler $r18;
        com.android.server.pm.UserManagerService$5 $r19;
        java.lang.String $r20, $r28, $r36, $r39;
        java.lang.StringBuilder $r32, $r33, $r34, $r35, $r37, $r38;
        boolean $z3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.pm.PackageManagerService;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.io.File;

        r6 := @parameter5: java.io.File;

        specialinvoke r0.<android.os.IUserManager$Stub: void <init>()>();

        $r15 = new android.util.SparseArray;

        specialinvoke $r15.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers> = $r15;

        $r14 = new android.util.SparseArray;

        specialinvoke $r14.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions> = $r14;

        $r17 = new android.util.SparseArray;

        specialinvoke $r17.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates> = $r17;

        $r16 = new android.util.SparseBooleanArray;

        specialinvoke $r16.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds> = $r16;

        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = 0;

        $r19 = new com.android.server.pm.UserManagerService$5;

        specialinvoke $r19.<com.android.server.pm.UserManagerService$5: void <init>(com.android.server.pm.UserManagerService)>(r0);

        r0.<com.android.server.pm.UserManagerService: com.android.internal.content.PackageMonitor mUserPackageMonitor> = $r19;

        r0.<com.android.server.pm.UserManagerService: android.content.Context mContext> = r1;

        r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm> = r2;

        r0.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock> = r3;

        r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock> = r4;

        $r18 = new android.os.Handler;

        specialinvoke $r18.<android.os.Handler: void <init>()>();

        r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler> = $r18;

        r7 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        entermonitor r7;

     label01:
        r9 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r9;

     label02:
        $r21 = new java.io.File;

        $r20 = <com.android.server.pm.UserManagerService: java.lang.String USER_INFO_DIR>;

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>(r5, $r20);

        r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir> = $r21;

        $r22 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        virtualinvoke $r22.<java.io.File: boolean mkdirs()>();

        $r24 = new java.io.File;

        $r25 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>($r25, "0");

        virtualinvoke $r24.<java.io.File: boolean mkdirs()>();

        r0.<com.android.server.pm.UserManagerService: java.io.File mBaseUserPath> = r6;

        $r23 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r28 = virtualinvoke $r23.<java.io.File: java.lang.String toString()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r28, 509, -1, -1);

        $r26 = new java.io.File;

        $r27 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        specialinvoke $r26.<java.io.File: void <init>(java.io.File,java.lang.String)>($r27, "userlist.xml");

        r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile> = $r26;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readUserListLocked()>();

        $r29 = new java.util.ArrayList;

        specialinvoke $r29.<java.util.ArrayList: void <init>()>();

        r11 = $r29;

     label03:
        i0 = 0;

     label04:
        $r30 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r30.<android.util.SparseArray: int size()>();

        if i0 >= $i3 goto label20;

        $r41 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r40 = virtualinvoke $r41.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r13 = (android.content.pm.UserInfo) $r40;

        $z3 = r13.<android.content.pm.UserInfo: boolean partial>;

        if $z3 == 0 goto label19;

     label05:
        if i0 == 0 goto label19;

     label06:
        virtualinvoke r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

     label07:
        goto label19;

     label08:
        $i4 = virtualinvoke r11.<java.util.ArrayList: int size()>();

        if i1 >= $i4 goto label10;

        $r31 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r12 = (android.content.pm.UserInfo) $r31;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing partially created user #");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (name=");

        $r39 = r12.<android.content.pm.UserInfo: java.lang.String name>;

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r36);

        $i5 = r12.<android.content.pm.UserInfo: int id>;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeUserStateLocked(int)>($i5);

     label09:
        i1 = i1 + 1;

        goto label08;

     label10:
        <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService sInstance> = r0;

        exitmonitor r9;

     label11:
        exitmonitor r7;

     label12:
        return;

     label13:
        $r42 := @caughtexception;

        r10 = $r42;

     label14:
        exitmonitor r9;

     label15:
        throw r10;

     label16:
        $r43 := @caughtexception;

        r8 = $r43;

     label17:
        exitmonitor r7;

     label18:
        throw r8;

     label19:
        i0 = i0 + 1;

        goto label04;

     label20:
        i1 = 0;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    void <init>(java.io.File, java.io.File)
    {
        com.android.server.pm.UserManagerService r0;
        java.io.File r1, r2;
        java.lang.Object $r3, $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,java.lang.Object,java.lang.Object,java.io.File,java.io.File)>(null, null, $r3, $r4, r1, r2);

        return;
    }

    static java.lang.Object access$000(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        return $r1;
    }

    static java.lang.Object access$100(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        return $r1;
    }

    static void access$200(com.android.server.pm.UserManagerService, int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeUserStateLocked(int)>(i0);

        return;
    }

    static android.util.SparseBooleanArray access$300(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        android.util.SparseBooleanArray $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        return $r1;
    }

    static com.android.server.pm.PackageManagerService access$400(com.android.server.pm.UserManagerService)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.PackageManagerService $r1;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        return $r1;
    }

    static boolean access$500(com.android.server.pm.UserManagerService, java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isPackageInstalled(java.lang.String,int)>(r1, i0);

        return $z0;
    }

    static void access$600(com.android.server.pm.UserManagerService, java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.server.pm.UserManagerService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void cleanAppRestrictionsForPackage(java.lang.String,int)>(r1, i0);

        return;
    }

    private static final void checkManageUsersPermission(java.lang.String)
    {
        java.lang.String r0, $r5;
        int i0, $i1;
        java.lang.SecurityException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 == 1000 goto label1;

        if i0 == 0 goto label1;

        $i1 = staticinvoke <android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>("android.permission.MANAGE_USERS", i0, -1, 1);

        if $i1 == 0 goto label1;

        $r1 = new java.lang.SecurityException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You need MANAGE_USERS permission to: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return;
    }

    private void cleanAppRestrictions(int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r9;
        java.io.File r3, r6, $r7;
        java.lang.String[] r4;
        java.lang.String r5, $r8;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        r3 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        r4 = virtualinvoke r3.<java.io.File: java.lang.String[] list()>();

     label02:
        if r4 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        i1 = lengthof r4;

     label06:
        i2 = 0;

     label07:
        if i2 >= i1 goto label17;

     label08:
        r5 = r4[i2];

        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("res_");

        if $z1 == 0 goto label19;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, r5);

        r6 = $r7;

        $z2 = virtualinvoke r6.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label19;

     label09:
        if z0 == 0 goto label12;

     label10:
        virtualinvoke r6.<java.io.File: boolean delete()>();

     label11:
        goto label19;

     label12:
        $r8 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String restrictionsFileNameToPackage(java.lang.String)>(r5);

        $z3 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isPackageInstalled(java.lang.String,int)>($r8, i0);

        if $z3 != 0 goto label19;

        virtualinvoke r6.<java.io.File: boolean delete()>();

     label13:
        goto label19;

     label14:
        $r9 := @caughtexception;

        r2 = $r9;

     label15:
        exitmonitor r1;

     label16:
        throw r2;

     label17:
        exitmonitor r1;

     label18:
        return;

     label19:
        i2 = i2 + 1;

        goto label07;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label17 to label18 with label14;
    }

    private void cleanAppRestrictionsForPackage(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r7;
        int i0;
        java.lang.Object r2;
        java.io.File r3, $r5, $r6;
        java.lang.Throwable r4, $r8;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r2;

     label1:
        $r5 = new java.io.File;

        $r6 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r7 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(r1);

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r7);

        r3 = $r5;

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        virtualinvoke r3.<java.io.File: boolean delete()>();

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

     label5:
        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void fallbackToSingleUserLocked()
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r1, $r3;
        android.os.Bundle r2, $r8;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        java.lang.String $r6;
        android.util.SparseArray $r7, $r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r3 = new android.content.pm.UserInfo;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int)>(17040772);

        specialinvoke $r3.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>(0, $r6, null, 19);

        r1 = $r3;

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r7.<android.util.SparseArray: void put(int,java.lang.Object)>(0, r1);

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = 10;

        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = 4;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r2 = $r8;

        $r9 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        virtualinvoke $r9.<android.util.SparseArray: void append(int,java.lang.Object)>(0, r2);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r1);

        return;
    }

    public static com.android.server.pm.UserManagerService getInstance()
    {
        java.lang.Throwable r0, $r2;
        com.android.server.pm.UserManagerService r1;

        entermonitor class "com/android/server/pm/UserManagerService";

     label1:
        r1 = <com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService sInstance>;

        exitmonitor class "com/android/server/pm/UserManagerService";

     label2:
        return r1;

     label3:
        $r2 := @caughtexception;

        r0 = $r2;

     label4:
        exitmonitor class "com/android/server/pm/UserManagerService";

     label5:
        throw r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private int getNextAvailableIdLocked()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        int i0, $i1;
        java.lang.Throwable r2, $r5;
        android.util.SparseArray $r3;
        android.util.SparseBooleanArray $r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

        i0 = 10;

     label1:
        if i0 >= 2147483647 goto label3;

     label2:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r3.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i1 >= 0 goto label8;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z0 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z0 != 0 goto label8;

     label3:
        exitmonitor r1;

     label4:
        return i0;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        i0 = i0 + 1;

        goto label1;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private int getRemainingTimeForPinAttempt(com.android.server.pm.UserManagerService$RestrictionsPinState)
    {
        com.android.server.pm.UserManagerService r0;
        com.android.server.pm.UserManagerService$RestrictionsPinState r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i14;
        int[] $r2, $r3;
        long $l8, $l9, $l10, $l11, $l12, $l13;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: com.android.server.pm.UserManagerService$RestrictionsPinState;

        $i2 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        $i5 = $i2 / 5;

        $r2 = <com.android.server.pm.UserManagerService: int[] BACKOFF_TIMES>;

        $i3 = lengthof $r2;

        $i4 = -1 + $i3;

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $i6 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        $i7 = $i6 % 5;

        if $i7 != 0 goto label2;

        $r3 = <com.android.server.pm.UserManagerService: int[] BACKOFF_TIMES>;

        i1 = $r3[i0];

     label1:
        $l9 = (long) i1;

        $l8 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: long lastAttemptTime>;

        $l10 = $l9 + $l8;

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l13 = $l10 - $l11;

        $l12 = staticinvoke <java.lang.Math: long max(long,long)>($l13, 0L);

        $i14 = (int) $l12;

        return $i14;

     label2:
        i1 = 0;

        goto label1;
    }

    private int getUidForPackage(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        long l0;
        java.lang.Throwable r2, $r8;
        int i1;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        android.content.pm.ApplicationInfo $r6;
        android.content.pm.PackageManager$NameNotFoundException $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 8192);

        i1 = $r6.<android.content.pm.ApplicationInfo: int uid>;

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return i1;

     label3:
        $r7 := @caughtexception;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return -1;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private android.content.pm.UserInfo getUserInfoLocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.content.pm.UserInfo r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        boolean $z0, $z1;
        android.util.SparseBooleanArray $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (android.content.pm.UserInfo) $r3;

        if r1 == null goto label1;

        $z0 = r1.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $z1 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        if $z1 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUserInfo: unknown user #");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r8);

        r1 = null;

     label1:
        return r1;
    }

    private boolean hasRestrictionsPinLocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$RestrictionsPinState r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        long $l1;
        byte $b2;
        java.lang.String $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r3;

        if r1 == null goto label1;

        $l1 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r4 = r1.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        if $r4 != null goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean isPackageInstalled(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        android.content.pm.ApplicationInfo r2;
        com.android.server.pm.PackageManagerService $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        r2 = virtualinvoke $r3.<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 8192, i0);

        if r2 == null goto label1;

        $i1 = r2.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = 8388608 & $i1;

        if $i2 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean isUserLimitReachedLocked()
    {
        com.android.server.pm.UserManagerService r0;
        android.util.SparseArray $r1;
        int $i0, $i1;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i0 = virtualinvoke $r1.<android.util.SparseArray: int size()>();

        $i1 = staticinvoke <android.os.UserManager: int getMaxSupportedUsers()>();

        if $i0 < $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.lang.String packageToRestrictionsFileName(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("res_");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private java.lang.String passwordToHash(java.lang.String, long)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r2, r3, r8, $r14, $r20, $r22, $r27;
        long l0;
        byte[] r5, r6, r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r15, $r18, $r19, $r21, $r24, $r25, $r26;
        java.security.MessageDigest $r16, $r17;
        java.security.NoSuchAlgorithmException $r23;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = null;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>();

     label3:
        r2 = "SHA-1";

     label4:
        $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        r6 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>(r5);

     label5:
        r2 = "MD5";

     label6:
        $r17 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        r7 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>(r5);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = staticinvoke <com.android.server.pm.UserManagerService: java.lang.String toHex(byte[])>(r6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = staticinvoke <com.android.server.pm.UserManagerService: java.lang.String toHex(byte[])>(r7);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r8 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        return r8;

     label8:
        $r23 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to encode string because of missing algorithm: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserManagerService", $r27);

        return r3;

        catch java.security.NoSuchAlgorithmException from label2 to label3 with label8;
        catch java.security.NoSuchAlgorithmException from label4 to label5 with label8;
        catch java.security.NoSuchAlgorithmException from label6 to label7 with label8;
    }

    private android.os.Bundle readApplicationRestrictionsLocked(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r14, r16, r17, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r37;
        int i0, i1, i2, i3, i4, $i5;
        android.os.Bundle r2, $r20;
        java.util.ArrayList r3, $r19;
        java.io.FileInputStream r4;
        android.util.AtomicFile r5, $r22;
        java.lang.Throwable r6, $r44;
        org.xmlpull.v1.XmlPullParser r12;
        java.lang.String[] r18;
        java.io.File $r21, $r24, $r39;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r35, $r36, $r38;
        java.io.IOException $r40, $r42, $r43, $r45, $r46, $r47;
        org.xmlpull.v1.XmlPullParserException $r41;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r20 = new android.os.Bundle;

        specialinvoke $r20.<android.os.Bundle: void <init>()>();

        r2 = $r20;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r3 = $r19;

        r4 = null;

     label01:
        $r22 = new android.util.AtomicFile;

        $r21 = new java.io.File;

        $r24 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r23 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(r1);

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>($r24, $r23);

        specialinvoke $r22.<android.util.AtomicFile: void <init>(java.io.File)>($r21);

        r5 = $r22;

        r4 = virtualinvoke r5.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r12 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r4, null);

     label02:
        i1 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: int next()>();

     label03:
        if i1 == 2 goto label04;

        if i1 != 1 goto label02;

     label04:
        if i1 == 2 goto label10;

     label05:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read restrictions file ");

        $r39 = virtualinvoke r5.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r37);

     label06:
        if r4 == null goto label08;

     label07:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label08:
        return r2;

     label09:
        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        r18 = newarray (java.lang.String)[$i5];

        virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r18);

        virtualinvoke r2.<android.os.Bundle: void putStringArray(java.lang.String,java.lang.String[])>(r14, r18);

     label10:
        i2 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: int next()>();

     label11:
        if i2 == 1 goto label32;

        if i2 != 2 goto label10;

     label12:
        $r25 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("entry");

        if $z0 == 0 goto label10;

        r14 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "key");

        r17 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        r16 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "m");

     label13:
        if r16 == null goto label20;

     label14:
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r16);

     label15:
        if i4 <= 0 goto label09;

     label16:
        i3 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: int next()>();

     label17:
        if i3 == 1 goto label09;

        if i3 != 2 goto label15;

     label18:
        $r34 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("value");

        if $z3 == 0 goto label15;

        $r33 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $r32 = virtualinvoke $r33.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

     label19:
        i4 = i4 + -1;

        goto label15;

     label20:
        $r27 = "b";

        $z1 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z1 == 0 goto label26;

        $r30 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $r28 = virtualinvoke $r30.<java.lang.String: java.lang.String trim()>();

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r28);

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r14, $z2);

     label21:
        goto label10;

     label22:
        $r47 := @caughtexception;

        if r4 == null goto label08;

     label23:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label24:
        return r2;

     label25:
        $r45 := @caughtexception;

        return r2;

     label26:
        $r26 = interfaceinvoke r12.<org.xmlpull.v1.XmlPullParser: java.lang.String nextText()>();

        $r29 = virtualinvoke $r26.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r14, $r29);

     label27:
        goto label10;

     label28:
        $r41 := @caughtexception;

        if r4 == null goto label08;

     label29:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label30:
        return r2;

     label31:
        $r43 := @caughtexception;

        return r2;

     label32:
        if r4 == null goto label08;

     label33:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label34:
        return r2;

     label35:
        $r46 := @caughtexception;

        return r2;

     label36:
        $r44 := @caughtexception;

        r6 = $r44;

        if r4 == null goto label38;

     label37:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label38:
        throw r6;

     label39:
        $r40 := @caughtexception;

        return r2;

     label40:
        $r42 := @caughtexception;

        goto label38;

        catch java.io.IOException from label01 to label02 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label28;
        catch java.lang.Throwable from label01 to label02 with label36;
        catch java.io.IOException from label02 to label03 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label28;
        catch java.lang.Throwable from label02 to label03 with label36;
        catch java.io.IOException from label05 to label06 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label28;
        catch java.lang.Throwable from label05 to label06 with label36;
        catch java.io.IOException from label07 to label08 with label39;
        catch java.io.IOException from label09 to label10 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label28;
        catch java.lang.Throwable from label09 to label10 with label36;
        catch java.io.IOException from label10 to label11 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label28;
        catch java.lang.Throwable from label10 to label11 with label36;
        catch java.io.IOException from label12 to label13 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label28;
        catch java.lang.Throwable from label12 to label13 with label36;
        catch java.io.IOException from label14 to label15 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label28;
        catch java.lang.Throwable from label14 to label15 with label36;
        catch java.io.IOException from label16 to label17 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label16 to label17 with label28;
        catch java.lang.Throwable from label16 to label17 with label36;
        catch java.io.IOException from label18 to label19 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label28;
        catch java.lang.Throwable from label18 to label19 with label36;
        catch java.io.IOException from label20 to label21 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label28;
        catch java.lang.Throwable from label20 to label21 with label36;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label26 to label27 with label22;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label28;
        catch java.lang.Throwable from label26 to label27 with label36;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.io.IOException from label37 to label38 with label40;
    }

    private void readBoolean(org.xmlpull.v1.XmlPullParser, android.os.Bundle, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.os.Bundle r2;
        java.lang.String r3, r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: java.lang.String;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r3);

        if r4 == null goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r4);

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>(r3, $z0);

     label1:
        return;
    }

    private int readIntAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        int i0, i1;
        java.lang.NumberFormatException $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 != null goto label1;

        return i0;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        return i1;

     label3:
        $r5 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private long readLongAttribute(org.xmlpull.v1.XmlPullParser, java.lang.String, long)
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r3;
        long l0, l1;
        java.lang.NumberFormatException $r5;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        if r3 != null goto label1;

        return l0;

     label1:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

     label2:
        return l1;

     label3:
        $r5 := @caughtexception;

        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void readUserListLocked()
    {
        com.android.server.pm.UserManagerService r0;
        java.io.FileInputStream r1;
        android.util.AtomicFile r2, $r17;
        java.lang.Throwable r3, $r25;
        org.xmlpull.v1.XmlPullParser r9;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.content.pm.UserInfo r12;
        java.lang.String r13, r14, $r18, $r19, $r20;
        boolean $z0, $z1, $z2, $z3;
        java.io.File $r15, $r16;
        android.util.SparseArray $r21;
        java.io.IOException $r22, $r23, $r26, $r27, $r28, $r29;
        org.xmlpull.v1.XmlPullParserException $r24;

        r0 := @this: com.android.server.pm.UserManagerService;

        r0.<com.android.server.pm.UserManagerService: boolean mGuestEnabled> = 0;

        $r15 = r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        $z0 = virtualinvoke $r15.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label02;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label01:
        return;

     label02:
        r1 = null;

        $r17 = new android.util.AtomicFile;

        $r16 = r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        specialinvoke $r17.<android.util.AtomicFile: void <init>(java.io.File)>($r16);

        r2 = $r17;

     label03:
        r1 = virtualinvoke r2.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r9 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

     label04:
        i0 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label05:
        if i0 == 2 goto label06;

        if i0 != 1 goto label04;

     label06:
        if i0 == 2 goto label12;

     label07:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Unable to read user list");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label08:
        if r1 == null goto label01;

     label09:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label10:
        return;

     label11:
        $r23 := @caughtexception;

        return;

     label12:
        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = -1;

        $r18 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("users");

        if $z1 == 0 goto label18;

        r14 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "nextSerialNumber");

     label13:
        if r14 == null goto label15;

     label14:
        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r14);

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i10;

     label15:
        r13 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

     label16:
        if r13 == null goto label18;

     label17:
        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r13);

        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = $i8;

     label18:
        i1 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label19:
        if i1 == 1 goto label32;

        if i1 != 2 goto label18;

     label20:
        $r19 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("user");

        if $z2 == 0 goto label18;

        $r20 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r20);

        r12 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo readUserLocked(int)>($i2);

     label21:
        if r12 == null goto label18;

     label22:
        $r21 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = r12.<android.content.pm.UserInfo: int id>;

        virtualinvoke $r21.<android.util.SparseArray: void put(int,java.lang.Object)>($i3, r12);

        $z3 = virtualinvoke r12.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z3 == 0 goto label23;

        r0.<com.android.server.pm.UserManagerService: boolean mGuestEnabled> = 1;

     label23:
        $i6 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        if $i6 < 0 goto label24;

        $i9 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $i5 = r12.<android.content.pm.UserInfo: int id>;

        if $i9 > $i5 goto label18;

     label24:
        $i7 = r12.<android.content.pm.UserInfo: int id>;

        $i4 = 1 + $i7;

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i4;

     label25:
        goto label18;

     label26:
        $r29 := @caughtexception;

     label27:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label28:
        if r1 == null goto label01;

     label29:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label30:
        return;

     label31:
        $r27 := @caughtexception;

        return;

     label32:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void upgradeIfNecessaryLocked()>();

     label33:
        if r1 == null goto label01;

     label34:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label35:
        return;

     label36:
        $r22 := @caughtexception;

        return;

     label37:
        $r24 := @caughtexception;

     label38:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void fallbackToSingleUserLocked()>();

     label39:
        if r1 == null goto label01;

     label40:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label41:
        return;

     label42:
        $r26 := @caughtexception;

        return;

     label43:
        $r25 := @caughtexception;

        r3 = $r25;

        if r1 == null goto label45;

     label44:
        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label45:
        throw r3;

     label46:
        $r28 := @caughtexception;

        goto label45;

        catch java.io.IOException from label03 to label04 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label37;
        catch java.lang.Throwable from label03 to label04 with label43;
        catch java.io.IOException from label04 to label05 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label37;
        catch java.lang.Throwable from label04 to label05 with label43;
        catch java.io.IOException from label07 to label08 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label37;
        catch java.lang.Throwable from label07 to label08 with label43;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label12 to label13 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label37;
        catch java.lang.Throwable from label12 to label13 with label43;
        catch java.io.IOException from label14 to label15 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label37;
        catch java.lang.Throwable from label14 to label15 with label43;
        catch java.io.IOException from label15 to label16 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label37;
        catch java.lang.Throwable from label15 to label16 with label43;
        catch java.io.IOException from label17 to label18 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label37;
        catch java.lang.Throwable from label17 to label18 with label43;
        catch java.io.IOException from label18 to label19 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label18 to label19 with label37;
        catch java.lang.Throwable from label18 to label19 with label43;
        catch java.io.IOException from label20 to label21 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label37;
        catch java.lang.Throwable from label20 to label21 with label43;
        catch java.io.IOException from label22 to label23 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label37;
        catch java.lang.Throwable from label22 to label23 with label43;
        catch java.io.IOException from label23 to label24 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label37;
        catch java.lang.Throwable from label23 to label24 with label43;
        catch java.io.IOException from label24 to label25 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label37;
        catch java.lang.Throwable from label24 to label25 with label43;
        catch java.lang.Throwable from label27 to label28 with label43;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.io.IOException from label32 to label33 with label26;
        catch org.xmlpull.v1.XmlPullParserException from label32 to label33 with label37;
        catch java.lang.Throwable from label32 to label33 with label43;
        catch java.io.IOException from label34 to label35 with label36;
        catch java.lang.Throwable from label38 to label39 with label43;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.io.IOException from label44 to label45 with label46;
    }

    private android.content.pm.UserInfo readUserLocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i6, i7, i8, i9, i11, i12, $i14, $i15, $i18;
        long l2, l3, l4, l5, l10;
        android.os.Bundle r1, $r23;
        java.io.FileInputStream r2;
        android.util.AtomicFile r3, $r20;
        java.lang.Throwable r4, $r46;
        org.xmlpull.v1.XmlPullParser r10;
        android.content.pm.UserInfo r11, $r31;
        java.lang.String r13, r14, r15, r17, r19, $r25, $r28, $r36, $r37, $r38, $r39, $r40, $r43;
        boolean z0, z1, z2, z3, $z4, $z5;
        com.android.server.pm.UserManagerService$RestrictionsPinState r16, $r33;
        java.io.File $r21, $r26;
        java.lang.StringBuilder $r24, $r27, $r29, $r41, $r42, $r44;
        byte $b13;
        android.util.SparseArray $r30, $r32, $r35;
        java.lang.Object $r34;
        org.xmlpull.v1.XmlPullParserException $r45;
        java.io.IOException $r47, $r48, $r49, $r50, $r51, $r52, $r53;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        i1 = i0;

        l2 = 0L;

        l3 = 0L;

        l4 = 0L;

        l5 = 0L;

        $r23 = new android.os.Bundle;

        specialinvoke $r23.<android.os.Bundle: void <init>()>();

        r1 = $r23;

        r2 = null;

     label01:
        $r20 = new android.util.AtomicFile;

        $r21 = new java.io.File;

        $r26 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>($r26, $r28);

        specialinvoke $r20.<android.util.AtomicFile: void <init>(java.io.File)>($r21);

        r3 = $r20;

        r2 = virtualinvoke r3.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r10 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r2, null);

     label02:
        i6 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int next()>();

     label03:
        if i6 == 2 goto label04;

        if i6 != 1 goto label02;

     label04:
        if i6 == 2 goto label09;

     label05:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read user ");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r43);

     label06:
        r11 = null;

        if r2 == null goto label08;

     label07:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label08:
        return r11;

     label09:
        i7 = 0;

        i8 = 0;

        r13 = null;

        r14 = null;

        z0 = 0;

        r15 = null;

        if i6 != 2 goto label31;

     label10:
        $r36 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        z2 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>("user");

     label11:
        i7 = 0;

        i8 = 0;

        r13 = null;

        r14 = null;

        z0 = 0;

        r15 = null;

        if z2 == 0 goto label31;

     label12:
        $i14 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r10, "id", -1);

        if $i14 == i0 goto label17;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "User id does not match the file name");

     label13:
        r11 = null;

        if r2 == null goto label08;

     label14:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label15:
        return null;

     label16:
        $r52 := @caughtexception;

        return null;

     label17:
        i1 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r10, "serialNumber", i0);

        i8 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r10, "flags", 0);

        r13 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "icon");

        l2 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r10, "created", 0L);

        l3 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r10, "lastLoggedIn", 0L);

        l4 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r10, "salt", 0L);

        r15 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "pinHash");

        i7 = specialinvoke r0.<com.android.server.pm.UserManagerService: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r10, "failedAttempts", 0);

        l5 = specialinvoke r0.<com.android.server.pm.UserManagerService: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>(r10, "lastAttemptMs", 0L);

        $r37 = "true";

        $r38 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "partial");

        z3 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>($r38);

     label18:
        z0 = 0;

        if z3 == 0 goto label19;

        z0 = 1;

     label19:
        i11 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label20:
        i12 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int next()>();

     label21:
        if i12 == 1 goto label31;

        if i12 != 3 goto label23;

     label22:
        $i18 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i18 <= i11 goto label31;

     label23:
        if i12 == 3 goto label20;

        if i12 == 4 goto label20;

     label24:
        r19 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r40 = "name";

        $z5 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        if $z5 == 0 goto label26;

        $i15 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: int next()>();

        if $i15 != 4 goto label20;

        r14 = interfaceinvoke r10.<org.xmlpull.v1.XmlPullParser: java.lang.String getText()>();

     label25:
        goto label20;

     label26:
        $r39 = "restrictions";

        $z4 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>(r19);

        if $z4 == 0 goto label20;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_config_wifi");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_modify_accounts");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_install_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_uninstall_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_share_location");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_install_unknown_sources");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_config_bluetooth");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_usb_file_transfer");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_config_credentials");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void readBoolean(org.xmlpull.v1.XmlPullParser,android.os.Bundle,java.lang.String)>(r10, r1, "no_remove_user");

     label27:
        goto label20;

     label28:
        $r47 := @caughtexception;

        if r2 == null goto label30;

     label29:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label30:
        return null;

     label31:
        $r31 = new android.content.pm.UserInfo;

        specialinvoke $r31.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>(i0, r14, r13, i8);

        r11 = $r31;

     label32:
        i9 = i1;

     label33:
        r11.<android.content.pm.UserInfo: int serialNumber> = i9;

        r11.<android.content.pm.UserInfo: long creationTime> = l2;

        r11.<android.content.pm.UserInfo: long lastLoggedInTime> = l3;

     label34:
        z1 = z0;

     label35:
        r11.<android.content.pm.UserInfo: boolean partial> = z1;

        $r30 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        virtualinvoke $r30.<android.util.SparseArray: void append(int,java.lang.Object)>(i0, r1);

     label36:
        $b13 = l4 cmp 0L;

        if $b13 == 0 goto label44;

     label37:
        $r35 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $r34 = virtualinvoke $r35.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r16 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r34;

     label38:
        if r16 != null goto label40;

     label39:
        $r33 = new com.android.server.pm.UserManagerService$RestrictionsPinState;

        specialinvoke $r33.<com.android.server.pm.UserManagerService$RestrictionsPinState: void <init>(com.android.server.pm.UserManagerService)>(r0);

        r16 = $r33;

        $r32 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        virtualinvoke $r32.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r16);

     label40:
        l10 = l4;

     label41:
        r16.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt> = l10;

     label42:
        r17 = r15;

     label43:
        r16.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash> = r17;

        r16.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts> = i7;

        r16.<com.android.server.pm.UserManagerService$RestrictionsPinState: long lastAttemptTime> = l5;

     label44:
        if r2 == null goto label08;

     label45:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label46:
        return r11;

     label47:
        $r50 := @caughtexception;

        return r11;

     label48:
        $r45 := @caughtexception;

        if r2 == null goto label30;

     label49:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label50:
        goto label30;

     label51:
        $r48 := @caughtexception;

        goto label30;

     label52:
        $r46 := @caughtexception;

        r4 = $r46;

        if r2 == null goto label54;

     label53:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label54:
        throw r4;

     label55:
        $r49 := @caughtexception;

        return null;

     label56:
        $r53 := @caughtexception;

        goto label30;

     label57:
        $r51 := @caughtexception;

        goto label54;

        catch java.io.IOException from label01 to label02 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label48;
        catch java.lang.Throwable from label01 to label02 with label52;
        catch java.io.IOException from label02 to label03 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label02 to label03 with label48;
        catch java.lang.Throwable from label02 to label03 with label52;
        catch java.io.IOException from label05 to label06 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label48;
        catch java.lang.Throwable from label05 to label06 with label52;
        catch java.io.IOException from label07 to label08 with label55;
        catch java.io.IOException from label10 to label11 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label10 to label11 with label48;
        catch java.lang.Throwable from label10 to label11 with label52;
        catch java.io.IOException from label12 to label13 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label12 to label13 with label48;
        catch java.lang.Throwable from label12 to label13 with label52;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.io.IOException from label17 to label18 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label48;
        catch java.lang.Throwable from label17 to label18 with label52;
        catch java.io.IOException from label19 to label20 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label48;
        catch java.lang.Throwable from label19 to label20 with label52;
        catch java.io.IOException from label20 to label21 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label20 to label21 with label48;
        catch java.lang.Throwable from label20 to label21 with label52;
        catch java.io.IOException from label22 to label23 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label48;
        catch java.lang.Throwable from label22 to label23 with label52;
        catch java.io.IOException from label24 to label25 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label48;
        catch java.lang.Throwable from label24 to label25 with label52;
        catch java.io.IOException from label26 to label27 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label48;
        catch java.lang.Throwable from label26 to label27 with label52;
        catch java.io.IOException from label29 to label30 with label56;
        catch java.io.IOException from label31 to label32 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label48;
        catch java.lang.Throwable from label31 to label32 with label52;
        catch java.io.IOException from label33 to label34 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label33 to label34 with label48;
        catch java.lang.Throwable from label33 to label34 with label52;
        catch java.io.IOException from label35 to label36 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label35 to label36 with label48;
        catch java.lang.Throwable from label35 to label36 with label52;
        catch java.io.IOException from label37 to label38 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label37 to label38 with label48;
        catch java.lang.Throwable from label37 to label38 with label52;
        catch java.io.IOException from label39 to label40 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label40 with label48;
        catch java.lang.Throwable from label39 to label40 with label52;
        catch java.io.IOException from label41 to label42 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label41 to label42 with label48;
        catch java.lang.Throwable from label41 to label42 with label52;
        catch java.io.IOException from label43 to label44 with label28;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label48;
        catch java.lang.Throwable from label43 to label44 with label52;
        catch java.io.IOException from label45 to label46 with label47;
        catch java.io.IOException from label49 to label50 with label51;
        catch java.io.IOException from label53 to label54 with label57;
    }

    private void removeDirectoryRecursive(java.io.File)
    {
        com.android.server.pm.UserManagerService r0;
        java.io.File r1, $r3;
        java.lang.String[] r2;
        int i0, i1;
        boolean $z0;
        java.lang.String $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        r2 = virtualinvoke r1.<java.io.File: java.lang.String[] list()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = new java.io.File;

        $r4 = r2[i1];

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r4);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeDirectoryRecursive(java.io.File)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        return;
    }

    private void removeRestrictionsForUser(int, boolean)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        boolean z0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        android.os.Bundle $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label1:
        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void setUserRestrictions(android.os.Bundle,int)>($r3, i0);

        virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean setRestrictionsChallenge(java.lang.String)>(null);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void cleanAppRestrictions(int,boolean)>(i0, 1);

        exitmonitor r1;

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void unblockAllAppsForUser(int)>(i0);

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void removeUserStateLocked(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.PackageManagerService $r1;
        android.util.SparseArray $r2, $r5;
        com.android.server.pm.UserManagerService$3 $r3;
        android.os.Handler $r4;
        android.util.AtomicFile $r6;
        java.io.File $r7, $r9, $r13;
        java.lang.StringBuilder $r8, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        virtualinvoke $r1.<com.android.server.pm.PackageManagerService: void cleanUpUserLILPw(int)>(i0);

        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r2.<android.util.SparseArray: void remove(int)>(i0);

        $r4 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        $r3 = new com.android.server.pm.UserManagerService$3;

        specialinvoke $r3.<com.android.server.pm.UserManagerService$3: void <init>(com.android.server.pm.UserManagerService,int)>(r0, i0);

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 60000L);

        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        virtualinvoke $r5.<android.util.SparseArray: void remove(int)>(i0);

        $r6 = new android.util.AtomicFile;

        $r7 = new java.io.File;

        $r9 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r12);

        specialinvoke $r6.<android.util.AtomicFile: void <init>(java.io.File)>($r7);

        virtualinvoke $r6.<android.util.AtomicFile: void delete()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        $r13 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeDirectoryRecursive(java.io.File)>($r13);

        return;
    }

    private java.lang.String restrictionsFileNameToPackage(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $r2 = "res_";

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = ".xml";

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i3 = $i1 - $i2;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        return $r4;
    }

    private void sendUserInfoChangedBroadcast(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_INFO_CHANGED");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(1073741824);

        $r6 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r5);

        return;
    }

    private static java.lang.String toHex(byte[])
    {
        byte[] r0;
        java.lang.String r1, r2, $r5, $r9;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r10;
        byte $b2, $b3, $b4, $b6, $b7;
        char $c5, $c8;

        r0 := @parameter0: byte[];

        r1 = "";

        i0 = 0;

     label1:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = "0123456789ABCDEF";

        $b2 = r0[i0];

        $b3 = $b2 >> 4;

        $b4 = 15 & $b3;

        $c5 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($b4);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = "0123456789ABCDEF";

        $b7 = r0[i0];

        $b6 = 15 & $b7;

        $c8 = virtualinvoke $r9.<java.lang.String: char charAt(int)>($b6);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    private void unblockAllAppsForUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        com.android.server.pm.UserManagerService$4 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.pm.UserManagerService: android.os.Handler mHandler>;

        $r1 = new com.android.server.pm.UserManagerService$4;

        specialinvoke $r1.<com.android.server.pm.UserManagerService$4: void <init>(com.android.server.pm.UserManagerService,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void updateUserIdsLocked()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        int[] r1;
        android.util.SparseArray $r2, $r3, $r4, $r7, $r8;
        java.lang.Object $r5, $r10;
        android.content.pm.UserInfo $r6, $r9;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 = 0;

        i1 = 0;

     label1:
        $r2 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i5 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        if i1 >= $i5 goto label3;

        $r8 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r10 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r9 = (android.content.pm.UserInfo) $r10;

        $z1 = $r9.<android.content.pm.UserInfo: boolean partial>;

        if $z1 != 0 goto label2;

        i0 = i0 + 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r1 = newarray (int)[i0];

        i2 = 0;

        i3 = 0;

     label4:
        $r3 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i6 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        if i3 >= $i6 goto label6;

        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object valueAt(int)>(i3);

        $r6 = (android.content.pm.UserInfo) $r5;

        $z0 = $r6.<android.content.pm.UserInfo: boolean partial>;

        if $z0 != 0 goto label5;

        i4 = i2 + 1;

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i7 = virtualinvoke $r7.<android.util.SparseArray: int keyAt(int)>(i3);

        r1[i2] = $i7;

        i2 = i4;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        r0.<com.android.server.pm.UserManagerService: int[] mUserIds> = r1;

        return;
    }

    private void upgradeIfNecessaryLocked()
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i1, $i3, $i4, $i5, $i6;
        android.content.pm.UserInfo r1, r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8, $r13, $r14, $r16;
        android.util.SparseArray $r9, $r12;
        java.lang.Object $r10, $r11;
        android.content.Context $r15;
        boolean $z0;
        android.content.res.Resources $r17;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        if i0 >= 1 goto label2;

        $r12 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r11 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(0);

        r2 = (android.content.pm.UserInfo) $r11;

        $r13 = "Primary";

        $r14 = r2.<android.content.pm.UserInfo: java.lang.String name>;

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label1;

        $r15 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r17 = virtualinvoke $r15.<android.content.Context: android.content.res.Resources getResources()>();

        $r16 = virtualinvoke $r17.<android.content.res.Resources: java.lang.String getString(int)>(17040772);

        r2.<android.content.pm.UserInfo: java.lang.String name> = $r16;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r2);

     label1:
        i0 = 1;

     label2:
        if i0 >= 2 goto label4;

        $r9 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r10 = virtualinvoke $r9.<android.util.SparseArray: java.lang.Object get(int)>(0);

        r1 = (android.content.pm.UserInfo) $r10;

        $i4 = r1.<android.content.pm.UserInfo: int flags>;

        $i3 = 16 & $i4;

        if $i3 != 0 goto label3;

        $i6 = r1.<android.content.pm.UserInfo: int flags>;

        $i5 = 16 | $i6;

        r1.<android.content.pm.UserInfo: int flags> = $i5;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r1);

     label3:
        i0 = 2;

     label4:
        if i0 >= 4 goto label5;

        i0 = 4;

     label5:
        if i0 >= 4 goto label6;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User version ");

        $i1 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" didn\'t upgrade as expected to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r8);

        return;

     label6:
        r0.<com.android.server.pm.UserManagerService: int mUserVersion> = i0;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        return;
    }

    private void writeApplicationRestrictionsLocked(java.lang.String, android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, r9, r11, r14, $r17, $r32, $r39;
        android.os.Bundle r2;
        int i0, i1, i2, $i3;
        java.io.FileOutputStream r3;
        android.util.AtomicFile r4, $r13;
        java.io.BufferedOutputStream r6, $r19;
        com.android.internal.util.FastXmlSerializer r7, $r20;
        java.util.Iterator r8;
        java.lang.Object r10, $r25;
        java.lang.String[] r12, $r29;
        java.io.File $r15, $r16;
        java.lang.Boolean $r18;
        boolean $z0, $z1, $z2;
        java.util.Set $r22;
        java.lang.Exception $r37;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        i0 := @parameter2: int;

        r3 = null;

        $r13 = new android.util.AtomicFile;

        $r16 = new java.io.File;

        $r15 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        $r17 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String packageToRestrictionsFileName(java.lang.String)>(r1);

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, $r17);

        specialinvoke $r13.<android.util.AtomicFile: void <init>(java.io.File)>($r16);

        r4 = $r13;

     label01:
        r3 = virtualinvoke r4.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r19 = new java.io.BufferedOutputStream;

        specialinvoke $r19.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r3);

        r6 = $r19;

        $r20 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r20.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r7 = $r20;

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r6, "utf-8");

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r18);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "restrictions");

        $r22 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r8 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r25;

        r10 = virtualinvoke r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r9);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "entry");

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "key", r9);

        $z1 = r10 instanceof java.lang.Boolean;

        if $z1 == 0 goto label06;

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "b");

        $r39 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r39);

     label03:
        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "entry");

     label04:
        goto label02;

     label05:
        $r37 := @caughtexception;

        virtualinvoke r4.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r3);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Error writing application restrictions list");

        return;

     label06:
        if r10 == null goto label08;

     label07:
        $z2 = r10 instanceof java.lang.String;

        if $z2 == 0 goto label13;

     label08:
        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "s");

     label09:
        if r10 == null goto label22;

     label10:
        r11 = (java.lang.String) r10;

     label11:
        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r11);

     label12:
        goto label03;

     label13:
        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "sa");

        $r29 = (java.lang.String[]) r10;

        r12 = (java.lang.String[]) $r29;

        $i3 = lengthof r12;

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "m", $r32);

        i2 = lengthof r12;

     label14:
        i1 = 0;

     label15:
        if i1 >= i2 goto label03;

     label16:
        r14 = r12[i1];

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "value");

     label17:
        if r14 == null goto label23;

     label18:
        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>(r14);

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "value");

     label19:
        i1 = i1 + 1;

        goto label15;

     label20:
        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "restrictions");

        interfaceinvoke r7.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r4.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r3);

     label21:
        return;

     label22:
        r11 = "";

        goto label11;

     label23:
        r14 = "";

        goto label18;

        catch java.lang.Exception from label01 to label02 with label05;
        catch java.lang.Exception from label02 to label03 with label05;
        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label07 to label08 with label05;
        catch java.lang.Exception from label08 to label09 with label05;
        catch java.lang.Exception from label10 to label11 with label05;
        catch java.lang.Exception from label11 to label12 with label05;
        catch java.lang.Exception from label13 to label14 with label05;
        catch java.lang.Exception from label16 to label17 with label05;
        catch java.lang.Exception from label18 to label19 with label05;
        catch java.lang.Exception from label20 to label21 with label05;
    }

    private void writeBitmapLocked(android.content.pm.UserInfo, android.graphics.Bitmap)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r1;
        android.graphics.Bitmap r2;
        java.io.File r3, r4, $r9, $r10, $r12;
        java.io.FileNotFoundException r5, $r16;
        android.graphics.Bitmap$CompressFormat r6;
        java.io.FileOutputStream r7, $r13;
        int $i0;
        java.lang.String $r11, $r14, $r15;
        boolean $z0, $z1;
        java.io.IOException $r17;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.pm.UserInfo;

        r2 := @parameter1: android.graphics.Bitmap;

     label1:
        $r9 = new java.io.File;

        $r10 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r11);

        r3 = $r9;

        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "photo.png");

        r4 = $r12;

        $z0 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        virtualinvoke r3.<java.io.File: boolean mkdir()>();

        $r15 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r15, 505, -1, -1);

     label2:
        r6 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        $r13 = new java.io.FileOutputStream;

        specialinvoke $r13.<java.io.FileOutputStream: void <init>(java.io.File)>(r4);

        r7 = $r13;

        $z1 = virtualinvoke r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>(r6, 100, r7);

        if $z1 == 0 goto label3;

        $r14 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>();

        r1.<android.content.pm.UserInfo: java.lang.String iconPath> = $r14;

     label3:
        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label4:
        return;

     label5:
        $r16 := @caughtexception;

        r5 = $r16;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("UserManagerService", "Error setting photo for user ", r5);

        return;

     label6:
        $r17 := @caughtexception;

        return;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label2 to label3 with label5;
        catch java.io.IOException from label3 to label4 with label6;
        catch java.io.FileNotFoundException from label3 to label4 with label5;
    }

    private void writeBoolean(org.xmlpull.v1.XmlSerializer, android.os.Bundle, java.lang.String) throws java.io.IOException
    {
        com.android.server.pm.UserManagerService r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.os.Bundle r2;
        java.lang.String r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean containsKey(java.lang.String)>(r3);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>(r3);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, r3, $r4);

     label1:
        return;
    }

    private void writeUserListLocked()
    {
        com.android.server.pm.UserManagerService r0;
        java.io.FileOutputStream r1;
        android.util.AtomicFile r2, $r7;
        java.io.BufferedOutputStream r4, $r10;
        com.android.internal.util.FastXmlSerializer r5, $r9;
        int i0, $i1, $i2, $i3, $i4;
        android.content.pm.UserInfo r6;
        java.io.File $r8;
        java.lang.Boolean $r11;
        java.lang.String $r14, $r15, $r24;
        android.util.SparseArray $r16, $r18;
        java.lang.Object $r19;
        java.lang.Exception $r23;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = null;

        $r7 = new android.util.AtomicFile;

        $r8 = r0.<com.android.server.pm.UserManagerService: java.io.File mUserListFile>;

        specialinvoke $r7.<android.util.AtomicFile: void <init>(java.io.File)>($r8);

        r2 = $r7;

     label1:
        r1 = virtualinvoke r2.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r10 = new java.io.BufferedOutputStream;

        specialinvoke $r10.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

        r4 = $r10;

        $r9 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r9.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r5 = $r9;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r4, "utf-8");

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r11);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "users");

        $i1 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "nextSerialNumber", $r14);

        $i2 = r0.<com.android.server.pm.UserManagerService: int mUserVersion>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r15);

     label2:
        i0 = 0;

     label3:
        $r16 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        if i0 >= $i3 goto label5;

        $r18 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r19 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r6 = (android.content.pm.UserInfo) $r19;

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "user");

        $i4 = r6.<android.content.pm.UserInfo: int id>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r24);

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "user");

     label4:
        i0 = i0 + 1;

        goto label3;

     label5:
        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "users");

        interfaceinvoke r5.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r2.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r1);

     label6:
        return;

     label7:
        $r23 := @caughtexception;

        virtualinvoke r2.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r1);

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", "Error writing user list");

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private void writeUserLocked(android.content.pm.UserInfo)
    {
        com.android.server.pm.UserManagerService r0;
        android.content.pm.UserInfo r1;
        java.io.FileOutputStream r2;
        android.util.AtomicFile r3, $r8;
        java.lang.Exception r4, $r58;
        java.io.BufferedOutputStream r5, $r17;
        com.android.internal.util.FastXmlSerializer r6, $r16;
        com.android.server.pm.UserManagerService$RestrictionsPinState r7;
        android.os.Bundle r9;
        java.lang.StringBuilder $r10, $r13, $r14, $r53, $r54, $r55, $r56, $r59;
        java.io.File $r11, $r12;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i10, $i12, $i14;
        java.lang.String $r15, $r20, $r23, $r24, $r26, $r30, $r32, $r38, $r41, $r44, $r47, $r48, $r50, $r52, $r60;
        java.lang.Boolean $r18;
        long $l4, $l5, $l8, $l11, $l13;
        android.util.SparseArray $r28, $r34;
        boolean $z0;
        java.lang.Object $r33, $r35;
        byte $b9;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.content.pm.UserInfo;

        r2 = null;

        $r8 = new android.util.AtomicFile;

        $r11 = new java.io.File;

        $r12 = r0.<com.android.server.pm.UserManagerService: java.io.File mUsersDir>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $i0 = r1.<android.content.pm.UserInfo: int id>;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, $r15);

        specialinvoke $r8.<android.util.AtomicFile: void <init>(java.io.File)>($r11);

        r3 = $r8;

     label01:
        r2 = virtualinvoke r3.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r17 = new java.io.BufferedOutputStream;

        specialinvoke $r17.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r2);

        r5 = $r17;

        $r16 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r16.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r6 = $r16;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r5, "utf-8");

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r18);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "user");

        $i1 = r1.<android.content.pm.UserInfo: int id>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r20);

        $i2 = r1.<android.content.pm.UserInfo: int serialNumber>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "serialNumber", $r23);

        $i3 = r1.<android.content.pm.UserInfo: int flags>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r24);

        $l4 = r1.<android.content.pm.UserInfo: long creationTime>;

        $r26 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "created", $r26);

        $l5 = r1.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $r30 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l5);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lastLoggedIn", $r30);

        $r28 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $i6 = r1.<android.content.pm.UserInfo: int id>;

        $r33 = virtualinvoke $r28.<android.util.SparseArray: java.lang.Object get(int)>($i6);

        r7 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r33;

     label02:
        if r7 == null goto label06;

     label03:
        $l8 = r7.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label04;

        $l13 = r7.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $r48 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l13);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "salt", $r48);

     label04:
        $r41 = r7.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        if $r41 == null goto label05;

        $r52 = r7.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pinHash", $r52);

     label05:
        $i10 = r7.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        if $i10 == 0 goto label06;

        $i12 = r7.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "failedAttempts", $r47);

        $l11 = r7.<com.android.server.pm.UserManagerService$RestrictionsPinState: long lastAttemptTime>;

        $r50 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l11);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lastAttemptMs", $r50);

     label06:
        $r32 = r1.<android.content.pm.UserInfo: java.lang.String iconPath>;

        if $r32 == null goto label07;

        $r44 = r1.<android.content.pm.UserInfo: java.lang.String iconPath>;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r44);

     label07:
        $z0 = r1.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label08;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "partial", "true");

     label08:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "name");

        $r38 = r1.<android.content.pm.UserInfo: java.lang.String name>;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>($r38);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "name");

        $r34 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $i7 = r1.<android.content.pm.UserInfo: int id>;

        $r35 = virtualinvoke $r34.<android.util.SparseArray: java.lang.Object get(int)>($i7);

        r9 = (android.os.Bundle) $r35;

     label09:
        if r9 == null goto label11;

     label10:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "restrictions");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_config_wifi");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_modify_accounts");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_install_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_uninstall_apps");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_share_location");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_install_unknown_sources");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_config_bluetooth");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_usb_file_transfer");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_config_credentials");

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBoolean(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>(r6, r9, "no_remove_user");

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "restrictions");

     label11:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "user");

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r3.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label12:
        return;

     label13:
        $r58 := @caughtexception;

        r4 = $r58;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing user info ");

        $i14 = r1.<android.content.pm.UserInfo: int id>;

        $r53 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r59 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UserManagerService", $r60);

        virtualinvoke r3.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r2);

        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label08 to label09 with label13;
        catch java.lang.Exception from label10 to label11 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public int checkRestrictionsChallenge(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r7, $r11, $r12, $r13, $r23;
        int i0, i1, i2, $i7, $i8;
        java.lang.Object r2, $r6, $r16, $r18;
        java.lang.Throwable r3, $r24;
        com.android.server.pm.UserManagerService$RestrictionsPinState r4;
        android.util.SparseArray $r5, $r14, $r15;
        long $l3, $l6, $l9;
        byte $b4;
        java.lang.StringBuilder $r8, $r9, $r10, $r20, $r21, $r22;
        boolean $z0;
        android.content.pm.UserInfo $r17, $r19;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can verify the restrictions pin");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r6;

     label02:
        if r4 == null goto label04;

     label03:
        $l3 = r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label04;

        $r7 = r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        if $r7 != null goto label06;

     label04:
        exitmonitor r2;

     label05:
        return -2;

     label06:
        if r1 != null goto label12;

     label07:
        i1 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getRemainingTimeForPinAttempt(com.android.server.pm.UserManagerService$RestrictionsPinState)>(r4);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remaining waittime peek=");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("UserManagerService", $r23);

        exitmonitor r2;

     label08:
        return i1;

     label09:
        $r24 := @caughtexception;

        r3 = $r24;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        i2 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getRemainingTimeForPinAttempt(com.android.server.pm.UserManagerService$RestrictionsPinState)>(r4);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remaining waittime=");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("UserManagerService", $r11);

     label13:
        if i2 <= 0 goto label16;

     label14:
        exitmonitor r2;

     label15:
        return i2;

     label16:
        $l6 = r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $r12 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String passwordToHash(java.lang.String,long)>(r1, $l6);

        $r13 = r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash>;

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label18;

        r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts> = 0;

        $r15 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r18 = virtualinvoke $r15.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r19 = (android.content.pm.UserInfo) $r18;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>($r19);

        exitmonitor r2;

     label17:
        return -1;

     label18:
        $i8 = r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts>;

        $i7 = 1 + $i8;

        r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts> = $i7;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: long lastAttemptTime> = $l9;

        $r14 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r16 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r17 = (android.content.pm.UserInfo) $r16;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>($r17);

        exitmonitor r2;

     label19:
        return i2;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
        catch java.lang.Throwable from label18 to label19 with label09;
    }

    public android.content.pm.UserInfo createUser(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r13;
        int i0, i2, i3, $i5, $i6, $i8;
        long l1, l4;
        java.lang.Throwable r2, r4, r6, $r23, $r25, $r26;
        java.lang.Object r3, r5;
        android.content.pm.UserInfo r7, $r12;
        java.io.File r8, $r11, $r14, $r17;
        android.os.Bundle r9, $r18;
        android.content.Intent r10, $r22;
        boolean $z0;
        byte $b7;
        android.util.SparseArray $r15, $r19;
        com.android.server.pm.PackageManagerService $r16;
        android.os.UserHandle $r21;
        android.content.Context $r24;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can create users");

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label01:
        r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mInstallLock>;

        entermonitor r3;

     label02:
        r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r5;

     label03:
        $z0 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean isUserLimitReachedLocked()>();

        if $z0 == 0 goto label06;

        exitmonitor r5;

     label04:
        exitmonitor r3;

     label05:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return null;

     label06:
        i2 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getNextAvailableIdLocked()>();

        $r12 = new android.content.pm.UserInfo;

        specialinvoke $r12.<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>(i2, r1, null, i0);

        r7 = $r12;

        $r11 = new java.io.File;

        $r14 = r0.<com.android.server.pm.UserManagerService: java.io.File mBaseUserPath>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, $r13);

        r8 = $r11;

        i3 = r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber>;

        $i5 = i3 + 1;

        r0.<com.android.server.pm.UserManagerService: int mNextSerialNumber> = $i5;

        r7.<android.content.pm.UserInfo: int serialNumber> = i3;

        l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label07:
        $b7 = l4 cmp 946080000000L;

        if $b7 <= 0 goto label13;

     label08:
        r7.<android.content.pm.UserInfo: long creationTime> = l4;

        r7.<android.content.pm.UserInfo: boolean partial> = 1;

        $i6 = r7.<android.content.pm.UserInfo: int id>;

        $r17 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>($i6);

        virtualinvoke $r17.<java.io.File: boolean mkdirs()>();

        $r15 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        virtualinvoke $r15.<android.util.SparseArray: void put(int,java.lang.Object)>(i2, r7);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserListLocked()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r7);

        $r16 = r0.<com.android.server.pm.UserManagerService: com.android.server.pm.PackageManagerService mPm>;

        virtualinvoke $r16.<com.android.server.pm.PackageManagerService: void createNewUserLILPw(int,java.io.File)>(i2, r8);

        r7.<android.content.pm.UserInfo: boolean partial> = 0;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r7);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void updateUserIdsLocked()>();

        $r18 = new android.os.Bundle;

        specialinvoke $r18.<android.os.Bundle: void <init>()>();

        r9 = $r18;

        $r19 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        virtualinvoke $r19.<android.util.SparseArray: void append(int,java.lang.Object)>(i2, r9);

        exitmonitor r5;

     label09:
        exitmonitor r3;

     label10:
        if r7 == null goto label12;

     label11:
        $r22 = new android.content.Intent;

        specialinvoke $r22.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_ADDED");

        r10 = $r22;

        $i8 = r7.<android.content.pm.UserInfo: int id>;

        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", $i8);

        $r24 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r21 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r24.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>(r10, $r21, "android.permission.MANAGE_USERS");

     label12:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r7;

     label13:
        l4 = 0L;

        goto label08;

     label14:
        $r25 := @caughtexception;

        r6 = $r25;

     label15:
        exitmonitor r5;

     label16:
        throw r6;

     label17:
        $r26 := @caughtexception;

        r4 = $r26;

     label18:
        exitmonitor r3;

     label19:
        throw r4;

     label20:
        $r23 := @caughtexception;

        r2 = $r23;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label19 to label20 with label20;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.pm.UserManagerService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        long l0, $l6, $l7, $l9, $l10, $l11, $l12;
        java.lang.StringBuilder r4, $r9, $r16, $r18, $r19, $r20, $r21, $r24, $r25;
        java.lang.Object r5, $r12;
        java.lang.Throwable r6, $r23;
        int i1, $i2, $i3, $i4, $i5, $i14, $i15;
        android.content.pm.UserInfo r7;
        android.content.Context $r8;
        android.util.SparseArray $r10, $r11, $r14;
        android.util.SparseBooleanArray $r13;
        boolean $z0, $z1;
        byte $b8, $b13;
        java.lang.String $r22;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r8 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $i2 = virtualinvoke $r8.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i2 == 0 goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump UserManager from from pid=");

        $i14 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i15 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        return;

     label01:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r4 = $r9;

        r5 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r5;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Users:");

     label03:
        i1 = 0;

     label04:
        $r10 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i3 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        if i1 >= $i3 goto label18;

        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r7 = (android.content.pm.UserInfo) $r12;

     label05:
        if r7 != null goto label06;

        goto label20;

     label06:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>(r7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" serialNo=");

        $i4 = r7.<android.content.pm.UserInfo: int serialNumber>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i4);

        $r13 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $r14 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i5 = virtualinvoke $r14.<android.util.SparseArray: int keyAt(int)>(i1);

        $z0 = virtualinvoke $r13.<android.util.SparseBooleanArray: boolean get(int)>($i5);

        if $z0 == 0 goto label07;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" <removing> ");

     label07:
        $z1 = r7.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label08;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" <partial>");

     label08:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Created: ");

        $l6 = r7.<android.content.pm.UserInfo: long creationTime>;

        $b8 = $l6 cmp 0L;

        if $b8 != 0 goto label14;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("<unknown>");

     label09:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Last logged in: ");

        $l12 = r7.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $b13 = $l12 cmp 0L;

        if $b13 != 0 goto label16;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("<unknown>");

     label10:
        goto label20;

     label11:
        $r23 := @caughtexception;

        r6 = $r23;

     label12:
        exitmonitor r5;

     label13:
        throw r6;

     label14:
        virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0);

        $l7 = r7.<android.content.pm.UserInfo: long creationTime>;

        $l9 = l0 - $l7;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l9, r4);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ago");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

     label15:
        goto label09;

     label16:
        virtualinvoke r4.<java.lang.StringBuilder: void setLength(int)>(0);

        $l10 = r7.<android.content.pm.UserInfo: long lastLoggedInTime>;

        $l11 = l0 - $l10;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>($l11, r4);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ago");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r4);

     label17:
        goto label20;

     label18:
        exitmonitor r5;

     label19:
        return;

     label20:
        i1 = i1 + 1;

        goto label04;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label14 to label15 with label11;
        catch java.lang.Throwable from label16 to label17 with label11;
        catch java.lang.Throwable from label18 to label19 with label11;
    }

    public boolean exists(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        boolean z0;
        int[] $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean contains(int[],int)>($r3, i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void finishRemoveUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        long l1;
        android.content.Intent r1, $r3;
        java.lang.Throwable r2, $r8;
        com.android.server.pm.UserManagerService$2 $r5;
        android.content.Context $r6;
        android.os.UserHandle $r7;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.USER_REMOVED");

        r1 = $r3;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.user_handle", i0);

        $r6 = r0.<com.android.server.pm.UserManagerService: android.content.Context mContext>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r5 = new com.android.server.pm.UserManagerService$2;

        specialinvoke $r5.<com.android.server.pm.UserManagerService$2: void <init>(com.android.server.pm.UserManagerService,int)>(r0, i0);

        virtualinvoke $r6.<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>(r1, $r7, "android.permission.MANAGE_USERS", $r5, null, -1, null, null);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.Bundle getApplicationRestrictions(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int $i0;
        android.os.Bundle $r2;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r2 = virtualinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>(r1, $i0);

        return $r2;
    }

    public android.os.Bundle getApplicationRestrictionsForUser(java.lang.String, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        android.os.Bundle r4;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i1 != i0 goto label1;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getUidForPackage(java.lang.String)>(r1);

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i2, $i3);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can get restrictions for other users/apps");

     label2:
        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r2;

     label3:
        r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.os.Bundle readApplicationRestrictionsLocked(java.lang.String,int)>(r1, i0);

        exitmonitor r2;

     label4:
        return r4;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getUserHandle(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1, i2, i3, $i4;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        int[] r3;
        android.content.pm.UserInfo $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        r3 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        i1 = lengthof r3;

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label06;

     label04:
        i3 = r3[i2];

        $r4 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i3);

        $i4 = $r4.<android.content.pm.UserInfo: int serialNumber>;

        if $i4 != i0 goto label11;

        exitmonitor r1;

     label05:
        return i3;

     label06:
        exitmonitor r1;

     label07:
        return -1;

     label08:
        $r5 := @caughtexception;

        r2 = $r5;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

     label11:
        i2 = i2 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.graphics.Bitmap getUserIcon(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r6;
        java.lang.Throwable r2, $r13;
        android.content.pm.UserInfo r3;
        android.graphics.Bitmap r4;
        android.util.SparseArray $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10, $r11, $r12;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("read users");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.content.pm.UserInfo) $r6;

     label02:
        if r3 == null goto label04;

     label03:
        $z0 = r3.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label06;

     label04:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUserIcon: unknown user #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r10);

        exitmonitor r1;

     label05:
        return null;

     label06:
        $r12 = r3.<android.content.pm.UserInfo: java.lang.String iconPath>;

        if $r12 != null goto label11;

        exitmonitor r1;

     label07:
        return null;

     label08:
        $r13 := @caughtexception;

        r2 = $r13;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

     label11:
        $r11 = r3.<android.content.pm.UserInfo: java.lang.String iconPath>;

        r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r11);

        exitmonitor r1;

     label12:
        return r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    public int[] getUserIds()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int[] r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    int[] getUserIdsLPr()
    {
        com.android.server.pm.UserManagerService r0;
        int[] $r1;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r1 = r0.<com.android.server.pm.UserManagerService: int[] mUserIds>;

        return $r1;
    }

    public android.content.pm.UserInfo getUserInfo(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        android.content.pm.UserInfo r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("query user");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label1:
        r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.Bundle getUserRestrictions(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, $r6;
        android.os.Bundle r3;
        android.util.SparseArray $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.os.Bundle) $r5;

     label2:
        if r3 == null goto label5;

     label3:
        exitmonitor r1;

     label4:
        return r3;

     label5:
        r3 = <android.os.Bundle: android.os.Bundle EMPTY>;

     label6:
        goto label3;

     label7:
        $r6 := @caughtexception;

        r2 = $r6;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int getUserSerialNumber(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        boolean $z0;
        android.content.pm.UserInfo $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label1:
        $z0 = virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean exists(int)>(i0);

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return -1;

     label3:
        $r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>(i0);

        i1 = $r3.<android.content.pm.UserInfo: int serialNumber>;

        exitmonitor r1;

     label4:
        return i1;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.util.List getUsers(boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0, $z2, $z3;
        java.lang.Object r1, $r9;
        java.util.ArrayList r2, $r5;
        int i0, $i1, $i2, $i3;
        java.lang.Throwable r3, $r11;
        android.content.pm.UserInfo r4;
        android.util.SparseArray $r6, $r7, $r8;
        android.util.SparseBooleanArray $r10;

        r0 := @this: com.android.server.pm.UserManagerService;

        z0 := @parameter0: boolean;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("query users");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        $r5 = new java.util.ArrayList;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i1);

        r2 = $r5;

     label02:
        i0 = 0;

     label03:
        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i2 = virtualinvoke $r7.<android.util.SparseArray: int size()>();

        if i0 >= $i2 goto label12;

        $r8 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r9 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r4 = (android.content.pm.UserInfo) $r9;

        $z2 = r4.<android.content.pm.UserInfo: boolean partial>;

        if $z2 == 0 goto label05;

     label04:
        goto label14;

     label05:
        if z0 == 0 goto label07;

     label06:
        $r10 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        $i3 = r4.<android.content.pm.UserInfo: int id>;

        $z3 = virtualinvoke $r10.<android.util.SparseBooleanArray: boolean get(int)>($i3);

        if $z3 != 0 goto label14;

     label07:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label08:
        goto label14;

     label09:
        $r11 := @caughtexception;

        r3 = $r11;

     label10:
        exitmonitor r1;

     label11:
        throw r3;

     label12:
        exitmonitor r1;

     label13:
        return r2;

     label14:
        i0 = i0 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public boolean hasRestrictionsChallenge()
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        boolean z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label1:
        z0 = specialinvoke r0.<com.android.server.pm.UserManagerService: boolean hasRestrictionsPinLocked(int)>(i0);

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isGuestEnabled()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        boolean z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.server.pm.UserManagerService: boolean mGuestEnabled>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isRestricted()
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        boolean z0;
        int $i0;
        android.content.pm.UserInfo $r3;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label1:
        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        $r3 = specialinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfoLocked(int)>($i0);

        z0 = virtualinvoke $r3.<android.content.pm.UserInfo: boolean isRestricted()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void makeInitialized(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, $i2, $i3, $i4, $i5;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, $r10;
        android.content.pm.UserInfo r3;
        android.util.SparseArray $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("makeInitialized");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.content.pm.UserInfo) $r5;

     label02:
        if r3 == null goto label04;

     label03:
        $z0 = r3.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label05;

     label04:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeInitialized: unknown user #");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r9);

     label05:
        $i2 = r3.<android.content.pm.UserInfo: int flags>;

        $i3 = 16 & $i2;

        if $i3 != 0 goto label06;

        $i4 = r3.<android.content.pm.UserInfo: int flags>;

        $i5 = 16 | $i4;

        r3.<android.content.pm.UserInfo: int flags> = $i5;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r3);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r10 := @caughtexception;

        r2 = $r10;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void removeRestrictions()
    {
        com.android.server.pm.UserManagerService r0;
        int $i0;

        r0 := @this: com.android.server.pm.UserManagerService;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can remove restrictions");

        $i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        specialinvoke r0.<com.android.server.pm.UserManagerService: void removeRestrictionsForUser(int,boolean)>($i0, 1);

        return;
    }

    public boolean removeUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0, i1;
        boolean z0;
        java.lang.Object r1, $r6;
        java.lang.Throwable r2, $r10;
        android.content.pm.UserInfo r3;
        android.util.SparseArray $r5;
        android.util.SparseBooleanArray $r7;
        android.app.IActivityManager $r8;
        com.android.server.pm.UserManagerService$1 $r9;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        z0 = 1;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only the system can remove users");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.content.pm.UserInfo) $r6;

     label02:
        if i0 == 0 goto label03;

        if r3 != null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return 0;

     label05:
        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseBooleanArray mRemovingUserIds>;

        virtualinvoke $r7.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        r3.<android.content.pm.UserInfo: boolean partial> = 1;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r3);

        exitmonitor r1;

     label06:
        $r8 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r9 = new com.android.server.pm.UserManagerService$1;

        specialinvoke $r9.<com.android.server.pm.UserManagerService$1: void <init>(com.android.server.pm.UserManagerService)>(r0);

        i1 = interfaceinvoke $r8.<android.app.IActivityManager: int stopUser(int,android.app.IStopUserCallback)>(i0, $r9);

     label07:
        if i1 != 0 goto label13;

     label08:
        return z0;

     label09:
        $r10 := @caughtexception;

        r2 = $r10;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

     label12:
        $r11 := @caughtexception;

        return 0;

     label13:
        z0 = 0;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch android.os.RemoteException from label06 to label07 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void setApplicationRestrictions(java.lang.String, android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1;
        android.os.Bundle r2;
        int i0, $i1, $i2, $i3;
        java.lang.Object r3;
        java.lang.Throwable r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        i0 := @parameter2: int;

        $i1 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        if $i1 != i0 goto label1;

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i3 = specialinvoke r0.<com.android.server.pm.UserManagerService: int getUidForPackage(java.lang.String)>(r1);

        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>($i2, $i3);

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can set restrictions for other users/apps");

     label2:
        r3 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r3;

     label3:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeApplicationRestrictionsLocked(java.lang.String,android.os.Bundle,int)>(r1, r2, i0);

        exitmonitor r3;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        r4 = $r5;

     label6:
        exitmonitor r3;

     label7:
        throw r4;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void setGuestEnabled(boolean)
    {
        com.android.server.pm.UserManagerService r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.Object r1, $r7;
        java.lang.Throwable r2, $r8;
        int i0, $i1, $i2;
        android.content.pm.UserInfo r3;
        android.util.SparseArray $r4, $r6;

        r0 := @this: com.android.server.pm.UserManagerService;

        z0 := @parameter0: boolean;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("enable guest users");

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.server.pm.UserManagerService: boolean mGuestEnabled>;

        if $z1 == z0 goto label10;

        r0.<com.android.server.pm.UserManagerService: boolean mGuestEnabled> = z0;

     label02:
        i0 = 0;

     label03:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $i1 = virtualinvoke $r4.<android.util.SparseArray: int size()>();

        if i0 >= $i1 goto label08;

        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r3 = (android.content.pm.UserInfo) $r7;

        $z2 = r3.<android.content.pm.UserInfo: boolean partial>;

        if $z2 != 0 goto label15;

        $z3 = virtualinvoke r3.<android.content.pm.UserInfo: boolean isGuest()>();

        if $z3 == 0 goto label15;

     label04:
        if z0 != 0 goto label06;

     label05:
        $i2 = r3.<android.content.pm.UserInfo: int id>;

        virtualinvoke r0.<com.android.server.pm.UserManagerService: boolean removeUser(int)>($i2);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        if z0 == 0 goto label10;

     label09:
        virtualinvoke r0.<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUser(java.lang.String,int)>("Guest", 4);

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        $r8 := @caughtexception;

        r2 = $r8;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

     label15:
        i0 = i0 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public boolean setRestrictionsChallenge(java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        java.lang.String r1, $r9;
        int i0;
        java.lang.Object r2, $r7, $r11;
        java.lang.Throwable r3, $r16;
        com.android.server.pm.UserManagerService$RestrictionsPinState r4, $r15;
        android.util.SparseArray $r6, $r10, $r12;
        java.security.SecureRandom $r8;
        long $l1, $l2, $l3;
        android.content.pm.UserInfo $r13;
        java.security.NoSuchAlgorithmException $r14;
        double $d0, $d1;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("Only system can modify the restrictions pin");

        i0 = staticinvoke <android.os.UserHandle: int getCallingUserId()>();

        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r2;

     label01:
        $r6 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r7;

     label02:
        if r4 != null goto label04;

     label03:
        $r15 = new com.android.server.pm.UserManagerService$RestrictionsPinState;

        specialinvoke $r15.<com.android.server.pm.UserManagerService$RestrictionsPinState: void <init>(com.android.server.pm.UserManagerService)>(r0);

        r4 = $r15;

     label04:
        if r1 != null goto label08;

     label05:
        r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt> = 0L;

        r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash> = null;

     label06:
        $r10 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        virtualinvoke $r10.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r4);

        $r12 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r11 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r13 = (android.content.pm.UserInfo) $r11;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>($r13);

        exitmonitor r2;

     label07:
        return 1;

     label08:
        $r8 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>("SHA1PRNG");

        $l1 = virtualinvoke $r8.<java.security.SecureRandom: long nextLong()>();

        r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt> = $l1;

     label09:
        $l2 = r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

        $r9 = specialinvoke r0.<com.android.server.pm.UserManagerService: java.lang.String passwordToHash(java.lang.String,long)>(r1, $l2);

        r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: java.lang.String pinHash> = $r9;

        r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: int failedAttempts> = 0;

     label10:
        goto label06;

     label11:
        $r16 := @caughtexception;

        r3 = $r16;

     label12:
        exitmonitor r2;

     label13:
        throw r3;

     label14:
        $r14 := @caughtexception;

     label15:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = 9.223372036854776E18 * $d0;

        $l3 = (long) $d1;

        r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt> = $l3;

     label16:
        goto label09;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label14;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
    }

    public void setUserIcon(int, android.graphics.Bitmap)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        android.graphics.Bitmap r1;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, $r11;
        android.content.pm.UserInfo r4;
        android.util.SparseArray $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        boolean $z0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Bitmap;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("update users");

        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (android.content.pm.UserInfo) $r6;

     label02:
        if r4 == null goto label04;

     label03:
        $z0 = r4.<android.content.pm.UserInfo: boolean partial>;

        if $z0 == 0 goto label06;

     label04:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUserIcon: unknown user #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r10);

        exitmonitor r2;

     label05:
        return;

     label06:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeBitmapLocked(android.content.pm.UserInfo,android.graphics.Bitmap)>(r4, r1);

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r4);

        exitmonitor r2;

     label07:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void sendUserInfoChangedBroadcast(int)>(i0);

        return;

     label08:
        $r11 := @caughtexception;

        r3 = $r11;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void setUserName(int, java.lang.String)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.String r1, $r10, $r11;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, $r12;
        android.content.pm.UserInfo r4;
        boolean z0, z1, $z2;
        android.util.SparseArray $r5;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("rename users");

        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r2;

     label01:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (android.content.pm.UserInfo) $r6;

     label02:
        if r4 == null goto label04;

     label03:
        $z2 = r4.<android.content.pm.UserInfo: boolean partial>;

        if $z2 == 0 goto label06;

     label04:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUserName: unknown user #");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r10);

        exitmonitor r2;

     label05:
        return;

     label06:
        z0 = 0;

        if r1 == null goto label11;

     label07:
        $r11 = r4.<android.content.pm.UserInfo: java.lang.String name>;

        z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r11);

     label08:
        z0 = 0;

        if z1 != 0 goto label11;

     label09:
        r4.<android.content.pm.UserInfo: java.lang.String name> = r1;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r4);

     label10:
        z0 = 1;

     label11:
        exitmonitor r2;

     label12:
        if z0 == 0 goto label16;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void sendUserInfoChangedBroadcast(int)>(i0);

        return;

     label13:
        $r12 := @caughtexception;

        r3 = $r12;

     label14:
        exitmonitor r2;

     label15:
        throw r3;

     label16:
        return;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void setUserRestrictions(android.os.Bundle, int)
    {
        com.android.server.pm.UserManagerService r0;
        android.os.Bundle r1, $r6, $r9;
        int i0;
        java.lang.Object r2, $r5, $r8, $r11;
        java.lang.Throwable r3, $r13;
        android.util.SparseArray $r4, $r7, $r10;
        android.content.pm.UserInfo $r12;

        r0 := @this: com.android.server.pm.UserManagerService;

        r1 := @parameter0: android.os.Bundle;

        i0 := @parameter1: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("setUserRestrictions");

        if r1 != null goto label1;

        return;

     label1:
        r2 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r2;

     label2:
        $r4 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r6 = (android.os.Bundle) $r5;

        virtualinvoke $r6.<android.os.Bundle: void clear()>();

        $r7 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUserRestrictions>;

        $r8 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r9 = (android.os.Bundle) $r8;

        virtualinvoke $r9.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

        $r10 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r11 = virtualinvoke $r10.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r12 = (android.content.pm.UserInfo) $r11;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>($r12);

        exitmonitor r2;

     label3:
        return;

     label4:
        $r13 := @caughtexception;

        r3 = $r13;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void systemReady()
    {
        com.android.server.pm.UserManagerService r0;
        android.app.ContextImpl r1;
        android.app.ActivityThread $r2;
        android.os.UserHandle $r3;
        com.android.internal.content.PackageMonitor $r4;

        r0 := @this: com.android.server.pm.UserManagerService;

        $r2 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread systemMain()>();

        r1 = virtualinvoke $r2.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        $r4 = r0.<com.android.server.pm.UserManagerService: com.android.internal.content.PackageMonitor mUserPackageMonitor>;

        $r3 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r4.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>(r1, null, $r3, 0);

        virtualinvoke r0.<com.android.server.pm.UserManagerService: void userForeground(int)>(0);

        return;
    }

    public void userForeground(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;
        java.lang.Object r1, $r6, $r12;
        java.lang.Throwable r2, $r13;
        android.content.pm.UserInfo r3;
        long l1, l2;
        com.android.server.pm.UserManagerService$RestrictionsPinState r4;
        boolean z0, $z1, $z2;
        android.util.SparseArray $r5, $r11;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        byte $b4, $b5;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.pm.UserManagerService: java.lang.Object mPackagesLock>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mUsers>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.content.pm.UserInfo) $r6;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label02:
        if r3 == null goto label04;

     label03:
        $z1 = r3.<android.content.pm.UserInfo: boolean partial>;

        if $z1 == 0 goto label06;

     label04:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("userForeground: unknown user #");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserManagerService", $r10);

        exitmonitor r1;

     label05:
        return;

     label06:
        $b4 = l1 cmp 946080000000L;

        if $b4 <= 0 goto label08;

     label07:
        r3.<android.content.pm.UserInfo: long lastLoggedInTime> = l1;

        specialinvoke r0.<com.android.server.pm.UserManagerService: void writeUserLocked(android.content.pm.UserInfo)>(r3);

     label08:
        $r11 = r0.<com.android.server.pm.UserManagerService: android.util.SparseArray mRestrictionsPinStates>;

        $r12 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (com.android.server.pm.UserManagerService$RestrictionsPinState) $r12;

     label09:
        if r4 != null goto label17;

        l2 = 0L;

     label10:
        $z2 = virtualinvoke r3.<android.content.pm.UserInfo: boolean isRestricted()>();

        if $z2 != 0 goto label19;

     label11:
        $b5 = l2 cmp 0L;

        if $b5 != 0 goto label19;

        z0 = 1;

     label12:
        specialinvoke r0.<com.android.server.pm.UserManagerService: void cleanAppRestrictions(int,boolean)>(i0, z0);

        exitmonitor r1;

     label13:
        return;

     label14:
        $r13 := @caughtexception;

        r2 = $r13;

     label15:
        exitmonitor r1;

     label16:
        throw r2;

     label17:
        l2 = r4.<com.android.server.pm.UserManagerService$RestrictionsPinState: long salt>;

     label18:
        goto label10;

     label19:
        z0 = 0;

        goto label12;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
        catch java.lang.Throwable from label17 to label18 with label14;
    }

    public void wipeUser(int)
    {
        com.android.server.pm.UserManagerService r0;
        int i0;

        r0 := @this: com.android.server.pm.UserManagerService;

        i0 := @parameter0: int;

        staticinvoke <com.android.server.pm.UserManagerService: void checkManageUsersPermission(java.lang.String)>("wipe user");

        return;
    }
}
