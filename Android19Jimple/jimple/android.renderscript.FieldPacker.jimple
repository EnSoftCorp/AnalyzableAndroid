public class android.renderscript.FieldPacker extends java.lang.Object
{
    private java.util.BitSet mAlignment;
    private final byte[] mData;
    private int mLen;
    private int mPos;

    public void <init>(int)
    {
        android.renderscript.FieldPacker r0;
        int i0;
        byte[] $r1;
        java.util.BitSet $r2;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.FieldPacker: int mPos> = 0;

        r0.<android.renderscript.FieldPacker: int mLen> = i0;

        $r1 = newarray (byte)[i0];

        r0.<android.renderscript.FieldPacker: byte[] mData> = $r1;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment> = $r2;

        return;
    }

    public void <init>(byte[])
    {
        android.renderscript.FieldPacker r0;
        byte[] r1;
        int $i0;
        java.util.BitSet $r2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.FieldPacker: int mPos> = 0;

        $i0 = lengthof r1;

        r0.<android.renderscript.FieldPacker: int mLen> = $i0;

        r0.<android.renderscript.FieldPacker: byte[] mData> = r1;

        $r2 = new java.util.BitSet;

        specialinvoke $r2.<java.util.BitSet: void <init>()>();

        r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment> = $r2;

        return;
    }

    public void addBoolean(boolean)
    {
        android.renderscript.FieldPacker r0;
        boolean z0, z1;
        byte $b0;

        r0 := @this: android.renderscript.FieldPacker;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        z1 = 1;

     label1:
        $b0 = (byte) z1;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        return;

     label2:
        z1 = 0;

        goto label1;
    }

    public void addF32(float)
    {
        android.renderscript.FieldPacker r0;
        float f0;
        int $i0;

        r0 := @this: android.renderscript.FieldPacker;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(f0);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        return;
    }

    public void addF32(android.renderscript.Float2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float2 r1;
        float $f0, $f1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Float2;

        $f0 = r1.<android.renderscript.Float2: float x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.renderscript.Float2: float y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        return;
    }

    public void addF32(android.renderscript.Float3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float3 r1;
        float $f0, $f1, $f2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Float3;

        $f0 = r1.<android.renderscript.Float3: float x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.renderscript.Float3: float y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        $f2 = r1.<android.renderscript.Float3: float z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f2);

        return;
    }

    public void addF32(android.renderscript.Float4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float4 r1;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Float4;

        $f0 = r1.<android.renderscript.Float4: float x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        $f1 = r1.<android.renderscript.Float4: float y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f1);

        $f2 = r1.<android.renderscript.Float4: float z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f2);

        $f3 = r1.<android.renderscript.Float4: float w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f3);

        return;
    }

    public void addF64(double)
    {
        android.renderscript.FieldPacker r0;
        double d0;
        long $l0;

        r0 := @this: android.renderscript.FieldPacker;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(d0);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        return;
    }

    public void addF64(android.renderscript.Double2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double2 r1;
        double $d0, $d1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Double2;

        $d0 = r1.<android.renderscript.Double2: double x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.renderscript.Double2: double y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d1);

        return;
    }

    public void addF64(android.renderscript.Double3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double3 r1;
        double $d0, $d1, $d2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Double3;

        $d0 = r1.<android.renderscript.Double3: double x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.renderscript.Double3: double y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d1);

        $d2 = r1.<android.renderscript.Double3: double z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d2);

        return;
    }

    public void addF64(android.renderscript.Double4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double4 r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Double4;

        $d0 = r1.<android.renderscript.Double4: double x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d0);

        $d1 = r1.<android.renderscript.Double4: double y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d1);

        $d2 = r1.<android.renderscript.Double4: double z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d2);

        $d3 = r1.<android.renderscript.Double4: double w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF64(double)>($d3);

        return;
    }

    public void addI16(android.renderscript.Short2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short2 r1;
        short $s0, $s1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short2;

        $s0 = r1.<android.renderscript.Short2: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.renderscript.Short2: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s1);

        return;
    }

    public void addI16(android.renderscript.Short3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short3 r1;
        short $s0, $s1, $s2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short3;

        $s0 = r1.<android.renderscript.Short3: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.renderscript.Short3: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s1);

        $s2 = r1.<android.renderscript.Short3: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s2);

        return;
    }

    public void addI16(android.renderscript.Short4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short4 r1;
        short $s0, $s1, $s2, $s3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short4;

        $s0 = r1.<android.renderscript.Short4: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s0);

        $s1 = r1.<android.renderscript.Short4: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s1);

        $s2 = r1.<android.renderscript.Short4: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s2);

        $s3 = r1.<android.renderscript.Short4: short w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI16(short)>($s3);

        return;
    }

    public void addI16(short)
    {
        android.renderscript.FieldPacker r0;
        short s0, $s4, $s7;
        byte[] r1, r2;
        int i1, i2, $i3, $i6;
        byte $b5, $b8;

        r0 := @this: android.renderscript.FieldPacker;

        s0 := @parameter0: short;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(2);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i3;

        $s4 = s0 & 255;

        $b5 = (byte) $s4;

        r1[i1] = $b5;

        r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i6 = i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i6;

        $s7 = s0 >> 8;

        $b8 = (byte) $s7;

        r2[i2] = $b8;

        return;
    }

    public void addI32(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i17, $i18;
        byte[] r1, r2, r3, r4;
        byte $b7, $b12, $b16, $b19;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(4);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i5 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i5;

        $i6 = i0 & 255;

        $b7 = (byte) $i6;

        r1[i1] = $b7;

        r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i8 = i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i8;

        $i9 = i0 >> 8;

        $i10 = 255 & $i9;

        $b12 = (byte) $i10;

        r2[i2] = $b12;

        r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i3 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i11 = i3 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i11;

        $i14 = i0 >> 16;

        $i13 = 255 & $i14;

        $b16 = (byte) $i13;

        r3[i3] = $b16;

        r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i4 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i15 = i4 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i15;

        $i18 = i0 >> 24;

        $i17 = 255 & $i18;

        $b19 = (byte) $i17;

        r4[i4] = $b19;

        return;
    }

    public void addI32(android.renderscript.Int2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int2 r1;
        int $i0, $i1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int2;

        $i0 = r1.<android.renderscript.Int2: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.renderscript.Int2: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        return;
    }

    public void addI32(android.renderscript.Int3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int3 r1;
        int $i0, $i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int3;

        $i0 = r1.<android.renderscript.Int3: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.renderscript.Int3: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        $i2 = r1.<android.renderscript.Int3: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i2);

        return;
    }

    public void addI32(android.renderscript.Int4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int4 r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int4;

        $i0 = r1.<android.renderscript.Int4: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        $i1 = r1.<android.renderscript.Int4: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i1);

        $i2 = r1.<android.renderscript.Int4: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i2);

        $i3 = r1.<android.renderscript.Int4: int w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i3);

        return;
    }

    public void addI64(long)
    {
        android.renderscript.FieldPacker r0;
        long l0, $l11, $l14, $l15, $l18, $l21, $l22, $l23, $l27, $l32, $l36, $l37, $l39, $l40, $l42, $l43;
        byte[] r1, r2, r3, r4, r5, r6, r7, r8;
        int i1, i2, i3, i4, i5, i6, i7, $i8, i9, $i10, $i12, $i17, $i19, $i20, $i25, $i26, $i28, $i31, $i33, $i34, $i38, $i41, $i44, $i47;
        byte $b13, $b16, $b24, $b29, $b30, $b35, $b45, $b46;

        r0 := @this: android.renderscript.FieldPacker;

        l0 := @parameter0: long;

        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(8);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i8 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i8;

        $l11 = l0 & 255L;

        $i10 = (int) $l11;

        $b13 = (byte) $i10;

        r1[i1] = $b13;

        r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i12 = i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i12;

        $l15 = l0 >> 8;

        $l14 = 255L & $l15;

        $i17 = (int) $l14;

        $b16 = (byte) $i17;

        r2[i2] = $b16;

        r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i3 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i19 = i3 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i19;

        $l18 = l0 >> 16;

        $l21 = 255L & $l18;

        $i20 = (int) $l21;

        $b24 = (byte) $i20;

        r3[i3] = $b24;

        r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i4 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i25 = i4 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i25;

        $l22 = l0 >> 24;

        $l23 = 255L & $l22;

        $i28 = (int) $l23;

        $b29 = (byte) $i28;

        r4[i4] = $b29;

        r5 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i5 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i26 = i5 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i26;

        $l27 = l0 >> 32;

        $l32 = 255L & $l27;

        $i33 = (int) $l32;

        $b30 = (byte) $i33;

        r5[i5] = $b30;

        r6 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i6 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i31 = i6 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i31;

        $l36 = l0 >> 40;

        $l37 = 255L & $l36;

        $i34 = (int) $l37;

        $b35 = (byte) $i34;

        r6[i6] = $b35;

        r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i41 = i7 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i41;

        $l40 = l0 >> 48;

        $l39 = 255L & $l40;

        $i38 = (int) $l39;

        $b45 = (byte) $i38;

        r7[i7] = $b45;

        r8 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i9 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i44 = i9 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i44;

        $l43 = l0 >> 56;

        $l42 = 255L & $l43;

        $i47 = (int) $l42;

        $b46 = (byte) $i47;

        r8[i9] = $b46;

        return;
    }

    public void addI64(android.renderscript.Long2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long2;

        $l0 = r1.<android.renderscript.Long2: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.renderscript.Long2: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l1);

        return;
    }

    public void addI64(android.renderscript.Long3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long3;

        $l0 = r1.<android.renderscript.Long3: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.renderscript.Long3: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l1);

        $l2 = r1.<android.renderscript.Long3: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l2);

        return;
    }

    public void addI64(android.renderscript.Long4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long4;

        $l0 = r1.<android.renderscript.Long4: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l0);

        $l1 = r1.<android.renderscript.Long4: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l1);

        $l2 = r1.<android.renderscript.Long4: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l2);

        $l3 = r1.<android.renderscript.Long4: long w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI64(long)>($l3);

        return;
    }

    public void addI8(byte)
    {
        android.renderscript.FieldPacker r0;
        byte b0;
        byte[] r1;
        int i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        b0 := @parameter0: byte;

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i2 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i2;

        r1[i1] = b0;

        return;
    }

    public void addI8(android.renderscript.Byte2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte2 r1;
        byte $b0, $b1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Byte2;

        $b0 = r1.<android.renderscript.Byte2: byte x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.renderscript.Byte2: byte y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b1);

        return;
    }

    public void addI8(android.renderscript.Byte3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte3 r1;
        byte $b0, $b1, $b2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Byte3;

        $b0 = r1.<android.renderscript.Byte3: byte x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.renderscript.Byte3: byte y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b1);

        $b2 = r1.<android.renderscript.Byte3: byte z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b2);

        return;
    }

    public void addI8(android.renderscript.Byte4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte4 r1;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Byte4;

        $b0 = r1.<android.renderscript.Byte4: byte x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b0);

        $b1 = r1.<android.renderscript.Byte4: byte y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b1);

        $b2 = r1.<android.renderscript.Byte4: byte z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b2);

        $b3 = r1.<android.renderscript.Byte4: byte w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI8(byte)>($b3);

        return;
    }

    public void addMatrix(android.renderscript.Matrix2f)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix2f r1;
        int i0, $i1;
        float[] $r2, $r3;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Matrix2f;

        i0 = 0;

     label1:
        $r2 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $f0 = $r3[i0];

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void addMatrix(android.renderscript.Matrix3f)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix3f r1;
        int i0, $i1;
        float[] $r2, $r3;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Matrix3f;

        i0 = 0;

     label1:
        $r2 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $f0 = $r3[i0];

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void addMatrix(android.renderscript.Matrix4f)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix4f r1;
        int i0, $i1;
        float[] $r2, $r3;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Matrix4f;

        i0 = 0;

     label1:
        $r2 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $f0 = $r3[i0];

        virtualinvoke r0.<android.renderscript.FieldPacker: void addF32(float)>($f0);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void addObj(android.renderscript.BaseObj)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.BaseObj r1;
        int $i0;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.BaseObj;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.renderscript.BaseObj: int getID(android.renderscript.RenderScript)>(null);

        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>($i0);

        return;

     label1:
        virtualinvoke r0.<android.renderscript.FieldPacker: void addI32(int)>(0);

        return;
    }

    public void addU16(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, i1, i2, $i4, $i6, $i7, $i8;
        byte[] r1, r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.IllegalArgumentException $r8;
        byte $b5, $b9;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 65535 goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU16( ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r7);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r8;

     label2:
        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(2);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i4 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i4;

        $i6 = i0 & 255;

        $b5 = (byte) $i6;

        r1[i1] = $b5;

        r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i8 = i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i8;

        $i7 = i0 >> 8;

        $b9 = (byte) $i7;

        r2[i2] = $b9;

        return;
    }

    public void addU16(android.renderscript.Int2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int2 r1;
        int $i0, $i1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int2;

        $i0 = r1.<android.renderscript.Int2: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.renderscript.Int2: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i1);

        return;
    }

    public void addU16(android.renderscript.Int3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int3 r1;
        int $i0, $i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int3;

        $i0 = r1.<android.renderscript.Int3: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.renderscript.Int3: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i1);

        $i2 = r1.<android.renderscript.Int3: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i2);

        return;
    }

    public void addU16(android.renderscript.Int4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int4 r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Int4;

        $i0 = r1.<android.renderscript.Int4: int x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i0);

        $i1 = r1.<android.renderscript.Int4: int y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i1);

        $i2 = r1.<android.renderscript.Int4: int z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i2);

        $i3 = r1.<android.renderscript.Int4: int w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU16(int)>($i3);

        return;
    }

    public void addU32(long)
    {
        android.renderscript.FieldPacker r0;
        long l0, $l8, $l12, $l15, $l20, $l21, $l22, $l25;
        byte[] r1, r2, r3, r4;
        int i1, i2, i3, i4, $i9, $i11, $i13, $i14, $i16, $i18, $i23, $i24;
        byte $b5, $b7, $b10, $b17, $b19, $b26;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: android.renderscript.FieldPacker;

        l0 := @parameter0: long;

        $b5 = l0 cmp 0L;

        if $b5 < 0 goto label1;

        $b7 = l0 cmp 4294967295L;

        if $b7 <= 0 goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU32( ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r9);

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r10;

     label2:
        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(4);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i9 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i9;

        $l8 = l0 & 255L;

        $i11 = (int) $l8;

        $b10 = (byte) $i11;

        r1[i1] = $b10;

        r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i13 = i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i13;

        $l12 = l0 >> 8;

        $l15 = 255L & $l12;

        $i14 = (int) $l15;

        $b17 = (byte) $i14;

        r2[i2] = $b17;

        r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i3 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i16 = i3 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i16;

        $l20 = l0 >> 16;

        $l21 = 255L & $l20;

        $i18 = (int) $l21;

        $b19 = (byte) $i18;

        r3[i3] = $b19;

        r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i4 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i24 = i4 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i24;

        $l25 = l0 >> 24;

        $l22 = 255L & $l25;

        $i23 = (int) $l22;

        $b26 = (byte) $i23;

        r4[i4] = $b26;

        return;
    }

    public void addU32(android.renderscript.Long2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long2;

        $l0 = r1.<android.renderscript.Long2: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.renderscript.Long2: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l1);

        return;
    }

    public void addU32(android.renderscript.Long3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long3;

        $l0 = r1.<android.renderscript.Long3: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.renderscript.Long3: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l1);

        $l2 = r1.<android.renderscript.Long3: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l2);

        return;
    }

    public void addU32(android.renderscript.Long4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long4;

        $l0 = r1.<android.renderscript.Long4: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l0);

        $l1 = r1.<android.renderscript.Long4: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l1);

        $l2 = r1.<android.renderscript.Long4: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l2);

        $l3 = r1.<android.renderscript.Long4: long w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU32(long)>($l3);

        return;
    }

    public void addU64(long)
    {
        android.renderscript.FieldPacker r0;
        long l0, $l10, $l14, $l17, $l20, $l21, $l23, $l28, $l32, $l33, $l34, $l37, $l38, $l39, $l42, $l48;
        byte[] r1, r2, r3, r4, r5, r6, r7, r8;
        int i1, i2, i3, i4, i5, i6, i7, i9, $i11, $i13, $i15, $i16, $i18, $i22, $i24, $i27, $i29, $i30, $i35, $i36, $i40, $i43, $i45, $i47;
        byte $b8, $b12, $b19, $b25, $b26, $b31, $b41, $b44, $b46;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.String $r13;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: android.renderscript.FieldPacker;

        l0 := @parameter0: long;

        $b8 = l0 cmp 0L;

        if $b8 >= 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU64( ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r13);

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r14;

     label1:
        virtualinvoke r0.<android.renderscript.FieldPacker: void align(int)>(8);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i11 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i11;

        $l10 = l0 & 255L;

        $i13 = (int) $l10;

        $b12 = (byte) $i13;

        r1[i1] = $b12;

        r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i15 = i2 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i15;

        $l14 = l0 >> 8;

        $l17 = 255L & $l14;

        $i16 = (int) $l17;

        $b19 = (byte) $i16;

        r2[i2] = $b19;

        r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i3 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i18 = i3 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i18;

        $l21 = l0 >> 16;

        $l20 = 255L & $l21;

        $i24 = (int) $l20;

        $b25 = (byte) $i24;

        r3[i3] = $b25;

        r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i4 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i22 = i4 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i22;

        $l23 = l0 >> 24;

        $l28 = 255L & $l23;

        $i29 = (int) $l28;

        $b26 = (byte) $i29;

        r4[i4] = $b26;

        r5 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i5 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i27 = i5 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i27;

        $l32 = l0 >> 32;

        $l33 = 255L & $l32;

        $i30 = (int) $l33;

        $b31 = (byte) $i30;

        r5[i5] = $b31;

        r6 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i6 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i36 = i6 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i36;

        $l37 = l0 >> 40;

        $l34 = 255L & $l37;

        $i35 = (int) $l34;

        $b41 = (byte) $i35;

        r6[i6] = $b41;

        r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i40 = i7 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i40;

        $l39 = l0 >> 48;

        $l38 = 255L & $l39;

        $i45 = (int) $l38;

        $b44 = (byte) $i45;

        r7[i7] = $b44;

        r8 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i9 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i43 = i9 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i43;

        $l42 = l0 >> 56;

        $l48 = 255L & $l42;

        $i47 = (int) $l48;

        $b46 = (byte) $i47;

        r8[i9] = $b46;

        return;
    }

    public void addU64(android.renderscript.Long2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long2;

        $l0 = r1.<android.renderscript.Long2: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.renderscript.Long2: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l1);

        return;
    }

    public void addU64(android.renderscript.Long3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long3;

        $l0 = r1.<android.renderscript.Long3: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.renderscript.Long3: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l1);

        $l2 = r1.<android.renderscript.Long3: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l2);

        return;
    }

    public void addU64(android.renderscript.Long4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Long4;

        $l0 = r1.<android.renderscript.Long4: long x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l0);

        $l1 = r1.<android.renderscript.Long4: long y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l1);

        $l2 = r1.<android.renderscript.Long4: long z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l2);

        $l3 = r1.<android.renderscript.Long4: long w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU64(long)>($l3);

        return;
    }

    public void addU8(android.renderscript.Short2)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short2 r1;
        short $s0, $s1;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short2;

        $s0 = r1.<android.renderscript.Short2: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.renderscript.Short2: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s1);

        return;
    }

    public void addU8(android.renderscript.Short3)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short3 r1;
        short $s0, $s1, $s2;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short3;

        $s0 = r1.<android.renderscript.Short3: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.renderscript.Short3: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s1);

        $s2 = r1.<android.renderscript.Short3: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s2);

        return;
    }

    public void addU8(android.renderscript.Short4)
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short4 r1;
        short $s0, $s1, $s2, $s3;

        r0 := @this: android.renderscript.FieldPacker;

        r1 := @parameter0: android.renderscript.Short4;

        $s0 = r1.<android.renderscript.Short4: short x>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s0);

        $s1 = r1.<android.renderscript.Short4: short y>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s1);

        $s2 = r1.<android.renderscript.Short4: short z>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s2);

        $s3 = r1.<android.renderscript.Short4: short w>;

        virtualinvoke r0.<android.renderscript.FieldPacker: void addU8(short)>($s3);

        return;
    }

    public void addU8(short)
    {
        android.renderscript.FieldPacker r0;
        short s0;
        byte[] r1;
        int i1, $i3;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.IllegalArgumentException $r7;
        byte $b4;

        r0 := @this: android.renderscript.FieldPacker;

        s0 := @parameter0: short;

        if s0 < 0 goto label1;

        if s0 <= 255 goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FieldPacker.addU8( ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(s0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("rs", $r6);

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Saving value out of range for type");

        throw $r7;

     label2:
        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i3;

        $b4 = (byte) s0;

        r1[i1] = $b4;

        return;
    }

    public void align(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte[] r1;
        android.renderscript.RSIllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.util.BitSet $r7;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i2 = i0 - 1;

        $i3 = i0 & $i2;

        if $i3 == 0 goto label2;

     label1:
        $r2 = new android.renderscript.RSIllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("argument must be a non-negative non-zero power of 2: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        $i5 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i4 = i0 - 1;

        $i6 = $i5 & $i4;

        if $i6 == 0 goto label3;

        $r7 = r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment>;

        $i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        virtualinvoke $r7.<java.util.BitSet: void flip(int)>($i7);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i8 = i1 + 1;

        r0.<android.renderscript.FieldPacker: int mPos> = $i8;

        r1[i1] = 0;

        goto label2;

     label3:
        return;
    }

    public final byte[] getData()
    {
        android.renderscript.FieldPacker r0;
        byte[] $r1;

        r0 := @this: android.renderscript.FieldPacker;

        $r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        return $r1;
    }

    public void reset()
    {
        android.renderscript.FieldPacker r0;

        r0 := @this: android.renderscript.FieldPacker;

        r0.<android.renderscript.FieldPacker: int mPos> = 0;

        return;
    }

    public void reset(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1;
        android.renderscript.RSIllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<android.renderscript.FieldPacker: int mLen>;

        if i0 < $i1 goto label2;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of range argument: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        r0.<android.renderscript.FieldPacker: int mPos> = i0;

        return;
    }

    public void skip(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, i1, $i2, $i3;
        android.renderscript.RSIllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $i2 = r0.<android.renderscript.FieldPacker: int mPos>;

        i1 = i0 + $i2;

        if i1 < 0 goto label1;

        $i3 = r0.<android.renderscript.FieldPacker: int mLen>;

        if i1 <= $i3 goto label2;

     label1:
        $r1 = new android.renderscript.RSIllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("out of range argument: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        r0.<android.renderscript.FieldPacker: int mPos> = i1;

        return;
    }

    public boolean subBoolean()
    {
        android.renderscript.FieldPacker r0;
        byte $b0;

        r0 := @this: android.renderscript.FieldPacker;

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        if $b0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.renderscript.Byte2 subByte2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte2 r1, $r2;
        byte $b0, $b1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Byte2;

        specialinvoke $r2.<android.renderscript.Byte2: void <init>()>();

        r1 = $r2;

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte2: byte y> = $b0;

        $b1 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte2: byte x> = $b1;

        return r1;
    }

    public android.renderscript.Byte3 subByte3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte3 r1, $r2;
        byte $b0, $b1, $b2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Byte3;

        specialinvoke $r2.<android.renderscript.Byte3: void <init>()>();

        r1 = $r2;

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte3: byte z> = $b0;

        $b1 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte3: byte y> = $b1;

        $b2 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte3: byte x> = $b2;

        return r1;
    }

    public android.renderscript.Byte4 subByte4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Byte4 r1, $r2;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Byte4;

        specialinvoke $r2.<android.renderscript.Byte4: void <init>()>();

        r1 = $r2;

        $b0 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte4: byte w> = $b0;

        $b1 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte4: byte z> = $b1;

        $b2 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte4: byte y> = $b2;

        $b3 = virtualinvoke r0.<android.renderscript.FieldPacker: byte subI8()>();

        r1.<android.renderscript.Byte4: byte x> = $b3;

        return r1;
    }

    public android.renderscript.Double2 subDouble2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double2 r1, $r2;
        double $d0, $d1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Double2;

        specialinvoke $r2.<android.renderscript.Double2: void <init>()>();

        r1 = $r2;

        $d0 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double2: double y> = $d0;

        $d1 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double2: double x> = $d1;

        return r1;
    }

    public android.renderscript.Double3 subDouble3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double3 r1, $r2;
        double $d0, $d1, $d2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Double3;

        specialinvoke $r2.<android.renderscript.Double3: void <init>()>();

        r1 = $r2;

        $d0 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double3: double z> = $d0;

        $d1 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double3: double y> = $d1;

        $d2 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double3: double x> = $d2;

        return r1;
    }

    public android.renderscript.Double4 subDouble4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Double4 r1, $r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Double4;

        specialinvoke $r2.<android.renderscript.Double4: void <init>()>();

        r1 = $r2;

        $d0 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double4: double w> = $d0;

        $d1 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double4: double z> = $d1;

        $d2 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double4: double y> = $d2;

        $d3 = virtualinvoke r0.<android.renderscript.FieldPacker: double subF64()>();

        r1.<android.renderscript.Double4: double x> = $d3;

        return r1;
    }

    public float subF32()
    {
        android.renderscript.FieldPacker r0;
        int $i0;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        $f0 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i0);

        return $f0;
    }

    public double subF64()
    {
        android.renderscript.FieldPacker r0;
        long $l0;
        double $d0;

        r0 := @this: android.renderscript.FieldPacker;

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        return $d0;
    }

    public android.renderscript.Float2 subFloat2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float2 r1, $r2;
        float $f0, $f1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Float2;

        specialinvoke $r2.<android.renderscript.Float2: void <init>()>();

        r1 = $r2;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float2: float y> = $f0;

        $f1 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float2: float x> = $f1;

        return r1;
    }

    public android.renderscript.Float3 subFloat3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float3 r1, $r2;
        float $f0, $f1, $f2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Float3;

        specialinvoke $r2.<android.renderscript.Float3: void <init>()>();

        r1 = $r2;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float3: float z> = $f0;

        $f1 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float3: float y> = $f1;

        $f2 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float3: float x> = $f2;

        return r1;
    }

    public android.renderscript.Float4 subFloat4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Float4 r1, $r2;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Float4;

        specialinvoke $r2.<android.renderscript.Float4: void <init>()>();

        r1 = $r2;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float4: float w> = $f0;

        $f1 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float4: float z> = $f1;

        $f2 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float4: float y> = $f2;

        $f3 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        r1.<android.renderscript.Float4: float x> = $f3;

        return r1;
    }

    public short subI16()
    {
        android.renderscript.FieldPacker r0;
        byte[] r1, r2;
        int i0, i2, $i3, $i6, $i7;
        short s1, $s5, $s9, $s10, $s11, $s12;
        byte $b4, $b8;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(2);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i3 = r0.<android.renderscript.FieldPacker: int mPos>;

        i0 = -1 + $i3;

        r0.<android.renderscript.FieldPacker: int mPos> = i0;

        $b4 = r1[i0];

        $s5 = 255 & $b4;

        $i6 = $s5 << 8;

        s1 = (short) $i6;

        r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        i2 = -1 + $i7;

        r0.<android.renderscript.FieldPacker: int mPos> = i2;

        $b8 = r2[i2];

        $s9 = 255 & $b8;

        $s10 = (short) $s9;

        $s11 = s1 | $s10;

        $s12 = (short) $s11;

        return $s12;
    }

    public int subI32()
    {
        android.renderscript.FieldPacker r0;
        byte[] r1, r2, r3, r4;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i10, $i13, $i14, $i17, $i18, $i21;
        byte $b8, $b12, $b16, $b20;
        short $s9, $s11, $s15, $s19;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(4);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        i0 = -1 + $i7;

        r0.<android.renderscript.FieldPacker: int mPos> = i0;

        $b8 = r1[i0];

        $s9 = 255 & $b8;

        i1 = $s9 << 24;

        r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i10 = r0.<android.renderscript.FieldPacker: int mPos>;

        i2 = -1 + $i10;

        r0.<android.renderscript.FieldPacker: int mPos> = i2;

        $b12 = r2[i2];

        $s11 = 255 & $b12;

        $i14 = $s11 << 16;

        i3 = i1 | $i14;

        r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i13 = r0.<android.renderscript.FieldPacker: int mPos>;

        i4 = -1 + $i13;

        r0.<android.renderscript.FieldPacker: int mPos> = i4;

        $b16 = r3[i4];

        $s15 = 255 & $b16;

        $i18 = $s15 << 8;

        i5 = i3 | $i18;

        r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i17 = r0.<android.renderscript.FieldPacker: int mPos>;

        i6 = -1 + $i17;

        r0.<android.renderscript.FieldPacker: int mPos> = i6;

        $b20 = r4[i6];

        $s19 = 255 & $b20;

        $i21 = i5 | $s19;

        return $i21;
    }

    public long subI64()
    {
        android.renderscript.FieldPacker r0;
        byte[] r1, r2, r3, r4, r5, r6, r7, r8;
        int i0, i2, i4, i6, i9, i11, i13, $i14, i15, $i22, $i27, $i28, $i32, $i43, $i46, $i53;
        long l1, l3, l5, l7, l8, l10, l12, $l16, $l17, $l19, $l20, $l21, $l25, $l26, $l30, $l31, $l33, $l34, $l35, $l36, $l37, $l38, $l40, $l41, $l44, $l47, $l48, $l49, $l50, $l51, $l52;
        byte $b18, $b23, $b24, $b29, $b39, $b42, $b45, $b54;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(8);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i14 = r0.<android.renderscript.FieldPacker: int mPos>;

        i0 = -1 + $i14;

        r0.<android.renderscript.FieldPacker: int mPos> = i0;

        $b18 = r1[i0];

        $l19 = (long) $b18;

        $l16 = 255L & $l19;

        $l17 = $l16 << 56;

        l1 = 0L | $l17;

        r2 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i22 = r0.<android.renderscript.FieldPacker: int mPos>;

        i2 = -1 + $i22;

        r0.<android.renderscript.FieldPacker: int mPos> = i2;

        $b23 = r2[i2];

        $l20 = (long) $b23;

        $l21 = 255L & $l20;

        $l26 = $l21 << 48;

        l3 = l1 | $l26;

        r3 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i27 = r0.<android.renderscript.FieldPacker: int mPos>;

        i4 = -1 + $i27;

        r0.<android.renderscript.FieldPacker: int mPos> = i4;

        $b24 = r3[i4];

        $l25 = (long) $b24;

        $l30 = 255L & $l25;

        $l31 = $l30 << 40;

        l5 = l3 | $l31;

        r4 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i28 = r0.<android.renderscript.FieldPacker: int mPos>;

        i6 = -1 + $i28;

        r0.<android.renderscript.FieldPacker: int mPos> = i6;

        $b29 = r4[i6];

        $l35 = (long) $b29;

        $l34 = 255L & $l35;

        $l33 = $l34 << 32;

        l7 = l5 | $l33;

        r5 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i32 = r0.<android.renderscript.FieldPacker: int mPos>;

        i9 = -1 + $i32;

        r0.<android.renderscript.FieldPacker: int mPos> = i9;

        $b39 = r5[i9];

        $l38 = (long) $b39;

        $l37 = 255L & $l38;

        $l36 = $l37 << 24;

        l8 = l7 | $l36;

        r6 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i43 = r0.<android.renderscript.FieldPacker: int mPos>;

        i11 = -1 + $i43;

        r0.<android.renderscript.FieldPacker: int mPos> = i11;

        $b42 = r6[i11];

        $l41 = (long) $b42;

        $l40 = 255L & $l41;

        $l47 = $l40 << 16;

        l10 = l8 | $l47;

        r7 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i46 = r0.<android.renderscript.FieldPacker: int mPos>;

        i13 = -1 + $i46;

        r0.<android.renderscript.FieldPacker: int mPos> = i13;

        $b45 = r7[i13];

        $l44 = (long) $b45;

        $l51 = 255L & $l44;

        $l52 = $l51 << 8;

        l12 = l10 | $l52;

        r8 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i53 = r0.<android.renderscript.FieldPacker: int mPos>;

        i15 = -1 + $i53;

        r0.<android.renderscript.FieldPacker: int mPos> = i15;

        $b54 = r8[i15];

        $l48 = (long) $b54;

        $l49 = 255L & $l48;

        $l50 = l12 | $l49;

        return $l50;
    }

    public byte subI8()
    {
        android.renderscript.FieldPacker r0;
        byte[] r1;
        int i0, $i1;
        byte $b2;

        r0 := @this: android.renderscript.FieldPacker;

        virtualinvoke r0.<android.renderscript.FieldPacker: void subalign(int)>(1);

        r1 = r0.<android.renderscript.FieldPacker: byte[] mData>;

        $i1 = r0.<android.renderscript.FieldPacker: int mPos>;

        i0 = -1 + $i1;

        r0.<android.renderscript.FieldPacker: int mPos> = i0;

        $b2 = r1[i0];

        return $b2;
    }

    public android.renderscript.Int2 subInt2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int2 r1, $r2;
        int $i0, $i1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Int2;

        specialinvoke $r2.<android.renderscript.Int2: void <init>()>();

        r1 = $r2;

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int2: int y> = $i0;

        $i1 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int2: int x> = $i1;

        return r1;
    }

    public android.renderscript.Int3 subInt3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int3 r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Int3;

        specialinvoke $r2.<android.renderscript.Int3: void <init>()>();

        r1 = $r2;

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int3: int z> = $i0;

        $i1 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int3: int y> = $i1;

        $i2 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int3: int x> = $i2;

        return r1;
    }

    public android.renderscript.Int4 subInt4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Int4 r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Int4;

        specialinvoke $r2.<android.renderscript.Int4: void <init>()>();

        r1 = $r2;

        $i0 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int4: int w> = $i0;

        $i1 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int4: int z> = $i1;

        $i2 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int4: int y> = $i2;

        $i3 = virtualinvoke r0.<android.renderscript.FieldPacker: int subI32()>();

        r1.<android.renderscript.Int4: int x> = $i3;

        return r1;
    }

    public android.renderscript.Long2 subLong2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long2 r1, $r2;
        long $l0, $l1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Long2;

        specialinvoke $r2.<android.renderscript.Long2: void <init>()>();

        r1 = $r2;

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long2: long y> = $l0;

        $l1 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long2: long x> = $l1;

        return r1;
    }

    public android.renderscript.Long3 subLong3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long3 r1, $r2;
        long $l0, $l1, $l2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Long3;

        specialinvoke $r2.<android.renderscript.Long3: void <init>()>();

        r1 = $r2;

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long3: long z> = $l0;

        $l1 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long3: long y> = $l1;

        $l2 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long3: long x> = $l2;

        return r1;
    }

    public android.renderscript.Long4 subLong4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Long4 r1, $r2;
        long $l0, $l1, $l2, $l3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Long4;

        specialinvoke $r2.<android.renderscript.Long4: void <init>()>();

        r1 = $r2;

        $l0 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long4: long w> = $l0;

        $l1 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long4: long z> = $l1;

        $l2 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long4: long y> = $l2;

        $l3 = virtualinvoke r0.<android.renderscript.FieldPacker: long subI64()>();

        r1.<android.renderscript.Long4: long x> = $l3;

        return r1;
    }

    public android.renderscript.Matrix2f subMatrix2f()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix2f r1, $r2;
        int i0, $i1;
        float[] $r3, $r4;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Matrix2f;

        specialinvoke $r2.<android.renderscript.Matrix2f: void <init>()>();

        r1 = $r2;

        $r3 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $i1 = lengthof $r3;

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r4 = r1.<android.renderscript.Matrix2f: float[] mMat>;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r4[i0] = $f0;

        i0 = i0 + -1;

        goto label1;

     label2:
        return r1;
    }

    public android.renderscript.Matrix3f subMatrix3f()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix3f r1, $r2;
        int i0, $i1;
        float[] $r3, $r4;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Matrix3f;

        specialinvoke $r2.<android.renderscript.Matrix3f: void <init>()>();

        r1 = $r2;

        $r3 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $i1 = lengthof $r3;

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r4 = r1.<android.renderscript.Matrix3f: float[] mMat>;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r4[i0] = $f0;

        i0 = i0 + -1;

        goto label1;

     label2:
        return r1;
    }

    public android.renderscript.Matrix4f subMatrix4f()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Matrix4f r1, $r2;
        int i0, $i1;
        float[] $r3, $r4;
        float $f0;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Matrix4f;

        specialinvoke $r2.<android.renderscript.Matrix4f: void <init>()>();

        r1 = $r2;

        $r3 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $i1 = lengthof $r3;

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r4 = r1.<android.renderscript.Matrix4f: float[] mMat>;

        $f0 = virtualinvoke r0.<android.renderscript.FieldPacker: float subF32()>();

        $r4[i0] = $f0;

        i0 = i0 + -1;

        goto label1;

     label2:
        return r1;
    }

    public android.renderscript.Short2 subShort2()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short2 r1, $r2;
        short $s0, $s1;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Short2;

        specialinvoke $r2.<android.renderscript.Short2: void <init>()>();

        r1 = $r2;

        $s0 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short2: short y> = $s0;

        $s1 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short2: short x> = $s1;

        return r1;
    }

    public android.renderscript.Short3 subShort3()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short3 r1, $r2;
        short $s0, $s1, $s2;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Short3;

        specialinvoke $r2.<android.renderscript.Short3: void <init>()>();

        r1 = $r2;

        $s0 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short3: short z> = $s0;

        $s1 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short3: short y> = $s1;

        $s2 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short3: short x> = $s2;

        return r1;
    }

    public android.renderscript.Short4 subShort4()
    {
        android.renderscript.FieldPacker r0;
        android.renderscript.Short4 r1, $r2;
        short $s0, $s1, $s2, $s3;

        r0 := @this: android.renderscript.FieldPacker;

        $r2 = new android.renderscript.Short4;

        specialinvoke $r2.<android.renderscript.Short4: void <init>()>();

        r1 = $r2;

        $s0 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short4: short w> = $s0;

        $s1 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short4: short z> = $s1;

        $s2 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short4: short y> = $s2;

        $s3 = virtualinvoke r0.<android.renderscript.FieldPacker: short subI16()>();

        r1.<android.renderscript.Short4: short x> = $s3;

        return r1;
    }

    public void subalign(int)
    {
        android.renderscript.FieldPacker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.BitSet $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r5, $r6;
        android.renderscript.RSIllegalArgumentException $r4;
        java.lang.String $r7;

        r0 := @this: android.renderscript.FieldPacker;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label1;

        $r4 = new android.renderscript.RSIllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("argument must be a non-negative non-zero power of 2: ");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r4;

     label1:
        $i4 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i3 = i0 - 1;

        $i5 = $i4 & $i3;

        if $i5 == 0 goto label2;

        $i13 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i12 = -1 + $i13;

        r0.<android.renderscript.FieldPacker: int mPos> = $i12;

        goto label1;

     label2:
        $i6 = r0.<android.renderscript.FieldPacker: int mPos>;

        if $i6 <= 0 goto label4;

     label3:
        $r1 = r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment>;

        $i7 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i8 = -1 + $i7;

        $z0 = virtualinvoke $r1.<java.util.BitSet: boolean get(int)>($i8);

        if $z0 != 1 goto label4;

        $i9 = r0.<android.renderscript.FieldPacker: int mPos>;

        $i10 = -1 + $i9;

        r0.<android.renderscript.FieldPacker: int mPos> = $i10;

        $r2 = r0.<android.renderscript.FieldPacker: java.util.BitSet mAlignment>;

        $i11 = r0.<android.renderscript.FieldPacker: int mPos>;

        virtualinvoke $r2.<java.util.BitSet: void flip(int)>($i11);

        goto label3;

     label4:
        return;
    }
}
