class android.view.AccessibilityIterators$CharacterTextSegmentIterator extends android.view.AccessibilityIterators$AbstractTextSegmentIterator implements android.content.ComponentCallbacks
{
    private static android.view.AccessibilityIterators$CharacterTextSegmentIterator sInstance;
    protected java.text.BreakIterator mImpl;
    private java.util.Locale mLocale;

    private void <init>(java.util.Locale)
    {
        android.view.AccessibilityIterators$CharacterTextSegmentIterator r0;
        java.util.Locale r1;

        r0 := @this: android.view.AccessibilityIterators$CharacterTextSegmentIterator;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<android.view.AccessibilityIterators$AbstractTextSegmentIterator: void <init>()>();

        r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.util.Locale mLocale> = r1;

        virtualinvoke r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void onLocaleChanged(java.util.Locale)>(r1);

        staticinvoke <android.view.ViewRootImpl: void addConfigCallback(android.content.ComponentCallbacks)>(r0);

        return;
    }

    void <init>(java.util.Locale, android.view.AccessibilityIterators$1)
    {
        android.view.AccessibilityIterators$CharacterTextSegmentIterator r0;
        java.util.Locale r1;
        android.view.AccessibilityIterators$1 r2;

        r0 := @this: android.view.AccessibilityIterators$CharacterTextSegmentIterator;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: android.view.AccessibilityIterators$1;

        specialinvoke r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void <init>(java.util.Locale)>(r1);

        return;
    }

    public static android.view.AccessibilityIterators$CharacterTextSegmentIterator getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        android.view.AccessibilityIterators$CharacterTextSegmentIterator $r1, $r2, $r3;

        r0 := @parameter0: java.util.Locale;

        $r1 = <android.view.AccessibilityIterators$CharacterTextSegmentIterator: android.view.AccessibilityIterators$CharacterTextSegmentIterator sInstance>;

        if $r1 != null goto label1;

        $r3 = new android.view.AccessibilityIterators$CharacterTextSegmentIterator;

        specialinvoke $r3.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void <init>(java.util.Locale)>(r0);

        <android.view.AccessibilityIterators$CharacterTextSegmentIterator: android.view.AccessibilityIterators$CharacterTextSegmentIterator sInstance> = $r3;

     label1:
        $r2 = <android.view.AccessibilityIterators$CharacterTextSegmentIterator: android.view.AccessibilityIterators$CharacterTextSegmentIterator sInstance>;

        return $r2;
    }

    public int[] following(int)
    {
        android.view.AccessibilityIterators$CharacterTextSegmentIterator r0;
        int i0, i1, i2, i3;
        java.lang.String $r1;
        java.text.BreakIterator $r2, $r3, $r5;
        boolean $z0;
        int[] $r4;

        r0 := @this: android.view.AccessibilityIterators$CharacterTextSegmentIterator;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.lang.String mText>;

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i1 > 0 goto label2;

     label1:
        return null;

     label2:
        if i0 >= i1 goto label1;

        i2 = i0;

        if i2 >= 0 goto label3;

        i2 = 0;

     label3:
        $r2 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.text.BreakIterator mImpl>;

        $z0 = virtualinvoke $r2.<java.text.BreakIterator: boolean isBoundary(int)>(i2);

        if $z0 != 0 goto label4;

        $r5 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.text.BreakIterator mImpl>;

        i2 = virtualinvoke $r5.<java.text.BreakIterator: int following(int)>(i2);

        if i2 != -1 goto label3;

        return null;

     label4:
        $r3 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.text.BreakIterator mImpl>;

        i3 = virtualinvoke $r3.<java.text.BreakIterator: int following(int)>(i2);

        if i3 == -1 goto label1;

        $r4 = virtualinvoke r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: int[] getRange(int,int)>(i2, i3);

        return $r4;
    }

    public void initialize(java.lang.String)
    {
        android.view.AccessibilityIterators$CharacterTextSegmentIterator r0;
        java.lang.String r1;
        java.text.BreakIterator $r2;

        r0 := @this: android.view.AccessibilityIterators$CharacterTextSegmentIterator;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.view.AccessibilityIterators$AbstractTextSegmentIterator: void initialize(java.lang.String)>(r1);

        $r2 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.text.BreakIterator mImpl>;

        virtualinvoke $r2.<java.text.BreakIterator: void setText(java.lang.String)>(r1);

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.view.AccessibilityIterators$CharacterTextSegmentIterator r0;
        android.content.res.Configuration r1;
        java.util.Locale r2, $r3;
        boolean $z0;

        r0 := @this: android.view.AccessibilityIterators$CharacterTextSegmentIterator;

        r1 := @parameter0: android.content.res.Configuration;

        r2 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        $r3 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.util.Locale mLocale>;

        $z0 = virtualinvoke $r3.<java.util.Locale: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.util.Locale mLocale> = r2;

        virtualinvoke r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: void onLocaleChanged(java.util.Locale)>(r2);

     label1:
        return;
    }

    protected void onLocaleChanged(java.util.Locale)
    {
        android.view.AccessibilityIterators$CharacterTextSegmentIterator r0;
        java.util.Locale r1;
        java.text.BreakIterator $r2;

        r0 := @this: android.view.AccessibilityIterators$CharacterTextSegmentIterator;

        r1 := @parameter0: java.util.Locale;

        $r2 = staticinvoke <java.text.BreakIterator: java.text.BreakIterator getCharacterInstance(java.util.Locale)>(r1);

        r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.text.BreakIterator mImpl> = $r2;

        return;
    }

    public void onLowMemory()
    {
        android.view.AccessibilityIterators$CharacterTextSegmentIterator r0;

        r0 := @this: android.view.AccessibilityIterators$CharacterTextSegmentIterator;

        return;
    }

    public int[] preceding(int)
    {
        android.view.AccessibilityIterators$CharacterTextSegmentIterator r0;
        int i0, i1, i2, i3;
        java.lang.String $r1;
        java.text.BreakIterator $r2, $r3, $r5;
        boolean $z0;
        int[] $r4;

        r0 := @this: android.view.AccessibilityIterators$CharacterTextSegmentIterator;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.lang.String mText>;

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if i1 > 0 goto label2;

     label1:
        return null;

     label2:
        if i0 <= 0 goto label1;

        i2 = i0;

        if i2 <= i1 goto label3;

        i2 = i1;

     label3:
        $r2 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.text.BreakIterator mImpl>;

        $z0 = virtualinvoke $r2.<java.text.BreakIterator: boolean isBoundary(int)>(i2);

        if $z0 != 0 goto label4;

        $r5 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.text.BreakIterator mImpl>;

        i2 = virtualinvoke $r5.<java.text.BreakIterator: int preceding(int)>(i2);

        if i2 != -1 goto label3;

        return null;

     label4:
        $r3 = r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: java.text.BreakIterator mImpl>;

        i3 = virtualinvoke $r3.<java.text.BreakIterator: int preceding(int)>(i2);

        if i3 == -1 goto label1;

        $r4 = virtualinvoke r0.<android.view.AccessibilityIterators$CharacterTextSegmentIterator: int[] getRange(int,int)>(i3, i2);

        return $r4;
    }
}
