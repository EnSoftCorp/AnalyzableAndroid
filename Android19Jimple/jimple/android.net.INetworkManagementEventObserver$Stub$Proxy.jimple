class android.net.INetworkManagementEventObserver$Stub$Proxy extends java.lang.Object implements android.net.INetworkManagementEventObserver
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public void addressRemoved(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        java.lang.String r1, r2;
        int i0, i1;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r6 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void addressUpdated(java.lang.String, java.lang.String, int, int) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        java.lang.String r1, r2;
        int i0, i1;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        $r6 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        $r1 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        return "android.net.INetworkManagementEventObserver";
    }

    public void interfaceAdded(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void interfaceClassDataActivityChanged(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        java.lang.String r1;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        byte b0;
        android.os.IBinder $r5;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        b0 = 0;

        if z0 == 0 goto label3;

        b0 = 1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void interfaceLinkStateChanged(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        java.lang.String r1;
        boolean z0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        byte b0;
        android.os.IBinder $r5;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        b0 = 0;

        if z0 == 0 goto label3;

        b0 = 1;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void interfaceRemoved(java.lang.String) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void interfaceStatusChanged(java.lang.String, boolean) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        java.lang.String r1;
        boolean z0;
        byte b0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        b0 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if z0 == 0 goto label5;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label5:
        b0 = 0;

        goto label3;

     label6:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public void limitReached(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.net.INetworkManagementEventObserver$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.net.INetworkManagementEventObserver$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkManagementEventObserver");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.net.INetworkManagementEventObserver$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
