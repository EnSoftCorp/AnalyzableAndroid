abstract class android.speech.tts.TextToSpeechService$SpeechItem extends java.lang.Object
{
    private final java.lang.Object mCallerIdentity;
    private final int mCallerPid;
    private final int mCallerUid;
    protected final android.os.Bundle mParams;
    private boolean mStarted;
    private boolean mStopped;
    final android.speech.tts.TextToSpeechService this$0;

    public void <init>(android.speech.tts.TextToSpeechService, java.lang.Object, int, int, android.os.Bundle)
    {
        android.speech.tts.TextToSpeechService$SpeechItem r0;
        android.speech.tts.TextToSpeechService r1;
        java.lang.Object r2;
        int i0, i1;
        android.os.Bundle r3;

        r0 := @this: android.speech.tts.TextToSpeechService$SpeechItem;

        r1 := @parameter0: android.speech.tts.TextToSpeechService;

        r2 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.os.Bundle;

        r0.<android.speech.tts.TextToSpeechService$SpeechItem: android.speech.tts.TextToSpeechService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.TextToSpeechService$SpeechItem: boolean mStarted> = 0;

        r0.<android.speech.tts.TextToSpeechService$SpeechItem: boolean mStopped> = 0;

        r0.<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.Object mCallerIdentity> = r2;

        r0.<android.speech.tts.TextToSpeechService$SpeechItem: android.os.Bundle mParams> = r3;

        r0.<android.speech.tts.TextToSpeechService$SpeechItem: int mCallerUid> = i0;

        r0.<android.speech.tts.TextToSpeechService$SpeechItem: int mCallerPid> = i1;

        return;
    }

    public java.lang.Object getCallerIdentity()
    {
        android.speech.tts.TextToSpeechService$SpeechItem r0;
        java.lang.Object $r1;

        r0 := @this: android.speech.tts.TextToSpeechService$SpeechItem;

        $r1 = r0.<android.speech.tts.TextToSpeechService$SpeechItem: java.lang.Object mCallerIdentity>;

        return $r1;
    }

    public int getCallerPid()
    {
        android.speech.tts.TextToSpeechService$SpeechItem r0;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeechService$SpeechItem;

        $i0 = r0.<android.speech.tts.TextToSpeechService$SpeechItem: int mCallerPid>;

        return $i0;
    }

    public int getCallerUid()
    {
        android.speech.tts.TextToSpeechService$SpeechItem r0;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeechService$SpeechItem;

        $i0 = r0.<android.speech.tts.TextToSpeechService$SpeechItem: int mCallerUid>;

        return $i0;
    }

    protected boolean isStopped()
    {
        android.speech.tts.TextToSpeechService$SpeechItem r0;
        java.lang.Throwable r1, $r2;
        boolean z0;

        r0 := @this: android.speech.tts.TextToSpeechService$SpeechItem;

        entermonitor r0;

     label1:
        z0 = r0.<android.speech.tts.TextToSpeechService$SpeechItem: boolean mStopped>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public abstract boolean isValid();

    public int play()
    {
        android.speech.tts.TextToSpeechService$SpeechItem r0;
        java.lang.Throwable r1, $r3;
        boolean $z0;
        int $i0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.speech.tts.TextToSpeechService$SpeechItem;

        entermonitor r0;

     label1:
        $z0 = r0.<android.speech.tts.TextToSpeechService$SpeechItem: boolean mStarted>;

        if $z0 == 0 goto label5;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("play() called twice");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        r1 = $r3;

     label3:
        exitmonitor r0;

     label4:
        throw r1;

     label5:
        r0.<android.speech.tts.TextToSpeechService$SpeechItem: boolean mStarted> = 1;

        exitmonitor r0;

     label6:
        $i0 = virtualinvoke r0.<android.speech.tts.TextToSpeechService$SpeechItem: int playImpl()>();

        return $i0;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    protected abstract int playImpl();

    public void stop()
    {
        android.speech.tts.TextToSpeechService$SpeechItem r0;
        java.lang.Throwable r1, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.speech.tts.TextToSpeechService$SpeechItem;

        entermonitor r0;

     label1:
        $z0 = r0.<android.speech.tts.TextToSpeechService$SpeechItem: boolean mStopped>;

        if $z0 == 0 goto label5;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("stop() called twice");

        throw $r2;

     label2:
        $r3 := @caughtexception;

        r1 = $r3;

     label3:
        exitmonitor r0;

     label4:
        throw r1;

     label5:
        r0.<android.speech.tts.TextToSpeechService$SpeechItem: boolean mStopped> = 1;

        exitmonitor r0;

     label6:
        virtualinvoke r0.<android.speech.tts.TextToSpeechService$SpeechItem: void stopImpl()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    protected abstract void stopImpl();
}
