public class com.android.internal.policy.impl.Policy extends java.lang.Object implements com.android.internal.policy.IPolicy
{
    private static final java.lang.String TAG;
    private static final java.lang.String[] preload_classes;

    static void <clinit>()
    {
        java.lang.String[] r0, $r3;
        int i0, i1;
        java.lang.String r1, $r9;
        java.lang.ClassNotFoundException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        <com.android.internal.policy.impl.Policy: java.lang.String TAG> = "PhonePolicy";

        $r3 = newarray (java.lang.String)[7];

        $r3[0] = "com.android.internal.policy.impl.PhoneLayoutInflater";

        $r3[1] = "com.android.internal.policy.impl.PhoneWindow";

        $r3[2] = "com.android.internal.policy.impl.PhoneWindow$1";

        $r3[3] = "com.android.internal.policy.impl.PhoneWindow$DialogMenuCallback";

        $r3[4] = "com.android.internal.policy.impl.PhoneWindow$DecorView";

        $r3[5] = "com.android.internal.policy.impl.PhoneWindow$PanelFeatureState";

        $r3[6] = "com.android.internal.policy.impl.PhoneWindow$PanelFeatureState$SavedState";

        <com.android.internal.policy.impl.Policy: java.lang.String[] preload_classes> = $r3;

        r0 = <com.android.internal.policy.impl.Policy: java.lang.String[] preload_classes>;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r1 = r0[i1];

     label2:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not preload class for phone policy: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PhonePolicy", $r9);

        goto label3;

     label5:
        return;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    public void <init>()
    {
        com.android.internal.policy.impl.Policy r0;

        r0 := @this: com.android.internal.policy.impl.Policy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public android.view.FallbackEventHandler makeNewFallbackEventHandler(android.content.Context)
    {
        com.android.internal.policy.impl.Policy r0;
        android.content.Context r1;
        com.android.internal.policy.impl.PhoneFallbackEventHandler $r2;

        r0 := @this: com.android.internal.policy.impl.Policy;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.internal.policy.impl.PhoneFallbackEventHandler;

        specialinvoke $r2.<com.android.internal.policy.impl.PhoneFallbackEventHandler: void <init>(android.content.Context)>(r1);

        return $r2;
    }

    public android.view.LayoutInflater makeNewLayoutInflater(android.content.Context)
    {
        com.android.internal.policy.impl.Policy r0;
        android.content.Context r1;
        com.android.internal.policy.impl.PhoneLayoutInflater $r2;

        r0 := @this: com.android.internal.policy.impl.Policy;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.internal.policy.impl.PhoneLayoutInflater;

        specialinvoke $r2.<com.android.internal.policy.impl.PhoneLayoutInflater: void <init>(android.content.Context)>(r1);

        return $r2;
    }

    public android.view.Window makeNewWindow(android.content.Context)
    {
        com.android.internal.policy.impl.Policy r0;
        android.content.Context r1;
        com.android.internal.policy.impl.PhoneWindow $r2;

        r0 := @this: com.android.internal.policy.impl.Policy;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.android.internal.policy.impl.PhoneWindow;

        specialinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: void <init>(android.content.Context)>(r1);

        return $r2;
    }

    public android.view.WindowManagerPolicy makeNewWindowManager()
    {
        com.android.internal.policy.impl.Policy r0;
        com.android.internal.policy.impl.PhoneWindowManager $r1;

        r0 := @this: com.android.internal.policy.impl.Policy;

        $r1 = new com.android.internal.policy.impl.PhoneWindowManager;

        specialinvoke $r1.<com.android.internal.policy.impl.PhoneWindowManager: void <init>()>();

        return $r1;
    }
}
