class android.net.sip.ISipService$Stub$Proxy extends java.lang.Object implements android.net.sip.ISipService
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        $r1 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void close(java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.sip.ISipSession createSession(android.net.sip.SipProfile, android.net.sip.ISipSessionListener) throws android.os.RemoteException
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        android.net.sip.SipProfile r1;
        android.net.sip.ISipSessionListener r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r10;
        android.os.IBinder r6, $r8, $r9;
        android.net.sip.ISipSession r7;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 := @parameter0: android.net.sip.SipProfile;

        r2 := @parameter1: android.net.sip.ISipSessionListener;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipService");

     label02:
        if r1 == null goto label08;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.sip.SipProfile: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        if r2 == null goto label11;

     label05:
        r6 = interfaceinvoke r2.<android.net.sip.ISipSessionListener: android.os.IBinder asBinder()>();

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        $r8 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $r9 = virtualinvoke r4.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r7 = staticinvoke <android.net.sip.ISipSession$Stub: android.net.sip.ISipSession asInterface(android.os.IBinder)>($r9);

     label07:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return r7;

     label08:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        goto label04;

     label10:
        $r10 := @caughtexception;

        r5 = $r10;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label11:
        r6 = null;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.sip.ISipService$Stub$Proxy r0;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        return "android.net.sip.ISipService";
    }

    public android.net.sip.SipProfile[] getListOfProfiles() throws android.os.RemoteException
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r8;
        android.net.sip.SipProfile[] r4;
        android.os.IBinder $r5;
        android.os.Parcelable$Creator $r6;
        java.lang.Object[] $r7;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipService");

        $r5 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $r6 = <android.net.sip.SipProfile: android.os.Parcelable$Creator CREATOR>;

        $r7 = virtualinvoke r2.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r6);

        r4 = (android.net.sip.SipProfile[]) $r7;

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.sip.ISipSession getPendingSession(java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r8;
        android.net.sip.ISipSession r5;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $r7 = virtualinvoke r3.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r5 = staticinvoke <android.net.sip.ISipSession$Stub: android.net.sip.ISipSession asInterface(android.os.IBinder)>($r7);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isOpened(java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0;
        boolean z0;
        android.os.IBinder $r5;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label2:
        z0 = 0;

        if i0 == 0 goto label3;

        z0 = 1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z0;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public boolean isRegistered(java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0;
        boolean z0;
        android.os.IBinder $r5;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipService");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label2:
        z0 = 0;

        if i0 == 0 goto label3;

        z0 = 1;

     label3:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return z0;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void open(android.net.sip.SipProfile) throws android.os.RemoteException
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        android.net.sip.SipProfile r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 := @parameter0: android.net.sip.SipProfile;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipService");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.sip.SipProfile: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r5 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void open3(android.net.sip.SipProfile, android.app.PendingIntent, android.net.sip.ISipSessionListener) throws android.os.RemoteException
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        android.net.sip.SipProfile r1;
        android.app.PendingIntent r2;
        android.net.sip.ISipSessionListener r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r9;
        android.os.IBinder r7, $r8;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 := @parameter0: android.net.sip.SipProfile;

        r2 := @parameter1: android.app.PendingIntent;

        r3 := @parameter2: android.net.sip.ISipSessionListener;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipService");

     label02:
        if r1 == null goto label10;

     label03:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.sip.SipProfile: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label04:
        if r2 == null goto label13;

     label05:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label06:
        if r3 == null goto label15;

     label07:
        r7 = interfaceinvoke r3.<android.net.sip.ISipSessionListener: android.os.IBinder asBinder()>();

     label08:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        $r8 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r8.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label09:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label10:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        goto label04;

     label12:
        $r9 := @caughtexception;

        r6 = $r9;

        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label13:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label14:
        goto label06;

     label15:
        r7 = null;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void setRegistrationListener(java.lang.String, android.net.sip.ISipSessionListener) throws android.os.RemoteException
    {
        android.net.sip.ISipService$Stub$Proxy r0;
        java.lang.String r1;
        android.net.sip.ISipSessionListener r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder r6, $r7;

        r0 := @this: android.net.sip.ISipService$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.sip.ISipSessionListener;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipService");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if r2 == null goto label6;

     label3:
        r6 = interfaceinvoke r2.<android.net.sip.ISipSessionListener: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        $r7 = r0.<android.net.sip.ISipService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label6:
        r6 = null;

        goto label4;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }
}
