final class android.graphics.drawable.GradientDrawable$GradientState extends android.graphics.drawable.Drawable$ConstantState
{
    private float mCenterX;
    private float mCenterY;
    public int mChangingConfigurations;
    public int[] mColors;
    public int mGradient;
    private float mGradientRadius;
    public boolean mHasSolidColor;
    public int mHeight;
    public int mInnerRadius;
    public float mInnerRadiusRatio;
    private boolean mOpaque;
    public android.graphics.drawable.GradientDrawable$Orientation mOrientation;
    public android.graphics.Rect mPadding;
    public float[] mPositions;
    public float mRadius;
    public float[] mRadiusArray;
    public int mShape;
    public int mSolidColor;
    public int mStrokeColor;
    public float mStrokeDashGap;
    public float mStrokeDashWidth;
    public int mStrokeWidth;
    public int[] mTempColors;
    public float[] mTempPositions;
    public int mThickness;
    public float mThicknessRatio;
    private boolean mUseLevel;
    private boolean mUseLevelForShape;
    public int mWidth;

    public void <init>(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.drawable.GradientDrawable$Orientation $r2;
        int[] $r3, $r15, $r17;
        float[] $r4, $r5, $r8, $r10, $r13, $r16;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.Rect $r6, $r7, $r9;
        java.lang.Object $r11, $r12, $r14;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = 0.5F;

        $i0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i0;

        $i1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = $i1;

        $i2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = $i2;

        $r2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r2;

        $r3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        if $r3 == null goto label1;

        $r17 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r14 = virtualinvoke $r17.<java.lang.Object: java.lang.Object clone()>();

        $r15 = (int[]) $r14;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors> = $r15;

     label1:
        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        if $r4 == null goto label2;

        $r10 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.Object clone()>();

        $r16 = (float[]) $r11;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions> = $r16;

     label2:
        $z0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mHasSolidColor>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mHasSolidColor> = $z0;

        $i3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mSolidColor>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mSolidColor> = $i3;

        $i4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = $i4;

        $i5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeColor>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeColor> = $i5;

        $f0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth> = $f0;

        $f1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap> = $f1;

        $f2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius> = $f2;

        $r5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if $r5 == null goto label3;

        $r8 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        $r12 = virtualinvoke $r8.<java.lang.Object: java.lang.Object clone()>();

        $r13 = (float[]) $r12;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray> = $r13;

     label3:
        $r6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        if $r6 == null goto label4;

        $r7 = new android.graphics.Rect;

        $r9 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        specialinvoke $r7.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r9);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding> = $r7;

     label4:
        $i6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = $i6;

        $i7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = $i7;

        $f3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio> = $f3;

        $f4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio> = $f4;

        $i8 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = $i8;

        $i9 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = $i9;

        $f5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = $f5;

        $f7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = $f7;

        $f6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = $f6;

        $z2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel> = $z2;

        $z1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape> = $z1;

        $z3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaque>;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaque> = $z3;

        return;
    }

    void <init>(android.graphics.drawable.GradientDrawable$Orientation, int[])
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        android.graphics.drawable.GradientDrawable$Orientation r1;
        int[] r2;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$Orientation;

        r2 := @parameter1: int[];

        specialinvoke r0.<android.graphics.drawable.Drawable$ConstantState: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = -1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = 0.5F;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = r1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void setColors(int[])>(r2);

        return;
    }

    static boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        boolean $z0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $z0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel>;

        return $z0;
    }

    static boolean access$002(android.graphics.drawable.GradientDrawable$GradientState, boolean)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        boolean z0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        z0 := @parameter1: boolean;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevel> = z0;

        return z0;
    }

    static boolean access$100(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        boolean $z0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $z0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape>;

        return $z0;
    }

    static boolean access$102(android.graphics.drawable.GradientDrawable$GradientState, boolean)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        boolean z0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        z0 := @parameter1: boolean;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mUseLevelForShape> = z0;

        return z0;
    }

    static boolean access$200(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        boolean $z0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $z0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaque>;

        return $z0;
    }

    static float access$300(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float $f0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $f0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX>;

        return $f0;
    }

    static float access$302(android.graphics.drawable.GradientDrawable$GradientState, float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float f0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        f0 := @parameter1: float;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = f0;

        return f0;
    }

    static float access$400(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float $f0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $f0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY>;

        return $f0;
    }

    static float access$402(android.graphics.drawable.GradientDrawable$GradientState, float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float f0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        f0 := @parameter1: float;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = f0;

        return f0;
    }

    static float access$500(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float $f0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $f0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius>;

        return $f0;
    }

    static float access$502(android.graphics.drawable.GradientDrawable$GradientState, float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float f0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        f0 := @parameter1: float;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = f0;

        return f0;
    }

    static void access$600(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;

        r0 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    private void computeOpacity()
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7;
        float $f0;
        byte $b2;
        float[] $r1;
        boolean $z0, $z1, $z2, $z3;
        int[] $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        $i1 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if $i1 == 0 goto label1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaque> = 0;

        return;

     label1:
        $f0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $b2 = $f0 cmpl 0.0F;

        if $b2 > 0 goto label2;

        $r1 = r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if $r1 == null goto label3;

     label2:
        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaque> = 0;

        return;

     label3:
        $i3 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        if $i3 <= 0 goto label4;

        $i7 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeColor>;

        $z3 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean isOpaque(int)>($i7);

        if $z3 != 0 goto label4;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaque> = 0;

        return;

     label4:
        $z0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mHasSolidColor>;

        if $z0 == 0 goto label5;

        $i6 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mSolidColor>;

        $z2 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean isOpaque(int)>($i6);

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaque> = $z2;

        return;

     label5:
        $r2 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        if $r2 == null goto label8;

        i0 = 0;

     label6:
        $r3 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $i4 = lengthof $r3;

        if i0 >= $i4 goto label8;

        $r4 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $i5 = $r4[i0];

        $z1 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean isOpaque(int)>($i5);

        if $z1 != 0 goto label7;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaque> = 0;

        return;

     label7:
        i0 = i0 + 1;

        goto label6;

     label8:
        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mOpaque> = 1;

        return;
    }

    private static boolean isOpaque(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 >> 24;

        $i2 = 255 & $i1;

        if $i2 != 255 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        $i0 = r0.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        return $i0;
    }

    public android.graphics.drawable.Drawable newDrawable()
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        android.graphics.drawable.GradientDrawable $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        $r1 = new android.graphics.drawable.GradientDrawable;

        specialinvoke $r1.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.graphics.drawable.GradientDrawable$1)>(r0, null);

        return $r1;
    }

    public android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        android.content.res.Resources r1;
        android.graphics.drawable.GradientDrawable $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: android.content.res.Resources;

        $r2 = new android.graphics.drawable.GradientDrawable;

        specialinvoke $r2.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.graphics.drawable.GradientDrawable$1)>(r0, null);

        return $r2;
    }

    public void setColors(int[])
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int[] r1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: int[];

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mHasSolidColor> = 0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors> = r1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    public void setCornerRadii(float[])
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float[] r1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        r1 := @parameter0: float[];

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray> = r1;

        if r1 != null goto label1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius> = 0.0F;

     label1:
        return;
    }

    public void setCornerRadius(float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float f0;
        byte $b0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        f0 = 0.0F;

     label1:
        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius> = f0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray> = null;

        return;
    }

    public void setGradientCenter(float, float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float f0, f1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterX> = f0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mCenterY> = f1;

        return;
    }

    public void setGradientRadius(float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        float f0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        f0 := @parameter0: float;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mGradientRadius> = f0;

        return;
    }

    public void setGradientType(int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = i0;

        return;
    }

    public void setShape(int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mShape> = i0;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    public void setSize(int, int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0, i1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth> = i0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight> = i1;

        return;
    }

    public void setSolidColor(int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: boolean mHasSolidColor> = 1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mSolidColor> = i0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors> = null;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    public void setStroke(int, int)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0, i1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = i0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeColor> = i1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }

    public void setStroke(int, int, float, float)
    {
        android.graphics.drawable.GradientDrawable$GradientState r0;
        int i0, i1;
        float f0, f1;

        r0 := @this: android.graphics.drawable.GradientDrawable$GradientState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth> = i0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeColor> = i1;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth> = f0;

        r0.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap> = f1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable$GradientState: void computeOpacity()>();

        return;
    }
}
