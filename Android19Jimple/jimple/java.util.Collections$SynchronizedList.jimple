class java.util.Collections$SynchronizedList extends java.util.Collections$SynchronizedCollection implements java.util.List
{
    private static final long serialVersionUID;
    final java.util.List list;

    void <init>(java.util.List)
    {
        java.util.Collections$SynchronizedList r0;
        java.util.List r1;

        r0 := @this: java.util.Collections$SynchronizedList;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection)>(r1);

        r0.<java.util.Collections$SynchronizedList: java.util.List list> = r1;

        return;
    }

    void <init>(java.util.List, java.lang.Object)
    {
        java.util.Collections$SynchronizedList r0;
        java.util.List r1;
        java.lang.Object r2;

        r0 := @this: java.util.Collections$SynchronizedList;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.Collections$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>(r1, r2);

        r0.<java.util.Collections$SynchronizedList: java.util.List list> = r1;

        return;
    }

    private java.lang.Object readResolve()
    {
        java.util.Collections$SynchronizedList r0;
        java.util.List $r1, $r4;
        boolean $z0;
        java.util.Collections$SynchronizedRandomAccessList $r2;
        java.lang.Object $r3;

        r0 := @this: java.util.Collections$SynchronizedList;

        $r1 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        $z0 = $r1 instanceof java.util.RandomAccess;

        if $z0 == 0 goto label1;

        $r2 = new java.util.Collections$SynchronizedRandomAccessList;

        $r4 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        $r3 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        specialinvoke $r2.<java.util.Collections$SynchronizedRandomAccessList: void <init>(java.util.List,java.lang.Object)>($r4, $r3);

        r0 = $r2;

     label1:
        return r0;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Collections$SynchronizedList r0;
        java.io.ObjectOutputStream r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r4;

        r0 := @this: java.util.Collections$SynchronizedList;

        r1 := @parameter0: java.io.ObjectOutputStream;

        r2 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        exitmonitor r2;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void add(int, java.lang.Object)
    {
        java.util.Collections$SynchronizedList r0;
        int i0;
        java.lang.Object r1, r2;
        java.lang.Throwable r3, $r5;
        java.util.List $r4;

        r0 := @this: java.util.Collections$SynchronizedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>(i0, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean addAll(int, java.util.Collection)
    {
        java.util.Collections$SynchronizedList r0;
        int i0;
        java.util.Collection r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        boolean z0;
        java.util.List $r4;

        r0 := @this: java.util.Collections$SynchronizedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        r2 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        z0 = interfaceinvoke $r4.<java.util.List: boolean addAll(int,java.util.Collection)>(i0, r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Collections$SynchronizedList r0;
        java.lang.Object r1, r2;
        java.lang.Throwable r3, $r5;
        boolean z0;
        java.util.List $r4;

        r0 := @this: java.util.Collections$SynchronizedList;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.Object get(int)
    {
        java.util.Collections$SynchronizedList r0;
        int i0;
        java.lang.Object r1, r3;
        java.lang.Throwable r2, $r5;
        java.util.List $r4;

        r0 := @this: java.util.Collections$SynchronizedList;

        i0 := @parameter0: int;

        r1 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        r3 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int hashCode()
    {
        java.util.Collections$SynchronizedList r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int i0;
        java.util.List $r3;

        r0 := @this: java.util.Collections$SynchronizedList;

        r1 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r3 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        i0 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int indexOf(java.lang.Object)
    {
        java.util.Collections$SynchronizedList r0;
        java.lang.Object r1, r2, $r8, $r9;
        java.lang.Throwable r3, $r10;
        int i0, i1, i2;
        java.lang.Object[] r4;
        java.util.List $r5, $r6;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedList;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r2;

     label01:
        $r5 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        r4 = newarray (java.lang.Object)[i0];

        $r6 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        exitmonitor r2;

     label02:
        if r1 == null goto label08;

        i2 = 0;

     label03:
        if i2 >= i0 goto label11;

        $r9 = r4[i2];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label07;

        return i2;

     label04:
        $r10 := @caughtexception;

        r3 = $r10;

     label05:
        exitmonitor r2;

     label06:
        throw r3;

     label07:
        i2 = i2 + 1;

        goto label03;

     label08:
        i1 = 0;

     label09:
        if i1 >= i0 goto label11;

        $r8 = r4[i1];

        if $r8 != null goto label10;

        return i1;

     label10:
        i1 = i1 + 1;

        goto label09;

     label11:
        return -1;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
    }

    public int lastIndexOf(java.lang.Object)
    {
        java.util.Collections$SynchronizedList r0;
        java.lang.Object r1, r2, $r8, $r9;
        java.lang.Throwable r3, $r10;
        int i0, i1, i2;
        java.lang.Object[] r4;
        java.util.List $r5, $r6;
        boolean $z0;

        r0 := @this: java.util.Collections$SynchronizedList;

        r1 := @parameter0: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r2;

     label01:
        $r5 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        r4 = newarray (java.lang.Object)[i0];

        $r6 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        exitmonitor r2;

     label02:
        if r1 == null goto label08;

        i2 = i0 - 1;

     label03:
        if i2 < 0 goto label11;

        $r9 = r4[i2];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 == 0 goto label07;

        return i2;

     label04:
        $r10 := @caughtexception;

        r3 = $r10;

     label05:
        exitmonitor r2;

     label06:
        throw r3;

     label07:
        i2 = i2 + -1;

        goto label03;

     label08:
        i1 = i0 - 1;

     label09:
        if i1 < 0 goto label11;

        $r8 = r4[i1];

        if $r8 != null goto label10;

        return i1;

     label10:
        i1 = i1 + -1;

        goto label09;

     label11:
        return -1;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
    }

    public java.util.ListIterator listIterator()
    {
        java.util.Collections$SynchronizedList r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        java.util.ListIterator r3;
        java.util.List $r4;

        r0 := @this: java.util.Collections$SynchronizedList;

        r1 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        r3 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.ListIterator listIterator(int)
    {
        java.util.Collections$SynchronizedList r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r5;
        java.util.ListIterator r3;
        java.util.List $r4;

        r0 := @this: java.util.Collections$SynchronizedList;

        i0 := @parameter0: int;

        r1 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        r3 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator(int)>(i0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.Object remove(int)
    {
        java.util.Collections$SynchronizedList r0;
        int i0;
        java.lang.Object r1, r3;
        java.lang.Throwable r2, $r5;
        java.util.List $r4;

        r0 := @this: java.util.Collections$SynchronizedList;

        i0 := @parameter0: int;

        r1 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        r3 = interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>(i0);

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.Object set(int, java.lang.Object)
    {
        java.util.Collections$SynchronizedList r0;
        int i0;
        java.lang.Object r1, r2, r4;
        java.lang.Throwable r3, $r6;
        java.util.List $r5;

        r0 := @this: java.util.Collections$SynchronizedList;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r2;

     label1:
        $r5 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        r4 = interfaceinvoke $r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        exitmonitor r2;

     label2:
        return r4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List subList(int, int)
    {
        java.util.Collections$SynchronizedList r0, r2, $r4;
        int i0, i1;
        java.lang.Object r1, $r7;
        java.lang.Throwable r3, $r8;
        java.util.List $r5, $r6;

        r0 := @this: java.util.Collections$SynchronizedList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        entermonitor r1;

     label1:
        $r4 = new java.util.Collections$SynchronizedList;

        $r5 = r0.<java.util.Collections$SynchronizedList: java.util.List list>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        $r7 = r0.<java.util.Collections$SynchronizedList: java.lang.Object mutex>;

        specialinvoke $r4.<java.util.Collections$SynchronizedList: void <init>(java.util.List,java.lang.Object)>($r6, $r7);

        r2 = $r4;

        exitmonitor r1;

     label2:
        return r2;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

     label4:
        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <java.util.Collections$SynchronizedList: long serialVersionUID> = -7754090372962971524L;

        return;
    }
}
