public interface  android.accounts.IAccountManager extends java.lang.Object implements android.os.IInterface
{

    public abstract void addAccount(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String, java.lang.String[], boolean, android.os.Bundle) throws android.os.RemoteException;

    public abstract boolean addAccountExplicitly(android.accounts.Account, java.lang.String, android.os.Bundle) throws android.os.RemoteException;

    public abstract boolean addSharedAccountAsUser(android.accounts.Account, int) throws android.os.RemoteException;

    public abstract void clearPassword(android.accounts.Account) throws android.os.RemoteException;

    public abstract void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse, android.accounts.Account, android.os.Bundle, boolean, int) throws android.os.RemoteException;

    public abstract void editProperties(android.accounts.IAccountManagerResponse, java.lang.String, boolean) throws android.os.RemoteException;

    public abstract android.accounts.Account[] getAccounts(java.lang.String) throws android.os.RemoteException;

    public abstract android.accounts.Account[] getAccountsAsUser(java.lang.String, int) throws android.os.RemoteException;

    public abstract void getAccountsByFeatures(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String[]) throws android.os.RemoteException;

    public abstract android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract android.accounts.Account[] getAccountsForPackage(java.lang.String, int) throws android.os.RemoteException;

    public abstract void getAuthToken(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, boolean, android.os.Bundle) throws android.os.RemoteException;

    public abstract void getAuthTokenLabel(android.accounts.IAccountManagerResponse, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract android.accounts.AuthenticatorDescription[] getAuthenticatorTypes() throws android.os.RemoteException;

    public abstract java.lang.String getPassword(android.accounts.Account) throws android.os.RemoteException;

    public abstract android.accounts.Account[] getSharedAccountsAsUser(int) throws android.os.RemoteException;

    public abstract java.lang.String getUserData(android.accounts.Account, java.lang.String) throws android.os.RemoteException;

    public abstract void hasFeatures(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String[]) throws android.os.RemoteException;

    public abstract void invalidateAuthToken(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract java.lang.String peekAuthToken(android.accounts.Account, java.lang.String) throws android.os.RemoteException;

    public abstract void removeAccount(android.accounts.IAccountManagerResponse, android.accounts.Account) throws android.os.RemoteException;

    public abstract boolean removeSharedAccountAsUser(android.accounts.Account, int) throws android.os.RemoteException;

    public abstract void setAuthToken(android.accounts.Account, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void setPassword(android.accounts.Account, java.lang.String) throws android.os.RemoteException;

    public abstract void setUserData(android.accounts.Account, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void updateAppPermission(android.accounts.Account, java.lang.String, int, boolean) throws android.os.RemoteException;

    public abstract void updateCredentials(android.accounts.IAccountManagerResponse, android.accounts.Account, java.lang.String, boolean, android.os.Bundle) throws android.os.RemoteException;
}
