final class com.android.server.am.ActivityRecord extends java.lang.Object
{
    static final int APPLICATION_ACTIVITY_TYPE;
    static final boolean DEBUG_SAVED_STATE;
    static final int HOME_ACTIVITY_TYPE;
    static final int RECENTS_ACTIVITY_TYPE;
    public static final java.lang.String RECENTS_PACKAGE_NAME;
    static final java.lang.String TAG;
    com.android.server.am.ProcessRecord app;
    final android.view.IApplicationToken$Stub appToken;
    final java.lang.String baseDir;
    android.content.res.CompatibilityInfo compat;
    final boolean componentSpecified;
    int configChangeFlags;
    boolean configDestroy;
    android.content.res.Configuration configuration;
    java.util.HashSet connections;
    long cpuTimeAtResume;
    final java.lang.String dataDir;
    boolean delayedResume;
    long displayStartTime;
    boolean finishing;
    boolean forceNewConfig;
    boolean frontOfTask;
    boolean frozenBeforeDestroy;
    boolean fullscreen;
    long fullyDrawnStartTime;
    boolean hasBeenLaunched;
    boolean haveState;
    android.os.Bundle icicle;
    int icon;
    boolean idle;
    boolean immersive;
    private boolean inHistory;
    final android.content.pm.ActivityInfo info;
    final android.content.Intent intent;
    boolean keysPaused;
    int labelRes;
    long lastLaunchTime;
    long lastVisibleTime;
    int launchCount;
    boolean launchFailed;
    int launchMode;
    long launchTickTime;
    final java.lang.String launchedFromPackage;
    final int launchedFromUid;
    int logo;
    int mActivityType;
    final com.android.server.am.ActivityStackSupervisor mStackSupervisor;
    java.util.ArrayList newIntents;
    final boolean noDisplay;
    java.lang.CharSequence nonLocalizedLabel;
    boolean nowVisible;
    final java.lang.String packageName;
    long pauseTime;
    android.app.ActivityOptions pendingOptions;
    java.util.HashSet pendingResults;
    final java.lang.String processName;
    final android.content.ComponentName realActivity;
    int realTheme;
    final int requestCode;
    final java.lang.String resDir;
    final java.lang.String resolvedType;
    com.android.server.am.ActivityRecord resultTo;
    final java.lang.String resultWho;
    java.util.ArrayList results;
    final com.android.server.am.ActivityManagerService service;
    final java.lang.String shortComponentName;
    boolean sleeping;
    long startTime;
    com.android.server.am.ActivityStack$ActivityState state;
    final boolean stateNotNeeded;
    boolean stopped;
    java.lang.String stringName;
    com.android.server.am.TaskRecord task;
    final java.lang.String taskAffinity;
    int theme;
    com.android.server.am.ThumbnailHolder thumbHolder;
    boolean thumbnailNeeded;
    com.android.server.am.UriPermissionOwner uriPermissions;
    final int userId;
    boolean visible;
    boolean waitingVisible;
    int windowFlags;

    void <init>(com.android.server.am.ActivityManagerService, com.android.server.am.ProcessRecord, int, java.lang.String, android.content.Intent, java.lang.String, android.content.pm.ActivityInfo, android.content.res.Configuration, com.android.server.am.ActivityRecord, java.lang.String, int, boolean, com.android.server.am.ActivityStackSupervisor)
    {
        com.android.server.am.ActivityRecord r0, r8;
        com.android.server.am.ActivityManagerService r1;
        com.android.server.am.ProcessRecord r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37;
        java.lang.String r3, r5, r9, $r15, $r17, $r19, $r22, $r24, $r26, $r29, $r32, $r35, $r36, $r37, $r39, $r43, $r49, $r54, $r56;
        android.content.Intent r4, $r31, $r40, $r51;
        android.content.pm.ActivityInfo r6;
        android.content.res.Configuration r7;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        com.android.server.am.ActivityStackSupervisor r10;
        com.android.server.AttributeCache$Entry r11;
        android.content.pm.ApplicationInfo r12, $r13, $r21, $r23, $r25, $r30, $r47, $r48, $r52, $r53;
        com.android.server.am.ActivityRecord$Token $r14;
        android.content.ComponentName $r16, $r20, $r38, $r55;
        com.android.server.am.ActivityStack$ActivityState $r18;
        java.lang.CharSequence $r27, $r28, $r57;
        int[] $r33;
        com.android.server.AttributeCache $r34;
        java.util.Set $r41;
        android.net.Uri $r42;
        android.content.res.TypedArray $r44, $r45, $r46;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ActivityManagerService;

        r2 := @parameter1: com.android.server.am.ProcessRecord;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.Intent;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: android.content.pm.ActivityInfo;

        r7 := @parameter7: android.content.res.Configuration;

        r8 := @parameter8: com.android.server.am.ActivityRecord;

        r9 := @parameter9: java.lang.String;

        i1 := @parameter10: int;

        z0 := @parameter11: boolean;

        r10 := @parameter12: com.android.server.am.ActivityStackSupervisor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service> = r1;

        $r14 = new com.android.server.am.ActivityRecord$Token;

        specialinvoke $r14.<com.android.server.am.ActivityRecord$Token: void <init>(com.android.server.am.ActivityRecord)>(r0);

        r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken> = $r14;

        r0.<com.android.server.am.ActivityRecord: android.content.pm.ActivityInfo info> = r6;

        r0.<com.android.server.am.ActivityRecord: int launchedFromUid> = i0;

        r0.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage> = r3;

        $r13 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r13.<android.content.pm.ApplicationInfo: int uid>;

        $i3 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        r0.<com.android.server.am.ActivityRecord: int userId> = $i3;

        r0.<com.android.server.am.ActivityRecord: android.content.Intent intent> = r4;

        $r16 = virtualinvoke r4.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r15 = virtualinvoke $r16.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName> = $r15;

        r0.<com.android.server.am.ActivityRecord: java.lang.String resolvedType> = r5;

        r0.<com.android.server.am.ActivityRecord: boolean componentSpecified> = z0;

        r0.<com.android.server.am.ActivityRecord: android.content.res.Configuration configuration> = r7;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo> = r8;

        r0.<com.android.server.am.ActivityRecord: java.lang.String resultWho> = r9;

        r0.<com.android.server.am.ActivityRecord: int requestCode> = i1;

        $r18 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState INITIALIZING>;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state> = $r18;

        r0.<com.android.server.am.ActivityRecord: boolean frontOfTask> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean launchFailed> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean stopped> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean delayedResume> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean finishing> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean configDestroy> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean keysPaused> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean inHistory> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean visible> = 1;

        r0.<com.android.server.am.ActivityRecord: boolean waitingVisible> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean nowVisible> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean thumbnailNeeded> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean idle> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean hasBeenLaunched> = 0;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor> = r10;

        r0.<com.android.server.am.ActivityRecord: boolean haveState> = 1;

        if r6 == null goto label25;

        $r17 = r6.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        if $r17 == null goto label01;

        $i35 = r6.<android.content.pm.ActivityInfo: int launchMode>;

        if $i35 == 0 goto label01;

        $i36 = r6.<android.content.pm.ActivityInfo: int launchMode>;

        if $i36 != 1 goto label16;

     label01:
        $r20 = virtualinvoke r4.<android.content.Intent: android.content.ComponentName getComponent()>();

        r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity> = $r20;

     label02:
        $r19 = r6.<android.content.pm.ActivityInfo: java.lang.String taskAffinity>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity> = $r19;

        $i5 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i6 = 16 & $i5;

        if $i6 == 0 goto label17;

        z1 = 1;

     label03:
        r0.<com.android.server.am.ActivityRecord: boolean stateNotNeeded> = z1;

        $r21 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r22 = $r21.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String baseDir> = $r22;

        $r25 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r26 = $r25.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String resDir> = $r26;

        $r23 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r24 = $r23.<android.content.pm.ApplicationInfo: java.lang.String dataDir>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String dataDir> = $r24;

        $r28 = r6.<android.content.pm.ActivityInfo: java.lang.CharSequence nonLocalizedLabel>;

        r0.<com.android.server.am.ActivityRecord: java.lang.CharSequence nonLocalizedLabel> = $r28;

        $i8 = r6.<android.content.pm.ActivityInfo: int labelRes>;

        r0.<com.android.server.am.ActivityRecord: int labelRes> = $i8;

        $r27 = r0.<com.android.server.am.ActivityRecord: java.lang.CharSequence nonLocalizedLabel>;

        if $r27 != null goto label04;

        $i30 = r0.<com.android.server.am.ActivityRecord: int labelRes>;

        if $i30 != 0 goto label04;

        r12 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r57 = r12.<android.content.pm.ApplicationInfo: java.lang.CharSequence nonLocalizedLabel>;

        r0.<com.android.server.am.ActivityRecord: java.lang.CharSequence nonLocalizedLabel> = $r57;

        $i37 = r12.<android.content.pm.ApplicationInfo: int labelRes>;

        r0.<com.android.server.am.ActivityRecord: int labelRes> = $i37;

     label04:
        $i7 = virtualinvoke r6.<android.content.pm.ActivityInfo: int getIconResource()>();

        r0.<com.android.server.am.ActivityRecord: int icon> = $i7;

        $i11 = virtualinvoke r6.<android.content.pm.ActivityInfo: int getLogoResource()>();

        r0.<com.android.server.am.ActivityRecord: int logo> = $i11;

        $i12 = virtualinvoke r6.<android.content.pm.ActivityInfo: int getThemeResource()>();

        r0.<com.android.server.am.ActivityRecord: int theme> = $i12;

        $i9 = r0.<com.android.server.am.ActivityRecord: int theme>;

        r0.<com.android.server.am.ActivityRecord: int realTheme> = $i9;

        $i10 = r0.<com.android.server.am.ActivityRecord: int realTheme>;

        if $i10 != 0 goto label06;

        $r52 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i29 = $r52.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i29 >= 11 goto label18;

        i2 = 16973829;

     label05:
        r0.<com.android.server.am.ActivityRecord: int realTheme> = i2;

     label06:
        $i16 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i15 = 512 & $i16;

        if $i15 == 0 goto label07;

        $i33 = r0.<com.android.server.am.ActivityRecord: int windowFlags>;

        $i31 = 16777216 | $i33;

        r0.<com.android.server.am.ActivityRecord: int windowFlags> = $i31;

     label07:
        $i14 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i13 = 1 & $i14;

        if $i13 == 0 goto label19;

        if r2 == null goto label19;

        $r47 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i26 = $r47.<android.content.pm.ApplicationInfo: int uid>;

        if $i26 == 1000 goto label08;

        $r48 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i32 = $r48.<android.content.pm.ApplicationInfo: int uid>;

        $r53 = r2.<com.android.server.am.ProcessRecord: android.content.pm.ApplicationInfo info>;

        $i34 = $r53.<android.content.pm.ApplicationInfo: int uid>;

        if $i32 != $i34 goto label19;

     label08:
        $r49 = r2.<com.android.server.am.ProcessRecord: java.lang.String processName>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String processName> = $r49;

     label09:
        $r31 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        if $r31 == null goto label10;

        $i28 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i27 = 32 & $i28;

        if $i27 == 0 goto label10;

        $r51 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        virtualinvoke $r51.<android.content.Intent: android.content.Intent addFlags(int)>(8388608);

     label10:
        $r30 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r29 = $r30.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String packageName> = $r29;

        $i18 = r6.<android.content.pm.ActivityInfo: int launchMode>;

        r0.<com.android.server.am.ActivityRecord: int launchMode> = $i18;

        $r34 = staticinvoke <com.android.server.AttributeCache: com.android.server.AttributeCache instance()>();

        $r36 = r0.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $i19 = r0.<com.android.server.am.ActivityRecord: int realTheme>;

        $r33 = <com.android.internal.R$styleable: int[] Window>;

        $i17 = r0.<com.android.server.am.ActivityRecord: int userId>;

        r11 = virtualinvoke $r34.<com.android.server.AttributeCache: com.android.server.AttributeCache$Entry get(java.lang.String,int,int[],int)>($r36, $i19, $r33, $i17);

        if r11 == null goto label20;

        $r44 = r11.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z8 = virtualinvoke $r44.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        if $z8 != 0 goto label20;

        $r45 = r11.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z9 = virtualinvoke $r45.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        if $z9 != 0 goto label20;

        z3 = 1;

     label11:
        r0.<com.android.server.am.ActivityRecord: boolean fullscreen> = z3;

        if r11 == null goto label21;

        $r46 = r11.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z11 = virtualinvoke $r46.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        if $z11 == 0 goto label21;

        z2 = 1;

     label12:
        r0.<com.android.server.am.ActivityRecord: boolean noDisplay> = z2;

        if z0 == 0 goto label13;

        $i25 = staticinvoke <android.os.Process: int myUid()>();

        if i0 == $i25 goto label13;

        if i0 != 0 goto label22;

     label13:
        $r35 = "android.intent.action.MAIN";

        $r37 = virtualinvoke r4.<android.content.Intent: java.lang.String getAction()>();

        $z7 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r37);

        if $z7 == 0 goto label22;

        $z6 = virtualinvoke r4.<android.content.Intent: boolean hasCategory(java.lang.String)>("android.intent.category.HOME");

        if $z6 == 0 goto label22;

        $r41 = virtualinvoke r4.<android.content.Intent: java.util.Set getCategories()>();

        $i24 = interfaceinvoke $r41.<java.util.Set: int size()>();

        if $i24 != 1 goto label22;

        $r42 = virtualinvoke r4.<android.content.Intent: android.net.Uri getData()>();

        if $r42 != null goto label22;

        $r43 = virtualinvoke r4.<android.content.Intent: java.lang.String getType()>();

        if $r43 != null goto label22;

        $r40 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i22 = virtualinvoke $r40.<android.content.Intent: int getFlags()>();

        $i23 = 268435456 & $i22;

        if $i23 == 0 goto label22;

        $z10 = virtualinvoke r0.<com.android.server.am.ActivityRecord: boolean isNotResolverActivity()>();

        if $z10 == 0 goto label22;

        r0.<com.android.server.am.ActivityRecord: int mActivityType> = 1;

     label14:
        $i20 = r6.<android.content.pm.ActivityInfo: int flags>;

        $i21 = 2048 & $i20;

        if $i21 == 0 goto label24;

        z4 = 1;

     label15:
        r0.<com.android.server.am.ActivityRecord: boolean immersive> = z4;

        return;

     label16:
        $r55 = new android.content.ComponentName;

        $r54 = r6.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r56 = r6.<android.content.pm.ActivityInfo: java.lang.String targetActivity>;

        specialinvoke $r55.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r54, $r56);

        r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity> = $r55;

        goto label02;

     label17:
        z1 = 0;

        goto label03;

     label18:
        i2 = 16973931;

        goto label05;

     label19:
        $r32 = r6.<android.content.pm.ActivityInfo: java.lang.String processName>;

        r0.<com.android.server.am.ActivityRecord: java.lang.String processName> = $r32;

        goto label09;

     label20:
        z3 = 0;

        goto label11;

     label21:
        z2 = 0;

        goto label12;

     label22:
        $r38 = r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r39 = virtualinvoke $r38.<android.content.ComponentName: java.lang.String getClassName()>();

        $z5 = virtualinvoke $r39.<java.lang.String: boolean contains(java.lang.CharSequence)>("com.android.systemui.recent");

        if $z5 == 0 goto label23;

        r0.<com.android.server.am.ActivityRecord: int mActivityType> = 2;

        goto label14;

     label23:
        r0.<com.android.server.am.ActivityRecord: int mActivityType> = 0;

        goto label14;

     label24:
        z4 = 0;

        goto label15;

     label25:
        r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity> = null;

        r0.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity> = null;

        r0.<com.android.server.am.ActivityRecord: boolean stateNotNeeded> = 0;

        r0.<com.android.server.am.ActivityRecord: java.lang.String baseDir> = null;

        r0.<com.android.server.am.ActivityRecord: java.lang.String resDir> = null;

        r0.<com.android.server.am.ActivityRecord: java.lang.String dataDir> = null;

        r0.<com.android.server.am.ActivityRecord: java.lang.String processName> = null;

        r0.<com.android.server.am.ActivityRecord: java.lang.String packageName> = null;

        r0.<com.android.server.am.ActivityRecord: boolean fullscreen> = 1;

        r0.<com.android.server.am.ActivityRecord: boolean noDisplay> = 0;

        r0.<com.android.server.am.ActivityRecord: int mActivityType> = 0;

        r0.<com.android.server.am.ActivityRecord: boolean immersive> = 0;

        return;
    }

    static void activityResumedLocked(android.os.IBinder)
    {
        android.os.IBinder r0;
        com.android.server.am.ActivityRecord r1;

        r0 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r0);

        r1.<com.android.server.am.ActivityRecord: android.os.Bundle icicle> = null;

        r1.<com.android.server.am.ActivityRecord: boolean haveState> = 0;

        return;
    }

    private java.lang.String activityTypeToString(int)
    {
        com.android.server.am.ActivityRecord r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: com.android.server.am.ActivityRecord;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r1;

     label2:
        return "APPLICATION_ACTIVITY_TYPE";

     label3:
        return "HOME_ACTIVITY_TYPE";

     label4:
        return "RECENTS_ACTIVITY_TYPE";
    }

    static com.android.server.am.ActivityRecord forToken(android.os.IBinder)
    {
        android.os.IBinder r0;
        com.android.server.am.ActivityRecord r1;
        java.lang.ClassCastException r2, $r6;
        com.android.server.am.ActivityRecord$Token $r3;
        java.lang.ref.WeakReference $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @parameter0: android.os.IBinder;

        if r0 == null goto label3;

     label1:
        $r3 = (com.android.server.am.ActivityRecord$Token) r0;

        $r4 = $r3.<com.android.server.am.ActivityRecord$Token: java.lang.ref.WeakReference weakActivity>;

        $r5 = virtualinvoke $r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (com.android.server.am.ActivityRecord) $r5;

     label2:
        return r1;

     label3:
        r1 = null;

        goto label2;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad activity token: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r10, r2);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label4;
    }

    static com.android.server.am.ActivityStack getStackLocked(android.os.IBinder)
    {
        android.os.IBinder r0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.TaskRecord $r2;
        com.android.server.am.ActivityStack $r3;

        r0 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r0);

        if r1 == null goto label1;

        $r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r3 = $r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        return $r3;

     label1:
        return null;
    }

    static int getTaskForActivityLocked(android.os.IBinder, boolean)
    {
        android.os.IBinder r0;
        boolean z0;
        com.android.server.am.ActivityRecord r1;
        com.android.server.am.TaskRecord r2;
        java.util.ArrayList $r3;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r0);

        if r1 != null goto label2;

     label1:
        return -1;

     label2:
        r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r3 = r2.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        tableswitch($i0)
        {
            case -1: goto label1;
            case 0: goto label4;
            default: goto label3;
        };

     label3:
        if z0 != 0 goto label1;

        $i1 = r2.<com.android.server.am.TaskRecord: int taskId>;

        return $i1;

     label4:
        $i2 = r2.<com.android.server.am.TaskRecord: int taskId>;

        return $i2;
    }

    private com.android.server.am.ActivityRecord getWaitingHistoryRecordLocked()
    {
        com.android.server.am.ActivityRecord r0, r1;
        com.android.server.am.ActivityStack r2;
        com.android.server.am.TaskRecord $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 = r0;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r2 = $r3.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $z0 = r1.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z0 == 0 goto label2;

        r1 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mResumedActivity>;

        if r1 != null goto label1;

        r1 = r2.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord mPausingActivity>;

     label1:
        if r1 != null goto label2;

        r1 = r0;

     label2:
        return r1;
    }

    static com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)
    {
        android.os.IBinder r0;
        com.android.server.am.ActivityRecord r1, $r4;
        com.android.server.am.TaskRecord $r2;
        com.android.server.am.ActivityStack $r3;

        r0 := @parameter0: android.os.IBinder;

        r1 = staticinvoke <com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord forToken(android.os.IBinder)>(r0);

        if r1 == null goto label1;

        $r2 = r1.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r3 = $r2.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r4 = virtualinvoke $r3.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord isInStackLocked(android.os.IBinder)>(r0);

        return $r4;

     label1:
        return null;
    }

    private void reportLaunchTimeLocked(long)
    {
        com.android.server.am.ActivityRecord r0;
        long l0, l1, l2, $l3, $l4, $l13;
        com.android.server.am.ActivityStack r1;
        java.lang.Object[] r2;
        java.lang.StringBuilder r3;
        com.android.server.am.TaskRecord $r4;
        byte $b5, $b10, $b12;
        int $i6, $i7, $i11;
        java.lang.Integer $r5, $r7;
        java.lang.String $r6, $r11, $r15;
        java.lang.Long $r8, $r9;
        com.android.server.am.ActivityManagerService $r10, $r16;
        com.android.server.am.ActivityStackSupervisor $r17;
        android.content.ComponentName $r20;
        com.android.server.am.UsageStatsService $r21;

        r0 := @this: com.android.server.am.ActivityRecord;

        l0 := @parameter0: long;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1 = $r4.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $l3 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        l1 = l0 - $l3;

        $l4 = r1.<com.android.server.am.ActivityStack: long mLaunchStartTime>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label4;

        $l13 = r1.<com.android.server.am.ActivityStack: long mLaunchStartTime>;

        l2 = l0 - $l13;

     label1:
        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(64L, "launching", 0);

        r2 = newarray (java.lang.Object)[5];

        $i6 = r0.<com.android.server.am.ActivityRecord: int userId>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        r2[0] = $r5;

        $i7 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        r2[1] = $r7;

        $r6 = r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        r2[2] = $r6;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        r2[3] = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        r2[4] = $r9;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30009, r2);

        $r10 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        r3 = $r10.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder>;

        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Displayed ");

        $r11 = r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l1, r3);

        $b10 = l1 cmp l2;

        if $b10 == 0 goto label2;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (total ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l2, r3);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label2:
        $r15 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        $r17 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r17.<com.android.server.am.ActivityStackSupervisor: void reportActivityLaunchedLocked(boolean,com.android.server.am.ActivityRecord,long,long)>(0, r0, l1, l2);

        $b12 = l2 cmp 0L;

        if $b12 <= 0 goto label3;

        $r16 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r21 = $r16.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        $r20 = r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $i11 = (int) l2;

        virtualinvoke $r21.<com.android.server.am.UsageStatsService: void noteLaunchTime(android.content.ComponentName,int)>($r20, $i11);

     label3:
        r0.<com.android.server.am.ActivityRecord: long displayStartTime> = 0L;

        r1.<com.android.server.am.ActivityStack: long mLaunchStartTime> = 0L;

        return;

     label4:
        l2 = l1;

        goto label1;
    }

    void addNewIntentLocked(android.content.Intent)
    {
        com.android.server.am.ActivityRecord r0;
        android.content.Intent r1;
        java.util.ArrayList $r2, $r3, $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        if $r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents> = $r4;

     label1:
        $r3 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void addResultLocked(com.android.server.am.ActivityRecord, java.lang.String, int, int, android.content.Intent)
    {
        com.android.server.am.ActivityRecord r0, r1;
        java.lang.String r2;
        int i0, i1;
        android.content.Intent r3;
        com.android.server.am.ActivityResult r4, $r5;
        java.util.ArrayList $r6, $r7, $r8;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.content.Intent;

        $r5 = new com.android.server.am.ActivityResult;

        specialinvoke $r5.<com.android.server.am.ActivityResult: void <init>(com.android.server.am.ActivityRecord,java.lang.String,int,int,android.content.Intent)>(r1, r2, i0, i1, r3);

        r4 = $r5;

        $r6 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        if $r6 != null goto label1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results> = $r8;

     label1:
        $r7 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        return;
    }

    void applyOptionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        boolean z0;
        android.app.ActivityOptions $r1, $r2, $r4, $r7, $r8, $r9, $r13, $r16, $r17, $r19, $r20, $r21, $r25, $r26, $r27, $r30, $r32, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r45;
        com.android.server.am.ActivityManagerService $r3, $r24, $r41;
        com.android.server.wm.WindowManagerService $r5, $r23, $r43;
        android.graphics.Bitmap $r6, $r18, $r22;
        android.os.IRemoteCallback $r10, $r46;
        android.graphics.Rect $r11, $r14, $r29, $r33;
        android.content.Intent $r12, $r15, $r28, $r31;
        java.lang.String $r44;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        i0 = virtualinvoke $r2.<android.app.ActivityOptions: int getAnimationType()>();

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = null;

     label2:
        return;

     label3:
        $r41 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r43 = $r41.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r42 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r44 = virtualinvoke $r42.<android.app.ActivityOptions: java.lang.String getPackageName()>();

        $r39 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i23 = virtualinvoke $r39.<android.app.ActivityOptions: int getCustomEnterResId()>();

        $r40 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i24 = virtualinvoke $r40.<android.app.ActivityOptions: int getCustomExitResId()>();

        $r45 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r46 = virtualinvoke $r45.<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()>();

        virtualinvoke $r43.<com.android.server.wm.WindowManagerService: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>($r44, $i23, $i24, $r46);

        goto label1;

     label4:
        $r24 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r23 = $r24.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r25 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i11 = virtualinvoke $r25.<android.app.ActivityOptions: int getStartX()>();

        $r27 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i13 = virtualinvoke $r27.<android.app.ActivityOptions: int getStartY()>();

        $r26 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i12 = virtualinvoke $r26.<android.app.ActivityOptions: int getStartWidth()>();

        $r30 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i14 = virtualinvoke $r30.<android.app.ActivityOptions: int getStartHeight()>();

        virtualinvoke $r23.<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionScaleUp(int,int,int,int)>($i11, $i13, $i12, $i14);

        $r28 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r29 = virtualinvoke $r28.<android.content.Intent: android.graphics.Rect getSourceBounds()>();

        if $r29 != null goto label1;

        $r31 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r33 = new android.graphics.Rect;

        $r32 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i15 = virtualinvoke $r32.<android.app.ActivityOptions: int getStartX()>();

        $r35 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i17 = virtualinvoke $r35.<android.app.ActivityOptions: int getStartY()>();

        $r34 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i16 = virtualinvoke $r34.<android.app.ActivityOptions: int getStartX()>();

        $r37 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i19 = virtualinvoke $r37.<android.app.ActivityOptions: int getStartWidth()>();

        $i18 = $i16 + $i19;

        $r36 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i22 = virtualinvoke $r36.<android.app.ActivityOptions: int getStartY()>();

        $r38 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i21 = virtualinvoke $r38.<android.app.ActivityOptions: int getStartHeight()>();

        $i20 = $i22 + $i21;

        specialinvoke $r33.<android.graphics.Rect: void <init>(int,int,int,int)>($i15, $i17, $i18, $i20);

        virtualinvoke $r31.<android.content.Intent: void setSourceBounds(android.graphics.Rect)>($r33);

        goto label1;

     label5:
        if i0 != 3 goto label7;

        z0 = 1;

     label6:
        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r5 = $r3.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r4 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r6 = virtualinvoke $r4.<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>();

        $r7 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i1 = virtualinvoke $r7.<android.app.ActivityOptions: int getStartX()>();

        $r8 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i2 = virtualinvoke $r8.<android.app.ActivityOptions: int getStartY()>();

        $r9 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r10 = virtualinvoke $r9.<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()>();

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>($r6, $i1, $i2, $r10, z0);

        $r12 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r11 = virtualinvoke $r12.<android.content.Intent: android.graphics.Rect getSourceBounds()>();

        if $r11 != null goto label1;

        $r15 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r14 = new android.graphics.Rect;

        $r13 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i3 = virtualinvoke $r13.<android.app.ActivityOptions: int getStartX()>();

        $r16 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i4 = virtualinvoke $r16.<android.app.ActivityOptions: int getStartY()>();

        $r17 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i5 = virtualinvoke $r17.<android.app.ActivityOptions: int getStartX()>();

        $r19 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r18 = virtualinvoke $r19.<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>();

        $i6 = virtualinvoke $r18.<android.graphics.Bitmap: int getWidth()>();

        $i8 = $i5 + $i6;

        $r20 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $i7 = virtualinvoke $r20.<android.app.ActivityOptions: int getStartY()>();

        $r21 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        $r22 = virtualinvoke $r21.<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>();

        $i9 = virtualinvoke $r22.<android.graphics.Bitmap: int getHeight()>();

        $i10 = $i7 + $i9;

        specialinvoke $r14.<android.graphics.Rect: void <init>(int,int,int,int)>($i3, $i4, $i8, $i10);

        virtualinvoke $r15.<android.content.Intent: void setSourceBounds(android.graphics.Rect)>($r14);

        goto label1;

     label7:
        z0 = 0;

        goto label6;
    }

    boolean changeWindowTranslucency(boolean)
    {
        com.android.server.am.ActivityRecord r0;
        boolean z0, $z1, $z2, $z3;
        com.android.server.AttributeCache$Entry r1;
        com.android.server.am.TaskRecord r2;
        int i0, $i2, $i3, $i4;
        byte b1;
        com.android.server.AttributeCache $r3;
        int[] $r4;
        java.lang.String $r5;
        android.content.res.TypedArray $r6, $r7;

        r0 := @this: com.android.server.am.ActivityRecord;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        if $z1 != z0 goto label1;

        return 0;

     label1:
        $r3 = staticinvoke <com.android.server.AttributeCache: com.android.server.AttributeCache instance()>();

        $r5 = r0.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $i3 = r0.<com.android.server.am.ActivityRecord: int realTheme>;

        $r4 = <com.android.internal.R$styleable: int[] Window>;

        $i2 = r0.<com.android.server.am.ActivityRecord: int userId>;

        r1 = virtualinvoke $r3.<com.android.server.AttributeCache: com.android.server.AttributeCache$Entry get(java.lang.String,int,int[],int)>($r5, $i3, $r4, $i2);

        if r1 == null goto label2;

        $r6 = r1.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z2 = virtualinvoke $r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 0);

        if $z2 == 0 goto label2;

        $r7 = r1.<com.android.server.AttributeCache$Entry: android.content.res.TypedArray array>;

        $z3 = virtualinvoke $r7.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        if $z3 == 0 goto label3;

     label2:
        return 0;

     label3:
        r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        i0 = r2.<com.android.server.am.TaskRecord: int numFullscreen>;

        if z0 == 0 goto label5;

        b1 = 1;

     label4:
        $i4 = b1 + i0;

        r2.<com.android.server.am.TaskRecord: int numFullscreen> = $i4;

        r0.<com.android.server.am.ActivityRecord: boolean fullscreen> = z0;

        return 1;

     label5:
        b1 = -1;

        goto label4;
    }

    void clearOptionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        android.app.ActivityOptions $r1, $r2;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        virtualinvoke $r2.<android.app.ActivityOptions: void abort()>();

        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = null;

     label1:
        return;
    }

    boolean continueLaunchTickingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ActivityStack r1;
        android.os.Message r2;
        long $l0;
        byte $b1;
        com.android.server.am.TaskRecord $r3;
        android.os.Handler $r4, $r5, $r6;

        r0 := @this: com.android.server.am.ActivityRecord;

        $l0 = r0.<com.android.server.am.ActivityRecord: long launchTickTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1 = $r3.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r4 = r1.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        r2 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(103, r0);

        $r5 = r1.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeMessages(int)>(103);

        $r6 = r1.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 500L);

        return 1;

     label1:
        return 0;
    }

    final void deliverNewIntentLocked(int, android.content.Intent)
    {
        com.android.server.am.ActivityRecord r0, $r24;
        int i0;
        android.content.Intent r1, r3, $r12, $r15;
        boolean z0, $z2;
        java.util.ArrayList r2, $r16;
        android.os.RemoteException r4, $r23, $r30;
        java.lang.NullPointerException r5, $r31, $r35;
        com.android.server.am.ActivityManagerService $r6, $r20;
        java.lang.String $r7, $r26, $r32;
        com.android.server.am.UriPermissionOwner $r8;
        com.android.server.am.ActivityStack$ActivityState $r9, $r10;
        com.android.server.am.ProcessRecord $r11, $r14, $r17;
        android.app.IApplicationThread $r13, $r18;
        android.view.IApplicationToken$Stub $r19;
        com.android.server.am.ActivityStack $r21;
        com.android.server.am.TaskRecord $r22;
        java.lang.StringBuilder $r25, $r27, $r28, $r29, $r33, $r34;

        r0 := @this: com.android.server.am.ActivityRecord;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r7 = r0.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        $r8 = virtualinvoke r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner getUriPermissionsLocked()>();

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.UriPermissionOwner)>(i0, $r7, r1, $r8);

        z0 = 1;

        $r10 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r9 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r10 == $r9 goto label01;

        $r20 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $z2 = $r20.<com.android.server.am.ActivityManagerService: boolean mSleeping>;

        if $z2 == 0 goto label05;

        $r22 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r21 = $r22.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r24 = virtualinvoke $r21.<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord topRunningActivityLocked(com.android.server.am.ActivityRecord)>(null);

        if $r24 != r0 goto label05;

     label01:
        $r11 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r11 == null goto label05;

        $r14 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r13 = $r14.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r13 == null goto label05;

     label02:
        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r2 = $r16;

        $r15 = new android.content.Intent;

        specialinvoke $r15.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        r3 = $r15;

     label03:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        $r17 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r18 = $r17.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r19 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r18.<android.app.IApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>(r2, $r19);

     label04:
        z0 = 0;

        r1 = r3;

     label05:
        if z0 == 0 goto label06;

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(android.content.Intent)>(r1);

        virtualinvoke r0.<com.android.server.am.ActivityRecord: void addNewIntentLocked(android.content.Intent)>($r12);

     label06:
        return;

     label07:
        $r30 := @caughtexception;

        r4 = $r30;

     label08:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown sending new intent to ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r26, r4);

        goto label05;

     label09:
        $r35 := @caughtexception;

        r5 = $r35;

     label10:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown sending new intent to ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r32, r5);

        goto label05;

     label11:
        $r31 := @caughtexception;

        r5 = $r31;

        r1 = r3;

        goto label10;

     label12:
        $r23 := @caughtexception;

        r4 = $r23;

        r1 = r3;

        goto label08;

        catch android.os.RemoteException from label02 to label03 with label07;
        catch java.lang.NullPointerException from label02 to label03 with label09;
        catch android.os.RemoteException from label03 to label04 with label12;
        catch java.lang.NullPointerException from label03 to label04 with label11;
    }

    void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.am.ActivityRecord r0, $r27, $r28;
        java.io.PrintWriter r1;
        java.lang.String r2, $r7, $r8, $r9, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r23, $r25, $r26, $r36, $r38, $r41, $r60, $r63, $r64, $r68;
        long l0, $l9, $l11, $l14, $l18, $l21, $l23, $l24, $l25, $l26, $l29, $l30;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i13, $i16, $i17, $i27, $i32, $i33, $i34, $i35;
        android.content.Intent r3, $r10;
        java.util.Iterator r4;
        java.lang.ref.WeakReference r5;
        com.android.server.am.PendingIntentRecord r6;
        com.android.server.am.ProcessRecord $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26;
        com.android.server.am.TaskRecord $r14;
        android.content.ComponentName $r16;
        android.content.res.CompatibilityInfo $r22;
        android.content.res.Configuration $r24;
        java.util.ArrayList $r29, $r31, $r51, $r52, $r62, $r70;
        android.app.ActivityOptions $r30, $r53;
        java.util.HashSet $r32, $r40, $r42, $r44, $r46, $r54, $r56, $r58, $r59;
        com.android.server.am.UriPermissionOwner $r33, $r43, $r45, $r55, $r57;
        android.os.Bundle $r34;
        byte $b12, $b15, $b19, $b20, $b22, $b28, $b31;
        com.android.server.am.ActivityStack$ActivityState $r35;
        com.android.server.am.ThumbnailHolder $r37, $r39, $r47, $r49;
        java.lang.CharSequence $r48;
        android.graphics.Bitmap $r50;
        java.lang.Object $r61, $r65, $r71;
        java.lang.StringBuilder $r66, $r67, $r69;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("packageName=");

        $r7 = r0.<com.android.server.am.ActivityRecord: java.lang.String packageName>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" processName=");

        $r8 = r0.<com.android.server.am.ActivityRecord: java.lang.String processName>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("launchedFromUid=");

        $i2 = r0.<com.android.server.am.ActivityRecord: int launchedFromUid>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" launchedFromPackage=");

        $r9 = r0.<com.android.server.am.ActivityRecord: java.lang.String launchedFromPackage>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" userId=");

        $i3 = r0.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("app=");

        $r11 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        $r10 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r12 = virtualinvoke $r10.<android.content.Intent: java.lang.String toInsecureStringWithClip()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("frontOfTask=");

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean frontOfTask>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" task=");

        $r14 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("taskAffinity=");

        $r13 = r0.<com.android.server.am.ActivityRecord: java.lang.String taskAffinity>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("realActivity=");

        $r16 = r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r15 = virtualinvoke $r16.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("baseDir=");

        $r18 = r0.<com.android.server.am.ActivityRecord: java.lang.String baseDir>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r19 = r0.<com.android.server.am.ActivityRecord: java.lang.String resDir>;

        $r17 = r0.<com.android.server.am.ActivityRecord: java.lang.String baseDir>;

        $z1 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z1 != 0 goto label01;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("resDir=");

        $r63 = r0.<com.android.server.am.ActivityRecord: java.lang.String resDir>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r63);

     label01:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("dataDir=");

        $r20 = r0.<com.android.server.am.ActivityRecord: java.lang.String dataDir>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("stateNotNeeded=");

        $z2 = r0.<com.android.server.am.ActivityRecord: boolean stateNotNeeded>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" componentSpecified=");

        $z3 = r0.<com.android.server.am.ActivityRecord: boolean componentSpecified>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" mActivityType=");

        $i4 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("compat=");

        $r22 = r0.<com.android.server.am.ActivityRecord: android.content.res.CompatibilityInfo compat>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r22);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" labelRes=0x");

        $i6 = r0.<com.android.server.am.ActivityRecord: int labelRes>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r21);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" icon=0x");

        $i5 = r0.<com.android.server.am.ActivityRecord: int icon>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r25);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" theme=0x");

        $i7 = r0.<com.android.server.am.ActivityRecord: int theme>;

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("config=");

        $r24 = r0.<com.android.server.am.ActivityRecord: android.content.res.Configuration configuration>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r24);

        $r27 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        if $r27 != null goto label02;

        $r64 = r0.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        if $r64 == null goto label03;

     label02:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("resultTo=");

        $r28 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord resultTo>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r28);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" resultWho=");

        $r26 = r0.<com.android.server.am.ActivityRecord: java.lang.String resultWho>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r26);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" resultCode=");

        $i8 = r0.<com.android.server.am.ActivityRecord: int requestCode>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i8);

     label03:
        $r31 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        if $r31 == null goto label04;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("results=");

        $r70 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r70);

     label04:
        $r32 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        if $r32 == null goto label09;

        $r59 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        $i34 = virtualinvoke $r59.<java.util.HashSet: int size()>();

        if $i34 <= 0 goto label09;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Pending Results:");

        $r58 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet pendingResults>;

        r4 = virtualinvoke $r58.<java.util.HashSet: java.util.Iterator iterator()>();

     label05:
        $z26 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z26 == 0 goto label09;

        $r65 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.ref.WeakReference) $r65;

        if r5 == null goto label07;

        $r71 = virtualinvoke r5.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r6 = (com.android.server.am.PendingIntentRecord) $r71;

     label06:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        if r6 != null goto label08;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("null");

        goto label05;

     label07:
        r6 = null;

        goto label06;

     label08:
        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r6);

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<com.android.server.am.PendingIntentRecord: void dump(java.io.PrintWriter,java.lang.String)>(r1, $r68);

        goto label05;

     label09:
        $r29 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        if $r29 == null goto label13;

        $r52 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        $i33 = virtualinvoke $r52.<java.util.ArrayList: int size()>();

        if $i33 <= 0 goto label13;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Pending New Intents:");

        i1 = 0;

     label10:
        $r51 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        $i35 = virtualinvoke $r51.<java.util.ArrayList: int size()>();

        if i1 >= $i35 goto label13;

        $r62 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList newIntents>;

        $r61 = virtualinvoke $r62.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (android.content.Intent) $r61;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        if r3 != null goto label12;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("null");

     label11:
        i1 = i1 + 1;

        goto label10;

     label12:
        $r60 = virtualinvoke r3.<android.content.Intent: java.lang.String toShortString(boolean,boolean,boolean,boolean)>(0, 1, 0, 1);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r60);

        goto label11;

     label13:
        $r30 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r30 == null goto label14;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("pendingOptions=");

        $r53 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r53);

     label14:
        $r33 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        if $r33 == null goto label16;

        $r45 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        $r46 = $r45.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        if $r46 == null goto label15;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("readUriPermissions=");

        $r55 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        $r54 = $r55.<com.android.server.am.UriPermissionOwner: java.util.HashSet readUriPermissions>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r54);

     label15:
        $r43 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        $r44 = $r43.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        if $r44 == null goto label16;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("writeUriPermissions=");

        $r57 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        $r56 = $r57.<com.android.server.am.UriPermissionOwner: java.util.HashSet writeUriPermissions>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r56);

     label16:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("launchFailed=");

        $z4 = r0.<com.android.server.am.ActivityRecord: boolean launchFailed>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" launchCount=");

        $i10 = r0.<com.android.server.am.ActivityRecord: int launchCount>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastLaunchTime=");

        $l9 = r0.<com.android.server.am.ActivityRecord: long lastLaunchTime>;

        $b12 = $l9 cmp 0L;

        if $b12 != 0 goto label29;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

     label17:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("haveState=");

        $z5 = r0.<com.android.server.am.ActivityRecord: boolean haveState>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" icicle=");

        $r34 = r0.<com.android.server.am.ActivityRecord: android.os.Bundle icicle>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r34);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("state=");

        $r35 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r35);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" stopped=");

        $z8 = r0.<com.android.server.am.ActivityRecord: boolean stopped>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z8);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" delayedResume=");

        $z7 = r0.<com.android.server.am.ActivityRecord: boolean delayedResume>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z7);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" finishing=");

        $z6 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z6);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("keysPaused=");

        $z12 = r0.<com.android.server.am.ActivityRecord: boolean keysPaused>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z12);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" inHistory=");

        $z11 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z11);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" visible=");

        $z10 = r0.<com.android.server.am.ActivityRecord: boolean visible>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z10);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" sleeping=");

        $z9 = r0.<com.android.server.am.ActivityRecord: boolean sleeping>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z9);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" idle=");

        $z16 = r0.<com.android.server.am.ActivityRecord: boolean idle>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z16);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("fullscreen=");

        $z17 = r0.<com.android.server.am.ActivityRecord: boolean fullscreen>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z17);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" noDisplay=");

        $z18 = r0.<com.android.server.am.ActivityRecord: boolean noDisplay>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z18);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" immersive=");

        $z19 = r0.<com.android.server.am.ActivityRecord: boolean immersive>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z19);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" launchMode=");

        $i13 = r0.<com.android.server.am.ActivityRecord: int launchMode>;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("frozenBeforeDestroy=");

        $z13 = r0.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z13);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" thumbnailNeeded=");

        $z14 = r0.<com.android.server.am.ActivityRecord: boolean thumbnailNeeded>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z14);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" forceNewConfig=");

        $z15 = r0.<com.android.server.am.ActivityRecord: boolean forceNewConfig>;

        virtualinvoke r1.<java.io.PrintWriter: void println(boolean)>($z15);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mActivityType=");

        $i16 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        $r38 = specialinvoke r0.<com.android.server.am.ActivityRecord: java.lang.String activityTypeToString(int)>($i16);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r38);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("thumbHolder: ");

        $r39 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        $i17 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r39);

        $r36 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i17);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r36);

        $r37 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        if $r37 == null goto label18;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" bm=");

        $r49 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        $r50 = $r49.<com.android.server.am.ThumbnailHolder: android.graphics.Bitmap lastThumbnail>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r50);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" desc=");

        $r47 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        $r48 = $r47.<com.android.server.am.ThumbnailHolder: java.lang.CharSequence lastDescription>;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.Object)>($r48);

     label18:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $l14 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        $b15 = $l14 cmp 0L;

        if $b15 != 0 goto label19;

        $l30 = r0.<com.android.server.am.ActivityRecord: long startTime>;

        $b31 = $l30 cmp 0L;

        if $b31 == 0 goto label22;

     label19:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("displayStartTime=");

        $l23 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        $b22 = $l23 cmp 0L;

        if $b22 != 0 goto label30;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

     label20:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" startTime=");

        $l24 = r0.<com.android.server.am.ActivityRecord: long startTime>;

        $b19 = $l24 cmp 0L;

        if $b19 != 0 goto label31;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

     label21:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label22:
        $l21 = r0.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        $b20 = $l21 cmp 0L;

        if $b20 != 0 goto label23;

        $z24 = r0.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        if $z24 != 0 goto label23;

        $z25 = r0.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z25 == 0 goto label25;

     label23:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("waitingVisible=");

        $z23 = r0.<com.android.server.am.ActivityRecord: boolean waitingVisible>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z23);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" nowVisible=");

        $z22 = r0.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z22);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" lastVisibleTime=");

        $l29 = r0.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        $b28 = $l29 cmp 0L;

        if $b28 != 0 goto label32;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("0");

     label24:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

     label25:
        $z20 = r0.<com.android.server.am.ActivityRecord: boolean configDestroy>;

        if $z20 != 0 goto label26;

        $i32 = r0.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        if $i32 == 0 goto label27;

     label26:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("configDestroy=");

        $z21 = r0.<com.android.server.am.ActivityRecord: boolean configDestroy>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z21);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" configChangeFlags=");

        $i27 = r0.<com.android.server.am.ActivityRecord: int configChangeFlags>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i27);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r41);

     label27:
        $r42 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        if $r42 == null goto label28;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("connections=");

        $r40 = r0.<com.android.server.am.ActivityRecord: java.util.HashSet connections>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r40);

     label28:
        return;

     label29:
        $l11 = r0.<com.android.server.am.ActivityRecord: long lastLaunchTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l11, l0, r1);

        goto label17;

     label30:
        $l25 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l25, l0, r1);

        goto label20;

     label31:
        $l18 = r0.<com.android.server.am.ActivityRecord: long startTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l18, l0, r1);

        goto label21;

     label32:
        $l26 = r0.<com.android.server.am.ActivityRecord: long lastVisibleTime>;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>($l26, l0, r1);

        goto label24;
    }

    void finishLaunchTickingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.TaskRecord $r1;
        com.android.server.am.ActivityStack $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        r0.<com.android.server.am.ActivityRecord: long launchTickTime> = 0L;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $r2 = $r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $r3 = $r2.<com.android.server.am.ActivityStack: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(103);

        return;
    }

    public long getKeyDispatchingTimeout()
    {
        com.android.server.am.ActivityRecord r0, $r3;
        com.android.server.am.ActivityManagerService r1;
        java.lang.Throwable r2, $r4;
        long l0;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        entermonitor r1;

     label1:
        $r3 = specialinvoke r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord getWaitingHistoryRecordLocked()>();

        l0 = staticinvoke <com.android.server.am.ActivityManagerService: long getInputDispatchingTimeoutLocked(com.android.server.am.ActivityRecord)>($r3);

        exitmonitor r1;

     label2:
        return l0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    com.android.server.am.UriPermissionOwner getUriPermissionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.UriPermissionOwner $r1, $r2, $r3;
        com.android.server.am.ActivityManagerService $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        if $r1 != null goto label1;

        $r3 = new com.android.server.am.UriPermissionOwner;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        specialinvoke $r3.<com.android.server.am.UriPermissionOwner: void <init>(com.android.server.am.ActivityManagerService,java.lang.Object)>($r4, r0);

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions> = $r3;

     label1:
        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        return $r2;
    }

    boolean isApplicationActivity()
    {
        com.android.server.am.ActivityRecord r0;
        int $i0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $i0 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isHomeActivity()
    {
        com.android.server.am.ActivityRecord r0;
        int $i0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $i0 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isInHistory()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        return $z0;
    }

    public boolean isInterestingToUserLocked()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0, $z1;
        com.android.server.am.ActivityStack$ActivityState $r1, $r2, $r3, $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean visible>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z1 != 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r1 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState PAUSING>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStack$ActivityState state>;

        $r3 = <com.android.server.am.ActivityStack$ActivityState: com.android.server.am.ActivityStack$ActivityState RESUMED>;

        if $r4 != $r3 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean isNotResolverActivity()
    {
        com.android.server.am.ActivityRecord r0;
        java.lang.Class $r1;
        java.lang.String $r2, $r4;
        android.content.ComponentName $r3;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = class "com/android/internal/app/ResolverActivity";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $r4 = virtualinvoke $r3.<android.content.ComponentName: java.lang.String getClassName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isRecentsActivity()
    {
        com.android.server.am.ActivityRecord r0;
        int $i0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $i0 = r0.<com.android.server.am.ActivityRecord: int mActivityType>;

        if $i0 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isRootActivity()
    {
        com.android.server.am.ActivityRecord r0;
        java.util.ArrayList r1;
        boolean z0;
        java.lang.Object r2;
        com.android.server.am.TaskRecord $r3;
        int $i0;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1 = $r3.<com.android.server.am.TaskRecord: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if $i0 == 0 goto label1;

        r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        z0 = 0;

        if r0 != r2 goto label2;

     label1:
        z0 = 1;

     label2:
        return z0;
    }

    public boolean keyDispatchingTimedOut(java.lang.String)
    {
        com.android.server.am.ActivityRecord r0, r4;
        java.lang.String r1;
        com.android.server.am.ActivityManagerService r2, $r6;
        java.lang.Throwable r3, $r7;
        com.android.server.am.ProcessRecord r5;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        entermonitor r2;

     label1:
        r4 = specialinvoke r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityRecord getWaitingHistoryRecordLocked()>();

     label2:
        if r4 == null goto label6;

     label3:
        r5 = r4.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

     label4:
        exitmonitor r2;

     label5:
        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $z0 = virtualinvoke $r6.<com.android.server.am.ActivityManagerService: boolean inputDispatchingTimedOut(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)>(r5, r4, r0, 0, r1);

        return $z0;

     label6:
        r5 = null;

        goto label4;

     label7:
        $r7 := @caughtexception;

        r3 = $r7;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    void makeFinishing()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.TaskRecord r1, $r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label2;

        r0.<com.android.server.am.ActivityRecord: boolean finishing> = 1;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r2 == null goto label1;

        $z2 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        if $z2 == 0 goto label1;

        r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i0 = r1.<com.android.server.am.TaskRecord: int numActivities>;

        $i1 = -1 + $i0;

        r1.<com.android.server.am.TaskRecord: int numActivities> = $i1;

     label1:
        $z1 = r0.<com.android.server.am.ActivityRecord: boolean stopped>;

        if $z1 == 0 goto label2;

        virtualinvoke r0.<com.android.server.am.ActivityRecord: void clearOptionsLocked()>();

     label2:
        return;
    }

    public boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ProcessRecord r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        if r1 == null goto label1;

        $z0 = r1.<com.android.server.am.ProcessRecord: boolean crashing>;

        if $z0 != 0 goto label1;

        $z1 = r1.<com.android.server.am.ProcessRecord: boolean notResponding>;

        if $z1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void pauseKeyDispatchingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r1;
        android.view.IApplicationToken$Stub $r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean keysPaused>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.am.ActivityRecord: boolean keysPaused> = 1;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r3 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void pauseKeyDispatching(android.os.IBinder)>($r2);

     label1:
        return;
    }

    void putInHistory()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.TaskRecord r1, $r2;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.am.ActivityRecord: boolean inHistory> = 1;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r2 == null goto label1;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label1;

        r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i0 = r1.<com.android.server.am.TaskRecord: int numActivities>;

        $i1 = 1 + $i0;

        r1.<com.android.server.am.TaskRecord: int numActivities> = $i1;

     label1:
        return;
    }

    void removeResultsLocked(com.android.server.am.ActivityRecord, java.lang.String, int)
    {
        com.android.server.am.ActivityRecord r0, r1, $r8;
        java.lang.String r2, $r9, $r10;
        int i0, i1, $i2, $i3;
        com.android.server.am.ActivityResult r3;
        java.util.ArrayList $r4, $r5, $r6, $r11;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ActivityRecord;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r4 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        if $r4 == null goto label6;

        $r5 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = -1 + $i2;

     label1:
        if i1 < 0 goto label6;

        $r6 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.am.ActivityResult) $r7;

        $r8 = r3.<com.android.server.am.ActivityResult: com.android.server.am.ActivityRecord mFrom>;

        if $r8 == r1 goto label3;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        $r9 = r3.<com.android.server.am.ActivityResult: java.lang.String mResultWho>;

        if $r9 != null goto label5;

        if r2 != null goto label2;

     label4:
        $i3 = r3.<com.android.server.am.ActivityResult: int mRequestCode>;

        if $i3 != i0 goto label2;

        $r11 = r0.<com.android.server.am.ActivityRecord: java.util.ArrayList results>;

        virtualinvoke $r11.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        goto label2;

     label5:
        $r10 = r3.<com.android.server.am.ActivityResult: java.lang.String mResultWho>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label4;

        goto label2;

     label6:
        return;
    }

    void removeUriPermissionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.UriPermissionOwner $r1, $r2;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions>;

        virtualinvoke $r2.<com.android.server.am.UriPermissionOwner: void removeUriPermissionsLocked()>();

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.UriPermissionOwner uriPermissions> = null;

     label1:
        return;
    }

    public void reportFullyDrawnLocked()
    {
        com.android.server.am.ActivityRecord r0;
        long l0, l1, l2, $l3, $l5, $l7, $l9, $l17;
        com.android.server.am.ActivityStack r1;
        java.lang.Object[] r2;
        java.lang.StringBuilder r3;
        byte $b4, $b6, $b8, $b13, $b16;
        com.android.server.am.TaskRecord $r4;
        int $i10, $i11, $i14;
        java.lang.Integer $r5, $r6;
        java.lang.String $r7, $r10, $r14;
        java.lang.Long $r8, $r9;
        com.android.server.am.ActivityManagerService $r12, $r16;
        android.content.ComponentName $r19;
        com.android.server.am.UsageStatsService $r20;

        r0 := @this: com.android.server.am.ActivityRecord;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label1;

        specialinvoke r0.<com.android.server.am.ActivityRecord: void reportLaunchTimeLocked(long)>(l0);

     label1:
        $l5 = r0.<com.android.server.am.ActivityRecord: long fullyDrawnStartTime>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label5;

        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        r1 = $r4.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        $l7 = r0.<com.android.server.am.ActivityRecord: long fullyDrawnStartTime>;

        l1 = l0 - $l7;

        $l9 = r1.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime>;

        $b8 = $l9 cmp 0L;

        if $b8 == 0 goto label6;

        $l17 = r1.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime>;

        l2 = l0 - $l17;

     label2:
        staticinvoke <android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>(64L, "drawing", 0);

        r2 = newarray (java.lang.Object)[5];

        $i10 = r0.<com.android.server.am.ActivityRecord: int userId>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        r2[0] = $r5;

        $i11 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        r2[1] = $r6;

        $r7 = r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        r2[2] = $r7;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        r2[3] = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        r2[4] = $r9;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(30042, r2);

        $r12 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        r3 = $r12.<com.android.server.am.ActivityManagerService: java.lang.StringBuilder mStringBuilder>;

        virtualinvoke r3.<java.lang.StringBuilder: void setLength(int)>(0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fully drawn ");

        $r10 = r0.<com.android.server.am.ActivityRecord: java.lang.String shortComponentName>;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l1, r3);

        $b13 = l1 cmp l2;

        if $b13 == 0 goto label3;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (total ");

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>(l2, r3);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label3:
        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityManager", $r14);

        $b16 = l2 cmp 0L;

        if $b16 <= 0 goto label4;

        $r16 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r20 = $r16.<com.android.server.am.ActivityManagerService: com.android.server.am.UsageStatsService mUsageStatsService>;

        $r19 = r0.<com.android.server.am.ActivityRecord: android.content.ComponentName realActivity>;

        $i14 = (int) l2;

        virtualinvoke $r20.<com.android.server.am.UsageStatsService: void noteFullyDrawnTime(android.content.ComponentName,int)>($r19, $i14);

     label4:
        r0.<com.android.server.am.ActivityRecord: long fullyDrawnStartTime> = 0L;

        r1.<com.android.server.am.ActivityStack: long mFullyDrawnStartTime> = 0L;

     label5:
        return;

     label6:
        l2 = l1;

        goto label2;
    }

    void resumeKeyDispatchingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r1;
        android.view.IApplicationToken$Stub $r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean keysPaused>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.am.ActivityRecord: boolean keysPaused> = 0;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r3 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void resumeKeyDispatching(android.os.IBinder)>($r2);

     label1:
        return;
    }

    public void setSleeping(boolean)
    {
        com.android.server.am.ActivityRecord r0;
        boolean z0, $z1, $z2;
        android.os.RemoteException r1, $r13;
        com.android.server.am.ProcessRecord $r2, $r3, $r5;
        android.app.IApplicationThread $r4, $r7;
        android.view.IApplicationToken$Stub $r6;
        com.android.server.am.ActivityStackSupervisor $r8, $r10;
        java.util.ArrayList $r9, $r11;
        java.lang.StringBuilder $r12, $r14, $r18;
        android.content.ComponentName $r15;
        android.content.Intent $r16;
        java.lang.String $r17;

        r0 := @this: com.android.server.am.ActivityRecord;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean sleeping>;

        if $z1 != z0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r4 = $r3.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        if $r4 == null goto label1;

     label3:
        $r5 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ProcessRecord app>;

        $r7 = $r5.<com.android.server.am.ProcessRecord: android.app.IApplicationThread thread>;

        $r6 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        interfaceinvoke $r7.<android.app.IApplicationThread: void scheduleSleeping(android.os.IBinder,boolean)>($r6, z0);

     label4:
        if z0 == 0 goto label6;

     label5:
        $r8 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r9 = $r8.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        $z2 = virtualinvoke $r9.<java.util.ArrayList: boolean contains(java.lang.Object)>(r0);

        if $z2 != 0 goto label6;

        $r10 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r11 = $r10.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mGoingToSleepActivities>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label6:
        r0.<com.android.server.am.ActivityRecord: boolean sleeping> = z0;

     label7:
        return;

     label8:
        $r13 := @caughtexception;

        r1 = $r13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception thrown when sleeping: ");

        $r16 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r15 = virtualinvoke $r16.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityManager", $r17, r1);

        return;

        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label5 to label6 with label8;
        catch android.os.RemoteException from label6 to label7 with label8;
    }

    void setTask(com.android.server.am.TaskRecord, com.android.server.am.ThumbnailHolder, boolean)
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.TaskRecord r1, r3, $r6, $r10, $r11, $r12, $r17;
        com.android.server.am.ThumbnailHolder r2, $r8, $r9;
        boolean z0, $z1, $z2, $z3;
        java.lang.StringBuilder r4, $r13, $r14;
        com.android.server.am.ActivityStack r5;
        android.content.Intent $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r15;
        com.android.server.am.ActivityStackSupervisor $r16;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.TaskRecord;

        r2 := @parameter1: com.android.server.am.ThumbnailHolder;

        z0 := @parameter2: boolean;

        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r6 == null goto label1;

        $r11 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $z3 = virtualinvoke $r11.<com.android.server.am.TaskRecord: boolean removeActivity(com.android.server.am.ActivityRecord)>(r0);

        if $z3 == 0 goto label1;

        $r12 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r12 == r1 goto label6;

        $r16 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r17 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        virtualinvoke $r16.<com.android.server.am.ActivityStackSupervisor: void removeTask(com.android.server.am.TaskRecord)>($r17);

     label1:
        $z1 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        if $z1 == 0 goto label3;

        $z2 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z2 != 0 goto label3;

        $r10 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r10 == null goto label2;

        r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i3 = r3.<com.android.server.am.TaskRecord: int numActivities>;

        $i5 = -1 + $i3;

        r3.<com.android.server.am.TaskRecord: int numActivities> = $i5;

     label2:
        if r1 == null goto label3;

        $i2 = r1.<com.android.server.am.TaskRecord: int numActivities>;

        $i4 = 1 + $i2;

        r1.<com.android.server.am.TaskRecord: int numActivities> = $i4;

     label3:
        if r2 != null goto label4;

        r2 = r1;

     label4:
        r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task> = r1;

        if z0 != 0 goto label9;

        $r7 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $i0 = virtualinvoke $r7.<android.content.Intent: int getFlags()>();

        $i1 = 524288 & $i0;

        if $i1 == 0 goto label9;

        $r8 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        if $r8 != null goto label5;

        $r9 = new com.android.server.am.ThumbnailHolder;

        specialinvoke $r9.<com.android.server.am.ThumbnailHolder: void <init>()>();

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder> = $r9;

     label5:
        return;

     label6:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!!! REMOVE THIS LOG !!! setTask: nearly removed stack=");

        if r1 != null goto label8;

        r5 = null;

     label7:
        $r14 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("ActivityManager", $r15);

        goto label1;

     label8:
        r5 = r1.<com.android.server.am.TaskRecord: com.android.server.am.ActivityStack stack>;

        goto label7;

     label9:
        r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder> = r2;

        return;
    }

    public void startFreezingScreenLocked(com.android.server.am.ProcessRecord, int)
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ProcessRecord r1;
        int i0;
        boolean $z0;
        com.android.server.am.ActivityManagerService $r2;
        android.view.IApplicationToken$Stub $r3;
        com.android.server.wm.WindowManagerService $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: com.android.server.am.ProcessRecord;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<com.android.server.am.ActivityRecord: boolean mayFreezeScreenLocked(com.android.server.am.ProcessRecord)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r4 = $r2.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r3 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void startAppFreezingScreen(android.os.IBinder,int)>($r3, i0);

     label1:
        return;
    }

    void startLaunchTickingLocked()
    {
        com.android.server.am.ActivityRecord r0;
        boolean $z0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = <com.android.server.am.ActivityManagerService: boolean IS_USER_BUILD>;

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $l0 = r0.<com.android.server.am.ActivityRecord: long launchTickTime>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityRecord: long launchTickTime> = $l2;

        virtualinvoke r0.<com.android.server.am.ActivityRecord: boolean continueLaunchTickingLocked()>();

        return;
    }

    public void stopFreezingScreenLocked(boolean)
    {
        com.android.server.am.ActivityRecord r0;
        boolean z0, $z1;
        com.android.server.am.ActivityManagerService $r1;
        android.view.IApplicationToken$Stub $r2;
        com.android.server.wm.WindowManagerService $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy>;

        if $z1 == 0 goto label2;

     label1:
        r0.<com.android.server.am.ActivityRecord: boolean frozenBeforeDestroy> = 0;

        $r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        $r3 = $r1.<com.android.server.am.ActivityManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.view.IApplicationToken$Stub appToken>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void stopAppFreezingScreen(android.os.IBinder,boolean)>($r2, z0);

     label2:
        return;
    }

    void takeFromHistory()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.TaskRecord r1, $r2;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: com.android.server.am.ActivityRecord;

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean inHistory>;

        if $z0 == 0 goto label2;

        r0.<com.android.server.am.ActivityRecord: boolean inHistory> = 0;

        $r2 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r2 == null goto label1;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label1;

        r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        $i0 = r1.<com.android.server.am.TaskRecord: int numActivities>;

        $i1 = -1 + $i0;

        r1.<com.android.server.am.TaskRecord: int numActivities> = $i1;

        r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task> = null;

     label1:
        virtualinvoke r0.<com.android.server.am.ActivityRecord: void clearOptionsLocked()>();

     label2:
        return;
    }

    android.app.ActivityOptions takeOptionsLocked()
    {
        com.android.server.am.ActivityRecord r0;
        android.app.ActivityOptions r1;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = null;

        return r1;
    }

    public java.lang.String toString()
    {
        com.android.server.am.ActivityRecord r0;
        java.lang.StringBuilder r1, r2, r3, $r6, $r20, $r21, $r24;
        int i0, $i1, $i2;
        java.lang.String r4, $r5, $r9, $r16, $r17, $r18, $r19, $r25;
        android.content.ComponentName $r13;
        android.content.Intent $r14;
        boolean $z0;
        com.android.server.am.TaskRecord $r22, $r23;

        r0 := @this: com.android.server.am.ActivityRecord;

        $r5 = r0.<com.android.server.am.ActivityRecord: java.lang.String stringName>;

        if $r5 == null goto label5;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = r0.<com.android.server.am.ActivityRecord: java.lang.String stringName>;

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r2 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t");

        $r22 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        if $r22 != null goto label3;

        i0 = -1;

     label1:
        r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean finishing>;

        if $z0 == 0 goto label4;

        r4 = " f}";

     label2:
        $r24 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;

     label3:
        $r23 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.TaskRecord task>;

        i0 = $r23.<com.android.server.am.TaskRecord: int taskId>;

        goto label1;

     label4:
        r4 = "}";

        goto label2;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ActivityRecord{");

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u");

        $i2 = r0.<com.android.server.am.ActivityRecord: int userId>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r14 = r0.<com.android.server.am.ActivityRecord: android.content.Intent intent>;

        $r13 = virtualinvoke $r14.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r16 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.am.ActivityRecord: java.lang.String stringName> = $r18;

        $r17 = virtualinvoke r0.<com.android.server.am.ActivityRecord: java.lang.String toString()>();

        return $r17;
    }

    void updateOptionsLocked(android.app.ActivityOptions)
    {
        com.android.server.am.ActivityRecord r0;
        android.app.ActivityOptions r1, $r2, $r3;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: android.app.ActivityOptions;

        if r1 == null goto label2;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        virtualinvoke $r3.<android.app.ActivityOptions: void abort()>();

     label1:
        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = r1;

     label2:
        return;
    }

    void updateOptionsLocked(android.os.Bundle)
    {
        com.android.server.am.ActivityRecord r0;
        android.os.Bundle r1;
        android.app.ActivityOptions $r2, $r3, $r4;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label2;

        $r2 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions>;

        virtualinvoke $r4.<android.app.ActivityOptions: void abort()>();

     label1:
        $r3 = new android.app.ActivityOptions;

        specialinvoke $r3.<android.app.ActivityOptions: void <init>(android.os.Bundle)>(r1);

        r0.<com.android.server.am.ActivityRecord: android.app.ActivityOptions pendingOptions> = $r3;

     label2:
        return;
    }

    void updateThumbnail(android.graphics.Bitmap, java.lang.CharSequence)
    {
        com.android.server.am.ActivityRecord r0;
        android.graphics.Bitmap r1;
        java.lang.CharSequence r2;
        com.android.server.am.ThumbnailHolder $r3, $r4, $r5;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: java.lang.CharSequence;

        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        if $r3 == null goto label2;

        if r1 == null goto label1;

        $r5 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        $r5.<com.android.server.am.ThumbnailHolder: android.graphics.Bitmap lastThumbnail> = r1;

     label1:
        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ThumbnailHolder thumbHolder>;

        $r4.<com.android.server.am.ThumbnailHolder: java.lang.CharSequence lastDescription> = r2;

     label2:
        return;
    }

    public void windowsDrawn()
    {
        com.android.server.am.ActivityRecord r0;
        com.android.server.am.ActivityManagerService r1;
        java.lang.Throwable r2, $r3;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        entermonitor r1;

     label1:
        $l0 = r0.<com.android.server.am.ActivityRecord: long displayStartTime>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke r0.<com.android.server.am.ActivityRecord: void reportLaunchTimeLocked(long)>($l2);

     label2:
        r0.<com.android.server.am.ActivityRecord: long startTime> = 0L;

        virtualinvoke r0.<com.android.server.am.ActivityRecord: void finishLaunchTickingLocked()>();

        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        r2 = $r3;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void windowsGone()
    {
        com.android.server.am.ActivityRecord r0;

        r0 := @this: com.android.server.am.ActivityRecord;

        r0.<com.android.server.am.ActivityRecord: boolean nowVisible> = 0;

        return;
    }

    public void windowsVisible()
    {
        com.android.server.am.ActivityRecord r0, $r12;
        com.android.server.am.ActivityManagerService r1, $r6;
        java.lang.Throwable r2, $r16;
        int i0, i1;
        com.android.server.am.ActivityStackSupervisor $r3, $r4, $r7, $r8, $r11, $r15;
        boolean $z0, $z1;
        long $l2;
        java.util.ArrayList $r5, $r9, $r10;
        java.lang.Object $r13;

        r0 := @this: com.android.server.am.ActivityRecord;

        r1 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r3.<com.android.server.am.ActivityStackSupervisor: void reportActivityVisibleLocked(com.android.server.am.ActivityRecord)>(r0);

        $z0 = r0.<com.android.server.am.ActivityRecord: boolean nowVisible>;

        if $z0 != 0 goto label03;

        r0.<com.android.server.am.ActivityRecord: boolean nowVisible> = 1;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.am.ActivityRecord: long lastVisibleTime> = $l2;

        $z1 = r0.<com.android.server.am.ActivityRecord: boolean idle>;

        if $z1 != 0 goto label05;

        $r15 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r15.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList processStoppingActivitiesLocked(boolean)>(0);

     label02:
        $r6 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityManagerService service>;

        virtualinvoke $r6.<com.android.server.am.ActivityManagerService: void scheduleAppGcsLocked()>();

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        $r4 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r5 = $r4.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label06:
        if i0 <= 0 goto label02;

        i1 = 0;

     label07:
        if i1 >= i0 goto label10;

     label08:
        $r11 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r10 = $r11.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        $r13 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r12 = (com.android.server.am.ActivityRecord) $r13;

        $r12.<com.android.server.am.ActivityRecord: boolean waitingVisible> = 0;

     label09:
        i1 = i1 + 1;

        goto label07;

     label10:
        $r7 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        $r9 = $r7.<com.android.server.am.ActivityStackSupervisor: java.util.ArrayList mWaitingVisibleActivities>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

        $r8 = r0.<com.android.server.am.ActivityRecord: com.android.server.am.ActivityStackSupervisor mStackSupervisor>;

        virtualinvoke $r8.<com.android.server.am.ActivityStackSupervisor: void scheduleIdleLocked()>();

     label11:
        goto label02;

     label12:
        $r16 := @caughtexception;

        r2 = $r16;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label02 to label03 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public static void <clinit>()
    {
        <com.android.server.am.ActivityRecord: java.lang.String TAG> = "ActivityManager";

        <com.android.server.am.ActivityRecord: java.lang.String RECENTS_PACKAGE_NAME> = "com.android.systemui.recent";

        <com.android.server.am.ActivityRecord: int RECENTS_ACTIVITY_TYPE> = 2;

        <com.android.server.am.ActivityRecord: int HOME_ACTIVITY_TYPE> = 1;

        <com.android.server.am.ActivityRecord: boolean DEBUG_SAVED_STATE> = 0;

        <com.android.server.am.ActivityRecord: int APPLICATION_ACTIVITY_TYPE> = 0;

        return;
    }
}
