public class android.location.FusedBatchOptions extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private volatile int mFlags;
    private volatile double mMaxPowerAllocationInMW;
    private volatile long mPeriodInNS;
    private volatile int mSourcesToUse;

    static void <clinit>()
    {
        android.location.FusedBatchOptions$1 $r0;

        $r0 = new android.location.FusedBatchOptions$1;

        specialinvoke $r0.<android.location.FusedBatchOptions$1: void <init>()>();

        <android.location.FusedBatchOptions: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.location.FusedBatchOptions r0;

        r0 := @this: android.location.FusedBatchOptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.location.FusedBatchOptions: long mPeriodInNS> = 0L;

        r0.<android.location.FusedBatchOptions: int mSourcesToUse> = 0;

        r0.<android.location.FusedBatchOptions: int mFlags> = 0;

        r0.<android.location.FusedBatchOptions: double mMaxPowerAllocationInMW> = 0.0;

        return;
    }

    public int describeContents()
    {
        android.location.FusedBatchOptions r0;

        r0 := @this: android.location.FusedBatchOptions;

        return 0;
    }

    public int getFlags()
    {
        android.location.FusedBatchOptions r0;
        int $i0;

        r0 := @this: android.location.FusedBatchOptions;

        $i0 = r0.<android.location.FusedBatchOptions: int mFlags>;

        return $i0;
    }

    public double getMaxPowerAllocationInMW()
    {
        android.location.FusedBatchOptions r0;
        double $d0;

        r0 := @this: android.location.FusedBatchOptions;

        $d0 = r0.<android.location.FusedBatchOptions: double mMaxPowerAllocationInMW>;

        return $d0;
    }

    public long getPeriodInNS()
    {
        android.location.FusedBatchOptions r0;
        long $l0;

        r0 := @this: android.location.FusedBatchOptions;

        $l0 = r0.<android.location.FusedBatchOptions: long mPeriodInNS>;

        return $l0;
    }

    public int getSourcesToUse()
    {
        android.location.FusedBatchOptions r0;
        int $i0;

        r0 := @this: android.location.FusedBatchOptions;

        $i0 = r0.<android.location.FusedBatchOptions: int mSourcesToUse>;

        return $i0;
    }

    public boolean isFlagSet(int)
    {
        android.location.FusedBatchOptions r0;
        int i0, $i1, $i2;

        r0 := @this: android.location.FusedBatchOptions;

        i0 := @parameter0: int;

        $i1 = r0.<android.location.FusedBatchOptions: int mFlags>;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isSourceToUseSet(int)
    {
        android.location.FusedBatchOptions r0;
        int i0, $i1, $i2;

        r0 := @this: android.location.FusedBatchOptions;

        i0 := @parameter0: int;

        $i1 = r0.<android.location.FusedBatchOptions: int mSourcesToUse>;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void resetFlag(int)
    {
        android.location.FusedBatchOptions r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.location.FusedBatchOptions;

        i0 := @parameter0: int;

        $i2 = r0.<android.location.FusedBatchOptions: int mFlags>;

        $i1 = i0 ^ -1;

        $i3 = $i2 & $i1;

        r0.<android.location.FusedBatchOptions: int mFlags> = $i3;

        return;
    }

    public void resetSourceToUse(int)
    {
        android.location.FusedBatchOptions r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.location.FusedBatchOptions;

        i0 := @parameter0: int;

        $i2 = r0.<android.location.FusedBatchOptions: int mSourcesToUse>;

        $i1 = i0 ^ -1;

        $i3 = $i2 & $i1;

        r0.<android.location.FusedBatchOptions: int mSourcesToUse> = $i3;

        return;
    }

    public void setFlag(int)
    {
        android.location.FusedBatchOptions r0;
        int i0, $i1, $i2;

        r0 := @this: android.location.FusedBatchOptions;

        i0 := @parameter0: int;

        $i1 = r0.<android.location.FusedBatchOptions: int mFlags>;

        $i2 = i0 | $i1;

        r0.<android.location.FusedBatchOptions: int mFlags> = $i2;

        return;
    }

    public void setMaxPowerAllocationInMW(double)
    {
        android.location.FusedBatchOptions r0;
        double d0;

        r0 := @this: android.location.FusedBatchOptions;

        d0 := @parameter0: double;

        r0.<android.location.FusedBatchOptions: double mMaxPowerAllocationInMW> = d0;

        return;
    }

    public void setPeriodInNS(long)
    {
        android.location.FusedBatchOptions r0;
        long l0;

        r0 := @this: android.location.FusedBatchOptions;

        l0 := @parameter0: long;

        r0.<android.location.FusedBatchOptions: long mPeriodInNS> = l0;

        return;
    }

    public void setSourceToUse(int)
    {
        android.location.FusedBatchOptions r0;
        int i0, $i1, $i2;

        r0 := @this: android.location.FusedBatchOptions;

        i0 := @parameter0: int;

        $i1 = r0.<android.location.FusedBatchOptions: int mSourcesToUse>;

        $i2 = i0 | $i1;

        r0.<android.location.FusedBatchOptions: int mSourcesToUse> = $i2;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.location.FusedBatchOptions r0;
        android.os.Parcel r1;
        int i0, $i2, $i3;
        double $d0;
        long $l1;

        r0 := @this: android.location.FusedBatchOptions;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $d0 = r0.<android.location.FusedBatchOptions: double mMaxPowerAllocationInMW>;

        virtualinvoke r1.<android.os.Parcel: void writeDouble(double)>($d0);

        $l1 = r0.<android.location.FusedBatchOptions: long mPeriodInNS>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $i2 = r0.<android.location.FusedBatchOptions: int mSourcesToUse>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.location.FusedBatchOptions: int mFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        return;
    }
}
