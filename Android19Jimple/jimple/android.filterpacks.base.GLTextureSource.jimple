public class android.filterpacks.base.GLTextureSource extends android.filterfw.core.Filter
{
    private android.filterfw.core.Frame mFrame;
    private int mHeight;
    private boolean mRepeatFrame;
    private int mTexId;
    private long mTimestamp;
    private int mWidth;

    public void <init>(java.lang.String)
    {
        android.filterpacks.base.GLTextureSource r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.base.GLTextureSource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.base.GLTextureSource: boolean mRepeatFrame> = 0;

        r0.<android.filterpacks.base.GLTextureSource: long mTimestamp> = -1L;

        return;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.base.GLTextureSource r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.Frame $r3, $r4;

        r0 := @this: android.filterpacks.base.GLTextureSource;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.base.GLTextureSource: android.filterfw.core.Frame mFrame>;

        if $r3 == null goto label1;

        $r4 = r0.<android.filterpacks.base.GLTextureSource: android.filterfw.core.Frame mFrame>;

        virtualinvoke $r4.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        r0.<android.filterpacks.base.GLTextureSource: android.filterfw.core.Frame mFrame> = null;

     label1:
        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.base.GLTextureSource r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.MutableFrameFormat r2;
        android.filterfw.core.Frame $r3, $r4, $r6, $r7;
        boolean $z0;
        int $i0, $i1, $i2;
        android.filterfw.core.FrameManager $r5;
        long $l3, $l4;

        r0 := @this: android.filterpacks.base.GLTextureSource;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.base.GLTextureSource: android.filterfw.core.Frame mFrame>;

        if $r3 != null goto label1;

        $i1 = r0.<android.filterpacks.base.GLTextureSource: int mWidth>;

        $i0 = r0.<android.filterpacks.base.GLTextureSource: int mHeight>;

        r2 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>($i1, $i0, 3, 3);

        $r5 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $i2 = r0.<android.filterpacks.base.GLTextureSource: int mTexId>;

        $l3 = (long) $i2;

        $r6 = virtualinvoke $r5.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>(r2, 100, $l3);

        r0.<android.filterpacks.base.GLTextureSource: android.filterfw.core.Frame mFrame> = $r6;

        $r7 = r0.<android.filterpacks.base.GLTextureSource: android.filterfw.core.Frame mFrame>;

        $l4 = r0.<android.filterpacks.base.GLTextureSource: long mTimestamp>;

        virtualinvoke $r7.<android.filterfw.core.Frame: void setTimestamp(long)>($l4);

     label1:
        $r4 = r0.<android.filterpacks.base.GLTextureSource: android.filterfw.core.Frame mFrame>;

        virtualinvoke r0.<android.filterpacks.base.GLTextureSource: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("frame", $r4);

        $z0 = r0.<android.filterpacks.base.GLTextureSource: boolean mRepeatFrame>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<android.filterpacks.base.GLTextureSource: void closeOutputPort(java.lang.String)>("frame");

     label2:
        return;
    }

    public void setupPorts()
    {
        android.filterpacks.base.GLTextureSource r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.base.GLTextureSource;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>(3, 3);

        virtualinvoke r0.<android.filterpacks.base.GLTextureSource: void addOutputPort(java.lang.String,android.filterfw.core.FrameFormat)>("frame", $r1);

        return;
    }

    public void tearDown(android.filterfw.core.FilterContext)
    {
        android.filterpacks.base.GLTextureSource r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame $r2, $r3;

        r0 := @this: android.filterpacks.base.GLTextureSource;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = r0.<android.filterpacks.base.GLTextureSource: android.filterfw.core.Frame mFrame>;

        if $r2 == null goto label1;

        $r3 = r0.<android.filterpacks.base.GLTextureSource: android.filterfw.core.Frame mFrame>;

        virtualinvoke $r3.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

     label1:
        return;
    }
}
