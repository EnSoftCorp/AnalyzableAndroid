public class java.util.IllegalFormatConversionException extends java.util.IllegalFormatException implements java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.Class arg;
    private final char c;

    public void <init>(char, java.lang.Class)
    {
        java.util.IllegalFormatConversionException r0;
        char c0;
        java.lang.Class r1;
        java.lang.NullPointerException $r2;

        r0 := @this: java.util.IllegalFormatConversionException;

        c0 := @parameter0: char;

        r1 := @parameter1: java.lang.Class;

        specialinvoke r0.<java.util.IllegalFormatException: void <init>()>();

        r0.<java.util.IllegalFormatConversionException: char c> = c0;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("arg == null");

        throw $r2;

     label1:
        r0.<java.util.IllegalFormatConversionException: java.lang.Class arg> = r1;

        return;
    }

    public java.lang.Class getArgumentClass()
    {
        java.util.IllegalFormatConversionException r0;
        java.lang.Class $r1;

        r0 := @this: java.util.IllegalFormatConversionException;

        $r1 = r0.<java.util.IllegalFormatConversionException: java.lang.Class arg>;

        return $r1;
    }

    public char getConversion()
    {
        java.util.IllegalFormatConversionException r0;
        char $c0;

        r0 := @this: java.util.IllegalFormatConversionException;

        $c0 = r0.<java.util.IllegalFormatConversionException: char c>;

        return $c0;
    }

    public java.lang.String getMessage()
    {
        java.util.IllegalFormatConversionException r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r7, $r8;
        char $c0;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;

        r0 := @this: java.util.IllegalFormatConversionException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $c0 = r0.<java.util.IllegalFormatConversionException: char c>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t format ");

        $r5 = r0.<java.util.IllegalFormatConversionException: java.lang.Class arg>;

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" arguments");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static void <clinit>()
    {
        <java.util.IllegalFormatConversionException: long serialVersionUID> = 17000126L;

        return;
    }
}
