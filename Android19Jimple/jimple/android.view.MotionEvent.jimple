public final class android.view.MotionEvent extends android.view.InputEvent implements android.os.Parcelable
{
    public static final int ACTION_CANCEL;
    public static final int ACTION_DOWN;
    public static final int ACTION_HOVER_ENTER;
    public static final int ACTION_HOVER_EXIT;
    public static final int ACTION_HOVER_MOVE;
    public static final int ACTION_MASK;
    public static final int ACTION_MOVE;
    public static final int ACTION_OUTSIDE;
    public static final int ACTION_POINTER_1_DOWN;
    public static final int ACTION_POINTER_1_UP;
    public static final int ACTION_POINTER_2_DOWN;
    public static final int ACTION_POINTER_2_UP;
    public static final int ACTION_POINTER_3_DOWN;
    public static final int ACTION_POINTER_3_UP;
    public static final int ACTION_POINTER_DOWN;
    public static final int ACTION_POINTER_ID_MASK;
    public static final int ACTION_POINTER_ID_SHIFT;
    public static final int ACTION_POINTER_INDEX_MASK;
    public static final int ACTION_POINTER_INDEX_SHIFT;
    public static final int ACTION_POINTER_UP;
    public static final int ACTION_SCROLL;
    public static final int ACTION_UP;
    public static final int AXIS_BRAKE;
    public static final int AXIS_DISTANCE;
    public static final int AXIS_GAS;
    public static final int AXIS_GENERIC_1;
    public static final int AXIS_GENERIC_10;
    public static final int AXIS_GENERIC_11;
    public static final int AXIS_GENERIC_12;
    public static final int AXIS_GENERIC_13;
    public static final int AXIS_GENERIC_14;
    public static final int AXIS_GENERIC_15;
    public static final int AXIS_GENERIC_16;
    public static final int AXIS_GENERIC_2;
    public static final int AXIS_GENERIC_3;
    public static final int AXIS_GENERIC_4;
    public static final int AXIS_GENERIC_5;
    public static final int AXIS_GENERIC_6;
    public static final int AXIS_GENERIC_7;
    public static final int AXIS_GENERIC_8;
    public static final int AXIS_GENERIC_9;
    public static final int AXIS_HAT_X;
    public static final int AXIS_HAT_Y;
    public static final int AXIS_HSCROLL;
    public static final int AXIS_LTRIGGER;
    public static final int AXIS_ORIENTATION;
    public static final int AXIS_PRESSURE;
    public static final int AXIS_RTRIGGER;
    public static final int AXIS_RUDDER;
    public static final int AXIS_RX;
    public static final int AXIS_RY;
    public static final int AXIS_RZ;
    public static final int AXIS_SIZE;
    private static final android.util.SparseArray AXIS_SYMBOLIC_NAMES;
    public static final int AXIS_THROTTLE;
    public static final int AXIS_TILT;
    public static final int AXIS_TOOL_MAJOR;
    public static final int AXIS_TOOL_MINOR;
    public static final int AXIS_TOUCH_MAJOR;
    public static final int AXIS_TOUCH_MINOR;
    public static final int AXIS_VSCROLL;
    public static final int AXIS_WHEEL;
    public static final int AXIS_X;
    public static final int AXIS_Y;
    public static final int AXIS_Z;
    public static final int BUTTON_BACK;
    public static final int BUTTON_FORWARD;
    public static final int BUTTON_PRIMARY;
    public static final int BUTTON_SECONDARY;
    private static final java.lang.String[] BUTTON_SYMBOLIC_NAMES;
    public static final int BUTTON_TERTIARY;
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int EDGE_BOTTOM;
    public static final int EDGE_LEFT;
    public static final int EDGE_RIGHT;
    public static final int EDGE_TOP;
    public static final int FLAG_TAINTED;
    public static final int FLAG_WINDOW_IS_OBSCURED;
    private static final int HISTORY_CURRENT;
    public static final int INVALID_POINTER_ID;
    private static final int MAX_RECYCLED;
    private static final long NS_PER_MS;
    public static final int TOOL_TYPE_ERASER;
    public static final int TOOL_TYPE_FINGER;
    public static final int TOOL_TYPE_MOUSE;
    public static final int TOOL_TYPE_STYLUS;
    private static final android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES;
    public static final int TOOL_TYPE_UNKNOWN;
    private static final java.lang.Object gRecyclerLock;
    private static android.view.MotionEvent gRecyclerTop;
    private static int gRecyclerUsed;
    private static final java.lang.Object gSharedTempLock;
    private static android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords;
    private static int[] gSharedTempPointerIndexMap;
    private static android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties;
    private int mNativePtr;
    private android.view.MotionEvent mNext;

    static void <clinit>()
    {
        android.util.SparseArray r0, r1, $r2, $r4;
        java.lang.String[] $r3;
        java.lang.Object $r5, $r6;
        android.view.MotionEvent$1 $r7;

        <android.view.MotionEvent: int TOOL_TYPE_STYLUS> = 2;

        <android.view.MotionEvent: int TOOL_TYPE_MOUSE> = 3;

        <android.view.MotionEvent: int TOOL_TYPE_FINGER> = 1;

        <android.view.MotionEvent: int TOOL_TYPE_ERASER> = 4;

        <android.view.MotionEvent: long NS_PER_MS> = 1000000L;

        <android.view.MotionEvent: int MAX_RECYCLED> = 10;

        <android.view.MotionEvent: int INVALID_POINTER_ID> = -1;

        <android.view.MotionEvent: int HISTORY_CURRENT> = -2147483648;

        <android.view.MotionEvent: int FLAG_WINDOW_IS_OBSCURED> = 1;

        <android.view.MotionEvent: int FLAG_TAINTED> = -2147483648;

        <android.view.MotionEvent: int EDGE_TOP> = 1;

        <android.view.MotionEvent: int EDGE_RIGHT> = 8;

        <android.view.MotionEvent: int EDGE_LEFT> = 4;

        <android.view.MotionEvent: int EDGE_BOTTOM> = 2;

        <android.view.MotionEvent: int BUTTON_TERTIARY> = 4;

        <android.view.MotionEvent: int BUTTON_SECONDARY> = 2;

        <android.view.MotionEvent: int BUTTON_PRIMARY> = 1;

        <android.view.MotionEvent: int BUTTON_FORWARD> = 16;

        <android.view.MotionEvent: int BUTTON_BACK> = 8;

        <android.view.MotionEvent: int AXIS_Z> = 11;

        <android.view.MotionEvent: int AXIS_Y> = 1;

        <android.view.MotionEvent: int AXIS_X> = 0;

        <android.view.MotionEvent: int AXIS_WHEEL> = 21;

        <android.view.MotionEvent: int AXIS_VSCROLL> = 9;

        <android.view.MotionEvent: int AXIS_TOUCH_MINOR> = 5;

        <android.view.MotionEvent: int AXIS_TOUCH_MAJOR> = 4;

        <android.view.MotionEvent: int AXIS_TOOL_MINOR> = 7;

        <android.view.MotionEvent: int AXIS_TOOL_MAJOR> = 6;

        <android.view.MotionEvent: int AXIS_TILT> = 25;

        <android.view.MotionEvent: int AXIS_THROTTLE> = 19;

        <android.view.MotionEvent: int AXIS_SIZE> = 3;

        <android.view.MotionEvent: int AXIS_RZ> = 14;

        <android.view.MotionEvent: int AXIS_RY> = 13;

        <android.view.MotionEvent: int AXIS_RX> = 12;

        <android.view.MotionEvent: int AXIS_RUDDER> = 20;

        <android.view.MotionEvent: int AXIS_RTRIGGER> = 18;

        <android.view.MotionEvent: int AXIS_PRESSURE> = 2;

        <android.view.MotionEvent: int AXIS_ORIENTATION> = 8;

        <android.view.MotionEvent: int AXIS_LTRIGGER> = 17;

        <android.view.MotionEvent: int AXIS_HSCROLL> = 10;

        <android.view.MotionEvent: int AXIS_HAT_Y> = 16;

        <android.view.MotionEvent: int AXIS_HAT_X> = 15;

        <android.view.MotionEvent: int AXIS_GENERIC_9> = 40;

        <android.view.MotionEvent: int AXIS_GENERIC_8> = 39;

        <android.view.MotionEvent: int AXIS_GENERIC_7> = 38;

        <android.view.MotionEvent: int AXIS_GENERIC_6> = 37;

        <android.view.MotionEvent: int AXIS_GENERIC_5> = 36;

        <android.view.MotionEvent: int AXIS_GENERIC_4> = 35;

        <android.view.MotionEvent: int AXIS_GENERIC_3> = 34;

        <android.view.MotionEvent: int AXIS_GENERIC_2> = 33;

        <android.view.MotionEvent: int AXIS_GENERIC_16> = 47;

        <android.view.MotionEvent: int AXIS_GENERIC_15> = 46;

        <android.view.MotionEvent: int AXIS_GENERIC_14> = 45;

        <android.view.MotionEvent: int AXIS_GENERIC_13> = 44;

        <android.view.MotionEvent: int AXIS_GENERIC_12> = 43;

        <android.view.MotionEvent: int AXIS_GENERIC_11> = 42;

        <android.view.MotionEvent: int AXIS_GENERIC_10> = 41;

        <android.view.MotionEvent: int AXIS_GENERIC_1> = 32;

        <android.view.MotionEvent: int AXIS_GAS> = 22;

        <android.view.MotionEvent: int AXIS_DISTANCE> = 24;

        <android.view.MotionEvent: int AXIS_BRAKE> = 23;

        <android.view.MotionEvent: int ACTION_UP> = 1;

        <android.view.MotionEvent: int ACTION_SCROLL> = 8;

        <android.view.MotionEvent: int ACTION_POINTER_UP> = 6;

        <android.view.MotionEvent: int ACTION_POINTER_INDEX_SHIFT> = 8;

        <android.view.MotionEvent: int ACTION_POINTER_INDEX_MASK> = 65280;

        <android.view.MotionEvent: int ACTION_POINTER_ID_SHIFT> = 8;

        <android.view.MotionEvent: int ACTION_POINTER_ID_MASK> = 65280;

        <android.view.MotionEvent: int ACTION_POINTER_DOWN> = 5;

        <android.view.MotionEvent: int ACTION_POINTER_3_UP> = 518;

        <android.view.MotionEvent: int ACTION_POINTER_3_DOWN> = 517;

        <android.view.MotionEvent: int ACTION_POINTER_2_UP> = 262;

        <android.view.MotionEvent: int ACTION_POINTER_2_DOWN> = 261;

        <android.view.MotionEvent: int ACTION_POINTER_1_UP> = 6;

        <android.view.MotionEvent: int ACTION_POINTER_1_DOWN> = 5;

        <android.view.MotionEvent: int ACTION_OUTSIDE> = 4;

        <android.view.MotionEvent: int ACTION_MOVE> = 2;

        <android.view.MotionEvent: int ACTION_MASK> = 255;

        <android.view.MotionEvent: int ACTION_HOVER_MOVE> = 7;

        <android.view.MotionEvent: int ACTION_HOVER_EXIT> = 10;

        <android.view.MotionEvent: int ACTION_HOVER_ENTER> = 9;

        <android.view.MotionEvent: int ACTION_DOWN> = 0;

        <android.view.MotionEvent: int ACTION_CANCEL> = 3;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        <android.view.MotionEvent: android.util.SparseArray AXIS_SYMBOLIC_NAMES> = $r2;

        r0 = <android.view.MotionEvent: android.util.SparseArray AXIS_SYMBOLIC_NAMES>;

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(0, "AXIS_X");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(1, "AXIS_Y");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(2, "AXIS_PRESSURE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(3, "AXIS_SIZE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(4, "AXIS_TOUCH_MAJOR");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(5, "AXIS_TOUCH_MINOR");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(6, "AXIS_TOOL_MAJOR");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(7, "AXIS_TOOL_MINOR");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(8, "AXIS_ORIENTATION");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(9, "AXIS_VSCROLL");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(10, "AXIS_HSCROLL");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(11, "AXIS_Z");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(12, "AXIS_RX");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(13, "AXIS_RY");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(14, "AXIS_RZ");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(15, "AXIS_HAT_X");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(16, "AXIS_HAT_Y");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(17, "AXIS_LTRIGGER");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(18, "AXIS_RTRIGGER");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(19, "AXIS_THROTTLE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(20, "AXIS_RUDDER");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(21, "AXIS_WHEEL");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(22, "AXIS_GAS");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(23, "AXIS_BRAKE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(24, "AXIS_DISTANCE");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(25, "AXIS_TILT");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(32, "AXIS_GENERIC_1");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(33, "AXIS_GENERIC_2");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(34, "AXIS_GENERIC_3");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(35, "AXIS_GENERIC_4");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(36, "AXIS_GENERIC_5");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(37, "AXIS_GENERIC_6");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(38, "AXIS_GENERIC_7");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(39, "AXIS_GENERIC_8");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(40, "AXIS_GENERIC_9");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(41, "AXIS_GENERIC_10");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(42, "AXIS_GENERIC_11");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(43, "AXIS_GENERIC_12");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(44, "AXIS_GENERIC_13");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(45, "AXIS_GENERIC_14");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(46, "AXIS_GENERIC_15");

        virtualinvoke r0.<android.util.SparseArray: void append(int,java.lang.Object)>(47, "AXIS_GENERIC_16");

        $r3 = newarray (java.lang.String)[32];

        $r3[0] = "BUTTON_PRIMARY";

        $r3[1] = "BUTTON_SECONDARY";

        $r3[2] = "BUTTON_TERTIARY";

        $r3[3] = "BUTTON_BACK";

        $r3[4] = "BUTTON_FORWARD";

        $r3[5] = "0x00000020";

        $r3[6] = "0x00000040";

        $r3[7] = "0x00000080";

        $r3[8] = "0x00000100";

        $r3[9] = "0x00000200";

        $r3[10] = "0x00000400";

        $r3[11] = "0x00000800";

        $r3[12] = "0x00001000";

        $r3[13] = "0x00002000";

        $r3[14] = "0x00004000";

        $r3[15] = "0x00008000";

        $r3[16] = "0x00010000";

        $r3[17] = "0x00020000";

        $r3[18] = "0x00040000";

        $r3[19] = "0x00080000";

        $r3[20] = "0x00100000";

        $r3[21] = "0x00200000";

        $r3[22] = "0x00400000";

        $r3[23] = "0x00800000";

        $r3[24] = "0x01000000";

        $r3[25] = "0x02000000";

        $r3[26] = "0x04000000";

        $r3[27] = "0x08000000";

        $r3[28] = "0x10000000";

        $r3[29] = "0x20000000";

        $r3[30] = "0x40000000";

        $r3[31] = "0x80000000";

        <android.view.MotionEvent: java.lang.String[] BUTTON_SYMBOLIC_NAMES> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES> = $r4;

        r1 = <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES>;

        virtualinvoke r1.<android.util.SparseArray: void append(int,java.lang.Object)>(0, "TOOL_TYPE_UNKNOWN");

        virtualinvoke r1.<android.util.SparseArray: void append(int,java.lang.Object)>(1, "TOOL_TYPE_FINGER");

        virtualinvoke r1.<android.util.SparseArray: void append(int,java.lang.Object)>(2, "TOOL_TYPE_STYLUS");

        virtualinvoke r1.<android.util.SparseArray: void append(int,java.lang.Object)>(3, "TOOL_TYPE_MOUSE");

        virtualinvoke r1.<android.util.SparseArray: void append(int,java.lang.Object)>(4, "TOOL_TYPE_ERASER");

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        <android.view.MotionEvent: java.lang.Object gRecyclerLock> = $r5;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        <android.view.MotionEvent: java.lang.Object gSharedTempLock> = $r6;

        $r7 = new android.view.MotionEvent$1;

        specialinvoke $r7.<android.view.MotionEvent$1: void <init>()>();

        <android.view.MotionEvent: android.os.Parcelable$Creator CREATOR> = $r7;

        return;
    }

    private void <init>()
    {
        android.view.MotionEvent r0;

        r0 := @this: android.view.MotionEvent;

        specialinvoke r0.<android.view.InputEvent: void <init>()>();

        return;
    }

    public static java.lang.String actionToString(int)
    {
        int i0, i1, $i2, $i3;
        java.lang.String $r0, $r5, $r10;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label07;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label01;
            case 6: goto label01;
            case 7: goto label08;
            case 8: goto label09;
            case 9: goto label10;
            case 10: goto label11;
            default: goto label01;
        };

     label01:
        $i2 = 65280 & i0;

        i1 = $i2 >> 8;

        $i3 = i0 & 255;

        tableswitch($i3)
        {
            case 5: goto label12;
            case 6: goto label13;
            default: goto label02;
        };

     label02:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;

     label03:
        return "ACTION_DOWN";

     label04:
        return "ACTION_UP";

     label05:
        return "ACTION_CANCEL";

     label06:
        return "ACTION_OUTSIDE";

     label07:
        return "ACTION_MOVE";

     label08:
        return "ACTION_HOVER_MOVE";

     label09:
        return "ACTION_SCROLL";

     label10:
        return "ACTION_HOVER_ENTER";

     label11:
        return "ACTION_HOVER_EXIT";

     label12:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_DOWN(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label13:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACTION_POINTER_UP(");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static int axisFromString(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, i2;
        android.util.SparseArray $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.lang.NumberFormatException $r6;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("symbolicName must not be null");

        throw $r5;

     label1:
        $r2 = <android.view.MotionEvent: android.util.SparseArray AXIS_SYMBOLIC_NAMES>;

        i0 = virtualinvoke $r2.<android.util.SparseArray: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r3 = <android.view.MotionEvent: android.util.SparseArray AXIS_SYMBOLIC_NAMES>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return i1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r0, 10);

     label5:
        return i2;

     label6:
        $r6 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    public static java.lang.String axisToString(int)
    {
        int i0;
        java.lang.String r0, $r3;
        android.util.SparseArray $r1;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        $r1 = <android.view.MotionEvent: android.util.SparseArray AXIS_SYMBOLIC_NAMES>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r0 = (java.lang.String) $r2;

        if r0 == null goto label1;

        return r0;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r3;
    }

    public static java.lang.String buttonStateToString(int)
    {
        int i0, i1, $i2;
        java.lang.StringBuilder r0, $r6;
        boolean z0;
        java.lang.String r1, $r2;
        java.lang.String[] $r3;

        i0 := @parameter0: int;

        if i0 != 0 goto label2;

        r1 = "0";

     label1:
        return r1;

     label2:
        r0 = null;

        i1 = 0;

     label3:
        if i0 == 0 goto label8;

        $i2 = i0 & 1;

        if $i2 == 0 goto label6;

        z0 = 1;

     label4:
        i0 = i0 >>> 1;

        if z0 == 0 goto label5;

        $r3 = <android.view.MotionEvent: java.lang.String[] BUTTON_SYMBOLIC_NAMES>;

        r1 = $r3[i1];

        if r0 != null goto label7;

        if i0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        r0 = $r6;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        z0 = 0;

        goto label4;

     label7:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        goto label5;

     label8:
        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static final float clamp(float, float, float)
    {
        float f0, f1, f2;
        byte $b0, $b1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpg f1;

        if $b0 >= 0 goto label1;

        return f1;

     label1:
        $b1 = f0 cmpl f2;

        if $b1 <= 0 goto label2;

        return f2;

     label2:
        return f0;
    }

    public static android.view.MotionEvent createFromParcelBody(android.os.Parcel)
    {
        android.os.Parcel r0;
        android.view.MotionEvent r1;
        int $i0, $i1;

        r0 := @parameter0: android.os.Parcel;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $i0 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeReadFromParcel(int,android.os.Parcel)>($i0, r0);

        r1.<android.view.MotionEvent: int mNativePtr> = $i1;

        return r1;
    }

    private static final void ensureSharedTempPointerCapacity(int)
    {
        int i0, i1, $i2;
        android.view.MotionEvent$PointerCoords[] $r0, $r1, $r2, $r5, $r6;
        android.view.MotionEvent$PointerProperties[] $r3;
        int[] $r4;

        i0 := @parameter0: int;

        $r0 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        if $r0 == null goto label1;

        $r6 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        $i2 = lengthof $r6;

        if $i2 >= i0 goto label5;

     label1:
        $r1 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        if $r1 == null goto label3;

        $r5 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        i1 = lengthof $r5;

     label2:
        if i1 >= i0 goto label4;

        i1 = i1 * 2;

        goto label2;

     label3:
        i1 = 8;

        goto label2;

     label4:
        $r2 = staticinvoke <android.view.MotionEvent$PointerCoords: android.view.MotionEvent$PointerCoords[] createArray(int)>(i1);

        <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords> = $r2;

        $r3 = staticinvoke <android.view.MotionEvent$PointerProperties: android.view.MotionEvent$PointerProperties[] createArray(int)>(i1);

        <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties> = $r3;

        $r4 = newarray (int)[i1];

        <android.view.MotionEvent: int[] gSharedTempPointerIndexMap> = $r4;

     label5:
        return;
    }

    private static native void nativeAddBatch(int, long, android.view.MotionEvent$PointerCoords[], int);

    private static native int nativeCopy(int, int, boolean);

    private static native void nativeDispose(int);

    private static native int nativeFindPointerIndex(int, int);

    private static native int nativeGetAction(int);

    private static native float nativeGetAxisValue(int, int, int, int);

    private static native int nativeGetButtonState(int);

    private static native int nativeGetDeviceId(int);

    private static native long nativeGetDownTimeNanos(int);

    private static native int nativeGetEdgeFlags(int);

    private static native long nativeGetEventTimeNanos(int, int);

    private static native int nativeGetFlags(int);

    private static native int nativeGetHistorySize(int);

    private static native int nativeGetMetaState(int);

    private static native void nativeGetPointerCoords(int, int, int, android.view.MotionEvent$PointerCoords);

    private static native int nativeGetPointerCount(int);

    private static native int nativeGetPointerId(int, int);

    private static native void nativeGetPointerProperties(int, int, android.view.MotionEvent$PointerProperties);

    private static native float nativeGetRawAxisValue(int, int, int, int);

    private static native int nativeGetSource(int);

    private static native int nativeGetToolType(int, int);

    private static native float nativeGetXOffset(int);

    private static native float nativeGetXPrecision(int);

    private static native float nativeGetYOffset(int);

    private static native float nativeGetYPrecision(int);

    private static native int nativeInitialize(int, int, int, int, int, int, int, int, float, float, float, float, long, long, int, android.view.MotionEvent$PointerProperties[], android.view.MotionEvent$PointerCoords[]);

    private static native boolean nativeIsTouchEvent(int);

    private static native void nativeOffsetLocation(int, float, float);

    private static native int nativeReadFromParcel(int, android.os.Parcel);

    private static native void nativeScale(int, float);

    private static native void nativeSetAction(int, int);

    private static native void nativeSetDownTimeNanos(int, long);

    private static native void nativeSetEdgeFlags(int, int);

    private static native void nativeSetFlags(int, int);

    private static native int nativeSetSource(int, int);

    private static native void nativeTransform(int, android.graphics.Matrix);

    private static native void nativeWriteToParcel(int, android.os.Parcel);

    private static android.view.MotionEvent obtain()
    {
        java.lang.Object r0;
        java.lang.Throwable r1, $r6;
        android.view.MotionEvent r2, r3, $r4, $r5;
        int $i0, $i1;

        r0 = <android.view.MotionEvent: java.lang.Object gRecyclerLock>;

        entermonitor r0;

     label1:
        r2 = <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop>;

     label2:
        if r2 != null goto label5;

     label3:
        $r5 = new android.view.MotionEvent;

        specialinvoke $r5.<android.view.MotionEvent: void <init>()>();

        r3 = $r5;

        exitmonitor r0;

     label4:
        return r3;

     label5:
        $r4 = r2.<android.view.MotionEvent: android.view.MotionEvent mNext>;

        <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop> = $r4;

        $i0 = <android.view.MotionEvent: int gRecyclerUsed>;

        $i1 = -1 + $i0;

        <android.view.MotionEvent: int gRecyclerUsed> = $i1;

        exitmonitor r0;

     label6:
        r2.<android.view.MotionEvent: android.view.MotionEvent mNext> = null;

        virtualinvoke r2.<android.view.MotionEvent: void prepareForReuse()>();

        return r2;

     label7:
        $r6 := @caughtexception;

        r1 = $r6;

     label8:
        exitmonitor r0;

     label9:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static android.view.MotionEvent obtain(long, long, int, float, float, float, float, int, float, float, int, int)
    {
        long l0, l1, $l6, $l7;
        int i2, i3, i4, i5, $i8, $i9;
        float f0, f1, f2, f3, f4, f5;
        android.view.MotionEvent r0;
        java.lang.Object r1;
        android.view.MotionEvent$PointerProperties[] r2;
        java.lang.Throwable r3, $r12;
        android.view.MotionEvent$PointerCoords[] r4;
        android.view.MotionEvent$PointerProperties $r5, $r7;
        android.view.MotionEvent$PointerCoords $r6, $r8, $r9, $r10, $r11;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        f3 := @parameter6: float;

        i3 := @parameter7: int;

        f4 := @parameter8: float;

        f5 := @parameter9: float;

        i4 := @parameter10: int;

        i5 := @parameter11: int;

        r0 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        r1 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r1;

     label1:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(1);

        r2 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        $r5 = r2[0];

        virtualinvoke $r5.<android.view.MotionEvent$PointerProperties: void clear()>();

        $r7 = r2[0];

        $r7.<android.view.MotionEvent$PointerProperties: int id> = 0;

        r4 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        $r6 = r4[0];

        virtualinvoke $r6.<android.view.MotionEvent$PointerCoords: void clear()>();

        $r9 = r4[0];

        $r9.<android.view.MotionEvent$PointerCoords: float x> = f0;

        $r8 = r4[0];

        $r8.<android.view.MotionEvent$PointerCoords: float y> = f1;

        $r11 = r4[0];

        $r11.<android.view.MotionEvent$PointerCoords: float pressure> = f2;

        $r10 = r4[0];

        $r10.<android.view.MotionEvent$PointerCoords: float size> = f3;

        $i9 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l6 = l0 * 1000000L;

        $l7 = l1 * 1000000L;

        $i8 = staticinvoke <android.view.MotionEvent: int nativeInitialize(int,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($i9, i4, 0, i2, 0, i5, i3, 0, 0.0F, 0.0F, f4, f5, $l6, $l7, 1, r2, r4);

        r0.<android.view.MotionEvent: int mNativePtr> = $i8;

        exitmonitor r1;

     label2:
        return r0;

     label3:
        $r12 := @caughtexception;

        r3 = $r12;

     label4:
        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static android.view.MotionEvent obtain(long, long, int, float, float, int)
    {
        long l0, l1;
        int i2, i3;
        float f0, f1;
        android.view.MotionEvent $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        i3 := @parameter5: int;

        $r0 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>(l0, l1, i2, f0, f1, 1.0F, 1.0F, i3, 1.0F, 1.0F, 0, 0);

        return $r0;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, float, float, float, float, int, float, float, int, int)
    {
        long l0, l1;
        int i2, i3, i4, i5, i6;
        float f0, f1, f2, f3, f4, f5;
        android.view.MotionEvent $r0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        f2 := @parameter6: float;

        f3 := @parameter7: float;

        i4 := @parameter8: int;

        f4 := @parameter9: float;

        f5 := @parameter10: float;

        i5 := @parameter11: int;

        i6 := @parameter12: int;

        $r0 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>(l0, l1, i2, f0, f1, f2, f3, i4, f4, f5, i5, i6);

        return $r0;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, int[], android.view.MotionEvent$PointerCoords[], int, float, float, int, int, int, int)
    {
        long l0, l1;
        int i2, i3, i4, i5, i6, i7, i8, i9, $i10;
        int[] r0;
        android.view.MotionEvent$PointerCoords[] r1;
        float f0, f1;
        java.lang.Object r2;
        android.view.MotionEvent$PointerProperties[] r3;
        java.lang.Throwable r4, $r8;
        android.view.MotionEvent r5;
        android.view.MotionEvent$PointerProperties $r6, $r7;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0 := @parameter4: int[];

        r1 := @parameter5: android.view.MotionEvent$PointerCoords[];

        i4 := @parameter6: int;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        i5 := @parameter9: int;

        i6 := @parameter10: int;

        i7 := @parameter11: int;

        i8 := @parameter12: int;

        r2 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r2;

     label01:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(i3);

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

     label02:
        i9 = 0;

     label03:
        if i9 >= i3 goto label06;

     label04:
        $r6 = r3[i9];

        virtualinvoke $r6.<android.view.MotionEvent$PointerProperties: void clear()>();

        $r7 = r3[i9];

        $i10 = r0[i9];

        $r7.<android.view.MotionEvent$PointerProperties: int id> = $i10;

     label05:
        i9 = i9 + 1;

        goto label03;

     label06:
        r5 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, l1, i2, i3, r3, r1, i4, 0, f0, f1, i5, i6, i7, i8);

        exitmonitor r2;

     label07:
        return r5;

     label08:
        $r8 := @caughtexception;

        r4 = $r8;

     label09:
        exitmonitor r2;

     label10:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public static android.view.MotionEvent obtain(long, long, int, int, android.view.MotionEvent$PointerProperties[], android.view.MotionEvent$PointerCoords[], int, int, float, float, int, int, int, int)
    {
        long l0, l1, $l10, $l11;
        int i2, i3, i4, i5, i6, i7, i8, i9, $i12, $i13;
        android.view.MotionEvent$PointerProperties[] r0;
        android.view.MotionEvent$PointerCoords[] r1;
        float f0, f1;
        android.view.MotionEvent r2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0 := @parameter4: android.view.MotionEvent$PointerProperties[];

        r1 := @parameter5: android.view.MotionEvent$PointerCoords[];

        i4 := @parameter6: int;

        i5 := @parameter7: int;

        f0 := @parameter8: float;

        f1 := @parameter9: float;

        i6 := @parameter10: int;

        i7 := @parameter11: int;

        i8 := @parameter12: int;

        i9 := @parameter13: int;

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $i13 = r2.<android.view.MotionEvent: int mNativePtr>;

        $l10 = l0 * 1000000L;

        $l11 = l1 * 1000000L;

        $i12 = staticinvoke <android.view.MotionEvent: int nativeInitialize(int,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($i13, i6, i8, i2, i9, i7, i4, i5, 0.0F, 0.0F, f0, f1, $l10, $l11, i3, r0, r1);

        r2.<android.view.MotionEvent: int mNativePtr> = $i12;

        return r2;
    }

    public static android.view.MotionEvent obtain(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: android.view.MotionEvent;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("other motion event must not be null");

        throw $r2;

     label1:
        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $i1 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeCopy(int,int,boolean)>($i1, $i0, 1);

        r1.<android.view.MotionEvent: int mNativePtr> = $i2;

        return r1;
    }

    public static android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: android.view.MotionEvent;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("other motion event must not be null");

        throw $r2;

     label1:
        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        $i1 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeCopy(int,int,boolean)>($i1, $i0, 0);

        r1.<android.view.MotionEvent: int mNativePtr> = $i2;

        return r1;
    }

    public static java.lang.String toolTypeToString(int)
    {
        int i0;
        java.lang.String r0, $r3;
        android.util.SparseArray $r1;
        java.lang.Object $r2;

        i0 := @parameter0: int;

        $r1 = <android.view.MotionEvent: android.util.SparseArray TOOL_TYPE_SYMBOLIC_NAMES>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r0 = (java.lang.String) $r2;

        if r0 == null goto label1;

        return r0;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r3;
    }

    public final void addBatch(long, float, float, float, float, int)
    {
        android.view.MotionEvent r0;
        long l0, $l2;
        float f0, f1, f2, f3;
        int i1, $i3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r9;
        android.view.MotionEvent$PointerCoords[] r3;
        android.view.MotionEvent$PointerCoords $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.view.MotionEvent;

        l0 := @parameter0: long;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        i1 := @parameter5: int;

        r1 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r1;

     label1:
        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(1);

        r3 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        $r4 = r3[0];

        virtualinvoke $r4.<android.view.MotionEvent$PointerCoords: void clear()>();

        $r5 = r3[0];

        $r5.<android.view.MotionEvent$PointerCoords: float x> = f0;

        $r6 = r3[0];

        $r6.<android.view.MotionEvent$PointerCoords: float y> = f1;

        $r7 = r3[0];

        $r7.<android.view.MotionEvent$PointerCoords: float pressure> = f2;

        $r8 = r3[0];

        $r8.<android.view.MotionEvent$PointerCoords: float size> = f3;

        $i3 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l2 = 1000000L * l0;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(int,long,android.view.MotionEvent$PointerCoords[],int)>($i3, $l2, r3, i1);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public final void addBatch(long, android.view.MotionEvent$PointerCoords[], int)
    {
        android.view.MotionEvent r0;
        long l0, $l2;
        android.view.MotionEvent$PointerCoords[] r1;
        int i1, $i3;

        r0 := @this: android.view.MotionEvent;

        l0 := @parameter0: long;

        r1 := @parameter1: android.view.MotionEvent$PointerCoords[];

        i1 := @parameter2: int;

        $i3 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l2 = 1000000L * l0;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(int,long,android.view.MotionEvent$PointerCoords[],int)>($i3, $l2, r1, i1);

        return;
    }

    public final boolean addBatch(android.view.MotionEvent)
    {
        android.view.MotionEvent r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        java.lang.Object r2;
        java.lang.Throwable r3, $r11;
        android.view.MotionEvent$PointerProperties[] r4;
        android.view.MotionEvent$PointerCoords[] r5;
        long l8;
        android.view.MotionEvent$PointerCoords $r6;
        android.view.MotionEvent$PointerProperties $r7, $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: android.view.MotionEvent;

        r1 := @parameter0: android.view.MotionEvent;

        $i9 = r0.<android.view.MotionEvent: int mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetAction(int)>($i9);

        if i0 == 2 goto label01;

        if i0 == 7 goto label01;

        return 0;

     label01:
        $i11 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i10 = staticinvoke <android.view.MotionEvent: int nativeGetAction(int)>($i11);

        if i0 == $i10 goto label02;

        return 0;

     label02:
        $i13 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i12 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(int)>($i13);

        $i15 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i14 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(int)>($i15);

        if $i12 != $i14 goto label03;

        $i17 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i16 = staticinvoke <android.view.MotionEvent: int nativeGetSource(int)>($i17);

        $i19 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i18 = staticinvoke <android.view.MotionEvent: int nativeGetSource(int)>($i19);

        if $i16 != $i18 goto label03;

        $i21 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i20 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(int)>($i21);

        $i23 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i22 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(int)>($i23);

        if $i20 == $i22 goto label04;

     label03:
        return 0;

     label04:
        $i26 = r0.<android.view.MotionEvent: int mNativePtr>;

        i1 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(int)>($i26);

        $i24 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i25 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(int)>($i24);

        if i1 == $i25 goto label05;

        return 0;

     label05:
        r2 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r2;

     label06:
        $i28 = staticinvoke <java.lang.Math: int max(int,int)>(i1, 2);

        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>($i28);

        r4 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        r5 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

     label07:
        i2 = 0;

     label08:
        if i2 >= i1 goto label15;

     label09:
        $i34 = r0.<android.view.MotionEvent: int mNativePtr>;

        $r8 = r4[0];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(int,int,android.view.MotionEvent$PointerProperties)>($i34, i2, $r8);

        $i33 = r1.<android.view.MotionEvent: int mNativePtr>;

        $r7 = r4[1];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(int,int,android.view.MotionEvent$PointerProperties)>($i33, i2, $r7);

        $r9 = r4[0];

        $r10 = r4[1];

        $z0 = staticinvoke <android.view.MotionEvent$PointerProperties: boolean access$000(android.view.MotionEvent$PointerProperties,android.view.MotionEvent$PointerProperties)>($r9, $r10);

        if $z0 != 0 goto label14;

        exitmonitor r2;

     label10:
        return 0;

     label11:
        $r11 := @caughtexception;

        r3 = $r11;

     label12:
        exitmonitor r2;

     label13:
        throw r3;

     label14:
        i2 = i2 + 1;

        goto label08;

     label15:
        $i27 = r1.<android.view.MotionEvent: int mNativePtr>;

        i3 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(int)>($i27);

        $i30 = r1.<android.view.MotionEvent: int mNativePtr>;

        i4 = staticinvoke <android.view.MotionEvent: int nativeGetHistorySize(int)>($i30);

     label16:
        i5 = 0;

        goto label24;

     label17:
        if i7 >= i1 goto label20;

     label18:
        $i31 = r1.<android.view.MotionEvent: int mNativePtr>;

        $r6 = r5[i7];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(int,int,int,android.view.MotionEvent$PointerCoords)>($i31, i7, i6, $r6);

     label19:
        i7 = i7 + 1;

        goto label17;

     label20:
        $i29 = r1.<android.view.MotionEvent: int mNativePtr>;

        l8 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(int,int)>($i29, i6);

        $i32 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(int,long,android.view.MotionEvent$PointerCoords[],int)>($i32, l8, r5, i3);

     label21:
        i5 = i5 + 1;

        goto label24;

     label22:
        exitmonitor r2;

     label23:
        return 1;

     label24:
        if i5 > i4 goto label22;

        if i5 != i4 goto label26;

        i6 = -2147483648;

     label25:
        i7 = 0;

        goto label17;

     label26:
        i6 = i5;

        goto label25;

        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
        catch java.lang.Throwable from label18 to label19 with label11;
        catch java.lang.Throwable from label20 to label21 with label11;
        catch java.lang.Throwable from label22 to label23 with label11;
    }

    public final android.view.MotionEvent clampNoHistory(float, float, float, float)
    {
        android.view.MotionEvent r0, r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        java.lang.Object r2;
        java.lang.Throwable r3, $r12;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i28;
        android.view.MotionEvent$PointerProperties[] r4;
        android.view.MotionEvent$PointerCoords[] r5;
        android.view.MotionEvent$PointerProperties r6;
        android.view.MotionEvent$PointerCoords r7, $r8, $r9, $r10, $r11;
        long $l25, $l27;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        r2 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r2;

     label01:
        $i4 = r0.<android.view.MotionEvent: int mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(int)>($i4);

        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(i0);

        r4 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        r5 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        r6 = r4[i1];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(int,int,android.view.MotionEvent$PointerProperties)>(i2, i1, r6);

        i3 = r0.<android.view.MotionEvent: int mNativePtr>;

        r7 = r5[i1];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(int,int,int,android.view.MotionEvent$PointerCoords)>(i3, i1, -2147483648, r7);

        $r8 = r5[i1];

        $r9 = r5[i1];

        $f8 = $r9.<android.view.MotionEvent$PointerCoords: float x>;

        $f10 = staticinvoke <android.view.MotionEvent: float clamp(float,float,float)>($f8, f0, f2);

        $r8.<android.view.MotionEvent$PointerCoords: float x> = $f10;

        $r10 = r5[i1];

        $r11 = r5[i1];

        $f9 = $r11.<android.view.MotionEvent$PointerCoords: float y>;

        $f11 = staticinvoke <android.view.MotionEvent: float clamp(float,float,float)>($f9, f1, f3);

        $r10.<android.view.MotionEvent$PointerCoords: float y> = $f11;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        $i5 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i6 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i8 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(int)>($i6);

        $i7 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i10 = staticinvoke <android.view.MotionEvent: int nativeGetSource(int)>($i7);

        $i9 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i12 = staticinvoke <android.view.MotionEvent: int nativeGetAction(int)>($i9);

        $i11 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i14 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(int)>($i11);

        $i13 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i16 = staticinvoke <android.view.MotionEvent: int nativeGetEdgeFlags(int)>($i13);

        $i15 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i19 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(int)>($i15);

        $i20 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i17 = staticinvoke <android.view.MotionEvent: int nativeGetButtonState(int)>($i20);

        $i18 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f5 = staticinvoke <android.view.MotionEvent: float nativeGetXOffset(int)>($i18);

        $i22 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f4 = staticinvoke <android.view.MotionEvent: float nativeGetYOffset(int)>($i22);

        $i21 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f7 = staticinvoke <android.view.MotionEvent: float nativeGetXPrecision(int)>($i21);

        $i24 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f6 = staticinvoke <android.view.MotionEvent: float nativeGetYPrecision(int)>($i24);

        $i23 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l27 = staticinvoke <android.view.MotionEvent: long nativeGetDownTimeNanos(int)>($i23);

        $i28 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l25 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(int,int)>($i28, -2147483648);

        $i26 = staticinvoke <android.view.MotionEvent: int nativeInitialize(int,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($i5, $i8, $i10, $i12, $i14, $i16, $i19, $i17, $f5, $f4, $f7, $f6, $l27, $l25, i0, r4, r5);

        r1.<android.view.MotionEvent: int mNativePtr> = $i26;

        exitmonitor r2;

     label07:
        return r1;

     label08:
        $r12 := @caughtexception;

        r3 = $r12;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public volatile android.view.InputEvent copy()
    {
        android.view.MotionEvent r0, $r1;

        r0 := @this: android.view.MotionEvent;

        $r1 = virtualinvoke r0.<android.view.MotionEvent: android.view.MotionEvent copy()>();

        return $r1;
    }

    public android.view.MotionEvent copy()
    {
        android.view.MotionEvent r0, $r1;

        r0 := @this: android.view.MotionEvent;

        $r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r0);

        return $r1;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.MotionEvent r0;
        java.lang.Throwable r1, $r2;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

     label1:
        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        if $i0 == 0 goto label2;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeDispose(int)>($i1);

        r0.<android.view.MotionEvent: int mNativePtr> = 0;

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public final int findPointerIndex(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1, $i2;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeFindPointerIndex(int,int)>($i1, i0);

        return $i2;
    }

    public final int getAction()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetAction(int)>($i0);

        return $i1;
    }

    public final int getActionIndex()
    {
        android.view.MotionEvent r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetAction(int)>($i0);

        $i2 = 65280 & $i1;

        $i3 = $i2 >> 8;

        return $i3;
    }

    public final int getActionMasked()
    {
        android.view.MotionEvent r0;
        int $i0, $i1, $i2;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetAction(int)>($i0);

        $i2 = 255 & $i1;

        return $i2;
    }

    public final float getAxisValue(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, i0, 0, -2147483648);

        return $f0;
    }

    public final float getAxisValue(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, i0, i1, -2147483648);

        return $f0;
    }

    public final int getButtonState()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetButtonState(int)>($i0);

        return $i1;
    }

    public final int getDeviceId()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(int)>($i0);

        return $i1;
    }

    public final long getDownTime()
    {
        android.view.MotionEvent r0;
        int $i0;
        long $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeGetDownTimeNanos(int)>($i0);

        $l2 = $l1 / 1000000L;

        return $l2;
    }

    public final int getEdgeFlags()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetEdgeFlags(int)>($i0);

        return $i1;
    }

    public final long getEventTime()
    {
        android.view.MotionEvent r0;
        int $i0;
        long $l1, $l2;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(int,int)>($i0, -2147483648);

        $l2 = $l1 / 1000000L;

        return $l2;
    }

    public final long getEventTimeNano()
    {
        android.view.MotionEvent r0;
        int $i0;
        long $l1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l1 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(int,int)>($i0, -2147483648);

        return $l1;
    }

    public final int getFlags()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(int)>($i0);

        return $i1;
    }

    public final float getHistoricalAxisValue(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, i0, 0, i1);

        return $f0;
    }

    public final float getHistoricalAxisValue(int, int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, i2, $i3;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i3, i0, i1, i2);

        return $f0;
    }

    public final long getHistoricalEventTime(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        long $l2, $l3;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(int,int)>($i1, i0);

        $l3 = $l2 / 1000000L;

        return $l3;
    }

    public final long getHistoricalEventTimeNano(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        long $l2;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l2 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(int,int)>($i1, i0);

        return $l2;
    }

    public final float getHistoricalOrientation(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 8, 0, i0);

        return $f0;
    }

    public final float getHistoricalOrientation(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, 8, i0, i1);

        return $f0;
    }

    public final void getHistoricalPointerCoords(int, int, android.view.MotionEvent$PointerCoords)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        android.view.MotionEvent$PointerCoords r1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent$PointerCoords;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(int,int,int,android.view.MotionEvent$PointerCoords)>($i2, i0, i1, r1);

        return;
    }

    public final float getHistoricalPressure(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 2, 0, i0);

        return $f0;
    }

    public final float getHistoricalPressure(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, 2, i0, i1);

        return $f0;
    }

    public final float getHistoricalSize(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 3, 0, i0);

        return $f0;
    }

    public final float getHistoricalSize(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, 3, i0, i1);

        return $f0;
    }

    public final float getHistoricalToolMajor(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 6, 0, i0);

        return $f0;
    }

    public final float getHistoricalToolMajor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, 6, i0, i1);

        return $f0;
    }

    public final float getHistoricalToolMinor(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 7, 0, i0);

        return $f0;
    }

    public final float getHistoricalToolMinor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, 7, i0, i1);

        return $f0;
    }

    public final float getHistoricalTouchMajor(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 4, 0, i0);

        return $f0;
    }

    public final float getHistoricalTouchMajor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, 4, i0, i1);

        return $f0;
    }

    public final float getHistoricalTouchMinor(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 5, 0, i0);

        return $f0;
    }

    public final float getHistoricalTouchMinor(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, 5, i0, i1);

        return $f0;
    }

    public final float getHistoricalX(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 0, 0, i0);

        return $f0;
    }

    public final float getHistoricalX(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, 0, i0, i1);

        return $f0;
    }

    public final float getHistoricalY(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 1, 0, i0);

        return $f0;
    }

    public final float getHistoricalY(int, int)
    {
        android.view.MotionEvent r0;
        int i0, i1, $i2;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i2, 1, i0, i1);

        return $f0;
    }

    public final int getHistorySize()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetHistorySize(int)>($i0);

        return $i1;
    }

    public final int getMetaState()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(int)>($i0);

        return $i1;
    }

    public final float getOrientation()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i0, 8, 0, -2147483648);

        return $f0;
    }

    public final float getOrientation(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 8, i0, -2147483648);

        return $f0;
    }

    public final void getPointerCoords(int, android.view.MotionEvent$PointerCoords)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        android.view.MotionEvent$PointerCoords r1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MotionEvent$PointerCoords;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(int,int,int,android.view.MotionEvent$PointerCoords)>($i1, i0, -2147483648, r1);

        return;
    }

    public final int getPointerCount()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(int)>($i0);

        return $i1;
    }

    public final int getPointerId(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1, $i2;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeGetPointerId(int,int)>($i1, i0);

        return $i2;
    }

    public final int getPointerIdBits()
    {
        android.view.MotionEvent r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.view.MotionEvent;

        i0 = 0;

        $i3 = r0.<android.view.MotionEvent: int mNativePtr>;

        i1 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(int)>($i3);

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $i4 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i5 = staticinvoke <android.view.MotionEvent: int nativeGetPointerId(int,int)>($i4, i2);

        $i6 = 1 << $i5;

        i0 = i0 | $i6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i0;
    }

    public final void getPointerProperties(int, android.view.MotionEvent$PointerProperties)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        android.view.MotionEvent$PointerProperties r1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MotionEvent$PointerProperties;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(int,int,android.view.MotionEvent$PointerProperties)>($i1, i0, r1);

        return;
    }

    public final float getPressure()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i0, 2, 0, -2147483648);

        return $f0;
    }

    public final float getPressure(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 2, i0, -2147483648);

        return $f0;
    }

    public final float getRawX()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetRawAxisValue(int,int,int,int)>($i0, 0, 0, -2147483648);

        return $f0;
    }

    public final float getRawY()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetRawAxisValue(int,int,int,int)>($i0, 1, 0, -2147483648);

        return $f0;
    }

    public final float getSize()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i0, 3, 0, -2147483648);

        return $f0;
    }

    public final float getSize(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 3, i0, -2147483648);

        return $f0;
    }

    public final int getSource()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i1 = staticinvoke <android.view.MotionEvent: int nativeGetSource(int)>($i0);

        return $i1;
    }

    public final float getToolMajor()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i0, 6, 0, -2147483648);

        return $f0;
    }

    public final float getToolMajor(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 6, i0, -2147483648);

        return $f0;
    }

    public final float getToolMinor()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i0, 7, 0, -2147483648);

        return $f0;
    }

    public final float getToolMinor(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 7, i0, -2147483648);

        return $f0;
    }

    public final int getToolType(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1, $i2;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i2 = staticinvoke <android.view.MotionEvent: int nativeGetToolType(int,int)>($i1, i0);

        return $i2;
    }

    public final float getTouchMajor()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i0, 4, 0, -2147483648);

        return $f0;
    }

    public final float getTouchMajor(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 4, i0, -2147483648);

        return $f0;
    }

    public final float getTouchMinor()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i0, 5, 0, -2147483648);

        return $f0;
    }

    public final float getTouchMinor(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 5, i0, -2147483648);

        return $f0;
    }

    public final float getX()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i0, 0, 0, -2147483648);

        return $f0;
    }

    public final float getX(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 0, i0, -2147483648);

        return $f0;
    }

    public final float getXPrecision()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetXPrecision(int)>($i0);

        return $f0;
    }

    public final float getY()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i0, 1, 0, -2147483648);

        return $f0;
    }

    public final float getY(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i1, 1, i0, -2147483648);

        return $f0;
    }

    public final float getYPrecision()
    {
        android.view.MotionEvent r0;
        int $i0;
        float $f0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetYPrecision(int)>($i0);

        return $f0;
    }

    public final boolean isTainted()
    {
        android.view.MotionEvent r0;
        int $i0, $i1;

        r0 := @this: android.view.MotionEvent;

        $i0 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $i1 = -2147483648 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isTouchEvent()
    {
        android.view.MotionEvent r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.view.MotionEvent;

        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        $z0 = staticinvoke <android.view.MotionEvent: boolean nativeIsTouchEvent(int)>($i0);

        return $z0;
    }

    public final boolean isWithinBoundsNoHistory(float, float, float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1, f2, f3, f4, f5;
        int i0, i1, $i2, $i3, $i4;
        byte $b5, $b6, $b7, $b8;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        i0 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(int)>($i2);

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $i3 = r0.<android.view.MotionEvent: int mNativePtr>;

        f4 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i3, 0, i1, -2147483648);

        $i4 = r0.<android.view.MotionEvent: int mNativePtr>;

        f5 = staticinvoke <android.view.MotionEvent: float nativeGetAxisValue(int,int,int,int)>($i4, 1, i1, -2147483648);

        $b5 = f4 cmpg f0;

        if $b5 < 0 goto label2;

        $b7 = f4 cmpl f2;

        if $b7 > 0 goto label2;

        $b6 = f5 cmpg f1;

        if $b6 < 0 goto label2;

        $b8 = f5 cmpl f3;

        if $b8 <= 0 goto label3;

     label2:
        return 0;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 1;
    }

    public final void offsetLocation(float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1;
        byte $b0, $b2;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $b2 = f1 cmpl 0.0F;

        if $b2 == 0 goto label2;

     label1:
        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeOffsetLocation(int,float,float)>($i1, f0, f1);

     label2:
        return;
    }

    public final void recycle()
    {
        android.view.MotionEvent r0, $r3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int $i0, $i1, $i2;

        r0 := @this: android.view.MotionEvent;

        specialinvoke r0.<android.view.InputEvent: void recycle()>();

        r1 = <android.view.MotionEvent: java.lang.Object gRecyclerLock>;

        entermonitor r1;

     label1:
        $i0 = <android.view.MotionEvent: int gRecyclerUsed>;

        if $i0 >= 10 goto label2;

        $i1 = <android.view.MotionEvent: int gRecyclerUsed>;

        $i2 = 1 + $i1;

        <android.view.MotionEvent: int gRecyclerUsed> = $i2;

        $r3 = <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop>;

        r0.<android.view.MotionEvent: android.view.MotionEvent mNext> = $r3;

        <android.view.MotionEvent: android.view.MotionEvent gRecyclerTop> = r0;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public final void scale(float)
    {
        android.view.MotionEvent r0;
        float f0;
        byte $b0;
        int $i1;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 == 0 goto label1;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeScale(int,float)>($i1, f0);

     label1:
        return;
    }

    public final void setAction(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetAction(int,int)>($i1, i0);

        return;
    }

    public final void setDownTime(long)
    {
        android.view.MotionEvent r0;
        long l0, $l1;
        int $i2;

        r0 := @this: android.view.MotionEvent;

        l0 := @parameter0: long;

        $i2 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l1 = 1000000L * l0;

        staticinvoke <android.view.MotionEvent: void nativeSetDownTimeNanos(int,long)>($i2, $l1);

        return;
    }

    public final void setEdgeFlags(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeSetEdgeFlags(int,int)>($i1, i0);

        return;
    }

    public final void setLocation(float, float)
    {
        android.view.MotionEvent r0;
        float f0, f1, f2, f3, $f4, $f5;

        r0 := @this: android.view.MotionEvent;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 = virtualinvoke r0.<android.view.MotionEvent: float getX()>();

        f3 = virtualinvoke r0.<android.view.MotionEvent: float getY()>();

        $f5 = f0 - f2;

        $f4 = f1 - f3;

        virtualinvoke r0.<android.view.MotionEvent: void offsetLocation(float,float)>($f5, $f4);

        return;
    }

    public final void setSource(int)
    {
        android.view.MotionEvent r0;
        int i0, $i1;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: int nativeSetSource(int,int)>($i1, i0);

        return;
    }

    public final void setTainted(boolean)
    {
        android.view.MotionEvent r0;
        boolean z0;
        int i0, i1, i2;

        r0 := @this: android.view.MotionEvent;

        z0 := @parameter0: boolean;

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        if z0 == 0 goto label2;

        i2 = -2147483648 | i0;

     label1:
        staticinvoke <android.view.MotionEvent: void nativeSetFlags(int,int)>(i1, i2);

        return;

     label2:
        i2 = 2147483647 & i0;

        goto label1;
    }

    public final android.view.MotionEvent split(int)
    {
        android.view.MotionEvent r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i47;
        java.lang.Object r2;
        java.lang.Throwable r3, $r10;
        android.view.MotionEvent$PointerProperties[] r4;
        android.view.MotionEvent$PointerCoords[] r5;
        int[] r6;
        android.view.MotionEvent$PointerProperties r7, $r9;
        long l18, $l46;
        android.view.MotionEvent$PointerCoords r8;
        float $f0, $f1, $f2, $f3;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: android.view.MotionEvent;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain()>();

        r2 = <android.view.MotionEvent: java.lang.Object gSharedTempLock>;

        entermonitor r2;

     label01:
        $i19 = r0.<android.view.MotionEvent: int mNativePtr>;

        i1 = staticinvoke <android.view.MotionEvent: int nativeGetPointerCount(int)>($i19);

        staticinvoke <android.view.MotionEvent: void ensureSharedTempPointerCapacity(int)>(i1);

        r4 = <android.view.MotionEvent: android.view.MotionEvent$PointerProperties[] gSharedTempPointerProperties>;

        r5 = <android.view.MotionEvent: android.view.MotionEvent$PointerCoords[] gSharedTempPointerCoords>;

        r6 = <android.view.MotionEvent: int[] gSharedTempPointerIndexMap>;

        $i21 = r0.<android.view.MotionEvent: int mNativePtr>;

        i2 = staticinvoke <android.view.MotionEvent: int nativeGetAction(int)>($i21);

     label02:
        i3 = i2 & 255;

        $i20 = 65280 & i2;

        i4 = $i20 >> 8;

        i5 = -1;

        i6 = 0;

        i8 = 0;

     label03:
        if i8 >= i1 goto label08;

     label04:
        i9 = r0.<android.view.MotionEvent: int mNativePtr>;

        r7 = r4[i6];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerProperties(int,int,android.view.MotionEvent$PointerProperties)>(i9, i8, r7);

        $r9 = r4[i6];

        $i43 = $r9.<android.view.MotionEvent$PointerProperties: int id>;

        i11 = 1 << $i43;

     label05:
        $i44 = i11 & i0;

        if $i44 == 0 goto label28;

        if i8 != i4 goto label06;

        i5 = i6;

     label06:
        r6[i6] = i8;

     label07:
        i6 = i6 + 1;

        goto label28;

     label08:
        if i6 != 0 goto label13;

     label09:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("idBits did not match any ids in the event");

        throw $r11;

     label10:
        $r10 := @caughtexception;

        r3 = $r10;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        if i3 == 5 goto label14;

        if i3 != 6 goto label35;

     label14:
        if i5 >= 0 goto label31;

        i10 = 2;

     label15:
        $i23 = r0.<android.view.MotionEvent: int mNativePtr>;

        i13 = staticinvoke <android.view.MotionEvent: int nativeGetHistorySize(int)>($i23);

     label16:
        i12 = 0;

        goto label29;

     label17:
        if i14 >= i6 goto label20;

     label18:
        i17 = r0.<android.view.MotionEvent: int mNativePtr>;

        i16 = r6[i14];

        r8 = r5[i14];

        staticinvoke <android.view.MotionEvent: void nativeGetPointerCoords(int,int,int,android.view.MotionEvent$PointerCoords)>(i17, i16, i15, r8);

     label19:
        i14 = i14 + 1;

        goto label17;

     label20:
        $i26 = r0.<android.view.MotionEvent: int mNativePtr>;

        l18 = staticinvoke <android.view.MotionEvent: long nativeGetEventTimeNanos(int,int)>($i26, i15);

     label21:
        if i12 != 0 goto label24;

     label22:
        $i29 = r1.<android.view.MotionEvent: int mNativePtr>;

        $i25 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i30 = staticinvoke <android.view.MotionEvent: int nativeGetDeviceId(int)>($i25);

        $i27 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i28 = staticinvoke <android.view.MotionEvent: int nativeGetSource(int)>($i27);

        $i34 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i33 = staticinvoke <android.view.MotionEvent: int nativeGetFlags(int)>($i34);

        $i32 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i31 = staticinvoke <android.view.MotionEvent: int nativeGetEdgeFlags(int)>($i32);

        $i38 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i37 = staticinvoke <android.view.MotionEvent: int nativeGetMetaState(int)>($i38);

        $i36 = r0.<android.view.MotionEvent: int mNativePtr>;

        $i35 = staticinvoke <android.view.MotionEvent: int nativeGetButtonState(int)>($i36);

        $i40 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f1 = staticinvoke <android.view.MotionEvent: float nativeGetXOffset(int)>($i40);

        $i39 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f0 = staticinvoke <android.view.MotionEvent: float nativeGetYOffset(int)>($i39);

        $i42 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f3 = staticinvoke <android.view.MotionEvent: float nativeGetXPrecision(int)>($i42);

        $i41 = r0.<android.view.MotionEvent: int mNativePtr>;

        $f2 = staticinvoke <android.view.MotionEvent: float nativeGetYPrecision(int)>($i41);

        $i45 = r0.<android.view.MotionEvent: int mNativePtr>;

        $l46 = staticinvoke <android.view.MotionEvent: long nativeGetDownTimeNanos(int)>($i45);

        $i47 = staticinvoke <android.view.MotionEvent: int nativeInitialize(int,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[])>($i29, $i30, $i28, i10, $i33, $i31, $i37, $i35, $f1, $f0, $f3, $f2, $l46, l18, i6, r4, r5);

        r1.<android.view.MotionEvent: int mNativePtr> = $i47;

     label23:
        goto label37;

     label24:
        $i24 = r1.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeAddBatch(int,long,android.view.MotionEvent$PointerCoords[],int)>($i24, l18, r5, 0);

     label25:
        goto label37;

     label26:
        exitmonitor r2;

     label27:
        return r1;

     label28:
        i8 = i8 + 1;

        goto label03;

     label29:
        if i12 > i13 goto label26;

        if i12 != i13 goto label36;

        i15 = -2147483648;

     label30:
        i14 = 0;

        goto label17;

     label31:
        if i6 != 1 goto label34;

        if i3 != 5 goto label33;

        i10 = 0;

     label32:
        goto label15;

     label33:
        i10 = 1;

        goto label32;

     label34:
        $i22 = i5 << 8;

        i10 = i3 | $i22;

        goto label15;

     label35:
        i10 = i2;

        goto label15;

     label36:
        i15 = i12;

        goto label30;

     label37:
        i12 = i12 + 1;

        goto label29;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
        catch java.lang.Throwable from label18 to label19 with label10;
        catch java.lang.Throwable from label20 to label21 with label10;
        catch java.lang.Throwable from label22 to label23 with label10;
        catch java.lang.Throwable from label24 to label25 with label10;
        catch java.lang.Throwable from label26 to label27 with label10;
    }

    public java.lang.String toString()
    {
        android.view.MotionEvent r0;
        java.lang.StringBuilder r1, $r2, $r3, $r6, $r9, $r11, $r14, $r17, $r19, $r23, $r24, $r25, $r29, $r31, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r44, $r45, $r47;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12, $i13;
        java.lang.String $r4, $r7, $r10, $r13, $r16, $r27, $r30, $r48;
        long $l8, $l10;
        float $f0, $f1;

        r0 := @this: android.view.MotionEvent;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MotionEvent { action=");

        $i2 = virtualinvoke r0.<android.view.MotionEvent: int getAction()>();

        $r4 = staticinvoke <android.view.MotionEvent: java.lang.String actionToString(int)>($i2);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        i0 = virtualinvoke r0.<android.view.MotionEvent: int getPointerCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r31 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", id[");

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $i12 = virtualinvoke r0.<android.view.MotionEvent: int getPointerId(int)>(i1);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r39 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", x[");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $f0 = virtualinvoke r0.<android.view.MotionEvent: float getX(int)>(i1);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r42 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", y[");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $f1 = virtualinvoke r0.<android.view.MotionEvent: float getY(int)>(i1);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", toolType[");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r47 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $i13 = virtualinvoke r0.<android.view.MotionEvent: int getToolType(int)>(i1);

        $r48 = staticinvoke <android.view.MotionEvent: java.lang.String toolTypeToString(int)>($i13);

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", buttonState=");

        $i3 = virtualinvoke r0.<android.view.MotionEvent: int getButtonState()>();

        $r7 = staticinvoke <android.view.MotionEvent: java.lang.String buttonStateToString(int)>($i3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", metaState=");

        $i4 = virtualinvoke r0.<android.view.MotionEvent: int getMetaState()>();

        $r10 = staticinvoke <android.view.KeyEvent: java.lang.String metaStateToString(int)>($i4);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", flags=0x");

        $i5 = virtualinvoke r0.<android.view.MotionEvent: int getFlags()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", edgeFlags=0x");

        $i6 = virtualinvoke r0.<android.view.MotionEvent: int getEdgeFlags()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i6);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pointerCount=");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", historySize=");

        $i7 = virtualinvoke r0.<android.view.MotionEvent: int getHistorySize()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", eventTime=");

        $l8 = virtualinvoke r0.<android.view.MotionEvent: long getEventTime()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r23 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", downTime=");

        $l10 = virtualinvoke r0.<android.view.MotionEvent: long getDownTime()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r25 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", deviceId=");

        $i9 = virtualinvoke r0.<android.view.MotionEvent: int getDeviceId()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r29 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", source=0x");

        $i11 = virtualinvoke r0.<android.view.MotionEvent: int getSource()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r30 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r30;
    }

    public final void transform(android.graphics.Matrix)
    {
        android.view.MotionEvent r0;
        android.graphics.Matrix r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.view.MotionEvent;

        r1 := @parameter0: android.graphics.Matrix;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("matrix must not be null");

        throw $r2;

     label1:
        $i0 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeTransform(int,android.graphics.Matrix)>($i0, r1);

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.MotionEvent r0;
        android.os.Parcel r1;
        int i0, $i1;

        r0 := @this: android.view.MotionEvent;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $i1 = r0.<android.view.MotionEvent: int mNativePtr>;

        staticinvoke <android.view.MotionEvent: void nativeWriteToParcel(int,android.os.Parcel)>($i1, r1);

        return;
    }
}
