public final class android.view.MotionEvent$PointerCoords extends java.lang.Object
{
    private static final int INITIAL_PACKED_AXIS_VALUES;
    private long mPackedAxisBits;
    private float[] mPackedAxisValues;
    public float orientation;
    public float pressure;
    public float size;
    public float toolMajor;
    public float toolMinor;
    public float touchMajor;
    public float touchMinor;
    public float x;
    public float y;

    public void <init>()
    {
        android.view.MotionEvent$PointerCoords r0;

        r0 := @this: android.view.MotionEvent$PointerCoords;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(android.view.MotionEvent$PointerCoords)
    {
        android.view.MotionEvent$PointerCoords r0, r1;

        r0 := @this: android.view.MotionEvent$PointerCoords;

        r1 := @parameter0: android.view.MotionEvent$PointerCoords;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.view.MotionEvent$PointerCoords: void copyFrom(android.view.MotionEvent$PointerCoords)>(r1);

        return;
    }

    public static android.view.MotionEvent$PointerCoords[] createArray(int)
    {
        int i0, i1;
        android.view.MotionEvent$PointerCoords[] r0;
        android.view.MotionEvent$PointerCoords $r1;

        i0 := @parameter0: int;

        r0 = newarray (android.view.MotionEvent$PointerCoords)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = new android.view.MotionEvent$PointerCoords;

        specialinvoke $r1.<android.view.MotionEvent$PointerCoords: void <init>()>();

        r0[i1] = $r1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public void clear()
    {
        android.view.MotionEvent$PointerCoords r0;

        r0 := @this: android.view.MotionEvent$PointerCoords;

        r0.<android.view.MotionEvent$PointerCoords: long mPackedAxisBits> = 0L;

        r0.<android.view.MotionEvent$PointerCoords: float x> = 0.0F;

        r0.<android.view.MotionEvent$PointerCoords: float y> = 0.0F;

        r0.<android.view.MotionEvent$PointerCoords: float pressure> = 0.0F;

        r0.<android.view.MotionEvent$PointerCoords: float size> = 0.0F;

        r0.<android.view.MotionEvent$PointerCoords: float touchMajor> = 0.0F;

        r0.<android.view.MotionEvent$PointerCoords: float touchMinor> = 0.0F;

        r0.<android.view.MotionEvent$PointerCoords: float toolMajor> = 0.0F;

        r0.<android.view.MotionEvent$PointerCoords: float toolMinor> = 0.0F;

        r0.<android.view.MotionEvent$PointerCoords: float orientation> = 0.0F;

        return;
    }

    public void copyFrom(android.view.MotionEvent$PointerCoords)
    {
        android.view.MotionEvent$PointerCoords r0, r1;
        long l0;
        float[] r2, r3;
        int i1, $i3, $i4;
        byte $b2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: android.view.MotionEvent$PointerCoords;

        r1 := @parameter0: android.view.MotionEvent$PointerCoords;

        l0 = r1.<android.view.MotionEvent$PointerCoords: long mPackedAxisBits>;

        r0.<android.view.MotionEvent$PointerCoords: long mPackedAxisBits> = l0;

        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label3;

        r2 = r1.<android.view.MotionEvent$PointerCoords: float[] mPackedAxisValues>;

        i1 = staticinvoke <java.lang.Long: int bitCount(long)>(l0);

        r3 = r0.<android.view.MotionEvent$PointerCoords: float[] mPackedAxisValues>;

        if r3 == null goto label1;

        $i3 = lengthof r3;

        if i1 <= $i3 goto label2;

     label1:
        $i4 = lengthof r2;

        r3 = newarray (float)[$i4];

        r0.<android.view.MotionEvent$PointerCoords: float[] mPackedAxisValues> = r3;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 0, i1);

     label3:
        $f0 = r1.<android.view.MotionEvent$PointerCoords: float x>;

        r0.<android.view.MotionEvent$PointerCoords: float x> = $f0;

        $f1 = r1.<android.view.MotionEvent$PointerCoords: float y>;

        r0.<android.view.MotionEvent$PointerCoords: float y> = $f1;

        $f2 = r1.<android.view.MotionEvent$PointerCoords: float pressure>;

        r0.<android.view.MotionEvent$PointerCoords: float pressure> = $f2;

        $f3 = r1.<android.view.MotionEvent$PointerCoords: float size>;

        r0.<android.view.MotionEvent$PointerCoords: float size> = $f3;

        $f4 = r1.<android.view.MotionEvent$PointerCoords: float touchMajor>;

        r0.<android.view.MotionEvent$PointerCoords: float touchMajor> = $f4;

        $f5 = r1.<android.view.MotionEvent$PointerCoords: float touchMinor>;

        r0.<android.view.MotionEvent$PointerCoords: float touchMinor> = $f5;

        $f6 = r1.<android.view.MotionEvent$PointerCoords: float toolMajor>;

        r0.<android.view.MotionEvent$PointerCoords: float toolMajor> = $f6;

        $f7 = r1.<android.view.MotionEvent$PointerCoords: float toolMinor>;

        r0.<android.view.MotionEvent$PointerCoords: float toolMinor> = $f7;

        $f8 = r1.<android.view.MotionEvent$PointerCoords: float orientation>;

        r0.<android.view.MotionEvent$PointerCoords: float orientation> = $f8;

        return;
    }

    public float getAxisValue(int)
    {
        android.view.MotionEvent$PointerCoords r0;
        int i0, i3;
        long l1, l2, $l4, $l6, $l7;
        java.lang.IllegalArgumentException $r1;
        byte $b5;
        float[] $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @this: android.view.MotionEvent$PointerCoords;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            default: goto label01;
        };

     label01:
        if i0 < 0 goto label02;

        if i0 <= 63 goto label12;

     label02:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Axis out of range.");

        throw $r1;

     label03:
        $f8 = r0.<android.view.MotionEvent$PointerCoords: float x>;

        return $f8;

     label04:
        $f9 = r0.<android.view.MotionEvent$PointerCoords: float y>;

        return $f9;

     label05:
        $f6 = r0.<android.view.MotionEvent$PointerCoords: float pressure>;

        return $f6;

     label06:
        $f7 = r0.<android.view.MotionEvent$PointerCoords: float size>;

        return $f7;

     label07:
        $f4 = r0.<android.view.MotionEvent$PointerCoords: float touchMajor>;

        return $f4;

     label08:
        $f5 = r0.<android.view.MotionEvent$PointerCoords: float touchMinor>;

        return $f5;

     label09:
        $f2 = r0.<android.view.MotionEvent$PointerCoords: float toolMajor>;

        return $f2;

     label10:
        $f3 = r0.<android.view.MotionEvent$PointerCoords: float toolMinor>;

        return $f3;

     label11:
        $f1 = r0.<android.view.MotionEvent$PointerCoords: float orientation>;

        return $f1;

     label12:
        l1 = r0.<android.view.MotionEvent$PointerCoords: long mPackedAxisBits>;

        l2 = 1L << i0;

        $l4 = l1 & l2;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label13;

        return 0.0F;

     label13:
        $l6 = l2 - 1L;

        $l7 = l1 & $l6;

        i3 = staticinvoke <java.lang.Long: int bitCount(long)>($l7);

        $r2 = r0.<android.view.MotionEvent$PointerCoords: float[] mPackedAxisValues>;

        $f0 = $r2[i3];

        return $f0;
    }

    public void setAxisValue(int, float)
    {
        android.view.MotionEvent$PointerCoords r0;
        int i0, i3, i4, $i9, $i10, $i11, $i12, $i13, $i15;
        float f0;
        long l1, l2, $l5, $l6, $l7, $l14;
        float[] r1, r2;
        java.lang.IllegalArgumentException $r3;
        byte $b8;

        r0 := @this: android.view.MotionEvent$PointerCoords;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            case 8: goto label11;
            default: goto label01;
        };

     label01:
        if i0 < 0 goto label02;

        if i0 <= 63 goto label12;

     label02:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Axis out of range.");

        throw $r3;

     label03:
        r0.<android.view.MotionEvent$PointerCoords: float x> = f0;

        return;

     label04:
        r0.<android.view.MotionEvent$PointerCoords: float y> = f0;

        return;

     label05:
        r0.<android.view.MotionEvent$PointerCoords: float pressure> = f0;

        return;

     label06:
        r0.<android.view.MotionEvent$PointerCoords: float size> = f0;

        return;

     label07:
        r0.<android.view.MotionEvent$PointerCoords: float touchMajor> = f0;

        return;

     label08:
        r0.<android.view.MotionEvent$PointerCoords: float touchMinor> = f0;

        return;

     label09:
        r0.<android.view.MotionEvent$PointerCoords: float toolMajor> = f0;

        return;

     label10:
        r0.<android.view.MotionEvent$PointerCoords: float toolMinor> = f0;

        return;

     label11:
        r0.<android.view.MotionEvent$PointerCoords: float orientation> = f0;

        return;

     label12:
        l1 = r0.<android.view.MotionEvent$PointerCoords: long mPackedAxisBits>;

        l2 = 1L << i0;

        $l5 = l2 - 1L;

        $l6 = l1 & $l5;

        i3 = staticinvoke <java.lang.Long: int bitCount(long)>($l6);

        r1 = r0.<android.view.MotionEvent$PointerCoords: float[] mPackedAxisValues>;

        $l7 = l1 & l2;

        $b8 = $l7 cmp 0L;

        if $b8 != 0 goto label14;

        if r1 != null goto label15;

        r1 = newarray (float)[8];

        r0.<android.view.MotionEvent$PointerCoords: float[] mPackedAxisValues> = r1;

     label13:
        $l14 = l1 | l2;

        r0.<android.view.MotionEvent$PointerCoords: long mPackedAxisBits> = $l14;

     label14:
        r1[i3] = f0;

        return;

     label15:
        i4 = staticinvoke <java.lang.Long: int bitCount(long)>(l1);

        $i10 = lengthof r1;

        if i4 >= $i10 goto label16;

        if i3 == i4 goto label13;

        $i15 = i3 + 1;

        $i13 = i4 - i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, r1, $i15, $i13);

        goto label13;

     label16:
        $i9 = i4 * 2;

        r2 = newarray (float)[$i9];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i3);

        $i11 = i3 + 1;

        $i12 = i4 - i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, r2, $i11, $i12);

        r1 = r2;

        r0.<android.view.MotionEvent$PointerCoords: float[] mPackedAxisValues> = r1;

        goto label13;
    }

    public static void <clinit>()
    {
        <android.view.MotionEvent$PointerCoords: int INITIAL_PACKED_AXIS_VALUES> = 8;

        return;
    }
}
