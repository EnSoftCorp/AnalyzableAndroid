class com.android.server.wifi.WifiController$FullLockHeldState extends com.android.internal.util.State
{
    final com.android.server.wifi.WifiController this$0;

    void <init>(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController$FullLockHeldState r0;
        com.android.server.wifi.WifiController r1;

        r0 := @this: com.android.server.wifi.WifiController$FullLockHeldState;

        r1 := @parameter0: com.android.server.wifi.WifiController;

        r0.<com.android.server.wifi.WifiController$FullLockHeldState: com.android.server.wifi.WifiController this$0> = r1;

        specialinvoke r0.<com.android.internal.util.State: void <init>()>();

        return;
    }

    public void enter()
    {
        com.android.server.wifi.WifiController$FullLockHeldState r0;
        com.android.server.wifi.WifiController $r1, $r3, $r5;
        android.net.wifi.WifiStateMachine $r2, $r4, $r6;

        r0 := @this: com.android.server.wifi.WifiController$FullLockHeldState;

        $r1 = r0.<com.android.server.wifi.WifiController$FullLockHeldState: com.android.server.wifi.WifiController this$0>;

        $r2 = $r1.<com.android.server.wifi.WifiController: android.net.wifi.WifiStateMachine mWifiStateMachine>;

        virtualinvoke $r2.<android.net.wifi.WifiStateMachine: void setOperationalMode(int)>(1);

        $r3 = r0.<com.android.server.wifi.WifiController$FullLockHeldState: com.android.server.wifi.WifiController this$0>;

        $r4 = $r3.<com.android.server.wifi.WifiController: android.net.wifi.WifiStateMachine mWifiStateMachine>;

        virtualinvoke $r4.<android.net.wifi.WifiStateMachine: void setDriverStart(boolean)>(1);

        $r5 = r0.<com.android.server.wifi.WifiController$FullLockHeldState: com.android.server.wifi.WifiController this$0>;

        $r6 = $r5.<com.android.server.wifi.WifiController: android.net.wifi.WifiStateMachine mWifiStateMachine>;

        virtualinvoke $r6.<android.net.wifi.WifiStateMachine: void setHighPerfModeEnabled(boolean)>(0);

        return;
    }
}
