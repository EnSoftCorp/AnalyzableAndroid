public abstract class android.text.method.BaseKeyListener extends android.text.method.MetaKeyKeyListener implements android.text.method.KeyListener
{
    static final java.lang.Object OLD_SEL_START;

    static void <clinit>()
    {
        android.text.NoCopySpan$Concrete $r0;

        $r0 = new android.text.NoCopySpan$Concrete;

        specialinvoke $r0.<android.text.NoCopySpan$Concrete: void <init>()>();

        <android.text.method.BaseKeyListener: java.lang.Object OLD_SEL_START> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.method.BaseKeyListener r0;

        r0 := @this: android.text.method.BaseKeyListener;

        specialinvoke r0.<android.text.method.MetaKeyKeyListener: void <init>()>();

        return;
    }

    private boolean backspaceOrForwardDelete(android.view.View, android.text.Editable, int, android.view.KeyEvent, boolean)
    {
        android.text.method.BaseKeyListener r0;
        android.view.View r1;
        android.text.Editable r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.KeyEvent r3;
        boolean z0, $z1, $z2, $z3, $z4;

        r0 := @this: android.text.method.BaseKeyListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.text.Editable;

        i0 := @parameter2: int;

        r3 := @parameter3: android.view.KeyEvent;

        z0 := @parameter4: boolean;

        $i3 = virtualinvoke r3.<android.view.KeyEvent: int getMetaState()>();

        $i4 = -244 & $i3;

        $z1 = staticinvoke <android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>($i4);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $z2 = specialinvoke r0.<android.text.method.BaseKeyListener: boolean deleteSelection(android.view.View,android.text.Editable)>(r1, r2);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $i5 = staticinvoke <android.text.method.BaseKeyListener: int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent)>(r2, 2, r3);

        if $i5 != 1 goto label4;

        $z4 = specialinvoke r0.<android.text.method.BaseKeyListener: boolean deleteLine(android.view.View,android.text.Editable)>(r1, r2);

        if $z4 == 0 goto label4;

        return 1;

     label4:
        i1 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        if z0 != 0 goto label5;

        $z3 = virtualinvoke r3.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $z3 != 0 goto label5;

        $i8 = staticinvoke <android.text.method.BaseKeyListener: int getMetaState(java.lang.CharSequence,int)>(r2, 1);

        if $i8 != 1 goto label7;

     label5:
        i2 = staticinvoke <android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>(r2, i1);

     label6:
        if i1 == i2 goto label1;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i2);

        interfaceinvoke r2.<android.text.Editable: android.text.Editable delete(int,int)>($i7, $i6);

        return 1;

     label7:
        i2 = staticinvoke <android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>(r2, i1);

        goto label6;
    }

    private boolean deleteLine(android.view.View, android.text.Editable)
    {
        android.text.method.BaseKeyListener r0;
        android.view.View r1;
        android.text.Editable r2;
        android.text.Layout r3;
        int i0, i1, i2, $i3;
        boolean $z0;
        android.widget.TextView $r4;

        r0 := @this: android.text.method.BaseKeyListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.text.Editable;

        $z0 = r1 instanceof android.widget.TextView;

        if $z0 == 0 goto label1;

        $r4 = (android.widget.TextView) r1;

        r3 = virtualinvoke $r4.<android.widget.TextView: android.text.Layout getLayout()>();

        if r3 == null goto label1;

        $i3 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r2);

        i0 = virtualinvoke r3.<android.text.Layout: int getLineForOffset(int)>($i3);

        i1 = virtualinvoke r3.<android.text.Layout: int getLineStart(int)>(i0);

        i2 = virtualinvoke r3.<android.text.Layout: int getLineEnd(int)>(i0);

        if i2 == i1 goto label1;

        interfaceinvoke r2.<android.text.Editable: android.text.Editable delete(int,int)>(i1, i2);

        return 1;

     label1:
        return 0;
    }

    private boolean deleteSelection(android.view.View, android.text.Editable)
    {
        android.text.method.BaseKeyListener r0;
        android.view.View r1;
        android.text.Editable r2;
        int i0, i1, i2;

        r0 := @this: android.text.method.BaseKeyListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.text.Editable;

        i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r2);

        i1 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        if i1 >= i0 goto label1;

        i2 = i1;

        i1 = i0;

        i0 = i2;

     label1:
        if i0 == i1 goto label2;

        interfaceinvoke r2.<android.text.Editable: android.text.Editable delete(int,int)>(i0, i1);

        return 1;

     label2:
        return 0;
    }

    static int makeTextContentType(android.text.method.TextKeyListener$Capitalize, boolean)
    {
        android.text.method.TextKeyListener$Capitalize r0;
        boolean z0;
        char c0;
        int[] $r1;
        int $i1, $i2;

        r0 := @parameter0: android.text.method.TextKeyListener$Capitalize;

        z0 := @parameter1: boolean;

        c0 = 1;

        $r1 = <android.text.method.BaseKeyListener$1: int[] $SwitchMap$android$text$method$TextKeyListener$Capitalize>;

        $i1 = virtualinvoke r0.<android.text.method.TextKeyListener$Capitalize: int ordinal()>();

        $i2 = $r1[$i1];

        tableswitch($i2)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label1;
        };

     label1:
        if z0 == 0 goto label2;

        c0 = c0 | 32768;

     label2:
        return c0;

     label3:
        c0 = 4097;

        goto label1;

     label4:
        c0 = 8193;

        goto label1;

     label5:
        c0 = 16385;

        goto label1;
    }

    public boolean backspace(android.view.View, android.text.Editable, int, android.view.KeyEvent)
    {
        android.text.method.BaseKeyListener r0;
        android.view.View r1;
        android.text.Editable r2;
        int i0;
        android.view.KeyEvent r3;
        boolean $z0;

        r0 := @this: android.text.method.BaseKeyListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.text.Editable;

        i0 := @parameter2: int;

        r3 := @parameter3: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.text.method.BaseKeyListener: boolean backspaceOrForwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent,boolean)>(r1, r2, i0, r3, 0);

        return $z0;
    }

    public boolean forwardDelete(android.view.View, android.text.Editable, int, android.view.KeyEvent)
    {
        android.text.method.BaseKeyListener r0;
        android.view.View r1;
        android.text.Editable r2;
        int i0;
        android.view.KeyEvent r3;
        boolean $z0;

        r0 := @this: android.text.method.BaseKeyListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.text.Editable;

        i0 := @parameter2: int;

        r3 := @parameter3: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.text.method.BaseKeyListener: boolean backspaceOrForwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent,boolean)>(r1, r2, i0, r3, 1);

        return $z0;
    }

    public boolean onKeyDown(android.view.View, android.text.Editable, int, android.view.KeyEvent)
    {
        android.text.method.BaseKeyListener r0;
        android.view.View r1;
        android.text.Editable r2;
        int i0;
        android.view.KeyEvent r3;
        boolean z0, $z1;

        r0 := @this: android.text.method.BaseKeyListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.text.Editable;

        i0 := @parameter2: int;

        r3 := @parameter3: android.view.KeyEvent;

        lookupswitch(i0)
        {
            case 67: goto label4;
            case 112: goto label5;
            default: goto label1;
        };

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        staticinvoke <android.text.method.BaseKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>(r2);

     label3:
        $z1 = specialinvoke r0.<android.text.method.MetaKeyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r1, r2, i0, r3);

        return $z1;

     label4:
        z0 = virtualinvoke r0.<android.text.method.BaseKeyListener: boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r1, r2, i0, r3);

        goto label2;

     label5:
        z0 = virtualinvoke r0.<android.text.method.BaseKeyListener: boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent)>(r1, r2, i0, r3);

        goto label2;
    }

    public boolean onKeyOther(android.view.View, android.text.Editable, android.view.KeyEvent)
    {
        android.text.method.BaseKeyListener r0;
        android.view.View r1;
        android.text.Editable r2;
        android.view.KeyEvent r3;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r4;

        r0 := @this: android.text.method.BaseKeyListener;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.text.Editable;

        r3 := @parameter2: android.view.KeyEvent;

        $i3 = virtualinvoke r3.<android.view.KeyEvent: int getAction()>();

        if $i3 != 2 goto label1;

        $i4 = virtualinvoke r3.<android.view.KeyEvent: int getKeyCode()>();

        if $i4 == 0 goto label2;

     label1:
        return 0;

     label2:
        i0 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r2);

        i1 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r2);

        if i1 >= i0 goto label3;

        i2 = i1;

        i1 = i0;

        i0 = i2;

     label3:
        r4 = virtualinvoke r3.<android.view.KeyEvent: java.lang.String getCharacters()>();

        if r4 == null goto label1;

        interfaceinvoke r2.<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>(i0, i1, r4);

        return 1;
    }
}
