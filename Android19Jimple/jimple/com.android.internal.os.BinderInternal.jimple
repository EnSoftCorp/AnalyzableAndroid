public class com.android.internal.os.BinderInternal extends java.lang.Object
{
    static java.lang.ref.WeakReference mGcWatcher;
    static long mLastGcTime;

    static void <clinit>()
    {
        java.lang.ref.WeakReference $r0;
        com.android.internal.os.BinderInternal$GcWatcher $r1;

        $r0 = new java.lang.ref.WeakReference;

        $r1 = new com.android.internal.os.BinderInternal$GcWatcher;

        specialinvoke $r1.<com.android.internal.os.BinderInternal$GcWatcher: void <init>()>();

        specialinvoke $r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r1);

        <com.android.internal.os.BinderInternal: java.lang.ref.WeakReference mGcWatcher> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.internal.os.BinderInternal r0;

        r0 := @this: com.android.internal.os.BinderInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final native void disableBackgroundScheduling(boolean);

    static void forceBinderGc()
    {
        staticinvoke <com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>("Binder");

        return;
    }

    public static void forceGc(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Runtime $r1;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2741, r0);

        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r1.<java.lang.Runtime: void gc()>();

        return;
    }

    public static final native android.os.IBinder getContextObject();

    public static long getLastGcTime()
    {
        long $l0;

        $l0 = <com.android.internal.os.BinderInternal: long mLastGcTime>;

        return $l0;
    }

    static final native void handleGc();

    public static final native void joinThreadPool();
}
