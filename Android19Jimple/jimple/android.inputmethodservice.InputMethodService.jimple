public class android.inputmethodservice.InputMethodService extends android.inputmethodservice.AbstractInputMethodService
{
    public static final int BACK_DISPOSITION_DEFAULT;
    public static final int BACK_DISPOSITION_WILL_DISMISS;
    public static final int BACK_DISPOSITION_WILL_NOT_DISMISS;
    static final boolean DEBUG;
    public static final int IME_ACTIVE;
    public static final int IME_VISIBLE;
    static final int MOVEMENT_DOWN;
    static final int MOVEMENT_UP;
    static final java.lang.String TAG;
    final android.view.View$OnClickListener mActionClickListener;
    int mBackDisposition;
    android.widget.FrameLayout mCandidatesFrame;
    boolean mCandidatesViewStarted;
    int mCandidatesVisibility;
    android.view.inputmethod.CompletionInfo[] mCurCompletions;
    android.view.ViewGroup mExtractAccessories;
    android.widget.Button mExtractAction;
    android.inputmethodservice.ExtractEditText mExtractEditText;
    android.widget.FrameLayout mExtractFrame;
    android.view.View mExtractView;
    boolean mExtractViewHidden;
    android.view.inputmethod.ExtractedText mExtractedText;
    int mExtractedToken;
    boolean mFullscreenApplied;
    android.view.ViewGroup mFullscreenArea;
    boolean mHardwareAccelerated;
    android.view.inputmethod.InputMethodManager mImm;
    boolean mInShowWindow;
    android.view.LayoutInflater mInflater;
    boolean mInitialized;
    android.view.inputmethod.InputBinding mInputBinding;
    android.view.inputmethod.InputConnection mInputConnection;
    android.view.inputmethod.EditorInfo mInputEditorInfo;
    android.widget.FrameLayout mInputFrame;
    boolean mInputStarted;
    android.view.View mInputView;
    boolean mInputViewStarted;
    final android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer;
    boolean mIsFullscreen;
    boolean mIsInputViewShown;
    boolean mLastShowInputRequested;
    android.view.View mRootView;
    int mShowInputFlags;
    boolean mShowInputForced;
    boolean mShowInputRequested;
    android.view.inputmethod.InputConnection mStartedInputConnection;
    int mStatusIcon;
    int mTheme;
    android.content.res.TypedArray mThemeAttrs;
    final android.inputmethodservice.InputMethodService$Insets mTmpInsets;
    final int[] mTmpLocation;
    android.os.IBinder mToken;
    android.inputmethodservice.SoftInputWindow mWindow;
    boolean mWindowAdded;
    boolean mWindowCreated;
    boolean mWindowVisible;
    boolean mWindowWasVisible;

    public void <init>()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.InputMethodService$Insets $r1;
        int[] $r2;
        android.inputmethodservice.InputMethodService$1 $r3;
        android.inputmethodservice.InputMethodService$2 $r4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void <init>()>();

        r0.<android.inputmethodservice.InputMethodService: int mTheme> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mHardwareAccelerated> = 0;

        $r1 = new android.inputmethodservice.InputMethodService$Insets;

        specialinvoke $r1.<android.inputmethodservice.InputMethodService$Insets: void <init>()>();

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets> = $r1;

        $r2 = newarray (int)[2];

        r0.<android.inputmethodservice.InputMethodService: int[] mTmpLocation> = $r2;

        $r3 = new android.inputmethodservice.InputMethodService$1;

        specialinvoke $r3.<android.inputmethodservice.InputMethodService$1: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer> = $r3;

        $r4 = new android.inputmethodservice.InputMethodService$2;

        specialinvoke $r4.<android.inputmethodservice.InputMethodService$2: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        r0.<android.inputmethodservice.InputMethodService: android.view.View$OnClickListener mActionClickListener> = $r4;

        return;
    }

    static void access$000(android.inputmethodservice.InputMethodService)
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

        return;
    }

    static void access$100(android.inputmethodservice.InputMethodService, int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;

        r0 := @parameter0: android.inputmethodservice.InputMethodService;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void onToggleSoftInput(int,int)>(i0, i1);

        return;
    }

    private void doHideWindow()
    {
        android.inputmethodservice.InputMethodService r0;
        int $i0;
        android.os.IBinder $r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm>;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>($r1, 0, $i0);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void hideWindow()>();

        return;
    }

    private void finishViews()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>(0);

     label1:
        r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted> = 0;

        return;

     label2:
        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted>;

        if $z1 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishCandidatesView(boolean)>(0);

        goto label1;
    }

    private boolean handleBack(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.inputmethodservice.ExtractEditLayout r1;
        int $i0;
        android.view.View $r2, $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z1 == 0 goto label3;

        $z3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>();

        if $z3 == 0 goto label2;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractView>;

        $z4 = $r2 instanceof android.inputmethodservice.ExtractEditLayout;

        if $z4 == 0 goto label2;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractView>;

        r1 = (android.inputmethodservice.ExtractEditLayout) $r3;

        $z5 = virtualinvoke r1.<android.inputmethodservice.ExtractEditLayout: boolean isActionModeStarted()>();

        if $z5 == 0 goto label2;

        if z0 == 0 goto label1;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditLayout: void finishActionMode()>();

     label1:
        return 1;

     label2:
        if z0 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>(0);

        return 1;

     label3:
        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        if $z2 == 0 goto label5;

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        if $i0 != 0 goto label4;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>(0);

        return 1;

     label4:
        if z0 == 0 goto label1;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

        return 1;

     label5:
        return 0;
    }

    private void onToggleSoftInput(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>(i1);

        return;

     label1:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void requestShowSelf(int)>(i0);

        return;
    }

    private void requestShowSelf(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.os.IBinder $r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm>;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(android.os.IBinder,int)>($r1, i0);

        return;
    }

    void doFinishInput()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>(1);

     label1:
        r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted> = 0;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        if $z2 == 0 goto label2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishInput()>();

     label2:
        r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted> = 0;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mStartedInputConnection> = null;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.CompletionInfo[] mCurCompletions> = null;

        return;

     label3:
        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted>;

        if $z1 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onFinishCandidatesView(boolean)>(1);

        goto label1;
    }

    boolean doMovementKey(int, android.view.KeyEvent, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        android.view.KeyEvent r1, r5, r6;
        android.inputmethodservice.ExtractEditText r2;
        android.text.method.MovementMethod r3;
        android.text.Layout r4;
        boolean $z0, $z1, $z2, $z3, $z7, $z8;
        android.text.Editable $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        i1 := @parameter2: int;

        r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>();

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>();

        if $z1 == 0 goto label4;

        if r2 == null goto label4;

        r3 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: android.text.method.MovementMethod getMovementMethod()>();

        r4 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: android.text.Layout getLayout()>();

        if r3 == null goto label3;

        if r4 == null goto label3;

        if i1 != -1 goto label2;

        $r13 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        $z8 = interfaceinvoke r3.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r2, $r13, i0, r1);

        if $z8 == 0 goto label3;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void reportExtractedMovement(int,int)>(i0, 1);

     label1:
        return 1;

     label2:
        if i1 != -2 goto label5;

        $r12 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        $z7 = interfaceinvoke r3.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r2, $r12, i0, r1);

        if $z7 != 0 goto label1;

     label3:
        tableswitch(i0)
        {
            case 19: goto label1;
            case 20: goto label1;
            case 21: goto label1;
            case 22: goto label1;
            default: goto label4;
        };

     label4:
        return 0;

     label5:
        $r7 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        $z2 = interfaceinvoke r3.<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>(r2, $r7, r1);

        if $z2 == 0 goto label6;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void reportExtractedMovement(int,int)>(i0, i1);

        goto label3;

     label6:
        r5 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r1, 0);

        $r8 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        $z3 = interfaceinvoke r3.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r2, $r8, i0, r5);

        if $z3 == 0 goto label3;

        r6 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>(r1, 1);

        $r9 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        interfaceinvoke r3.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r2, $r9, i0, r6);

     label7:
        i1 = i1 + -1;

        if i1 <= 0 goto label8;

        $r10 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        interfaceinvoke r3.<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r2, $r10, i0, r5);

        $r11 = virtualinvoke r2.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        interfaceinvoke r3.<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>(r2, $r11, i0, r6);

        goto label7;

     label8:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void reportExtractedMovement(int,int)>(i0, i1);

        goto label3;
    }

    void doStartInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputConnection r1;
        android.view.inputmethod.EditorInfo r2, $r3, $r4;
        boolean z0, $z1, $z2;
        int $i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.InputConnection;

        r2 := @parameter1: android.view.inputmethod.EditorInfo;

        z0 := @parameter2: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void doFinishInput()>();

     label1:
        r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted> = 1;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mStartedInputConnection> = r1;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo> = r2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>(r2, z0);

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        if $z1 == 0 goto label2;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z2 == 0 goto label3;

        r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted> = 1;

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>($r4, z0);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void startExtractingText(boolean)>(1);

     label2:
        return;

     label3:
        $i0 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        if $i0 != 0 goto label2;

        r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted> = 1;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>($r3, z0);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.inputmethodservice.InputMethodService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.util.PrintWriterPrinter r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r32, $r33, $r34, $r35, $r38, $r39, $r40, $r41, $r43, $r45, $r48, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r73, $r75, $r76, $r77, $r78, $r79, $r81, $r82, $r83, $r84, $r88, $r89, $r90, $r91, $r92, $r93, $r95, $r96, $r98, $r99, $r102, $r103, $r105, $r107, $r108, $r109, $r112, $r113, $r116, $r118, $r119, $r121, $r124, $r125, $r127, $r128;
        java.lang.String $r10, $r17, $r23, $r28, $r37, $r42, $r44, $r47, $r61, $r72, $r74, $r80, $r85, $r87, $r110, $r114, $r120, $r122;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        android.content.res.Resources $r29;
        android.content.res.Configuration $r30;
        android.os.IBinder $r31;
        android.view.inputmethod.InputBinding $r36;
        android.view.inputmethod.InputConnection $r46, $r49;
        android.view.inputmethod.EditorInfo $r62, $r123;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.view.inputmethod.ExtractedText $r86, $r106, $r111, $r115, $r126, $r129;
        android.inputmethodservice.InputMethodService$Insets $r94, $r97, $r101, $r104;
        android.graphics.Region $r100;
        java.lang.CharSequence $r117;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r5 = new android.util.PrintWriterPrinter;

        specialinvoke $r5.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r2);

        r4 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method service state for ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mWindowCreated=");

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowCreated>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWindowAdded=");

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowAdded>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r17);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mWindowVisible=");

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mWindowWasVisible=");

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowWasVisible>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInShowWindow=");

        $z4 = r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r23);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Configuration=");

        $r29 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.Resources getResources()>();

        $r30 = virtualinvoke $r29.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r28);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mToken=");

        $r31 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mInputBinding=");

        $r36 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding mInputBinding>;

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r42);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mInputConnection=");

        $r46 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mInputConnection>;

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r44);

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mStartedInputConnection=");

        $r49 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mStartedInputConnection>;

        $r48 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r47);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mInputStarted=");

        $z5 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mInputViewStarted=");

        $z6 = r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted>;

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCandidatesViewStarted=");

        $z8 = r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted>;

        $r60 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r61);

        $r62 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        if $r62 == null goto label3;

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("  mInputEditorInfo:");

        $r123 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke $r123.<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>(r4, "    ");

     label1:
        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mShowInputRequested=");

        $z7 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r65 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastShowInputRequested=");

        $z10 = r0.<android.inputmethodservice.InputMethodService: boolean mLastShowInputRequested>;

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z10);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mShowInputForced=");

        $z9 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputForced>;

        $r63 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mShowInputFlags=0x");

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mShowInputFlags>;

        $r72 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r71 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r74);

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCandidatesVisibility=");

        $i1 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mFullscreenApplied=");

        $z12 = r0.<android.inputmethodservice.InputMethodService: boolean mFullscreenApplied>;

        $r78 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsFullscreen=");

        $z13 = r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen>;

        $r76 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mExtractViewHidden=");

        $z11 = r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z11);

        $r85 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r85);

        $r86 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        if $r86 == null goto label4;

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("  mExtractedText:");

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    text=");

        $r115 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $r117 = $r115.<android.view.inputmethod.ExtractedText: java.lang.CharSequence text>;

        $i8 = interfaceinvoke $r117.<java.lang.CharSequence: int length()>();

        $r119 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r118 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" chars");

        $r107 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startOffset=");

        $r106 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $i7 = $r106.<android.view.inputmethod.ExtractedText: int startOffset>;

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r110);

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    selectionStart=");

        $r111 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $i10 = $r111.<android.view.inputmethod.ExtractedText: int selectionStart>;

        $r124 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" selectionEnd=");

        $r126 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $i11 = $r126.<android.view.inputmethod.ExtractedText: int selectionEnd>;

        $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flags=0x");

        $r129 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $i9 = $r129.<android.view.inputmethod.ExtractedText: int flags>;

        $r120 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i9);

        $r121 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120);

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r122);

     label2:
        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mExtractedToken=");

        $i2 = r0.<android.inputmethodservice.InputMethodService: int mExtractedToken>;

        $r82 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r80 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r80);

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mIsInputViewShown=");

        $z14 = r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown>;

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z14);

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mStatusIcon=");

        $i3 = r0.<android.inputmethodservice.InputMethodService: int mStatusIcon>;

        $r89 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r87 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r87);

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("Last computed insets:");

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  contentTopInsets=");

        $r97 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i5 = $r97.<android.inputmethodservice.InputMethodService$Insets: int contentTopInsets>;

        $r96 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" visibleTopInsets=");

        $r94 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i4 = $r94.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets>;

        $r93 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r105 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" touchableInsets=");

        $r104 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $i6 = $r104.<android.inputmethodservice.InputMethodService$Insets: int touchableInsets>;

        $r103 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" touchableRegion=");

        $r101 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.InputMethodService$Insets mTmpInsets>;

        $r100 = $r101.<android.inputmethodservice.InputMethodService$Insets: android.graphics.Region touchableRegion>;

        $r99 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r100);

        $r114 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r114);

        return;

     label3:
        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("  mInputEditorInfo: null");

        goto label1;

     label4:
        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("  mExtractedText: null");

        goto label2;
    }

    public boolean enableHardwareAcceleration()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.SoftInputWindow $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called before onCreate()");

        throw $r2;

     label1:
        $z0 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z0 == 0 goto label2;

        r0.<android.inputmethodservice.InputMethodService: boolean mHardwareAccelerated> = 1;

        return 1;

     label2:
        return 0;
    }

    public int getBackDisposition()
    {
        android.inputmethodservice.InputMethodService r0;
        int $i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        return $i0;
    }

    public int getCandidatesHiddenVisibility()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>();

        if $z0 == 0 goto label1;

        return 8;

     label1:
        return 4;
    }

    public android.view.inputmethod.InputBinding getCurrentInputBinding()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputBinding $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding mInputBinding>;

        return $r1;
    }

    public android.view.inputmethod.InputConnection getCurrentInputConnection()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputConnection r1, $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mStartedInputConnection>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection mInputConnection>;

        return $r2;
    }

    public android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        return $r1;
    }

    public boolean getCurrentInputStarted()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        return $z0;
    }

    public android.view.LayoutInflater getLayoutInflater()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.LayoutInflater $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.LayoutInflater mInflater>;

        return $r1;
    }

    public int getMaxWidth()
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.Object $r1;
        android.view.WindowManager $r2;
        android.view.Display $r3;
        int $i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.Object getSystemService(java.lang.String)>("window");

        $r2 = (android.view.WindowManager) $r1;

        $r3 = interfaceinvoke $r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r3.<android.view.Display: int getWidth()>();

        return $i0;
    }

    public java.lang.CharSequence getTextForImeAction(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1;
        java.lang.CharSequence $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            case 7: goto label8;
            default: goto label1;
        };

     label1:
        $r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040549);

        return $r1;

     label2:
        return null;

     label3:
        $r7 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040543);

        return $r7;

     label4:
        $r6 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040544);

        return $r6;

     label5:
        $r5 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040545);

        return $r5;

     label6:
        $r4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040546);

        return $r4;

     label7:
        $r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040547);

        return $r3;

     label8:
        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getText(int)>(17040548);

        return $r2;
    }

    public android.app.Dialog getWindow()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.SoftInputWindow $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        return $r1;
    }

    public void hideStatusIcon()
    {
        android.inputmethodservice.InputMethodService r0;
        android.os.IBinder $r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r0.<android.inputmethodservice.InputMethodService: int mStatusIcon> = 0;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm>;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)>($r1);

        return;
    }

    public void hideWindow()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;
        android.inputmethodservice.SoftInputWindow $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.InputMethodService: void finishViews()>();

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r1.<android.inputmethodservice.SoftInputWindow: void hide()>();

        r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible> = 0;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onWindowHidden()>();

        r0.<android.inputmethodservice.InputMethodService: boolean mWindowWasVisible> = 0;

     label1:
        return;
    }

    void initViews()
    {
        android.inputmethodservice.InputMethodService r0;
        int[] $r1;
        android.content.res.TypedArray $r2;
        android.view.LayoutInflater $r3;
        android.view.View $r4, $r5, $r6, $r8, $r12, $r13, $r15, $r16, $r17, $r20, $r21, $r22;
        android.inputmethodservice.SoftInputWindow $r7, $r28;
        android.view.ViewTreeObserver $r9;
        android.view.ViewTreeObserver$OnComputeInternalInsetsListener $r10;
        android.content.ContentResolver $r11;
        int $i0, $i1, $i2;
        android.view.ViewGroup $r14;
        android.widget.FrameLayout $r18, $r19, $r23, $r24, $r25, $r26;
        android.view.Window $r27;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r0.<android.inputmethodservice.InputMethodService: boolean mInitialized> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mWindowCreated> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mShowInputForced> = 0;

        $r1 = <android.R$styleable: int[] InputMethodService>;

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.TypedArray obtainStyledAttributes(int[])>($r1);

        r0.<android.inputmethodservice.InputMethodService: android.content.res.TypedArray mThemeAttrs> = $r2;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.LayoutInflater mInflater>;

        $r4 = virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367116, null);

        r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView> = $r4;

        $r5 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        virtualinvoke $r5.<android.view.View: void setSystemUiVisibility(int)>(768);

        $r7 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r6 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        virtualinvoke $r7.<android.inputmethodservice.SoftInputWindow: void setContentView(android.view.View)>($r6);

        $r8 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r9 = virtualinvoke $r8.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r10 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke $r9.<android.view.ViewTreeObserver: void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r10);

        $r11 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r11, "fancy_ime_animations", 0);

        if $i0 == 0 goto label1;

        $r28 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r27 = virtualinvoke $r28.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r27.<android.view.Window: void setWindowAnimations(int)>(16974321);

     label1:
        $r12 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r13 = virtualinvoke $r12.<android.view.View: android.view.View findViewById(int)>(16908978);

        $r14 = (android.view.ViewGroup) $r13;

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea> = $r14;

        r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden> = 0;

        $r16 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r15 = virtualinvoke $r16.<android.view.View: android.view.View findViewById(int)>(16908316);

        $r18 = (android.widget.FrameLayout) $r15;

        r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame> = $r18;

        r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractView> = null;

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText> = null;

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories> = null;

        r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction> = null;

        r0.<android.inputmethodservice.InputMethodService: boolean mFullscreenApplied> = 0;

        $r17 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r20 = virtualinvoke $r17.<android.view.View: android.view.View findViewById(int)>(16908317);

        $r19 = (android.widget.FrameLayout) $r20;

        r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame> = $r19;

        $r22 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r21 = virtualinvoke $r22.<android.view.View: android.view.View findViewById(int)>(16908318);

        $r24 = (android.widget.FrameLayout) $r21;

        r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame> = $r24;

        r0.<android.inputmethodservice.InputMethodService: android.view.View mInputView> = null;

        r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown> = 0;

        $r23 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        virtualinvoke $r23.<android.widget.FrameLayout: void setVisibility(int)>(8);

        $i2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>();

        r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility> = $i2;

        $r26 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        $i1 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        virtualinvoke $r26.<android.widget.FrameLayout: void setVisibility(int)>($i1);

        $r25 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r25.<android.widget.FrameLayout: void setVisibility(int)>(8);

        return;
    }

    void initialize()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mInitialized>;

        if $z0 != 0 goto label1;

        r0.<android.inputmethodservice.InputMethodService: boolean mInitialized> = 1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onInitializeInterface()>();

     label1:
        return;
    }

    public boolean isExtractViewShown()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden>;

        if $z1 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isFullscreenMode()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen>;

        return $z0;
    }

    public boolean isInputViewShown()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0, $z1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isShowInputRequested()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        return $z0;
    }

    public void onAppPrivateCommand(java.lang.String, android.os.Bundle)
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.String r1;
        android.os.Bundle r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        return;
    }

    public void onBindInput()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    public void onComputeInsets(android.inputmethodservice.InputMethodService$Insets)
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.InputMethodService$Insets r1;
        int[] r2;
        android.widget.FrameLayout $r3, $r7, $r10, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.app.Dialog $r4, $r9;
        android.view.Window $r5, $r12;
        android.view.View $r6, $r11;
        boolean $z0;
        android.graphics.Region $r8;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.inputmethodservice.InputMethodService$Insets;

        r2 = r0.<android.inputmethodservice.InputMethodService: int[] mTmpLocation>;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        $i0 = virtualinvoke $r3.<android.widget.FrameLayout: int getVisibility()>();

        if $i0 != 0 goto label4;

        $r13 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r13.<android.widget.FrameLayout: void getLocationInWindow(int[])>(r2);

     label1:
        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>();

        if $z0 == 0 goto label5;

        $r9 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>();

        $r12 = virtualinvoke $r9.<android.app.Dialog: android.view.Window getWindow()>();

        $r11 = virtualinvoke $r12.<android.view.Window: android.view.View getDecorView()>();

        $i5 = virtualinvoke $r11.<android.view.View: int getHeight()>();

        r1.<android.inputmethodservice.InputMethodService$Insets: int contentTopInsets> = $i5;

     label2:
        $r7 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        $i3 = virtualinvoke $r7.<android.widget.FrameLayout: int getVisibility()>();

        if $i3 != 0 goto label3;

        $r10 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        virtualinvoke $r10.<android.widget.FrameLayout: void getLocationInWindow(int[])>(r2);

     label3:
        $i4 = r2[1];

        r1.<android.inputmethodservice.InputMethodService$Insets: int visibleTopInsets> = $i4;

        r1.<android.inputmethodservice.InputMethodService$Insets: int touchableInsets> = 2;

        $r8 = r1.<android.inputmethodservice.InputMethodService$Insets: android.graphics.Region touchableRegion>;

        virtualinvoke $r8.<android.graphics.Region: void setEmpty()>();

        return;

     label4:
        $r4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>();

        $r5 = virtualinvoke $r4.<android.app.Dialog: android.view.Window getWindow()>();

        $r6 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        $i1 = virtualinvoke $r6.<android.view.View: int getHeight()>();

        r2[1] = $i1;

        goto label1;

     label5:
        $i2 = r2[1];

        r1.<android.inputmethodservice.InputMethodService$Insets: int contentTopInsets> = $i2;

        goto label2;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.inputmethodservice.InputMethodService r0;
        android.content.res.Configuration r1;
        boolean z0, z1, z2, $z3, $z4;
        int i0, $i2, $i3;
        android.view.inputmethod.CompletionInfo[] r2;
        android.view.inputmethod.InputMethodManager r3;
        android.os.IBinder r4;
        byte b1, $b4;
        android.view.inputmethod.EditorInfo $r5;
        android.view.inputmethod.InputConnection $r6;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        z0 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        i0 = r0.<android.inputmethodservice.InputMethodService: int mShowInputFlags>;

        z1 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        r2 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.CompletionInfo[] mCurCompletions>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initViews()>();

        r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted> = 0;

        r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted> = 0;

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        if $z3 == 0 goto label1;

        $r6 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        $r5 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void doStartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,boolean)>($r6, $r5, 1);

     label1:
        if z0 == 0 goto label4;

        if z1 == 0 goto label6;

        $z4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onShowInputRequested(int,boolean)>(i0, 1);

        if $z4 == 0 goto label5;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void showWindow(boolean)>(1);

        if r2 == null goto label2;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.CompletionInfo[] mCurCompletions> = r2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])>(r2);

     label2:
        z2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>();

        r3 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm>;

        r4 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        b1 = 0;

        if z2 == 0 goto label3;

        b1 = 2;

     label3:
        $b4 = b1 | 1;

        $i3 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        virtualinvoke r3.<android.view.inputmethod.InputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>(r4, $b4, $i3);

     label4:
        return;

     label5:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

        goto label2;

     label6:
        $i2 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        if $i2 != 0 goto label7;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void showWindow(boolean)>(0);

        goto label2;

     label7:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

        goto label2;
    }

    public void onConfigureWindow(android.view.Window, boolean, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.Window r1, $r3, $r6;
        boolean z0, z1, $z2;
        int i0;
        byte b1;
        android.inputmethodservice.SoftInputWindow $r2, $r5;
        android.view.WindowManager$LayoutParams $r4;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.Window;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r3 = virtualinvoke $r2.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        i0 = $r4.<android.view.WindowManager$LayoutParams: int height>;

        if z0 == 0 goto label3;

        b1 = -1;

     label1:
        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown>;

        if $z2 == 0 goto label2;

        if i0 == b1 goto label2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Window size has been changed. This may cause jankiness of resizing window: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodService", $r12);

     label2:
        $r5 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r6 = virtualinvoke $r5.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r6.<android.view.Window: void setLayout(int,int)>(-1, b1);

        return;

     label3:
        b1 = -2;

        goto label1;
    }

    public void onCreate()
    {
        android.inputmethodservice.InputMethodService r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.pm.ApplicationInfo $r1;
        java.lang.Object $r2, $r4;
        android.view.inputmethod.InputMethodManager $r3;
        android.view.LayoutInflater $r5;
        android.inputmethodservice.SoftInputWindow $r6, $r8, $r11;
        android.view.KeyEvent$DispatcherState $r7;
        boolean $z0;
        android.view.Window $r9, $r10;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mTheme>;

        $r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i1 = $r1.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        $i2 = staticinvoke <android.content.res.Resources: int selectSystemTheme(int,int,int,int,int)>($i0, $i1, 16973908, 16973951, 16974142);

        r0.<android.inputmethodservice.InputMethodService: int mTheme> = $i2;

        $i3 = r0.<android.inputmethodservice.InputMethodService: int mTheme>;

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void setTheme(int)>($i3);

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void onCreate()>();

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm> = $r3;

        $r4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r5 = (android.view.LayoutInflater) $r4;

        r0.<android.inputmethodservice.InputMethodService: android.view.LayoutInflater mInflater> = $r5;

        $r6 = new android.inputmethodservice.SoftInputWindow;

        $i4 = r0.<android.inputmethodservice.InputMethodService: int mTheme>;

        $r7 = r0.<android.inputmethodservice.InputMethodService: android.view.KeyEvent$DispatcherState mDispatcherState>;

        specialinvoke $r6.<android.inputmethodservice.SoftInputWindow: void <init>(android.content.Context,int,android.view.KeyEvent$DispatcherState)>(r0, $i4, $r7);

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow> = $r6;

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mHardwareAccelerated>;

        if $z0 == 0 goto label1;

        $r11 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r10 = virtualinvoke $r11.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r10.<android.view.Window: void addFlags(int)>(16777216);

     label1:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initViews()>();

        $r8 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r9 = virtualinvoke $r8.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r9.<android.view.Window: void setLayout(int,int)>(-1, -2);

        return;
    }

    public android.view.View onCreateCandidatesView()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return null;
    }

    public android.view.View onCreateExtractTextView()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.LayoutInflater $r1;
        android.view.View $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.LayoutInflater mInflater>;

        $r2 = virtualinvoke $r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367117, null);

        return $r2;
    }

    public android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodImpl onCreateInputMethodInterface()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.InputMethodService$InputMethodImpl $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = new android.inputmethodservice.InputMethodService$InputMethodImpl;

        specialinvoke $r1.<android.inputmethodservice.InputMethodService$InputMethodImpl: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        return $r1;
    }

    public android.inputmethodservice.AbstractInputMethodService$AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.InputMethodService$InputMethodSessionImpl $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = new android.inputmethodservice.InputMethodService$InputMethodSessionImpl;

        specialinvoke $r1.<android.inputmethodservice.InputMethodService$InputMethodSessionImpl: void <init>(android.inputmethodservice.InputMethodService)>(r0);

        return $r1;
    }

    public android.view.View onCreateInputView()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return null;
    }

    protected void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputMethodSubtype r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        return;
    }

    public void onDestroy()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View $r1;
        android.view.ViewTreeObserver $r2;
        android.view.ViewTreeObserver$OnComputeInternalInsetsListener $r3;
        boolean $z0;
        android.inputmethodservice.SoftInputWindow $r4, $r6;
        android.view.Window $r5;

        r0 := @this: android.inputmethodservice.InputMethodService;

        specialinvoke r0.<android.inputmethodservice.AbstractInputMethodService: void onDestroy()>();

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.View mRootView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewTreeObserver$OnComputeInternalInsetsListener mInsetsComputer>;

        virtualinvoke $r2.<android.view.ViewTreeObserver: void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver$OnComputeInternalInsetsListener)>($r3);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void doFinishInput()>();

        $z0 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowAdded>;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        $r5 = virtualinvoke $r4.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        virtualinvoke $r5.<android.view.Window: void setWindowAnimations(int)>(0);

        $r6 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r6.<android.inputmethodservice.SoftInputWindow: void dismiss()>();

     label1:
        return;
    }

    public void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.CompletionInfo[] r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo[];

        return;
    }

    public boolean onEvaluateFullscreenMode()
    {
        android.inputmethodservice.InputMethodService r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        int $i0, $i1, $i2;
        android.view.inputmethod.EditorInfo $r3, $r4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int orientation>;

        if $i0 == 2 goto label2;

     label1:
        return 0;

     label2:
        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        if $r3 == null goto label3;

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        $i1 = $r4.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = 33554432 & $i1;

        if $i2 != 0 goto label1;

     label3:
        return 1;
    }

    public boolean onEvaluateInputViewShown()
    {
        android.inputmethodservice.InputMethodService r0;
        android.content.res.Configuration r1;
        android.content.res.Resources $r2;
        int $i0, $i1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = r1.<android.content.res.Configuration: int keyboard>;

        if $i0 == 1 goto label1;

        $i1 = r1.<android.content.res.Configuration: int hardKeyboardHidden>;

        if $i1 != 2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean onExtractTextContextMenuItem(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>(i0);

     label1:
        return 1;
    }

    public void onExtractedCursorMovement(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        android.inputmethodservice.ExtractEditText $r1, $r2;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if $r1 == null goto label1;

        if i1 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        $z0 = virtualinvoke $r2.<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>(0);

        return;
    }

    public void onExtractedDeleteText(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1, $i2;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>(i0, i0);

        $i2 = i1 - i0;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>(0, $i2);

     label1:
        return;
    }

    public void onExtractedReplaceText(int, int, java.lang.CharSequence)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        java.lang.CharSequence r1;
        android.view.inputmethod.InputConnection r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r2 == null goto label1;

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>(i0, i1);

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>(r1, 1);

     label1:
        return;
    }

    public void onExtractedSelectionChanged(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>(i0, i1);

     label1:
        return;
    }

    public void onExtractedSetSpan(java.lang.Object, int, int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.Object r1;
        int i0, i1, i2, $i3;
        android.view.inputmethod.InputConnection r2;
        java.lang.CharSequence r3;
        boolean $z0, $z1;
        android.text.Spannable $r4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>(i0, i1);

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        r3 = interfaceinvoke r2.<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>(1);

        $z1 = r3 instanceof android.text.Spannable;

        if $z1 == 0 goto label1;

        $r4 = (android.text.Spannable) r3;

        $i3 = interfaceinvoke r3.<java.lang.CharSequence: int length()>();

        interfaceinvoke $r4.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r1, 0, $i3, i2);

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>(i0, i1);

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>(r3, 1);

        return;
    }

    public void onExtractedTextClicked()
    {
        android.inputmethodservice.InputMethodService r0;
        android.inputmethodservice.ExtractEditText $r1, $r2;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if $r1 != null goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        $z0 = virtualinvoke $r2.<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>(0);

        return;
    }

    public void onExtractingInputChanged(android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        int $i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $i0 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i0 != 0 goto label1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>(2);

     label1:
        return;
    }

    public void onFinishCandidatesView(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label1:
        return;
    }

    public void onFinishInput()
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label1:
        return;
    }

    public void onFinishInputView(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;
        android.view.inputmethod.InputConnection r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label1:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.MotionEvent r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public void onInitializeInterface()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        boolean z0, z1, $z2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 != 4 goto label2;

        z0 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean handleBack(boolean)>(0);

        z1 = 0;

        if z0 == 0 goto label1;

        virtualinvoke r1.<android.view.KeyEvent: void startTracking()>();

        z1 = 1;

     label1:
        return z1;

     label2:
        $z2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean doMovementKey(int,android.view.KeyEvent,int)>(i0, r1, -1);

        return $z2;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyMultiple(int, int, android.view.KeyEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean doMovementKey(int,android.view.KeyEvent,int)>(i0, r1, i1);

        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 != 4 goto label1;

        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z2 != 0 goto label1;

        $z3 = specialinvoke r0.<android.inputmethodservice.InputMethodService: boolean handleBack(boolean)>(1);

        return $z3;

     label1:
        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean doMovementKey(int,android.view.KeyEvent,int)>(i0, r1, -2);

        return $z0;
    }

    public boolean onShowInputRequested(int, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1, $z2;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>();

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $i1 = i0 & 1;

        if $i1 != 0 goto label4;

        if z0 != 0 goto label3;

        $z2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>();

        if $z2 != 0 goto label1;

     label3:
        $r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i3 = $r2.<android.content.res.Configuration: int keyboard>;

        if $i3 != 1 goto label1;

     label4:
        $i2 = i0 & 2;

        if $i2 == 0 goto label5;

        r0.<android.inputmethodservice.InputMethodService: boolean mShowInputForced> = 1;

     label5:
        return 1;
    }

    public void onStartCandidatesView(android.view.inputmethod.EditorInfo, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        return;
    }

    public void onStartInput(android.view.inputmethod.EditorInfo, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        return;
    }

    public void onStartInputView(android.view.inputmethod.EditorInfo, boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 := @parameter1: boolean;

        return;
    }

    public boolean onTrackballEvent(android.view.MotionEvent)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.MotionEvent r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public void onUnbindInput()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    public void onUpdateCursor(android.graphics.Rect)
    {
        android.inputmethodservice.InputMethodService r0;
        android.graphics.Rect r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.graphics.Rect;

        return;
    }

    public void onUpdateExtractedText(int, android.view.inputmethod.ExtractedText)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, $i1;
        android.view.inputmethod.ExtractedText r1;
        android.inputmethodservice.ExtractEditText $r2, $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.inputmethod.ExtractedText;

        $i1 = r0.<android.inputmethodservice.InputMethodService: int mExtractedToken>;

        if $i1 == i0 goto label2;

     label1:
        return;

     label2:
        if r1 == null goto label1;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if $r2 == null goto label1;

        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText> = r1;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        virtualinvoke $r3.<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>(r1);

        return;
    }

    public void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        boolean z0, $z1;
        android.view.ViewGroup $r2, $r4, $r7;
        java.lang.CharSequence $r3, $r9, $r11, $r13;
        android.widget.Button $r5, $r6, $r8, $r10, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        android.view.View$OnClickListener $r12;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        z0 = 1;

        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories>;

        if $r2 == null goto label1;

        $r3 = r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        if $r3 != null goto label3;

        $i1 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i3 = 255 & $i1;

        i6 = (int) 1;

        if $i3 == i6 goto label5;

        $i2 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i5 = 536870912 & $i2;

        if $i5 != 0 goto label5;

        $i4 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i4 == 0 goto label5;

     label3:
        if z0 == 0 goto label7;

        $r7 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories>;

        virtualinvoke $r7.<android.view.ViewGroup: void setVisibility(int)>(0);

        $r8 = r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction>;

        if $r8 == null goto label1;

        $r9 = r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        if $r9 == null goto label6;

        $r15 = r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction>;

        $r13 = r1.<android.view.inputmethod.EditorInfo: java.lang.CharSequence actionLabel>;

        virtualinvoke $r15.<android.widget.Button: void setText(java.lang.CharSequence)>($r13);

     label4:
        $r14 = r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction>;

        $r12 = r0.<android.inputmethodservice.InputMethodService: android.view.View$OnClickListener mActionClickListener>;

        virtualinvoke $r14.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r12);

        return;

     label5:
        z0 = 0;

        goto label3;

     label6:
        $r10 = r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction>;

        $i0 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $r11 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>($i0);

        virtualinvoke $r10.<android.widget.Button: void setText(java.lang.CharSequence)>($r11);

        goto label4;

     label7:
        $r4 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories>;

        virtualinvoke $r4.<android.view.ViewGroup: void setVisibility(int)>(8);

        $r5 = r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction>;

        if $r5 == null goto label1;

        $r6 = r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction>;

        virtualinvoke $r6.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>(null);

        return;
    }

    public void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.inputmethod.EditorInfo r1;
        int $i0, $i1, $i2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $i0 = r1.<android.view.inputmethod.EditorInfo: int inputType>;

        if $i0 == 0 goto label1;

        $i1 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i2 = 268435456 & $i1;

        if $i2 == 0 goto label2;

     label1:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>(0);

        return;

     label2:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>(1);

        return;
    }

    public void onUpdateSelection(int, int, int, int, int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;
        android.inputmethodservice.ExtractEditText r1;
        boolean $z0;
        android.view.inputmethod.ExtractedText $r2, $r3;
        android.text.Editable $r4;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if r1 == null goto label3;

        $z0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        if $r2 == null goto label3;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        i6 = $r3.<android.view.inputmethod.ExtractedText: int startOffset>;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void startInternalChanges()>();

        i7 = i2 - i6;

        i8 = i3 - i6;

        $r4 = virtualinvoke r1.<android.inputmethodservice.ExtractEditText: android.text.Editable getText()>();

        i9 = interfaceinvoke $r4.<android.text.Editable: int length()>();

        if i7 >= 0 goto label4;

        i7 = 0;

     label1:
        if i8 >= 0 goto label5;

        i8 = 0;

     label2:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setSelection(int,int)>(i7, i8);

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>();

     label3:
        return;

     label4:
        if i7 <= i9 goto label1;

        i7 = i9;

        goto label1;

     label5:
        if i8 <= i9 goto label2;

        i8 = i9;

        goto label2;
    }

    public void onViewClicked(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        return;
    }

    public void onWindowHidden()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    public void onWindowShown()
    {
        android.inputmethodservice.InputMethodService r0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        return;
    }

    void reportExtractedMovement(int, int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0, i1, i2, i3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = 0;

        i3 = 0;

        tableswitch(i0)
        {
            case 19: goto label4;
            case 20: goto label5;
            case 21: goto label2;
            case 22: goto label3;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onExtractedCursorMovement(int,int)>(i2, i3);

        return;

     label2:
        i2 = neg i1;

        i3 = 0;

        goto label1;

     label3:
        i2 = i1;

        i3 = 0;

        goto label1;

     label4:
        i3 = neg i1;

        i2 = 0;

        goto label1;

     label5:
        i3 = i1;

        i2 = 0;

        goto label1;
    }

    public void requestHideSelf(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.os.IBinder $r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm>;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(android.os.IBinder,int)>($r1, i0);

        return;
    }

    public boolean sendDefaultEditorAction(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;
        android.view.inputmethod.EditorInfo r1;
        android.view.inputmethod.InputConnection r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

        if r1 == null goto label3;

        if z0 == 0 goto label1;

        $i4 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i5 = 1073741824 & $i4;

        if $i5 != 0 goto label3;

     label1:
        $i0 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i1 = 255 & $i0;

        if $i1 == 1 goto label3;

        r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r2 == null goto label2;

        $i2 = r1.<android.view.inputmethod.EditorInfo: int imeOptions>;

        $i3 = 255 & $i2;

        interfaceinvoke r2.<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>($i3);

     label2:
        return 1;

     label3:
        return 0;
    }

    public void sendDownUpKeyEvents(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.view.inputmethod.InputConnection r1;
        long l1, $l2;
        android.view.KeyEvent $r2, $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 != null goto label1;

        return;

     label1:
        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r2 = new android.view.KeyEvent;

        specialinvoke $r2.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, l1, 0, i0, 0, 0, -1, 0, 6);

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r2);

        $r3 = new android.view.KeyEvent;

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke $r3.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>(l1, $l2, 1, i0, 0, 0, -1, 0, 6);

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>($r3);

        return;
    }

    public void sendKeyChar(char)
    {
        android.inputmethodservice.InputMethodService r0;
        char c0;
        android.view.inputmethod.InputConnection r1;
        java.lang.String $r2;
        int $i1, $i2;
        boolean $z1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        c0 := @parameter0: char;

        tableswitch(c0)
        {
            case 10: goto label3;
            default: goto label1;
        };

     label1:
        if c0 < 48 goto label4;

        if c0 > 57 goto label4;

        $i1 = c0 - 48;

        $i2 = 7 + $i1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>($i2);

     label2:
        return;

     label3:
        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)>(1);

        if $z1 != 0 goto label2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>(66);

        return;

     label4:
        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label2;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>($r2, 1);

        return;
    }

    public void setBackDisposition(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r0.<android.inputmethodservice.InputMethodService: int mBackDisposition> = i0;

        return;
    }

    public void setCandidatesView(android.view.View)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1;
        android.widget.FrameLayout $r2, $r4;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r3);

        return;
    }

    public void setCandidatesViewShown(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateCandidatesVisibility(boolean)>(z0);

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z1 != 0 goto label1;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        if $z2 == z0 goto label1;

        if z0 == 0 goto label2;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void showWindow(boolean)>(0);

     label1:
        return;

     label2:
        specialinvoke r0.<android.inputmethodservice.InputMethodService: void doHideWindow()>();

        return;
    }

    public void setExtractView(android.view.View)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1, $r5, $r8, $r11;
        android.widget.FrameLayout $r2, $r4;
        android.widget.FrameLayout$LayoutParams $r3;
        android.inputmethodservice.ExtractEditText $r6, $r7;
        android.widget.Button $r9, $r10;
        android.view.ViewGroup $r12;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r3);

        r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractView> = r1;

        if r1 == null goto label2;

        $r5 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16908325);

        $r6 = (android.inputmethodservice.ExtractEditText) $r5;

        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText> = $r6;

        $r7 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        virtualinvoke $r7.<android.inputmethodservice.ExtractEditText: void setIME(android.inputmethodservice.InputMethodService)>(r0);

        $r8 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16908980);

        $r9 = (android.widget.Button) $r8;

        r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction> = $r9;

        $r10 = r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction>;

        if $r10 == null goto label1;

        $r11 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(16908979);

        $r12 = (android.view.ViewGroup) $r11;

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories> = $r12;

     label1:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void startExtractingText(boolean)>(0);

        return;

     label2:
        r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText> = null;

        r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mExtractAccessories> = null;

        r0.<android.inputmethodservice.InputMethodService: android.widget.Button mExtractAction> = null;

        return;
    }

    public void setExtractViewShown(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, z1, $z2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden>;

        if $z2 != z0 goto label2;

        if z0 != 0 goto label3;

        z1 = 1;

     label1:
        r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden> = z1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateExtractFrameVisibility()>();

     label2:
        return;

     label3:
        z1 = 0;

        goto label1;
    }

    public void setInputView(android.view.View)
    {
        android.inputmethodservice.InputMethodService r0;
        android.view.View r1;
        android.widget.FrameLayout $r2, $r4;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -2);

        virtualinvoke $r4.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r3);

        r0.<android.inputmethodservice.InputMethodService: android.view.View mInputView> = r1;

        return;
    }

    public void setTheme(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.inputmethodservice.SoftInputWindow $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must be called before onCreate()");

        throw $r2;

     label1:
        r0.<android.inputmethodservice.InputMethodService: int mTheme> = i0;

        return;
    }

    public void showStatusIcon(int)
    {
        android.inputmethodservice.InputMethodService r0;
        int i0;
        android.view.inputmethod.InputMethodManager $r1;
        android.os.IBinder $r2;
        java.lang.String $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        i0 := @parameter0: int;

        r0.<android.inputmethodservice.InputMethodService: int mStatusIcon> = i0;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm>;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        $r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: java.lang.String getPackageName()>();

        virtualinvoke $r1.<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)>($r2, $r3, i0);

        return;
    }

    public void showWindow(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow>;

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodService", "Re-entrance in to showWindow");

        return;

     label1:
        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        r0.<android.inputmethodservice.InputMethodService: boolean mWindowWasVisible> = $z2;

        r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow> = 1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void showWindowInner(boolean)>(z0);

     label2:
        r0.<android.inputmethodservice.InputMethodService: boolean mWindowWasVisible> = 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow> = 0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        r0.<android.inputmethodservice.InputMethodService: boolean mWindowWasVisible> = 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mInShowWindow> = 0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void showWindowInner(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.view.View r1;
        int $i0;
        android.os.IBinder $r2;
        android.view.inputmethod.InputMethodManager $r3;
        android.inputmethodservice.SoftInputWindow $r4;
        android.view.inputmethod.EditorInfo $r5, $r6;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        z1 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible> = 1;

        $z4 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z4 != 0 goto label7;

        z3 = r0.<android.inputmethodservice.InputMethodService: boolean mInputStarted>;

        z2 = 0;

        if z3 == 0 goto label1;

        z2 = 0;

        if z0 == 0 goto label1;

        z2 = 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested> = 1;

     label1:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateInputViewShown()>();

        $z5 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowAdded>;

        if $z5 == 0 goto label2;

        $z9 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowCreated>;

        if $z9 != 0 goto label3;

     label2:
        r0.<android.inputmethodservice.InputMethodService: boolean mWindowAdded> = 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mWindowCreated> = 1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>();

        if r1 == null goto label3;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)>(r1);

     label3:
        $z6 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z6 == 0 goto label8;

        $z8 = r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted>;

        if $z8 != 0 goto label4;

        r0.<android.inputmethodservice.InputMethodService: boolean mInputViewStarted> = 1;

        $r6 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>($r6, 0);

     label4:
        if z2 == 0 goto label5;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void startExtractingText(boolean)>(0);

     label5:
        if z1 != 0 goto label6;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm>;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        $i0 = r0.<android.inputmethodservice.InputMethodService: int mBackDisposition>;

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>($r2, 1, $i0);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onWindowShown()>();

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        virtualinvoke $r4.<android.inputmethodservice.SoftInputWindow: void show()>();

     label6:
        return;

     label7:
        z2 = 0;

        goto label1;

     label8:
        $z7 = r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted>;

        if $z7 != 0 goto label4;

        r0.<android.inputmethodservice.InputMethodService: boolean mCandidatesViewStarted> = 1;

        $r5 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo mInputEditorInfo>;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>($r5, 0);

        goto label4;
    }

    void startExtractingText(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2;
        android.inputmethodservice.ExtractEditText r1;
        android.view.inputmethod.ExtractedTextRequest r2, $r7;
        android.view.inputmethod.InputConnection r3;
        android.view.inputmethod.ExtractedText r4, $r9, $r12, $r16, $r19;
        android.view.inputmethod.EditorInfo r5;
        java.lang.Throwable r6, $r18;
        int i0, $i1, $i2, $i3, $i5, $i6;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14;
        java.lang.String $r15;
        java.lang.CharSequence $r17;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.ExtractEditText mExtractEditText>;

        if r1 == null goto label08;

        $z1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>();

        if $z1 == 0 goto label08;

        $z2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>();

        if $z2 == 0 goto label08;

        $i1 = r0.<android.inputmethodservice.InputMethodService: int mExtractedToken>;

        $i2 = 1 + $i1;

        r0.<android.inputmethodservice.InputMethodService: int mExtractedToken> = $i2;

        $r7 = new android.view.inputmethod.ExtractedTextRequest;

        specialinvoke $r7.<android.view.inputmethod.ExtractedTextRequest: void <init>()>();

        r2 = $r7;

        $i3 = r0.<android.inputmethodservice.InputMethodService: int mExtractedToken>;

        r2.<android.view.inputmethod.ExtractedTextRequest: int token> = $i3;

        r2.<android.view.inputmethod.ExtractedTextRequest: int flags> = 1;

        r2.<android.view.inputmethod.ExtractedTextRequest: int hintMaxLines> = 10;

        r2.<android.view.inputmethod.ExtractedTextRequest: int hintMaxChars> = 10000;

        r3 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r3 != null goto label09;

        r4 = null;

     label01:
        r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText> = r4;

        $r9 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        if $r9 == null goto label02;

        if r3 != null goto label03;

     label02:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected null in startExtractingText : mExtractedText = ");

        $r12 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", input connection = ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodService", $r15);

     label03:
        r5 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>();

     label04:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void startInternalChanges()>();

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)>(r5);

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>(r5);

        i0 = r5.<android.view.inputmethod.EditorInfo: int inputType>;

     label05:
        $i5 = i0 & 15;

        if $i5 != 1 goto label06;

        $i6 = 262144 & i0;

        if $i6 == 0 goto label06;

        i0 = i0 | 131072;

     label06:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setInputType(int)>(i0);

        $r17 = r5.<android.view.inputmethod.EditorInfo: java.lang.CharSequence hintText>;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setHint(java.lang.CharSequence)>($r17);

        $r16 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        if $r16 == null goto label10;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setEnabled(boolean)>(1);

        $r19 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.ExtractedText mExtractedText>;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>($r19);

     label07:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>();

        if z0 == 0 goto label08;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onExtractingInputChanged(android.view.inputmethod.EditorInfo)>(r5);

     label08:
        return;

     label09:
        r4 = interfaceinvoke r3.<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>(r2, 1);

        goto label01;

     label10:
        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setEnabled(boolean)>(0);

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void setText(java.lang.CharSequence)>("");

     label11:
        goto label07;

     label12:
        $r18 := @caughtexception;

        r6 = $r18;

        virtualinvoke r1.<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>();

        throw r6;

        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    public void switchInputMethod(java.lang.String)
    {
        android.inputmethodservice.InputMethodService r0;
        java.lang.String r1;
        android.os.IBinder $r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputMethodManager mImm>;

        $r2 = r0.<android.inputmethodservice.InputMethodService: android.os.IBinder mToken>;

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>($r2, r1);

        return;
    }

    void updateCandidatesVisibility(boolean)
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0;
        int i0, $i1;
        android.widget.FrameLayout $r1;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label3;

        i0 = 0;

     label1:
        $i1 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        if $i1 == i0 goto label2;

        $r1 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mCandidatesFrame>;

        virtualinvoke $r1.<android.widget.FrameLayout: void setVisibility(int)>(i0);

        r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility> = i0;

     label2:
        return;

     label3:
        i0 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>();

        goto label1;
    }

    void updateExtractFrameVisibility()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, z1, $z2, $z3, $z4, z5;
        int i0, i1, $i2, $i3, i4;
        android.content.res.TypedArray r1;
        android.widget.FrameLayout $r2, $r7;
        android.view.ViewGroup $r3, $r4, $r5;
        android.view.animation.Animation $r6;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 = 1;

        $z2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>();

        if $z2 == 0 goto label7;

        $z4 = r0.<android.inputmethodservice.InputMethodService: boolean mExtractViewHidden>;

        if $z4 == 0 goto label6;

        i0 = 4;

     label1:
        $r7 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        virtualinvoke $r7.<android.widget.FrameLayout: void setVisibility(int)>(i0);

     label2:
        $i2 = r0.<android.inputmethodservice.InputMethodService: int mCandidatesVisibility>;

        if $i2 != 0 goto label8;

        z1 = 1;

     label3:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateCandidatesVisibility(boolean)>(z1);

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowWasVisible>;

        if $z3 == 0 goto label5;

        $r4 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $i3 = virtualinvoke $r4.<android.view.ViewGroup: int getVisibility()>();

        if $i3 == i0 goto label5;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.content.res.TypedArray mThemeAttrs>;

        if i0 != 0 goto label9;

     label4:
        i4 = (int) z0;

        i1 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i4, 0);

        if i1 == 0 goto label5;

        $r5 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $r6 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, i1);

        virtualinvoke $r5.<android.view.ViewGroup: void startAnimation(android.view.animation.Animation)>($r6);

     label5:
        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        virtualinvoke $r3.<android.view.ViewGroup: void setVisibility(int)>(i0);

        return;

     label6:
        i0 = 0;

        goto label1;

     label7:
        $r2 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mExtractFrame>;

        virtualinvoke $r2.<android.widget.FrameLayout: void setVisibility(int)>(8);

        i0 = 0;

        goto label2;

     label8:
        z1 = 0;

        goto label3;

     label9:
        z5 = (boolean) 2;

        z0 = z5;

        goto label4;
    }

    public void updateFullscreenMode()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11;
        android.view.inputmethod.InputConnection r1;
        android.widget.LinearLayout$LayoutParams r2;
        android.view.Window r3;
        android.view.View r4, $r13;
        android.view.ViewGroup $r5, $r7, $r9, $r10, $r11, $r14;
        android.view.ViewGroup$LayoutParams $r6;
        android.view.ViewParent $r8;
        android.inputmethodservice.SoftInputWindow $r12;
        android.content.res.TypedArray $r15;
        android.graphics.drawable.Drawable $r16;

        r0 := @this: android.inputmethodservice.InputMethodService;

        z0 = 1;

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z3 == 0 goto label11;

        $z10 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>();

        if $z10 == 0 goto label11;

        z1 = 1;

     label01:
        $z5 = r0.<android.inputmethodservice.InputMethodService: boolean mLastShowInputRequested>;

        $z4 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z5 == $z4 goto label12;

        z2 = 1;

     label02:
        $z6 = r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen>;

        if $z6 != z1 goto label03;

        $z11 = r0.<android.inputmethodservice.InputMethodService: boolean mFullscreenApplied>;

        if $z11 != 0 goto label08;

     label03:
        z2 = 1;

        r0.<android.inputmethodservice.InputMethodService: boolean mIsFullscreen> = z1;

        r1 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>();

        if r1 == null goto label04;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean reportFullscreenMode(boolean)>(z1);

     label04:
        r0.<android.inputmethodservice.InputMethodService: boolean mFullscreenApplied> = 1;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        $r5 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $r6 = virtualinvoke $r5.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.LinearLayout$LayoutParams) $r6;

        if z1 == 0 goto label13;

        $r14 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $r15 = r0.<android.inputmethodservice.InputMethodService: android.content.res.TypedArray mThemeAttrs>;

        $r16 = virtualinvoke $r15.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        virtualinvoke $r14.<android.view.ViewGroup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r16);

        r2.<android.widget.LinearLayout$LayoutParams: int height> = 0;

        r2.<android.widget.LinearLayout$LayoutParams: float weight> = 1.0F;

     label05:
        $r9 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        $r8 = virtualinvoke $r9.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        $r10 = (android.view.ViewGroup) $r8;

        $r11 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        virtualinvoke $r10.<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r11, r2);

        if z1 == 0 goto label07;

        $r13 = r0.<android.inputmethodservice.InputMethodService: android.view.View mExtractView>;

        if $r13 != null goto label06;

        r4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.View onCreateExtractTextView()>();

        if r4 == null goto label06;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>(r4);

     label06:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void startExtractingText(boolean)>(0);

     label07:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void updateExtractFrameVisibility()>();

     label08:
        if z2 == 0 goto label10;

        $r12 = r0.<android.inputmethodservice.InputMethodService: android.inputmethodservice.SoftInputWindow mWindow>;

        r3 = virtualinvoke $r12.<android.inputmethodservice.SoftInputWindow: android.view.Window getWindow()>();

        $z8 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z8 != 0 goto label14;

     label09:
        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void onConfigureWindow(android.view.Window,boolean,boolean)>(r3, z1, z0);

        $z7 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        r0.<android.inputmethodservice.InputMethodService: boolean mLastShowInputRequested> = $z7;

     label10:
        return;

     label11:
        z1 = 0;

        goto label01;

     label12:
        z2 = 0;

        goto label02;

     label13:
        $r7 = r0.<android.inputmethodservice.InputMethodService: android.view.ViewGroup mFullscreenArea>;

        virtualinvoke $r7.<android.view.ViewGroup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(null);

        r2.<android.widget.LinearLayout$LayoutParams: int height> = -2;

        r2.<android.widget.LinearLayout$LayoutParams: float weight> = 0.0F;

        goto label05;

     label14:
        z0 = 0;

        goto label09;
    }

    public void updateInputViewShown()
    {
        android.inputmethodservice.InputMethodService r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.widget.FrameLayout r1;
        byte b0;
        android.view.View r2, $r3;

        r0 := @this: android.inputmethodservice.InputMethodService;

        $z1 = r0.<android.inputmethodservice.InputMethodService: boolean mShowInputRequested>;

        if $z1 == 0 goto label4;

        $z4 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>();

        if $z4 == 0 goto label4;

        z0 = 1;

     label1:
        $z2 = r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown>;

        if $z2 == z0 goto label3;

        $z3 = r0.<android.inputmethodservice.InputMethodService: boolean mWindowVisible>;

        if $z3 == 0 goto label3;

        r0.<android.inputmethodservice.InputMethodService: boolean mIsInputViewShown> = z0;

        r1 = r0.<android.inputmethodservice.InputMethodService: android.widget.FrameLayout mInputFrame>;

        b0 = 0;

        if z0 == 0 goto label5;

     label2:
        virtualinvoke r1.<android.widget.FrameLayout: void setVisibility(int)>(b0);

        $r3 = r0.<android.inputmethodservice.InputMethodService: android.view.View mInputView>;

        if $r3 != null goto label3;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void initialize()>();

        r2 = virtualinvoke r0.<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>();

        if r2 == null goto label3;

        virtualinvoke r0.<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>(r2);

     label3:
        return;

     label4:
        z0 = 0;

        goto label1;

     label5:
        b0 = 8;

        goto label2;
    }

    public static void <clinit>()
    {
        <android.inputmethodservice.InputMethodService: java.lang.String TAG> = "InputMethodService";

        <android.inputmethodservice.InputMethodService: int MOVEMENT_UP> = -2;

        <android.inputmethodservice.InputMethodService: int MOVEMENT_DOWN> = -1;

        <android.inputmethodservice.InputMethodService: int IME_VISIBLE> = 2;

        <android.inputmethodservice.InputMethodService: int IME_ACTIVE> = 1;

        <android.inputmethodservice.InputMethodService: boolean DEBUG> = 0;

        <android.inputmethodservice.InputMethodService: int BACK_DISPOSITION_WILL_NOT_DISMISS> = 1;

        <android.inputmethodservice.InputMethodService: int BACK_DISPOSITION_WILL_DISMISS> = 2;

        <android.inputmethodservice.InputMethodService: int BACK_DISPOSITION_DEFAULT> = 0;

        return;
    }
}
