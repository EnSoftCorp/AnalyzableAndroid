class android.transition.Crossfade$2 extends android.animation.AnimatorListenerAdapter
{
    final android.transition.Crossfade this$0;
    final android.graphics.drawable.BitmapDrawable val$endDrawable;
    final android.graphics.drawable.BitmapDrawable val$startDrawable;
    final boolean val$useParentOverlay;
    final android.view.View val$view;

    void <init>(android.transition.Crossfade, boolean, android.view.View, android.graphics.drawable.BitmapDrawable, android.graphics.drawable.BitmapDrawable)
    {
        android.transition.Crossfade$2 r0;
        android.transition.Crossfade r1;
        boolean z0;
        android.view.View r2;
        android.graphics.drawable.BitmapDrawable r3, r4;

        r0 := @this: android.transition.Crossfade$2;

        r1 := @parameter0: android.transition.Crossfade;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.view.View;

        r3 := @parameter3: android.graphics.drawable.BitmapDrawable;

        r4 := @parameter4: android.graphics.drawable.BitmapDrawable;

        r0.<android.transition.Crossfade$2: android.transition.Crossfade this$0> = r1;

        r0.<android.transition.Crossfade$2: boolean val$useParentOverlay> = z0;

        r0.<android.transition.Crossfade$2: android.view.View val$view> = r2;

        r0.<android.transition.Crossfade$2: android.graphics.drawable.BitmapDrawable val$startDrawable> = r3;

        r0.<android.transition.Crossfade$2: android.graphics.drawable.BitmapDrawable val$endDrawable> = r4;

        specialinvoke r0.<android.animation.AnimatorListenerAdapter: void <init>()>();

        return;
    }

    public void onAnimationEnd(android.animation.Animator)
    {
        android.transition.Crossfade$2 r0;
        android.animation.Animator r1;
        android.view.ViewOverlay r2;
        boolean $z0;
        android.view.View $r3, $r7;
        android.graphics.drawable.BitmapDrawable $r4, $r6;
        android.transition.Crossfade $r5;
        int $i0;
        android.view.ViewParent $r8;
        android.view.ViewGroup $r9;

        r0 := @this: android.transition.Crossfade$2;

        r1 := @parameter0: android.animation.Animator;

        $z0 = r0.<android.transition.Crossfade$2: boolean val$useParentOverlay>;

        if $z0 == 0 goto label3;

        $r7 = r0.<android.transition.Crossfade$2: android.view.View val$view>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.ViewParent getParent()>();

        $r9 = (android.view.ViewGroup) $r8;

        r2 = virtualinvoke $r9.<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>();

     label1:
        $r4 = r0.<android.transition.Crossfade$2: android.graphics.drawable.BitmapDrawable val$startDrawable>;

        virtualinvoke r2.<android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>($r4);

        $r5 = r0.<android.transition.Crossfade$2: android.transition.Crossfade this$0>;

        $i0 = staticinvoke <android.transition.Crossfade: int access$000(android.transition.Crossfade)>($r5);

        if $i0 != 1 goto label2;

        $r6 = r0.<android.transition.Crossfade$2: android.graphics.drawable.BitmapDrawable val$endDrawable>;

        virtualinvoke r2.<android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>($r6);

     label2:
        return;

     label3:
        $r3 = r0.<android.transition.Crossfade$2: android.view.View val$view>;

        r2 = virtualinvoke $r3.<android.view.View: android.view.ViewOverlay getOverlay()>();

        goto label1;
    }
}
