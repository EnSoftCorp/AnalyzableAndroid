public class android.filterfw.core.FieldPort extends android.filterfw.core.InputPort
{
    protected java.lang.reflect.Field mField;
    protected boolean mHasFrame;
    protected java.lang.Object mValue;
    protected boolean mValueWaiting;

    public void <init>(android.filterfw.core.Filter, java.lang.String, java.lang.reflect.Field, boolean)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Filter r1;
        java.lang.String r2;
        java.lang.reflect.Field r3;
        boolean z0;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Filter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.reflect.Field;

        z0 := @parameter3: boolean;

        specialinvoke r0.<android.filterfw.core.InputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>(r1, r2);

        r0.<android.filterfw.core.FieldPort: boolean mValueWaiting> = 0;

        r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField> = r3;

        r0.<android.filterfw.core.FieldPort: boolean mHasFrame> = z0;

        return;
    }

    public boolean acceptsFrame()
    {
        android.filterfw.core.FieldPort r0;
        java.lang.Throwable r1, $r2;
        boolean z0, z1;

        r0 := @this: android.filterfw.core.FieldPort;

        entermonitor r0;

     label1:
        z0 = r0.<android.filterfw.core.FieldPort: boolean mValueWaiting>;

     label2:
        if z0 != 0 goto label4;

        z1 = 1;

     label3:
        exitmonitor r0;

        return z1;

     label4:
        z1 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public void clear()
    {
        android.filterfw.core.FieldPort r0;

        r0 := @this: android.filterfw.core.FieldPort;

        return;
    }

    public java.lang.Object getTarget()
    {
        android.filterfw.core.FieldPort r0;
        java.lang.Object r2;
        android.filterfw.core.Filter $r3;
        java.lang.reflect.Field $r4;
        java.lang.IllegalAccessException $r5;

        r0 := @this: android.filterfw.core.FieldPort;

     label1:
        $r4 = r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField>;

        $r3 = r0.<android.filterfw.core.FieldPort: android.filterfw.core.Filter mFilter>;

        r2 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r3);

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public boolean hasFrame()
    {
        android.filterfw.core.FieldPort r0;
        java.lang.Throwable r1, $r2;
        boolean z0;

        r0 := @this: android.filterfw.core.FieldPort;

        entermonitor r0;

     label1:
        z0 = r0.<android.filterfw.core.FieldPort: boolean mHasFrame>;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.filterfw.core.Frame pullFrame()
    {
        android.filterfw.core.FieldPort r0;
        java.lang.Throwable r1, $r8;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: android.filterfw.core.FieldPort;

        entermonitor r0;

     label1:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot pull frame on ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        $r8 := @caughtexception;

        r1 = $r8;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public void pushFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>(r1, 0);

        return;
    }

    protected void setFieldFrame(android.filterfw.core.Frame, boolean)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Frame r1;
        boolean z0, $z1;
        java.lang.Throwable r2, $r6;
        java.lang.Object r3, $r4, $r5;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label1:
        virtualinvoke r0.<android.filterfw.core.FieldPort: void assertPortIsOpen()>();

        virtualinvoke r0.<android.filterfw.core.FieldPort: void checkFrameType(android.filterfw.core.Frame,boolean)>(r1, z0);

        r3 = virtualinvoke r1.<android.filterfw.core.Frame: java.lang.Object getObjectValue()>();

     label2:
        if r3 != null goto label4;

     label3:
        $r5 = r0.<android.filterfw.core.FieldPort: java.lang.Object mValue>;

        if $r5 != null goto label5;

     label4:
        $r4 = r0.<android.filterfw.core.FieldPort: java.lang.Object mValue>;

        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label6;

     label5:
        r0.<android.filterfw.core.FieldPort: java.lang.Object mValue> = r3;

        r0.<android.filterfw.core.FieldPort: boolean mValueWaiting> = 1;

     label6:
        r0.<android.filterfw.core.FieldPort: boolean mHasFrame> = 1;

     label7:
        exitmonitor r0;

        return;

     label8:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setFrame(android.filterfw.core.Frame)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.Frame r1;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.Frame;

        virtualinvoke r0.<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>(r1, 1);

        return;
    }

    public java.lang.String toString()
    {
        android.filterfw.core.FieldPort r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: android.filterfw.core.FieldPort;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field ");

        $r3 = specialinvoke r0.<android.filterfw.core.InputPort: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void transfer(android.filterfw.core.FilterContext)
    {
        android.filterfw.core.FieldPort r0;
        android.filterfw.core.FilterContext r1;
        java.lang.Throwable r2, $r17;
        boolean z0;
        java.lang.Object $r4;
        android.filterfw.core.Filter $r5, $r8;
        java.lang.reflect.Field $r6, $r14;
        java.lang.String $r7, $r13, $r18;
        java.lang.IllegalAccessException $r9;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r11, $r12, $r15, $r16;

        r0 := @this: android.filterfw.core.FieldPort;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        entermonitor r0;

     label01:
        z0 = r0.<android.filterfw.core.FieldPort: boolean mValueWaiting>;

     label02:
        if z0 == 0 goto label07;

     label03:
        $r6 = r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField>;

        $r5 = r0.<android.filterfw.core.FieldPort: android.filterfw.core.Filter mFilter>;

        $r4 = r0.<android.filterfw.core.FieldPort: java.lang.Object mValue>;

        virtualinvoke $r6.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>($r5, $r4);

     label04:
        r0.<android.filterfw.core.FieldPort: boolean mValueWaiting> = 0;

     label05:
        if r1 == null goto label07;

     label06:
        $r8 = r0.<android.filterfw.core.FieldPort: android.filterfw.core.Filter mFilter>;

        $r7 = r0.<android.filterfw.core.FieldPort: java.lang.String mName>;

        virtualinvoke $r8.<android.filterfw.core.Filter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>($r7, r1);

     label07:
        exitmonitor r0;

        return;

     label08:
        $r9 := @caughtexception;

     label09:
        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Access to field \'");

        $r14 = r0.<android.filterfw.core.FieldPort: java.lang.reflect.Field mField>;

        $r13 = virtualinvoke $r14.<java.lang.reflect.Field: java.lang.String getName()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' was denied!");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r18);

        throw $r10;

     label10:
        $r17 := @caughtexception;

        r2 = $r17;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
    }
}
