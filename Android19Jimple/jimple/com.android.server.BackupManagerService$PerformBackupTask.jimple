class com.android.server.BackupManagerService$PerformBackupTask extends java.lang.Object implements com.android.server.BackupManagerService$BackupRestoreTask
{
    private static final java.lang.String TAG;
    android.os.ParcelFileDescriptor mBackupData;
    java.io.File mBackupDataName;
    android.content.pm.PackageInfo mCurrentPackage;
    com.android.server.BackupManagerService$BackupState mCurrentState;
    boolean mFinished;
    java.io.File mJournal;
    android.os.ParcelFileDescriptor mNewState;
    java.io.File mNewStateName;
    java.util.ArrayList mOriginalQueue;
    java.util.ArrayList mQueue;
    android.os.ParcelFileDescriptor mSavedState;
    java.io.File mSavedStateName;
    java.io.File mStateDir;
    int mStatus;
    com.android.internal.backup.IBackupTransport mTransport;
    final com.android.server.BackupManagerService this$0;

    public void <init>(com.android.server.BackupManagerService, com.android.internal.backup.IBackupTransport, java.lang.String, java.util.ArrayList, java.io.File)
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        com.android.server.BackupManagerService r1;
        com.android.internal.backup.IBackupTransport r2;
        java.lang.String r3;
        java.util.ArrayList r4;
        java.io.File r5, $r6, $r7;
        com.android.server.BackupManagerService$BackupState $r8;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        r1 := @parameter0: com.android.server.BackupManagerService;

        r2 := @parameter1: com.android.internal.backup.IBackupTransport;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.ArrayList;

        r5 := @parameter4: java.io.File;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport> = r2;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue> = r4;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mJournal> = r5;

        $r6 = new java.io.File;

        $r7 = r1.<com.android.server.BackupManagerService: java.io.File mBaseStateDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r3);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mStateDir> = $r6;

        $r8 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState INITIAL>;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService$BackupState mCurrentState> = $r8;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: boolean mFinished> = 0;

        virtualinvoke r1.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("STATE => INITIAL");

        return;
    }

    void agentErrorCleanup()
    {
        java.util.ArrayList $r0;
        com.android.server.BackupManagerService$PerformBackupTask r1;
        boolean $z0;
        com.android.server.BackupManagerService$BackupState r2;
        java.io.File $r3, $r4;

        r1 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        $r3 = r1.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        $r4 = r1.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mNewStateName>;

        virtualinvoke $r4.<java.io.File: boolean delete()>();

        virtualinvoke r1.<com.android.server.BackupManagerService$PerformBackupTask: void clearAgentState()>();

        $r0 = r1.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z0 = virtualinvoke $r0.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        r2 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

     label1:
        virtualinvoke r1.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>(r2);

        return;

     label2:
        r2 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState RUNNING_QUEUE>;

        goto label1;
    }

    void beginBackup()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        java.lang.StringBuilder r1, $r10, $r18, $r20, $r21, $r22, $r29, $r31, $r32, $r45, $r46, $r49, $r51, $r54, $r55, $r57, $r58, $r63, $r72, $r74, $r76, $r77, $r79, $r85, $r89, $r90, $r92;
        java.util.Iterator r2;
        java.io.File r3, $r24, $r25, $r35, $r60, $r83, $r93;
        java.lang.Throwable r4, $r80;
        java.lang.Exception r5, $r65;
        java.lang.String r6, $r13, $r26, $r30, $r36, $r47, $r53, $r64, $r66, $r75, $r84, $r91;
        com.android.server.BackupManagerService $r7, $r14, $r28, $r34, $r38, $r43, $r50, $r52, $r56, $r59, $r70, $r73, $r78, $r82, $r87, $r88;
        com.android.server.BackupManagerService$BackupRequest r8;
        java.util.ArrayList $r11, $r15, $r17, $r19, $r23;
        boolean $z0, $z1;
        java.lang.Object $r16, $r68;
        int $i0, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i14, $i15, $i19, $i22, $i23, $i24, $i25;
        com.android.internal.backup.IBackupTransport $r27, $r37, $r48, $r61;
        com.android.server.BackupManagerService$BackupState $r33, $r71, $r81, $r86;
        java.util.List $r39;
        android.os.IBinder $r40;
        android.app.IBackupAgent $r41;
        com.android.server.PackageManagerBackupAgent $r42;
        android.content.pm.PackageManager $r44;
        byte $b11;
        long $l12;
        java.lang.Object[] $r62;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        $r7 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r7.<com.android.server.BackupManagerService: void clearBackupTrace()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>(256);

        r1 = $r10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("beginBackup: [");

        $r11 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue>;

        r2 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r68 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.server.BackupManagerService$BackupRequest) $r68;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r66 = r8.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        goto label01;

     label02:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r14 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r13);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r15 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue>;

        $z1 = virtualinvoke $r15.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label04;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("PerformBackupTask", "Backup begun with an empty queue - nothing to do.");

        $r70 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r70.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("queue empty at begin");

        $r71 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>($r71);

     label03:
        return;

     label04:
        $r17 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue>;

        $r16 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object clone()>();

        $r19 = (java.util.ArrayList) $r16;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue> = $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning backup of ");

        $r23 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $i0 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" targets");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("PerformBackupTask", $r26);

        $r24 = new java.io.File;

        $r25 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        specialinvoke $r24.<java.io.File: void <init>(java.io.File,java.lang.String)>($r25, "@pm@");

        r3 = $r24;

     label05:
        $r27 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        r6 = interfaceinvoke $r27.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2821, r6);

        $i3 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i3 != 0 goto label06;

        $l12 = virtualinvoke r3.<java.io.File: long length()>();

        $b11 = $l12 cmp 0L;

        if $b11 > 0 goto label06;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PerformBackupTask", "Initializing (wiping) backup state and transport storage");

        $r52 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initializing transport ");

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r53);

        $r59 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r60 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        virtualinvoke $r59.<com.android.server.BackupManagerService: void resetBackupState(java.io.File)>($r60);

        $r61 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $i15 = interfaceinvoke $r61.<com.android.internal.backup.IBackupTransport: int initializeDevice()>();

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = $i15;

        $r56 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transport.initializeDevice() == ");

        $i14 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        $r63 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r56.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r64);

        $i19 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i19 != 0 goto label09;

        $r62 = newarray (java.lang.Object)[0];

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2827, $r62);

     label06:
        $i5 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i5 != 0 goto label07;

        $r42 = new com.android.server.PackageManagerBackupAgent;

        $r43 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r44 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r43);

        $r38 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r39 = virtualinvoke $r38.<com.android.server.BackupManagerService: java.util.List allAgentPackages()>();

        specialinvoke $r42.<com.android.server.PackageManagerBackupAgent: void <init>(android.content.pm.PackageManager,java.util.List)>($r44, $r39);

        $r40 = virtualinvoke $r42.<com.android.server.PackageManagerBackupAgent: android.os.IBinder onBind()>();

        $r41 = staticinvoke <android.app.IBackupAgent$Stub: android.app.IBackupAgent asInterface(android.os.IBinder)>($r40);

        $r48 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $i10 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: int invokeAgentForBackup(java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport)>("@pm@", $r41, $r48);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = $i10;

        $r50 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PMBA invoke: ");

        $i9 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r47);

     label07:
        $i4 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i4 != 2 goto label08;

        $r37 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $r36 = interfaceinvoke $r37.<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2826, $r36);

     label08:
        $r28 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exiting prelim: ");

        $i6 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r30);

        $i7 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i7 == 0 goto label03;

        $r34 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r35 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        virtualinvoke $r34.<com.android.server.BackupManagerService: void resetBackupState(java.io.File)>($r35);

        $r33 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>($r33);

        return;

     label09:
        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2822, "(initialize)");

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", "Transport error in initializeDevice()");

     label10:
        goto label06;

     label11:
        $r65 := @caughtexception;

        r5 = $r65;

     label12:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PerformBackupTask", "Error in backup thread", r5);

        $r78 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in backup thread: ");

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r78.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r75);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 1;

     label13:
        $r73 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exiting prelim: ");

        $i23 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        $r85 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r73.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r84);

        $i22 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i22 == 0 goto label03;

        $r82 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r83 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        virtualinvoke $r82.<com.android.server.BackupManagerService: void resetBackupState(java.io.File)>($r83);

        $r81 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>($r81);

        return;

     label14:
        $r80 := @caughtexception;

        r4 = $r80;

        $r88 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exiting prelim: ");

        $i24 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r88.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r91);

        $i25 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i25 == 0 goto label15;

        $r87 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r93 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        virtualinvoke $r87.<com.android.server.BackupManagerService: void resetBackupState(java.io.File)>($r93);

        $r86 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>($r86);

     label15:
        throw r4;

        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    void clearAgentState()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        java.lang.Object r4;
        java.lang.Throwable r5, $r32;
        android.os.ParcelFileDescriptor $r7, $r8, $r9, $r26, $r27, $r29;
        com.android.server.BackupManagerService $r10, $r11, $r17, $r23;
        android.util.SparseArray $r12;
        android.content.pm.PackageInfo $r13, $r19, $r25;
        java.lang.StringBuilder $r14, $r16, $r21;
        android.content.pm.ApplicationInfo $r15, $r24;
        java.lang.String $r18, $r20;
        android.app.IActivityManager $r22;
        java.io.IOException $r28, $r30, $r31;
        android.os.RemoteException $r33;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

     label01:
        $r7 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState>;

        if $r7 == null goto label02;

        $r29 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState>;

        virtualinvoke $r29.<android.os.ParcelFileDescriptor: void close()>();

     label02:
        $r8 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData>;

        if $r8 == null goto label03;

        $r26 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData>;

        virtualinvoke $r26.<android.os.ParcelFileDescriptor: void close()>();

     label03:
        $r9 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState>;

        if $r9 == null goto label04;

        $r27 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState>;

        virtualinvoke $r27.<android.os.ParcelFileDescriptor: void close()>();

     label04:
        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState> = null;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData> = null;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState> = null;

        $r10 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        r4 = $r10.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r4;

     label05:
        $r11 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r12 = $r11.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r12.<android.util.SparseArray: void clear()>();

        exitmonitor r4;

     label06:
        $r13 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r15 = $r13.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r15 == null goto label08;

        $r17 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unbinding ");

        $r19 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r18 = $r19.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r20);

     label07:
        $r23 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r22 = staticinvoke <com.android.server.BackupManagerService: android.app.IActivityManager access$800(com.android.server.BackupManagerService)>($r23);

        $r25 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r24 = $r25.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        interfaceinvoke $r22.<android.app.IActivityManager: void unbindBackupAgent(android.content.pm.ApplicationInfo)>($r24);

     label08:
        return;

     label09:
        $r32 := @caughtexception;

        r5 = $r32;

     label10:
        exitmonitor r4;

     label11:
        throw r5;

     label12:
        $r33 := @caughtexception;

        return;

     label13:
        $r30 := @caughtexception;

        goto label04;

     label14:
        $r31 := @caughtexception;

        goto label03;

     label15:
        $r28 := @caughtexception;

        goto label02;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label02 to label03 with label14;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch android.os.RemoteException from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void clearMetadata()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        java.io.File r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        $r2 = new java.io.File;

        $r3 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "@pm@");

        r1 = $r2;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    public void execute()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        com.android.server.BackupManagerService$BackupState $r1;
        int[] $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        $r2 = <com.android.server.BackupManagerService$3: int[] $SwitchMap$com$android$server$BackupManagerService$BackupState>;

        $r1 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService$BackupState mCurrentState>;

        $i0 = virtualinvoke $r1.<com.android.server.BackupManagerService$BackupState: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        return;

     label2:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void beginBackup()>();

        return;

     label3:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void invokeNextAgent()>();

        return;

     label4:
        $z0 = r0.<com.android.server.BackupManagerService$PerformBackupTask: boolean mFinished>;

        if $z0 != 0 goto label6;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void finalizeBackup()>();

     label5:
        r0.<com.android.server.BackupManagerService$PerformBackupTask: boolean mFinished> = 1;

        return;

     label6:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", "Duplicate finish");

        goto label5;
    }

    void executeNextState(com.android.server.BackupManagerService$BackupState)
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        com.android.server.BackupManagerService$BackupState r1;
        android.os.Message r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.server.BackupManagerService $r4, $r8, $r10;
        java.lang.String $r7;
        com.android.server.BackupManagerService$BackupHandler $r9, $r11;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        r1 := @parameter0: com.android.server.BackupManagerService$BackupState;

        $r4 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("executeNextState => ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r7);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService$BackupState mCurrentState> = r1;

        $r8 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r9 = $r8.<com.android.server.BackupManagerService: com.android.server.BackupManagerService$BackupHandler mBackupHandler>;

        r2 = virtualinvoke $r9.<com.android.server.BackupManagerService$BackupHandler: android.os.Message obtainMessage(int,java.lang.Object)>(20, r0);

        $r10 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r11 = $r10.<com.android.server.BackupManagerService: com.android.server.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r11.<com.android.server.BackupManagerService$BackupHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    void finalizeBackup()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r26;
        com.android.server.BackupManagerService $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r18, $r24;
        java.io.File $r5, $r17, $r20;
        long $l0, $l6;
        byte $b1;
        int $i2, $i5;
        android.os.PowerManager$WakeLock $r10;
        com.android.internal.backup.IBackupTransport $r14;
        java.lang.StringBuilder $r19, $r21, $r22;
        boolean $z0;
        android.os.RemoteException $r23;
        java.lang.String $r25;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        $r4 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r4.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("finishing");

        $r5 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mJournal>;

        if $r5 == null goto label01;

        $r17 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mJournal>;

        $z0 = virtualinvoke $r17.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label01;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to remove backup journal file ");

        $r20 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mJournal>;

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", $r25);

     label01:
        $r6 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $l0 = $r6.<com.android.server.BackupManagerService: long mCurrentToken>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label03;

        $i5 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i5 != 0 goto label03;

        $r15 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r15.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("success; recording token");

     label02:
        $r16 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r14 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $l6 = interfaceinvoke $r14.<com.android.internal.backup.IBackupTransport: long getCurrentRestoreSet()>();

        $r16.<com.android.server.BackupManagerService: long mCurrentToken> = $l6;

        $r18 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r18.<com.android.server.BackupManagerService: void writeRestoreTokens()>();

     label03:
        $r7 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        r1 = $r7.<com.android.server.BackupManagerService: java.lang.Object mQueueLock>;

        entermonitor r1;

     label04:
        $r8 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r8.<com.android.server.BackupManagerService: boolean mBackupRunning> = 0;

        $i2 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i2 != 2 goto label05;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void clearMetadata()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("PerformBackupTask", "Server requires init; rerunning");

        $r12 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r12.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("init required; rerunning");

        $r13 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r13.<com.android.server.BackupManagerService: void backupNow()>();

     label05:
        exitmonitor r1;

     label06:
        $r9 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r9.<com.android.server.BackupManagerService: void clearBackupTrace()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PerformBackupTask", "Backup pass finished.");

        $r11 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r10 = $r11.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r10.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label07:
        $r23 := @caughtexception;

        $r24 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r24.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("transport threw returning token");

        goto label03;

     label08:
        $r26 := @caughtexception;

        r2 = $r26;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

        catch android.os.RemoteException from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void handleTimeout()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        java.lang.Object[] r1;
        java.lang.StringBuilder $r2, $r3, $r6, $r10, $r13, $r14;
        android.content.pm.PackageInfo $r4, $r8, $r12, $r16;
        java.lang.String $r5, $r7, $r9, $r15, $r17, $r19;
        com.android.server.BackupManagerService $r11, $r18;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout backing up ");

        $r4 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r5 = $r4.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", $r7);

        r1 = newarray (java.lang.Object)[2];

        $r8 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r9 = $r8.<android.content.pm.PackageInfo: java.lang.String packageName>;

        r1[0] = $r9;

        r1[1] = "timeout";

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2823, r1);

        $r11 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeout of ");

        $r12 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r15 = $r12.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r17);

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void agentErrorCleanup()>();

        $r18 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r16 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r19 = $r16.<android.content.pm.PackageInfo: java.lang.String packageName>;

        staticinvoke <com.android.server.BackupManagerService: void access$700(com.android.server.BackupManagerService,java.lang.String)>($r18, $r19);

        return;
    }

    int invokeAgentForBackup(java.lang.String, android.app.IBackupAgent, com.android.internal.backup.IBackupTransport)
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        java.lang.String r1, $r9, $r13, $r24, $r27, $r53, $r55, $r60, $r64;
        android.app.IBackupAgent r2;
        com.android.internal.backup.IBackupTransport r3;
        int i0;
        java.lang.Exception r4, $r57;
        java.lang.Object[] r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r11, $r14, $r20, $r21, $r22, $r26, $r29, $r30, $r44, $r48, $r50, $r54, $r56, $r58, $r59, $r62, $r63;
        com.android.server.BackupManagerService $r12, $r17, $r28, $r36, $r37, $r42, $r43, $r45, $r61;
        java.io.File $r15, $r16, $r18, $r19, $r23, $r25, $r31, $r33, $r34, $r38, $r49;
        android.os.ParcelFileDescriptor $r32, $r35, $r39, $r40, $r46, $r47;
        boolean $z0, $z1;
        android.app.backup.IBackupManager $r41;
        android.content.pm.PackageInfo $r51, $r52;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.IBackupAgent;

        r3 := @parameter2: com.android.internal.backup.IBackupTransport;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invokeAgentForBackup on ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("PerformBackupTask", $r9);

        $r12 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invoking ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r13);

        $r16 = new java.io.File;

        $r15 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        specialinvoke $r16.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, r1);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mSavedStateName> = $r16;

        $r18 = new java.io.File;

        $r17 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r19 = $r17.<com.android.server.BackupManagerService: java.io.File mDataDir>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".data");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, $r24);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName> = $r18;

        $r23 = new java.io.File;

        $r25 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mStateDir>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".new");

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>($r25, $r27);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mNewStateName> = $r23;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState> = null;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData> = null;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState> = null;

        $r28 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        i0 = virtualinvoke $r28.<com.android.server.BackupManagerService: int generateToken()>();

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("@pm@");

        if $z0 == 0 goto label2;

        $r52 = new android.content.pm.PackageInfo;

        specialinvoke $r52.<android.content.pm.PackageInfo: void <init>()>();

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage> = $r52;

        $r51 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r51.<android.content.pm.PackageInfo: java.lang.String packageName> = r1;

     label2:
        $r31 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mSavedStateName>;

        $r32 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r31, 402653184);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState> = $r32;

        $r34 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        $r35 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r34, 1006632960);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData> = $r35;

        $r33 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        $z1 = staticinvoke <android.os.SELinux: boolean restorecon(java.io.File)>($r33);

        if $z1 != 0 goto label3;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELinux restorecon failed on ");

        $r49 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        $r48 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49);

        $r53 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", $r53);

     label3:
        $r38 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mNewStateName>;

        $r39 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r38, 1006632960);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState> = $r39;

        $r36 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r36.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("setting timeout");

        $r37 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r37.<com.android.server.BackupManagerService: void prepareOperationTimeout(int,long,com.android.server.BackupManagerService$BackupRestoreTask)>(i0, 30000L, r0);

        $r43 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r43.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("calling agent doBackup()");

        $r46 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mSavedState>;

        $r47 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mBackupData>;

        $r40 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.os.ParcelFileDescriptor mNewState>;

        $r42 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r41 = $r42.<com.android.server.BackupManagerService: android.app.backup.IBackupManager mBackupManagerBinder>;

        interfaceinvoke r2.<android.app.IBackupAgent: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>($r46, $r47, $r40, i0, $r41);

     label4:
        $r45 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r45.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("invoke success");

        return 0;

     label5:
        $r57 := @caughtexception;

        r4 = $r57;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error invoking for backup on ");

        $r54 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("PerformBackupTask", $r55);

        $r61 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception: ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r61.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r64);

        r5 = newarray (java.lang.Object)[2];

        r5[0] = r1;

        $r60 = virtualinvoke r4.<java.lang.Exception: java.lang.String toString()>();

        r5[1] = $r60;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2823, r5);

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void agentErrorCleanup()>();

        return 3;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    void invokeNextAgent()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        com.android.server.BackupManagerService$BackupRequest r1;
        java.lang.Throwable r2, $r78;
        com.android.server.BackupManagerService$BackupState r3, r7, $r64, $r75, $r77;
        com.android.server.BackupManagerService r5, r10, $r14, $r30, $r31, $r44, $r49, $r54, $r57, $r59, $r61, $r63, $r72, $r74, $r79, $r82, $r84, $r86, $r88, $r89, $r92, $r93;
        java.lang.String r6, $r16, $r24, $r28, $r34, $r37, $r41, $r53, $r56, $r58, $r62, $r66, $r76, $r81, $r83, $r94;
        java.lang.SecurityException r8, $r96;
        android.app.IBackupAgent r9;
        java.lang.StringBuilder r11, $r12, $r13, $r17, $r23, $r25, $r26, $r27, $r29, $r33, $r48, $r52, $r67, $r68, $r69, $r71;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i22, $i23;
        java.util.ArrayList $r15, $r18, $r20, $r22, $r60, $r70, $r80, $r91, $r95;
        java.lang.Object $r19;
        android.content.pm.PackageManager $r32;
        android.content.pm.PackageInfo $r35, $r38, $r40, $r42, $r45;
        android.content.pm.ApplicationInfo $r36, $r39, $r47, $r50;
        android.os.WorkSource $r43;
        android.os.PowerManager$WakeLock $r46, $r51, $r65, $r73, $r85, $r87;
        com.android.internal.backup.IBackupTransport $r55;
        android.content.pm.PackageManager$NameNotFoundException $r90;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r14 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invoke q=");

        $r15 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $i0 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r16);

        $r18 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z1 = virtualinvoke $r18.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label01;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PerformBackupTask", "queue now empty");

        $r77 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>($r77);

        return;

     label01:
        $r20 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $r19 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (com.android.server.BackupManagerService$BackupRequest) $r19;

        $r22 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        virtualinvoke $r22.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("starting agent for backup of ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("PerformBackupTask", $r24);

        $r30 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("launch agent for ");

        $r28 = r1.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r34);

     label02:
        $r31 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r32 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r31);

        $r37 = r1.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        $r38 = virtualinvoke $r32.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r37, 64);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage> = $r38;

        $r35 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r36 = $r35.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r41 = $r36.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r41 != null goto label05;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r66 = r1.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" no longer supports backup; skipping");

        $r76 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PerformBackupTask", $r76);

        $r74 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r74.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("skipping - no agent, completion is noop");

        $r75 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState RUNNING_QUEUE>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>($r75);

     label03:
        $r72 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r73 = $r72.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r73.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i12 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i12 == 0 goto label32;

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState RUNNING_QUEUE>;

        $i13 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i13 != 3 goto label33;

        $r79 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r81 = r1.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.BackupManagerService: void access$700(com.android.server.BackupManagerService,java.lang.String)>($r79, $r81);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r80 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z4 = virtualinvoke $r80.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label04;

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

     label04:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>(r7);

        return;

     label05:
        $r40 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r39 = $r40.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i2 = $r39.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = 2097152 & $i2;

        if $i3 == 0 goto label07;

        $r57 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r57.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("skipping - stopped");

        $r64 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState RUNNING_QUEUE>;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>($r64);

     label06:
        $r63 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r65 = $r63.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r65.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i11 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i11 == 0 goto label35;

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState RUNNING_QUEUE>;

        $i10 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i10 != 3 goto label36;

        $r61 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r62 = r1.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.BackupManagerService: void access$700(com.android.server.BackupManagerService,java.lang.String)>($r61, $r62);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r70 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z3 = virtualinvoke $r70.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 == 0 goto label04;

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        goto label04;

     label07:
        $r44 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r46 = $r44.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        $r43 = new android.os.WorkSource;

        $r42 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r47 = $r42.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r47.<android.content.pm.ApplicationInfo: int uid>;

        specialinvoke $r43.<android.os.WorkSource: void <init>(int)>($i4);

        virtualinvoke $r46.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>($r43);

        $r49 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r45 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r50 = $r45.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r9 = virtualinvoke $r49.<com.android.server.BackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>($r50, 0);

        r10 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        r11 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("agent bound; a? = ");

     label08:
        if r9 == null goto label13;

        z0 = 1;

     label09:
        $r52 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r10.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r53);

     label10:
        if r9 == null goto label14;

     label11:
        $r56 = r1.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        $r55 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $i8 = virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: int invokeAgentForBackup(java.lang.String,android.app.IBackupAgent,com.android.internal.backup.IBackupTransport)>($r56, r9, $r55);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = $i8;

     label12:
        $r54 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r51 = $r54.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r51.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i5 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i5 == 0 goto label38;

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState RUNNING_QUEUE>;

        $i6 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i6 != 3 goto label39;

        $r59 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r58 = r1.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.BackupManagerService: void access$700(com.android.server.BackupManagerService,java.lang.String)>($r59, $r58);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r60 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z2 = virtualinvoke $r60.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 == 0 goto label04;

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        goto label04;

     label13:
        z0 = 0;

        goto label09;

     label14:
        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 3;

     label15:
        goto label12;

     label16:
        $r96 := @caughtexception;

        r8 = $r96;

     label17:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("PerformBackupTask", "error in bind/backup", r8);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 3;

        $r92 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r92.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("agent SE");

     label18:
        goto label12;

     label19:
        $r90 := @caughtexception;

     label20:
        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("PerformBackupTask", "Package does not exist; skipping");

        $r89 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r89.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("no such package");

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 4;

     label21:
        $r88 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r87 = $r88.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r87.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i20 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i20 == 0 goto label28;

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState RUNNING_QUEUE>;

        $i23 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i23 != 3 goto label30;

        $r93 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r94 = r1.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.BackupManagerService: void access$700(com.android.server.BackupManagerService,java.lang.String)>($r93, $r94);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r95 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z6 = virtualinvoke $r95.<java.util.ArrayList: boolean isEmpty()>();

        if $z6 == 0 goto label04;

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        goto label04;

     label22:
        $r78 := @caughtexception;

        r2 = $r78;

        $r86 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r85 = $r86.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r85.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(null);

        $i19 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i19 == 0 goto label25;

        r3 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState RUNNING_QUEUE>;

        $i18 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i18 != 3 goto label26;

        $r82 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r83 = r1.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.BackupManagerService: void access$700(com.android.server.BackupManagerService,java.lang.String)>($r82, $r83);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        $r91 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z5 = virtualinvoke $r91.<java.util.ArrayList: boolean isEmpty()>();

        if $z5 == 0 goto label23;

        r3 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

     label23:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>(r3);

     label24:
        throw r2;

     label25:
        $r84 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r84.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("expecting completion/timeout callback");

        goto label24;

     label26:
        $i17 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i17 != 4 goto label27;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label23;

     label27:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r3 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        goto label23;

     label28:
        r5 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        r6 = "expecting completion/timeout callback";

     label29:
        virtualinvoke r5.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>(r6);

        return;

     label30:
        $i22 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i22 != 4 goto label31;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label04;

     label31:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        goto label04;

     label32:
        r5 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        r6 = "expecting completion/timeout callback";

        goto label29;

     label33:
        $i16 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i16 != 4 goto label34;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label04;

     label34:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        goto label04;

     label35:
        r5 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        r6 = "expecting completion/timeout callback";

        goto label29;

     label36:
        $i9 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i9 != 4 goto label37;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label04;

     label37:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        goto label04;

     label38:
        r5 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        r6 = "expecting completion/timeout callback";

        goto label29;

     label39:
        $i7 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i7 != 4 goto label40;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

        goto label04;

     label40:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r7 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

        goto label04;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label19;
        catch java.lang.Throwable from label02 to label03 with label22;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label19;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.SecurityException from label07 to label08 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label19;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.lang.SecurityException from label09 to label10 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label19;
        catch java.lang.Throwable from label09 to label10 with label22;
        catch java.lang.SecurityException from label11 to label12 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label19;
        catch java.lang.Throwable from label11 to label12 with label22;
        catch java.lang.SecurityException from label14 to label15 with label16;
        catch android.content.pm.PackageManager$NameNotFoundException from label14 to label15 with label19;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch android.content.pm.PackageManager$NameNotFoundException from label17 to label18 with label19;
        catch java.lang.Throwable from label17 to label18 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
    }

    public void operationComplete()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        android.os.ParcelFileDescriptor r1;
        java.lang.Throwable r2, $r45;
        java.lang.Exception r4, $r47;
        com.android.server.BackupManagerService$BackupState r6;
        int i0, i1, $i4, $i6, $i8, $i9, $i10, $i11, $i12;
        java.lang.Object[] r7;
        com.android.server.BackupManagerService $r8, $r9, $r12, $r24, $r26, $r31, $r33, $r40;
        com.android.server.BackupManagerService$BackupHandler $r10;
        long $l2;
        java.io.File $r11, $r16, $r17, $r20, $r35;
        android.content.pm.PackageInfo $r13, $r18, $r21, $r39, $r43, $r48;
        java.lang.String $r14, $r19, $r25, $r28, $r36, $r49, $r50, $r52;
        java.util.ArrayList $r15;
        boolean $z0;
        java.lang.Integer $r22;
        java.lang.StringBuilder $r23, $r27, $r29, $r32, $r34, $r37, $r41, $r42, $r51;
        com.android.internal.backup.IBackupTransport $r30, $r38;
        java.io.IOException $r44, $r46;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        $r8 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r10 = $r8.<com.android.server.BackupManagerService: com.android.server.BackupManagerService$BackupHandler mBackupHandler>;

        virtualinvoke $r10.<com.android.server.BackupManagerService$BackupHandler: void removeMessages(int)>(7);

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void clearAgentState()>();

        $r9 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r9.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("operation complete");

        r1 = null;

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 0;

     label01:
        $r11 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        $l2 = virtualinvoke $r11.<java.io.File: long length()>();

        i0 = (int) $l2;

     label02:
        r1 = null;

        if i0 <= 0 goto label12;

     label03:
        i1 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

     label04:
        r1 = null;

        if i1 != 0 goto label06;

     label05:
        $r35 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r35, 268435456);

        $r40 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r40.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("sending data to transport");

        $r38 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $r39 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $i12 = interfaceinvoke $r38.<com.android.internal.backup.IBackupTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>($r39, r1);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = $i12;

     label06:
        $r24 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data delivered: ");

        $i8 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r28);

        $i10 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i10 != 0 goto label07;

        $r31 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r31.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("finishing op on transport");

        $r30 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $i9 = interfaceinvoke $r30.<com.android.internal.backup.IBackupTransport: int finishBackup()>();

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = $i9;

        $r33 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finished: ");

        $i11 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>($r36);

     label07:
        $i4 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i4 != 0 goto label20;

        $r16 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mBackupDataName>;

        virtualinvoke $r16.<java.io.File: boolean delete()>();

        $r20 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mNewStateName>;

        $r17 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.io.File mSavedStateName>;

        virtualinvoke $r20.<java.io.File: boolean renameTo(java.io.File)>($r17);

        r7 = newarray (java.lang.Object)[2];

        $r18 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r19 = $r18.<android.content.pm.PackageInfo: java.lang.String packageName>;

        r7[0] = $r19;

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r7[1] = $r22;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.Object[])>(2824, r7);

        $r26 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r21 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r25 = $r21.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke $r26.<com.android.server.BackupManagerService: void logBackupComplete(java.lang.String)>($r25);

     label08:
        if r1 == null goto label10;

     label09:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label10:
        $i6 = r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus>;

        if $i6 == 0 goto label25;

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void revertAndEndBackup()>();

        r6 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

     label11:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void executeNextState(com.android.server.BackupManagerService$BackupState)>(r6);

        return;

     label12:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("PerformBackupTask", "no backup data written; not calling transport");

        $r12 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r12.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("no data to send");

     label13:
        r1 = null;

        goto label07;

     label14:
        $r47 := @caughtexception;

        r4 = $r47;

     label15:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transport error backing up ");

        $r43 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r50 = $r43.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r51 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PerformBackupTask", $r52, r4);

        $r48 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r49 = $r48.<android.content.pm.PackageInfo: java.lang.String packageName>;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2822, $r49);

        r0.<com.android.server.BackupManagerService$PerformBackupTask: int mStatus> = 1;

     label16:
        if r1 == null goto label10;

     label17:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label18:
        goto label10;

     label19:
        $r46 := @caughtexception;

        goto label10;

     label20:
        $r13 = r0.<com.android.server.BackupManagerService$PerformBackupTask: android.content.pm.PackageInfo mCurrentPackage>;

        $r14 = $r13.<android.content.pm.PackageInfo: java.lang.String packageName>;

        staticinvoke <android.util.EventLog: int writeEvent(int,java.lang.String)>(2822, $r14);

     label21:
        goto label08;

     label22:
        $r45 := @caughtexception;

        r2 = $r45;

        if r1 == null goto label24;

     label23:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label24:
        throw r2;

     label25:
        $r15 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mQueue>;

        $z0 = virtualinvoke $r15.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label27;

        r6 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState FINAL>;

     label26:
        goto label11;

     label27:
        r6 = <com.android.server.BackupManagerService$BackupState: com.android.server.BackupManagerService$BackupState RUNNING_QUEUE>;

        goto label26;

     label28:
        $r44 := @caughtexception;

        goto label24;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Exception from label05 to label06 with label14;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Throwable from label06 to label07 with label22;
        catch java.lang.Exception from label07 to label08 with label14;
        catch java.lang.Throwable from label07 to label08 with label22;
        catch java.io.IOException from label09 to label10 with label19;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Exception from label20 to label21 with label14;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.io.IOException from label23 to label24 with label28;
    }

    void restartBackupAlarm()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        java.lang.Object r1;
        java.lang.Throwable r3, $r8;
        com.android.server.BackupManagerService $r4, $r5, $r7;
        com.android.internal.backup.IBackupTransport $r6;
        long $l0;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        $r4 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r4.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("setting backup trigger");

        $r5 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        r1 = $r5.<com.android.server.BackupManagerService: java.lang.Object mQueueLock>;

        entermonitor r1;

     label1:
        $r7 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r6 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.internal.backup.IBackupTransport mTransport>;

        $l0 = interfaceinvoke $r6.<com.android.internal.backup.IBackupTransport: long requestBackupTime()>();

        staticinvoke <com.android.server.BackupManagerService: void access$000(com.android.server.BackupManagerService,long)>($r7, $l0);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

     label5:
        exitmonitor r1;

     label6:
        throw r3;

     label7:
        $r9 := @caughtexception;

        goto label2;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void revertAndEndBackup()
    {
        com.android.server.BackupManagerService$PerformBackupTask r0;
        java.util.Iterator r1;
        com.android.server.BackupManagerService$BackupRequest r2;
        com.android.server.BackupManagerService $r3, $r7;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.BackupManagerService$PerformBackupTask;

        $r3 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        virtualinvoke $r3.<com.android.server.BackupManagerService: void addBackupTrace(java.lang.String)>("transport error; reverting");

        $r4 = r0.<com.android.server.BackupManagerService$PerformBackupTask: java.util.ArrayList mOriginalQueue>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.BackupManagerService$BackupRequest) $r5;

        $r7 = r0.<com.android.server.BackupManagerService$PerformBackupTask: com.android.server.BackupManagerService this$0>;

        $r6 = r2.<com.android.server.BackupManagerService$BackupRequest: java.lang.String packageName>;

        staticinvoke <com.android.server.BackupManagerService: void access$700(com.android.server.BackupManagerService,java.lang.String)>($r7, $r6);

        goto label1;

     label2:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformBackupTask: void restartBackupAlarm()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.BackupManagerService$PerformBackupTask: java.lang.String TAG> = "PerformBackupTask";

        return;
    }
}
