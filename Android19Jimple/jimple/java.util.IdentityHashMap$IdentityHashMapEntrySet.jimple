class java.util.IdentityHashMap$IdentityHashMapEntrySet extends java.util.AbstractSet
{
    private final java.util.IdentityHashMap associatedMap;

    public void <init>(java.util.IdentityHashMap)
    {
        java.util.IdentityHashMap$IdentityHashMapEntrySet r0;
        java.util.IdentityHashMap r1;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapEntrySet;

        r1 := @parameter0: java.util.IdentityHashMap;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<java.util.IdentityHashMap$IdentityHashMapEntrySet: java.util.IdentityHashMap associatedMap> = r1;

        return;
    }

    public void clear()
    {
        java.util.IdentityHashMap$IdentityHashMapEntrySet r0;
        java.util.IdentityHashMap $r1;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapEntrySet;

        $r1 = r0.<java.util.IdentityHashMap$IdentityHashMapEntrySet: java.util.IdentityHashMap associatedMap>;

        virtualinvoke $r1.<java.util.IdentityHashMap: void clear()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.IdentityHashMap$IdentityHashMapEntrySet r0;
        java.lang.Object r1, $r5;
        java.util.IdentityHashMap$IdentityHashMapEntry r2;
        boolean $z0, $z1;
        java.util.Map$Entry $r3;
        java.util.IdentityHashMap $r4;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapEntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.Map$Entry;

        if $z0 == 0 goto label2;

        $r4 = r0.<java.util.IdentityHashMap$IdentityHashMapEntrySet: java.util.IdentityHashMap associatedMap>;

        $r3 = (java.util.Map$Entry) r1;

        $r5 = interfaceinvoke $r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r2 = staticinvoke <java.util.IdentityHashMap: java.util.IdentityHashMap$IdentityHashMapEntry access$100(java.util.IdentityHashMap,java.lang.Object)>($r4, $r5);

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<java.util.IdentityHashMap$IdentityHashMapEntry: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        return 0;
    }

    java.util.IdentityHashMap hashMap()
    {
        java.util.IdentityHashMap$IdentityHashMapEntrySet r0;
        java.util.IdentityHashMap $r1;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapEntrySet;

        $r1 = r0.<java.util.IdentityHashMap$IdentityHashMapEntrySet: java.util.IdentityHashMap associatedMap>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        java.util.IdentityHashMap$IdentityHashMapEntrySet r0;
        java.util.IdentityHashMap$IdentityHashMapIterator $r1;
        java.util.IdentityHashMap$IdentityHashMapEntrySet$1 $r2;
        java.util.IdentityHashMap $r3;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapEntrySet;

        $r1 = new java.util.IdentityHashMap$IdentityHashMapIterator;

        $r2 = new java.util.IdentityHashMap$IdentityHashMapEntrySet$1;

        specialinvoke $r2.<java.util.IdentityHashMap$IdentityHashMapEntrySet$1: void <init>(java.util.IdentityHashMap$IdentityHashMapEntrySet)>(r0);

        $r3 = r0.<java.util.IdentityHashMap$IdentityHashMapEntrySet: java.util.IdentityHashMap associatedMap>;

        specialinvoke $r1.<java.util.IdentityHashMap$IdentityHashMapIterator: void <init>(java.util.MapEntry$Type,java.util.IdentityHashMap)>($r2, $r3);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.IdentityHashMap$IdentityHashMapEntrySet r0;
        java.lang.Object r1, $r4;
        boolean $z0;
        java.util.Map$Entry $r2;
        java.util.IdentityHashMap $r3;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapEntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<java.util.IdentityHashMap$IdentityHashMapEntrySet: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<java.util.IdentityHashMap$IdentityHashMapEntrySet: java.util.IdentityHashMap associatedMap>;

        $r2 = (java.util.Map$Entry) r1;

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r3.<java.util.IdentityHashMap: java.lang.Object remove(java.lang.Object)>($r4);

        return 1;

     label1:
        return 0;
    }

    public int size()
    {
        java.util.IdentityHashMap$IdentityHashMapEntrySet r0;
        java.util.IdentityHashMap $r1;
        int $i0;

        r0 := @this: java.util.IdentityHashMap$IdentityHashMapEntrySet;

        $r1 = r0.<java.util.IdentityHashMap$IdentityHashMapEntrySet: java.util.IdentityHashMap associatedMap>;

        $i0 = $r1.<java.util.IdentityHashMap: int size>;

        return $i0;
    }
}
