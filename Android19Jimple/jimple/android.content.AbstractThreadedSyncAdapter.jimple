public abstract class android.content.AbstractThreadedSyncAdapter extends java.lang.Object
{
    public static final int LOG_SYNC_DETAILS;
    private boolean mAllowParallelSyncs;
    private final boolean mAutoInitialize;
    private final android.content.Context mContext;
    private final android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl mISyncAdapterImpl;
    private final java.util.concurrent.atomic.AtomicInteger mNumSyncStarts;
    private final java.lang.Object mSyncThreadLock;
    private final java.util.HashMap mSyncThreads;

    public void <init>(android.content.Context, boolean)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        android.content.Context r1;
        boolean z0;

        r0 := @this: android.content.AbstractThreadedSyncAdapter;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean,boolean)>(r1, z0, 0);

        return;
    }

    public void <init>(android.content.Context, boolean, boolean)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        android.content.Context r1;
        boolean z0, z1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl $r4;
        java.util.concurrent.atomic.AtomicInteger $r5;

        r0 := @this: android.content.AbstractThreadedSyncAdapter;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.content.AbstractThreadedSyncAdapter: java.util.HashMap mSyncThreads> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<android.content.AbstractThreadedSyncAdapter: java.lang.Object mSyncThreadLock> = $r3;

        r0.<android.content.AbstractThreadedSyncAdapter: android.content.Context mContext> = r1;

        $r4 = new android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl;

        specialinvoke $r4.<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: void <init>(android.content.AbstractThreadedSyncAdapter,android.content.AbstractThreadedSyncAdapter$1)>(r0, null);

        r0.<android.content.AbstractThreadedSyncAdapter: android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl mISyncAdapterImpl> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<android.content.AbstractThreadedSyncAdapter: java.util.concurrent.atomic.AtomicInteger mNumSyncStarts> = $r5;

        r0.<android.content.AbstractThreadedSyncAdapter: boolean mAutoInitialize> = z0;

        r0.<android.content.AbstractThreadedSyncAdapter: boolean mAllowParallelSyncs> = z1;

        return;
    }

    static android.accounts.Account access$100(android.content.AbstractThreadedSyncAdapter, android.accounts.Account)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        android.accounts.Account r1, $r2;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        r1 := @parameter1: android.accounts.Account;

        $r2 = specialinvoke r0.<android.content.AbstractThreadedSyncAdapter: android.accounts.Account toSyncKey(android.accounts.Account)>(r1);

        return $r2;
    }

    static java.lang.Object access$200(android.content.AbstractThreadedSyncAdapter)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter: java.lang.Object mSyncThreadLock>;

        return $r1;
    }

    static java.util.HashMap access$300(android.content.AbstractThreadedSyncAdapter)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        java.util.HashMap $r1;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter: java.util.HashMap mSyncThreads>;

        return $r1;
    }

    static boolean access$400(android.content.AbstractThreadedSyncAdapter)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        boolean $z0;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        $z0 = r0.<android.content.AbstractThreadedSyncAdapter: boolean mAutoInitialize>;

        return $z0;
    }

    static java.util.concurrent.atomic.AtomicInteger access$500(android.content.AbstractThreadedSyncAdapter)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter: java.util.concurrent.atomic.AtomicInteger mNumSyncStarts>;

        return $r1;
    }

    static boolean access$800(android.content.AbstractThreadedSyncAdapter)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        boolean $z0;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        $z0 = r0.<android.content.AbstractThreadedSyncAdapter: boolean mAllowParallelSyncs>;

        return $z0;
    }

    static android.content.Context access$900(android.content.AbstractThreadedSyncAdapter)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        android.content.Context $r1;

        r0 := @parameter0: android.content.AbstractThreadedSyncAdapter;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter: android.content.Context mContext>;

        return $r1;
    }

    private android.accounts.Account toSyncKey(android.accounts.Account)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        android.accounts.Account r1;
        boolean $z0;

        r0 := @this: android.content.AbstractThreadedSyncAdapter;

        r1 := @parameter0: android.accounts.Account;

        $z0 = r0.<android.content.AbstractThreadedSyncAdapter: boolean mAllowParallelSyncs>;

        if $z0 == 0 goto label1;

        return r1;

     label1:
        return null;
    }

    public android.content.Context getContext()
    {
        android.content.AbstractThreadedSyncAdapter r0;
        android.content.Context $r1;

        r0 := @this: android.content.AbstractThreadedSyncAdapter;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter: android.content.Context mContext>;

        return $r1;
    }

    public final android.os.IBinder getSyncAdapterBinder()
    {
        android.content.AbstractThreadedSyncAdapter r0;
        android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl $r1;
        android.os.IBinder $r2;

        r0 := @this: android.content.AbstractThreadedSyncAdapter;

        $r1 = r0.<android.content.AbstractThreadedSyncAdapter: android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl mISyncAdapterImpl>;

        $r2 = virtualinvoke $r1.<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: android.os.IBinder asBinder()>();

        return $r2;
    }

    public abstract void onPerformSync(android.accounts.Account, android.os.Bundle, java.lang.String, android.content.ContentProviderClient, android.content.SyncResult);

    public void onSyncCanceled()
    {
        android.content.AbstractThreadedSyncAdapter r0;
        java.lang.Object r1, $r5;
        java.lang.Throwable r2, $r6;
        android.content.AbstractThreadedSyncAdapter$SyncThread r3;
        java.util.HashMap $r4;

        r0 := @this: android.content.AbstractThreadedSyncAdapter;

        r1 = r0.<android.content.AbstractThreadedSyncAdapter: java.lang.Object mSyncThreadLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.content.AbstractThreadedSyncAdapter: java.util.HashMap mSyncThreads>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(null);

        r3 = (android.content.AbstractThreadedSyncAdapter$SyncThread) $r5;

        exitmonitor r1;

     label2:
        if r3 == null goto label3;

        virtualinvoke r3.<android.content.AbstractThreadedSyncAdapter$SyncThread: void interrupt()>();

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onSyncCanceled(java.lang.Thread)
    {
        android.content.AbstractThreadedSyncAdapter r0;
        java.lang.Thread r1;

        r0 := @this: android.content.AbstractThreadedSyncAdapter;

        r1 := @parameter0: java.lang.Thread;

        virtualinvoke r1.<java.lang.Thread: void interrupt()>();

        return;
    }

    public static void <clinit>()
    {
        <android.content.AbstractThreadedSyncAdapter: int LOG_SYNC_DETAILS> = 2743;

        return;
    }
}
