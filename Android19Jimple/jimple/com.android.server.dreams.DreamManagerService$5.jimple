class com.android.server.dreams.DreamManagerService$5 extends java.lang.Object implements com.android.server.dreams.DreamController$Listener
{
    final com.android.server.dreams.DreamManagerService this$0;

    void <init>(com.android.server.dreams.DreamManagerService)
    {
        com.android.server.dreams.DreamManagerService$5 r0;
        com.android.server.dreams.DreamManagerService r1;

        r0 := @this: com.android.server.dreams.DreamManagerService$5;

        r1 := @parameter0: com.android.server.dreams.DreamManagerService;

        r0.<com.android.server.dreams.DreamManagerService$5: com.android.server.dreams.DreamManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onDreamStopped(android.os.Binder)
    {
        com.android.server.dreams.DreamManagerService$5 r0;
        android.os.Binder r1, $r6;
        java.lang.Object r2;
        java.lang.Throwable r3, $r8;
        com.android.server.dreams.DreamManagerService $r4, $r5, $r7;

        r0 := @this: com.android.server.dreams.DreamManagerService$5;

        r1 := @parameter0: android.os.Binder;

        $r4 = r0.<com.android.server.dreams.DreamManagerService$5: com.android.server.dreams.DreamManagerService this$0>;

        r2 = staticinvoke <com.android.server.dreams.DreamManagerService: java.lang.Object access$000(com.android.server.dreams.DreamManagerService)>($r4);

        entermonitor r2;

     label1:
        $r5 = r0.<com.android.server.dreams.DreamManagerService$5: com.android.server.dreams.DreamManagerService this$0>;

        $r6 = staticinvoke <com.android.server.dreams.DreamManagerService: android.os.Binder access$300(com.android.server.dreams.DreamManagerService)>($r5);

        if $r6 != r1 goto label2;

        $r7 = r0.<com.android.server.dreams.DreamManagerService$5: com.android.server.dreams.DreamManagerService this$0>;

        staticinvoke <com.android.server.dreams.DreamManagerService: void access$400(com.android.server.dreams.DreamManagerService)>($r7);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
