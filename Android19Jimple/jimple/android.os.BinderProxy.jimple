final class android.os.BinderProxy extends java.lang.Object implements android.os.IBinder
{
    private int mObject;
    private int mOrgue;
    private final java.lang.ref.WeakReference mSelf;

    void <init>()
    {
        android.os.BinderProxy r0;
        java.lang.ref.WeakReference $r1;

        r0 := @this: android.os.BinderProxy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ref.WeakReference;

        specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        r0.<android.os.BinderProxy: java.lang.ref.WeakReference mSelf> = $r1;

        return;
    }

    private final native void destroy();

    private static final void sendDeathNotice(android.os.IBinder$DeathRecipient)
    {
        android.os.IBinder$DeathRecipient r0;
        java.lang.RuntimeException r1, $r2;

        r0 := @parameter0: android.os.IBinder$DeathRecipient;

     label1:
        interfaceinvoke r0.<android.os.IBinder$DeathRecipient: void binderDied()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BinderNative", "Uncaught exception from death notification", r1);

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void dump(java.io.FileDescriptor, java.lang.String[]) throws android.os.RemoteException
    {
        android.os.BinderProxy r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r6;

        r0 := @this: android.os.BinderProxy;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r3.<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

     label1:
        virtualinvoke r0.<android.os.BinderProxy: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1598311760, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void dumpAsync(java.io.FileDescriptor, java.lang.String[]) throws android.os.RemoteException
    {
        android.os.BinderProxy r0;
        java.io.FileDescriptor r1;
        java.lang.String[] r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r6;

        r0 := @this: android.os.BinderProxy;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r3.<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

     label1:
        virtualinvoke r0.<android.os.BinderProxy: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1598311760, r3, r4, 1);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.BinderProxy r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.os.BinderProxy;

     label1:
        specialinvoke r0.<android.os.BinderProxy: void destroy()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public native java.lang.String getInterfaceDescriptor() throws android.os.RemoteException;

    public native boolean isBinderAlive();

    public native void linkToDeath(android.os.IBinder$DeathRecipient, int) throws android.os.RemoteException;

    public native boolean pingBinder();

    public android.os.IInterface queryLocalInterface(java.lang.String)
    {
        android.os.BinderProxy r0;
        java.lang.String r1;

        r0 := @this: android.os.BinderProxy;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public native boolean transact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException;

    public native boolean unlinkToDeath(android.os.IBinder$DeathRecipient, int);
}
