public class android.os.Debug$InstructionCount extends java.lang.Object
{
    private static final int NUM_INSTR;
    private int[] mCounts;

    static void <clinit>()
    {
        int $i0, $i1;

        $i0 = <dalvik.bytecode.OpcodeInfo: int MAXIMUM_PACKED_VALUE>;

        $i1 = 1 + $i0;

        <android.os.Debug$InstructionCount: int NUM_INSTR> = $i1;

        return;
    }

    public void <init>()
    {
        android.os.Debug$InstructionCount r0;
        int $i0;
        int[] $r1;

        r0 := @this: android.os.Debug$InstructionCount;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Debug$InstructionCount: int NUM_INSTR>;

        $r1 = newarray (int)[$i0];

        r0.<android.os.Debug$InstructionCount: int[] mCounts> = $r1;

        return;
    }

    public boolean collect()
    {
        android.os.Debug$InstructionCount r0;
        int[] $r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.os.Debug$InstructionCount;

     label1:
        staticinvoke <dalvik.system.VMDebug: void stopInstructionCounting()>();

        $r2 = r0.<android.os.Debug$InstructionCount: int[] mCounts>;

        staticinvoke <dalvik.system.VMDebug: void getInstructionCount(int[])>($r2);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }

    public int globalMethodInvocations()
    {
        android.os.Debug$InstructionCount r0;
        int i0, i1, $i2, $i3;
        boolean $z0;
        int[] $r1;

        r0 := @this: android.os.Debug$InstructionCount;

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = <android.os.Debug$InstructionCount: int NUM_INSTR>;

        if i1 >= $i2 goto label3;

        $z0 = staticinvoke <dalvik.bytecode.OpcodeInfo: boolean isInvoke(int)>(i1);

        if $z0 == 0 goto label2;

        $r1 = r0.<android.os.Debug$InstructionCount: int[] mCounts>;

        $i3 = $r1[i1];

        i0 = i0 + $i3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return i0;
    }

    public int globalTotal()
    {
        android.os.Debug$InstructionCount r0;
        int i0, i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$InstructionCount;

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = <android.os.Debug$InstructionCount: int NUM_INSTR>;

        if i1 >= $i2 goto label2;

        $r1 = r0.<android.os.Debug$InstructionCount: int[] mCounts>;

        $i3 = $r1[i1];

        i0 = i0 + $i3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return i0;
    }

    public boolean resetAndStart()
    {
        android.os.Debug$InstructionCount r0;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.os.Debug$InstructionCount;

     label1:
        staticinvoke <dalvik.system.VMDebug: void startInstructionCounting()>();

        staticinvoke <dalvik.system.VMDebug: void resetInstructionCount()>();

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
    }
}
