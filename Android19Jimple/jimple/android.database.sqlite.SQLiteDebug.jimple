public final class android.database.sqlite.SQLiteDebug extends java.lang.Object
{
    public static final boolean DEBUG_LOG_SLOW_QUERIES;
    public static final boolean DEBUG_SQL_LOG;
    public static final boolean DEBUG_SQL_STATEMENTS;
    public static final boolean DEBUG_SQL_TIME;

    static void <clinit>()
    {
        boolean $z0, $z1, $z2, $z3;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SQLiteLog", 2);

        <android.database.sqlite.SQLiteDebug: boolean DEBUG_SQL_LOG> = $z0;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SQLiteStatements", 2);

        <android.database.sqlite.SQLiteDebug: boolean DEBUG_SQL_STATEMENTS> = $z1;

        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SQLiteTime", 2);

        <android.database.sqlite.SQLiteDebug: boolean DEBUG_SQL_TIME> = $z2;

        $z3 = <android.os.Build: boolean IS_DEBUGGABLE>;

        <android.database.sqlite.SQLiteDebug: boolean DEBUG_LOG_SLOW_QUERIES> = $z3;

        return;
    }

    private void <init>()
    {
        android.database.sqlite.SQLiteDebug r0;

        r0 := @this: android.database.sqlite.SQLiteDebug;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void dump(android.util.Printer, java.lang.String[])
    {
        android.util.Printer r0;
        java.lang.String[] r1;
        boolean z0, $z1;
        int i0, i1;
        java.lang.String $r2;

        r0 := @parameter0: android.util.Printer;

        r1 := @parameter1: java.lang.String[];

        z0 = 0;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z1 == 0 goto label2;

        z0 = 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        staticinvoke <android.database.sqlite.SQLiteDatabase: void dumpAll(android.util.Printer,boolean)>(r0, z0);

        return;
    }

    public static android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()
    {
        android.database.sqlite.SQLiteDebug$PagerStats r0, $r1;
        java.util.ArrayList $r2;

        $r1 = new android.database.sqlite.SQLiteDebug$PagerStats;

        specialinvoke $r1.<android.database.sqlite.SQLiteDebug$PagerStats: void <init>()>();

        r0 = $r1;

        staticinvoke <android.database.sqlite.SQLiteDebug: void nativeGetPagerStats(android.database.sqlite.SQLiteDebug$PagerStats)>(r0);

        $r2 = staticinvoke <android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()>();

        r0.<android.database.sqlite.SQLiteDebug$PagerStats: java.util.ArrayList dbStats> = $r2;

        return r0;
    }

    private static native void nativeGetPagerStats(android.database.sqlite.SQLiteDebug$PagerStats);

    public static final boolean shouldLogSlowQuery(long)
    {
        long l0, $l2;
        int i1;
        byte $b3;

        l0 := @parameter0: long;

        i1 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("db.log.slow_query_threshold", -1);

        if i1 < 0 goto label1;

        $l2 = (long) i1;

        $b3 = l0 cmp $l2;

        if $b3 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
