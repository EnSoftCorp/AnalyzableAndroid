public final class com.android.internal.app.ProcessStats$ProcessState extends com.android.internal.app.ProcessStats$DurationsTable
{
    boolean mActive;
    long mAvgCachedKillPss;
    public final com.android.internal.app.ProcessStats$ProcessState mCommonProcess;
    int mCurState;
    boolean mDead;
    int mLastPssState;
    long mLastPssTime;
    long mMaxCachedKillPss;
    long mMinCachedKillPss;
    boolean mMultiPackage;
    int mNumActiveServices;
    int mNumCachedKill;
    int mNumExcessiveCpu;
    int mNumExcessiveWake;
    int mNumStartedServices;
    public final java.lang.String mPackage;
    int[] mPssTable;
    int mPssTableSize;
    long mStartTime;
    public long mTmpTotalTime;
    public final int mUid;

    public void <init>(com.android.internal.app.ProcessStats$ProcessState, java.lang.String, int, java.lang.String, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, r1;
        java.lang.String r2, r3;
        int i0, $i2;
        long l1;
        com.android.internal.app.ProcessStats $r4;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: com.android.internal.app.ProcessStats$ProcessState;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        l1 := @parameter4: long;

        $r4 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        specialinvoke r0.<com.android.internal.app.ProcessStats$DurationsTable: void <init>(com.android.internal.app.ProcessStats,java.lang.String)>($r4, r3);

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState> = -1;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mLastPssState> = -1;

        r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess> = r1;

        r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage> = r2;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mUid> = i0;

        $i2 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState> = $i2;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime> = l1;

        return;
    }

    public void <init>(com.android.internal.app.ProcessStats, java.lang.String, int, java.lang.String)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        com.android.internal.app.ProcessStats r1;
        java.lang.String r2, r3;
        int i0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: com.android.internal.app.ProcessStats;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.internal.app.ProcessStats$DurationsTable: void <init>(com.android.internal.app.ProcessStats,java.lang.String)>(r1, r3);

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState> = -1;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mLastPssState> = -1;

        r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess> = r0;

        r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage> = r2;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mUid> = i0;

        return;
    }

    private void addCachedKill(int, long, long, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, $i4, $i10, $i11, $i12, $i13, $i15;
        long l1, l2, l3, $l5, $l7, $l9, $l14;
        byte $b6, $b8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        $i4 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i4 > 0 goto label1;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill> = i0;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss> = l1;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss> = l2;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss> = l3;

        return;

     label1:
        $l5 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        $b6 = l1 cmp $l5;

        if $b6 >= 0 goto label2;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss> = l1;

     label2:
        $l7 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        $b8 = l3 cmp $l7;

        if $b8 <= 0 goto label3;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss> = l3;

     label3:
        $l9 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        $d2 = (double) $l9;

        $i10 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        $d0 = (double) $i10;

        $d3 = $d2 * $d0;

        $d1 = (double) l2;

        $d6 = $d3 + $d1;

        $i11 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        $i12 = i0 + $i11;

        $d4 = (double) $i12;

        $d5 = $d6 / $d4;

        $l14 = (long) $d5;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss> = $l14;

        $i13 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        $i15 = i0 + $i13;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill> = $i15;

        return;
    }

    private void ensureNotDead()
    {
        com.android.internal.app.ProcessStats$ProcessState r0, $r11;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r14;
        java.lang.String $r3, $r6, $r12, $r13;
        int $i0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        $z0 = r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mDead>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProcessState dead: name=");

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r6 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i0 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" common.name=");

        $r11 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $r12 = $r11.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtfStack(java.lang.String,java.lang.String)>("ProcessStats", $r13);

        return;
    }

    private com.android.internal.app.ProcessStats$ProcessState pullFixedProc(android.util.ArrayMap, int)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, r2, $r35, $r51;
        android.util.ArrayMap r1, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.internal.app.ProcessStats$PackageState r3;
        java.lang.Object $r4, $r7, $r9, $r13, $r30;
        boolean $z0, $z1;
        com.android.internal.app.ProcessStats $r5, $r54;
        com.android.internal.app.ProcessMap $r6;
        java.lang.String $r8, $r10, $r16, $r21, $r23, $r27, $r34, $r36, $r39, $r42, $r48, $r50, $r52, $r53;
        java.lang.StringBuilder $r14, $r17, $r18, $r19, $r20, $r22, $r24, $r25, $r28, $r29, $r31, $r32, $r33, $r37, $r38, $r40, $r41, $r43, $r44, $r45, $r46, $r47, $r49;
        java.lang.IllegalStateException $r15, $r26;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: android.util.ArrayMap;

        i0 := @parameter1: int;

        $r4 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r2 = (com.android.internal.app.ProcessStats$ProcessState) $r4;

        $z0 = r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mDead>;

        if $z0 == 0 goto label1;

        $r35 = r2.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r35 == r2 goto label1;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pulling dead proc: name=");

        $r39 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r42 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $r41 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i4 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" common.name=");

        $r51 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $r50 = $r51.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("ProcessStats", $r48);

        $r54 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r52 = r2.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $i5 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r53 = r2.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        r2 = virtualinvoke $r54.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats$ProcessState getProcessStateLocked(java.lang.String,int,java.lang.String)>($r52, $i5, $r53);

     label1:
        $z1 = r2.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z1 == 0 goto label4;

        $r5 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r6 = $r5.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        $r7 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i0);

        $r8 = (java.lang.String) $r7;

        $i1 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r9 = virtualinvoke $r6.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>($r8, $i1);

        r3 = (com.android.internal.app.ProcessStats$PackageState) $r9;

        if r3 != null goto label2;

        $r26 = new java.lang.IllegalStateException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No existing package ");

        $r30 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i0);

        $r27 = (java.lang.String) $r30;

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i3 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for multi-proc ");

        $r36 = r2.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r34);

        throw $r26;

     label2:
        $r11 = r3.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r10 = r2.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r13 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r10);

        r2 = (com.android.internal.app.ProcessStats$ProcessState) $r13;

        if r2 != null goto label3;

        $r15 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Didn\'t create per-package process ");

        $r16 = r2.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in pkg ");

        $r21 = r3.<com.android.internal.app.ProcessStats$PackageState: java.lang.String mPackageName>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i2 = r3.<com.android.internal.app.ProcessStats$PackageState: int mUid>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r23);

        throw $r15;

     label3:
        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>(i0, r2);

     label4:
        return r2;
    }

    void add(com.android.internal.app.ProcessStats$ProcessState)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i13, $i14, $i15, $i16, $i17, $i20;
        long $l10, $l11, $l12, $l18, $l19, $l21, $l22, $l23, $l24, $l25;
        int[] $r2;
        com.android.internal.app.ProcessStats $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: com.android.internal.app.ProcessStats$ProcessState;

        virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void addDurations(com.android.internal.app.ProcessStats$DurationsTable)>(r1);

        i0 = 0;

     label1:
        i1 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if i0 >= i1 goto label2;

        $r2 = r1.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        i2 = $r2[i0];

        $i14 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i15 = i2 >> $i14;

        $i16 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        $i17 = $i15 & $i16;

        $r3 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $l18 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, 0);

        $i20 = (int) $l18;

        $r4 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $l19 = virtualinvoke $r4.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, 1);

        $r5 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $l21 = virtualinvoke $r5.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, 2);

        $r6 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $l22 = virtualinvoke $r6.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, 3);

        $r7 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $l23 = virtualinvoke $r7.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, 4);

        $r9 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $l25 = virtualinvoke $r9.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, 5);

        $r8 = r1.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $l24 = virtualinvoke $r8.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, 6);

        virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void addPss(int,int,long,long,long,long,long,long)>($i17, $i20, $l19, $l21, $l22, $l23, $l25, $l24);

        i0 = i0 + 1;

        goto label1;

     label2:
        $i4 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        $i3 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        $i5 = $i4 + $i3;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake> = $i5;

        $i7 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        $i6 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        $i8 = $i7 + $i6;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu> = $i8;

        $i9 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i9 <= 0 goto label3;

        $i13 = r1.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        $l12 = r1.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        $l11 = r1.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        $l10 = r1.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void addCachedKill(int,long,long,long)>($i13, $l12, $l11, $l10);

     label3:
        return;
    }

    void addPss(int, int, long, long, long, long, long, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, i1, i8, i9, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i27, $i28, $i31, $i35, $i38, $i40, $i43, $i48, $i49, $i50, $i51, $i52, $i53, $i56, $i57, $i58, $i59, $i60, $i61, $i63;
        long l2, l3, l4, l5, l6, l7, l10, $l23, $l26, $l29, $l30, $l33, $l34, $l36, $l39, $l41, $l44, $l45, $l46, $l47, $l55, $l62;
        long[] r1;
        int[] $r2, $r4, $r9, $r13;
        com.android.internal.app.ProcessStats $r3, $r5, $r6, $r7, $r8, $r10;
        java.util.ArrayList $r11;
        java.lang.Object $r12;
        byte $b22, $b32, $b37, $b42, $b54;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        l6 := @parameter6: long;

        l7 := @parameter7: long;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i12 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        i8 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r2, $i12, i0);

        if i8 < 0 goto label3;

        $r13 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        i9 = $r13[i8];

     label1:
        $r8 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r11 = $r8.<com.android.internal.app.ProcessStats: java.util.ArrayList mLongs>;

        $i18 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_SHIFT>;

        $i16 = i9 >> $i18;

        $i19 = <com.android.internal.app.ProcessStats: int OFFSET_ARRAY_MASK>;

        $i17 = $i16 & $i19;

        $r12 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>($i17);

        r1 = (long[]) $r12;

        $i20 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_SHIFT>;

        $i24 = i9 >> $i20;

        $i21 = <com.android.internal.app.ProcessStats: int OFFSET_INDEX_MASK>;

        i11 = $i24 & $i21;

        $i25 = i11 + 0;

        l10 = r1[$i25];

        $b22 = l10 cmp 0L;

        if $b22 != 0 goto label4;

        $i63 = i11 + 0;

        $l62 = (long) i1;

        r1[$i63] = $l62;

        $i60 = i11 + 1;

        r1[$i60] = l2;

        $i61 = i11 + 2;

        r1[$i61] = l3;

        $i58 = i11 + 3;

        r1[$i58] = l4;

        $i59 = i11 + 4;

        r1[$i59] = l5;

        $i56 = i11 + 5;

        r1[$i56] = l6;

        $i57 = i11 + 6;

        r1[$i57] = l7;

     label2:
        return;

     label3:
        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r4 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $r3.<com.android.internal.app.ProcessStats: int[] mAddLongTable> = $r4;

        $r5 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $i13 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        $r5.<com.android.internal.app.ProcessStats: int mAddLongTableSize> = $i13;

        $r6 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $i14 = i8 ^ -1;

        i9 = virtualinvoke $r6.<com.android.internal.app.ProcessStats: int addLongData(int,int,int)>($i14, i0, 7);

        $r7 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r9 = $r7.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable> = $r9;

        $r10 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $i15 = $r10.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize> = $i15;

        goto label1;

     label4:
        $i28 = i11 + 0;

        $l23 = (long) i1;

        $l29 = l10 + $l23;

        r1[$i28] = $l29;

        $i27 = i11 + 1;

        $l26 = r1[$i27];

        $b32 = $l26 cmp l2;

        if $b32 <= 0 goto label5;

        $i50 = i11 + 1;

        r1[$i50] = l2;

     label5:
        $i40 = i11 + 2;

        $i31 = i11 + 2;

        $l30 = r1[$i31];

        $d4 = (double) $l30;

        $d0 = (double) l10;

        $d6 = $d4 * $d0;

        $d2 = (double) l3;

        $d3 = (double) i1;

        $d1 = $d2 * $d3;

        $d7 = $d6 + $d1;

        $l34 = (long) i1;

        $l33 = l10 + $l34;

        $d5 = (double) $l33;

        $d8 = $d7 / $d5;

        $l39 = (long) $d8;

        r1[$i40] = $l39;

        $i35 = i11 + 3;

        $l36 = r1[$i35];

        $b37 = $l36 cmp l4;

        if $b37 >= 0 goto label6;

        $i51 = i11 + 3;

        r1[$i51] = l4;

     label6:
        $i38 = i11 + 4;

        $l41 = r1[$i38];

        $b42 = $l41 cmp l5;

        if $b42 <= 0 goto label7;

        $i48 = i11 + 4;

        r1[$i48] = l5;

     label7:
        $i53 = i11 + 5;

        $i43 = i11 + 5;

        $l44 = r1[$i43];

        $d10 = (double) $l44;

        $d9 = (double) l10;

        $d16 = $d10 * $d9;

        $d12 = (double) l6;

        $d11 = (double) i1;

        $d17 = $d12 * $d11;

        $d13 = $d16 + $d17;

        $l47 = (long) i1;

        $l46 = l10 + $l47;

        $d14 = (double) $l46;

        $d15 = $d13 / $d14;

        $l45 = (long) $d15;

        r1[$i53] = $l45;

        $i52 = i11 + 6;

        $l55 = r1[$i52];

        $b54 = $l55 cmp l7;

        if $b54 >= 0 goto label2;

        $i49 = i11 + 6;

        r1[$i49] = l7;

        return;
    }

    public void addPss(long, long, boolean, android.util.ArrayMap)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, $r2, $r3, $r4;
        long l0, l1, $l4, $l10, $l12, $l13;
        boolean z0, $z1;
        android.util.ArrayMap r1;
        int i2, $i3, $i5, $i6, $i7, $i8, $i9, $i11;
        byte $b14;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 := @parameter2: boolean;

        r1 := @parameter3: android.util.ArrayMap;

        specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void ensureNotDead()>();

        if z0 != 0 goto label2;

        $i11 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mLastPssState>;

        $i8 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i11 != $i8 goto label2;

        $l10 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l13 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mLastPssTime>;

        $l12 = 30000L + $l13;

        $b14 = $l10 cmp $l12;

        if $b14 >= 0 goto label2;

     label1:
        return;

     label2:
        $i3 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mLastPssState> = $i3;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mLastPssTime> = $l4;

        $i5 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i5 == -1 goto label1;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $i6 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        virtualinvoke $r2.<com.android.internal.app.ProcessStats$ProcessState: void addPss(int,int,long,long,long,long,long,long)>($i6, 1, l0, l0, l0, l1, l1, l1);

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $z1 = $r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z1 == 0 goto label1;

        if r1 == null goto label1;

        $i7 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i2 = -1 + $i7;

     label3:
        if i2 < 0 goto label1;

        $r4 = specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState pullFixedProc(android.util.ArrayMap,int)>(r1, i2);

        $i9 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        virtualinvoke $r4.<com.android.internal.app.ProcessStats$ProcessState: void addPss(int,int,long,long,long,long,long,long)>($i9, 1, l0, l0, l0, l1, l1, l1);

        i2 = i2 + -1;

        goto label3;
    }

    com.android.internal.app.ProcessStats$ProcessState clone(java.lang.String, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, r2, $r3;
        java.lang.String r1, $r4;
        long l0, $l9, $l11, $l12, $l22;
        int i1, i2, i3, i4, i5, $i6, $i7, $i8, $i10, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        int[] $r5, $r6, $r7, $r12, $r13, $r18;
        boolean $z0;
        com.android.internal.app.ProcessStats $r8, $r9, $r10, $r11, $r14, $r15, $r16, $r17;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r3 = new com.android.internal.app.ProcessStats$ProcessState;

        $i6 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r4 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        specialinvoke $r3.<com.android.internal.app.ProcessStats$ProcessState: void <init>(com.android.internal.app.ProcessStats$ProcessState,java.lang.String,int,java.lang.String,long)>(r0, r1, $i6, $r4, l0);

        r2 = $r3;

        virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void copyDurationsTo(com.android.internal.app.ProcessStats$DurationsTable)>(r2);

        $r5 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        if $r5 == null goto label5;

        $r9 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r6 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i15 = lengthof $r6;

        $r7 = newarray (int)[$i15];

        $r9.<com.android.internal.app.ProcessStats: int[] mAddLongTable> = $r7;

        $r8 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r8.<com.android.internal.app.ProcessStats: int mAddLongTableSize> = 0;

        i1 = 0;

     label1:
        $i16 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if i1 >= $i16 goto label4;

        $r13 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        i2 = $r13[i1];

        $i17 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_SHIFT>;

        $i20 = i2 >> $i17;

        $i18 = <com.android.internal.app.ProcessStats: int OFFSET_TYPE_MASK>;

        i3 = $i20 & $i18;

        $r15 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        i4 = virtualinvoke $r15.<com.android.internal.app.ProcessStats: int addLongData(int,int,int)>(i1, i3, 7);

        $r14 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r18 = $r14.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        $i21 = i4 | i3;

        $r18[i1] = $i21;

        i5 = 0;

     label2:
        if i5 >= 7 goto label3;

        $r17 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r16 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $l22 = virtualinvoke $r16.<com.android.internal.app.ProcessStats: long getLong(int,int)>(i2, i5);

        virtualinvoke $r17.<com.android.internal.app.ProcessStats: void setLong(int,int,long)>(i4, i5, $l22);

        i5 = i5 + 1;

        goto label2;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r10 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r12 = $r10.<com.android.internal.app.ProcessStats: int[] mAddLongTable>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable> = $r12;

        $r11 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $i19 = $r11.<com.android.internal.app.ProcessStats: int mAddLongTableSize>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize> = $i19;

     label5:
        $i7 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake> = $i7;

        $i8 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu> = $i8;

        $i10 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill> = $i10;

        $l9 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss> = $l9;

        $l12 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss> = $l12;

        $l11 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss> = $l11;

        $z0 = r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive> = $z0;

        $i13 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices> = $i13;

        $i14 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices> = $i14;

        return r2;
    }

    void commitStateTime(long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        long l0, l1, $l3;
        int $i2, $i5;
        byte $b4;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        l0 := @parameter0: long;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i2 == -1 goto label1;

        $l3 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime>;

        l1 = l0 - $l3;

        $b4 = l1 cmp 0L;

        if $b4 <= 0 goto label1;

        $i5 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void addDuration(int,long)>($i5, l1);

     label1:
        r0.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime> = l0;

        return;
    }

    void decActiveServices(java.lang.String)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, $r2, $r15;
        java.lang.String r1, $r5, $r10, $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r9, $r11, $r12, $r14;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r2 == r0 goto label1;

        $r15 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        virtualinvoke $r15.<com.android.internal.app.ProcessStats$ProcessState: void decActiveServices(java.lang.String)>(r1);

     label1:
        $i0 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices>;

        $i1 = -1 + $i0;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices> = $i1;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices>;

        if $i2 >= 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proc active services underrun: pkg=");

        $r5 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i3 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" proc=");

        $r10 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" service=");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtfStack(java.lang.String,java.lang.String)>("ProcessStats", $r13);

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices> = 0;

     label2:
        return;
    }

    void decStartedServices(int, long, java.lang.String)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, $r2, $r13;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        long l1;
        java.lang.String r1, $r5, $r9, $r11;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r10, $r12;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r2 == r0 goto label1;

        $r13 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        virtualinvoke $r13.<com.android.internal.app.ProcessStats$ProcessState: void decStartedServices(int,long,java.lang.String)>(i0, l1, r1);

     label1:
        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        $i3 = -1 + $i2;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices> = $i3;

        $i4 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        if $i4 != 0 goto label3;

        $i7 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        $i9 = $i7 % 14;

        if $i9 != 7 goto label3;

        virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void setState(int,long)>(-1, l1);

     label2:
        return;

     label3:
        $i5 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        if $i5 >= 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proc started services underrun: pkg=");

        $r5 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i6 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" name=");

        $r9 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int wtfStack(java.lang.String,java.lang.String)>("ProcessStats", $r11);

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices> = 0;

        return;
    }

    long getDuration(int, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, $i3;
        long l1, l2, $l4, $l5;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 = specialinvoke r0.<com.android.internal.app.ProcessStats$DurationsTable: long getDuration(int,long)>(i0, l1);

        $i3 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i3 != i0 goto label1;

        $l4 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime>;

        $l5 = l1 - $l4;

        l2 = l2 + $l5;

     label1:
        return l2;
    }

    long getPssAverage(int)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;
        com.android.internal.app.ProcessStats $r3;
        long $l4;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        i1 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i3 = $r2[i1];

        $l4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>($i3, 2);

        return $l4;

     label1:
        return 0L;
    }

    long getPssMaximum(int)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;
        com.android.internal.app.ProcessStats $r3;
        long $l4;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        i1 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i3 = $r2[i1];

        $l4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>($i3, 3);

        return $l4;

     label1:
        return 0L;
    }

    long getPssMinimum(int)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;
        com.android.internal.app.ProcessStats $r3;
        long $l4;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        i1 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i3 = $r2[i1];

        $l4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>($i3, 1);

        return $l4;

     label1:
        return 0L;
    }

    long getPssSampleCount(int)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;
        com.android.internal.app.ProcessStats $r3;
        long $l4;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        i1 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i3 = $r2[i1];

        $l4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>($i3, 0);

        return $l4;

     label1:
        return 0L;
    }

    long getPssUssAverage(int)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;
        com.android.internal.app.ProcessStats $r3;
        long $l4;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        i1 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i3 = $r2[i1];

        $l4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>($i3, 5);

        return $l4;

     label1:
        return 0L;
    }

    long getPssUssMaximum(int)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;
        com.android.internal.app.ProcessStats $r3;
        long $l4;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        i1 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i3 = $r2[i1];

        $l4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>($i3, 6);

        return $l4;

     label1:
        return 0L;
    }

    long getPssUssMinimum(int)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;
        com.android.internal.app.ProcessStats $r3;
        long $l4;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        i1 = staticinvoke <com.android.internal.app.ProcessStats: int binarySearch(int[],int,int)>($r1, $i2, i0);

        if i1 < 0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i3 = $r2[i1];

        $l4 = virtualinvoke $r3.<com.android.internal.app.ProcessStats: long getLong(int,int)>($i3, 4);

        return $l4;

     label1:
        return 0L;
    }

    void incActiveServices(java.lang.String)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, $r2, $r3;
        java.lang.String r1;
        int $i0, $i1;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r2 == r0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        virtualinvoke $r3.<com.android.internal.app.ProcessStats$ProcessState: void incActiveServices(java.lang.String)>(r1);

     label1:
        $i0 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices>;

        $i1 = 1 + $i0;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices> = $i1;

        return;
    }

    void incStartedServices(int, long, java.lang.String)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, $r2, $r3;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7;
        long l1;
        java.lang.String r1;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r2 == r0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        virtualinvoke $r3.<com.android.internal.app.ProcessStats$ProcessState: void incStartedServices(int,long,java.lang.String)>(i0, l1, r1);

     label1:
        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        $i3 = 1 + $i2;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices> = $i3;

        $i4 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        if $i4 != 1 goto label2;

        $i5 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i5 != -1 goto label2;

        $i6 = i0 * 14;

        $i7 = 7 + $i6;

        virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void setState(int,long)>($i7, l1);

     label2:
        return;
    }

    public boolean isInUse()
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        $z0 = r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive>;

        if $z0 != 0 goto label1;

        $i0 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumActiveServices>;

        if $i0 > 0 goto label1;

        $i1 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        if $i1 > 0 goto label1;

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i2 == -1 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void makeActive()
    {
        com.android.internal.app.ProcessStats$ProcessState r0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void ensureNotDead()>();

        r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive> = 1;

        return;
    }

    void makeDead()
    {
        com.android.internal.app.ProcessStats$ProcessState r0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mDead> = 1;

        return;
    }

    public void makeInactive()
    {
        com.android.internal.app.ProcessStats$ProcessState r0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mActive> = 0;

        return;
    }

    com.android.internal.app.ProcessStats$ProcessState pullFixedProc(java.lang.String)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, r2;
        java.lang.String r1, $r7;
        boolean $z0;
        com.android.internal.app.ProcessStats $r3;
        int $i0;
        com.android.internal.app.ProcessMap $r4;
        java.lang.Object $r5, $r9;
        com.android.internal.app.ProcessStats$PackageState $r6;
        android.util.ArrayMap $r8;
        java.lang.IllegalStateException $r10;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r4 = $r3.<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessMap mPackages>;

        $i0 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r5 = virtualinvoke $r4.<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>(r1, $i0);

        $r6 = (com.android.internal.app.ProcessStats$PackageState) $r5;

        $r8 = $r6.<com.android.internal.app.ProcessStats$PackageState: android.util.ArrayMap mProcesses>;

        $r7 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r9 = virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r7);

        r2 = (com.android.internal.app.ProcessStats$ProcessState) $r9;

        if r2 != null goto label2;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Didn\'t create per-package process");

        throw $r10;

     label1:
        r2 = r0;

     label2:
        return r2;
    }

    boolean readFromParcel(android.os.Parcel, boolean)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        android.os.Parcel r1;
        boolean z0, z1, $z2;
        int[] r2, $r5, $r6, $r7, $r8;
        int i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String $r3;
        com.android.internal.app.ProcessStats $r4;
        long $l5, $l7, $l8;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: android.os.Parcel;

        z0 := @parameter1: boolean;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label4;

        z1 = 1;

     label1:
        if z0 == 0 goto label2;

        r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage> = z1;

     label2:
        $z2 = virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: boolean readDurationsFromParcel(android.os.Parcel)>(r1);

        if $z2 != 0 goto label5;

     label3:
        return 0;

     label4:
        z1 = 0;

        goto label1;

     label5:
        $r4 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats mStats>;

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r5 = staticinvoke <com.android.internal.app.ProcessStats: int[] access$100(com.android.internal.app.ProcessStats,android.os.Parcel,java.lang.String,java.lang.String)>($r4, r1, $r3, "pss");

        r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable> = $r5;

        $r7 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $r6 = <com.android.internal.app.ProcessStats: int[] BAD_TABLE>;

        if $r7 == $r6 goto label3;

        r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        i0 = 0;

        if r2 == null goto label6;

        $r8 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        i0 = lengthof $r8;

     label6:
        r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize> = i0;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill> = $i4;

        $i6 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i6 <= 0 goto label8;

        $l5 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss> = $l5;

        $l8 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss> = $l8;

        $l7 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss> = $l7;

     label7:
        return 1;

     label8:
        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss> = 0L;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss> = 0L;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss> = 0L;

        goto label7;
    }

    public void reportCachedKill(android.util.ArrayMap, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, $r2, $r3, $r4;
        android.util.ArrayMap r1;
        long l0;
        int i1, $i2;
        boolean $z0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: android.util.ArrayMap;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void ensureNotDead()>();

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        specialinvoke $r2.<com.android.internal.app.ProcessStats$ProcessState: void addCachedKill(int,long,long,long)>(1, l0, l0, l0);

        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $z0 = $r3.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $i2 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i1 = -1 + $i2;

     label3:
        if i1 < 0 goto label1;

        $r4 = specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState pullFixedProc(android.util.ArrayMap,int)>(r1, i1);

        specialinvoke $r4.<com.android.internal.app.ProcessStats$ProcessState: void addCachedKill(int,long,long,long)>(1, l0, l0, l0);

        i1 = i1 + -1;

        goto label3;
    }

    public void reportExcessiveCpu(android.util.ArrayMap)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, r2, r3, $r4;
        android.util.ArrayMap r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: android.util.ArrayMap;

        specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void ensureNotDead()>();

        r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $i1 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        $i2 = 1 + $i1;

        r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu> = $i2;

        $r4 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $z0 = $r4.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $i3 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i0 = -1 + $i3;

     label3:
        if i0 < 0 goto label1;

        r3 = specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState pullFixedProc(android.util.ArrayMap,int)>(r1, i0);

        $i4 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        $i5 = 1 + $i4;

        r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu> = $i5;

        i0 = i0 + -1;

        goto label3;
    }

    public void reportExcessiveWake(android.util.ArrayMap)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, r2, r3, $r4;
        android.util.ArrayMap r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: android.util.ArrayMap;

        specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void ensureNotDead()>();

        r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $i1 = r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        $i2 = 1 + $i1;

        r2.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake> = $i2;

        $r4 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $z0 = $r4.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $i3 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i0 = -1 + $i3;

     label3:
        if i0 < 0 goto label1;

        r3 = specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState pullFixedProc(android.util.ArrayMap,int)>(r1, i0);

        $i4 = r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        $i5 = 1 + $i4;

        r3.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake> = $i5;

        i0 = i0 + -1;

        goto label3;
    }

    void resetSafely(long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        long l0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void resetDurationsSafely()>();

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mStartTime> = l0;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mLastPssState> = -1;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mLastPssTime> = 0L;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable> = null;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize> = 0;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake> = 0;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu> = 0;

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill> = 0;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss> = 0L;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss> = 0L;

        r0.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss> = 0L;

        return;
    }

    public void setState(int, int, long, android.util.ArrayMap)
    {
        com.android.internal.app.ProcessStats$ProcessState r0, $r3, $r4, $r5;
        int i0, i1, i3, i4, $i5, $i6, $i7, $i8, $i9;
        long l2;
        android.util.ArrayMap r1;
        int[] $r2;
        boolean $z0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r1 := @parameter3: android.util.ArrayMap;

        if i0 >= 0 goto label4;

        $i8 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumStartedServices>;

        if $i8 <= 0 goto label3;

        $i9 = i1 * 14;

        i3 = 7 + $i9;

     label1:
        $r3 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        virtualinvoke $r3.<com.android.internal.app.ProcessStats$ProcessState: void setState(int,long)>(i3, l2);

        $r4 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        $z0 = $r4.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z0 != 0 goto label5;

     label2:
        return;

     label3:
        i3 = -1;

        goto label1;

     label4:
        $r2 = <com.android.internal.app.ProcessStats: int[] PROCESS_STATE_TO_STATE>;

        $i6 = $r2[i0];

        $i5 = i1 * 14;

        i3 = $i6 + $i5;

        goto label1;

     label5:
        if r1 == null goto label2;

        $i7 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        i4 = -1 + $i7;

     label6:
        if i4 < 0 goto label2;

        $r5 = specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState pullFixedProc(android.util.ArrayMap,int)>(r1, i4);

        virtualinvoke $r5.<com.android.internal.app.ProcessStats$ProcessState: void setState(int,long)>(i3, l2);

        i4 = i4 + -1;

        goto label6;
    }

    void setState(int, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        int i0, $i2;
        long l1;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        specialinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void ensureNotDead()>();

        $i2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState>;

        if $i2 == i0 goto label1;

        virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void commitStateTime(long)>(l1);

        r0.<com.android.internal.app.ProcessStats$ProcessState: int mCurState> = i0;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        com.android.internal.app.ProcessStats$ProcessState r0, $r14;
        java.lang.StringBuilder r1, $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11;
        int $i0, $i1;
        java.lang.String $r4, $r7, $r12, $r15;
        boolean $z0;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(128);

        r1 = $r2;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProcessState{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mName>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i1 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mUid>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r12 = r0.<com.android.internal.app.ProcessStats$ProcessState: java.lang.String mPackage>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $z0 = r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (multi)");

     label1:
        $r14 = r0.<com.android.internal.app.ProcessStats$ProcessState: com.android.internal.app.ProcessStats$ProcessState mCommonProcess>;

        if $r14 == r0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (sub)");

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    void writeToParcel(android.os.Parcel, long)
    {
        com.android.internal.app.ProcessStats$ProcessState r0;
        android.os.Parcel r1;
        long l0, $l9, $l10, $l11;
        byte b1;
        int i2, $i3, $i4, $i5, $i6, $i7, $i8, $i12;
        boolean $z0;
        int[] $r2;

        r0 := @this: com.android.internal.app.ProcessStats$ProcessState;

        r1 := @parameter0: android.os.Parcel;

        l0 := @parameter1: long;

        $z0 = r0.<com.android.internal.app.ProcessStats$ProcessState: boolean mMultiPackage>;

        if $z0 == 0 goto label3;

        b1 = 1;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

        virtualinvoke r0.<com.android.internal.app.ProcessStats$ProcessState: void writeDurationsToParcel(android.os.Parcel)>(r1);

        $i3 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        i2 = 0;

     label2:
        $i4 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mPssTableSize>;

        if i2 >= $i4 goto label4;

        $r2 = r0.<com.android.internal.app.ProcessStats$ProcessState: int[] mPssTable>;

        $i12 = $r2[i2];

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        i2 = i2 + 1;

        goto label2;

     label3:
        b1 = 0;

        goto label1;

     label4:
        $i5 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveWake>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumExcessiveCpu>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i8 = r0.<com.android.internal.app.ProcessStats$ProcessState: int mNumCachedKill>;

        if $i8 <= 0 goto label5;

        $l9 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mMinCachedKillPss>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l9);

        $l10 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mAvgCachedKillPss>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l10);

        $l11 = r0.<com.android.internal.app.ProcessStats$ProcessState: long mMaxCachedKillPss>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l11);

     label5:
        return;
    }
}
