public class com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings extends java.lang.Object
{
    private static final char INPUT_METHOD_SEPARATER;
    private static final char INPUT_METHOD_SUBTYPE_SEPARATER;
    private int mCurrentUserId;
    private java.lang.String mEnabledInputMethodsStrCache;
    private final android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter;
    private final java.util.ArrayList mMethodList;
    private final java.util.HashMap mMethodMap;
    private final android.content.res.Resources mRes;
    private final android.content.ContentResolver mResolver;
    private final android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter;

    public void <init>(android.content.res.Resources, android.content.ContentResolver, java.util.HashMap, java.util.ArrayList, int)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.content.res.Resources r1;
        android.content.ContentResolver r2;
        java.util.HashMap r3;
        java.util.ArrayList r4;
        int i0;
        android.text.TextUtils$SimpleStringSplitter $r5, $r6;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.content.ContentResolver;

        r3 := @parameter2: java.util.HashMap;

        r4 := @parameter3: java.util.ArrayList;

        i0 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r5.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(58);

        r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter> = $r5;

        $r6 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r6.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(59);

        r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter> = $r6;

        virtualinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void setCurrentUserId(int)>(i0);

        r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.res.Resources mRes> = r1;

        r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver> = r2;

        r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.HashMap mMethodMap> = r3;

        r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList mMethodList> = r4;

        return;
    }

    private void addSubtypeToHistory(java.lang.String, java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, r2, $r8;
        java.util.List r3;
        java.util.Iterator r4;
        android.util.Pair r5;
        boolean $z0, $z1;
        java.lang.Object $r6, $r7;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List loadInputMethodAndSubtypeHistoryLocked()>();

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.util.Pair) $r6;

        $r7 = r5.<android.util.Pair: java.lang.Object first>;

        $r8 = (java.lang.String) $r7;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        interfaceinvoke r3.<java.util.List: boolean remove(java.lang.Object)>(r5);

     label2:
        specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void saveSubtypeHistory(java.util.List,java.lang.String,java.lang.String)>(r3, r1, r2);

        return;
    }

    private static void buildEnabledInputMethodsSettingString(java.lang.StringBuilder, android.util.Pair)
    {
        java.lang.StringBuilder r0, $r10;
        android.util.Pair r1;
        java.lang.String r2, r5;
        java.util.ArrayList r3;
        java.util.Iterator r4;
        java.lang.Object $r6, $r7, $r9;
        boolean $z0;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: android.util.Pair;

        $r6 = r1.<android.util.Pair: java.lang.Object first>;

        r2 = (java.lang.String) $r6;

        $r7 = r1.<android.util.Pair: java.lang.Object second>;

        r3 = (java.util.ArrayList) $r7;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r4 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r9;

        $r10 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        goto label1;

     label2:
        return;
    }

    private java.util.List createEnabledInputMethodAndSubtypeHashCodeListLocked(java.util.List)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.List r1;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        android.util.Pair r4, $r11;
        android.view.inputmethod.InputMethodInfo r5;
        boolean $z0;
        java.lang.Object $r7, $r8, $r10, $r12;
        java.util.HashMap $r9;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.util.List;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r7;

        $r9 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.HashMap mMethodMap>;

        $r8 = r4.<android.util.Pair: java.lang.Object first>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r5 = (android.view.inputmethod.InputMethodInfo) $r10;

        if r5 == null goto label1;

        $r11 = new android.util.Pair;

        $r12 = r4.<android.util.Pair: java.lang.Object second>;

        specialinvoke $r11.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r5, $r12);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        return r2;
    }

    private java.util.List createEnabledInputMethodListLocked(java.util.List)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.List r1;
        java.util.ArrayList r2, $r6;
        java.util.Iterator r3;
        android.util.Pair r4;
        android.view.inputmethod.InputMethodInfo r5;
        boolean $z0;
        java.lang.Object $r7, $r8, $r10;
        java.util.HashMap $r9;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.util.List;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r7;

        $r9 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.HashMap mMethodMap>;

        $r8 = r4.<android.util.Pair: java.lang.Object first>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r8);

        r5 = (android.view.inputmethod.InputMethodInfo) $r10;

        if r5 == null goto label1;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        goto label1;

     label2:
        return r2;
    }

    private java.lang.String getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(java.util.List, java.lang.String, java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.List r1;
        java.lang.String r2, r3, r9, r11, $r14, $r19, $r26, $r27;
        java.util.Iterator r4, r8;
        android.util.Pair r5;
        java.util.ArrayList r6, r12;
        android.view.inputmethod.InputMethodInfo r7;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r13, $r15, $r16, $r17, $r20, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.HashMap $r18;
        java.lang.Integer $r21;
        android.content.res.Resources $r22;
        android.view.inputmethod.InputMethodSubtype $r24;
        java.lang.NumberFormatException $r25;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.util.Pair) $r13;

        $r15 = r5.<android.util.Pair: java.lang.Object first>;

        $r14 = (java.lang.String) $r15;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label01;

        $r16 = r5.<android.util.Pair: java.lang.Object second>;

        r6 = (java.util.ArrayList) $r16;

        $r18 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.HashMap mMethodMap>;

        $r17 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r7 = (android.view.inputmethod.InputMethodInfo) $r17;

        $i2 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label04;

        if r7 == null goto label11;

        $i4 = virtualinvoke r7.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        if $i4 <= 0 goto label11;

        $r22 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.res.Resources mRes>;

        r12 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList access$000(android.content.res.Resources,android.view.inputmethod.InputMethodInfo)>($r22, r7);

        if r12 == null goto label11;

        i0 = interfaceinvoke r12.<java.util.List: int size()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label11;

        $r23 = interfaceinvoke r12.<java.util.List: java.lang.Object get(int)>(i1);

        $r24 = (android.view.inputmethod.InputMethodSubtype) $r23;

        $i5 = virtualinvoke $r24.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i5);

        $z5 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z5 == 0 goto label03;

        return r3;

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        r8 = virtualinvoke r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r20 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r20;

        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label05;

     label06:
        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r3);

        $i3 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        $z4 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean isValidSubtypeId(android.view.inputmethod.InputMethodInfo,int)>(r7, $i3);

        if $z4 == 0 goto label08;

     label07:
        return r9;

     label08:
        r11 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.lang.String access$100()>();

     label09:
        return r11;

     label10:
        $r25 := @caughtexception;

        $r27 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.lang.String access$100()>();

        return $r27;

     label11:
        $r19 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.lang.String access$100()>();

        return $r19;

     label12:
        return null;

        catch java.lang.NumberFormatException from label06 to label07 with label10;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    private android.util.Pair getLastSubtypeForInputMethodLockedInternal(java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, r5, r6, $r11;
        java.util.List r2, $r7;
        java.util.Iterator r3;
        android.util.Pair r4, $r12;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r8, $r9, $r10;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        $r7 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List loadInputMethodAndSubtypeHistoryLocked()>();

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.util.Pair) $r8;

        $r9 = r4.<android.util.Pair: java.lang.Object first>;

        r5 = (java.lang.String) $r9;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label1;

     label2:
        $r10 = r4.<android.util.Pair: java.lang.Object second>;

        $r11 = (java.lang.String) $r10;

        r6 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getEnabledSubtypeHashCodeForInputMethodAndSubtypeLocked(java.util.List,java.lang.String,java.lang.String)>(r2, r5, $r11);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z2 != 0 goto label1;

        $r12 = new android.util.Pair;

        specialinvoke $r12.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r5, r6);

        return $r12;

     label3:
        return null;
    }

    private int getSelectedInputMethodSubtypeHashCode()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int i0, $i1;
        android.content.ContentResolver $r2;
        android.provider.Settings$SettingNotFoundException $r3;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

     label1:
        $r2 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i1 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        i0 = staticinvoke <android.provider.Settings$Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>($r2, "selected_input_method_subtype", $i1);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        return -1;

        catch android.provider.Settings$SettingNotFoundException from label1 to label2 with label3;
    }

    private java.lang.String getSubtypeHistoryStr()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int $i0;
        android.content.ContentResolver $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r1, "input_methods_subtype_history", $i0);

        return $r2;
    }

    private java.util.List loadInputMethodAndSubtypeHistoryLocked()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.ArrayList r1, $r6;
        java.lang.String r2, r3, r4, r5;
        boolean $z0, $z1, $z2, $z3;
        android.text.TextUtils$SimpleStringSplitter $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15;
        android.util.Pair $r14;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = $r6;

        r2 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getSubtypeHistoryStr()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

     label1:
        return r1;

     label2:
        $r7 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        virtualinvoke $r7.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r2);

     label3:
        $r8 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        $z1 = virtualinvoke $r8.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z1 == 0 goto label1;

        $r9 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        r3 = virtualinvoke $r9.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $r10 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        virtualinvoke $r10.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r3);

        $r11 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        $z2 = virtualinvoke $r11.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z2 == 0 goto label3;

        r4 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.lang.String access$100()>();

        $r12 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        r5 = virtualinvoke $r12.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $r13 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        $z3 = virtualinvoke $r13.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r15 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        r4 = virtualinvoke $r15.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

     label4:
        $r14 = new android.util.Pair;

        specialinvoke $r14.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r5, r4);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        goto label3;
    }

    private void putEnabledInputMethodsStr(java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1;
        int $i0;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r2, "enabled_input_methods", r1, $i0);

        r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache> = r1;

        return;
    }

    private void putSubtypeHistoryStr(java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1;
        int $i0;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r2, "input_methods_subtype_history", r1, $i0);

        return;
    }

    private void saveSubtypeHistory(java.util.List, java.lang.String, java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.List r1;
        java.lang.String r2, r3, r7, r8, $r11;
        java.lang.StringBuilder r4, $r9, $r14, $r16, $r18, $r20;
        boolean z0, z1, z2, $z3, $z4;
        java.util.Iterator r5;
        android.util.Pair r6;
        java.lang.Object $r10, $r12, $r13;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r4 = $r9;

        z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        z1 = 0;

        if z0 != 0 goto label1;

        z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        z1 = 0;

        if z2 != 0 goto label1;

        $r18 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        z1 = 1;

     label1:
        r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.util.Pair) $r10;

        $r13 = r6.<android.util.Pair: java.lang.Object first>;

        r7 = (java.lang.String) $r13;

        $r12 = r6.<android.util.Pair: java.lang.Object second>;

        r8 = (java.lang.String) $r12;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z4 == 0 goto label3;

        r8 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.lang.String access$100()>();

     label3:
        if z1 == 0 goto label5;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label4:
        $r14 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        goto label2;

     label5:
        z1 = 1;

        goto label4;

     label6:
        $r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void putSubtypeHistoryStr(java.lang.String)>($r11);

        return;
    }

    public void appendAndPutEnabledInputMethodLocked(java.lang.String, boolean)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, $r2, $r4, $r8;
        boolean z0, $z1;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getEnabledInputMethodsStr()>();

     label1:
        $r2 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void putEnabledInputMethodsStr(java.lang.String)>(r1);

        return;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void putEnabledInputMethodsStr(java.lang.String)>($r8);

        return;
    }

    public boolean buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder, java.util.List, java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.StringBuilder r1;
        java.util.List r2;
        java.lang.String r3, $r6, $r9;
        boolean z0, z1, $z2, $z3;
        java.util.Iterator r4;
        android.util.Pair r5;
        java.lang.Object $r7, $r8;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

        z0 = 0;

        z1 = 0;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.util.Pair) $r7;

        $r8 = r5.<android.util.Pair: java.lang.Object first>;

        $r9 = (java.lang.String) $r8;

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label2;

        z0 = 1;

        goto label1;

     label2:
        if z1 == 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label3:
        staticinvoke <com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void buildEnabledInputMethodsSettingString(java.lang.StringBuilder,android.util.Pair)>(r1, r5);

        goto label1;

     label4:
        z1 = 1;

        goto label3;

     label5:
        if z0 == 0 goto label6;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void putEnabledInputMethodsStr(java.lang.String)>($r6);

     label6:
        return z0;
    }

    public void enableAllIMEsIfThereIsNoEnabledIME()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.StringBuilder r1, $r4, $r9, $r10, $r11;
        int i0, i1;
        android.view.inputmethod.InputMethodInfo r2;
        java.lang.String $r3, $r6, $r12, $r13, $r15;
        boolean $z0;
        java.util.ArrayList $r5, $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r3 = virtualinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getEnabledInputMethodsStr()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList mMethodList>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r7 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.ArrayList mMethodList>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.view.inputmethod.InputMethodInfo) $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding: ");

        $r12 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodUtils", $r13);

        if i1 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label2:
        $r15 = virtualinvoke r2.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void putEnabledInputMethodsStr(java.lang.String)>($r6);

     label4:
        return;
    }

    public int getCurrentUserId()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int $i0;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $i0 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        return $i0;
    }

    public java.lang.String getDisabledSystemInputMethods()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int $i0;
        android.content.ContentResolver $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r1, "disabled_system_input_methods", $i0);

        return $r2;
    }

    public java.util.List getEnabledInputMethodAndSubtypeHashCodeListLocked()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.List $r1, $r2;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = virtualinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        $r2 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List createEnabledInputMethodAndSubtypeHashCodeListLocked(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getEnabledInputMethodListLocked()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.List $r1, $r2;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = virtualinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        $r2 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List createEnabledInputMethodListLocked(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context, android.view.inputmethod.InputMethodInfo, boolean)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.content.Context r1;
        android.view.inputmethod.InputMethodInfo r2;
        boolean z0, $z1;
        java.util.List r3, $r4;
        android.content.res.Resources $r5;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.inputmethod.InputMethodInfo;

        z0 := @parameter2: boolean;

        r3 = virtualinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)>(r2);

        if z0 == 0 goto label1;

        $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList access$000(android.content.res.Resources,android.view.inputmethod.InputMethodInfo)>($r5, r2);

     label1:
        $r4 = staticinvoke <android.view.inputmethod.InputMethodSubtype: java.util.List sort(android.content.Context,int,android.view.inputmethod.InputMethodInfo,java.util.List)>(r1, 0, r2, r3);

        return $r4;
    }

    public java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.view.inputmethod.InputMethodInfo r1, r6;
        java.util.List r2;
        java.util.ArrayList r3, $r10, $r18;
        java.util.Iterator r4, r8;
        android.util.Pair r5;
        int i0, i1, $i2;
        android.view.inputmethod.InputMethodSubtype r7;
        java.lang.String r9, $r15, $r16, $r20;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r11, $r12, $r13, $r17, $r19;
        java.util.HashMap $r14;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: android.view.inputmethod.InputMethodInfo;

        r2 = virtualinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r3 = $r10;

        if r1 == null goto label5;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.util.Pair) $r12;

        $r14 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.HashMap mMethodMap>;

        $r11 = r5.<android.util.Pair: java.lang.Object first>;

        $r13 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r11);

        r6 = (android.view.inputmethod.InputMethodInfo) $r13;

        if r6 == null goto label1;

        $r16 = virtualinvoke r6.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $r15 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z1 == 0 goto label1;

        i0 = virtualinvoke r6.<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        r7 = virtualinvoke r6.<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>(i1);

        $r17 = r5.<android.util.Pair: java.lang.Object second>;

        $r18 = (java.util.ArrayList) $r17;

        r8 = virtualinvoke $r18.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r19 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r19;

        $i2 = virtualinvoke r7.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z3 == 0 goto label3;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        goto label3;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        return r3;
    }

    public java.util.List getEnabledInputMethodsAndSubtypeListLocked()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.util.ArrayList r1, r4, $r6, $r12;
        java.lang.String r2, r3, r5, $r16;
        boolean $z0, $z1, $z2, $z3;
        android.text.TextUtils$SimpleStringSplitter $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r17;
        android.util.Pair $r15;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r1 = $r6;

        r2 = virtualinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getEnabledInputMethodsStr()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label2;

     label1:
        return r1;

     label2:
        $r7 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        virtualinvoke $r7.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r2);

     label3:
        $r8 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        $z1 = virtualinvoke $r8.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z1 == 0 goto label1;

        $r9 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mInputMethodSplitter>;

        r3 = virtualinvoke $r9.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $r10 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        virtualinvoke $r10.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r3);

        $r11 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        $z2 = virtualinvoke $r11.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r4 = $r12;

        $r13 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        r5 = virtualinvoke $r13.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

     label4:
        $r14 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        $z3 = virtualinvoke $r14.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r17 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.text.TextUtils$SimpleStringSplitter mSubtypeSplitter>;

        $r16 = virtualinvoke $r17.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        goto label4;

     label5:
        $r15 = new android.util.Pair;

        specialinvoke $r15.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r5, r4);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        goto label3;
    }

    public java.lang.String getEnabledInputMethodsStr()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int $i0;
        android.content.ContentResolver $r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r1, "enabled_input_methods", $i0);

        r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache> = $r2;

        $r3 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String mEnabledInputMethodsStrCache>;

        return $r3;
    }

    public android.util.Pair getLastInputMethodAndSubtypeLocked()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        android.util.Pair $r1;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastSubtypeForInputMethodLockedInternal(java.lang.String)>(null);

        return $r1;
    }

    public java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, $r4;
        android.util.Pair r2;
        java.lang.Object $r3;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.util.Pair getLastSubtypeForInputMethodLockedInternal(java.lang.String)>(r1);

        if r2 == null goto label1;

        $r3 = r2.<android.util.Pair: java.lang.Object second>;

        $r4 = (java.lang.String) $r3;

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getSelectedInputMethod()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int $i0;
        android.content.ContentResolver $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r1, "default_input_method", $i0);

        return $r2;
    }

    public int getSelectedInputMethodSubtypeId(java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1;
        android.view.inputmethod.InputMethodInfo r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        int $i0, $i1;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.util.HashMap mMethodMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (android.view.inputmethod.InputMethodInfo) $r4;

        if r2 != null goto label1;

        return -1;

     label1:
        $i0 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeHashCode()>();

        $i1 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>(r2, $i0);

        return $i1;
    }

    public boolean isSubtypeSelected()
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int $i0;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        $i0 = specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int getSelectedInputMethodSubtypeHashCode()>();

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void putSelectedInputMethod(java.lang.String)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1;
        int $i0;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i0 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r2, "default_input_method", r1, $i0);

        return;
    }

    public void putSelectedSubtype(int)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int i0, $i1;
        android.content.ContentResolver $r1;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: android.content.ContentResolver mResolver>;

        $i1 = r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId>;

        staticinvoke <android.provider.Settings$Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r1, "selected_input_method_subtype", i0, $i1);

        return;
    }

    public void saveCurrentInputMethodAndSubtypeToHistory(java.lang.String, android.view.inputmethod.InputMethodSubtype)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        java.lang.String r1, r3;
        android.view.inputmethod.InputMethodSubtype r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype;

        r3 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: java.lang.String access$100()>();

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<android.view.inputmethod.InputMethodSubtype: int hashCode()>();

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label1:
        $z0 = staticinvoke <com.android.internal.inputmethod.InputMethodUtils: boolean canAddToLastInputMethod(android.view.inputmethod.InputMethodSubtype)>(r2);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: void addSubtypeToHistory(java.lang.String,java.lang.String)>(r1, r3);

     label2:
        return;
    }

    public void setCurrentUserId(int)
    {
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings r0;
        int i0;

        r0 := @this: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings;

        i0 := @parameter0: int;

        r0.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: int mCurrentUserId> = i0;

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: char INPUT_METHOD_SUBTYPE_SEPARATER> = 59;

        <com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: char INPUT_METHOD_SEPARATER> = 58;

        return;
    }
}
