class android.database.sqlite.SQLiteConnectionPool$1 extends java.lang.Object implements android.os.CancellationSignal$OnCancelListener
{
    final android.database.sqlite.SQLiteConnectionPool this$0;
    final int val$nonce;
    final android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter val$waiter;

    void <init>(android.database.sqlite.SQLiteConnectionPool, android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter, int)
    {
        android.database.sqlite.SQLiteConnectionPool$1 r0;
        android.database.sqlite.SQLiteConnectionPool r1;
        android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter r2;
        int i0;

        r0 := @this: android.database.sqlite.SQLiteConnectionPool$1;

        r1 := @parameter0: android.database.sqlite.SQLiteConnectionPool;

        r2 := @parameter1: android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter;

        i0 := @parameter2: int;

        r0.<android.database.sqlite.SQLiteConnectionPool$1: android.database.sqlite.SQLiteConnectionPool this$0> = r1;

        r0.<android.database.sqlite.SQLiteConnectionPool$1: android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter val$waiter> = r2;

        r0.<android.database.sqlite.SQLiteConnectionPool$1: int val$nonce> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onCancel()
    {
        android.database.sqlite.SQLiteConnectionPool$1 r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r7;
        android.database.sqlite.SQLiteConnectionPool $r3, $r6;
        android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter $r4, $r5;
        int $i0, $i1;

        r0 := @this: android.database.sqlite.SQLiteConnectionPool$1;

        $r3 = r0.<android.database.sqlite.SQLiteConnectionPool$1: android.database.sqlite.SQLiteConnectionPool this$0>;

        r1 = staticinvoke <android.database.sqlite.SQLiteConnectionPool: java.lang.Object access$000(android.database.sqlite.SQLiteConnectionPool)>($r3);

        entermonitor r1;

     label1:
        $r4 = r0.<android.database.sqlite.SQLiteConnectionPool$1: android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter val$waiter>;

        $i1 = $r4.<android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter: int mNonce>;

        $i0 = r0.<android.database.sqlite.SQLiteConnectionPool$1: int val$nonce>;

        if $i1 != $i0 goto label2;

        $r6 = r0.<android.database.sqlite.SQLiteConnectionPool$1: android.database.sqlite.SQLiteConnectionPool this$0>;

        $r5 = r0.<android.database.sqlite.SQLiteConnectionPool$1: android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter val$waiter>;

        staticinvoke <android.database.sqlite.SQLiteConnectionPool: void access$100(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter)>($r6, $r5);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
