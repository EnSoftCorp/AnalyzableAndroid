public class android.filterpacks.imageproc.FisheyeFilter extends android.filterfw.core.Filter
{
    private static final java.lang.String TAG;
    private static final java.lang.String mFisheyeShader;
    private int mHeight;
    private android.filterfw.core.Program mProgram;
    private float mScale;
    private int mTarget;
    private int mTileSize;
    private int mWidth;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.FisheyeFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.FisheyeFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.FisheyeFilter: float mScale> = 0.0F;

        r0.<android.filterpacks.imageproc.FisheyeFilter: int mTileSize> = 640;

        r0.<android.filterpacks.imageproc.FisheyeFilter: int mWidth> = 0;

        r0.<android.filterpacks.imageproc.FisheyeFilter: int mHeight> = 0;

        r0.<android.filterpacks.imageproc.FisheyeFilter: int mTarget> = 0;

        return;
    }

    private void updateFrameSize(int, int)
    {
        android.filterpacks.imageproc.FisheyeFilter r0;
        int i0, i1;

        r0 := @this: android.filterpacks.imageproc.FisheyeFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.filterpacks.imageproc.FisheyeFilter: int mWidth> = i0;

        r0.<android.filterpacks.imageproc.FisheyeFilter: int mHeight> = i1;

        specialinvoke r0.<android.filterpacks.imageproc.FisheyeFilter: void updateProgramParams()>();

        return;
    }

    private void updateProgramParams()
    {
        android.filterpacks.imageproc.FisheyeFilter r0;
        float[] r1;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        android.filterfw.core.Program $r2, $r3, $r6, $r8;
        java.lang.Float $r4, $r5, $r7;

        r0 := @this: android.filterpacks.imageproc.FisheyeFilter;

        r1 = newarray (float)[2];

        $i1 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mWidth>;

        $i0 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mHeight>;

        if $i1 <= $i0 goto label2;

        r1[0] = 1.0F;

        $i4 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mHeight>;

        $f25 = (float) $i4;

        $i5 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mWidth>;

        $f26 = (float) $i5;

        $f24 = $f25 / $f26;

        r1[1] = $f24;

     label1:
        $f9 = r0.<android.filterpacks.imageproc.FisheyeFilter: float mScale>;

        $f11 = 2.0F * $f9;

        f0 = 0.75F + $f11;

        $f13 = r1[0];

        $f10 = r1[0];

        $f17 = $f13 * $f10;

        $f15 = r1[1];

        $f12 = r1[1];

        $f14 = $f15 * $f12;

        $f16 = $f17 + $f14;

        f1 = 0.25F * $f16;

        $d1 = (double) f1;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        f2 = (float) $d0;

        f3 = 1.15F * f2;

        f4 = f3 * f3;

        $f19 = f0 / f2;

        $f18 = f4 - f1;

        $d2 = (double) $f18;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        $f20 = (float) $d3;

        $f22 = $f19 * $f20;

        $d5 = (double) $f22;

        $d4 = staticinvoke <java.lang.Math: double atan(double)>($d5);

        $f21 = (float) $d4;

        $f23 = 1.5707964F - $f21;

        f5 = f2 / $f23;

        $r3 = r0.<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r3.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("scale", r1);

        $r2 = r0.<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.Program mProgram>;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f4);

        virtualinvoke $r2.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("radius2", $r5);

        $r6 = r0.<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.Program mProgram>;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f5);

        virtualinvoke $r6.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("factor", $r4);

        $r8 = r0.<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.Program mProgram>;

        $r7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke $r8.<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>("alpha", $r7);

        return;

     label2:
        $i2 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mWidth>;

        $f7 = (float) $i2;

        $i3 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mHeight>;

        $f6 = (float) $i3;

        $f8 = $f7 / $f6;

        r1[0] = $f8;

        r1[1] = 1.0F;

        goto label1;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.FisheyeFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.Program $r3;

        r0 := @this: android.filterpacks.imageproc.FisheyeFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.Program mProgram>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.filterpacks.imageproc.FisheyeFilter: void updateProgramParams()>();

     label1:
        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.FisheyeFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.FisheyeFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void initProgram(android.filterfw.core.FilterContext, int)
    {
        android.filterpacks.imageproc.FisheyeFilter r0;
        android.filterfw.core.FilterContext r1;
        int i0, $i1;
        android.filterfw.core.ShaderProgram r2, $r9;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.filterpacks.imageproc.FisheyeFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter FisheyeFilter does not support frames of target ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $r9 = new android.filterfw.core.ShaderProgram;

        specialinvoke $r9.<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>(r1, "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform vec2 scale;\nuniform float alpha;\nuniform float radius2;\nuniform float factor;\nvarying vec2 v_texcoord;\nvoid main() {\n  const float m_pi_2 = 1.570963;\n  vec2 coord = v_texcoord - vec2(0.5, 0.5);\n  float dist = length(coord * scale);\n  float radian = m_pi_2 - atan(alpha * sqrt(radius2 - dist * dist), dist);\n  float scalar = radian * factor / dist;\n  vec2 new_coord = coord * scalar + vec2(0.5, 0.5);\n  gl_FragColor = texture2D(tex_sampler_0, new_coord);\n}\n");

        r2 = $r9;

        $i1 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mTileSize>;

        virtualinvoke r2.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i1);

        r0.<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.Program mProgram> = r2;

        r0.<android.filterpacks.imageproc.FisheyeFilter: int mTarget> = i0;

        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.FisheyeFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2, r4;
        android.filterfw.core.FrameFormat r3;
        android.filterfw.core.FrameManager $r5;
        android.filterfw.core.Program $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: android.filterpacks.imageproc.FisheyeFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r3 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r5 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r4 = virtualinvoke $r5.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r3);

        $r6 = r0.<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.Program mProgram>;

        if $r6 == null goto label1;

        $i6 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i8 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mTarget>;

        if $i6 == $i8 goto label2;

     label1:
        $i0 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.FisheyeFilter: void initProgram(android.filterfw.core.FilterContext,int)>(r1, $i0);

     label2:
        $i1 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i2 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mWidth>;

        if $i1 != $i2 goto label3;

        $i5 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        $i7 = r0.<android.filterpacks.imageproc.FisheyeFilter: int mHeight>;

        if $i5 == $i7 goto label4;

     label3:
        $i3 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i4 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        specialinvoke r0.<android.filterpacks.imageproc.FisheyeFilter: void updateFrameSize(int,int)>($i3, $i4);

     label4:
        $r7 = r0.<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r7.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r2, r4);

        virtualinvoke r0.<android.filterpacks.imageproc.FisheyeFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r4);

        virtualinvoke r4.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.FisheyeFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.FisheyeFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.FisheyeFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.FisheyeFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }

    public static void <clinit>()
    {
        <android.filterpacks.imageproc.FisheyeFilter: java.lang.String mFisheyeShader> = "precision mediump float;\nuniform sampler2D tex_sampler_0;\nuniform vec2 scale;\nuniform float alpha;\nuniform float radius2;\nuniform float factor;\nvarying vec2 v_texcoord;\nvoid main() {\n  const float m_pi_2 = 1.570963;\n  vec2 coord = v_texcoord - vec2(0.5, 0.5);\n  float dist = length(coord * scale);\n  float radian = m_pi_2 - atan(alpha * sqrt(radius2 - dist * dist), dist);\n  float scalar = radian * factor / dist;\n  vec2 new_coord = coord * scalar + vec2(0.5, 0.5);\n  gl_FragColor = texture2D(tex_sampler_0, new_coord);\n}\n";

        <android.filterpacks.imageproc.FisheyeFilter: java.lang.String TAG> = "FisheyeFilter";

        return;
    }
}
