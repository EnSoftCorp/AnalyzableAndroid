public class com.android.internal.util.FastPrintWriter extends java.io.PrintWriter
{
    private static java.io.Writer sDummyWriter;
    private final boolean mAutoFlush;
    private final int mBufferLen;
    private final java.nio.ByteBuffer mBytes;
    private java.nio.charset.CharsetEncoder mCharset;
    private boolean mIoError;
    private final java.io.OutputStream mOutputStream;
    private int mPos;
    private final android.util.Printer mPrinter;
    private final java.lang.String mSeparator;
    private final char[] mText;
    private final java.io.Writer mWriter;

    static void <clinit>()
    {
        com.android.internal.util.FastPrintWriter$1 $r0;

        $r0 = new com.android.internal.util.FastPrintWriter$1;

        specialinvoke $r0.<com.android.internal.util.FastPrintWriter$1: void <init>()>();

        <com.android.internal.util.FastPrintWriter: java.io.Writer sDummyWriter> = $r0;

        return;
    }

    public void <init>(android.util.Printer)
    {
        com.android.internal.util.FastPrintWriter r0;
        android.util.Printer r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: android.util.Printer;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(android.util.Printer,int)>(r1, 512);

        return;
    }

    public void <init>(android.util.Printer, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        android.util.Printer r1;
        int i0;
        java.io.Writer $r2;
        char[] $r3;
        java.lang.String $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: android.util.Printer;

        i0 := @parameter1: int;

        $r2 = <com.android.internal.util.FastPrintWriter: java.io.Writer sDummyWriter>;

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, 1);

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("pr is null");

        throw $r5;

     label1:
        r0.<com.android.internal.util.FastPrintWriter: int mBufferLen> = i0;

        $r3 = newarray (char)[i0];

        r0.<com.android.internal.util.FastPrintWriter: char[] mText> = $r3;

        r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes> = null;

        r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream> = null;

        r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter> = null;

        r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter> = r1;

        r0.<com.android.internal.util.FastPrintWriter: boolean mAutoFlush> = 1;

        $r4 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator> = $r4;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void initDefaultEncoder()>();

        return;
    }

    public void <init>(java.io.OutputStream)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.OutputStream r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream,boolean,int)>(r1, 0, 8192);

        return;
    }

    public void <init>(java.io.OutputStream, boolean)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.OutputStream r1;
        boolean z0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream,boolean,int)>(r1, z0, 8192);

        return;
    }

    public void <init>(java.io.OutputStream, boolean, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.OutputStream r1;
        boolean z0;
        int i0, $i1;
        java.io.Writer $r2;
        char[] $r3;
        java.nio.ByteBuffer $r4;
        java.lang.String $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r2 = <com.android.internal.util.FastPrintWriter: java.io.Writer sDummyWriter>;

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, z0);

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("out is null");

        throw $r6;

     label1:
        r0.<com.android.internal.util.FastPrintWriter: int mBufferLen> = i0;

        $r3 = newarray (char)[i0];

        r0.<com.android.internal.util.FastPrintWriter: char[] mText> = $r3;

        $i1 = r0.<com.android.internal.util.FastPrintWriter: int mBufferLen>;

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i1);

        r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes> = $r4;

        r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream> = r1;

        r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter> = null;

        r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter> = null;

        r0.<com.android.internal.util.FastPrintWriter: boolean mAutoFlush> = z0;

        $r5 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator> = $r5;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void initDefaultEncoder()>();

        return;
    }

    public void <init>(java.io.Writer)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.Writer r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>(r1, 0, 8192);

        return;
    }

    public void <init>(java.io.Writer, boolean)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.Writer r1;
        boolean z0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>(r1, z0, 8192);

        return;
    }

    public void <init>(java.io.Writer, boolean, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.io.Writer r1, $r2;
        boolean z0;
        int i0;
        char[] $r3;
        java.lang.String $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.io.Writer;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        $r2 = <com.android.internal.util.FastPrintWriter: java.io.Writer sDummyWriter>;

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r2, z0);

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("wr is null");

        throw $r5;

     label1:
        r0.<com.android.internal.util.FastPrintWriter: int mBufferLen> = i0;

        $r3 = newarray (char)[i0];

        r0.<com.android.internal.util.FastPrintWriter: char[] mText> = $r3;

        r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes> = null;

        r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream> = null;

        r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter> = r1;

        r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter> = null;

        r0.<com.android.internal.util.FastPrintWriter: boolean mAutoFlush> = z0;

        $r4 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator> = $r4;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void initDefaultEncoder()>();

        return;
    }

    private void appendLocked(char) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        char c0;
        int i1, $i2, $i3, $i4;
        char[] $r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        c0 := @parameter0: char;

        i1 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        $i2 = r0.<com.android.internal.util.FastPrintWriter: int mBufferLen>;

        $i3 = -1 + $i2;

        if i1 < $i3 goto label1;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        i1 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

     label1:
        $r1 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        $r1[i1] = c0;

        $i4 = i1 + 1;

        r0.<com.android.internal.util.FastPrintWriter: int mPos> = $i4;

        return;
    }

    private void appendLocked(java.lang.String, int, int) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9;
        char[] $r2;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = r0.<com.android.internal.util.FastPrintWriter: int mBufferLen>;

        if i1 <= i2 goto label4;

        i4 = i0 + i1;

     label1:
        if i0 >= i4 goto label6;

        i5 = i0 + i2;

        if i5 >= i4 goto label3;

        i6 = i2;

     label2:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>(r1, i0, i6);

        i0 = i5;

        goto label1;

     label3:
        i6 = i4 - i0;

        goto label2;

     label4:
        i3 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        $i7 = i3 + i1;

        if $i7 <= i2 goto label5;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        i3 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

     label5:
        $i8 = i0 + i1;

        $r2 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(i0, $i8, $r2, i3);

        $i9 = i3 + i1;

        r0.<com.android.internal.util.FastPrintWriter: int mPos> = $i9;

     label6:
        return;
    }

    private void appendLocked(char[], int, int) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        char[] r1, $r2;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = r0.<com.android.internal.util.FastPrintWriter: int mBufferLen>;

        if i1 <= i2 goto label4;

        i4 = i0 + i1;

     label1:
        if i0 >= i4 goto label6;

        i5 = i0 + i2;

        if i5 >= i4 goto label3;

        i6 = i2;

     label2:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char[],int,int)>(r1, i0, i6);

        i0 = i5;

        goto label1;

     label3:
        i6 = i4 - i0;

        goto label2;

     label4:
        i3 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        $i7 = i3 + i1;

        if $i7 <= i2 goto label5;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        i3 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

     label5:
        $r2 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r2, i3, i1);

        $i8 = i3 + i1;

        r0.<com.android.internal.util.FastPrintWriter: int mPos> = $i8;

     label6:
        return;
    }

    private void flushBytesLocked() throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0;
        java.nio.ByteBuffer $r1, $r2, $r4, $r7;
        java.io.OutputStream $r5;
        byte[] $r6;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        $r1 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int position()>();

        if i0 <= 0 goto label1;

        $r2 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r5 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        $r4 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        $r6 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r6, 0, i0);

        $r7 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

     label1:
        return;
    }

    private void flushLocked() throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i17;
        java.nio.CharBuffer r1;
        java.nio.charset.CoderResult r2;
        java.io.OutputStream $r3, $r19;
        java.io.Writer $r4, $r13, $r15;
        java.lang.String $r5, $r6, $r10, $r12, $r23;
        android.util.Printer $r7, $r9;
        char[] $r8, $r11, $r14, $r18;
        char $c11, $c16;
        java.nio.ByteBuffer $r16, $r21;
        java.nio.charset.CharsetEncoder $r17, $r22;
        boolean $z0, $z1;
        java.io.IOException $r20;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        $i3 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        if $i3 <= 0 goto label05;

        $r3 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        if $r3 == null goto label06;

        $r18 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        $i17 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        r1 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>($r18, 0, $i17);

        $r17 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r16 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        r2 = virtualinvoke $r17.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>(r1, $r16, 1);

     label01:
        $z1 = virtualinvoke r2.<java.nio.charset.CoderResult: boolean isError()>();

        if $z1 == 0 goto label02;

        $r20 = new java.io.IOException;

        $r23 = virtualinvoke r2.<java.nio.charset.CoderResult: java.lang.String toString()>();

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r23);

        throw $r20;

     label02:
        $z0 = virtualinvoke r2.<java.nio.charset.CoderResult: boolean isOverflow()>();

        if $z0 == 0 goto label03;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushBytesLocked()>();

        $r22 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r21 = r0.<com.android.internal.util.FastPrintWriter: java.nio.ByteBuffer mBytes>;

        r2 = virtualinvoke $r22.<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>(r1, $r21, 1);

        goto label01;

     label03:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushBytesLocked()>();

        $r19 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        virtualinvoke $r19.<java.io.OutputStream: void flush()>();

     label04:
        r0.<com.android.internal.util.FastPrintWriter: int mPos> = 0;

     label05:
        return;

     label06:
        $r4 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        if $r4 == null goto label07;

        $r15 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        $r14 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        $i15 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        virtualinvoke $r15.<java.io.Writer: void write(char[],int,int)>($r14, 0, $i15);

        $r13 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        virtualinvoke $r13.<java.io.Writer: void flush()>();

        goto label04;

     label07:
        i0 = 0;

        $r5 = r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator>;

        i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i4 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        if i1 >= $i4 goto label09;

        i2 = i1;

     label08:
        if i0 >= i2 goto label10;

        $r11 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        $i8 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        $i10 = -1 + $i8;

        $i9 = $i10 - i0;

        $c11 = $r11[$i9];

        $r12 = r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator>;

        $r10 = r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator>;

        $i12 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i14 = -1 + $i12;

        $i13 = $i14 - i0;

        $c16 = virtualinvoke $r12.<java.lang.String: char charAt(int)>($i13);

        if $c11 != $c16 goto label10;

        i0 = i0 + 1;

        goto label08;

     label09:
        i2 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        i0 = 0;

        goto label08;

     label10:
        $i5 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        if i0 < $i5 goto label11;

        $r9 = r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter>;

        interfaceinvoke $r9.<android.util.Printer: void println(java.lang.String)>("");

        goto label04;

     label11:
        $r7 = r0.<com.android.internal.util.FastPrintWriter: android.util.Printer mPrinter>;

        $r6 = new java.lang.String;

        $r8 = r0.<com.android.internal.util.FastPrintWriter: char[] mText>;

        $i6 = r0.<com.android.internal.util.FastPrintWriter: int mPos>;

        $i7 = $i6 - i0;

        specialinvoke $r6.<java.lang.String: void <init>(char[],int,int)>($r8, 0, $i7);

        interfaceinvoke $r7.<android.util.Printer: void println(java.lang.String)>($r6);

        goto label04;
    }

    private final void initDefaultEncoder()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.nio.charset.Charset $r1;
        java.nio.charset.CharsetEncoder $r2, $r4, $r7;
        java.nio.charset.CodingErrorAction $r3, $r6;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r2 = virtualinvoke $r1.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset> = $r2;

        $r4 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r3 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke $r4.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r3);

        $r7 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r6 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke $r7.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r6);

        return;
    }

    private final void initEncoder(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.String r1;
        java.nio.charset.Charset $r3;
        java.nio.charset.CharsetEncoder $r4, $r6, $r9;
        java.nio.charset.CodingErrorAction $r5, $r8;
        java.lang.Exception $r11;
        java.io.UnsupportedEncodingException $r12;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset> = $r4;

     label2:
        $r6 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke $r6.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>($r5);

        $r9 = r0.<com.android.internal.util.FastPrintWriter: java.nio.charset.CharsetEncoder mCharset>;

        $r8 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;

        virtualinvoke $r9.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>($r8);

        return;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.io.UnsupportedEncodingException;

        specialinvoke $r12.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r1);

        throw $r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.io.PrintWriter append(java.lang.CharSequence, int, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.CharSequence r1, $r3;
        int i0, i1, $i2;
        java.lang.String r2;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        r1 = "null";

     label1:
        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        r2 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void write(java.lang.String,int,int)>(r2, 0, $i2);

        return r0;
    }

    public volatile java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.io.PrintWriter $r2;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.android.internal.util.FastPrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.CharSequence r1;
        int i0, i1;
        java.io.PrintWriter $r2;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.android.internal.util.FastPrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public boolean checkError()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        boolean z0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void flush()>();

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        z0 = r0.<com.android.internal.util.FastPrintWriter: boolean mIoError>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void clearError()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        r0.<com.android.internal.util.FastPrintWriter: boolean mIoError> = 0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void close()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r9;
        java.io.OutputStream $r4, $r7;
        java.io.Writer $r5, $r6;
        java.io.IOException $r8;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        $r4 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        if $r4 == null goto label04;

        $r7 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        virtualinvoke $r7.<java.io.OutputStream: void close()>();

     label02:
        exitmonitor r1;

     label03:
        return;

     label04:
        $r5 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        if $r5 == null goto label02;

        $r6 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        virtualinvoke $r6.<java.io.Writer: void close()>();

     label05:
        goto label02;

     label06:
        $r8 := @caughtexception;

     label07:
        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label08:
        goto label02;

     label09:
        $r9 := @caughtexception;

        r2 = $r9;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void flush()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r8;
        java.io.OutputStream $r4, $r7;
        java.io.Writer $r5, $r6;
        java.io.IOException $r9;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

        $r4 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        if $r4 == null goto label04;

        $r7 = r0.<com.android.internal.util.FastPrintWriter: java.io.OutputStream mOutputStream>;

        virtualinvoke $r7.<java.io.OutputStream: void flush()>();

     label02:
        exitmonitor r1;

     label03:
        return;

     label04:
        $r5 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        if $r5 == null goto label02;

        $r6 = r0.<com.android.internal.util.FastPrintWriter: java.io.Writer mWriter>;

        virtualinvoke $r6.<java.io.Writer: void flush()>();

     label05:
        goto label02;

     label06:
        $r9 := @caughtexception;

     label07:
        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label08:
        goto label02;

     label09:
        $r8 := @caughtexception;

        r2 = $r8;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void print(char)
    {
        com.android.internal.util.FastPrintWriter r0;
        char c0;
        java.lang.Object r1;
        java.lang.Throwable r3, $r5;
        java.io.IOException $r4;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        c0 := @parameter0: char;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char)>(c0);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

     label5:
        exitmonitor r1;

     label6:
        throw r3;

     label7:
        $r4 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void print(int)
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void print(java.lang.String)>("0");

        return;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void print(int)>(i0);

        return;
    }

    public void print(long)
    {
        com.android.internal.util.FastPrintWriter r0;
        long l0;
        byte $b1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void print(java.lang.String)>("0");

        return;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void print(long)>(l0);

        return;
    }

    public void print(java.lang.String)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.String r1;
        java.lang.Object r2, $r5;
        java.lang.Throwable r3, $r7;
        int $i0;
        java.io.IOException $r6;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        $r5 = (java.lang.Object) null;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

     label01:
        r2 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r2;

     label02:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>(r1, 0, $i0);

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $r6 := @caughtexception;

     label06:
        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label07:
        goto label03;

     label08:
        $r7 := @caughtexception;

        r3 = $r7;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

        catch java.io.IOException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void print(char[])
    {
        com.android.internal.util.FastPrintWriter r0;
        char[] r1;
        java.lang.Object r2;
        java.lang.Throwable r4, $r5;
        int $i0;
        java.io.IOException $r6;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: char[];

        r2 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $i0 = lengthof r1;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char[],int,int)>(r1, 0, $i0);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r4 = $r5;

     label5:
        exitmonitor r2;

     label6:
        throw r4;

     label7:
        $r6 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void println()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        java.lang.String $r4, $r5;
        int $i0;
        boolean $z0;
        java.io.IOException $r7;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator>;

        $r4 = r0.<com.android.internal.util.FastPrintWriter: java.lang.String mSeparator>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>($r5, 0, $i0);

        $z0 = r0.<com.android.internal.util.FastPrintWriter: boolean mAutoFlush>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void flushLocked()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

     label5:
        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void setError()>();

     label6:
        goto label2;

     label7:
        $r6 := @caughtexception;

        r2 = $r6;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void println(char)
    {
        com.android.internal.util.FastPrintWriter r0;
        char c0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        c0 := @parameter0: char;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void print(char)>(c0);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void println()>();

        return;
    }

    public void println(int)
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>("0");

        return;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void println(int)>(i0);

        return;
    }

    public void println(long)
    {
        com.android.internal.util.FastPrintWriter r0;
        long l0;
        byte $b1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void println(java.lang.String)>("0");

        return;

     label1:
        specialinvoke r0.<java.io.PrintWriter: void println(long)>(l0);

        return;
    }

    public void println(char[])
    {
        com.android.internal.util.FastPrintWriter r0;
        char[] r1;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: char[];

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void print(char[])>(r1);

        virtualinvoke r0.<com.android.internal.util.FastPrintWriter: void println()>();

        return;
    }

    protected void setError()
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

     label1:
        r0.<com.android.internal.util.FastPrintWriter: boolean mIoError> = 1;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void write(int)
    {
        com.android.internal.util.FastPrintWriter r0;
        int i0;
        java.lang.Object r1;
        char c1;
        java.lang.Throwable r3, $r5;
        java.io.IOException $r4;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        i0 := @parameter0: int;

        r1 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r1;

        c1 = (char) i0;

     label1:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char)>(c1);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

     label5:
        exitmonitor r1;

     label6:
        throw r3;

     label7:
        $r4 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void write(java.lang.String)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Throwable r4, $r6;
        int $i0;
        java.io.IOException $r5;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r2;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>(r1, 0, $i0);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        r4 = $r6;

     label5:
        exitmonitor r2;

     label6:
        throw r4;

     label7:
        $r5 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void write(java.lang.String, int, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        java.lang.String r1;
        int i0, i1;
        java.lang.Object r2;
        java.lang.Throwable r4, $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(java.lang.String,int,int)>(r1, i0, i1);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r4 = $r5;

     label5:
        exitmonitor r2;

     label6:
        throw r4;

     label7:
        $r6 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void write(char[], int, int)
    {
        com.android.internal.util.FastPrintWriter r0;
        char[] r1;
        int i0, i1;
        java.lang.Object r2;
        java.lang.Throwable r4, $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.internal.util.FastPrintWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<com.android.internal.util.FastPrintWriter: java.lang.Object lock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.internal.util.FastPrintWriter: void appendLocked(char[],int,int)>(r1, i0, i1);

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r4 = $r5;

     label5:
        exitmonitor r2;

     label6:
        throw r4;

     label7:
        $r6 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
