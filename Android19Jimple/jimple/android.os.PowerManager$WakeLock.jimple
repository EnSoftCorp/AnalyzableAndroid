public final class android.os.PowerManager$WakeLock extends java.lang.Object
{
    private int mCount;
    private final int mFlags;
    private boolean mHeld;
    private final java.lang.String mPackageName;
    private boolean mRefCounted;
    private final java.lang.Runnable mReleaser;
    private final java.lang.String mTag;
    private final android.os.IBinder mToken;
    private android.os.WorkSource mWorkSource;
    final android.os.PowerManager this$0;

    void <init>(android.os.PowerManager, int, java.lang.String, java.lang.String)
    {
        android.os.PowerManager$WakeLock r0;
        android.os.PowerManager r1;
        int i0;
        java.lang.String r2, r3;
        android.os.PowerManager$WakeLock$1 $r4;
        android.os.Binder $r5;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 := @parameter0: android.os.PowerManager;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.os.PowerManager$WakeLock: boolean mRefCounted> = 1;

        $r4 = new android.os.PowerManager$WakeLock$1;

        specialinvoke $r4.<android.os.PowerManager$WakeLock$1: void <init>(android.os.PowerManager$WakeLock)>(r0);

        r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser> = $r4;

        r0.<android.os.PowerManager$WakeLock: int mFlags> = i0;

        r0.<android.os.PowerManager$WakeLock: java.lang.String mTag> = r2;

        r0.<android.os.PowerManager$WakeLock: java.lang.String mPackageName> = r3;

        $r5 = new android.os.Binder;

        specialinvoke $r5.<android.os.Binder: void <init>()>();

        r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken> = $r5;

        return;
    }

    private void acquireLocked()
    {
        android.os.PowerManager$WakeLock r0;
        int i0, $i1, $i2;
        boolean $z0;
        android.os.PowerManager $r2, $r5;
        java.lang.Runnable $r3;
        android.os.Handler $r4;
        android.os.WorkSource $r6;
        java.lang.String $r7, $r8;
        android.os.IBinder $r9;
        android.os.IPowerManager $r10;
        android.os.RemoteException $r11;

        r0 := @this: android.os.PowerManager$WakeLock;

        $z0 = r0.<android.os.PowerManager$WakeLock: boolean mRefCounted>;

        if $z0 == 0 goto label1;

        i0 = r0.<android.os.PowerManager$WakeLock: int mCount>;

        $i2 = i0 + 1;

        r0.<android.os.PowerManager$WakeLock: int mCount> = $i2;

        if i0 != 0 goto label4;

     label1:
        $r2 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r4 = $r2.<android.os.PowerManager: android.os.Handler mHandler>;

        $r3 = r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

     label2:
        $r5 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r10 = $r5.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r9 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        $i1 = r0.<android.os.PowerManager$WakeLock: int mFlags>;

        $r8 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        $r7 = r0.<android.os.PowerManager$WakeLock: java.lang.String mPackageName>;

        $r6 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        interfaceinvoke $r10.<android.os.IPowerManager: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource)>($r9, $i1, $r8, $r7, $r6);

     label3:
        r0.<android.os.PowerManager$WakeLock: boolean mHeld> = 1;

     label4:
        return;

     label5:
        $r11 := @caughtexception;

        goto label3;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public void acquire()
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.os.PowerManager$WakeLock: void acquireLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void acquire(long)
    {
        android.os.PowerManager$WakeLock r0;
        long l0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r6;
        android.os.PowerManager $r3;
        java.lang.Runnable $r4;
        android.os.Handler $r5;

        r0 := @this: android.os.PowerManager$WakeLock;

        l0 := @parameter0: long;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        specialinvoke r0.<android.os.PowerManager$WakeLock: void acquireLocked()>();

        $r3 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r5 = $r3.<android.os.PowerManager: android.os.Handler mHandler>;

        $r4 = r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser>;

        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, l0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1, $r11;
        java.lang.Throwable r2, $r12;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        android.os.PowerManager $r9;
        android.os.IPowerManager $r10;
        android.os.RemoteException $r13;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        $z0 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        if $z0 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock finalized while still held: ");

        $r6 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("PowerManager", $r8);

     label2:
        $r9 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r10 = $r9.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r11 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        interfaceinvoke $r10.<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>($r11, 0);

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r12 := @caughtexception;

        r2 = $r12;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

     label8:
        $r13 := @caughtexception;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch android.os.RemoteException from label2 to label3 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean isHeld()
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r3;
        boolean z0;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        z0 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void release()
    {
        android.os.PowerManager$WakeLock r0;

        r0 := @this: android.os.PowerManager$WakeLock;

        virtualinvoke r0.<android.os.PowerManager$WakeLock: void release(int)>(0);

        return;
    }

    public void release(int)
    {
        android.os.PowerManager$WakeLock r0;
        int i0, i1, $i2, $i3;
        android.os.IBinder r1, $r13;
        java.lang.Throwable r2, $r16;
        boolean z0, $z1;
        android.os.PowerManager $r4, $r14;
        java.lang.Runnable $r5;
        android.os.Handler $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8, $r10, $r12;
        java.lang.String $r9, $r11;
        android.os.IPowerManager $r15;
        android.os.RemoteException $r17;

        r0 := @this: android.os.PowerManager$WakeLock;

        i0 := @parameter0: int;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label01:
        $z1 = r0.<android.os.PowerManager$WakeLock: boolean mRefCounted>;

        if $z1 == 0 goto label03;

        $i3 = r0.<android.os.PowerManager$WakeLock: int mCount>;

        i1 = -1 + $i3;

        r0.<android.os.PowerManager$WakeLock: int mCount> = i1;

     label02:
        if i1 != 0 goto label07;

     label03:
        $r4 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r6 = $r4.<android.os.PowerManager: android.os.Handler mHandler>;

        $r5 = r0.<android.os.PowerManager$WakeLock: java.lang.Runnable mReleaser>;

        virtualinvoke $r6.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r5);

        z0 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

     label04:
        if z0 == 0 goto label07;

     label05:
        $r14 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r15 = $r14.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r13 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        interfaceinvoke $r15.<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>($r13, i0);

     label06:
        r0.<android.os.PowerManager$WakeLock: boolean mHeld> = 0;

     label07:
        $i2 = r0.<android.os.PowerManager$WakeLock: int mCount>;

        if $i2 >= 0 goto label11;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock under-locked ");

        $r9 = r0.<android.os.PowerManager$WakeLock: java.lang.String mTag>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label08:
        $r16 := @caughtexception;

        r2 = $r16;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

     label11:
        exitmonitor r1;

     label12:
        return;

     label13:
        $r17 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.os.RemoteException from label05 to label06 with label13;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    public void setReferenceCounted(boolean)
    {
        android.os.PowerManager$WakeLock r0;
        boolean z0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: android.os.PowerManager$WakeLock;

        z0 := @parameter0: boolean;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        r0.<android.os.PowerManager$WakeLock: boolean mRefCounted> = z0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setWorkSource(android.os.WorkSource)
    {
        android.os.PowerManager$WakeLock r0;
        android.os.WorkSource r1, $r5, $r6, $r8, $r11, $r12, $r13;
        android.os.IBinder r2, $r9;
        java.lang.Throwable r3, $r14;
        boolean z0, z1;
        android.os.PowerManager $r7;
        android.os.IPowerManager $r10;
        int $i0;
        android.os.RemoteException $r15;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 := @parameter0: android.os.WorkSource;

        r2 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r2;

        if r1 == null goto label03;

     label01:
        $i0 = virtualinvoke r1.<android.os.WorkSource: int size()>();

        if $i0 != 0 goto label03;

     label02:
        r1 = null;

     label03:
        if r1 != null goto label13;

     label04:
        $r13 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        if $r13 == null goto label25;

     label05:
        z0 = 1;

     label06:
        r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource> = null;

     label07:
        if z0 == 0 goto label11;

     label08:
        z1 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

     label09:
        if z1 == 0 goto label11;

     label10:
        $r7 = r0.<android.os.PowerManager$WakeLock: android.os.PowerManager this$0>;

        $r10 = $r7.<android.os.PowerManager: android.os.IPowerManager mService>;

        $r9 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        $r8 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        interfaceinvoke $r10.<android.os.IPowerManager: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource)>($r9, $r8);

     label11:
        exitmonitor r2;

     label12:
        return;

     label13:
        $r5 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        if $r5 != null goto label20;

     label14:
        z0 = 1;

     label15:
        $r11 = new android.os.WorkSource;

        specialinvoke $r11.<android.os.WorkSource: void <init>(android.os.WorkSource)>(r1);

        r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource> = $r11;

     label16:
        goto label07;

     label17:
        $r14 := @caughtexception;

        r3 = $r14;

     label18:
        exitmonitor r2;

     label19:
        throw r3;

     label20:
        $r6 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        z0 = virtualinvoke $r6.<android.os.WorkSource: boolean diff(android.os.WorkSource)>(r1);

     label21:
        if z0 == 0 goto label07;

     label22:
        $r12 = r0.<android.os.PowerManager$WakeLock: android.os.WorkSource mWorkSource>;

        virtualinvoke $r12.<android.os.WorkSource: void set(android.os.WorkSource)>(r1);

     label23:
        goto label07;

     label24:
        $r15 := @caughtexception;

        goto label11;

     label25:
        z0 = 0;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch android.os.RemoteException from label10 to label11 with label24;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label20 to label21 with label17;
        catch java.lang.Throwable from label22 to label23 with label17;
    }

    public java.lang.String toString()
    {
        android.os.PowerManager$WakeLock r0;
        android.os.IBinder r1;
        java.lang.Throwable r2, $r13;
        java.lang.String r3, $r6;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.os.PowerManager$WakeLock;

        r1 = r0.<android.os.PowerManager$WakeLock: android.os.IBinder mToken>;

        entermonitor r1;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WakeLock{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" held=");

        $z0 = r0.<android.os.PowerManager$WakeLock: boolean mHeld>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", refCount=");

        $i1 = r0.<android.os.PowerManager$WakeLock: int mCount>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        r3 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r13 := @caughtexception;

        r2 = $r13;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
