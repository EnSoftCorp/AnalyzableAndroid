public class com.android.internal.widget.FaceUnlockView extends android.widget.RelativeLayout
{
    private static final java.lang.String TAG;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.FaceUnlockView r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.FaceUnlockView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.FaceUnlockView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.FaceUnlockView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.internal.widget.FaceUnlockView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    private int resolveMeasured(int, int)
    {
        com.android.internal.widget.FaceUnlockView r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: com.android.internal.widget.FaceUnlockView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        lookupswitch($i3)
        {
            case -2147483648: goto label3;
            case 0: goto label2;
            default: goto label1;
        };

     label1:
        return i2;

     label2:
        return i1;

     label3:
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(i2, i1);

        return $i4;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.FaceUnlockView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;

        r0 := @this: com.android.internal.widget.FaceUnlockView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<com.android.internal.widget.FaceUnlockView: int getSuggestedMinimumWidth()>();

        i3 = virtualinvoke r0.<com.android.internal.widget.FaceUnlockView: int getSuggestedMinimumHeight()>();

        $i5 = specialinvoke r0.<com.android.internal.widget.FaceUnlockView: int resolveMeasured(int,int)>(i0, i2);

        $i6 = specialinvoke r0.<com.android.internal.widget.FaceUnlockView: int resolveMeasured(int,int)>(i1, i3);

        i4 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        $i7 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, -2147483648);

        $i8 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, -2147483648);

        specialinvoke r0.<android.widget.RelativeLayout: void onMeasure(int,int)>($i7, $i8);

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.FaceUnlockView: java.lang.String TAG> = "FaceUnlockView";

        return;
    }
}
