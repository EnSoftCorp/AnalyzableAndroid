public final class android.view.WindowManagerImpl extends java.lang.Object implements android.view.WindowManager
{
    private final android.view.Display mDisplay;
    private final android.view.WindowManagerGlobal mGlobal;
    private final android.view.Window mParentWindow;

    public void <init>(android.view.Display)
    {
        android.view.WindowManagerImpl r0;
        android.view.Display r1;

        r0 := @this: android.view.WindowManagerImpl;

        r1 := @parameter0: android.view.Display;

        specialinvoke r0.<android.view.WindowManagerImpl: void <init>(android.view.Display,android.view.Window)>(r1, null);

        return;
    }

    private void <init>(android.view.Display, android.view.Window)
    {
        android.view.WindowManagerImpl r0;
        android.view.Display r1;
        android.view.Window r2;
        android.view.WindowManagerGlobal $r3;

        r0 := @this: android.view.WindowManagerImpl;

        r1 := @parameter0: android.view.Display;

        r2 := @parameter1: android.view.Window;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        r0.<android.view.WindowManagerImpl: android.view.WindowManagerGlobal mGlobal> = $r3;

        r0.<android.view.WindowManagerImpl: android.view.Display mDisplay> = r1;

        r0.<android.view.WindowManagerImpl: android.view.Window mParentWindow> = r2;

        return;
    }

    public void addView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.WindowManagerImpl r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;
        android.view.Display $r4;
        android.view.WindowManagerGlobal $r5;

        r0 := @this: android.view.WindowManagerImpl;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r5 = r0.<android.view.WindowManagerImpl: android.view.WindowManagerGlobal mGlobal>;

        $r4 = r0.<android.view.WindowManagerImpl: android.view.Display mDisplay>;

        $r3 = r0.<android.view.WindowManagerImpl: android.view.Window mParentWindow>;

        virtualinvoke $r5.<android.view.WindowManagerGlobal: void addView(android.view.View,android.view.ViewGroup$LayoutParams,android.view.Display,android.view.Window)>(r1, r2, $r4, $r3);

        return;
    }

    public android.view.WindowManagerImpl createLocalWindowManager(android.view.Window)
    {
        android.view.WindowManagerImpl r0, $r2;
        android.view.Window r1;
        android.view.Display $r3;

        r0 := @this: android.view.WindowManagerImpl;

        r1 := @parameter0: android.view.Window;

        $r2 = new android.view.WindowManagerImpl;

        $r3 = r0.<android.view.WindowManagerImpl: android.view.Display mDisplay>;

        specialinvoke $r2.<android.view.WindowManagerImpl: void <init>(android.view.Display,android.view.Window)>($r3, r1);

        return $r2;
    }

    public android.view.WindowManagerImpl createPresentationWindowManager(android.view.Display)
    {
        android.view.WindowManagerImpl r0, $r2;
        android.view.Display r1;
        android.view.Window $r3;

        r0 := @this: android.view.WindowManagerImpl;

        r1 := @parameter0: android.view.Display;

        $r2 = new android.view.WindowManagerImpl;

        $r3 = r0.<android.view.WindowManagerImpl: android.view.Window mParentWindow>;

        specialinvoke $r2.<android.view.WindowManagerImpl: void <init>(android.view.Display,android.view.Window)>(r1, $r3);

        return $r2;
    }

    public android.view.Display getDefaultDisplay()
    {
        android.view.WindowManagerImpl r0;
        android.view.Display $r1;

        r0 := @this: android.view.WindowManagerImpl;

        $r1 = r0.<android.view.WindowManagerImpl: android.view.Display mDisplay>;

        return $r1;
    }

    public void removeView(android.view.View)
    {
        android.view.WindowManagerImpl r0;
        android.view.View r1;
        android.view.WindowManagerGlobal $r2;

        r0 := @this: android.view.WindowManagerImpl;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.view.WindowManagerImpl: android.view.WindowManagerGlobal mGlobal>;

        virtualinvoke $r2.<android.view.WindowManagerGlobal: void removeView(android.view.View,boolean)>(r1, 0);

        return;
    }

    public void removeViewImmediate(android.view.View)
    {
        android.view.WindowManagerImpl r0;
        android.view.View r1;
        android.view.WindowManagerGlobal $r2;

        r0 := @this: android.view.WindowManagerImpl;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.view.WindowManagerImpl: android.view.WindowManagerGlobal mGlobal>;

        virtualinvoke $r2.<android.view.WindowManagerGlobal: void removeView(android.view.View,boolean)>(r1, 1);

        return;
    }

    public void updateViewLayout(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.WindowManagerImpl r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.WindowManagerGlobal $r3;

        r0 := @this: android.view.WindowManagerImpl;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = r0.<android.view.WindowManagerImpl: android.view.WindowManagerGlobal mGlobal>;

        virtualinvoke $r3.<android.view.WindowManagerGlobal: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }
}
