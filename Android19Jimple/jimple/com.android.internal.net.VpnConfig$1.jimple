final class com.android.internal.net.VpnConfig$1 extends java.lang.Object implements android.os.Parcelable$Creator
{

    void <init>()
    {
        com.android.internal.net.VpnConfig$1 r0;

        r0 := @this: com.android.internal.net.VpnConfig$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.android.internal.net.VpnConfig createFromParcel(android.os.Parcel)
    {
        com.android.internal.net.VpnConfig$1 r0;
        android.os.Parcel r1;
        com.android.internal.net.VpnConfig r2, $r3;
        boolean z0;
        java.lang.String $r4, $r5, $r6;
        int $i0, $i2;
        android.os.Parcelable$Creator $r7, $r9;
        java.util.List $r8, $r10;
        java.util.ArrayList $r11, $r12;
        android.os.Parcelable $r13;
        long $l1;
        android.app.PendingIntent $r14;

        r0 := @this: com.android.internal.net.VpnConfig$1;

        r1 := @parameter0: android.os.Parcel;

        $r3 = new com.android.internal.net.VpnConfig;

        specialinvoke $r3.<com.android.internal.net.VpnConfig: void <init>()>();

        r2 = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.net.VpnConfig: java.lang.String user> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.net.VpnConfig: java.lang.String interfaze> = $r5;

        $r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r2.<com.android.internal.net.VpnConfig: java.lang.String session> = $r6;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r2.<com.android.internal.net.VpnConfig: int mtu> = $i0;

        $r8 = r2.<com.android.internal.net.VpnConfig: java.util.List addresses>;

        $r7 = <android.net.LinkAddress: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>($r8, $r7);

        $r10 = r2.<com.android.internal.net.VpnConfig: java.util.List routes>;

        $r9 = <android.net.RouteInfo: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>($r10, $r9);

        $r11 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r2.<com.android.internal.net.VpnConfig: java.util.List dnsServers> = $r11;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.util.ArrayList createStringArrayList()>();

        r2.<com.android.internal.net.VpnConfig: java.util.List searchDomains> = $r12;

        $r13 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r14 = (android.app.PendingIntent) $r13;

        r2.<com.android.internal.net.VpnConfig: android.app.PendingIntent configureIntent> = $r14;

        $l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r2.<com.android.internal.net.VpnConfig: long startTime> = $l1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label2;

        z0 = 1;

     label1:
        r2.<com.android.internal.net.VpnConfig: boolean legacy> = z0;

        return r2;

     label2:
        z0 = 0;

        goto label1;
    }

    public volatile java.lang.Object createFromParcel(android.os.Parcel)
    {
        com.android.internal.net.VpnConfig$1 r0;
        android.os.Parcel r1;
        com.android.internal.net.VpnConfig $r2;

        r0 := @this: com.android.internal.net.VpnConfig$1;

        r1 := @parameter0: android.os.Parcel;

        $r2 = virtualinvoke r0.<com.android.internal.net.VpnConfig$1: com.android.internal.net.VpnConfig createFromParcel(android.os.Parcel)>(r1);

        return $r2;
    }

    public com.android.internal.net.VpnConfig[] newArray(int)
    {
        com.android.internal.net.VpnConfig$1 r0;
        int i0;
        com.android.internal.net.VpnConfig[] $r1;

        r0 := @this: com.android.internal.net.VpnConfig$1;

        i0 := @parameter0: int;

        $r1 = newarray (com.android.internal.net.VpnConfig)[i0];

        return $r1;
    }

    public volatile java.lang.Object[] newArray(int)
    {
        com.android.internal.net.VpnConfig$1 r0;
        int i0;
        com.android.internal.net.VpnConfig[] $r1;

        r0 := @this: com.android.internal.net.VpnConfig$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.internal.net.VpnConfig$1: com.android.internal.net.VpnConfig[] newArray(int)>(i0);

        return $r1;
    }
}
