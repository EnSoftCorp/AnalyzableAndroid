public final class android.content.res.Resources$Theme extends java.lang.Object
{
    private final android.content.res.AssetManager mAssets;
    private final int mTheme;
    final android.content.res.Resources this$0;

    void <init>(android.content.res.Resources)
    {
        android.content.res.Resources$Theme r0;
        android.content.res.Resources r1;
        android.content.res.AssetManager $r2, $r3;
        int $i0;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: android.content.res.Resources;

        r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        r0.<android.content.res.Resources$Theme: android.content.res.AssetManager mAssets> = $r2;

        $r3 = r0.<android.content.res.Resources$Theme: android.content.res.AssetManager mAssets>;

        $i0 = virtualinvoke $r3.<android.content.res.AssetManager: int createTheme()>();

        r0.<android.content.res.Resources$Theme: int mTheme> = $i0;

        return;
    }

    public void applyStyle(int, boolean)
    {
        android.content.res.Resources$Theme r0;
        int i0, $i1;
        boolean z0;

        r0 := @this: android.content.res.Resources$Theme;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = r0.<android.content.res.Resources$Theme: int mTheme>;

        staticinvoke <android.content.res.AssetManager: void applyThemeStyle(int,int,boolean)>($i1, i0, z0);

        return;
    }

    public void dump(int, java.lang.String, java.lang.String)
    {
        android.content.res.Resources$Theme r0;
        int i0, $i1;
        java.lang.String r1, r2;

        r0 := @this: android.content.res.Resources$Theme;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $i1 = r0.<android.content.res.Resources$Theme: int mTheme>;

        staticinvoke <android.content.res.AssetManager: void dumpTheme(int,int,java.lang.String,java.lang.String)>($i1, i0, r1, r2);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.res.Resources$Theme r0;
        int $i0;
        android.content.res.AssetManager $r1;

        r0 := @this: android.content.res.Resources$Theme;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        $r1 = r0.<android.content.res.Resources$Theme: android.content.res.AssetManager mAssets>;

        $i0 = r0.<android.content.res.Resources$Theme: int mTheme>;

        virtualinvoke $r1.<android.content.res.AssetManager: void releaseTheme(int)>($i0);

        return;
    }

    public android.content.res.TypedArray obtainStyledAttributes(int, int[]) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources$Theme r0;
        int i0, i1, $i2;
        int[] r1, $r4, $r5;
        android.content.res.TypedArray r2;
        android.content.res.Resources $r3;

        r0 := @this: android.content.res.Resources$Theme;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        i1 = lengthof r1;

        $r3 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        r2 = staticinvoke <android.content.res.Resources: android.content.res.TypedArray access$000(android.content.res.Resources,int)>($r3, i1);

        r2.<android.content.res.TypedArray: int[] mRsrcs> = r1;

        $i2 = r0.<android.content.res.Resources$Theme: int mTheme>;

        $r5 = r2.<android.content.res.TypedArray: int[] mData>;

        $r4 = r2.<android.content.res.TypedArray: int[] mIndices>;

        staticinvoke <android.content.res.AssetManager: boolean applyStyle(int,int,int,int,int[],int[],int[])>($i2, 0, i0, 0, r1, $r5, $r4);

        return r2;
    }

    public android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet, int[], int, int)
    {
        android.content.res.Resources$Theme r0;
        android.util.AttributeSet r1;
        int[] r2, $r6, $r7;
        int i0, i1, i2, i3, i4;
        android.content.res.TypedArray r3;
        android.content.res.XmlBlock$Parser r4;
        android.content.res.Resources $r5;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: android.util.AttributeSet;

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = lengthof r2;

        $r5 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        r3 = staticinvoke <android.content.res.Resources: android.content.res.TypedArray access$000(android.content.res.Resources,int)>($r5, i2);

        r4 = (android.content.res.XmlBlock$Parser) r1;

        i3 = r0.<android.content.res.Resources$Theme: int mTheme>;

        if r4 == null goto label2;

        i4 = r4.<android.content.res.XmlBlock$Parser: int mParseState>;

     label1:
        $r7 = r3.<android.content.res.TypedArray: int[] mData>;

        $r6 = r3.<android.content.res.TypedArray: int[] mIndices>;

        staticinvoke <android.content.res.AssetManager: boolean applyStyle(int,int,int,int,int[],int[],int[])>(i3, i0, i1, i4, r2, $r7, $r6);

        r3.<android.content.res.TypedArray: int[] mRsrcs> = r2;

        r3.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml> = r4;

        return r3;

     label2:
        i4 = 0;

        goto label1;
    }

    public android.content.res.TypedArray obtainStyledAttributes(int[])
    {
        android.content.res.Resources$Theme r0;
        int[] r1, $r4, $r5;
        int i0, $i1;
        android.content.res.TypedArray r2;
        android.content.res.Resources $r3;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: int[];

        i0 = lengthof r1;

        $r3 = r0.<android.content.res.Resources$Theme: android.content.res.Resources this$0>;

        r2 = staticinvoke <android.content.res.Resources: android.content.res.TypedArray access$000(android.content.res.Resources,int)>($r3, i0);

        r2.<android.content.res.TypedArray: int[] mRsrcs> = r1;

        $i1 = r0.<android.content.res.Resources$Theme: int mTheme>;

        $r5 = r2.<android.content.res.TypedArray: int[] mData>;

        $r4 = r2.<android.content.res.TypedArray: int[] mIndices>;

        staticinvoke <android.content.res.AssetManager: boolean applyStyle(int,int,int,int,int[],int[],int[])>($i1, 0, 0, 0, r1, $r5, $r4);

        return r2;
    }

    public boolean resolveAttribute(int, android.util.TypedValue, boolean)
    {
        android.content.res.Resources$Theme r0;
        int i0, $i1;
        android.util.TypedValue r1;
        boolean z0, $z1;
        android.content.res.AssetManager $r2;

        r0 := @this: android.content.res.Resources$Theme;

        i0 := @parameter0: int;

        r1 := @parameter1: android.util.TypedValue;

        z0 := @parameter2: boolean;

        $r2 = r0.<android.content.res.Resources$Theme: android.content.res.AssetManager mAssets>;

        $i1 = r0.<android.content.res.Resources$Theme: int mTheme>;

        $z1 = virtualinvoke $r2.<android.content.res.AssetManager: boolean getThemeValue(int,int,android.util.TypedValue,boolean)>($i1, i0, r1, z0);

        return $z1;
    }

    public void setTo(android.content.res.Resources$Theme)
    {
        android.content.res.Resources$Theme r0, r1;
        int $i0, $i1;

        r0 := @this: android.content.res.Resources$Theme;

        r1 := @parameter0: android.content.res.Resources$Theme;

        $i1 = r0.<android.content.res.Resources$Theme: int mTheme>;

        $i0 = r1.<android.content.res.Resources$Theme: int mTheme>;

        staticinvoke <android.content.res.AssetManager: void copyTheme(int,int)>($i1, $i0);

        return;
    }
}
