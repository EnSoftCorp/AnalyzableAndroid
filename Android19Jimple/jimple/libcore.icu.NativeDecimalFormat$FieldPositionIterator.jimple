class libcore.icu.NativeDecimalFormat$FieldPositionIterator extends java.lang.Object
{
    private static java.text.Format$Field[] fields;
    private int[] data;
    private int pos;

    static void <clinit>()
    {
        java.text.Format$Field[] r0;
        java.text.NumberFormat$Field $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 = newarray (java.text.Format$Field)[11];

        $r1 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field INTEGER>;

        r0[0] = $r1;

        $r2 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field FRACTION>;

        r0[1] = $r2;

        $r3 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field DECIMAL_SEPARATOR>;

        r0[2] = $r3;

        $r4 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field EXPONENT_SYMBOL>;

        r0[3] = $r4;

        $r5 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field EXPONENT_SIGN>;

        r0[4] = $r5;

        $r6 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field EXPONENT>;

        r0[5] = $r6;

        $r7 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field GROUPING_SEPARATOR>;

        r0[6] = $r7;

        $r8 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field CURRENCY>;

        r0[7] = $r8;

        $r9 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field PERCENT>;

        r0[8] = $r9;

        $r10 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field PERMILLE>;

        r0[9] = $r10;

        $r11 = <java.text.NumberFormat$Field: java.text.NumberFormat$Field SIGN>;

        r0[10] = $r11;

        <libcore.icu.NativeDecimalFormat$FieldPositionIterator: java.text.Format$Field[] fields> = r0;

        return;
    }

    private void <init>()
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;

        r0 := @this: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos> = -3;

        return;
    }

    void <init>(libcore.icu.NativeDecimalFormat$1)
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        libcore.icu.NativeDecimalFormat$1 r1;

        r0 := @this: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        r1 := @parameter0: libcore.icu.NativeDecimalFormat$1;

        specialinvoke r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: void <init>()>();

        return;
    }

    static void access$000(libcore.icu.NativeDecimalFormat$FieldPositionIterator, java.text.FieldPosition)
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        java.text.FieldPosition r1;

        r0 := @parameter0: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        r1 := @parameter1: java.text.FieldPosition;

        staticinvoke <libcore.icu.NativeDecimalFormat$FieldPositionIterator: void setFieldPosition(libcore.icu.NativeDecimalFormat$FieldPositionIterator,java.text.FieldPosition)>(r0, r1);

        return;
    }

    private void checkValid()
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        int[] $r1, $r3;
        java.util.NoSuchElementException $r2;
        int $i0, $i1, $i2;

        r0 := @this: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        $r1 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data>;

        if $r1 == null goto label1;

        $i0 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos>;

        if $i0 < 0 goto label1;

        $i2 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos>;

        $r3 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data>;

        $i1 = lengthof $r3;

        if $i2 != $i1 goto label2;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label2:
        return;
    }

    public static libcore.icu.NativeDecimalFormat$FieldPositionIterator forFieldPosition(java.text.FieldPosition)
    {
        java.text.FieldPosition r0;
        int $i0;
        libcore.icu.NativeDecimalFormat$FieldPositionIterator $r1;

        r0 := @parameter0: java.text.FieldPosition;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.text.FieldPosition: int getField()>();

        if $i0 == -1 goto label1;

        $r1 = new libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        specialinvoke $r1.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: void <init>()>();

        return $r1;

     label1:
        return null;
    }

    private static int getNativeFieldPositionId(java.text.FieldPosition)
    {
        java.text.FieldPosition r0;
        int i0, i1, $i2;
        java.text.Format$Field r1, $r4;
        java.text.Format$Field[] $r2, $r3;
        boolean $z0;

        r0 := @parameter0: java.text.FieldPosition;

        i0 = virtualinvoke r0.<java.text.FieldPosition: int getField()>();

        if i0 < -1 goto label1;

        if i0 <= 1 goto label2;

     label1:
        i0 = -1;

     label2:
        if i0 != -1 goto label4;

        r1 = virtualinvoke r0.<java.text.FieldPosition: java.text.Format$Field getFieldAttribute()>();

        if r1 == null goto label4;

        i1 = 0;

     label3:
        $r2 = <libcore.icu.NativeDecimalFormat$FieldPositionIterator: java.text.Format$Field[] fields>;

        $i2 = lengthof $r2;

        if i1 >= $i2 goto label4;

        $r3 = <libcore.icu.NativeDecimalFormat$FieldPositionIterator: java.text.Format$Field[] fields>;

        $r4 = $r3[i1];

        $z0 = virtualinvoke $r4.<java.text.Format$Field: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label5;

        i0 = i1;

     label4:
        return i0;

     label5:
        i1 = i1 + 1;

        goto label3;
    }

    private void setData(int[])
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        int[] r1;

        r0 := @this: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        r1 := @parameter0: int[];

        r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data> = r1;

        r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos> = -3;

        return;
    }

    private static void setFieldPosition(libcore.icu.NativeDecimalFormat$FieldPositionIterator, java.text.FieldPosition)
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        java.text.FieldPosition r1;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        r1 := @parameter1: java.text.FieldPosition;

        if r0 == null goto label2;

        if r1 == null goto label2;

        i0 = staticinvoke <libcore.icu.NativeDecimalFormat$FieldPositionIterator: int getNativeFieldPositionId(java.text.FieldPosition)>(r1);

        if i0 == -1 goto label2;

     label1:
        $z0 = virtualinvoke r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: boolean next()>();

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int fieldId()>();

        if $i1 != i0 goto label1;

        $i2 = virtualinvoke r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int start()>();

        virtualinvoke r1.<java.text.FieldPosition: void setBeginIndex(int)>($i2);

        $i3 = virtualinvoke r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int limit()>();

        virtualinvoke r1.<java.text.FieldPosition: void setEndIndex(int)>($i3);

     label2:
        return;
    }

    public java.text.Format$Field field()
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        int $i0, $i1;
        int[] $r1;
        java.text.Format$Field[] $r2;
        java.text.Format$Field $r3;

        r0 := @this: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        specialinvoke r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: void checkValid()>();

        $r2 = <libcore.icu.NativeDecimalFormat$FieldPositionIterator: java.text.Format$Field[] fields>;

        $r1 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data>;

        $i0 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos>;

        $i1 = $r1[$i0];

        $r3 = $r2[$i1];

        return $r3;
    }

    public int fieldId()
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        int $i0, $i1;
        int[] $r1;

        r0 := @this: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        $r1 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data>;

        $i0 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos>;

        $i1 = $r1[$i0];

        return $i1;
    }

    public int limit()
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        specialinvoke r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: void checkValid()>();

        $r1 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data>;

        $i0 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos>;

        $i1 = 2 + $i0;

        $i2 = $r1[$i1];

        return $i2;
    }

    public boolean next()
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        int[] $r1, $r3, $r4;
        java.util.NoSuchElementException $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        $r1 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data>;

        if $r1 == null goto label1;

        $i1 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos>;

        $r3 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data>;

        $i0 = lengthof $r3;

        if $i1 != $i0 goto label2;

     label1:
        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label2:
        $i2 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos>;

        $i3 = 3 + $i2;

        r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos> = $i3;

        $i5 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos>;

        $r4 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data>;

        $i4 = lengthof $r4;

        if $i5 >= $i4 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int start()
    {
        libcore.icu.NativeDecimalFormat$FieldPositionIterator r0;
        int $i0, $i1, $i2;
        int[] $r1;

        r0 := @this: libcore.icu.NativeDecimalFormat$FieldPositionIterator;

        specialinvoke r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: void checkValid()>();

        $r1 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int[] data>;

        $i0 = r0.<libcore.icu.NativeDecimalFormat$FieldPositionIterator: int pos>;

        $i1 = 1 + $i0;

        $i2 = $r1[$i1];

        return $i2;
    }
}
