class com.android.internal.telephony.test.CallInfo extends java.lang.Object
{
    boolean mIsMT;
    boolean mIsMpty;
    java.lang.String mNumber;
    com.android.internal.telephony.test.CallInfo$State mState;
    int mTOA;

    void <init>(boolean, com.android.internal.telephony.test.CallInfo$State, boolean, java.lang.String)
    {
        com.android.internal.telephony.test.CallInfo r0;
        boolean z0, z1;
        com.android.internal.telephony.test.CallInfo$State r1;
        java.lang.String r2;
        int $i0;
        char $c1;

        r0 := @this: com.android.internal.telephony.test.CallInfo;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.internal.telephony.test.CallInfo$State;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.telephony.test.CallInfo: boolean mIsMT> = z0;

        r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State mState> = r1;

        r0.<com.android.internal.telephony.test.CallInfo: boolean mIsMpty> = z1;

        r0.<com.android.internal.telephony.test.CallInfo: java.lang.String mNumber> = r2;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $c1 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c1 != 43 goto label1;

        r0.<com.android.internal.telephony.test.CallInfo: int mTOA> = 145;

        return;

     label1:
        r0.<com.android.internal.telephony.test.CallInfo: int mTOA> = 129;

        return;
    }

    static com.android.internal.telephony.test.CallInfo createIncomingCall(java.lang.String)
    {
        java.lang.String r0;
        com.android.internal.telephony.test.CallInfo $r1;
        com.android.internal.telephony.test.CallInfo$State $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new com.android.internal.telephony.test.CallInfo;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State INCOMING>;

        specialinvoke $r1.<com.android.internal.telephony.test.CallInfo: void <init>(boolean,com.android.internal.telephony.test.CallInfo$State,boolean,java.lang.String)>(1, $r2, 0, r0);

        return $r1;
    }

    static com.android.internal.telephony.test.CallInfo createOutgoingCall(java.lang.String)
    {
        java.lang.String r0;
        com.android.internal.telephony.test.CallInfo $r1;
        com.android.internal.telephony.test.CallInfo$State $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new com.android.internal.telephony.test.CallInfo;

        $r2 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State DIALING>;

        specialinvoke $r1.<com.android.internal.telephony.test.CallInfo: void <init>(boolean,com.android.internal.telephony.test.CallInfo$State,boolean,java.lang.String)>(0, $r2, 0, r0);

        return $r1;
    }

    boolean isActiveOrHeld()
    {
        com.android.internal.telephony.test.CallInfo r0;
        com.android.internal.telephony.test.CallInfo$State $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.test.CallInfo;

        $r2 = r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State mState>;

        $r1 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State ACTIVE>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State mState>;

        $r3 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State HOLDING>;

        if $r4 != $r3 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean isConnecting()
    {
        com.android.internal.telephony.test.CallInfo r0;
        com.android.internal.telephony.test.CallInfo$State $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.test.CallInfo;

        $r2 = r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State mState>;

        $r1 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State DIALING>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State mState>;

        $r3 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State ALERTING>;

        if $r4 != $r3 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean isRinging()
    {
        com.android.internal.telephony.test.CallInfo r0;
        com.android.internal.telephony.test.CallInfo$State $r1, $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.test.CallInfo;

        $r2 = r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State mState>;

        $r1 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State INCOMING>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State mState>;

        $r3 = <com.android.internal.telephony.test.CallInfo$State: com.android.internal.telephony.test.CallInfo$State WAITING>;

        if $r4 != $r3 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    java.lang.String toCLCCLine(int)
    {
        com.android.internal.telephony.test.CallInfo r0;
        int i0, $i1, $i2;
        java.lang.StringBuilder r1, r3, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r18;
        java.lang.String r2, r4, $r15, $r17;
        boolean $z0, $z1;
        com.android.internal.telephony.test.CallInfo$State $r10;

        r0 := @this: com.android.internal.telephony.test.CallInfo;

        i0 := @parameter0: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+CLCC: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $z0 = r0.<com.android.internal.telephony.test.CallInfo: boolean mIsMT>;

        if $z0 == 0 goto label3;

        r2 = "1";

     label1:
        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r10 = r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State mState>;

        $i1 = virtualinvoke $r10.<com.android.internal.telephony.test.CallInfo$State: int value()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        r3 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",0,");

        $z1 = r0.<com.android.internal.telephony.test.CallInfo: boolean mIsMpty>;

        if $z1 == 0 goto label4;

        r4 = "1";

     label2:
        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\"");

        $r15 = r0.<com.android.internal.telephony.test.CallInfo: java.lang.String mNumber>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",");

        $i2 = r0.<com.android.internal.telephony.test.CallInfo: int mTOA>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;

     label3:
        r2 = "0";

        goto label1;

     label4:
        r4 = "0";

        goto label2;
    }

    com.android.internal.telephony.DriverCall toDriverCall(int)
    {
        com.android.internal.telephony.test.CallInfo r0;
        int i0, $i1, $i2;
        com.android.internal.telephony.DriverCall r1, $r3;
        com.android.internal.telephony.ATParseEx r2, $r7;
        boolean $z0, $z1;
        com.android.internal.telephony.test.CallInfo$State $r4;
        com.android.internal.telephony.DriverCall$State $r5;
        java.lang.String $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: com.android.internal.telephony.test.CallInfo;

        i0 := @parameter0: int;

        $r3 = new com.android.internal.telephony.DriverCall;

        specialinvoke $r3.<com.android.internal.telephony.DriverCall: void <init>()>();

        r1 = $r3;

        r1.<com.android.internal.telephony.DriverCall: int index> = i0;

        $z0 = r0.<com.android.internal.telephony.test.CallInfo: boolean mIsMT>;

        r1.<com.android.internal.telephony.DriverCall: boolean isMT> = $z0;

     label1:
        $r4 = r0.<com.android.internal.telephony.test.CallInfo: com.android.internal.telephony.test.CallInfo$State mState>;

        $i1 = virtualinvoke $r4.<com.android.internal.telephony.test.CallInfo$State: int value()>();

        $r5 = staticinvoke <com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State stateFromCLCC(int)>($i1);

        r1.<com.android.internal.telephony.DriverCall: com.android.internal.telephony.DriverCall$State state> = $r5;

     label2:
        $z1 = r0.<com.android.internal.telephony.test.CallInfo: boolean mIsMpty>;

        r1.<com.android.internal.telephony.DriverCall: boolean isMpty> = $z1;

        $r6 = r0.<com.android.internal.telephony.test.CallInfo: java.lang.String mNumber>;

        r1.<com.android.internal.telephony.DriverCall: java.lang.String number> = $r6;

        $i2 = r0.<com.android.internal.telephony.test.CallInfo: int mTOA>;

        r1.<com.android.internal.telephony.DriverCall: int TOA> = $i2;

        r1.<com.android.internal.telephony.DriverCall: boolean isVoice> = 1;

        r1.<com.android.internal.telephony.DriverCall: int als> = 0;

        return r1;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("should never happen", r2);

        throw $r8;

        catch com.android.internal.telephony.ATParseEx from label1 to label2 with label3;
    }
}
