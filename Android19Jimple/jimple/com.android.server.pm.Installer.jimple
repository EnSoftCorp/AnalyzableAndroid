public final class com.android.server.pm.Installer extends java.lang.Object
{
    private static final boolean LOCAL_DEBUG;
    private static final java.lang.String TAG;
    byte[] buf;
    int buflen;
    java.io.InputStream mIn;
    java.io.OutputStream mOut;
    android.net.LocalSocket mSocket;

    public void <init>()
    {
        com.android.server.pm.Installer r0;
        byte[] $r1;

        r0 := @this: com.android.server.pm.Installer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[1024];

        r0.<com.android.server.pm.Installer: byte[] buf> = $r1;

        r0.<com.android.server.pm.Installer: int buflen> = 0;

        return;
    }

    private boolean connect()
    {
        com.android.server.pm.Installer r0;
        android.net.LocalSocketAddress r2, $r5;
        android.net.LocalSocket $r3, $r4, $r7, $r8, $r10;
        android.net.LocalSocketAddress$Namespace $r6;
        java.io.InputStream $r9;
        java.io.OutputStream $r11;
        java.io.IOException $r12;

        r0 := @this: com.android.server.pm.Installer;

        $r3 = r0.<com.android.server.pm.Installer: android.net.LocalSocket mSocket>;

        if $r3 == null goto label1;

        return 1;

     label1:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("Installer", "connecting...");

     label2:
        $r4 = new android.net.LocalSocket;

        specialinvoke $r4.<android.net.LocalSocket: void <init>()>();

        r0.<com.android.server.pm.Installer: android.net.LocalSocket mSocket> = $r4;

        $r5 = new android.net.LocalSocketAddress;

        $r6 = <android.net.LocalSocketAddress$Namespace: android.net.LocalSocketAddress$Namespace RESERVED>;

        specialinvoke $r5.<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress$Namespace)>("installd", $r6);

        r2 = $r5;

        $r7 = r0.<com.android.server.pm.Installer: android.net.LocalSocket mSocket>;

        virtualinvoke $r7.<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>(r2);

        $r8 = r0.<com.android.server.pm.Installer: android.net.LocalSocket mSocket>;

        $r9 = virtualinvoke $r8.<android.net.LocalSocket: java.io.InputStream getInputStream()>();

        r0.<com.android.server.pm.Installer: java.io.InputStream mIn> = $r9;

        $r10 = r0.<com.android.server.pm.Installer: android.net.LocalSocket mSocket>;

        $r11 = virtualinvoke $r10.<android.net.LocalSocket: java.io.OutputStream getOutputStream()>();

        r0.<com.android.server.pm.Installer: java.io.OutputStream mOut> = $r11;

     label3:
        return 1;

     label4:
        $r12 := @caughtexception;

        specialinvoke r0.<com.android.server.pm.Installer: void disconnect()>();

        return 0;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private void disconnect()
    {
        com.android.server.pm.Installer r0;
        android.net.LocalSocket $r4, $r9;
        java.io.InputStream $r5, $r8;
        java.io.OutputStream $r6, $r7;
        java.io.IOException $r10, $r11, $r12;

        r0 := @this: com.android.server.pm.Installer;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("Installer", "disconnecting...");

     label1:
        $r4 = r0.<com.android.server.pm.Installer: android.net.LocalSocket mSocket>;

        if $r4 == null goto label2;

        $r9 = r0.<com.android.server.pm.Installer: android.net.LocalSocket mSocket>;

        virtualinvoke $r9.<android.net.LocalSocket: void close()>();

     label2:
        $r5 = r0.<com.android.server.pm.Installer: java.io.InputStream mIn>;

        if $r5 == null goto label3;

        $r8 = r0.<com.android.server.pm.Installer: java.io.InputStream mIn>;

        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label3:
        $r6 = r0.<com.android.server.pm.Installer: java.io.OutputStream mOut>;

        if $r6 == null goto label4;

        $r7 = r0.<com.android.server.pm.Installer: java.io.OutputStream mOut>;

        virtualinvoke $r7.<java.io.OutputStream: void close()>();

     label4:
        r0.<com.android.server.pm.Installer: android.net.LocalSocket mSocket> = null;

        r0.<com.android.server.pm.Installer: java.io.InputStream mIn> = null;

        r0.<com.android.server.pm.Installer: java.io.OutputStream mOut> = null;

        return;

     label5:
        $r12 := @caughtexception;

        goto label4;

     label6:
        $r10 := @caughtexception;

        goto label3;

     label7:
        $r11 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label3 to label4 with label5;
    }

    private int execute(java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.NumberFormatException $r4;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<com.android.server.pm.Installer: java.lang.String transaction(java.lang.String)>(r1);

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private boolean readBytes(byte[], int)
    {
        com.android.server.pm.Installer r0;
        byte[] r1;
        int i0, i1, i2, $i3;
        java.io.InputStream $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.io.IOException $r8;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 = 0;

        if i0 >= 0 goto label2;

        return 0;

     label1:
        i1 = i1 + i2;

     label2:
        if i1 == i0 goto label6;

     label3:
        $r3 = r0.<com.android.server.pm.Installer: java.io.InputStream mIn>;

        $i3 = i0 - i1;

        i2 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(r1, i1, $i3);

     label4:
        if i2 > 0 goto label1;

     label5:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("read error ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", $r7);

     label6:
        if i1 != i0 goto label8;

        return 1;

     label7:
        $r8 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", "read exception");

        goto label6;

     label8:
        specialinvoke r0.<com.android.server.pm.Installer: void disconnect()>();

        return 0;

        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    private boolean readReply()
    {
        com.android.server.pm.Installer r0;
        int i0, $i4;
        byte[] $r1, $r2, $r3, $r9;
        boolean $z0, $z1;
        byte $b1, $b2;
        short $s3, $s5;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.pm.Installer;

        r0.<com.android.server.pm.Installer: int buflen> = 0;

        $r1 = r0.<com.android.server.pm.Installer: byte[] buf>;

        $z0 = specialinvoke r0.<com.android.server.pm.Installer: boolean readBytes(byte[],int)>($r1, 2);

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = r0.<com.android.server.pm.Installer: byte[] buf>;

        $b1 = $r2[0];

        $s5 = 255 & $b1;

        $r3 = r0.<com.android.server.pm.Installer: byte[] buf>;

        $b2 = $r3[1];

        $s3 = 255 & $b2;

        $i4 = $s3 << 8;

        i0 = $s5 | $i4;

        if i0 < 1 goto label3;

        if i0 <= 1024 goto label4;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid reply length (");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", $r8);

        specialinvoke r0.<com.android.server.pm.Installer: void disconnect()>();

        return 0;

     label4:
        $r9 = r0.<com.android.server.pm.Installer: byte[] buf>;

        $z1 = specialinvoke r0.<com.android.server.pm.Installer: boolean readBytes(byte[],int)>($r9, i0);

        if $z1 == 0 goto label1;

        r0.<com.android.server.pm.Installer: int buflen> = i0;

        return 1;
    }

    private java.lang.String transaction(java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r3, $r4;
        java.lang.Throwable r2, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;
        byte[] $r5;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        $z0 = specialinvoke r0.<com.android.server.pm.Installer: boolean connect()>();

        if $z0 != 0 goto label04;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", "connection failed");

     label02:
        r3 = "-1";

     label03:
        exitmonitor r0;

        return r3;

     label04:
        $z1 = specialinvoke r0.<com.android.server.pm.Installer: boolean writeCommand(java.lang.String)>(r1);

        if $z1 != 0 goto label06;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", "write command failed? reconnect!");

        $z3 = specialinvoke r0.<com.android.server.pm.Installer: boolean connect()>();

        if $z3 == 0 goto label10;

        $z4 = specialinvoke r0.<com.android.server.pm.Installer: boolean writeCommand(java.lang.String)>(r1);

        if $z4 != 0 goto label06;

     label05:
        goto label10;

     label06:
        $z2 = specialinvoke r0.<com.android.server.pm.Installer: boolean readReply()>();

        if $z2 == 0 goto label08;

        $r4 = new java.lang.String;

        $r5 = r0.<com.android.server.pm.Installer: byte[] buf>;

        $i0 = r0.<com.android.server.pm.Installer: int buflen>;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>($r5, 0, $i0);

        r3 = $r4;

     label07:
        goto label03;

     label08:
        r3 = "-1";

        goto label03;

     label09:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

        throw r2;

     label10:
        r3 = "-1";

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    private boolean writeCommand(java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1;
        byte[] r2, $r4, $r5, $r6;
        int i0, $i1, $i3, $i4;
        byte $b2, $b5;
        java.io.OutputStream $r7, $r8;
        java.io.IOException $r9;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        i0 = lengthof r2;

        if i0 < 1 goto label1;

        if i0 <= 1024 goto label2;

     label1:
        return 0;

     label2:
        $r4 = r0.<com.android.server.pm.Installer: byte[] buf>;

        $i1 = i0 & 255;

        $b2 = (byte) $i1;

        $r4[0] = $b2;

        $r5 = r0.<com.android.server.pm.Installer: byte[] buf>;

        $i3 = i0 >> 8;

        $i4 = 255 & $i3;

        $b5 = (byte) $i4;

        $r5[1] = $b5;

     label3:
        $r7 = r0.<com.android.server.pm.Installer: java.io.OutputStream mOut>;

        $r6 = r0.<com.android.server.pm.Installer: byte[] buf>;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r6, 0, 2);

        $r8 = r0.<com.android.server.pm.Installer: java.io.OutputStream mOut>;

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i0);

     label4:
        return 1;

     label5:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", "write error");

        specialinvoke r0.<com.android.server.pm.Installer: void disconnect()>();

        return 0;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public int clearUserData(java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r8;
        int i0, $i1;
        java.lang.StringBuilder r2, $r3;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmuserdata");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r8);

        return $i1;
    }

    public int createUserData(java.lang.String, int, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r10;
        int i0, i1, $i2;
        java.lang.StringBuilder r2, $r3;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("mkuserdata");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r10);

        return $i2;
    }

    public int deleteCacheFiles(java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r8;
        int i0, $i1;
        java.lang.StringBuilder r2, $r3;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmcache");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r8);

        return $i1;
    }

    public int dexopt(java.lang.String, int, boolean)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r3, $r10;
        int i0, $i1;
        boolean z0;
        java.lang.StringBuilder r2, $r4;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("dexopt");

        r2 = $r4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        if z0 == 0 goto label2;

        r3 = " 1";

     label1:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r10);

        return $i1;

     label2:
        r3 = " 0";

        goto label1;
    }

    public int fixUid(java.lang.String, int, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r10;
        int i0, i1, $i2;
        java.lang.StringBuilder r2, $r3;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("fixuid");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r10);

        return $i2;
    }

    public int freeCache(long)
    {
        com.android.server.pm.Installer r0;
        long l0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r4, $r6;
        int $i1;

        r0 := @this: com.android.server.pm.Installer;

        l0 := @parameter0: long;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("freecache");

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r6);

        return $i1;
    }

    public int getSizeInfo(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.content.pm.PackageStats)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, r3, r4, r5, $r22, $r24, $r25, $r26, $r27, $r28, $r30;
        int i0, i1, $i3;
        android.content.pm.PackageStats r6;
        java.lang.StringBuilder r7, $r11;
        java.lang.String[] r8;
        long $l2, $l4, $l5, $l6;
        java.lang.NumberFormatException $r29;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: android.content.pm.PackageStats;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("getsize");

        r7 = $r11;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r3 == null goto label05;

     label01:
        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r4 == null goto label06;

     label02:
        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r5 == null goto label07;

     label03:
        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r24 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = specialinvoke r0.<com.android.server.pm.Installer: java.lang.String transaction(java.lang.String)>($r24);

        r8 = virtualinvoke $r22.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        if r8 == null goto label04;

        $i3 = lengthof r8;

        if $i3 == 5 goto label08;

     label04:
        return -1;

     label05:
        r3 = "!";

        goto label01;

     label06:
        r4 = "!";

        goto label02;

     label07:
        r5 = "!";

        goto label03;

     label08:
        $r26 = r8[1];

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r26);

        r6.<android.content.pm.PackageStats: long codeSize> = $l2;

        $r25 = r8[2];

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r25);

        r6.<android.content.pm.PackageStats: long dataSize> = $l5;

        $r28 = r8[3];

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r28);

        r6.<android.content.pm.PackageStats: long cacheSize> = $l4;

        $r27 = r8[4];

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r27);

        r6.<android.content.pm.PackageStats: long externalCodeSize> = $l6;

        $r30 = r8[0];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r30);

     label09:
        return i1;

     label10:
        $r29 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    public int install(java.lang.String, int, int, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r13;
        int i0, i1, $i2;
        java.lang.StringBuilder r3, $r4;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("install");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        if r2 == null goto label2;

     label1:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r13);

        return $i2;

     label2:
        r2 = "!";

        goto label1;
    }

    public int linkNativeLibraryDirectory(java.lang.String, java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r10;
        int i0, $i1;
        java.lang.StringBuilder r3, $r4;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r1 != null goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", "linkNativeLibraryDirectory dataPath is null");

        return -1;

     label1:
        if r2 != null goto label2;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("Installer", "linkNativeLibraryDirectory nativeLibPath is null");

        return -1;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("linklib ");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r10);

        return $i1;
    }

    public int moveFiles()
    {
        com.android.server.pm.Installer r0;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        $i0 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>("movefiles");

        return $i0;
    }

    public int movedex(java.lang.String, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r9;
        java.lang.StringBuilder r3, $r4;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("movedex");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r9);

        return $i0;
    }

    public boolean ping()
    {
        com.android.server.pm.Installer r0;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        $i0 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>("ping");

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public int remove(java.lang.String, int)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r8;
        int i0, $i1;
        java.lang.StringBuilder r2, $r3;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("remove");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r8);

        return $i1;
    }

    public int removeUserDataDirs(int)
    {
        com.android.server.pm.Installer r0;
        int i0, $i1;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r5;

        r0 := @this: com.android.server.pm.Installer;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmuser");

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r5);

        return $i1;
    }

    public int rename(java.lang.String, java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, r2, $r9;
        java.lang.StringBuilder r3, $r4;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("rename");

        r3 = $r4;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r9);

        return $i0;
    }

    public int rmdex(java.lang.String)
    {
        com.android.server.pm.Installer r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder r2, $r3;
        int $i0;

        r0 := @this: com.android.server.pm.Installer;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("rmdex");

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = specialinvoke r0.<com.android.server.pm.Installer: int execute(java.lang.String)>($r6);

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.server.pm.Installer: java.lang.String TAG> = "Installer";

        <com.android.server.pm.Installer: boolean LOCAL_DEBUG> = 0;

        return;
    }
}
