public final class android.provider.Contacts$People extends java.lang.Object implements android.provider.BaseColumns, android.provider.SyncConstValue, android.provider.Contacts$PeopleColumns, android.provider.Contacts$PhonesColumns, android.provider.Contacts$PresenceColumns
{
    public static final android.net.Uri CONTENT_FILTER_URI;
    public static final java.lang.String CONTENT_ITEM_TYPE;
    public static final java.lang.String CONTENT_TYPE;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String DEFAULT_SORT_ORDER;
    public static final android.net.Uri DELETED_CONTENT_URI;
    private static final java.lang.String[] GROUPS_PROJECTION;
    public static final java.lang.String PRIMARY_EMAIL_ID;
    public static final java.lang.String PRIMARY_ORGANIZATION_ID;
    public static final java.lang.String PRIMARY_PHONE_ID;
    public static final android.net.Uri WITH_EMAIL_OR_IM_FILTER_URI;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1, $r2, $r3;
        java.lang.String[] $r4;

        <android.provider.Contacts$People: java.lang.String PRIMARY_PHONE_ID> = "primary_phone";

        <android.provider.Contacts$People: java.lang.String PRIMARY_ORGANIZATION_ID> = "primary_organization";

        <android.provider.Contacts$People: java.lang.String PRIMARY_EMAIL_ID> = "primary_email";

        <android.provider.Contacts$People: java.lang.String DEFAULT_SORT_ORDER> = "name ASC";

        <android.provider.Contacts$People: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/person";

        <android.provider.Contacts$People: java.lang.String CONTENT_ITEM_TYPE> = "vnd.android.cursor.item/person";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/people");

        <android.provider.Contacts$People: android.net.Uri CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/people/filter");

        <android.provider.Contacts$People: android.net.Uri CONTENT_FILTER_URI> = $r1;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/deleted_people");

        <android.provider.Contacts$People: android.net.Uri DELETED_CONTENT_URI> = $r2;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://contacts/people/with_email_or_im_filter");

        <android.provider.Contacts$People: android.net.Uri WITH_EMAIL_OR_IM_FILTER_URI> = $r3;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "_id";

        <android.provider.Contacts$People: java.lang.String[] GROUPS_PROJECTION> = $r4;

        return;
    }

    private void <init>()
    {
        android.provider.Contacts$People r0;

        r0 := @this: android.provider.Contacts$People;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri addToGroup(android.content.ContentResolver, long, long)
    {
        android.content.ContentResolver r0;
        long l0, l1;
        android.content.ContentValues r1, $r2;
        java.lang.Long $r3, $r4;
        android.net.Uri $r5, $r6;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        r1 = $r2;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("person", $r3);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("group_id", $r4);

        $r5 = <android.provider.Contacts$GroupMembership: android.net.Uri CONTENT_URI>;

        $r6 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r5, r1);

        return $r6;
    }

    public static android.net.Uri addToGroup(android.content.ContentResolver, long, java.lang.String)
    {
        android.content.ContentResolver r0;
        long l0, l1, l2;
        java.lang.String r1;
        android.database.Cursor r2;
        java.lang.Throwable r3, $r9;
        java.lang.String[] $r4, $r5;
        android.net.Uri $r6, $r7;
        byte $b3;
        boolean $z0;
        java.lang.IllegalStateException $r8;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        l1 = 0L;

        $r6 = <android.provider.Contacts$Groups: android.net.Uri CONTENT_URI>;

        $r5 = <android.provider.Contacts$People: java.lang.String[] GROUPS_PROJECTION>;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r1;

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r5, "name=?", $r4, null);

        if r2 == null goto label4;

     label1:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        l2 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

     label2:
        l1 = l2;

     label3:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label4:
        $b3 = l1 cmp 0L;

        if $b3 != 0 goto label6;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to find the My Contacts group");

        throw $r8;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r3;

     label6:
        $r7 = staticinvoke <android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>(r0, l0, l1);

        return $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public static android.net.Uri addToMyContactsGroup(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0, l1;
        byte $b2;
        android.net.Uri $r1;
        java.lang.IllegalStateException $r2;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 = staticinvoke <android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>(r0);

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to find the My Contacts group");

        throw $r2;

     label1:
        $r1 = staticinvoke <android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>(r0, l0, l1);

        return $r1;
    }

    public static android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver, android.content.ContentValues)
    {
        android.content.ContentResolver r0;
        android.content.ContentValues r1;
        android.net.Uri r2, $r3, $r4;
        long $l0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.ContentValues;

        $r3 = <android.provider.Contacts$People: android.net.Uri CONTENT_URI>;

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r3, r1);

        if r2 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Contacts", "Failed to create the contact");

        r2 = null;

     label1:
        return r2;

     label2:
        $l0 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>(r2);

        $r4 = staticinvoke <android.provider.Contacts$People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>(r0, $l0);

        if $r4 != null goto label1;

        virtualinvoke r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r2, null, null);

        return null;
    }

    public static android.graphics.Bitmap loadContactPhoto(android.content.Context, android.net.Uri, int, android.graphics.BitmapFactory$Options)
    {
        android.content.Context r0;
        android.net.Uri r1;
        int i0;
        android.graphics.BitmapFactory$Options r2;
        java.io.InputStream r3;
        android.graphics.Bitmap r4, $r6;
        android.content.ContentResolver $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        r2 := @parameter3: android.graphics.BitmapFactory$Options;

        if r1 != null goto label2;

        r4 = staticinvoke <android.provider.Contacts$People: android.graphics.Bitmap loadPlaceholderPhoto(int,android.content.Context,android.graphics.BitmapFactory$Options)>(i0, r0, r2);

     label1:
        return r4;

     label2:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r3 = staticinvoke <android.provider.Contacts$People: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>($r5, r1);

        r4 = null;

        if r3 == null goto label3;

        r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r3, null, r2);

     label3:
        if r4 != null goto label1;

        $r6 = staticinvoke <android.provider.Contacts$People: android.graphics.Bitmap loadPlaceholderPhoto(int,android.content.Context,android.graphics.BitmapFactory$Options)>(i0, r0, r2);

        return $r6;
    }

    private static android.graphics.Bitmap loadPlaceholderPhoto(int, android.content.Context, android.graphics.BitmapFactory$Options)
    {
        int i0;
        android.content.Context r0;
        android.graphics.BitmapFactory$Options r1;
        android.content.res.Resources $r2;
        android.graphics.Bitmap $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        r1 := @parameter2: android.graphics.BitmapFactory$Options;

        if i0 != 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>($r2, i0, r1);

        return $r3;
    }

    public static void markAsContacted(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0, $l1;
        android.net.Uri r1, $r3, $r4;
        android.content.ContentValues r2, $r5;
        java.lang.Long $r6;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        $r3 = <android.provider.Contacts$People: android.net.Uri CONTENT_URI>;

        $r4 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r3, l0);

        r1 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r4, "update_contact_time");

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        r2 = $r5;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("last_time_contacted", $r6);

        virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r1, r2, null, null);

        return;
    }

    public static java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, $r6;
        android.database.Cursor r2;
        java.io.ByteArrayInputStream r3, $r8;
        java.lang.Throwable r4, $r9;
        boolean z0;
        byte[] r5;
        java.lang.String[] $r7;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r1, "photo");

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "data";

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r7, null, null, null);

        if r2 == null goto label03;

     label01:
        z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

     label02:
        if z0 != 0 goto label05;

     label03:
        r3 = null;

        if r2 == null goto label04;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label04:
        return r3;

     label05:
        r5 = interfaceinvoke r2.<android.database.Cursor: byte[] getBlob(int)>(0);

     label06:
        if r5 != null goto label07;

        r3 = null;

        if r2 == null goto label04;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return null;

     label07:
        $r8 = new java.io.ByteArrayInputStream;

        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>(r5);

        r3 = $r8;

     label08:
        if r2 == null goto label04;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return r3;

     label09:
        $r9 := @caughtexception;

        r4 = $r9;

        if r2 == null goto label10;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label10:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public static android.database.Cursor queryGroups(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0;
        android.net.Uri r1;
        java.lang.String[] r2;
        java.lang.String $r3;
        android.database.Cursor $r4;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        r1 = <android.provider.Contacts$GroupMembership: android.net.Uri CONTENT_URI>;

        r2 = newarray (java.lang.String)[1];

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        r2[0] = $r3;

        $r4 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, null, "person=?", r2, "name ASC");

        return $r4;
    }

    public static void setPhotoData(android.content.ContentResolver, android.net.Uri, byte[])
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r3;
        byte[] r2;
        android.content.ContentValues r4, $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: byte[];

        r3 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r1, "photo");

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        r4 = $r5;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,byte[])>("data", r2);

        virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r3, r4, null, null);

        return;
    }

    public static long tryGetMyContactsGroupId(android.content.ContentResolver)
    {
        android.content.ContentResolver r0;
        android.database.Cursor r1;
        java.lang.Throwable r2, $r5;
        long l0;
        java.lang.String[] $r3;
        android.net.Uri $r4;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        $r4 = <android.provider.Contacts$Groups: android.net.Uri CONTENT_URI>;

        $r3 = <android.provider.Contacts$People: java.lang.String[] GROUPS_PROJECTION>;

        r1 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r4, $r3, "system_id=\'Contacts\'", null, null);

        if r1 == null goto label4;

     label1:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        l0 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(0);

     label2:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return l0;

     label3:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label4:
        return 0L;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
    }
}
