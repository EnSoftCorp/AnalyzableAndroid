public class android.transition.Crossfade extends android.transition.Transition
{
    public static final int FADE_BEHAVIOR_CROSSFADE;
    public static final int FADE_BEHAVIOR_OUT_IN;
    public static final int FADE_BEHAVIOR_REVEAL;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String PROPNAME_BITMAP;
    private static final java.lang.String PROPNAME_BOUNDS;
    private static final java.lang.String PROPNAME_DRAWABLE;
    public static final int RESIZE_BEHAVIOR_NONE;
    public static final int RESIZE_BEHAVIOR_SCALE;
    private static android.animation.RectEvaluator sRectEvaluator;
    private int mFadeBehavior;
    private int mResizeBehavior;

    static void <clinit>()
    {
        android.animation.RectEvaluator $r0;

        <android.transition.Crossfade: int RESIZE_BEHAVIOR_SCALE> = 1;

        <android.transition.Crossfade: int RESIZE_BEHAVIOR_NONE> = 0;

        <android.transition.Crossfade: java.lang.String PROPNAME_DRAWABLE> = "android:crossfade:drawable";

        <android.transition.Crossfade: java.lang.String PROPNAME_BOUNDS> = "android:crossfade:bounds";

        <android.transition.Crossfade: java.lang.String PROPNAME_BITMAP> = "android:crossfade:bitmap";

        <android.transition.Crossfade: java.lang.String LOG_TAG> = "Crossfade";

        <android.transition.Crossfade: int FADE_BEHAVIOR_REVEAL> = 1;

        <android.transition.Crossfade: int FADE_BEHAVIOR_OUT_IN> = 2;

        <android.transition.Crossfade: int FADE_BEHAVIOR_CROSSFADE> = 0;

        $r0 = new android.animation.RectEvaluator;

        specialinvoke $r0.<android.animation.RectEvaluator: void <init>()>();

        <android.transition.Crossfade: android.animation.RectEvaluator sRectEvaluator> = $r0;

        return;
    }

    public void <init>()
    {
        android.transition.Crossfade r0;

        r0 := @this: android.transition.Crossfade;

        specialinvoke r0.<android.transition.Transition: void <init>()>();

        r0.<android.transition.Crossfade: int mFadeBehavior> = 1;

        r0.<android.transition.Crossfade: int mResizeBehavior> = 1;

        return;
    }

    static int access$000(android.transition.Crossfade)
    {
        android.transition.Crossfade r0;
        int $i0;

        r0 := @parameter0: android.transition.Crossfade;

        $i0 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        return $i0;
    }

    private void captureValues(android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.transition.TransitionValues r1;
        android.view.View r2;
        android.graphics.Rect r3, $r6;
        android.graphics.Bitmap r4;
        android.graphics.drawable.BitmapDrawable r5, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Map $r7, $r12, $r13;
        android.graphics.Bitmap$Config $r9;
        android.graphics.Canvas $r10;
        boolean $z0;
        android.view.TextureView $r15;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.transition.TransitionValues;

        r2 = r1.<android.transition.TransitionValues: android.view.View view>;

        $r6 = new android.graphics.Rect;

        $i0 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i1 = virtualinvoke r2.<android.view.View: int getHeight()>();

        specialinvoke $r6.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i0, $i1);

        r3 = $r6;

        $i2 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i2 == 1 goto label1;

        $i5 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i6 = virtualinvoke r2.<android.view.View: int getTop()>();

        virtualinvoke r3.<android.graphics.Rect: void offset(int,int)>($i5, $i6);

     label1:
        $r7 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:crossfade:bounds", r3);

        $i4 = virtualinvoke r2.<android.view.View: int getWidth()>();

        $i3 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i4, $i3, $r9);

        $z0 = r2 instanceof android.view.TextureView;

        if $z0 == 0 goto label3;

        $r15 = (android.view.TextureView) r2;

        r4 = virtualinvoke $r15.<android.view.TextureView: android.graphics.Bitmap getBitmap()>();

     label2:
        $r12 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:crossfade:bitmap", r4);

        $r14 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r14.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>(r4);

        r5 = $r14;

        virtualinvoke r5.<android.graphics.drawable.BitmapDrawable: void setBounds(android.graphics.Rect)>(r3);

        $r13 = r1.<android.transition.TransitionValues: java.util.Map values>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("android:crossfade:drawable", r5);

        return;

     label3:
        $r10 = new android.graphics.Canvas;

        specialinvoke $r10.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r4);

        virtualinvoke r2.<android.view.View: void draw(android.graphics.Canvas)>($r10);

        goto label2;
    }

    public void captureEndValues(android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Crossfade: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public void captureStartValues(android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.transition.TransitionValues r1;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.transition.TransitionValues;

        specialinvoke r0.<android.transition.Crossfade: void captureValues(android.transition.TransitionValues)>(r1);

        return;
    }

    public android.animation.Animator createAnimator(android.view.ViewGroup, android.transition.TransitionValues, android.transition.TransitionValues)
    {
        android.transition.Crossfade r0;
        android.view.ViewGroup r1, $r43;
        android.transition.TransitionValues r2, r3;
        android.animation.AnimatorSet r4, $r25;
        boolean z0, $z1, $z2;
        android.view.View r5;
        java.util.Map r6, r7;
        android.graphics.Rect r8, r9;
        android.graphics.Bitmap r10, r11;
        android.graphics.drawable.BitmapDrawable r12, r13;
        android.view.ViewOverlay r14;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.animation.ObjectAnimator r15, r16, $r29, $r37;
        java.lang.Object $r17, $r18, $r19, $r20, $r21, $r22;
        int[] $r23, $r42;
        android.transition.Crossfade$2 $r24;
        android.transition.Crossfade$1 $r26;
        android.animation.Animator[] $r27, $r28, $r34, $r36;
        java.lang.Object[] $r30, $r32;
        android.animation.RectEvaluator $r31, $r33;
        float[] $r35, $r39;
        android.util.Property $r38, $r40;
        android.view.ViewParent $r41;

        r0 := @this: android.transition.Crossfade;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.transition.TransitionValues;

        r3 := @parameter2: android.transition.TransitionValues;

        if r2 == null goto label01;

        if r3 != null goto label03;

     label01:
        r4 = null;

     label02:
        return r4;

     label03:
        $i1 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i1 == 1 goto label10;

        z0 = 1;

     label04:
        r5 = r3.<android.transition.TransitionValues: android.view.View view>;

        r6 = r2.<android.transition.TransitionValues: java.util.Map values>;

        r7 = r3.<android.transition.TransitionValues: java.util.Map values>;

        $r18 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bounds");

        r8 = (android.graphics.Rect) $r18;

        $r17 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bounds");

        r9 = (android.graphics.Rect) $r17;

        $r20 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bitmap");

        r10 = (android.graphics.Bitmap) $r20;

        $r19 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:bitmap");

        r11 = (android.graphics.Bitmap) $r19;

        $r22 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:drawable");

        r12 = (android.graphics.drawable.BitmapDrawable) $r22;

        $r21 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("android:crossfade:drawable");

        r13 = (android.graphics.drawable.BitmapDrawable) $r21;

        if r12 == null goto label14;

        if r13 == null goto label14;

        $z1 = virtualinvoke r10.<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>(r11);

        if $z1 != 0 goto label14;

        if z0 == 0 goto label11;

        $r41 = virtualinvoke r5.<android.view.View: android.view.ViewParent getParent()>();

        $r43 = (android.view.ViewGroup) $r41;

        r14 = virtualinvoke $r43.<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>();

     label05:
        $i3 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i3 != 1 goto label06;

        virtualinvoke r14.<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>(r13);

     label06:
        virtualinvoke r14.<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>(r12);

        $i2 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i2 != 2 goto label12;

        $r42 = newarray (int)[3];

        $r42[0] = 255;

        $r42[1] = 0;

        $r42[2] = 0;

        r15 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>(r12, "alpha", $r42);

     label07:
        $r26 = new android.transition.Crossfade$1;

        specialinvoke $r26.<android.transition.Crossfade$1: void <init>(android.transition.Crossfade,android.view.View,android.graphics.drawable.BitmapDrawable)>(r0, r5, r12);

        virtualinvoke r15.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r26);

        $i4 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        if $i4 != 2 goto label13;

        $r38 = <android.view.View: android.util.Property ALPHA>;

        $r39 = newarray (float)[3];

        $r39[0] = 0.0F;

        $r39[1] = 0.0F;

        $r39[2] = 1.0F;

        r16 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r5, $r38, $r39);

     label08:
        $r24 = new android.transition.Crossfade$2;

        specialinvoke $r24.<android.transition.Crossfade$2: void <init>(android.transition.Crossfade,boolean,android.view.View,android.graphics.drawable.BitmapDrawable,android.graphics.drawable.BitmapDrawable)>(r0, z0, r5, r12, r13);

        virtualinvoke r15.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r24);

        $r25 = new android.animation.AnimatorSet;

        specialinvoke $r25.<android.animation.AnimatorSet: void <init>()>();

        r4 = $r25;

        $r28 = newarray (android.animation.Animator)[1];

        $r28[0] = r15;

        virtualinvoke r4.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r28);

        if r16 == null goto label09;

        $r36 = newarray (android.animation.Animator)[1];

        $r36[0] = r16;

        virtualinvoke r4.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r36);

     label09:
        $i5 = r0.<android.transition.Crossfade: int mResizeBehavior>;

        if $i5 != 1 goto label02;

        $z2 = virtualinvoke r8.<android.graphics.Rect: boolean equals(java.lang.Object)>(r9);

        if $z2 != 0 goto label02;

        $r27 = newarray (android.animation.Animator)[1];

        $r31 = <android.transition.Crossfade: android.animation.RectEvaluator sRectEvaluator>;

        $r30 = newarray (java.lang.Object)[2];

        $r30[0] = r8;

        $r30[1] = r9;

        $r29 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r12, "bounds", $r31, $r30);

        $r27[0] = $r29;

        virtualinvoke r4.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r27);

        $i6 = r0.<android.transition.Crossfade: int mResizeBehavior>;

        if $i6 != 1 goto label02;

        $r34 = newarray (android.animation.Animator)[1];

        $r33 = <android.transition.Crossfade: android.animation.RectEvaluator sRectEvaluator>;

        $r32 = newarray (java.lang.Object)[2];

        $r32[0] = r8;

        $r32[1] = r9;

        $r37 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>(r13, "bounds", $r33, $r32);

        $r34[0] = $r37;

        virtualinvoke r4.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r34);

        return r4;

     label10:
        z0 = 0;

        goto label04;

     label11:
        r14 = virtualinvoke r5.<android.view.View: android.view.ViewOverlay getOverlay()>();

        goto label05;

     label12:
        $r23 = newarray (int)[1];

        $r23[0] = 0;

        r15 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>(r12, "alpha", $r23);

        goto label07;

     label13:
        i0 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        r16 = null;

        if i0 != 0 goto label08;

        $r40 = <android.view.View: android.util.Property ALPHA>;

        $r35 = newarray (float)[2];

        $r35[0] = 0.0F;

        $r35[1] = 1.0F;

        r16 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>(r5, $r40, $r35);

        goto label08;

     label14:
        return null;
    }

    public int getFadeBehavior()
    {
        android.transition.Crossfade r0;
        int $i0;

        r0 := @this: android.transition.Crossfade;

        $i0 = r0.<android.transition.Crossfade: int mFadeBehavior>;

        return $i0;
    }

    public int getResizeBehavior()
    {
        android.transition.Crossfade r0;
        int $i0;

        r0 := @this: android.transition.Crossfade;

        $i0 = r0.<android.transition.Crossfade: int mResizeBehavior>;

        return $i0;
    }

    public android.transition.Crossfade setFadeBehavior(int)
    {
        android.transition.Crossfade r0;
        int i0;

        r0 := @this: android.transition.Crossfade;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 2 goto label1;

        r0.<android.transition.Crossfade: int mFadeBehavior> = i0;

     label1:
        return r0;
    }

    public android.transition.Crossfade setResizeBehavior(int)
    {
        android.transition.Crossfade r0;
        int i0;

        r0 := @this: android.transition.Crossfade;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 1 goto label1;

        r0.<android.transition.Crossfade: int mResizeBehavior> = i0;

     label1:
        return r0;
    }
}
