class android.net.wifi.WifiMonitor$MonitorThread extends java.lang.Thread
{
    private int mRecvErrors;
    private com.android.internal.util.StateMachine mStateMachine;
    private final android.net.wifi.WifiMonitor$WifiMonitorSingleton mWifiMonitorSingleton;
    private final android.net.wifi.WifiNative mWifiNative;

    public void <init>(android.net.wifi.WifiNative, android.net.wifi.WifiMonitor$WifiMonitorSingleton)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        android.net.wifi.WifiNative r1;
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r2;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: android.net.wifi.WifiNative;

        r2 := @parameter1: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("WifiMonitor");

        r0.<android.net.wifi.WifiMonitor$MonitorThread: int mRecvErrors> = 0;

        r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine> = null;

        r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.WifiNative mWifiNative> = r1;

        r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.WifiMonitor$WifiMonitorSingleton mWifiMonitorSingleton> = r2;

        return;
    }

    private boolean dispatchEvent(java.lang.String)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        java.lang.String r1, r2, r3;
        int i0, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        byte b1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        java.lang.String[] $r4;
        com.android.internal.util.StateMachine $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("CTRL-EVENT-");

        if $z0 != 0 goto label08;

        $z14 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("WPA:");

        if $z14 == 0 goto label02;

        $i10 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("pre-shared key may be incorrect");

        if $i10 <= 0 goto label02;

        $r11 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r11.<com.android.internal.util.StateMachine: void sendMessage(int)>(147463);

     label01:
        return 0;

     label02:
        $z12 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("WPS-SUCCESS");

        if $z12 == 0 goto label03;

        $r8 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r8.<com.android.internal.util.StateMachine: void sendMessage(int)>(147464);

        return 0;

     label03:
        $z13 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("WPS-FAIL");

        if $z13 == 0 goto label04;

        specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void handleWpsFailEvent(java.lang.String)>(r1);

        return 0;

     label04:
        $z17 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("WPS-OVERLAP-DETECTED");

        if $z17 == 0 goto label05;

        $r10 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r10.<com.android.internal.util.StateMachine: void sendMessage(int)>(147466);

        return 0;

     label05:
        $z18 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("WPS-TIMEOUT");

        if $z18 == 0 goto label06;

        $r9 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r9.<com.android.internal.util.StateMachine: void sendMessage(int)>(147467);

        return 0;

     label06:
        $z15 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P");

        if $z15 == 0 goto label07;

        specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void handleP2pEvents(java.lang.String)>(r1);

        return 0;

     label07:
        $z16 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("AP");

        if $z16 == 0 goto label01;

        specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void handleHostApEvents(java.lang.String)>(r1);

        return 0;

     label08:
        $i5 = staticinvoke <android.net.wifi.WifiMonitor: int access$600()>();

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i5);

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(32);

        if i0 == -1 goto label09;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label09:
        $i6 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i6 == 0 goto label01;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("CONNECTED");

        if $z1 == 0 goto label14;

        b1 = 1;

     label10:
        r3 = r1;

        if b1 == 7 goto label11;

        if b1 != 5 goto label23;

     label11:
        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r3 = $r4[1];

     label12:
        if b1 != 3 goto label26;

        specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void handleSupplicantStateChange(java.lang.String)>(r3);

     label13:
        r0.<android.net.wifi.WifiMonitor$MonitorThread: int mRecvErrors> = 0;

        return 0;

     label14:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("DISCONNECTED");

        if $z2 == 0 goto label15;

        b1 = 2;

        goto label10;

     label15:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("STATE-CHANGE");

        if $z4 == 0 goto label16;

        b1 = 3;

        goto label10;

     label16:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("SCAN-RESULTS");

        if $z3 == 0 goto label17;

        b1 = 4;

        goto label10;

     label17:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("LINK-SPEED");

        if $z6 == 0 goto label18;

        b1 = 5;

        goto label10;

     label18:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("TERMINATING");

        if $z5 == 0 goto label19;

        b1 = 6;

        goto label10;

     label19:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("DRIVER-STATE");

        if $z8 == 0 goto label20;

        b1 = 7;

        goto label10;

     label20:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("EAP-FAILURE");

        if $z7 == 0 goto label21;

        b1 = 8;

        goto label10;

     label21:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ASSOC-REJECT");

        if $z9 == 0 goto label22;

        b1 = 9;

        goto label10;

     label22:
        b1 = 10;

        goto label10;

     label23:
        if b1 == 3 goto label24;

        if b1 != 8 goto label25;

     label24:
        i3 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" ");

        if i3 == -1 goto label12;

        $i8 = i3 + 1;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i8);

        goto label12;

     label25:
        i4 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(" - ");

        if i4 == -1 goto label12;

        $i9 = i4 + 3;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i9);

        goto label12;

     label26:
        if b1 != 7 goto label27;

        specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void handleDriverEvent(java.lang.String)>(r3);

        goto label13;

     label27:
        if b1 != 6 goto label29;

        $z11 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("recv error");

        if $z11 == 0 goto label28;

        $i7 = r0.<android.net.wifi.WifiMonitor$MonitorThread: int mRecvErrors>;

        i2 = 1 + $i7;

        r0.<android.net.wifi.WifiMonitor$MonitorThread: int mRecvErrors> = i2;

        if i2 <= 10 goto label01;

     label28:
        $r7 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r7.<com.android.internal.util.StateMachine: void sendMessage(int)>(147458);

        return 1;

     label29:
        if b1 != 8 goto label30;

        $z10 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("EAP authentication failed");

        if $z10 == 0 goto label13;

        $r6 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r6.<com.android.internal.util.StateMachine: void sendMessage(int)>(147463);

        goto label13;

     label30:
        if b1 != 9 goto label31;

        $r5 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r5.<com.android.internal.util.StateMachine: void sendMessage(int)>(147499);

        goto label13;

     label31:
        virtualinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void handleEvent(int,java.lang.String)>(b1, r3);

        goto label13;
    }

    private void handleDriverEvent(java.lang.String)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        java.lang.String r1;
        boolean $z0;
        com.android.internal.util.StateMachine $r2;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("HANGED");

        if $z0 == 0 goto label1;

        $r2 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r2.<com.android.internal.util.StateMachine: void sendMessage(int)>(147468);

        return;
    }

    private void handleHostApEvents(java.lang.String)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        java.lang.String r1, $r3, $r4;
        java.lang.String[] r2;
        boolean $z0, $z1;
        android.net.wifi.p2p.WifiP2pDevice $r5, $r7;
        com.android.internal.util.StateMachine $r6, $r8;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r3 = r2[0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AP-STA-CONNECTED");

        if $z0 == 0 goto label2;

        $r8 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r7 = new android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke $r7.<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>(r1);

        virtualinvoke $r8.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147498, $r7);

     label1:
        return;

     label2:
        $r4 = r2[0];

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("AP-STA-DISCONNECTED");

        if $z1 == 0 goto label1;

        $r6 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r5 = new android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke $r5.<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>(r1);

        virtualinvoke $r6.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147497, $r5);

        return;
    }

    private void handleNetworkStateChange(android.net.NetworkInfo$DetailedState, java.lang.String)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        android.net.NetworkInfo$DetailedState r1, $r6;
        java.lang.String r2, r4, $r8;
        int i0, i1;
        java.util.regex.Matcher r3;
        boolean z0;
        java.util.regex.Pattern $r7;
        java.lang.NumberFormatException $r9;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: android.net.NetworkInfo$DetailedState;

        r2 := @parameter1: java.lang.String;

        i0 = -1;

        $r6 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        if r1 != $r6 goto label2;

        $r7 = staticinvoke <android.net.wifi.WifiMonitor: java.util.regex.Pattern access$700()>();

        r3 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

        z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();

        r4 = null;

        if z0 != 0 goto label3;

     label1:
        virtualinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void notifyNetworkStateChange(android.net.NetworkInfo$DetailedState,java.lang.String,int)>(r1, r4, i0);

     label2:
        return;

     label3:
        r4 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

     label4:
        $r8 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

     label5:
        i0 = i1;

        goto label1;

     label6:
        $r9 := @caughtexception;

        i0 = -1;

        goto label1;

        catch java.lang.NumberFormatException from label4 to label5 with label6;
    }

    private void handleP2pEvents(java.lang.String)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        java.lang.String r1, $r6;
        java.util.List r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.lang.StringBuilder $r3, $r4, $r5;
        com.android.internal.util.StateMachine $r7, $r8, $r9, $r11, $r15, $r16, $r17, $r18, $r22, $r24, $r25, $r26, $r27, $r29, $r31, $r34, $r35, $r37;
        android.net.wifi.p2p.WifiP2pProvDiscEvent $r10, $r12, $r13, $r14;
        android.net.wifi.p2p.WifiP2pService$P2pStatus $r19, $r28, $r32;
        android.net.wifi.p2p.WifiP2pGroup $r20, $r21, $r23;
        android.net.wifi.p2p.WifiP2pConfig $r30;
        android.net.wifi.p2p.WifiP2pDevice $r33, $r36;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-DEVICE-FOUND");

        if $z0 == 0 goto label02;

        $r34 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r33 = new android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke $r33.<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>(r1);

        virtualinvoke $r34.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147477, $r33);

     label01:
        return;

     label02:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-DEVICE-LOST");

        if $z1 == 0 goto label03;

        $r37 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r36 = new android.net.wifi.p2p.WifiP2pDevice;

        specialinvoke $r36.<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>(r1);

        virtualinvoke $r37.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147478, $r36);

        return;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-FIND-STOPPED");

        if $z2 == 0 goto label04;

        $r35 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r35.<com.android.internal.util.StateMachine: void sendMessage(int)>(147493);

        return;

     label04:
        $z3 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-GO-NEG-REQUEST");

        if $z3 == 0 goto label05;

        $r29 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r30 = new android.net.wifi.p2p.WifiP2pConfig;

        specialinvoke $r30.<android.net.wifi.p2p.WifiP2pConfig: void <init>(java.lang.String)>(r1);

        virtualinvoke $r29.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147479, $r30);

        return;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-GO-NEG-SUCCESS");

        if $z4 == 0 goto label06;

        $r31 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r31.<com.android.internal.util.StateMachine: void sendMessage(int)>(147481);

        return;

     label06:
        $z5 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-GO-NEG-FAILURE");

        if $z5 == 0 goto label07;

        $r26 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r32 = specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.p2p.WifiP2pService$P2pStatus p2pError(java.lang.String)>(r1);

        virtualinvoke $r26.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147482, $r32);

        return;

     label07:
        $z6 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-GROUP-FORMATION-SUCCESS");

        if $z6 == 0 goto label08;

        $r27 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r27.<com.android.internal.util.StateMachine: void sendMessage(int)>(147483);

        return;

     label08:
        $z7 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-GROUP-FORMATION-FAILURE");

        if $z7 == 0 goto label09;

        $r24 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r28 = specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.p2p.WifiP2pService$P2pStatus p2pError(java.lang.String)>(r1);

        virtualinvoke $r24.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147484, $r28);

        return;

     label09:
        $z8 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-GROUP-STARTED");

        if $z8 == 0 goto label10;

        $r25 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r21 = new android.net.wifi.p2p.WifiP2pGroup;

        specialinvoke $r21.<android.net.wifi.p2p.WifiP2pGroup: void <init>(java.lang.String)>(r1);

        virtualinvoke $r25.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147485, $r21);

        return;

     label10:
        $z9 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-GROUP-REMOVED");

        if $z9 == 0 goto label11;

        $r22 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r23 = new android.net.wifi.p2p.WifiP2pGroup;

        specialinvoke $r23.<android.net.wifi.p2p.WifiP2pGroup: void <init>(java.lang.String)>(r1);

        virtualinvoke $r22.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147486, $r23);

        return;

     label11:
        $z10 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-INVITATION-RECEIVED");

        if $z10 == 0 goto label12;

        $r18 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r20 = new android.net.wifi.p2p.WifiP2pGroup;

        specialinvoke $r20.<android.net.wifi.p2p.WifiP2pGroup: void <init>(java.lang.String)>(r1);

        virtualinvoke $r18.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147487, $r20);

        return;

     label12:
        $z11 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-INVITATION-RESULT");

        if $z11 == 0 goto label13;

        $r16 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r19 = specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.p2p.WifiP2pService$P2pStatus p2pError(java.lang.String)>(r1);

        virtualinvoke $r16.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147488, $r19);

        return;

     label13:
        $z12 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-PROV-DISC-PBC-REQ");

        if $z12 == 0 goto label14;

        $r17 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r13 = new android.net.wifi.p2p.WifiP2pProvDiscEvent;

        specialinvoke $r13.<android.net.wifi.p2p.WifiP2pProvDiscEvent: void <init>(java.lang.String)>(r1);

        virtualinvoke $r17.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147489, $r13);

        return;

     label14:
        $z14 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-PROV-DISC-PBC-RESP");

        if $z14 == 0 goto label15;

        $r15 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r14 = new android.net.wifi.p2p.WifiP2pProvDiscEvent;

        specialinvoke $r14.<android.net.wifi.p2p.WifiP2pProvDiscEvent: void <init>(java.lang.String)>(r1);

        virtualinvoke $r15.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147490, $r14);

        return;

     label15:
        $z13 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-PROV-DISC-ENTER-PIN");

        if $z13 == 0 goto label16;

        $r11 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r12 = new android.net.wifi.p2p.WifiP2pProvDiscEvent;

        specialinvoke $r12.<android.net.wifi.p2p.WifiP2pProvDiscEvent: void <init>(java.lang.String)>(r1);

        virtualinvoke $r11.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147491, $r12);

        return;

     label16:
        $z16 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-PROV-DISC-SHOW-PIN");

        if $z16 == 0 goto label17;

        $r9 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r10 = new android.net.wifi.p2p.WifiP2pProvDiscEvent;

        specialinvoke $r10.<android.net.wifi.p2p.WifiP2pProvDiscEvent: void <init>(java.lang.String)>(r1);

        virtualinvoke $r9.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147492, $r10);

        return;

     label17:
        $z15 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-PROV-DISC-FAILURE");

        if $z15 == 0 goto label18;

        $r7 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r7.<com.android.internal.util.StateMachine: void sendMessage(int)>(147495);

        return;

     label18:
        $z17 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("P2P-SERV-DISC-RESP");

        if $z17 == 0 goto label01;

        r2 = staticinvoke <android.net.wifi.p2p.nsd.WifiP2pServiceResponse: java.util.List newInstance(java.lang.String)>(r1);

        if r2 == null goto label19;

        $r8 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r8.<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>(147494, r2);

        return;

     label19:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null service resp ");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiMonitor", $r6);

        return;
    }

    private void handleSupplicantStateChange(java.lang.String)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        java.lang.String r1, r4, $r13, $r15, $r16, $r17, $r18, $r19, $r20;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i10, $i11;
        android.net.wifi.WifiSsid r2;
        java.lang.String[] r3, r9;
        android.net.wifi.SupplicantState r5, r7, $r11;
        android.net.wifi.SupplicantState[] r6;
        java.lang.StringBuilder $r10, $r12, $r14;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r21;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("SSID=");

        r2 = null;

        if i0 == -1 goto label01;

        $i11 = i0 + 5;

        $r20 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i11);

        r2 = staticinvoke <android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromAsciiEncoded(java.lang.String)>($r20);

     label01:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        r4 = null;

        i1 = -1;

        i2 = -1;

        i3 = lengthof r3;

        i4 = 0;

     label02:
        if i4 >= i3 goto label09;

        $r15 = r3[i4];

        r9 = virtualinvoke $r15.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i10 = lengthof r9;

        if $i10 == 2 goto label04;

     label03:
        i4 = i4 + 1;

        goto label02;

     label04:
        $r17 = r9[0];

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("BSSID");

        if $z0 == 0 goto label05;

        r4 = r9[1];

        goto label03;

     label05:
        $r16 = r9[1];

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

     label06:
        $r19 = r9[0];

        $z1 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("id");

        if $z1 == 0 goto label08;

        i1 = i7;

        goto label03;

     label07:
        $r21 := @caughtexception;

        goto label03;

     label08:
        $r18 = r9[0];

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("state");

        if $z2 == 0 goto label03;

        i2 = i7;

        goto label03;

     label09:
        if i2 != -1 goto label10;

        return;

     label10:
        r5 = <android.net.wifi.SupplicantState: android.net.wifi.SupplicantState INVALID>;

        r6 = staticinvoke <android.net.wifi.SupplicantState: android.net.wifi.SupplicantState[] values()>();

        i5 = lengthof r6;

        i6 = 0;

     label11:
        if i6 >= i5 goto label12;

        r7 = r6[i6];

        $i8 = virtualinvoke r7.<android.net.wifi.SupplicantState: int ordinal()>();

        if $i8 != i2 goto label14;

        r5 = r7;

     label12:
        $r11 = <android.net.wifi.SupplicantState: android.net.wifi.SupplicantState INVALID>;

        if r5 != $r11 goto label13;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid supplicant state: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WifiMonitor", $r13);

     label13:
        virtualinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void notifySupplicantStateChange(int,android.net.wifi.WifiSsid,java.lang.String,android.net.wifi.SupplicantState)>(i1, r2, r4, r5);

        return;

     label14:
        i6 = i6 + 1;

        goto label11;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
    }

    private void handleWpsFailEvent(java.lang.String)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        java.lang.String r1, r3, r4;
        java.util.regex.Matcher r2;
        java.util.regex.Pattern $r5;
        boolean $z0;
        com.android.internal.util.StateMachine $r6, $r7, $r9, $r10, $r11, $r14, $r15, $r17, $r18, $r19;
        android.os.Message $r8, $r12, $r13, $r16, $r20;
        int $i0, $i1;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: java.lang.String;

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("WPS-FAIL msg=\\d+(?: config_error=(\\d+))?(?: reason=(\\d+))?");

        r2 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        if r4 == null goto label1;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label1;
        };

     label1:
        if r3 == null goto label2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        lookupswitch($i0)
        {
            case 12: goto label6;
            case 18: goto label5;
            default: goto label2;
        };

     label2:
        $r7 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r6 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r8 = virtualinvoke $r6.<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int)>(147465, 0, 0);

        virtualinvoke $r7.<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>($r8);

        return;

     label3:
        $r18 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r19 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r20 = virtualinvoke $r19.<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int)>(147465, 5, 0);

        virtualinvoke $r18.<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>($r20);

        return;

     label4:
        $r17 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r15 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r16 = virtualinvoke $r15.<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int)>(147465, 4, 0);

        virtualinvoke $r17.<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>($r16);

        return;

     label5:
        $r10 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r9 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r12 = virtualinvoke $r9.<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int)>(147465, 6, 0);

        virtualinvoke $r10.<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>($r12);

        return;

     label6:
        $r14 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r11 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r13 = virtualinvoke $r11.<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int)>(147465, 3, 0);

        virtualinvoke $r14.<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>($r13);

        return;
    }

    private android.net.wifi.p2p.WifiP2pService$P2pStatus p2pError(java.lang.String)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        java.lang.String r1, $r7, $r8, $r9;
        android.net.wifi.p2p.WifiP2pService$P2pStatus r2, r6, $r10;
        java.lang.String[] r3, r4;
        java.lang.NumberFormatException r5, $r11;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: java.lang.String;

        r2 = <android.net.wifi.p2p.WifiP2pService$P2pStatus: android.net.wifi.p2p.WifiP2pService$P2pStatus UNKNOWN>;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i0 = lengthof r3;

        if $i0 >= 2 goto label1;

        return r2;

     label1:
        $r7 = r3[1];

        r4 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i1 = lengthof r4;

        if $i1 == 2 goto label2;

        return r2;

     label2:
        $r8 = r4[1];

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("FREQ_CONFLICT");

        if $z0 == 0 goto label3;

        $r10 = <android.net.wifi.p2p.WifiP2pService$P2pStatus: android.net.wifi.p2p.WifiP2pService$P2pStatus NO_COMMON_CHANNEL>;

        return $r10;

     label3:
        $r9 = r4[1];

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        r6 = staticinvoke <android.net.wifi.p2p.WifiP2pService$P2pStatus: android.net.wifi.p2p.WifiP2pService$P2pStatus valueOf(int)>($i2);

     label4:
        r2 = r6;

     label5:
        return r2;

     label6:
        $r11 := @caughtexception;

        r5 = $r11;

        virtualinvoke r5.<java.lang.NumberFormatException: void printStackTrace()>();

        goto label5;

        catch java.lang.NumberFormatException from label3 to label4 with label6;
    }

    void handleEvent(int, java.lang.String)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        int i0;
        java.lang.String r1;
        com.android.internal.util.StateMachine $r2;
        android.net.NetworkInfo$DetailedState $r3, $r4;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        tableswitch(i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label4;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r3 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void handleNetworkStateChange(android.net.NetworkInfo$DetailedState,java.lang.String)>($r3, r1);

        return;

     label3:
        $r4 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: void handleNetworkStateChange(android.net.NetworkInfo$DetailedState,java.lang.String)>($r4, r1);

        return;

     label4:
        $r2 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r2.<com.android.internal.util.StateMachine: void sendMessage(int)>(147461);

        return;
    }

    void notifyNetworkStateChange(android.net.NetworkInfo$DetailedState, java.lang.String, int)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        android.net.NetworkInfo$DetailedState r1, $r5;
        java.lang.String r2;
        int i0;
        android.os.Message r3, r4;
        com.android.internal.util.StateMachine $r6, $r7, $r8, $r9;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        r1 := @parameter0: android.net.NetworkInfo$DetailedState;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        if r1 != $r5 goto label1;

        $r8 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        r4 = virtualinvoke $r8.<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(147459, i0, 0, r2);

        $r9 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r9.<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>(r4);

        return;

     label1:
        $r6 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        r3 = virtualinvoke $r6.<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(147460, i0, 0, r2);

        $r7 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        virtualinvoke $r7.<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>(r3);

        return;
    }

    void notifySupplicantStateChange(int, android.net.wifi.WifiSsid, java.lang.String, android.net.wifi.SupplicantState)
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        int i0;
        android.net.wifi.WifiSsid r1;
        java.lang.String r2;
        android.net.wifi.SupplicantState r3;
        android.net.wifi.StateChangeResult $r4;
        com.android.internal.util.StateMachine $r5, $r6;
        android.os.Message $r7;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.wifi.WifiSsid;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.net.wifi.SupplicantState;

        $r5 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r6 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        $r4 = new android.net.wifi.StateChangeResult;

        specialinvoke $r4.<android.net.wifi.StateChangeResult: void <init>(int,android.net.wifi.WifiSsid,java.lang.String,android.net.wifi.SupplicantState)>(i0, r1, r2, r3);

        $r7 = virtualinvoke $r6.<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,java.lang.Object)>(147462, $r4);

        virtualinvoke $r5.<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>($r7);

        return;
    }

    public void run()
    {
        android.net.wifi.WifiMonitor$MonitorThread r0;
        java.lang.String r1, r4;
        android.net.wifi.WifiMonitor r2, $r16;
        boolean z0, $z1, $z2, $z4, $z5, $z6, $z7;
        java.util.Iterator r3;
        int i0, $i1;
        android.net.wifi.WifiNative $r5;
        android.net.wifi.WifiMonitor$WifiMonitorSingleton $r6, $r8, $r11, $r18, $r19;
        com.android.internal.util.StateMachine $r7, $r15, $r17;
        java.util.HashMap $r9;
        java.util.Set $r10;
        java.lang.Object $r12, $r13;
        java.util.Map$Entry $r14;

        r0 := @this: android.net.wifi.WifiMonitor$MonitorThread;

     label1:
        $r5 = r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.WifiNative mWifiNative>;

        r1 = virtualinvoke $r5.<android.net.wifi.WifiNative: java.lang.String waitForEvent()>();

        r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine> = null;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("IFNAME=");

        if $z1 == 0 goto label5;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(32);

        r2 = null;

        if i0 == -1 goto label3;

        r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(7, i0);

        $r18 = r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.WifiMonitor$WifiMonitorSingleton mWifiMonitorSingleton>;

        r2 = staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor access$300(android.net.wifi.WifiMonitor$WifiMonitorSingleton,java.lang.String)>($r18, r4);

        if r2 != null goto label2;

        $z7 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("p2p-");

        if $z7 == 0 goto label2;

        $r19 = r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.WifiMonitor$WifiMonitorSingleton mWifiMonitorSingleton>;

        r2 = staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor access$300(android.net.wifi.WifiMonitor$WifiMonitorSingleton,java.lang.String)>($r19, "p2p0");

     label2:
        $i1 = i0 + 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label3:
        if r2 == null goto label4;

        $z6 = staticinvoke <android.net.wifi.WifiMonitor: boolean access$000(android.net.wifi.WifiMonitor)>(r2);

        if $z6 == 0 goto label1;

        $r17 = staticinvoke <android.net.wifi.WifiMonitor: com.android.internal.util.StateMachine access$100(android.net.wifi.WifiMonitor)>(r2);

        r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine> = $r17;

     label4:
        $r7 = r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine>;

        if $r7 == null goto label6;

        $z4 = specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: boolean dispatchEvent(java.lang.String)>(r1);

        if $z4 == 0 goto label1;

        return;

     label5:
        $r6 = r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.WifiMonitor$WifiMonitorSingleton mWifiMonitorSingleton>;

        r2 = staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor access$300(android.net.wifi.WifiMonitor$WifiMonitorSingleton,java.lang.String)>($r6, "p2p0");

        goto label3;

     label6:
        z0 = 0;

        $r8 = r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.WifiMonitor$WifiMonitorSingleton mWifiMonitorSingleton>;

        $r9 = staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap access$400(android.net.wifi.WifiMonitor$WifiMonitorSingleton)>($r8);

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (java.util.Map$Entry) $r12;

        $r13 = interfaceinvoke $r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (android.net.wifi.WifiMonitor) $r13;

        $r15 = staticinvoke <android.net.wifi.WifiMonitor: com.android.internal.util.StateMachine access$100(android.net.wifi.WifiMonitor)>($r16);

        r0.<android.net.wifi.WifiMonitor$MonitorThread: com.android.internal.util.StateMachine mStateMachine> = $r15;

        $z5 = specialinvoke r0.<android.net.wifi.WifiMonitor$MonitorThread: boolean dispatchEvent(java.lang.String)>(r1);

        if $z5 == 0 goto label7;

        z0 = 1;

        goto label7;

     label8:
        if z0 == 0 goto label1;

        $r11 = r0.<android.net.wifi.WifiMonitor$MonitorThread: android.net.wifi.WifiMonitor$WifiMonitorSingleton mWifiMonitorSingleton>;

        staticinvoke <android.net.wifi.WifiMonitor$WifiMonitorSingleton: boolean access$502(android.net.wifi.WifiMonitor$WifiMonitorSingleton,boolean)>($r11, 0);

        return;
    }
}
