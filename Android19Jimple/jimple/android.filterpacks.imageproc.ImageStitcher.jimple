public class android.filterpacks.imageproc.ImageStitcher extends android.filterfw.core.Filter
{
    private int mImageHeight;
    private int mImageWidth;
    private int mInputHeight;
    private int mInputWidth;
    private android.filterfw.core.Frame mOutputFrame;
    private int mPadSize;
    private android.filterfw.core.Program mProgram;
    private int mSliceHeight;
    private int mSliceIndex;
    private int mSliceWidth;
    private int mXSlices;
    private int mYSlices;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex> = 0;

        return;
    }

    private android.filterfw.core.FrameFormat calcOutputFormatForInput(android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        android.filterfw.core.FrameFormat r1;
        android.filterfw.core.MutableFrameFormat r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        r1 := @parameter0: android.filterfw.core.FrameFormat;

        r2 = virtualinvoke r1.<android.filterfw.core.FrameFormat: android.filterfw.core.MutableFrameFormat mutableCopy()>();

        $i0 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getWidth()>();

        r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth> = $i0;

        $i1 = virtualinvoke r1.<android.filterfw.core.FrameFormat: int getHeight()>();

        r0.<android.filterpacks.imageproc.ImageStitcher: int mInputHeight> = $i1;

        $i4 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth>;

        $i2 = r0.<android.filterpacks.imageproc.ImageStitcher: int mPadSize>;

        $i3 = 2 * $i2;

        $i5 = $i4 - $i3;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceWidth> = $i5;

        $i8 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputHeight>;

        $i6 = r0.<android.filterpacks.imageproc.ImageStitcher: int mPadSize>;

        $i7 = 2 * $i6;

        $i9 = $i8 - $i7;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceHeight> = $i9;

        $i11 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceWidth>;

        $i10 = r0.<android.filterpacks.imageproc.ImageStitcher: int mXSlices>;

        $i13 = $i11 * $i10;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mImageWidth> = $i13;

        $i15 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceHeight>;

        $i12 = r0.<android.filterpacks.imageproc.ImageStitcher: int mYSlices>;

        $i14 = $i15 * $i12;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mImageHeight> = $i14;

        $i16 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageWidth>;

        $i17 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageHeight>;

        virtualinvoke r2.<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>($i16, $i17);

        return r2;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2, $r11, $r12, $r16, $r17;
        android.filterfw.core.FrameFormat r3, $r18;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        java.lang.RuntimeException $r4;
        android.filterfw.core.Program $r5, $r6, $r7, $r9;
        android.filterfw.core.ShaderProgram $r8, $r10, $r14;
        android.filterfw.core.FrameManager $r15;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r3 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $i2 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex>;

        if $i2 != 0 goto label4;

        $r15 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r18 = specialinvoke r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.FrameFormat calcOutputFormatForInput(android.filterfw.core.FrameFormat)>(r3);

        $r17 = virtualinvoke $r15.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>($r18);

        r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame mOutputFrame> = $r17;

     label1:
        $r5 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram>;

        if $r5 != null goto label2;

        $r14 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r1);

        r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram> = $r14;

     label2:
        $i7 = r0.<android.filterpacks.imageproc.ImageStitcher: int mPadSize>;

        $f5 = (float) $i7;

        $i8 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth>;

        $f4 = (float) $i8;

        f0 = $f5 / $f4;

        $i9 = r0.<android.filterpacks.imageproc.ImageStitcher: int mPadSize>;

        $f7 = (float) $i9;

        $i10 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputHeight>;

        $f6 = (float) $i10;

        f1 = $f7 / $f6;

        $i13 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex>;

        $i11 = r0.<android.filterpacks.imageproc.ImageStitcher: int mXSlices>;

        $i15 = $i13 % $i11;

        $i12 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceWidth>;

        i0 = $i15 * $i12;

        $i18 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex>;

        $i14 = r0.<android.filterpacks.imageproc.ImageStitcher: int mXSlices>;

        $i16 = $i18 / $i14;

        $i19 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceHeight>;

        i1 = $i16 * $i19;

        $i23 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceWidth>;

        $i17 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageWidth>;

        $i22 = $i17 - i0;

        $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i23, $i22);

        f2 = (float) $i20;

        $i26 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceHeight>;

        $i21 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageHeight>;

        $i25 = $i21 - i1;

        $i24 = staticinvoke <java.lang.Math: int min(int,int)>($i26, $i25);

        f3 = (float) $i24;

        $r6 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram>;

        $r8 = (android.filterfw.core.ShaderProgram) $r6;

        $i28 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth>;

        $f9 = (float) $i28;

        $f10 = f2 / $f9;

        $i27 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputHeight>;

        $f8 = (float) $i27;

        $f11 = f3 / $f8;

        virtualinvoke $r8.<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>(f0, f1, $f10, $f11);

        $r7 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram>;

        $r10 = (android.filterfw.core.ShaderProgram) $r7;

        $f12 = (float) i0;

        $i30 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageWidth>;

        $f13 = (float) $i30;

        $f21 = $f12 / $f13;

        $f15 = (float) i1;

        $i29 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageHeight>;

        $f16 = (float) $i29;

        $f20 = $f15 / $f16;

        $i31 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageWidth>;

        $f14 = (float) $i31;

        $f17 = f2 / $f14;

        $i32 = r0.<android.filterpacks.imageproc.ImageStitcher: int mImageHeight>;

        $f19 = (float) $i32;

        $f18 = f3 / $f19;

        virtualinvoke $r10.<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>($f21, $f20, $f17, $f18);

        $r9 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Program mProgram>;

        $r11 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame mOutputFrame>;

        virtualinvoke $r9.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r2, $r11);

        $i33 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex>;

        $i34 = 1 + $i33;

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex> = $i34;

        $i38 = r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex>;

        $i36 = r0.<android.filterpacks.imageproc.ImageStitcher: int mXSlices>;

        $i35 = r0.<android.filterpacks.imageproc.ImageStitcher: int mYSlices>;

        $i37 = $i36 * $i35;

        if $i38 != $i37 goto label3;

        $r16 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame mOutputFrame>;

        virtualinvoke r0.<android.filterpacks.imageproc.ImageStitcher: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", $r16);

        $r12 = r0.<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.Frame mOutputFrame>;

        virtualinvoke $r12.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        r0.<android.filterpacks.imageproc.ImageStitcher: int mSliceIndex> = 0;

     label3:
        return;

     label4:
        $i3 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i4 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputWidth>;

        if $i3 != $i4 goto label5;

        $i6 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        $i5 = r0.<android.filterpacks.imageproc.ImageStitcher: int mInputHeight>;

        if $i6 == $i5 goto label1;

     label5:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Image size should not change.");

        throw $r4;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.ImageStitcher r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.ImageStitcher;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>(3, 3);

        virtualinvoke r0.<android.filterpacks.imageproc.ImageStitcher: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.ImageStitcher: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }
}
