public class org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator extends org.apache.xml.dtm.ref.DTMDefaultBaseIterators$RootIterator
{
    private final int _nodeType;
    final org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0;

    public void <init>(org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2, int)
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator r0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 r1;
        int i0;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator;

        r1 := @parameter0: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2;

        i0 := @parameter1: int;

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseIterators$RootIterator: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseIterators)>(r1);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int _nodeType> = i0;

        return;
    }

    public int next()
    {
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 $r1, $r2, $r3;
        org.apache.xml.dtm.ref.ExtendedType[] $r4;
        org.apache.xml.dtm.ref.ExtendedType $r5;

        r0 := @this: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator;

        $i3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int _startNode>;

        $i2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int _currentNode>;

        if $i3 != $i2 goto label2;

     label1:
        return -1;

     label2:
        i0 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int _startNode>;

        $r2 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $r1 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $i4 = virtualinvoke $r1.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int makeNodeIdentity(int)>(i0);

        i1 = virtualinvoke $r2.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int _exptype2(int)>($i4);

        r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int _currentNode> = i0;

        $i5 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int _nodeType>;

        if $i5 < 14 goto label3;

        $i12 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int _nodeType>;

        if $i12 != i1 goto label1;

        $i11 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int returnNode(int)>(i0);

        return $i11;

     label3:
        if i1 >= 14 goto label4;

        $i10 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int _nodeType>;

        if i1 != $i10 goto label1;

        $i9 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int returnNode(int)>(i0);

        return $i9;

     label4:
        $r3 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2 this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: org.apache.xml.dtm.ref.ExtendedType[] m_extendedTypes>;

        $r5 = $r4[i1];

        $i6 = virtualinvoke $r5.<org.apache.xml.dtm.ref.ExtendedType: int getNodeType()>();

        $i7 = r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int _nodeType>;

        if $i6 != $i7 goto label1;

        $i8 = virtualinvoke r0.<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2$TypedRootIterator: int returnNode(int)>(i0);

        return $i8;
    }
}
