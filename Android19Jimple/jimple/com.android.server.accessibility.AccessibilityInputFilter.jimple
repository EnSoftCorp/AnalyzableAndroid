class com.android.server.accessibility.AccessibilityInputFilter extends android.view.InputFilter implements com.android.server.accessibility.EventStreamTransformation
{
    private static final boolean DEBUG;
    static final int FLAG_FEATURE_FILTER_KEY_EVENTS;
    static final int FLAG_FEATURE_SCREEN_MAGNIFIER;
    static final int FLAG_FEATURE_TOUCH_EXPLORATION;
    private static final java.lang.String TAG;
    private final com.android.server.accessibility.AccessibilityManagerService mAms;
    private final android.view.Choreographer mChoreographer;
    private final android.content.Context mContext;
    private int mCurrentTouchDeviceId;
    private int mEnabledFeatures;
    private com.android.server.accessibility.EventStreamTransformation mEventHandler;
    private com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue;
    private boolean mFilterKeyEvents;
    private boolean mHoverEventSequenceStarted;
    private boolean mInstalled;
    private boolean mKeyEventSequenceStarted;
    private boolean mMotionEventSequenceStarted;
    private final android.os.PowerManager mPm;
    private final java.lang.Runnable mProcessBatchedEventsRunnable;
    private com.android.server.accessibility.ScreenMagnifier mScreenMagnifier;
    private com.android.server.accessibility.TouchExplorer mTouchExplorer;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_TOUCH_EXPLORATION> = 2;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_SCREEN_MAGNIFIER> = 1;

        <com.android.server.accessibility.AccessibilityInputFilter: int FLAG_FEATURE_FILTER_KEY_EVENTS> = 4;

        <com.android.server.accessibility.AccessibilityInputFilter: boolean DEBUG> = 0;

        $r0 = class "com/android/server/accessibility/AccessibilityInputFilter";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.server.accessibility.AccessibilityInputFilter: java.lang.String TAG> = $r1;

        return;
    }

    void <init>(android.content.Context, com.android.server.accessibility.AccessibilityManagerService)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.content.Context r1;
        com.android.server.accessibility.AccessibilityManagerService r2;
        android.os.Looper $r3;
        com.android.server.accessibility.AccessibilityInputFilter$1 $r4;
        java.lang.Object $r5;
        android.os.PowerManager $r6;
        android.view.Choreographer $r7;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.accessibility.AccessibilityManagerService;

        $r3 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke r0.<android.view.InputFilter: void <init>(android.os.Looper)>($r3);

        $r4 = new com.android.server.accessibility.AccessibilityInputFilter$1;

        specialinvoke $r4.<com.android.server.accessibility.AccessibilityInputFilter$1: void <init>(com.android.server.accessibility.AccessibilityInputFilter)>(r0);

        r0.<com.android.server.accessibility.AccessibilityInputFilter: java.lang.Runnable mProcessBatchedEventsRunnable> = $r4;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: android.content.Context mContext> = r1;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms> = r2;

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r6 = (android.os.PowerManager) $r5;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: android.os.PowerManager mPm> = $r6;

        $r7 = staticinvoke <android.view.Choreographer: android.view.Choreographer getInstance()>();

        r0.<com.android.server.accessibility.AccessibilityInputFilter: android.view.Choreographer mChoreographer> = $r7;

        return;
    }

    static android.view.Choreographer access$000(com.android.server.accessibility.AccessibilityInputFilter)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.Choreographer $r1;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityInputFilter;

        $r1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.view.Choreographer mChoreographer>;

        return $r1;
    }

    static void access$100(com.android.server.accessibility.AccessibilityInputFilter, long)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        long l0;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityInputFilter;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void processBatchedEvents(long)>(l0);

        return;
    }

    static com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder access$200(com.android.server.accessibility.AccessibilityInputFilter)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder $r1;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityInputFilter;

        $r1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue>;

        return $r1;
    }

    static void access$300(com.android.server.accessibility.AccessibilityInputFilter)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityInputFilter;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void scheduleProcessBatchedEvents()>();

        return;
    }

    private void batchMotionEvent(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.MotionEvent r1, $r5;
        int i0;
        com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder r2, $r3, $r4, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue>;

        if $r3 != null goto label2;

        $r8 = staticinvoke <com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder obtain(android.view.MotionEvent,int)>(r1, i0);

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue> = $r8;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void scheduleProcessBatchedEvents()>();

     label1:
        return;

     label2:
        $r4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue>;

        $r5 = $r4.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: android.view.MotionEvent event>;

        $z0 = virtualinvoke $r5.<android.view.MotionEvent: boolean addBatch(android.view.MotionEvent)>(r1);

        if $z0 != 0 goto label1;

        r2 = staticinvoke <com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder obtain(android.view.MotionEvent,int)>(r1, i0);

        $r6 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue>;

        r2.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder next> = $r6;

        $r7 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue>;

        $r7.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder previous> = r2;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue> = r2;

        return;
    }

    private void enableFeatures()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        com.android.server.accessibility.ScreenMagnifier r1, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.server.accessibility.TouchExplorer $r2, $r5, $r7, $r8;
        com.android.server.accessibility.AccessibilityManagerService $r3, $r10;
        android.content.Context $r4, $r13;
        com.android.server.accessibility.EventStreamTransformation $r6, $r9, $r12;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mMotionEventSequenceStarted> = 0;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mHoverEventSequenceStarted> = 0;

        $i0 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i1 = 1 & $i0;

        if $i1 == 0 goto label1;

        $r11 = new com.android.server.accessibility.ScreenMagnifier;

        $r13 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.content.Context mContext>;

        $r10 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms>;

        specialinvoke $r11.<com.android.server.accessibility.ScreenMagnifier: void <init>(android.content.Context,int,com.android.server.accessibility.AccessibilityManagerService)>($r13, 0, $r10);

        r1 = $r11;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.ScreenMagnifier mScreenMagnifier> = r1;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler> = r1;

        $r12 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        interfaceinvoke $r12.<com.android.server.accessibility.EventStreamTransformation: void setNext(com.android.server.accessibility.EventStreamTransformation)>(r0);

     label1:
        $i2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i3 = 2 & $i2;

        if $i3 == 0 goto label2;

        $r2 = new com.android.server.accessibility.TouchExplorer;

        $r4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.content.Context mContext>;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms>;

        specialinvoke $r2.<com.android.server.accessibility.TouchExplorer: void <init>(android.content.Context,com.android.server.accessibility.AccessibilityManagerService)>($r4, $r3);

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.TouchExplorer mTouchExplorer> = $r2;

        $r5 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.TouchExplorer mTouchExplorer>;

        virtualinvoke $r5.<com.android.server.accessibility.TouchExplorer: void setNext(com.android.server.accessibility.EventStreamTransformation)>(r0);

        $r6 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        if $r6 == null goto label4;

        $r9 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        $r8 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.TouchExplorer mTouchExplorer>;

        interfaceinvoke $r9.<com.android.server.accessibility.EventStreamTransformation: void setNext(com.android.server.accessibility.EventStreamTransformation)>($r8);

     label2:
        $i4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        $i5 = 4 & $i4;

        if $i5 == 0 goto label3;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mFilterKeyEvents> = 1;

     label3:
        return;

     label4:
        $r7 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.TouchExplorer mTouchExplorer>;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler> = $r7;

        goto label2;
    }

    private void handleMotionEvent(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.MotionEvent r1, r2;
        int i0;
        com.android.server.accessibility.EventStreamTransformation $r3, $r5;
        android.os.PowerManager $r4;
        long $l1;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.os.PowerManager mPm>;

        $l1 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        virtualinvoke $r4.<android.os.PowerManager: void userActivity(long,boolean)>($l1, 0);

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        $r5 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        interfaceinvoke $r5.<com.android.server.accessibility.EventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>(r2, r1, i0);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

     label1:
        return;
    }

    private void onKeyEvent(android.view.KeyEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.KeyEvent r1;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        com.android.server.accessibility.AccessibilityManagerService $r2;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.KeyEvent;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mFilterKeyEvents>;

        if $z0 != 0 goto label2;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

     label1:
        return;

     label2:
        $i1 = 1073741824 & i0;

        if $i1 != 0 goto label3;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mKeyEventSequenceStarted> = 0;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;

     label3:
        $z1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mKeyEventSequenceStarted>;

        if $z1 != 0 goto label4;

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i2 != 0 goto label1;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mKeyEventSequenceStarted> = 1;

     label4:
        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityManagerService mAms>;

        virtualinvoke $r2.<com.android.server.accessibility.AccessibilityManagerService: boolean notifyKeyEvent(android.view.KeyEvent,int)>(r1, i0);

        return;
    }

    private void onMotionEvent(android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.server.accessibility.EventStreamTransformation $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        if $r2 != null goto label2;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

     label1:
        return;

     label2:
        $i2 = 1073741824 & i0;

        if $i2 != 0 goto label3;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mMotionEventSequenceStarted> = 0;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mHoverEventSequenceStarted> = 0;

        $r4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        interfaceinvoke $r4.<com.android.server.accessibility.EventStreamTransformation: void clear()>();

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;

     label3:
        i1 = virtualinvoke r1.<android.view.MotionEvent: int getDeviceId()>();

        $i3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mCurrentTouchDeviceId>;

        if $i3 == i1 goto label4;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: int mCurrentTouchDeviceId> = i1;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mMotionEventSequenceStarted> = 0;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mHoverEventSequenceStarted> = 0;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        interfaceinvoke $r3.<com.android.server.accessibility.EventStreamTransformation: void clear()>();

     label4:
        $i4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mCurrentTouchDeviceId>;

        if $i4 >= 0 goto label5;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;

     label5:
        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i5 != 8 goto label6;

        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;

     label6:
        $z0 = virtualinvoke r1.<android.view.MotionEvent: boolean isTouchEvent()>();

        if $z0 == 0 goto label8;

        $z2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mMotionEventSequenceStarted>;

        if $z2 != 0 goto label7;

        $i7 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i7 != 0 goto label1;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mMotionEventSequenceStarted> = 1;

     label7:
        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void batchMotionEvent(android.view.MotionEvent,int)>(r1, i0);

        return;

     label8:
        $z1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mHoverEventSequenceStarted>;

        if $z1 != 0 goto label7;

        $i6 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i6 != 9 goto label1;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mHoverEventSequenceStarted> = 1;

        goto label7;
    }

    private void processBatchedEvents(long)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        long l0, $l1;
        com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder r1, r2, $r3;
        android.view.MotionEvent $r4, $r5;
        byte $b2;
        int $i3;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        l0 := @parameter0: long;

        r1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue>;

     label1:
        $r3 = r1.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder next>;

        if $r3 == null goto label3;

        r1 = r1.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder next>;

        goto label1;

     label2:
        $r5 = r1.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: android.view.MotionEvent event>;

        $i3 = r1.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: int policyFlags>;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void handleMotionEvent(android.view.MotionEvent,int)>($r5, $i3);

        r2 = r1;

        r1 = r1.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder previous>;

        virtualinvoke r2.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: void recycle()>();

     label3:
        if r1 != null goto label4;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder mEventQueue> = null;

        return;

     label4:
        $r4 = r1.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: android.view.MotionEvent event>;

        $l1 = virtualinvoke $r4.<android.view.MotionEvent: long getEventTimeNano()>();

        $b2 = $l1 cmp l0;

        if $b2 < 0 goto label2;

        r1.<com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder: com.android.server.accessibility.AccessibilityInputFilter$MotionEventHolder next> = null;

        return;
    }

    private void scheduleProcessBatchedEvents()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        java.lang.Runnable $r1;
        android.view.Choreographer $r2;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: android.view.Choreographer mChoreographer>;

        $r1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: java.lang.Runnable mProcessBatchedEventsRunnable>;

        virtualinvoke $r2.<android.view.Choreographer: void postCallback(int,java.lang.Runnable,java.lang.Object)>(0, $r1, null);

        return;
    }

    public void clear()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        return;
    }

    void disableFeatures()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        com.android.server.accessibility.TouchExplorer $r1, $r5, $r6;
        com.android.server.accessibility.ScreenMagnifier $r2, $r3, $r4;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        $r1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.TouchExplorer mTouchExplorer>;

        if $r1 == null goto label1;

        $r5 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.TouchExplorer mTouchExplorer>;

        virtualinvoke $r5.<com.android.server.accessibility.TouchExplorer: void clear()>();

        $r6 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.TouchExplorer mTouchExplorer>;

        virtualinvoke $r6.<com.android.server.accessibility.TouchExplorer: void onDestroy()>();

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.TouchExplorer mTouchExplorer> = null;

     label1:
        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.ScreenMagnifier mScreenMagnifier>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.ScreenMagnifier mScreenMagnifier>;

        virtualinvoke $r3.<com.android.server.accessibility.ScreenMagnifier: void clear()>();

        $r4 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.ScreenMagnifier mScreenMagnifier>;

        virtualinvoke $r4.<com.android.server.accessibility.ScreenMagnifier: void onDestroy()>();

        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.ScreenMagnifier mScreenMagnifier> = null;

     label2:
        r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler> = null;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mKeyEventSequenceStarted> = 0;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mMotionEventSequenceStarted> = 0;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mHoverEventSequenceStarted> = 0;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mFilterKeyEvents> = 0;

        return;
    }

    void notifyAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.accessibility.AccessibilityEvent r1;
        com.android.server.accessibility.EventStreamTransformation $r2, $r3;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.server.accessibility.AccessibilityInputFilter: com.android.server.accessibility.EventStreamTransformation mEventHandler>;

        interfaceinvoke $r3.<com.android.server.accessibility.EventStreamTransformation: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

     label1:
        return;
    }

    public void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        return;
    }

    public void onDestroy()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        return;
    }

    public void onInputEvent(android.view.InputEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.InputEvent r1;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        android.view.KeyEvent $r2;
        android.view.MotionEvent $r3;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.InputEvent;

        i0 := @parameter1: int;

        $z0 = r1 instanceof android.view.MotionEvent;

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r1.<android.view.InputEvent: boolean isFromSource(int)>(4098);

        if $z3 == 0 goto label1;

        $r3 = (android.view.MotionEvent) r1;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void onMotionEvent(android.view.MotionEvent,int)>($r3, i0);

        return;

     label1:
        $z1 = r1 instanceof android.view.KeyEvent;

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r1.<android.view.InputEvent: boolean isFromSource(int)>(257);

        if $z2 == 0 goto label2;

        $r2 = (android.view.KeyEvent) r1;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void onKeyEvent(android.view.KeyEvent,int)>($r2, i0);

        return;

     label2:
        specialinvoke r0.<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;
    }

    public void onInstalled()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mInstalled> = 1;

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void disableFeatures()>();

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void enableFeatures()>();

        specialinvoke r0.<android.view.InputFilter: void onInstalled()>();

        return;
    }

    public void onMotionEvent(android.view.MotionEvent, android.view.MotionEvent, int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        android.view.MotionEvent r1, r2;
        int i0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        i0 := @parameter2: int;

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void sendInputEvent(android.view.InputEvent,int)>(r1, i0);

        return;
    }

    public void onUninstalled()
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mInstalled> = 0;

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void disableFeatures()>();

        specialinvoke r0.<android.view.InputFilter: void onUninstalled()>();

        return;
    }

    void setEnabledFeatures(int)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures>;

        if $i1 != i0 goto label2;

     label1:
        return;

     label2:
        $z0 = r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mInstalled>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void disableFeatures()>();

     label3:
        r0.<com.android.server.accessibility.AccessibilityInputFilter: int mEnabledFeatures> = i0;

        $z1 = r0.<com.android.server.accessibility.AccessibilityInputFilter: boolean mInstalled>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.accessibility.AccessibilityInputFilter: void enableFeatures()>();

        return;
    }

    public void setNext(com.android.server.accessibility.EventStreamTransformation)
    {
        com.android.server.accessibility.AccessibilityInputFilter r0;
        com.android.server.accessibility.EventStreamTransformation r1;

        r0 := @this: com.android.server.accessibility.AccessibilityInputFilter;

        r1 := @parameter0: com.android.server.accessibility.EventStreamTransformation;

        return;
    }
}
