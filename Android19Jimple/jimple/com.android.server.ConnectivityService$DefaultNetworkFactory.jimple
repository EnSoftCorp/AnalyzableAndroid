class com.android.server.ConnectivityService$DefaultNetworkFactory extends java.lang.Object implements com.android.server.ConnectivityService$NetworkFactory
{
    private final android.content.Context mContext;
    private final android.os.Handler mTrackerHandler;

    public void <init>(android.content.Context, android.os.Handler)
    {
        com.android.server.ConnectivityService$DefaultNetworkFactory r0;
        android.content.Context r1;
        android.os.Handler r2;

        r0 := @this: com.android.server.ConnectivityService$DefaultNetworkFactory;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.ConnectivityService$DefaultNetworkFactory: android.content.Context mContext> = r1;

        r0.<com.android.server.ConnectivityService$DefaultNetworkFactory: android.os.Handler mTrackerHandler> = r2;

        return;
    }

    public android.net.NetworkStateTracker createTracker(int, android.net.NetworkConfig)
    {
        com.android.server.ConnectivityService$DefaultNetworkFactory r0;
        int i0, $i1, $i2;
        android.net.NetworkConfig r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r9, $r16, $r17;
        android.net.EthernetDataTracker $r7;
        android.net.DummyDataStateTracker $r8;
        android.bluetooth.BluetoothTetheringDataTracker $r10;
        android.os.Handler $r11;
        android.content.Context $r12;
        android.net.wifi.WifiStateTracker $r13;
        android.net.NetworkStateTracker $r14;
        android.net.MobileDataStateTracker $r15;

        r0 := @this: com.android.server.ConnectivityService$DefaultNetworkFactory;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.NetworkConfig;

        $i1 = r1.<android.net.NetworkConfig: int radio>;

        tableswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label6;
            case 7: goto label5;
            case 8: goto label4;
            case 9: goto label7;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to create a NetworkStateTracker for an unknown radio type: ");

        $i2 = r1.<android.net.NetworkConfig: int radio>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        $r13 = new android.net.wifi.WifiStateTracker;

        $r16 = r1.<android.net.NetworkConfig: java.lang.String name>;

        specialinvoke $r13.<android.net.wifi.WifiStateTracker: void <init>(int,java.lang.String)>(i0, $r16);

        return $r13;

     label3:
        $r15 = new android.net.MobileDataStateTracker;

        $r17 = r1.<android.net.NetworkConfig: java.lang.String name>;

        specialinvoke $r15.<android.net.MobileDataStateTracker: void <init>(int,java.lang.String)>(i0, $r17);

        return $r15;

     label4:
        $r8 = new android.net.DummyDataStateTracker;

        $r9 = r1.<android.net.NetworkConfig: java.lang.String name>;

        specialinvoke $r8.<android.net.DummyDataStateTracker: void <init>(int,java.lang.String)>(i0, $r9);

        return $r8;

     label5:
        $r10 = staticinvoke <android.bluetooth.BluetoothTetheringDataTracker: android.bluetooth.BluetoothTetheringDataTracker getInstance()>();

        return $r10;

     label6:
        $r12 = r0.<com.android.server.ConnectivityService$DefaultNetworkFactory: android.content.Context mContext>;

        $r11 = r0.<com.android.server.ConnectivityService$DefaultNetworkFactory: android.os.Handler mTrackerHandler>;

        $r14 = staticinvoke <com.android.server.ConnectivityService: android.net.NetworkStateTracker access$200(android.content.Context,android.os.Handler)>($r12, $r11);

        return $r14;

     label7:
        $r7 = staticinvoke <android.net.EthernetDataTracker: android.net.EthernetDataTracker getInstance()>();

        return $r7;
    }
}
