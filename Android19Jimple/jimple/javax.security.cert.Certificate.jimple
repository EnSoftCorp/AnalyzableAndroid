public abstract class javax.security.cert.Certificate extends java.lang.Object
{

    public void <init>()
    {
        javax.security.cert.Certificate r0;

        r0 := @this: javax.security.cert.Certificate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        javax.security.cert.Certificate r0, r2;
        java.lang.Object r1;
        boolean z0, z1, z2;
        byte[] $r4, $r5;
        javax.security.cert.CertificateEncodingException $r6;

        r0 := @this: javax.security.cert.Certificate;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

        z1 = 1;

     label1:
        return z1;

     label2:
        z0 = r1 instanceof javax.security.cert.Certificate;

        z1 = 0;

        if z0 == 0 goto label1;

        r2 = (javax.security.cert.Certificate) r1;

     label3:
        $r4 = virtualinvoke r0.<javax.security.cert.Certificate: byte[] getEncoded()>();

        $r5 = virtualinvoke r2.<javax.security.cert.Certificate: byte[] getEncoded()>();

        z2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r5);

     label4:
        return z2;

     label5:
        $r6 := @caughtexception;

        return 0;

        catch javax.security.cert.CertificateEncodingException from label3 to label4 with label5;
    }

    public abstract byte[] getEncoded() throws javax.security.cert.CertificateEncodingException;

    public abstract java.security.PublicKey getPublicKey();

    public int hashCode()
    {
        javax.security.cert.Certificate r0;
        int i0, i1, $i3;
        byte[] r2;
        byte b2;
        javax.security.cert.CertificateEncodingException $r3;

        r0 := @this: javax.security.cert.Certificate;

        i0 = 0;

     label1:
        r2 = virtualinvoke r0.<javax.security.cert.Certificate: byte[] getEncoded()>();

     label2:
        i1 = 0;

     label3:
        $i3 = lengthof r2;

        if i1 >= $i3 goto label6;

        b2 = r2[i1];

     label4:
        i0 = i0 + b2;

        i1 = i1 + 1;

        goto label3;

     label5:
        $r3 := @caughtexception;

     label6:
        return i0;

        catch javax.security.cert.CertificateEncodingException from label1 to label2 with label5;
        catch javax.security.cert.CertificateEncodingException from label3 to label4 with label5;
    }

    public abstract java.lang.String toString();

    public abstract void verify(java.security.PublicKey) throws javax.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;

    public abstract void verify(java.security.PublicKey, java.lang.String) throws javax.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
}
