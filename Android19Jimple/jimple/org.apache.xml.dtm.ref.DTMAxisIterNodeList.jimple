public class org.apache.xml.dtm.ref.DTMAxisIterNodeList extends org.apache.xml.dtm.ref.DTMNodeListBase
{
    private org.apache.xml.utils.IntVector m_cachedNodes;
    private org.apache.xml.dtm.DTM m_dtm;
    private org.apache.xml.dtm.DTMAxisIterator m_iter;
    private int m_last;

    private void <init>()
    {
        org.apache.xml.dtm.ref.DTMAxisIterNodeList r0;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIterNodeList;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeListBase: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int m_last> = -1;

        return;
    }

    public void <init>(org.apache.xml.dtm.DTM, org.apache.xml.dtm.DTMAxisIterator)
    {
        org.apache.xml.dtm.ref.DTMAxisIterNodeList r0;
        org.apache.xml.dtm.DTM r1;
        org.apache.xml.dtm.DTMAxisIterator r2;
        org.apache.xml.utils.IntVector $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIterNodeList;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        r2 := @parameter1: org.apache.xml.dtm.DTMAxisIterator;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMNodeListBase: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int m_last> = -1;

        if r2 != null goto label2;

        r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int m_last> = 0;

     label1:
        r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTMAxisIterator m_iter> = r2;

        return;

     label2:
        $r3 = new org.apache.xml.utils.IntVector;

        specialinvoke $r3.<org.apache.xml.utils.IntVector: void <init>()>();

        r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.utils.IntVector m_cachedNodes> = $r3;

        r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTM m_dtm> = r1;

        goto label1;
    }

    public org.apache.xml.dtm.DTMAxisIterator getDTMAxisIterator()
    {
        org.apache.xml.dtm.ref.DTMAxisIterNodeList r0;
        org.apache.xml.dtm.DTMAxisIterator $r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIterNodeList;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTMAxisIterator m_iter>;

        return $r1;
    }

    public int getLength()
    {
        org.apache.xml.dtm.ref.DTMAxisIterNodeList r0;
        int i0, $i1, $i2, $i3;
        org.apache.xml.dtm.DTMAxisIterator $r1;
        org.apache.xml.utils.IntVector $r2, $r3;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIterNodeList;

        $i1 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int m_last>;

        if $i1 != -1 goto label3;

     label1:
        $r1 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTMAxisIterator m_iter>;

        i0 = interfaceinvoke $r1.<org.apache.xml.dtm.DTMAxisIterator: int next()>();

        if i0 == -1 goto label2;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.utils.IntVector m_cachedNodes>;

        virtualinvoke $r3.<org.apache.xml.utils.IntVector: void addElement(int)>(i0);

        goto label1;

     label2:
        $r2 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.utils.IntVector m_cachedNodes>;

        $i3 = virtualinvoke $r2.<org.apache.xml.utils.IntVector: int size()>();

        r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int m_last> = $i3;

     label3:
        $i2 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int m_last>;

        return $i2;
    }

    public org.w3c.dom.Node item(int)
    {
        org.apache.xml.dtm.ref.DTMAxisIterNodeList r0;
        int i0, i1, i2, i3, $i4;
        org.apache.xml.dtm.DTMAxisIterator $r1, $r3;
        org.apache.xml.utils.IntVector $r2, $r6, $r7;
        org.apache.xml.dtm.DTM $r4, $r9;
        org.w3c.dom.Node $r5, $r8;

        r0 := @this: org.apache.xml.dtm.ref.DTMAxisIterNodeList;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTMAxisIterator m_iter>;

        if $r1 == null goto label4;

        $r2 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.utils.IntVector m_cachedNodes>;

        i1 = virtualinvoke $r2.<org.apache.xml.utils.IntVector: int size()>();

        if i1 <= i0 goto label1;

        $r7 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.utils.IntVector m_cachedNodes>;

        i3 = virtualinvoke $r7.<org.apache.xml.utils.IntVector: int elementAt(int)>(i0);

        $r9 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTM m_dtm>;

        $r8 = interfaceinvoke $r9.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i3);

        return $r8;

     label1:
        $i4 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int m_last>;

        if $i4 != -1 goto label4;

     label2:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTMAxisIterator m_iter>;

        i2 = interfaceinvoke $r3.<org.apache.xml.dtm.DTMAxisIterator: int next()>();

        if i2 == -1 goto label3;

        if i1 > i0 goto label3;

        $r6 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.utils.IntVector m_cachedNodes>;

        virtualinvoke $r6.<org.apache.xml.utils.IntVector: void addElement(int)>(i2);

        i1 = i1 + 1;

        goto label2;

     label3:
        if i2 != -1 goto label5;

        r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int m_last> = i1;

     label4:
        return null;

     label5:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTM m_dtm>;

        $r5 = interfaceinvoke $r4.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>(i2);

        return $r5;
    }
}
