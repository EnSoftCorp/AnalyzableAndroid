public class org.apache.xpath.functions.FuncId extends org.apache.xpath.functions.FunctionOneArg
{
    static final long serialVersionUID;

    public void <init>()
    {
        org.apache.xpath.functions.FuncId r0;

        r0 := @this: org.apache.xpath.functions.FuncId;

        specialinvoke r0.<org.apache.xpath.functions.FunctionOneArg: void <init>()>();

        return;
    }

    private org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext, int, java.lang.String, org.apache.xml.utils.StringVector, org.apache.xpath.NodeSetDTM, boolean)
    {
        org.apache.xpath.functions.FuncId r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1;
        java.lang.String r2, r7;
        org.apache.xml.utils.StringVector r3, $r9;
        org.apache.xpath.NodeSetDTM r4;
        boolean z0, z1, $z2;
        java.util.StringTokenizer r5, $r8;
        org.apache.xml.dtm.DTM r6;

        r0 := @this: org.apache.xpath.functions.FuncId;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.apache.xml.utils.StringVector;

        r4 := @parameter4: org.apache.xpath.NodeSetDTM;

        z0 := @parameter5: boolean;

        if r2 == null goto label6;

        $r8 = new java.util.StringTokenizer;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String)>(r2);

        r5 = $r8;

        z1 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        r6 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

     label1:
        if z1 == 0 goto label6;

        r7 = virtualinvoke r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        z1 = virtualinvoke r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if r3 == null goto label2;

        $z2 = virtualinvoke r3.<org.apache.xml.utils.StringVector: boolean contains(java.lang.String)>(r7);

        if $z2 == 0 goto label2;

        goto label1;

     label2:
        i1 = interfaceinvoke r6.<org.apache.xml.dtm.DTM: int getElementById(java.lang.String)>(r7);

        if -1 == i1 goto label3;

        virtualinvoke r4.<org.apache.xpath.NodeSetDTM: int addNodeInDocOrder(int,org.apache.xpath.XPathContext)>(i1, r1);

     label3:
        if r7 == null goto label1;

        if z1 != 0 goto label4;

        if z0 == 0 goto label1;

     label4:
        if r3 != null goto label5;

        $r9 = new org.apache.xml.utils.StringVector;

        specialinvoke $r9.<org.apache.xml.utils.StringVector: void <init>()>();

        r3 = $r9;

     label5:
        virtualinvoke r3.<org.apache.xml.utils.StringVector: void addElement(java.lang.String)>(r7);

        goto label1;

     label6:
        return r3;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncId r0;
        org.apache.xpath.XPathContext r1;
        int i0, i1, i2, $i3;
        org.apache.xpath.objects.XObject r2;
        org.apache.xpath.objects.XNodeSet r3, $r10;
        org.apache.xpath.NodeSetDTM r4;
        org.apache.xml.dtm.DTMIterator r5;
        org.apache.xml.utils.StringVector r6;
        java.lang.String r7, $r13;
        boolean z0;
        org.apache.xml.dtm.DTM $r8, $r15;
        org.apache.xpath.Expression $r9;
        org.apache.xml.dtm.DTMManager $r11;
        org.apache.xml.utils.XMLString $r14;

        r0 := @this: org.apache.xpath.functions.FuncId;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $i3 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r8 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i3);

        i0 = interfaceinvoke $r8.<org.apache.xml.dtm.DTM: int getDocument()>();

        if -1 != i0 goto label1;

        virtualinvoke r0.<org.apache.xpath.functions.FuncId: void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])>(r1, "ER_CONTEXT_HAS_NO_OWNERDOC", null);

     label1:
        $r9 = r0.<org.apache.xpath.functions.FuncId: org.apache.xpath.Expression m_arg0>;

        r2 = virtualinvoke $r9.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        i1 = virtualinvoke r2.<org.apache.xpath.objects.XObject: int getType()>();

        $r10 = new org.apache.xpath.objects.XNodeSet;

        $r11 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r10.<org.apache.xpath.objects.XNodeSet: void <init>(org.apache.xml.dtm.DTMManager)>($r11);

        r3 = $r10;

        r4 = virtualinvoke r3.<org.apache.xpath.objects.XNodeSet: org.apache.xpath.NodeSetDTM mutableNodeset()>();

        if 4 != i1 goto label5;

        r5 = virtualinvoke r2.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        r6 = null;

        i2 = interfaceinvoke r5.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

     label2:
        if -1 == i2 goto label6;

        $r15 = interfaceinvoke r5.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTM getDTM(int)>(i2);

        $r14 = interfaceinvoke $r15.<org.apache.xml.dtm.DTM: org.apache.xml.utils.XMLString getStringValue(int)>(i2);

        r7 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        i2 = interfaceinvoke r5.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        if -1 == i2 goto label4;

        z0 = 1;

     label3:
        r6 = specialinvoke r0.<org.apache.xpath.functions.FuncId: org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)>(r1, i0, r7, r6, r4, z0);

        goto label2;

     label4:
        z0 = 0;

        goto label3;

     label5:
        if -1 != i1 goto label7;

     label6:
        return r3;

     label7:
        $r13 = virtualinvoke r2.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        specialinvoke r0.<org.apache.xpath.functions.FuncId: org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)>(r1, i0, $r13, null, r4, 0);

        return r3;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.FuncId: long serialVersionUID> = 8930573966143567310L;

        return;
    }
}
