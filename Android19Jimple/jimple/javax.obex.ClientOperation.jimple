public final class javax.obex.ClientOperation extends java.lang.Object implements javax.obex.Operation, javax.obex.BaseStream
{
    private boolean mEndOfBodySent;
    private java.lang.String mExceptionMessage;
    private boolean mGetOperation;
    private boolean mInputOpen;
    private int mMaxPacketSize;
    private boolean mOperationDone;
    private javax.obex.ClientSession mParent;
    private javax.obex.PrivateInputStream mPrivateInput;
    private boolean mPrivateInputOpen;
    private javax.obex.PrivateOutputStream mPrivateOutput;
    private boolean mPrivateOutputOpen;
    private javax.obex.HeaderSet mReplyHeader;
    private javax.obex.HeaderSet mRequestHeader;

    public void <init>(int, javax.obex.ClientSession, javax.obex.HeaderSet, boolean) throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        javax.obex.ClientSession r1;
        javax.obex.HeaderSet r2, $r4, $r5, $r10, $r11, $r15, $r18, $r23, $r24, $r28;
        boolean z0;
        int[] r3;
        byte[] $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r16, $r17, $r19, $r20, $r21, $r22, $r25, $r26, $r27;
        java.lang.Object $r29;

        r0 := @this: javax.obex.ClientOperation;

        i0 := @parameter0: int;

        r1 := @parameter1: javax.obex.ClientSession;

        r2 := @parameter2: javax.obex.HeaderSet;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent> = r1;

        r0.<javax.obex.ClientOperation: boolean mEndOfBodySent> = 0;

        r0.<javax.obex.ClientOperation: boolean mInputOpen> = 1;

        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 0;

        r0.<javax.obex.ClientOperation: int mMaxPacketSize> = i0;

        r0.<javax.obex.ClientOperation: boolean mGetOperation> = z0;

        r0.<javax.obex.ClientOperation: boolean mPrivateInputOpen> = 0;

        r0.<javax.obex.ClientOperation: boolean mPrivateOutputOpen> = 0;

        r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput> = null;

        r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput> = null;

        $r4 = new javax.obex.HeaderSet;

        specialinvoke $r4.<javax.obex.HeaderSet: void <init>()>();

        r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader> = $r4;

        $r5 = new javax.obex.HeaderSet;

        specialinvoke $r5.<javax.obex.HeaderSet: void <init>()>();

        r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader> = $r5;

        r3 = virtualinvoke r2.<javax.obex.HeaderSet: int[] getHeaderList()>();

        if r3 == null goto label2;

        i1 = 0;

     label1:
        $i7 = lengthof r3;

        if i1 >= $i7 goto label2;

        $r28 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $i6 = r3[i1];

        $i8 = r3[i1];

        $r29 = virtualinvoke r2.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i8);

        virtualinvoke $r28.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i6, $r29);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = r2.<javax.obex.HeaderSet: byte[] mAuthChall>;

        if $r6 == null goto label3;

        $r24 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $r20 = r2.<javax.obex.HeaderSet: byte[] mAuthChall>;

        $i4 = lengthof $r20;

        $r22 = newarray (byte)[$i4];

        $r24.<javax.obex.HeaderSet: byte[] mAuthChall> = $r22;

        $r26 = r2.<javax.obex.HeaderSet: byte[] mAuthChall>;

        $r23 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $r25 = $r23.<javax.obex.HeaderSet: byte[] mAuthChall>;

        $r27 = r2.<javax.obex.HeaderSet: byte[] mAuthChall>;

        $i5 = lengthof $r27;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r26, 0, $r25, 0, $i5);

     label3:
        $r7 = r2.<javax.obex.HeaderSet: byte[] mAuthResp>;

        if $r7 == null goto label4;

        $r15 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $r14 = r2.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i2 = lengthof $r14;

        $r16 = newarray (byte)[$i2];

        $r15.<javax.obex.HeaderSet: byte[] mAuthResp> = $r16;

        $r21 = r2.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r18 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $r19 = $r18.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $r17 = r2.<javax.obex.HeaderSet: byte[] mAuthResp>;

        $i3 = lengthof $r17;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, $r19, 0, $i3);

     label4:
        $r8 = r2.<javax.obex.HeaderSet: byte[] mConnectionID>;

        if $r8 == null goto label5;

        $r10 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $r9 = newarray (byte)[4];

        $r10.<javax.obex.HeaderSet: byte[] mConnectionID> = $r9;

        $r12 = r2.<javax.obex.HeaderSet: byte[] mConnectionID>;

        $r11 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $r13 = $r11.<javax.obex.HeaderSet: byte[] mConnectionID>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r13, 0, 4);

     label5:
        return;
    }

    private boolean sendRequest(int) throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        java.io.ByteArrayOutputStream r1, $r5;
        byte[] r2, r3, r4, $r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javax.obex.HeaderSet $r6, $r12, $r16, $r20, $r23;
        javax.obex.PrivateOutputStream $r7, $r8, $r9, $r17, $r18, $r24, $r25, $r27;
        javax.obex.ClientSession $r11, $r15, $r19;
        javax.obex.PrivateInputStream $r13, $r14, $r21, $r22, $r28;
        byte $b12, $b18, $b19;
        java.io.IOException $r26;

        r0 := @this: javax.obex.ClientOperation;

        i0 := @parameter0: int;

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r5;

        i1 = -1;

        $r6 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        r2 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>($r6, 1);

        $r7 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r7 == null goto label01;

        $r24 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        i1 = virtualinvoke $r24.<javax.obex.PrivateOutputStream: int size()>();

     label01:
        $i5 = lengthof r2;

        $i6 = 3 + $i5;

        $i7 = r0.<javax.obex.ClientOperation: int mMaxPacketSize>;

        if $i6 <= $i7 goto label09;

        i3 = 0;

        i4 = 0;

     label02:
        $i20 = lengthof r2;

        if i3 == $i20 goto label08;

        $i26 = r0.<javax.obex.ClientOperation: int mMaxPacketSize>;

        $i25 = -3 + $i26;

        i3 = staticinvoke <javax.obex.ObexHelper: int findHeaderEnd(byte[],int,int)>(r2, i4, $i25);

        if i3 != -1 goto label05;

        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 1;

        virtualinvoke r0.<javax.obex.ClientOperation: void abort()>();

        r0.<javax.obex.ClientOperation: java.lang.String mExceptionMessage> = "Header larger then can be sent in a packet";

        r0.<javax.obex.ClientOperation: boolean mInputOpen> = 0;

        $r22 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        if $r22 == null goto label03;

        $r28 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r28.<javax.obex.PrivateInputStream: void close()>();

     label03:
        $r25 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r25 == null goto label04;

        $r27 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        virtualinvoke $r27.<javax.obex.PrivateOutputStream: void close()>();

     label04:
        $r26 = new java.io.IOException;

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>("OBEX Packet exceeds max packet size");

        throw $r26;

     label05:
        $i24 = i3 - i4;

        r4 = newarray (byte)[$i24];

        $i27 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i4, r4, 0, $i27);

        $r19 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        $r20 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r21 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        $z7 = virtualinvoke $r19.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(i0, r4, $r20, $r21);

        if $z7 != 0 goto label07;

     label06:
        return 0;

     label07:
        $r23 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i28 = $r23.<javax.obex.HeaderSet: int responseCode>;

        if $i28 != 144 goto label06;

        i4 = i3;

        goto label02;

     label08:
        if i1 <= 0 goto label06;

        return 1;

     label09:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>(r2);

        z0 = 0;

        if i1 <= 0 goto label12;

        $i15 = r0.<javax.obex.ClientOperation: int mMaxPacketSize>;

        $i14 = lengthof r2;

        $i13 = $i15 - $i14;

        i2 = -6 + $i13;

        z0 = 0;

        if i1 <= i2 goto label10;

        z0 = 1;

        $i22 = r0.<javax.obex.ClientOperation: int mMaxPacketSize>;

        $i23 = lengthof r2;

        $i21 = $i22 - $i23;

        i1 = -6 + $i21;

     label10:
        $r17 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        r3 = virtualinvoke $r17.<javax.obex.PrivateOutputStream: byte[] readBytes(int)>(i1);

        $r18 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        $z5 = virtualinvoke $r18.<javax.obex.PrivateOutputStream: boolean isClosed()>();

        if $z5 == 0 goto label15;

        if z0 != 0 goto label15;

        $z6 = r0.<javax.obex.ClientOperation: boolean mEndOfBodySent>;

        if $z6 != 0 goto label15;

        $i17 = i0 & 128;

        if $i17 == 0 goto label15;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(73);

        r0.<javax.obex.ClientOperation: boolean mEndOfBodySent> = 1;

     label11:
        i1 = i1 + 3;

        $i16 = i1 >> 8;

        $b18 = (byte) $i16;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b18);

        $b19 = (byte) i1;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b19);

        if r3 == null goto label12;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(byte[])>(r3);

     label12:
        $z1 = r0.<javax.obex.ClientOperation: boolean mPrivateOutputOpen>;

        if $z1 == 0 goto label14;

        if i1 > 0 goto label14;

        $z4 = r0.<javax.obex.ClientOperation: boolean mEndOfBodySent>;

        if $z4 != 0 goto label14;

        $i11 = i0 & 128;

        if $i11 != 0 goto label16;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(72);

     label13:
        $b12 = (byte) 0;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($b12);

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(3);

     label14:
        $i8 = virtualinvoke r1.<java.io.ByteArrayOutputStream: int size()>();

        if $i8 != 0 goto label17;

        $r15 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        $r16 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r14 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        $z3 = virtualinvoke $r15.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(i0, null, $r16, $r14);

        if $z3 == 0 goto label06;

        return z0;

     label15:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(72);

        goto label11;

     label16:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(73);

        r0.<javax.obex.ClientOperation: boolean mEndOfBodySent> = 1;

        goto label13;

     label17:
        $i9 = virtualinvoke r1.<java.io.ByteArrayOutputStream: int size()>();

        if $i9 <= 0 goto label18;

        $r11 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        $r10 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r12 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r13 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        $z2 = virtualinvoke $r11.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(i0, $r10, $r12, $r13);

        if $z2 == 0 goto label06;

     label18:
        $r8 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r8 == null goto label19;

        $r9 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        $i10 = virtualinvoke $r9.<javax.obex.PrivateOutputStream: int size()>();

        if $i10 <= 0 goto label19;

        z0 = 1;

     label19:
        return z0;
    }

    private void startProcessing() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        java.lang.Throwable r1, $r17;
        boolean z0, $z1, $z2, $z4;
        javax.obex.PrivateInputStream $r2, $r5, $r14, $r18;
        javax.obex.HeaderSet $r3, $r4, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        javax.obex.ClientSession $r7, $r15;

        r0 := @this: javax.obex.ClientOperation;

        entermonitor r0;

     label01:
        $r2 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        if $r2 != null goto label02;

        $r18 = new javax.obex.PrivateInputStream;

        specialinvoke $r18.<javax.obex.PrivateInputStream: void <init>(javax.obex.BaseStream)>(r0);

        r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput> = $r18;

     label02:
        z0 = 1;

     label03:
        $z1 = r0.<javax.obex.ClientOperation: boolean mGetOperation>;

        if $z1 == 0 goto label10;

        $z4 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z4 != 0 goto label09;

        $r10 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r10.<javax.obex.HeaderSet: int responseCode> = 144;

     label04:
        if z0 == 0 goto label07;

     label05:
        $r16 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i5 = $r16.<javax.obex.HeaderSet: int responseCode>;

        if $i5 != 144 goto label07;

        z0 = specialinvoke r0.<javax.obex.ClientOperation: boolean sendRequest(int)>(3);

     label06:
        goto label04;

     label07:
        $r11 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i3 = $r11.<javax.obex.HeaderSet: int responseCode>;

        if $i3 != 144 goto label08;

        $r15 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        $r13 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r14 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r15.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(131, null, $r13, $r14);

     label08:
        $r12 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i4 = $r12.<javax.obex.HeaderSet: int responseCode>;

        if $i4 == 144 goto label09;

        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 1;

     label09:
        exitmonitor r0;

        return;

     label10:
        $z2 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z2 != 0 goto label14;

        $r9 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r9.<javax.obex.HeaderSet: int responseCode> = 144;

     label11:
        if z0 == 0 goto label14;

     label12:
        $r8 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i2 = $r8.<javax.obex.HeaderSet: int responseCode>;

        if $i2 != 144 goto label14;

        z0 = specialinvoke r0.<javax.obex.ClientOperation: boolean sendRequest(int)>(2);

     label13:
        goto label11;

     label14:
        $r3 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i0 = $r3.<javax.obex.HeaderSet: int responseCode>;

        if $i0 != 144 goto label15;

        $r7 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        $r6 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r5 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r7.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(130, null, $r6, $r5);

     label15:
        $r4 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i1 = $r4.<javax.obex.HeaderSet: int responseCode>;

        if $i1 == 144 goto label09;

        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 1;

     label16:
        goto label09;

     label17:
        $r17 := @caughtexception;

        r1 = $r17;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    private void validateConnection() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        javax.obex.PrivateInputStream $r1;

        r0 := @this: javax.obex.ClientOperation;

        virtualinvoke r0.<javax.obex.ClientOperation: void ensureOpen()>();

        $r1 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        if $r1 != null goto label1;

        specialinvoke r0.<javax.obex.ClientOperation: void startProcessing()>();

     label1:
        return;
    }

    public void abort() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        java.lang.Throwable r1, $r8;
        boolean $z0, $z1;
        javax.obex.HeaderSet $r2, $r3, $r5, $r7;
        int $i0, $i1, $i2;
        javax.obex.ClientSession $r4;
        java.io.IOException $r6, $r9;

        r0 := @this: javax.obex.ClientOperation;

        entermonitor r0;

     label1:
        virtualinvoke r0.<javax.obex.ClientOperation: void ensureOpen()>();

        $z0 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z0 == 0 goto label3;

        $r7 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i2 = $r7.<javax.obex.HeaderSet: int responseCode>;

        if $i2 == 144 goto label3;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("Operation has already ended");

        throw $r9;

     label2:
        $r8 := @caughtexception;

        r1 = $r8;

        exitmonitor r0;

        throw r1;

     label3:
        r0.<javax.obex.ClientOperation: java.lang.String mExceptionMessage> = "Operation aborted";

        $z1 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z1 != 0 goto label5;

        $r2 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i0 = $r2.<javax.obex.HeaderSet: int responseCode>;

        if $i0 != 144 goto label5;

        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 1;

        $r4 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        $r3 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        virtualinvoke $r4.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(255, null, $r3, null);

        $r5 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i1 = $r5.<javax.obex.HeaderSet: int responseCode>;

        if $i1 == 160 goto label4;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Invalid response code from server");

        throw $r6;

     label4:
        r0.<javax.obex.ClientOperation: java.lang.String mExceptionMessage> = null;

     label5:
        virtualinvoke r0.<javax.obex.ClientOperation: void close()>();

     label6:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label4 to label5 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public void close() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        javax.obex.ClientSession $r1;

        r0 := @this: javax.obex.ClientOperation;

        r0.<javax.obex.ClientOperation: boolean mInputOpen> = 0;

        r0.<javax.obex.ClientOperation: boolean mPrivateInputOpen> = 0;

        r0.<javax.obex.ClientOperation: boolean mPrivateOutputOpen> = 0;

        $r1 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        virtualinvoke $r1.<javax.obex.ClientSession: void setRequestInactive()>();

        return;
    }

    public boolean continueOperation(boolean, boolean) throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z8, $z9, $z11;
        java.lang.Throwable r1, $r10;
        javax.obex.HeaderSet $r2, $r3, $r8, $r9;
        int $i0, $i1;
        javax.obex.PrivateInputStream $r4, $r5, $r6;
        javax.obex.ClientSession $r7;

        r0 := @this: javax.obex.ClientOperation;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 = 1;

        entermonitor r0;

     label01:
        $z4 = r0.<javax.obex.ClientOperation: boolean mGetOperation>;

        if $z4 == 0 goto label12;

     label02:
        if z1 == 0 goto label05;

     label03:
        $z11 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z11 != 0 goto label05;

        $r7 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        $r8 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r6 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r7.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(131, null, $r8, $r6);

        $r9 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i1 = $r9.<javax.obex.HeaderSet: int responseCode>;

        if $i1 == 144 goto label04;

        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 1;

     label04:
        exitmonitor r0;

        return z2;

     label05:
        if z1 != 0 goto label10;

     label06:
        $z9 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z9 != 0 goto label10;

        $r4 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        if $r4 != null goto label07;

        $r5 = new javax.obex.PrivateInputStream;

        specialinvoke $r5.<javax.obex.PrivateInputStream: void <init>(javax.obex.BaseStream)>(r0);

        r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput> = $r5;

     label07:
        specialinvoke r0.<javax.obex.ClientOperation: boolean sendRequest(int)>(3);

     label08:
        goto label04;

     label09:
        $r10 := @caughtexception;

        r1 = $r10;

        exitmonitor r0;

        throw r1;

     label10:
        $z8 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z8 == 0 goto label21;

     label11:
        z2 = 0;

        goto label04;

     label12:
        if z1 != 0 goto label16;

     label13:
        $z6 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z6 != 0 goto label16;

        $r2 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i0 = $r2.<javax.obex.HeaderSet: int responseCode>;

        if $i0 != -1 goto label14;

        $r3 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r3.<javax.obex.HeaderSet: int responseCode> = 144;

     label14:
        specialinvoke r0.<javax.obex.ClientOperation: boolean sendRequest(int)>(2);

     label15:
        goto label04;

     label16:
        if z1 == 0 goto label19;

     label17:
        $z5 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z5 != 0 goto label19;

     label18:
        z2 = 0;

        goto label04;

     label19:
        z3 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

     label20:
        if z3 == 0 goto label21;

        z2 = 0;

        goto label04;

     label21:
        z2 = 0;

        goto label04;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label13 to label14 with label09;
        catch java.lang.Throwable from label14 to label15 with label09;
        catch java.lang.Throwable from label17 to label18 with label09;
        catch java.lang.Throwable from label19 to label20 with label09;
    }

    public void ensureNotDone() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        boolean $z0;
        java.io.IOException $r1;

        r0 := @this: javax.obex.ClientOperation;

        $z0 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Operation has completed");

        throw $r1;

     label1:
        return;
    }

    public void ensureOpen() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        javax.obex.ClientSession $r1;
        java.lang.String $r2, $r5;
        boolean $z0;
        java.io.IOException $r3, $r4;

        r0 := @this: javax.obex.ClientOperation;

        $r1 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        virtualinvoke $r1.<javax.obex.ClientSession: void ensureOpen()>();

        $r2 = r0.<javax.obex.ClientOperation: java.lang.String mExceptionMessage>;

        if $r2 == null goto label1;

        $r4 = new java.io.IOException;

        $r5 = r0.<javax.obex.ClientOperation: java.lang.String mExceptionMessage>;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        $z0 = r0.<javax.obex.ClientOperation: boolean mInputOpen>;

        if $z0 != 0 goto label2;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Operation has already ended");

        throw $r3;

     label2:
        return;
    }

    public java.lang.String getEncoding()
    {
        javax.obex.ClientOperation r0;

        r0 := @this: javax.obex.ClientOperation;

        return null;
    }

    public int getHeaderLength()
    {
        javax.obex.ClientOperation r0;
        javax.obex.HeaderSet $r1;
        byte[] $r2;
        int $i0;

        r0 := @this: javax.obex.ClientOperation;

        $r1 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $r2 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>($r1, 0);

        $i0 = lengthof $r2;

        return $i0;
    }

    public long getLength()
    {
        javax.obex.ClientOperation r0;
        java.lang.Long r2;
        long l0;
        javax.obex.HeaderSet $r3;
        java.lang.Object $r4;
        java.io.IOException $r5;

        r0 := @this: javax.obex.ClientOperation;

     label1:
        $r3 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r4 = virtualinvoke $r3.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(195);

        r2 = (java.lang.Long) $r4;

     label2:
        if r2 != null goto label3;

        return -1L;

     label3:
        l0 = virtualinvoke r2.<java.lang.Long: long longValue()>();

     label4:
        return l0;

     label5:
        $r5 := @caughtexception;

        return -1L;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public int getMaxPacketSize()
    {
        javax.obex.ClientOperation r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: javax.obex.ClientOperation;

        $i0 = r0.<javax.obex.ClientOperation: int mMaxPacketSize>;

        $i1 = -6 + $i0;

        $i2 = virtualinvoke r0.<javax.obex.ClientOperation: int getHeaderLength()>();

        $i3 = $i1 - $i2;

        return $i3;
    }

    public javax.obex.HeaderSet getReceivedHeader() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        javax.obex.HeaderSet $r1;

        r0 := @this: javax.obex.ClientOperation;

        virtualinvoke r0.<javax.obex.ClientOperation: void ensureOpen()>();

        $r1 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        return $r1;
    }

    public int getResponseCode() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        java.lang.Throwable r1, $r5;
        int i0, $i1, $i2;
        javax.obex.HeaderSet $r2, $r3, $r4;

        r0 := @this: javax.obex.ClientOperation;

        entermonitor r0;

     label1:
        $r2 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i1 = $r2.<javax.obex.HeaderSet: int responseCode>;

        if $i1 == -1 goto label2;

        $r4 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i2 = $r4.<javax.obex.HeaderSet: int responseCode>;

        if $i2 != 144 goto label3;

     label2:
        specialinvoke r0.<javax.obex.ClientOperation: void validateConnection()>();

     label3:
        $r3 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        i0 = $r3.<javax.obex.HeaderSet: int responseCode>;

     label4:
        exitmonitor r0;

        return i0;

     label5:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String getType()
    {
        javax.obex.ClientOperation r0;
        java.lang.String r2;
        javax.obex.HeaderSet $r3;
        java.lang.Object $r4;
        java.io.IOException $r5;

        r0 := @this: javax.obex.ClientOperation;

     label1:
        $r3 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r4 = virtualinvoke $r3.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>(66);

        r2 = (java.lang.String) $r4;

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void noBodyHeader()
    {
        javax.obex.ClientOperation r0;

        r0 := @this: javax.obex.ClientOperation;

        return;
    }

    public java.io.DataInputStream openDataInputStream() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        java.io.DataInputStream $r1;
        java.io.InputStream $r2;

        r0 := @this: javax.obex.ClientOperation;

        $r1 = new java.io.DataInputStream;

        $r2 = virtualinvoke r0.<javax.obex.ClientOperation: java.io.InputStream openInputStream()>();

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        return $r1;
    }

    public java.io.DataOutputStream openDataOutputStream() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        java.io.DataOutputStream $r1;
        java.io.OutputStream $r2;

        r0 := @this: javax.obex.ClientOperation;

        $r1 = new java.io.DataOutputStream;

        $r2 = virtualinvoke r0.<javax.obex.ClientOperation: java.io.OutputStream openOutputStream()>();

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

        return $r1;
    }

    public java.io.InputStream openInputStream() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        boolean $z0, $z1;
        javax.obex.PrivateInputStream $r1, $r2, $r3;
        java.io.IOException $r4;

        r0 := @this: javax.obex.ClientOperation;

        virtualinvoke r0.<javax.obex.ClientOperation: void ensureOpen()>();

        $z0 = r0.<javax.obex.ClientOperation: boolean mPrivateInputOpen>;

        if $z0 == 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("no more input streams available");

        throw $r4;

     label1:
        $z1 = r0.<javax.obex.ClientOperation: boolean mGetOperation>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<javax.obex.ClientOperation: void validateConnection()>();

     label2:
        r0.<javax.obex.ClientOperation: boolean mPrivateInputOpen> = 1;

        $r2 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        return $r2;

     label3:
        $r1 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        if $r1 != null goto label2;

        $r3 = new javax.obex.PrivateInputStream;

        specialinvoke $r3.<javax.obex.PrivateInputStream: void <init>(javax.obex.BaseStream)>(r0);

        r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput> = $r3;

        goto label2;
    }

    public java.io.OutputStream openOutputStream() throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        boolean $z0;
        javax.obex.PrivateOutputStream $r1, $r2, $r3;
        int $i0;
        java.io.IOException $r4;

        r0 := @this: javax.obex.ClientOperation;

        virtualinvoke r0.<javax.obex.ClientOperation: void ensureOpen()>();

        virtualinvoke r0.<javax.obex.ClientOperation: void ensureNotDone()>();

        $z0 = r0.<javax.obex.ClientOperation: boolean mPrivateOutputOpen>;

        if $z0 == 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("no more output streams available");

        throw $r4;

     label1:
        $r1 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r1 != null goto label2;

        $r3 = new javax.obex.PrivateOutputStream;

        $i0 = virtualinvoke r0.<javax.obex.ClientOperation: int getMaxPacketSize()>();

        specialinvoke $r3.<javax.obex.PrivateOutputStream: void <init>(javax.obex.BaseStream,int)>(r0, $i0);

        r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput> = $r3;

     label2:
        r0.<javax.obex.ClientOperation: boolean mPrivateOutputOpen> = 1;

        $r2 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        return $r2;
    }

    public void sendHeaders(javax.obex.HeaderSet) throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        javax.obex.HeaderSet r1, $r3;
        int[] r2;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.Object $r4;
        java.io.IOException $r5, $r6;

        r0 := @this: javax.obex.ClientOperation;

        r1 := @parameter0: javax.obex.HeaderSet;

        virtualinvoke r0.<javax.obex.ClientOperation: void ensureOpen()>();

        $z0 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z0 == 0 goto label1;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Operation has already exchanged all data");

        throw $r6;

     label1:
        if r1 != null goto label2;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Headers may not be null");

        throw $r5;

     label2:
        r2 = virtualinvoke r1.<javax.obex.HeaderSet: int[] getHeaderList()>();

        if r2 == null goto label4;

        i0 = 0;

     label3:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label4;

        $r3 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $i3 = r2[i0];

        $i2 = r2[i0];

        $r4 = virtualinvoke r1.<javax.obex.HeaderSet: java.lang.Object getHeader(int)>($i2);

        virtualinvoke $r3.<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>($i3, $r4);

        i0 = i0 + 1;

        goto label3;

     label4:
        return;
    }

    public void streamClosed(boolean) throws java.io.IOException
    {
        javax.obex.ClientOperation r0;
        boolean z0, z1, z2, $z3, $z4, $z6, $z7, $z9, $z10;
        javax.obex.PrivateOutputStream $r1, $r3, $r7, $r8, $r20, $r23;
        javax.obex.PrivateInputStream $r2, $r9, $r17;
        javax.obex.HeaderSet $r4, $r5, $r6, $r10, $r12, $r13, $r14, $r15, $r18, $r19, $r21, $r22, $r24, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        byte[] $r11, $r25;
        javax.obex.ClientSession $r16;

        r0 := @this: javax.obex.ClientOperation;

        z0 := @parameter0: boolean;

        $z3 = r0.<javax.obex.ClientOperation: boolean mGetOperation>;

        if $z3 != 0 goto label07;

        if z0 != 0 goto label06;

        $z10 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z10 != 0 goto label06;

        z2 = 1;

        $r20 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r20 == null goto label01;

        $r23 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        $i12 = virtualinvoke $r23.<javax.obex.PrivateOutputStream: int size()>();

        if $i12 > 0 goto label01;

        $r26 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $r25 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>($r26, 0);

        $i11 = lengthof $r25;

        if $i11 > 0 goto label01;

        z2 = 0;

     label01:
        $r19 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i8 = $r19.<javax.obex.HeaderSet: int responseCode>;

        if $i8 != -1 goto label02;

        $r24 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r24.<javax.obex.HeaderSet: int responseCode> = 144;

     label02:
        if z2 == 0 goto label03;

        $r21 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i10 = $r21.<javax.obex.HeaderSet: int responseCode>;

        if $i10 != 144 goto label03;

        z2 = specialinvoke r0.<javax.obex.ClientOperation: boolean sendRequest(int)>(2);

        goto label02;

     label03:
        $r22 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i9 = $r22.<javax.obex.HeaderSet: int responseCode>;

        if $i9 != 144 goto label04;

        specialinvoke r0.<javax.obex.ClientOperation: boolean sendRequest(int)>(130);

        goto label03;

     label04:
        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 1;

     label05:
        return;

     label06:
        if z0 == 0 goto label05;

        $z7 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z7 == 0 goto label05;

        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 1;

        return;

     label07:
        if z0 == 0 goto label11;

        $z6 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z6 != 0 goto label11;

        $r12 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i5 = $r12.<javax.obex.HeaderSet: int responseCode>;

        if $i5 != -1 goto label08;

        $r18 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r18.<javax.obex.HeaderSet: int responseCode> = 144;

     label08:
        $r13 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i6 = $r13.<javax.obex.HeaderSet: int responseCode>;

        if $i6 != 144 goto label09;

        $z9 = specialinvoke r0.<javax.obex.ClientOperation: boolean sendRequest(int)>(131);

        if $z9 != 0 goto label08;

     label09:
        $r14 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i7 = $r14.<javax.obex.HeaderSet: int responseCode>;

        if $i7 != 144 goto label10;

        $r16 = r0.<javax.obex.ClientOperation: javax.obex.ClientSession mParent>;

        $r15 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r17 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        virtualinvoke $r16.<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)>(131, null, $r15, $r17);

        goto label09;

     label10:
        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 1;

        return;

     label11:
        if z0 != 0 goto label05;

        $z4 = r0.<javax.obex.ClientOperation: boolean mOperationDone>;

        if $z4 != 0 goto label05;

        z1 = 1;

        $r1 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r1 == null goto label12;

        $r8 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        $i3 = virtualinvoke $r8.<javax.obex.PrivateOutputStream: int size()>();

        if $i3 > 0 goto label12;

        $r10 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mRequestHeader>;

        $r11 = staticinvoke <javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>($r10, 0);

        $i4 = lengthof $r11;

        if $i4 > 0 goto label12;

        z1 = 0;

     label12:
        $r2 = r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput>;

        if $r2 != null goto label13;

        $r9 = new javax.obex.PrivateInputStream;

        specialinvoke $r9.<javax.obex.PrivateInputStream: void <init>(javax.obex.BaseStream)>(r0);

        r0.<javax.obex.ClientOperation: javax.obex.PrivateInputStream mPrivateInput> = $r9;

     label13:
        $r3 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        if $r3 == null goto label14;

        $r7 = r0.<javax.obex.ClientOperation: javax.obex.PrivateOutputStream mPrivateOutput>;

        $i2 = virtualinvoke $r7.<javax.obex.PrivateOutputStream: int size()>();

        if $i2 > 0 goto label14;

        z1 = 0;

     label14:
        $r4 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $r4.<javax.obex.HeaderSet: int responseCode> = 144;

     label15:
        if z1 == 0 goto label16;

        $r6 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i1 = $r6.<javax.obex.HeaderSet: int responseCode>;

        if $i1 != 144 goto label16;

        z1 = specialinvoke r0.<javax.obex.ClientOperation: boolean sendRequest(int)>(3);

        goto label15;

     label16:
        specialinvoke r0.<javax.obex.ClientOperation: boolean sendRequest(int)>(131);

        $r5 = r0.<javax.obex.ClientOperation: javax.obex.HeaderSet mReplyHeader>;

        $i0 = $r5.<javax.obex.HeaderSet: int responseCode>;

        if $i0 == 144 goto label05;

        r0.<javax.obex.ClientOperation: boolean mOperationDone> = 1;

        return;
    }
}
