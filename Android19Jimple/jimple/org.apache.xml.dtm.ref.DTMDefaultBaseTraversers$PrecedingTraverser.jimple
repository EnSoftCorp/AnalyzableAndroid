class org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser extends org.apache.xml.dtm.DTMAxisTraverser
{
    final org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0;

    private void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0> = r1;

        specialinvoke r0.<org.apache.xml.dtm.DTMAxisTraverser: void <init>()>();

        return;
    }

    void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers, org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers r1;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1 r2;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        r1 := @parameter0: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers;

        r2 := @parameter1: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$1;

        specialinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: void <init>(org.apache.xml.dtm.ref.DTMDefaultBaseTraversers)>(r1);

        return;
    }

    protected boolean isAncestor(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;
        int i0, i1, i2;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r3;
        org.apache.xml.utils.SuballocatedIntVector $r2, $r4;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r2 = $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: org.apache.xml.utils.SuballocatedIntVector m_parent>;

        i2 = virtualinvoke $r2.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i0);

     label1:
        if -1 == i2 goto label3;

        if i2 != i1 goto label2;

        return 1;

     label2:
        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: org.apache.xml.utils.SuballocatedIntVector m_parent>;

        i2 = virtualinvoke $r4.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i2);

        goto label1;

     label3:
        return 0;
    }

    public int next(int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;
        int i0, i1, i2, i3, $i5, $i6;
        short s4;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i2 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i0);

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i1);

        i3 = -1 + $i5;

     label1:
        if i3 < 0 goto label4;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        s4 = virtualinvoke $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: short _type(int)>(i3);

        if 2 == s4 goto label2;

        if 13 == s4 goto label2;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: boolean isAncestor(int,int)>(i2, i3);

        if $z0 == 0 goto label3;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        $r4 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i6 = virtualinvoke $r4.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i3);

        return $i6;

     label4:
        return -1;
    }

    public int next(int, int, int)
    {
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        org.apache.xml.dtm.ref.DTMDefaultBaseTraversers $r1, $r2, $r3, $r5;
        org.apache.xml.utils.SuballocatedIntVector $r4;
        boolean $z0;

        r0 := @this: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        i3 = virtualinvoke $r1.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i0);

        $r2 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i5 = virtualinvoke $r2.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeIdentity(int)>(i1);

        i4 = -1 + $i5;

     label1:
        if i4 < 0 goto label4;

        $r3 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $r4 = $r3.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: org.apache.xml.utils.SuballocatedIntVector m_exptype>;

        $i6 = virtualinvoke $r4.<org.apache.xml.utils.SuballocatedIntVector: int elementAt(int)>(i4);

        if $i6 != i2 goto label2;

        $z0 = virtualinvoke r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: boolean isAncestor(int,int)>(i3, i4);

        if $z0 == 0 goto label3;

     label2:
        i4 = i4 + -1;

        goto label1;

     label3:
        $r5 = r0.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser: org.apache.xml.dtm.ref.DTMDefaultBaseTraversers this$0>;

        $i7 = virtualinvoke $r5.<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: int makeNodeHandle(int)>(i4);

        return $i7;

     label4:
        return -1;
    }
}
