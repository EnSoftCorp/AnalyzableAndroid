public class android.os.Debug$MemoryInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int NUM_CATEGORIES;
    public static final int NUM_DVK_STATS;
    public static final int NUM_OTHER_STATS;
    public static final int offsetPrivateClean;
    public static final int offsetPrivateDirty;
    public static final int offsetPss;
    public static final int offsetSharedClean;
    public static final int offsetSharedDirty;
    public static final int offsetSwappablePss;
    public static final int offsetSwappedOut;
    public int dalvikPrivateClean;
    public int dalvikPrivateDirty;
    public int dalvikPss;
    public int dalvikSharedClean;
    public int dalvikSharedDirty;
    public int dalvikSwappablePss;
    public int dalvikSwappedOut;
    public int nativePrivateClean;
    public int nativePrivateDirty;
    public int nativePss;
    public int nativeSharedClean;
    public int nativeSharedDirty;
    public int nativeSwappablePss;
    public int nativeSwappedOut;
    public int otherPrivateClean;
    public int otherPrivateDirty;
    public int otherPss;
    public int otherSharedClean;
    public int otherSharedDirty;
    private int[] otherStats;
    public int otherSwappablePss;
    public int otherSwappedOut;

    static void <clinit>()
    {
        android.os.Debug$MemoryInfo$1 $r0;

        <android.os.Debug$MemoryInfo: int offsetSwappedOut> = 6;

        <android.os.Debug$MemoryInfo: int offsetSwappablePss> = 1;

        <android.os.Debug$MemoryInfo: int offsetSharedDirty> = 3;

        <android.os.Debug$MemoryInfo: int offsetSharedClean> = 5;

        <android.os.Debug$MemoryInfo: int offsetPss> = 0;

        <android.os.Debug$MemoryInfo: int offsetPrivateDirty> = 2;

        <android.os.Debug$MemoryInfo: int offsetPrivateClean> = 4;

        <android.os.Debug$MemoryInfo: int NUM_OTHER_STATS> = 16;

        <android.os.Debug$MemoryInfo: int NUM_DVK_STATS> = 5;

        <android.os.Debug$MemoryInfo: int NUM_CATEGORIES> = 7;

        $r0 = new android.os.Debug$MemoryInfo$1;

        specialinvoke $r0.<android.os.Debug$MemoryInfo$1: void <init>()>();

        <android.os.Debug$MemoryInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.os.Debug$MemoryInfo r0;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[147];

        r0.<android.os.Debug$MemoryInfo: int[] otherStats> = $r1;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.os.Debug$MemoryInfo r0;
        android.os.Parcel r1;
        int[] $r2;

        r0 := @this: android.os.Debug$MemoryInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (int)[147];

        r0.<android.os.Debug$MemoryInfo: int[] otherStats> = $r2;

        virtualinvoke r0.<android.os.Debug$MemoryInfo: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, android.os.Debug$1)
    {
        android.os.Debug$MemoryInfo r0;
        android.os.Parcel r1;
        android.os.Debug$1 r2;

        r0 := @this: android.os.Debug$MemoryInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.os.Debug$1;

        specialinvoke r0.<android.os.Debug$MemoryInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public static java.lang.String getOtherLabel(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label12;
            case 11: goto label13;
            case 12: goto label14;
            case 13: goto label15;
            case 14: goto label16;
            case 15: goto label17;
            case 16: goto label18;
            case 17: goto label19;
            case 18: goto label20;
            case 19: goto label21;
            case 20: goto label22;
            default: goto label01;
        };

     label01:
        return "????";

     label02:
        return "Dalvik Other";

     label03:
        return "Stack";

     label04:
        return "Cursor";

     label05:
        return "Ashmem";

     label06:
        return "Other dev";

     label07:
        return ".so mmap";

     label08:
        return ".jar mmap";

     label09:
        return ".apk mmap";

     label10:
        return ".ttf mmap";

     label11:
        return ".dex mmap";

     label12:
        return "code mmap";

     label13:
        return "image mmap";

     label14:
        return "Other mmap";

     label15:
        return "Graphics";

     label16:
        return "GL";

     label17:
        return "Memtrack";

     label18:
        return ".Heap";

     label19:
        return ".LOS";

     label20:
        return ".LinearAlloc";

     label21:
        return ".GC";

     label22:
        return ".JITCache";
    }

    public int describeContents()
    {
        android.os.Debug$MemoryInfo r0;

        r0 := @this: android.os.Debug$MemoryInfo;

        return 0;
    }

    public int getOtherPrivateClean(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 7;

        $i2 = 4 + $i1;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherPrivateDirty(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 7;

        $i2 = 2 + $i1;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherPss(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 7;

        $i2 = 0 + $i1;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherSharedClean(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 7;

        $i2 = 5 + $i1;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherSharedDirty(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 7;

        $i2 = 3 + $i1;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherSwappablePss(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 7;

        $i2 = 1 + $i1;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getOtherSwappedOut(int)
    {
        android.os.Debug$MemoryInfo r0;
        int i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.os.Debug$MemoryInfo;

        i0 := @parameter0: int;

        $r1 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        $i1 = i0 * 7;

        $i2 = 6 + $i1;

        $i3 = $r1[$i2];

        return $i3;
    }

    public int getTotalPrivateClean()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalPrivateDirty()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalPss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativePss>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherPss>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalSharedClean()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalSharedDirty()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalSwappablePss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalSwappedOut()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int otherSwappedOut>;

        $i4 = $i3 + $i2;

        return $i4;
    }

    public int getTotalUss()
    {
        android.os.Debug$MemoryInfo r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: android.os.Debug$MemoryInfo;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        $i0 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        $i5 = $i3 + $i2;

        $i4 = r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        $i7 = $i5 + $i4;

        $i6 = r0.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        $i9 = $i7 + $i6;

        $i8 = r0.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        $i10 = $i9 + $i8;

        return $i10;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.os.Debug$MemoryInfo r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        int[] $r2;

        r0 := @this: android.os.Debug$MemoryInfo;

        r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikPss> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikSwappablePss> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty> = $i2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikSharedDirty> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikPrivateClean> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikSharedClean> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOut> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativePss> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeSwappablePss> = $i8;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty> = $i9;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeSharedDirty> = $i10;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativePrivateClean> = $i11;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeSharedClean> = $i12;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int nativeSwappedOut> = $i13;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherPss> = $i15;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherSwappablePss> = $i14;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherPrivateDirty> = $i17;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherSharedDirty> = $i16;

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherPrivateClean> = $i19;

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherSharedClean> = $i18;

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.os.Debug$MemoryInfo: int otherSwappedOut> = $i20;

        $r2 = virtualinvoke r1.<android.os.Parcel: int[] createIntArray()>();

        r0.<android.os.Debug$MemoryInfo: int[] otherStats> = $r2;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.os.Debug$MemoryInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        int[] $r2;

        r0 := @this: android.os.Debug$MemoryInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.os.Debug$MemoryInfo: int dalvikPss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappablePss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.os.Debug$MemoryInfo: int dalvikSharedDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.os.Debug$MemoryInfo: int dalvikPrivateClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.os.Debug$MemoryInfo: int dalvikSharedClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<android.os.Debug$MemoryInfo: int dalvikSwappedOut>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i8 = r0.<android.os.Debug$MemoryInfo: int nativePss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        $i9 = r0.<android.os.Debug$MemoryInfo: int nativeSwappablePss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $i10 = r0.<android.os.Debug$MemoryInfo: int nativePrivateDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        $i11 = r0.<android.os.Debug$MemoryInfo: int nativeSharedDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        $i12 = r0.<android.os.Debug$MemoryInfo: int nativePrivateClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $i13 = r0.<android.os.Debug$MemoryInfo: int nativeSharedClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        $i15 = r0.<android.os.Debug$MemoryInfo: int nativeSwappedOut>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $i14 = r0.<android.os.Debug$MemoryInfo: int otherPss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $i17 = r0.<android.os.Debug$MemoryInfo: int otherSwappablePss>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

        $i16 = r0.<android.os.Debug$MemoryInfo: int otherPrivateDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        $i19 = r0.<android.os.Debug$MemoryInfo: int otherSharedDirty>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i19);

        $i18 = r0.<android.os.Debug$MemoryInfo: int otherPrivateClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i18);

        $i21 = r0.<android.os.Debug$MemoryInfo: int otherSharedClean>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $i20 = r0.<android.os.Debug$MemoryInfo: int otherSwappedOut>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $r2 = r0.<android.os.Debug$MemoryInfo: int[] otherStats>;

        virtualinvoke r1.<android.os.Parcel: void writeIntArray(int[])>($r2);

        return;
    }
}
