public class com.android.org.conscrypt.SSLRecordProtocol extends java.lang.Object
{
    protected static final int MAX_CIPHERED_DATA_LENGTH;
    protected static final int MAX_COMPRESSED_DATA_LENGTH;
    protected static final int MAX_DATA_LENGTH;
    protected static final int MAX_SSL_PACKET_SIZE;
    private static final byte[] change_cipher_spec_byte;
    private com.android.org.conscrypt.ConnectionState activeReadState;
    private com.android.org.conscrypt.ConnectionState activeWriteState;
    private com.android.org.conscrypt.AlertProtocol alertProtocol;
    private com.android.org.conscrypt.Appendable appData;
    private com.android.org.conscrypt.HandshakeProtocol handshakeProtocol;
    private com.android.org.conscrypt.SSLInputStream in;
    private com.android.org.conscrypt.Logger$Stream logger;
    private com.android.org.conscrypt.ConnectionState pendingConnectionState;
    private com.android.org.conscrypt.SSLSessionImpl session;
    private boolean sessionWasChanged;
    private byte[] version;

    static void <clinit>()
    {
        byte[] $r0;

        <com.android.org.conscrypt.SSLRecordProtocol: int MAX_SSL_PACKET_SIZE> = 18437;

        <com.android.org.conscrypt.SSLRecordProtocol: int MAX_DATA_LENGTH> = 16384;

        <com.android.org.conscrypt.SSLRecordProtocol: int MAX_COMPRESSED_DATA_LENGTH> = 17408;

        <com.android.org.conscrypt.SSLRecordProtocol: int MAX_CIPHERED_DATA_LENGTH> = 18432;

        $r0 = newarray (byte)[1];

        $r0[0] = 1;

        <com.android.org.conscrypt.SSLRecordProtocol: byte[] change_cipher_spec_byte> = $r0;

        return;
    }

    protected void <init>(com.android.org.conscrypt.HandshakeProtocol, com.android.org.conscrypt.AlertProtocol, com.android.org.conscrypt.SSLInputStream, com.android.org.conscrypt.Appendable)
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        com.android.org.conscrypt.HandshakeProtocol r1, $r6;
        com.android.org.conscrypt.AlertProtocol r2, $r7;
        com.android.org.conscrypt.SSLInputStream r3;
        com.android.org.conscrypt.Appendable r4;
        com.android.org.conscrypt.Logger$Stream $r5;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeProtocol;

        r2 := @parameter1: com.android.org.conscrypt.AlertProtocol;

        r3 := @parameter2: com.android.org.conscrypt.SSLInputStream;

        r4 := @parameter3: com.android.org.conscrypt.Appendable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = staticinvoke <com.android.org.conscrypt.Logger: com.android.org.conscrypt.Logger$Stream getStream(java.lang.String)>("record");

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger> = $r5;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: boolean sessionWasChanged> = 0;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.HandshakeProtocol handshakeProtocol> = r1;

        $r6 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.HandshakeProtocol handshakeProtocol>;

        virtualinvoke $r6.<com.android.org.conscrypt.HandshakeProtocol: void setRecordProtocol(com.android.org.conscrypt.SSLRecordProtocol)>(r0);

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.AlertProtocol alertProtocol> = r2;

        $r7 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.AlertProtocol alertProtocol>;

        virtualinvoke $r7.<com.android.org.conscrypt.AlertProtocol: void setRecordProtocol(com.android.org.conscrypt.SSLRecordProtocol)>(r0);

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in> = r3;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Appendable appData> = r4;

        return;
    }

    private byte[] packetize(byte, byte[], byte[])
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        byte b0, $b6, $b9, $b11, $b12;
        byte[] r1, r2, r3;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i10;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        $i1 = lengthof r2;

        $i2 = 5 + $i1;

        r3 = newarray (byte)[$i2];

        r3[0] = b0;

        if r1 == null goto label2;

        $b11 = r1[0];

        r3[1] = $b11;

        $b12 = r1[1];

        r3[2] = $b12;

     label1:
        $i3 = lengthof r2;

        $i4 = 65280 & $i3;

        $i5 = $i4 >> 8;

        $b6 = (byte) $i5;

        r3[3] = $b6;

        $i7 = lengthof r2;

        $i8 = 255 & $i7;

        $b9 = (byte) $i8;

        r3[4] = $b9;

        $i10 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r3, 5, $i10);

        return r3;

     label2:
        r3[1] = 3;

        r3[2] = 1;

        goto label1;
    }

    private void setSession(com.android.org.conscrypt.SSLSessionImpl)
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        com.android.org.conscrypt.SSLSessionImpl r1, $r6, $r9;
        com.android.org.conscrypt.ConnectionState r2;
        boolean $z0;
        com.android.org.conscrypt.Logger$Stream $r3, $r10, $r12;
        byte[] $r4, $r7;
        com.android.org.conscrypt.ConnectionStateTLS $r5;
        byte $b0;
        com.android.org.conscrypt.ConnectionStateSSLv3 $r8;
        java.lang.StringBuilder $r11, $r13, $r14;
        java.lang.String $r15, $r16;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        r1 := @parameter0: com.android.org.conscrypt.SSLSessionImpl;

        $z0 = r0.<com.android.org.conscrypt.SSLRecordProtocol: boolean sessionWasChanged>;

        if $z0 != 0 goto label5;

        $r3 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r3 == null goto label1;

        $r10 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r10.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("SSLRecordProtocol.setSession: Set pending session");

        $r12 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  cipher name: ");

        $r15 = virtualinvoke r1.<com.android.org.conscrypt.SSLSessionImpl: java.lang.String getCipherSuite()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r16);

     label1:
        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLSessionImpl session> = r1;

        $r4 = r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version>;

        if $r4 == null goto label2;

        $r7 = r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version>;

        $b0 = $r7[1];

        if $b0 != 1 goto label4;

     label2:
        $r5 = new com.android.org.conscrypt.ConnectionStateTLS;

        $r6 = virtualinvoke r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLSessionImpl getSession()>();

        specialinvoke $r5.<com.android.org.conscrypt.ConnectionStateTLS: void <init>(com.android.org.conscrypt.SSLSessionImpl)>($r6);

        r2 = $r5;

     label3:
        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState pendingConnectionState> = r2;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: boolean sessionWasChanged> = 1;

        return;

     label4:
        $r8 = new com.android.org.conscrypt.ConnectionStateSSLv3;

        $r9 = virtualinvoke r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLSessionImpl getSession()>();

        specialinvoke $r8.<com.android.org.conscrypt.ConnectionStateSSLv3: void <init>(com.android.org.conscrypt.SSLSessionImpl)>($r9);

        r2 = $r8;

        goto label3;

     label5:
        r0.<com.android.org.conscrypt.SSLRecordProtocol: boolean sessionWasChanged> = 0;

        return;
    }

    protected void alert(byte, byte)
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        byte b0, b1;
        com.android.org.conscrypt.Logger$Stream $r1, $r4;
        com.android.org.conscrypt.AlertProtocol $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        $r1 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SSLRecordProtocol.allert: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r9);

     label1:
        $r2 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.AlertProtocol alertProtocol>;

        virtualinvoke $r2.<com.android.org.conscrypt.AlertProtocol: void alert(byte,byte)>(b0, b1);

        return;
    }

    protected byte[] getChangeCipherSpecMesage(com.android.org.conscrypt.SSLSessionImpl)
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        com.android.org.conscrypt.SSLSessionImpl r1;
        byte[] r2, $r4, $r6, $r7, $r13, $r14;
        com.android.org.conscrypt.ConnectionState $r3, $r5, $r8;
        com.android.org.conscrypt.Logger$Stream $r9, $r10, $r11, $r12;
        byte $b0, $b1;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        r1 := @parameter0: com.android.org.conscrypt.SSLSessionImpl;

        $r3 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeWriteState>;

        if $r3 != null goto label3;

        r2 = newarray (byte)[6];

        r2[0] = 20;

        $r13 = r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version>;

        $b0 = $r13[0];

        r2[1] = $b0;

        $r14 = r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version>;

        $b1 = $r14[1];

        r2[2] = $b1;

        r2[3] = 0;

        r2[4] = 1;

        r2[5] = 1;

     label1:
        specialinvoke r0.<com.android.org.conscrypt.SSLRecordProtocol: void setSession(com.android.org.conscrypt.SSLSessionImpl)>(r1);

        $r8 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState pendingConnectionState>;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeWriteState> = $r8;

        $r9 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r9 == null goto label2;

        $r10 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r10.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("SSLRecordProtocol.getChangeCipherSpecMesage");

        $r11 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r11.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("activeWriteState = pendingConnectionState");

        $r12 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r12.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r2);

     label2:
        return r2;

     label3:
        $r6 = r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version>;

        $r5 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeWriteState>;

        $r4 = <com.android.org.conscrypt.SSLRecordProtocol: byte[] change_cipher_spec_byte>;

        $r7 = virtualinvoke $r5.<com.android.org.conscrypt.ConnectionState: byte[] encrypt(byte,byte[],int,int)>(20, $r4, 0, 1);

        r2 = specialinvoke r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] packetize(byte,byte[],byte[])>(20, $r6, $r7);

        goto label1;
    }

    protected int getDataSize(int)
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        int i0, i1, $i2;
        com.android.org.conscrypt.ConnectionState $r1, $r2;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        i0 := @parameter0: int;

        i1 = i0 - 5;

        if i1 <= 18432 goto label2;

        i1 = 16384;

     label1:
        return i1;

     label2:
        $r1 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        $i2 = virtualinvoke $r2.<com.android.org.conscrypt.ConnectionState: int getContentSize(int)>(i1);

        return $i2;
    }

    protected int getMinRecordSize()
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        com.android.org.conscrypt.ConnectionState $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        $r1 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        if $r1 != null goto label1;

        return 6;

     label1:
        $r2 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        $i0 = virtualinvoke $r2.<com.android.org.conscrypt.ConnectionState: int getMinFragmentSize()>();

        $i1 = 5 + $i0;

        return $i1;
    }

    protected int getRecordSize(int)
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        int i0, i1, $i2;
        com.android.org.conscrypt.ConnectionState $r1, $r2;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeWriteState>;

        if $r1 != null goto label2;

        i1 = i0 + 5;

     label1:
        return i1;

     label2:
        $r2 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeWriteState>;

        $i2 = virtualinvoke $r2.<com.android.org.conscrypt.ConnectionState: int getFragmentSize(int)>(i0);

        i1 = 5 + $i2;

        if i1 <= 18432 goto label1;

        return 18432;
    }

    protected com.android.org.conscrypt.SSLSessionImpl getSession()
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        com.android.org.conscrypt.SSLSessionImpl $r1;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        $r1 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLSessionImpl session>;

        return $r1;
    }

    protected void setVersion(byte[])
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        byte[] r1;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        r1 := @parameter0: byte[];

        r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version> = r1;

        return;
    }

    protected void shutdown()
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        com.android.org.conscrypt.ConnectionState $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLSessionImpl session> = null;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version> = null;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in> = null;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.HandshakeProtocol handshakeProtocol> = null;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.AlertProtocol alertProtocol> = null;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Appendable appData> = null;

        $r1 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState pendingConnectionState>;

        if $r1 == null goto label1;

        $r6 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState pendingConnectionState>;

        virtualinvoke $r6.<com.android.org.conscrypt.ConnectionState: void shutdown()>();

     label1:
        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState pendingConnectionState> = null;

        $r2 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        if $r2 == null goto label2;

        $r5 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        virtualinvoke $r5.<com.android.org.conscrypt.ConnectionState: void shutdown()>();

     label2:
        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState> = null;

        $r3 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        if $r3 == null goto label3;

        $r4 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        virtualinvoke $r4.<com.android.org.conscrypt.ConnectionState: void shutdown()>();

     label3:
        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeWriteState> = null;

        return;
    }

    protected int unwrap() throws java.io.IOException
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7, $i12, $i14;
        byte[] r1, r2, $r21, $r77, $r80;
        com.android.org.conscrypt.Logger$Stream $r3, $r5, $r15, $r16, $r17, $r24, $r25, $r27, $r37, $r39, $r43, $r46, $r53, $r54, $r59, $r61, $r62, $r64, $r66, $r72, $r85, $r89;
        com.android.org.conscrypt.SSLInputStream $r4, $r12, $r13, $r22, $r26, $r29, $r78, $r82;
        com.android.org.conscrypt.AlertException $r6, $r32, $r55, $r63, $r75;
        javax.net.ssl.SSLProtocolException $r7, $r30, $r56, $r71, $r76;
        java.lang.StringBuilder $r8, $r9, $r10, $r18, $r19, $r20, $r31, $r34, $r35, $r36, $r41, $r42, $r44, $r45, $r47, $r50, $r67, $r68, $r70, $r73, $r74, $r79, $r83, $r84, $r87, $r88;
        java.lang.String $r11, $r23, $r33, $r40, $r51, $r52, $r69, $r81, $r86;
        com.android.org.conscrypt.HandshakeProtocol $r14, $r48, $r49, $r57;
        com.android.org.conscrypt.ConnectionState $r28, $r60, $r65;
        com.android.org.conscrypt.Appendable $r38;
        byte $b8, $b9, $b10, $b11, $b13;
        com.android.org.conscrypt.SSLSessionImpl $r58;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        $r3 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r3 == null goto label01;

        $r85 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r85.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("SSLRecordProtocol.unwrap: BEGIN [");

     label01:
        $r4 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in>;

        i0 = virtualinvoke $r4.<com.android.org.conscrypt.SSLInputStream: int readUint8()>();

        if i0 < 20 goto label02;

        if i0 <= 23 goto label07;

     label02:
        $r5 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r5 == null goto label03;

        $r17 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non v3.1 message type:");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r23);

     label03:
        if i0 < 128 goto label06;

        $i3 = i0 & 127;

        $i4 = $i3 << 8;

        $r12 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in>;

        $i5 = virtualinvoke $r12.<com.android.org.conscrypt.SSLInputStream: int read()>();

        i1 = $i4 | $i5;

        $r13 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in>;

        r1 = virtualinvoke $r13.<com.android.org.conscrypt.SSLInputStream: byte[] read(int)>(i1);

        $r14 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.HandshakeProtocol handshakeProtocol>;

        virtualinvoke $r14.<com.android.org.conscrypt.HandshakeProtocol: void unwrapSSLv2(byte[])>(r1);

        $r16 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r16 == null goto label04;

        $r15 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r15.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("SSLRecordProtocol:unwrap ] END, SSLv2 type");

     label04:
        i0 = 22;

     label05:
        return i0;

     label06:
        $r6 = new com.android.org.conscrypt.AlertException;

        $r7 = new javax.net.ssl.SSLProtocolException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected message type has been received: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>($r11);

        specialinvoke $r6.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(10, $r7);

        throw $r6;

     label07:
        $r24 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r24 == null goto label08;

        $r89 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got the message of type: ");

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r89.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r86);

     label08:
        $r21 = r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version>;

        if $r21 == null goto label10;

        $r78 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in>;

        $i12 = virtualinvoke $r78.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $r77 = r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version>;

        $b11 = $r77[0];

        if $i12 != $b11 goto label09;

        $r82 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in>;

        $i14 = virtualinvoke $r82.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $r80 = r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version>;

        $b13 = $r80[1];

        if $i14 == $b13 goto label11;

     label09:
        $r75 = new com.android.org.conscrypt.AlertException;

        $r76 = new javax.net.ssl.SSLProtocolException;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected message type has been received: ");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r81 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r76.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>($r81);

        specialinvoke $r75.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(10, $r76);

        throw $r75;

     label10:
        $r22 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in>;

        virtualinvoke $r22.<com.android.org.conscrypt.SSLInputStream: long skip(long)>(2L);

     label11:
        $r26 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in>;

        i2 = virtualinvoke $r26.<com.android.org.conscrypt.SSLInputStream: int readUint16()>();

        $r25 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r25 == null goto label12;

        $r72 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r73 = new java.lang.StringBuilder;

        specialinvoke $r73.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TLSCiphertext.fragment[");

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r70 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ...");

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r72.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r69);

     label12:
        if i2 <= 18432 goto label13;

        $r63 = new com.android.org.conscrypt.AlertException;

        $r71 = new javax.net.ssl.SSLProtocolException;

        specialinvoke $r71.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>("Received message is too big.");

        specialinvoke $r63.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(22, $r71);

        throw $r63;

     label13:
        $r29 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.SSLInputStream in>;

        r2 = virtualinvoke $r29.<com.android.org.conscrypt.SSLInputStream: byte[] read(int)>(i2);

        $r27 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r27 == null goto label14;

        $r64 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r64.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r2);

     label14:
        $r28 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        if $r28 == null goto label15;

        $r65 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState>;

        $b10 = (byte) i0;

        r2 = virtualinvoke $r65.<com.android.org.conscrypt.ConnectionState: byte[] decrypt(byte,byte[])>($b10, r2);

        $r66 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r66 == null goto label15;

        $r62 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r62.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("TLSPlaintext.fragment:");

        $r61 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r61.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r2);

     label15:
        $i7 = lengthof r2;

        if $i7 <= 16384 goto label16;

        $r55 = new com.android.org.conscrypt.AlertException;

        $r56 = new javax.net.ssl.SSLProtocolException;

        specialinvoke $r56.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>("Decompressed plain data is too big.");

        specialinvoke $r55.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(30, $r56);

        throw $r55;

     label16:
        tableswitch(i0)
        {
            case 20: goto label18;
            case 21: goto label21;
            case 22: goto label22;
            case 23: goto label23;
            default: goto label17;
        };

     label17:
        $r32 = new com.android.org.conscrypt.AlertException;

        $r30 = new javax.net.ssl.SSLProtocolException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected message type has been received: ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>($r33);

        specialinvoke $r32.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(10, $r30);

        throw $r32;

     label18:
        $r49 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.HandshakeProtocol handshakeProtocol>;

        virtualinvoke $r49.<com.android.org.conscrypt.HandshakeProtocol: void receiveChangeCipherSpec()>();

        $r57 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.HandshakeProtocol handshakeProtocol>;

        $r58 = virtualinvoke $r57.<com.android.org.conscrypt.HandshakeProtocol: com.android.org.conscrypt.SSLSessionImpl getSession()>();

        specialinvoke r0.<com.android.org.conscrypt.SSLRecordProtocol: void setSession(com.android.org.conscrypt.SSLSessionImpl)>($r58);

        $r59 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r59 == null goto label19;

        $r54 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r54.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("activeReadState = pendingConnectionState");

     label19:
        $r60 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState pendingConnectionState>;

        r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeReadState> = $r60;

     label20:
        $r37 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r37 == null goto label05;

        $r43 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SSLRecordProtocol:unwrap ] END, type: ");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r43.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r40);

        return i0;

     label21:
        $b9 = r2[0];

        $b8 = r2[1];

        virtualinvoke r0.<com.android.org.conscrypt.SSLRecordProtocol: void alert(byte,byte)>($b9, $b8);

        goto label20;

     label22:
        $r48 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.HandshakeProtocol handshakeProtocol>;

        virtualinvoke $r48.<com.android.org.conscrypt.HandshakeProtocol: void unwrap(byte[])>(r2);

        goto label20;

     label23:
        $r39 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r39 == null goto label24;

        $r46 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TLSCiphertext.unwrap: APP DATA[");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]:");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r51);

        $r53 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r52 = new java.lang.String;

        specialinvoke $r52.<java.lang.String: void <init>(byte[])>(r2);

        virtualinvoke $r53.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r52);

     label24:
        $r38 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Appendable appData>;

        interfaceinvoke $r38.<com.android.org.conscrypt.Appendable: void append(byte[])>(r2);

        goto label20;
    }

    protected byte[] wrap(byte, com.android.org.conscrypt.DataStream)
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        byte b0;
        com.android.org.conscrypt.DataStream r1;
        byte[] r2, $r3;
        int $i1;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        b0 := @parameter0: byte;

        r1 := @parameter1: com.android.org.conscrypt.DataStream;

        r2 = interfaceinvoke r1.<com.android.org.conscrypt.DataStream: byte[] getData(int)>(16384);

        $i1 = lengthof r2;

        $r3 = virtualinvoke r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] wrap(byte,byte[],int,int)>(b0, r2, 0, $i1);

        return $r3;
    }

    protected byte[] wrap(byte, byte[], int, int)
    {
        com.android.org.conscrypt.SSLRecordProtocol r0;
        byte b0;
        byte[] r1, r2, $r5, $r6;
        int i1, i2, $i3, $i4;
        com.android.org.conscrypt.Logger$Stream $r3, $r8, $r10, $r14, $r25, $r32;
        com.android.org.conscrypt.ConnectionState $r4, $r7;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r19, $r21, $r22, $r23, $r24, $r26, $r28, $r30, $r31;
        java.lang.String $r15, $r27, $r29;
        javax.net.ssl.SSLProtocolException $r16, $r20;
        com.android.org.conscrypt.AlertException $r17, $r18;

        r0 := @this: com.android.org.conscrypt.SSLRecordProtocol;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r3 == null goto label1;

        $r25 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SSLRecordProtocol.wrap: TLSPlaintext.fragment[");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]:");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r29);

        $r32 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r32.<com.android.org.conscrypt.Logger$Stream: void print(byte[],int,int)>(r1, i1, i2);

     label1:
        if i2 <= 16384 goto label2;

        $r18 = new com.android.org.conscrypt.AlertException;

        $r20 = new javax.net.ssl.SSLProtocolException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The provided chunk of data is too big: ");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > MAX_DATA_LENGTH == ");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(16384);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>($r27);

        specialinvoke $r18.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r20);

        throw $r18;

     label2:
        r2 = r1;

        $r4 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeWriteState>;

        if $r4 == null goto label4;

        $r7 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.ConnectionState activeWriteState>;

        r2 = virtualinvoke $r7.<com.android.org.conscrypt.ConnectionState: byte[] encrypt(byte,byte[],int,int)>(b0, r1, i1, i2);

        $i3 = lengthof r2;

        if $i3 <= 18432 goto label3;

        $r17 = new com.android.org.conscrypt.AlertException;

        $r16 = new javax.net.ssl.SSLProtocolException;

        specialinvoke $r16.<javax.net.ssl.SSLProtocolException: void <init>(java.lang.String)>("The ciphered data increased more than on 1024 bytes");

        specialinvoke $r17.<com.android.org.conscrypt.AlertException: void <init>(byte,javax.net.ssl.SSLException)>(80, $r16);

        throw $r17;

     label3:
        $r8 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        if $r8 == null goto label4;

        $r10 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SSLRecordProtocol.wrap: TLSCiphertext.fragment[");

        $i4 = lengthof r2;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]:");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>($r15);

        $r14 = r0.<com.android.org.conscrypt.SSLRecordProtocol: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r14.<com.android.org.conscrypt.Logger$Stream: void print(byte[])>(r2);

     label4:
        $r5 = r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] version>;

        $r6 = specialinvoke r0.<com.android.org.conscrypt.SSLRecordProtocol: byte[] packetize(byte,byte[],byte[])>(b0, $r5, r2);

        return $r6;
    }
}
