public class android.content.res.TypedArray extends java.lang.Object
{
    int[] mData;
    int[] mIndices;
    int mLength;
    private final android.content.res.Resources mResources;
    int[] mRsrcs;
    android.util.TypedValue mValue;
    android.content.res.XmlBlock$Parser mXml;

    void <init>(android.content.res.Resources, int[], int[], int)
    {
        android.content.res.TypedArray r0;
        android.content.res.Resources r1;
        int[] r2, r3;
        int i0;
        android.util.TypedValue $r4;

        r0 := @this: android.content.res.TypedArray;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: int[];

        r3 := @parameter2: int[];

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        r0.<android.content.res.TypedArray: android.util.TypedValue mValue> = $r4;

        r0.<android.content.res.TypedArray: android.content.res.Resources mResources> = r1;

        r0.<android.content.res.TypedArray: int[] mData> = r2;

        r0.<android.content.res.TypedArray: int[] mIndices> = r3;

        r0.<android.content.res.TypedArray: int mLength> = i0;

        return;
    }

    private boolean getValueAt(int, android.util.TypedValue)
    {
        android.content.res.TypedArray r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.util.TypedValue r1;
        int[] r2;
        java.lang.CharSequence r3;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        r1 := @parameter1: android.util.TypedValue;

        r2 = r0.<android.content.res.TypedArray: int[] mData>;

        $i2 = i0 + 0;

        i1 = r2[$i2];

        if i1 != 0 goto label1;

        return 0;

     label1:
        r1.<android.util.TypedValue: int type> = i1;

        $i3 = i0 + 1;

        $i4 = r2[$i3];

        r1.<android.util.TypedValue: int data> = $i4;

        $i5 = i0 + 2;

        $i6 = r2[$i5];

        r1.<android.util.TypedValue: int assetCookie> = $i6;

        $i7 = i0 + 3;

        $i8 = r2[$i7];

        r1.<android.util.TypedValue: int resourceId> = $i8;

        $i9 = i0 + 4;

        $i10 = r2[$i9];

        r1.<android.util.TypedValue: int changingConfigurations> = $i10;

        $i11 = i0 + 5;

        $i12 = r2[$i11];

        r1.<android.util.TypedValue: int density> = $i12;

        if i1 != 3 goto label3;

        r3 = specialinvoke r0.<android.content.res.TypedArray: java.lang.CharSequence loadStringValueAt(int)>(i0);

     label2:
        r1.<android.util.TypedValue: java.lang.CharSequence string> = r3;

        return 1;

     label3:
        r3 = null;

        goto label2;
    }

    private java.lang.CharSequence loadStringValueAt(int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        int[] r1;
        android.content.res.Resources $r2;
        android.content.res.AssetManager $r3;
        java.lang.CharSequence $r4, $r7;
        android.content.res.XmlBlock$Parser $r5, $r6;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i2 = i0 + 2;

        i1 = r1[$i2];

        if i1 >= 0 goto label2;

        $r5 = r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        if $r5 == null goto label1;

        $r6 = r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        $i5 = i0 + 1;

        $i6 = r1[$i5];

        $r7 = virtualinvoke $r6.<android.content.res.XmlBlock$Parser: java.lang.CharSequence getPooledString(int)>($i6);

        return $r7;

     label1:
        return null;

     label2:
        $r2 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r3 = $r2.<android.content.res.Resources: android.content.res.AssetManager mAssets>;

        $i3 = i0 + 1;

        $i4 = r1[$i3];

        $r4 = virtualinvoke $r3.<android.content.res.AssetManager: java.lang.CharSequence getPooledString(int,int)>(i1, $i4);

        return $r4;
    }

    public boolean getBoolean(int, boolean)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, $i3, $i6, $i7;
        boolean z0, z1, $z2, $z3;
        int[] r1;
        android.util.TypedValue r2;
        java.lang.StringBuilder $r3, $r4, $r7, $r8, $r9, $r11;
        java.lang.String $r5, $r6, $r10;
        java.lang.CharSequence $r12;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i3 = i1 + 0;

        i2 = r1[$i3];

        if i2 != 0 goto label1;

        return z0;

     label1:
        if i2 < 16 goto label4;

        if i2 > 31 goto label4;

        $i6 = i1 + 1;

        $i7 = r1[$i6];

        if $i7 == 0 goto label3;

        z1 = 1;

     label2:
        return z1;

     label3:
        z1 = 0;

        goto label2;

     label4:
        r2 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z2 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>(i1, r2);

        if $z2 == 0 goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to boolean: ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r10);

        $r12 = virtualinvoke r2.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        $z3 = staticinvoke <com.android.internal.util.XmlUtils: boolean convertValueToBoolean(java.lang.CharSequence,boolean)>($r12, z0);

        return $z3;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getBoolean of bad type: 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r6);

        return z0;
    }

    public int getColor(int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        int[] r1;
        android.util.TypedValue r2;
        java.lang.UnsupportedOperationException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;
        boolean $z0;
        android.content.res.ColorStateList $r9;
        android.content.res.Resources $r10;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i4 = i2 + 0;

        i3 = r1[$i4];

        if i3 != 0 goto label2;

     label1:
        return i1;

     label2:
        if i3 < 16 goto label3;

        if i3 > 31 goto label3;

        $i6 = i2 + 1;

        $i8 = r1[$i6];

        return $i8;

     label3:
        if i3 != 3 goto label4;

        r2 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>(i2, r2);

        if $z0 == 0 goto label1;

        $r10 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $i5 = r2.<android.util.TypedValue: int resourceId>;

        $r9 = virtualinvoke $r10.<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>(r2, $i5);

        $i7 = virtualinvoke $r9.<android.content.res.ColorStateList: int getDefaultColor()>();

        return $i7;

     label4:
        $r3 = new java.lang.UnsupportedOperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to color: type=0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public android.content.res.ColorStateList getColorStateList(int)
    {
        android.content.res.TypedArray r0;
        int i0, $i1, $i2;
        android.util.TypedValue r1;
        boolean $z0;
        android.content.res.Resources $r2;
        android.content.res.ColorStateList $r3;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $i1 = i0 * 6;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i1, r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $i2 = r1.<android.util.TypedValue: int resourceId>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)>(r1, $i2);

        return $r3;

     label1:
        return null;
    }

    public float getDimension(int, float)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, $i3, $i4, $i5;
        float f0, $f1;
        int[] r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        i1 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i3 = i1 + 0;

        i2 = r1[$i3];

        if i2 != 0 goto label1;

        return f0;

     label1:
        if i2 != 5 goto label2;

        $i4 = i1 + 1;

        $i5 = r1[$i4];

        $r8 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r9 = $r8.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $f1 = staticinvoke <android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>($i5, $r9);

        return $f1;

     label2:
        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to dimension: type=0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public int getDimensionPixelOffset(int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        int[] r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i4 = i2 + 0;

        i3 = r1[$i4];

        if i3 != 0 goto label1;

        return i1;

     label1:
        if i3 != 5 goto label2;

        $i5 = i2 + 1;

        $i7 = r1[$i5];

        $r8 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r9 = $r8.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i6 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>($i7, $r9);

        return $i6;

     label2:
        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to dimension: type=0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public int getDimensionPixelSize(int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        int[] r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        android.content.res.Resources $r8;
        android.util.DisplayMetrics $r9;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i4 = i2 + 0;

        i3 = r1[$i4];

        if i3 != 0 goto label1;

        return i1;

     label1:
        if i3 != 5 goto label2;

        $i5 = i2 + 1;

        $i7 = r1[$i5];

        $r8 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r9 = $r8.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i6 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i7, $r9);

        return $i6;

     label2:
        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to dimension: type=0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public android.graphics.drawable.Drawable getDrawable(int)
    {
        android.content.res.TypedArray r0;
        int i0, $i1, $i2;
        android.util.TypedValue r1;
        boolean $z0;
        android.content.res.Resources $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $i1 = i0 * 6;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i1, r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $i2 = r1.<android.util.TypedValue: int resourceId>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)>(r1, $i2);

        return $r3;

     label1:
        return null;
    }

    public float getFloat(int, float)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, $i3, $i6, $i7, $i8, $i9;
        float f0, $f1, $f2, $f3;
        int[] r1;
        android.util.TypedValue r2;
        java.lang.CharSequence r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r10, $r12;
        java.lang.String $r6, $r7, $r11, $r13;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        i1 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i3 = i1 + 0;

        i2 = r1[$i3];

        if i2 != 0 goto label1;

        return f0;

     label1:
        if i2 != 4 goto label2;

        $i8 = i1 + 1;

        $i9 = r1[$i8];

        $f3 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>($i9);

        return $f3;

     label2:
        if i2 < 16 goto label3;

        if i2 > 31 goto label3;

        $i7 = i1 + 1;

        $i6 = r1[$i7];

        $f2 = (float) $i6;

        return $f2;

     label3:
        r2 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>(i1, r2);

        if $z0 == 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to float: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r11);

        r3 = virtualinvoke r2.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        if r3 == null goto label4;

        $r13 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r13);

        return $f1;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getFloat of bad type: 0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r7);

        return f0;
    }

    public float getFraction(int, int, int, float)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        float f0, $f1, $f2, $f3;
        int[] r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        i3 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i5 = i3 + 0;

        i4 = r1[$i5];

        if i4 != 0 goto label1;

        return f0;

     label1:
        if i4 != 6 goto label2;

        $i6 = i3 + 1;

        $i7 = r1[$i6];

        $f1 = (float) i1;

        $f2 = (float) i2;

        $f3 = staticinvoke <android.util.TypedValue: float complexToFraction(int,float,float)>($i7, $f1, $f2);

        return $f3;

     label2:
        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to fraction: type=0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i4);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public int getIndex(int)
    {
        android.content.res.TypedArray r0;
        int i0, $i1, $i2;
        int[] $r1;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        $r1 = r0.<android.content.res.TypedArray: int[] mIndices>;

        $i1 = i0 + 1;

        $i2 = $r1[$i1];

        return $i2;
    }

    public int getIndexCount()
    {
        android.content.res.TypedArray r0;
        int[] $r1;
        int $i0;

        r0 := @this: android.content.res.TypedArray;

        $r1 = r0.<android.content.res.TypedArray: int[] mIndices>;

        $i0 = $r1[0];

        return $i0;
    }

    public int getInt(int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4, $i7, $i8, $i9;
        int[] r1;
        android.util.TypedValue r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r9, $r10;
        java.lang.String $r5, $r7, $r11;
        java.lang.CharSequence $r12;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i4 = i2 + 0;

        i3 = r1[$i4];

        if i3 != 0 goto label1;

        return i1;

     label1:
        if i3 < 16 goto label2;

        if i3 > 31 goto label2;

        $i9 = i2 + 1;

        $i8 = r1[$i9];

        return $i8;

     label2:
        r2 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>(i2, r2);

        if $z0 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to int: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r11);

        $r12 = virtualinvoke r2.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        $i7 = staticinvoke <com.android.internal.util.XmlUtils: int convertValueToInt(java.lang.CharSequence,int)>($r12, i1);

        return $i7;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getInt of bad type: 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r7);

        return i1;
    }

    public int getInteger(int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        int[] r1;
        java.lang.UnsupportedOperationException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i4 = i2 + 0;

        i3 = r1[$i4];

        if i3 != 0 goto label1;

        return i1;

     label1:
        if i3 < 16 goto label2;

        if i3 > 31 goto label2;

        $i5 = i2 + 1;

        $i6 = r1[$i5];

        return $i6;

     label2:
        $r2 = new java.lang.UnsupportedOperationException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t convert to integer: type=0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public int getLayoutDimension(int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        int[] r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i4 = i2 + 0;

        i3 = r1[$i4];

        if i3 < 16 goto label2;

        if i3 > 31 goto label2;

        $i8 = i2 + 1;

        i1 = r1[$i8];

     label1:
        return i1;

     label2:
        if i3 != 5 goto label1;

        $i5 = i2 + 1;

        $i6 = r1[$i5];

        $r2 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r3 = $r2.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i7 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i6, $r3);

        return $i7;
    }

    public int getLayoutDimension(int, java.lang.String)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r1, $r5, $r10;
        int[] r2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        android.util.DisplayMetrics $r11;
        android.content.res.Resources $r12;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 = i0 * 6;

        r2 = r0.<android.content.res.TypedArray: int[] mData>;

        $i3 = i1 + 0;

        i2 = r2[$i3];

        if i2 < 16 goto label1;

        if i2 > 31 goto label1;

        $i8 = i1 + 1;

        $i7 = r2[$i8];

        return $i7;

     label1:
        if i2 != 5 goto label2;

        $i4 = i1 + 1;

        $i6 = r2[$i4];

        $r12 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r11 = $r12.<android.content.res.Resources: android.util.DisplayMetrics mMetrics>;

        $i5 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i6, $r11);

        return $i5;

     label2:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r0.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": You must supply a ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r3;
    }

    public java.lang.String getNonConfigurationString(int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        int[] r1;
        android.util.TypedValue r2;
        java.lang.CharSequence r3, $r13;
        boolean $z0;
        java.lang.StringBuilder $r4, $r6, $r8, $r9, $r10, $r12;
        java.lang.String $r5, $r7, $r11, $r14, $r15;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i4 = i2 + 0;

        i3 = r1[$i4];

        $i5 = i2 + 4;

        $i7 = r1[$i5];

        $i6 = i1 ^ -1;

        $i8 = $i7 & $i6;

        if $i8 == 0 goto label2;

     label1:
        return null;

     label2:
        if i3 == 0 goto label1;

        if i3 != 3 goto label3;

        $r13 = specialinvoke r0.<android.content.res.TypedArray: java.lang.CharSequence loadStringValueAt(int)>(i2);

        $r15 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>();

        return $r15;

     label3:
        r2 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>(i2, r2);

        if $z0 == 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to string: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r11);

        r3 = virtualinvoke r2.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        if r3 == null goto label1;

        $r14 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        return $r14;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getString of bad type: 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i3);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r7);

        return null;
    }

    public java.lang.String getNonResourceString(int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] r1;
        android.content.res.XmlBlock$Parser $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i2 = i1 + 0;

        $i3 = r1[$i2];

        if $i3 != 3 goto label1;

        $i4 = i1 + 2;

        $i5 = r1[$i4];

        if $i5 >= 0 goto label1;

        $r2 = r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        $i6 = i1 + 1;

        $i7 = r1[$i6];

        $r3 = virtualinvoke $r2.<android.content.res.XmlBlock$Parser: java.lang.CharSequence getPooledString(int)>($i7);

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        return null;
    }

    public java.lang.String getPositionDescription()
    {
        android.content.res.TypedArray r0;
        android.content.res.XmlBlock$Parser $r1, $r2;
        java.lang.String $r3;

        r0 := @this: android.content.res.TypedArray;

        $r1 = r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        if $r1 == null goto label1;

        $r2 = r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml>;

        $r3 = virtualinvoke $r2.<android.content.res.XmlBlock$Parser: java.lang.String getPositionDescription()>();

        return $r3;

     label1:
        return "<internal>";
    }

    public int getResourceId(int, int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        int[] r1;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 * 6;

        r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i4 = i2 + 0;

        $i5 = r1[$i4];

        if $i5 == 0 goto label1;

        $i6 = i2 + 3;

        i3 = r1[$i6];

        if i3 == 0 goto label1;

        return i3;

     label1:
        return i1;
    }

    public android.content.res.Resources getResources()
    {
        android.content.res.TypedArray r0;
        android.content.res.Resources $r1;

        r0 := @this: android.content.res.TypedArray;

        $r1 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        return $r1;
    }

    public java.lang.String getString(int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, $i3;
        android.util.TypedValue r1;
        java.lang.CharSequence r2, $r15;
        int[] $r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7, $r9, $r10, $r11;
        java.lang.String $r6, $r8, $r12, $r13, $r14;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 = i0 * 6;

        $r3 = r0.<android.content.res.TypedArray: int[] mData>;

        $i3 = i1 + 0;

        i2 = $r3[$i3];

        if i2 != 0 goto label2;

     label1:
        return null;

     label2:
        if i2 != 3 goto label3;

        $r15 = specialinvoke r0.<android.content.res.TypedArray: java.lang.CharSequence loadStringValueAt(int)>(i1);

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.String toString()>();

        return $r14;

     label3:
        r1 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>(i1, r1);

        if $z0 == 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to string: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r12);

        r2 = virtualinvoke r1.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        if r2 == null goto label1;

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        return $r13;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getString of bad type: 0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r8);

        return null;
    }

    public java.lang.CharSequence getText(int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, i2, $i3;
        android.util.TypedValue r1;
        int[] $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r9, $r11;
        java.lang.String $r5, $r7, $r10;
        java.lang.CharSequence $r12, $r13;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 = i0 * 6;

        $r2 = r0.<android.content.res.TypedArray: int[] mData>;

        $i3 = i1 + 0;

        i2 = $r2[$i3];

        if i2 != 0 goto label1;

        return null;

     label1:
        if i2 != 3 goto label2;

        $r13 = specialinvoke r0.<android.content.res.TypedArray: java.lang.CharSequence loadStringValueAt(int)>(i1);

        return $r13;

     label2:
        r1 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>(i1, r1);

        if $z0 == 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Converting to string: ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r10);

        $r12 = virtualinvoke r1.<android.util.TypedValue: java.lang.CharSequence coerceToString()>();

        return $r12;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getString of bad type: 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Resources", $r7);

        return null;
    }

    public java.lang.CharSequence[] getTextArray(int)
    {
        android.content.res.TypedArray r0;
        int i0, $i1, $i2;
        android.util.TypedValue r1;
        boolean $z0;
        android.content.res.Resources $r2;
        java.lang.CharSequence[] $r3;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $i1 = i0 * 6;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i1, r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $i2 = r1.<android.util.TypedValue: int resourceId>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>($i2);

        return $r3;

     label1:
        return null;
    }

    public boolean getValue(int, android.util.TypedValue)
    {
        android.content.res.TypedArray r0;
        int i0, $i1;
        android.util.TypedValue r1;
        boolean $z0;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        r1 := @parameter1: android.util.TypedValue;

        $i1 = i0 * 6;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i1, r1);

        return $z0;
    }

    public boolean hasValue(int)
    {
        android.content.res.TypedArray r0;
        int i0, i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        i1 = i0 * 6;

        $r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $i2 = i1 + 0;

        $i3 = $r1[$i2];

        if $i3 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int length()
    {
        android.content.res.TypedArray r0;
        int $i0;

        r0 := @this: android.content.res.TypedArray;

        $i0 = r0.<android.content.res.TypedArray: int mLength>;

        return $i0;
    }

    public android.util.TypedValue peekValue(int)
    {
        android.content.res.TypedArray r0;
        int i0, $i1;
        android.util.TypedValue r1;
        boolean $z0;

        r0 := @this: android.content.res.TypedArray;

        i0 := @parameter0: int;

        r1 = r0.<android.content.res.TypedArray: android.util.TypedValue mValue>;

        $i1 = i0 * 6;

        $z0 = specialinvoke r0.<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)>($i1, r1);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        return null;
    }

    public void recycle()
    {
        android.content.res.TypedArray r0, r3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r9;
        android.content.res.Resources $r4, $r5, $r6;
        int[] $r7, $r8;
        int $i0, $i1;

        r0 := @this: android.content.res.TypedArray;

        $r4 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        r1 = $r4.<android.content.res.Resources: java.lang.Object mAccessLock>;

        entermonitor r1;

     label1:
        $r5 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        r3 = $r5.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes>;

     label2:
        if r3 == null goto label4;

     label3:
        $r7 = r3.<android.content.res.TypedArray: int[] mData>;

        $i1 = lengthof $r7;

        $r8 = r0.<android.content.res.TypedArray: int[] mData>;

        $i0 = lengthof $r8;

        if $i1 >= $i0 goto label5;

     label4:
        r0.<android.content.res.TypedArray: android.content.res.XmlBlock$Parser mXml> = null;

        $r6 = r0.<android.content.res.TypedArray: android.content.res.Resources mResources>;

        $r6.<android.content.res.Resources: android.content.res.TypedArray mCachedStyledAttributes> = r0;

     label5:
        exitmonitor r1;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

        r2 = $r9;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.lang.String toString()
    {
        android.content.res.TypedArray r0;
        int[] $r1;
        java.lang.String $r2;

        r0 := @this: android.content.res.TypedArray;

        $r1 = r0.<android.content.res.TypedArray: int[] mData>;

        $r2 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>($r1);

        return $r2;
    }
}
