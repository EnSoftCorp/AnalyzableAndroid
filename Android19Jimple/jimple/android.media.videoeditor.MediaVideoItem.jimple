public class android.media.videoeditor.MediaVideoItem extends android.media.videoeditor.MediaItem
{
    private final int mAspectRatio;
    private final int mAudioBitrate;
    private final int mAudioChannels;
    private final int mAudioSamplingFrequency;
    private final int mAudioType;
    private java.lang.String mAudioWaveformFilename;
    private long mBeginBoundaryTimeMs;
    private final long mDurationMs;
    private long mEndBoundaryTimeMs;
    private final int mFileType;
    private final int mFps;
    private final int mHeight;
    private android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper;
    private boolean mMuted;
    private final int mVideoBitrate;
    private android.media.videoeditor.VideoEditorImpl mVideoEditor;
    private final int mVideoLevel;
    private final int mVideoProfile;
    private final int mVideoRotationDegree;
    private final int mVideoType;
    private int mVolumePercentage;
    private java.lang.ref.SoftReference mWaveformData;
    private final int mWidth;

    private void <init>() throws java.io.IOException
    {
        android.media.videoeditor.MediaVideoItem r0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        specialinvoke r0.<android.media.videoeditor.MediaVideoItem: void <init>(android.media.videoeditor.VideoEditor,java.lang.String,java.lang.String,int)>(null, null, null, 0);

        return;
    }

    public void <init>(android.media.videoeditor.VideoEditor, java.lang.String, java.lang.String, int) throws java.io.IOException
    {
        android.media.videoeditor.MediaVideoItem r0;
        android.media.videoeditor.VideoEditor r1;
        java.lang.String r2, r3;
        int i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        r1 := @parameter0: android.media.videoeditor.VideoEditor;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<android.media.videoeditor.MediaVideoItem: void <init>(android.media.videoeditor.VideoEditor,java.lang.String,java.lang.String,int,long,long,int,boolean,java.lang.String)>(r1, r2, r3, i0, 0L, -1L, 100, 0, null);

        return;
    }

    void <init>(android.media.videoeditor.VideoEditor, java.lang.String, java.lang.String, int, long, long, int, boolean, java.lang.String) throws java.io.IOException
    {
        android.media.videoeditor.MediaVideoItem r0;
        android.media.videoeditor.VideoEditor r1;
        java.lang.String r2, r3, r4, $r18, $r36, $r38, $r44, $r49;
        int i0, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i32, $i33, $i34, $i35, $i36, $i37;
        long l1, l2, $l28;
        boolean z0, $z1, $z2, $z3;
        java.lang.Exception r5, $r47;
        android.media.videoeditor.MediaArtistNativeHelper$Properties r6;
        android.media.videoeditor.VideoEditorProfile r7;
        android.media.videoeditor.MediaArtistNativeHelper $r8, $r20, $r21, $r23, $r24, $r25, $r26, $r45;
        java.lang.StringBuilder $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r27, $r28, $r29, $r34, $r39, $r40, $r41, $r43, $r50, $r51;
        java.lang.IllegalArgumentException $r10, $r22, $r32, $r33, $r37, $r42;
        float $f0;
        byte $b31;
        java.lang.ref.SoftReference $r30;
        android.media.videoeditor.WaveformData $r31;
        java.lang.RuntimeException $r35;
        android.media.videoeditor.VideoEditorImpl $r46, $r48;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        r1 := @parameter0: android.media.videoeditor.VideoEditor;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        l1 := @parameter4: long;

        l2 := @parameter5: long;

        i3 := @parameter6: int;

        z0 := @parameter7: boolean;

        r4 := @parameter8: java.lang.String;

        specialinvoke r0.<android.media.videoeditor.MediaItem: void <init>(android.media.videoeditor.VideoEditor,java.lang.String,java.lang.String,int)>(r1, r2, r3, i0);

        $z1 = r1 instanceof android.media.videoeditor.VideoEditorImpl;

        if $z1 == 0 goto label01;

        $r46 = (android.media.videoeditor.VideoEditorImpl) r1;

        $r45 = virtualinvoke $r46.<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper getNativeContext()>();

        r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper> = $r45;

        $r48 = (android.media.videoeditor.VideoEditorImpl) r1;

        r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.VideoEditorImpl mVideoEditor> = $r48;

     label01:
        $r8 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        r6 = virtualinvoke $r8.<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$Properties getMediaProperties(java.lang.String)>(r3);

     label02:
        r7 = staticinvoke <android.media.videoeditor.VideoEditorProfile: android.media.videoeditor.VideoEditorProfile get()>();

        if r7 != null goto label04;

        $r35 = new java.lang.RuntimeException;

        specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can\'t get the video editor profile");

        throw $r35;

     label03:
        $r47 := @caughtexception;

        r5 = $r47;

        $r42 = new java.lang.IllegalArgumentException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r50 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r49);

        throw $r42;

     label04:
        i4 = r7.<android.media.videoeditor.VideoEditorProfile: int maxInputVideoFrameWidth>;

        i5 = r7.<android.media.videoeditor.VideoEditorProfile: int maxInputVideoFrameHeight>;

        $i6 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int width>;

        if $i6 > i4 goto label05;

        $i8 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int height>;

        if $i8 <= i5 goto label06;

     label05:
        $r10 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported import resolution. Supported maximum width:");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height:");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", current width:");

        $i7 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int width>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height:");

        $i9 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int height>;

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r10;

     label06:
        $z2 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: boolean profileSupported>;

        if $z2 != 0 goto label07;

        $r37 = new java.lang.IllegalArgumentException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported video profile ");

        $i37 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int profile>;

        $r34 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r36);

        throw $r37;

     label07:
        $z3 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: boolean levelSupported>;

        if $z3 != 0 goto label08;

        $r33 = new java.lang.IllegalArgumentException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported video level ");

        $i36 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int level>;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        $r38 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38);

        throw $r33;

     label08:
        $r20 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i10 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int fileType>;

        $i12 = virtualinvoke $r20.<android.media.videoeditor.MediaArtistNativeHelper: int getFileType(int)>($i10);

        lookupswitch($i12)
        {
            case 0: goto label10;
            case 1: goto label10;
            case 10: goto label10;
            default: goto label09;
        };

     label09:
        $r32 = new java.lang.IllegalArgumentException;

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported Input File Type");

        throw $r32;

     label10:
        $r21 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i13 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int videoFormat>;

        $i11 = virtualinvoke $r21.<android.media.videoeditor.MediaArtistNativeHelper: int getVideoCodecType(int)>($i13);

        tableswitch($i11)
        {
            case 1: goto label12;
            case 2: goto label12;
            case 3: goto label12;
            default: goto label11;
        };

     label11:
        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported Video Codec Format in Input File");

        throw $r22;

     label12:
        $i16 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int width>;

        r0.<android.media.videoeditor.MediaVideoItem: int mWidth> = $i16;

        $i14 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int height>;

        r0.<android.media.videoeditor.MediaVideoItem: int mHeight> = $i14;

        $r23 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i19 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int width>;

        $i15 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int height>;

        $i18 = virtualinvoke $r23.<android.media.videoeditor.MediaArtistNativeHelper: int getAspectRatio(int,int)>($i19, $i15);

        r0.<android.media.videoeditor.MediaVideoItem: int mAspectRatio> = $i18;

        $r25 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i17 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int fileType>;

        $i21 = virtualinvoke $r25.<android.media.videoeditor.MediaArtistNativeHelper: int getFileType(int)>($i17);

        r0.<android.media.videoeditor.MediaVideoItem: int mFileType> = $i21;

        $r24 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i20 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int videoFormat>;

        $i25 = virtualinvoke $r24.<android.media.videoeditor.MediaArtistNativeHelper: int getVideoCodecType(int)>($i20);

        r0.<android.media.videoeditor.MediaVideoItem: int mVideoType> = $i25;

        $i24 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int profile>;

        r0.<android.media.videoeditor.MediaVideoItem: int mVideoProfile> = $i24;

        $i23 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int level>;

        r0.<android.media.videoeditor.MediaVideoItem: int mVideoLevel> = $i23;

        $i22 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int videoDuration>;

        $l28 = (long) $i22;

        r0.<android.media.videoeditor.MediaVideoItem: long mDurationMs> = $l28;

        $i27 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int videoBitrate>;

        r0.<android.media.videoeditor.MediaVideoItem: int mVideoBitrate> = $i27;

        $i26 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioBitrate>;

        r0.<android.media.videoeditor.MediaVideoItem: int mAudioBitrate> = $i26;

        $f0 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: float averageFrameRate>;

        $i33 = (int) $f0;

        r0.<android.media.videoeditor.MediaVideoItem: int mFps> = $i33;

        $r26 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i34 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioFormat>;

        $i35 = virtualinvoke $r26.<android.media.videoeditor.MediaArtistNativeHelper: int getAudioCodecType(int)>($i34);

        r0.<android.media.videoeditor.MediaVideoItem: int mAudioType> = $i35;

        $i29 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioChannels>;

        r0.<android.media.videoeditor.MediaVideoItem: int mAudioChannels> = $i29;

        $i30 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int audioSamplingFrequency>;

        r0.<android.media.videoeditor.MediaVideoItem: int mAudioSamplingFrequency> = $i30;

        r0.<android.media.videoeditor.MediaVideoItem: long mBeginBoundaryTimeMs> = l1;

        $b31 = l2 cmp -1L;

        if $b31 != 0 goto label13;

        l2 = r0.<android.media.videoeditor.MediaVideoItem: long mDurationMs>;

     label13:
        r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs> = l2;

        r0.<android.media.videoeditor.MediaVideoItem: int mVolumePercentage> = i3;

        r0.<android.media.videoeditor.MediaVideoItem: boolean mMuted> = z0;

        r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename> = r4;

        if r4 == null goto label15;

        $r30 = new java.lang.ref.SoftReference;

        $r31 = new android.media.videoeditor.WaveformData;

        specialinvoke $r31.<android.media.videoeditor.WaveformData: void <init>(java.lang.String)>(r4);

        specialinvoke $r30.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r31);

        r0.<android.media.videoeditor.MediaVideoItem: java.lang.ref.SoftReference mWaveformData> = $r30;

     label14:
        $i32 = r6.<android.media.videoeditor.MediaArtistNativeHelper$Properties: int videoRotation>;

        r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree> = $i32;

        return;

     label15:
        r0.<android.media.videoeditor.MediaVideoItem: java.lang.ref.SoftReference mWaveformData> = null;

        goto label14;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    public void addEffect(android.media.videoeditor.Effect)
    {
        android.media.videoeditor.MediaVideoItem r0;
        android.media.videoeditor.Effect r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        r1 := @parameter0: android.media.videoeditor.Effect;

        $z0 = r1 instanceof android.media.videoeditor.EffectKenBurns;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Ken Burns effects cannot be applied to MediaVideoItem");

        throw $r2;

     label1:
        specialinvoke r0.<android.media.videoeditor.MediaItem: void addEffect(android.media.videoeditor.Effect)>(r1);

        return;
    }

    public void extractAudioWaveform(android.media.videoeditor.ExtractAudioWaveformProgressListener) throws java.io.IOException
    {
        android.media.videoeditor.MediaVideoItem r0;
        android.media.videoeditor.ExtractAudioWaveformProgressListener r1;
        java.lang.String r2, r3, $r5, $r8, $r12, $r17, $r21, $r23;
        int i0, $i3, $i4, $i5, $i6, $i7;
        byte b1;
        short s2;
        android.media.videoeditor.MediaArtistNativeHelper $r4, $r18, $r19, $r20, $r22;
        java.lang.ref.SoftReference $r6;
        android.media.videoeditor.WaveformData $r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r14, $r15;
        java.lang.Object[] $r16;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        r1 := @parameter0: android.media.videoeditor.ExtractAudioWaveformProgressListener;

        $r4 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        r2 = virtualinvoke $r4.<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String getProjectPath()>();

        $r5 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename>;

        if $r5 != null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("audioWaveformFile-");

        $r12 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: java.lang.String getId()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".dat");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = newarray (java.lang.Object)[0];

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r17, $r16);

        $r18 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i3 = r0.<android.media.videoeditor.MediaVideoItem: int mAudioType>;

        $i4 = virtualinvoke $r18.<android.media.videoeditor.MediaArtistNativeHelper: int getAudioCodecType(int)>($i3);

        if $i4 != 1 goto label3;

        b1 = 5;

        s2 = 160;

     label1:
        $r22 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $r23 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: java.lang.String getId()>();

        $r21 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mFilename>;

        virtualinvoke $r22.<android.media.videoeditor.MediaArtistNativeHelper: void generateAudioGraph(java.lang.String,java.lang.String,java.lang.String,int,int,int,android.media.videoeditor.ExtractAudioWaveformProgressListener,boolean)>($r23, $r21, r3, b1, 2, s2, r1, 1);

        r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename> = r3;

     label2:
        $r6 = new java.lang.ref.SoftReference;

        $r7 = new android.media.videoeditor.WaveformData;

        $r8 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename>;

        specialinvoke $r7.<android.media.videoeditor.WaveformData: void <init>(java.lang.String)>($r8);

        specialinvoke $r6.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r7);

        r0.<android.media.videoeditor.MediaVideoItem: java.lang.ref.SoftReference mWaveformData> = $r6;

        return;

     label3:
        $r19 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i5 = r0.<android.media.videoeditor.MediaVideoItem: int mAudioType>;

        $i7 = virtualinvoke $r19.<android.media.videoeditor.MediaArtistNativeHelper: int getAudioCodecType(int)>($i5);

        if $i7 != 8 goto label4;

        b1 = 10;

        s2 = 320;

        goto label1;

     label4:
        $r20 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i6 = r0.<android.media.videoeditor.MediaVideoItem: int mAudioType>;

        i0 = virtualinvoke $r20.<android.media.videoeditor.MediaArtistNativeHelper: int getAudioCodecType(int)>($i6);

        b1 = 0;

        s2 = 0;

        if i0 != 2 goto label1;

        b1 = 32;

        s2 = 1024;

        goto label1;
    }

    public int getAspectRatio()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mAspectRatio>;

        return $i0;
    }

    public int getAudioBitrate()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mAudioBitrate>;

        return $i0;
    }

    public int getAudioChannels()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mAudioChannels>;

        return $i0;
    }

    public int getAudioSamplingFrequency()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mAudioSamplingFrequency>;

        return $i0;
    }

    public int getAudioType()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mAudioType>;

        return $i0;
    }

    java.lang.String getAudioWaveformFilename()
    {
        android.media.videoeditor.MediaVideoItem r0;
        java.lang.String $r1;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $r1 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename>;

        return $r1;
    }

    public long getBoundaryBeginTime()
    {
        android.media.videoeditor.MediaVideoItem r0;
        long $l0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $l0 = r0.<android.media.videoeditor.MediaVideoItem: long mBeginBoundaryTimeMs>;

        return $l0;
    }

    public long getBoundaryEndTime()
    {
        android.media.videoeditor.MediaVideoItem r0;
        long $l0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $l0 = r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs>;

        return $l0;
    }

    public long getDuration()
    {
        android.media.videoeditor.MediaVideoItem r0;
        long $l0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $l0 = r0.<android.media.videoeditor.MediaVideoItem: long mDurationMs>;

        return $l0;
    }

    public int getFileType()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mFileType>;

        return $i0;
    }

    public int getFps()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mFps>;

        return $i0;
    }

    public int getHeight()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        if $i0 == 90 goto label1;

        $i2 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        if $i2 != 270 goto label2;

     label1:
        $i1 = r0.<android.media.videoeditor.MediaVideoItem: int mWidth>;

        return $i1;

     label2:
        $i3 = r0.<android.media.videoeditor.MediaVideoItem: int mHeight>;

        return $i3;
    }

    public android.graphics.Bitmap getThumbnail(int, int, long)
    {
        android.media.videoeditor.MediaVideoItem r0;
        int i0, i1, i3, i4, $i8, $i9;
        long l2, $l5;
        android.media.videoeditor.MediaArtistNativeHelper r1;
        java.lang.String r2;
        byte $b6, $b7;
        java.lang.IllegalArgumentException $r3, $r5, $r6;
        android.graphics.Bitmap $r4;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $l5 = r0.<android.media.videoeditor.MediaVideoItem: long mDurationMs>;

        $b6 = l2 cmp $l5;

        if $b6 <= 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Time Exceeds duration");

        throw $r6;

     label1:
        $b7 = l2 cmp 0L;

        if $b7 >= 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid Time duration");

        throw $r5;

     label2:
        if i0 <= 0 goto label3;

        if i1 > 0 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid Dimensions");

        throw $r3;

     label4:
        $i8 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        if $i8 == 90 goto label5;

        $i9 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        if $i9 != 270 goto label6;

     label5:
        i3 = i0;

        i0 = i1;

        i1 = i3;

     label6:
        r1 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        r2 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: java.lang.String getFilename()>();

        i4 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        $r4 = virtualinvoke r1.<android.media.videoeditor.MediaArtistNativeHelper: android.graphics.Bitmap getPixels(java.lang.String,int,int,long,int)>(r2, i0, i1, l2, i4);

        return $r4;
    }

    public void getThumbnailList(int, int, long, long, int, int[], android.media.videoeditor.MediaItem$GetThumbnailListCallback) throws java.io.IOException
    {
        android.media.videoeditor.MediaVideoItem r0;
        int i0, i1, i4, i5, i6, $i10, $i11;
        long l2, l3, $l8;
        int[] r1;
        android.media.videoeditor.MediaItem$GetThumbnailListCallback r2;
        android.media.videoeditor.MediaArtistNativeHelper r3;
        java.lang.String r4;
        byte $b7, $b9;
        java.lang.IllegalArgumentException $r5, $r6, $r7;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        i4 := @parameter4: int;

        r1 := @parameter5: int[];

        r2 := @parameter6: android.media.videoeditor.MediaItem$GetThumbnailListCallback;

        $b7 = l2 cmp l3;

        if $b7 <= 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Start time is greater than end time");

        throw $r7;

     label1:
        $l8 = r0.<android.media.videoeditor.MediaVideoItem: long mDurationMs>;

        $b9 = l3 cmp $l8;

        if $b9 <= 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("End time is greater than file duration");

        throw $r6;

     label2:
        if i1 <= 0 goto label3;

        if i0 > 0 goto label4;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid dimension");

        throw $r5;

     label4:
        $i10 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        if $i10 == 90 goto label5;

        $i11 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        if $i11 != 270 goto label6;

     label5:
        i5 = i0;

        i0 = i1;

        i1 = i5;

     label6:
        r3 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        r4 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: java.lang.String getFilename()>();

        i6 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        virtualinvoke r3.<android.media.videoeditor.MediaArtistNativeHelper: void getPixelsList(java.lang.String,int,int,long,long,int,int[],android.media.videoeditor.MediaItem$GetThumbnailListCallback,int)>(r4, i0, i1, l2, l3, i4, r1, r2, i6);

        return;
    }

    public long getTimelineDuration()
    {
        android.media.videoeditor.MediaVideoItem r0;
        long $l0, $l1, $l2;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $l1 = r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs>;

        $l0 = r0.<android.media.videoeditor.MediaVideoItem: long mBeginBoundaryTimeMs>;

        $l2 = $l1 - $l0;

        return $l2;
    }

    public int getVideoBitrate()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoBitrate>;

        return $i0;
    }

    android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getVideoClipProperties()
    {
        android.media.videoeditor.MediaVideoItem r0;
        android.media.videoeditor.MediaArtistNativeHelper$ClipSettings r1, $r2;
        java.lang.String $r3;
        android.media.videoeditor.MediaArtistNativeHelper $r4, $r5;
        int $i0, $i1, $i3, $i5, $i6, $i7, $i8;
        long $l2, $l4;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $r2 = new android.media.videoeditor.MediaArtistNativeHelper$ClipSettings;

        specialinvoke $r2.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: java.lang.String getFilename()>();

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: java.lang.String clipPath> = $r3;

        $r4 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i0 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: int getFileType()>();

        $i1 = virtualinvoke $r4.<android.media.videoeditor.MediaArtistNativeHelper: int getMediaItemFileType(int)>($i0);

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int fileType> = $i1;

        $l2 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: long getBoundaryBeginTime()>();

        $i3 = (int) $l2;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int beginCutTime> = $i3;

        $l4 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: long getBoundaryEndTime()>();

        $i5 = (int) $l4;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int endCutTime> = $i5;

        $r5 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $i6 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: int getRenderingMode()>();

        $i7 = virtualinvoke $r5.<android.media.videoeditor.MediaArtistNativeHelper: int getMediaItemRenderingMode(int)>($i6);

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int mediaRendering> = $i7;

        $i8 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        r1.<android.media.videoeditor.MediaArtistNativeHelper$ClipSettings: int rotationDegree> = $i8;

        return r1;
    }

    public int getVideoLevel()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoLevel>;

        return $i0;
    }

    public int getVideoProfile()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoProfile>;

        return $i0;
    }

    public int getVideoType()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoType>;

        return $i0;
    }

    public int getVolume()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mVolumePercentage>;

        return $i0;
    }

    public android.media.videoeditor.WaveformData getWaveformData() throws java.io.IOException
    {
        android.media.videoeditor.MediaVideoItem r0;
        android.media.videoeditor.WaveformData r1, r2, $r8;
        java.io.IOException r3, $r11;
        java.lang.ref.SoftReference $r4, $r5, $r10;
        java.lang.Object $r6;
        java.lang.String $r7, $r9;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $r4 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.ref.SoftReference mWaveformData>;

        if $r4 != null goto label2;

        r1 = null;

     label1:
        return r1;

     label2:
        $r5 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.ref.SoftReference mWaveformData>;

        $r6 = virtualinvoke $r5.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r1 = (android.media.videoeditor.WaveformData) $r6;

        if r1 != null goto label1;

        $r7 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename>;

        if $r7 == null goto label6;

     label3:
        $r8 = new android.media.videoeditor.WaveformData;

        $r9 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename>;

        specialinvoke $r8.<android.media.videoeditor.WaveformData: void <init>(java.lang.String)>($r9);

        r2 = $r8;

     label4:
        $r10 = new java.lang.ref.SoftReference;

        specialinvoke $r10.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r2);

        r0.<android.media.videoeditor.MediaVideoItem: java.lang.ref.SoftReference mWaveformData> = $r10;

        return r2;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        throw r3;

     label6:
        return null;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public int getWidth()
    {
        android.media.videoeditor.MediaVideoItem r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $i0 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        if $i0 == 90 goto label1;

        $i2 = r0.<android.media.videoeditor.MediaVideoItem: int mVideoRotationDegree>;

        if $i2 != 270 goto label2;

     label1:
        $i1 = r0.<android.media.videoeditor.MediaVideoItem: int mHeight>;

        return $i1;

     label2:
        $i3 = r0.<android.media.videoeditor.MediaVideoItem: int mWidth>;

        return $i3;
    }

    void invalidate()
    {
        android.media.videoeditor.MediaVideoItem r0;
        java.lang.String $r1, $r3;
        java.io.File $r2;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $r1 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename>;

        if $r1 == null goto label1;

        $r2 = new java.io.File;

        $r3 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename>;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mAudioWaveformFilename> = null;

     label1:
        return;
    }

    void invalidateTransitions(long, long)
    {
        android.media.videoeditor.MediaVideoItem r0;
        long l0, l1, l2, $l3, $l4, $l5, $l6;
        android.media.videoeditor.Transition $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        if $r1 == null goto label1;

        $l6 = r0.<android.media.videoeditor.MediaVideoItem: long mBeginBoundaryTimeMs>;

        $r5 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        $l5 = virtualinvoke $r5.<android.media.videoeditor.Transition: long getDuration()>();

        $z1 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: boolean isOverlapping(long,long,long,long)>(l0, l1, $l6, $l5);

        if $z1 == 0 goto label1;

        $r6 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        virtualinvoke $r6.<android.media.videoeditor.Transition: void invalidate()>();

     label1:
        $r2 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        if $r2 == null goto label2;

        $r3 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        l2 = virtualinvoke $r3.<android.media.videoeditor.Transition: long getDuration()>();

        $l3 = r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs>;

        $l4 = $l3 - l2;

        $z0 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: boolean isOverlapping(long,long,long,long)>(l0, l1, $l4, l2);

        if $z0 == 0 goto label2;

        $r4 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        virtualinvoke $r4.<android.media.videoeditor.Transition: void invalidate()>();

     label2:
        return;
    }

    void invalidateTransitions(long, long, long, long)
    {
        android.media.videoeditor.MediaVideoItem r0;
        long l0, l1, l2, l3, l4, l5, $l6, $l7, $l8, $l9, $l10, $l12, $l13, $l14, $l15, $l16, $l19, $l20, $l21, $l25;
        boolean z0, z1, z2, z3;
        android.media.videoeditor.Transition $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        byte $b11, $b17, $b18, $b22, $b23, $b24;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        $r1 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        if $r1 == null goto label1;

        $r5 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        l5 = virtualinvoke $r5.<android.media.videoeditor.Transition: long getDuration()>();

        $l20 = r0.<android.media.videoeditor.MediaVideoItem: long mBeginBoundaryTimeMs>;

        z2 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: boolean isOverlapping(long,long,long,long)>(l0, l1, $l20, l5);

        $l19 = r0.<android.media.videoeditor.MediaVideoItem: long mBeginBoundaryTimeMs>;

        z3 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: boolean isOverlapping(long,long,long,long)>(l2, l3, $l19, l5);

        if z3 == z2 goto label3;

        $r8 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        virtualinvoke $r8.<android.media.videoeditor.Transition: void invalidate()>();

     label1:
        $r3 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        if $r3 == null goto label2;

        $r2 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        l4 = virtualinvoke $r2.<android.media.videoeditor.Transition: long getDuration()>();

        $l6 = r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs>;

        $l7 = $l6 - l4;

        z0 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: boolean isOverlapping(long,long,long,long)>(l0, l1, $l7, l4);

        $l9 = r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs>;

        $l8 = $l9 - l4;

        z1 = virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: boolean isOverlapping(long,long,long,long)>(l2, l3, $l8, l4);

        if z1 == z0 goto label5;

        $r6 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        virtualinvoke $r6.<android.media.videoeditor.Transition: void invalidate()>();

     label2:
        return;

     label3:
        if z3 == 0 goto label1;

        $b23 = l0 cmp l2;

        if $b23 != 0 goto label4;

        $l21 = l0 + l1;

        $b22 = $l21 cmp l5;

        if $b22 <= 0 goto label4;

        $l25 = l2 + l3;

        $b24 = $l25 cmp l5;

        if $b24 > 0 goto label1;

     label4:
        $r7 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        virtualinvoke $r7.<android.media.videoeditor.Transition: void invalidate()>();

        goto label1;

     label5:
        if z1 == 0 goto label2;

        $l12 = l0 + l1;

        $l10 = l2 + l3;

        $b11 = $l12 cmp $l10;

        if $b11 != 0 goto label6;

        $l13 = r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs>;

        $l16 = $l13 - l4;

        $b17 = l0 cmp $l16;

        if $b17 > 0 goto label6;

        $l14 = r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs>;

        $l15 = $l14 - l4;

        $b18 = l2 cmp $l15;

        if $b18 <= 0 goto label2;

     label6:
        $r4 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        virtualinvoke $r4.<android.media.videoeditor.Transition: void invalidate()>();

        return;
    }

    public boolean isMuted()
    {
        android.media.videoeditor.MediaVideoItem r0;
        boolean $z0;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        $z0 = r0.<android.media.videoeditor.MediaVideoItem: boolean mMuted>;

        return $z0;
    }

    public long renderFrame(android.view.SurfaceHolder, long)
    {
        android.media.videoeditor.MediaVideoItem r0;
        android.view.SurfaceHolder r1;
        long l0, l1, $l2;
        android.view.Surface r2;
        byte $b3, $b4;
        java.lang.IllegalArgumentException $r3, $r7;
        java.lang.String $r4, $r5;
        int $i5, $i6;
        android.media.videoeditor.MediaArtistNativeHelper $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        r1 := @parameter0: android.view.SurfaceHolder;

        l0 := @parameter1: long;

        l1 = 0L;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Surface Holder is null");

        throw $r7;

     label1:
        $l2 = r0.<android.media.videoeditor.MediaVideoItem: long mDurationMs>;

        $b3 = l0 cmp $l2;

        if $b3 > 0 goto label2;

        $b4 = l0 cmp 0L;

        if $b4 >= 0 goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("requested time not correct");

        throw $r3;

     label3:
        r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        if r2 != null goto label4;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Surface could not be retrieved from Surface holder");

        throw $r8;

     label4:
        $r4 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mFilename>;

        if $r4 == null goto label5;

        $r6 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        $r5 = r0.<android.media.videoeditor.MediaVideoItem: java.lang.String mFilename>;

        $i6 = r0.<android.media.videoeditor.MediaVideoItem: int mWidth>;

        $i5 = r0.<android.media.videoeditor.MediaVideoItem: int mHeight>;

        l1 = virtualinvoke $r6.<android.media.videoeditor.MediaArtistNativeHelper: long renderMediaItemPreviewFrame(android.view.Surface,java.lang.String,long,int,int)>(r2, $r5, l0, $i6, $i5);

     label5:
        return l1;
    }

    public void setExtractBoundaries(long, long)
    {
        android.media.videoeditor.MediaVideoItem r0;
        long l0, l1, $l2, $l4, $l9, $l12;
        byte $b3, $b5, $b6, $b7, $b8, $b10, $b11, $b13, $b14;
        java.lang.IllegalArgumentException $r1, $r8, $r9, $r10;
        android.media.videoeditor.MediaArtistNativeHelper $r2;
        android.media.videoeditor.Transition $r3, $r5, $r6, $r7;
        android.media.videoeditor.VideoEditorImpl $r4;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = r0.<android.media.videoeditor.MediaVideoItem: long mDurationMs>;

        $b3 = l0 cmp $l2;

        if $b3 <= 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("setExtractBoundaries: Invalid start time");

        throw $r9;

     label1:
        $l4 = r0.<android.media.videoeditor.MediaVideoItem: long mDurationMs>;

        $b5 = l1 cmp $l4;

        if $b5 <= 0 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("setExtractBoundaries: Invalid end time");

        throw $r10;

     label2:
        $b6 = l1 cmp -1L;

        if $b6 == 0 goto label3;

        $b14 = l0 cmp l1;

        if $b14 < 0 goto label3;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("setExtractBoundaries: Start time is greater than end time");

        throw $r8;

     label3:
        $b7 = l0 cmp 0L;

        if $b7 < 0 goto label4;

        $b8 = l1 cmp -1L;

        if $b8 == 0 goto label5;

        $b13 = l1 cmp 0L;

        if $b13 >= 0 goto label5;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("setExtractBoundaries: Start time or end time is negative");

        throw $r1;

     label5:
        $r2 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r2.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        $l9 = r0.<android.media.videoeditor.MediaVideoItem: long mBeginBoundaryTimeMs>;

        $b10 = l0 cmp $l9;

        if $b10 == 0 goto label6;

        $r5 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        if $r5 == null goto label6;

        $r7 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        virtualinvoke $r7.<android.media.videoeditor.Transition: void invalidate()>();

     label6:
        $l12 = r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs>;

        $b11 = l1 cmp $l12;

        if $b11 == 0 goto label7;

        $r3 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        if $r3 == null goto label7;

        $r6 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        virtualinvoke $r6.<android.media.videoeditor.Transition: void invalidate()>();

     label7:
        r0.<android.media.videoeditor.MediaVideoItem: long mBeginBoundaryTimeMs> = l0;

        r0.<android.media.videoeditor.MediaVideoItem: long mEndBoundaryTimeMs> = l1;

        virtualinvoke r0.<android.media.videoeditor.MediaVideoItem: void adjustTransitions()>();

        $r4 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.VideoEditorImpl mVideoEditor>;

        virtualinvoke $r4.<android.media.videoeditor.VideoEditorImpl: void updateTimelineDuration()>();

        return;
    }

    public void setMute(boolean)
    {
        android.media.videoeditor.MediaVideoItem r0;
        boolean z0;
        android.media.videoeditor.MediaArtistNativeHelper $r1;
        android.media.videoeditor.Transition $r2, $r3, $r4, $r5;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper mMANativeHelper>;

        virtualinvoke $r1.<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)>(1);

        r0.<android.media.videoeditor.MediaVideoItem: boolean mMuted> = z0;

        $r2 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        if $r2 == null goto label1;

        $r5 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mBeginTransition>;

        virtualinvoke $r5.<android.media.videoeditor.Transition: void invalidate()>();

     label1:
        $r3 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        if $r3 == null goto label2;

        $r4 = r0.<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.Transition mEndTransition>;

        virtualinvoke $r4.<android.media.videoeditor.Transition: void invalidate()>();

     label2:
        return;
    }

    public void setVolume(int)
    {
        android.media.videoeditor.MediaVideoItem r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: android.media.videoeditor.MediaVideoItem;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 100 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid volume");

        throw $r1;

     label2:
        r0.<android.media.videoeditor.MediaVideoItem: int mVolumePercentage> = i0;

        return;
    }
}
