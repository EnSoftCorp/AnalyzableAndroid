final class java.nio.SelectionKeyImpl extends java.nio.channels.spi.AbstractSelectionKey
{
    private java.nio.channels.spi.AbstractSelectableChannel channel;
    private int interestOps;
    private int readyOps;
    private java.nio.SelectorImpl selector;

    public void <init>(java.nio.channels.spi.AbstractSelectableChannel, int, java.lang.Object, java.nio.SelectorImpl)
    {
        java.nio.SelectionKeyImpl r0;
        java.nio.channels.spi.AbstractSelectableChannel r1;
        int i0;
        java.lang.Object r2;
        java.nio.SelectorImpl r3;

        r0 := @this: java.nio.SelectionKeyImpl;

        r1 := @parameter0: java.nio.channels.spi.AbstractSelectableChannel;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.nio.SelectorImpl;

        specialinvoke r0.<java.nio.channels.spi.AbstractSelectionKey: void <init>()>();

        r0.<java.nio.SelectionKeyImpl: java.nio.channels.spi.AbstractSelectableChannel channel> = r1;

        r0.<java.nio.SelectionKeyImpl: int interestOps> = i0;

        r0.<java.nio.SelectionKeyImpl: java.nio.SelectorImpl selector> = r3;

        virtualinvoke r0.<java.nio.SelectionKeyImpl: java.lang.Object attach(java.lang.Object)>(r2);

        return;
    }

    private void checkValid()
    {
        java.nio.SelectionKeyImpl r0;
        boolean $z0;
        java.nio.channels.CancelledKeyException $r1;

        r0 := @this: java.nio.SelectionKeyImpl;

        $z0 = virtualinvoke r0.<java.nio.SelectionKeyImpl: boolean isValid()>();

        if $z0 != 0 goto label1;

        $r1 = new java.nio.channels.CancelledKeyException;

        specialinvoke $r1.<java.nio.channels.CancelledKeyException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public java.nio.channels.SelectableChannel channel()
    {
        java.nio.SelectionKeyImpl r0;
        java.nio.channels.spi.AbstractSelectableChannel $r1;

        r0 := @this: java.nio.SelectionKeyImpl;

        $r1 = r0.<java.nio.SelectionKeyImpl: java.nio.channels.spi.AbstractSelectableChannel channel>;

        return $r1;
    }

    public int interestOps()
    {
        java.nio.SelectionKeyImpl r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int i0;
        java.nio.SelectorImpl $r3;

        r0 := @this: java.nio.SelectionKeyImpl;

        specialinvoke r0.<java.nio.SelectionKeyImpl: void checkValid()>();

        $r3 = r0.<java.nio.SelectionKeyImpl: java.nio.SelectorImpl selector>;

        r1 = $r3.<java.nio.SelectorImpl: java.lang.Object keysLock>;

        entermonitor r1;

     label1:
        i0 = r0.<java.nio.SelectionKeyImpl: int interestOps>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.nio.channels.SelectionKey interestOps(int)
    {
        java.nio.SelectionKeyImpl r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        java.nio.channels.SelectableChannel $r3;
        java.nio.SelectorImpl $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: java.nio.SelectionKeyImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<java.nio.SelectionKeyImpl: void checkValid()>();

        $r3 = virtualinvoke r0.<java.nio.SelectionKeyImpl: java.nio.channels.SelectableChannel channel()>();

        $i1 = virtualinvoke $r3.<java.nio.channels.SelectableChannel: int validOps()>();

        $i2 = -1 ^ $i1;

        $i3 = i0 & $i2;

        if $i3 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r4 = r0.<java.nio.SelectionKeyImpl: java.nio.SelectorImpl selector>;

        r1 = $r4.<java.nio.SelectorImpl: java.lang.Object keysLock>;

        entermonitor r1;

     label2:
        r0.<java.nio.SelectionKeyImpl: int interestOps> = i0;

        exitmonitor r1;

     label3:
        return r0;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    int interestOpsNoCheck()
    {
        java.nio.SelectionKeyImpl r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int i0;
        java.nio.SelectorImpl $r3;

        r0 := @this: java.nio.SelectionKeyImpl;

        $r3 = r0.<java.nio.SelectionKeyImpl: java.nio.SelectorImpl selector>;

        r1 = $r3.<java.nio.SelectorImpl: java.lang.Object keysLock>;

        entermonitor r1;

     label1:
        i0 = r0.<java.nio.SelectionKeyImpl: int interestOps>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    boolean isConnected()
    {
        java.nio.SelectionKeyImpl r0;
        java.nio.channels.spi.AbstractSelectableChannel $r1, $r2;
        boolean $z0, $z1;
        java.nio.channels.SocketChannel $r3;

        r0 := @this: java.nio.SelectionKeyImpl;

        $r1 = r0.<java.nio.SelectionKeyImpl: java.nio.channels.spi.AbstractSelectableChannel channel>;

        $z0 = $r1 instanceof java.nio.channels.SocketChannel;

        if $z0 == 0 goto label1;

        $r2 = r0.<java.nio.SelectionKeyImpl: java.nio.channels.spi.AbstractSelectableChannel channel>;

        $r3 = (java.nio.channels.SocketChannel) $r2;

        $z1 = virtualinvoke $r3.<java.nio.channels.SocketChannel: boolean isConnected()>();

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public int readyOps()
    {
        java.nio.SelectionKeyImpl r0;
        int $i0;

        r0 := @this: java.nio.SelectionKeyImpl;

        specialinvoke r0.<java.nio.SelectionKeyImpl: void checkValid()>();

        $i0 = r0.<java.nio.SelectionKeyImpl: int readyOps>;

        return $i0;
    }

    public java.nio.channels.Selector selector()
    {
        java.nio.SelectionKeyImpl r0;
        java.nio.SelectorImpl $r1;

        r0 := @this: java.nio.SelectionKeyImpl;

        $r1 = r0.<java.nio.SelectionKeyImpl: java.nio.SelectorImpl selector>;

        return $r1;
    }

    void setReadyOps(int)
    {
        java.nio.SelectionKeyImpl r0;
        int i0, $i1, $i2;

        r0 := @this: java.nio.SelectionKeyImpl;

        i0 := @parameter0: int;

        $i1 = r0.<java.nio.SelectionKeyImpl: int interestOps>;

        $i2 = i0 & $i1;

        r0.<java.nio.SelectionKeyImpl: int readyOps> = $i2;

        return;
    }
}
