public class android.text.SpannableStringBuilder extends java.lang.Object implements java.lang.CharSequence, android.text.GetChars, android.text.Spannable, android.text.Editable, java.lang.Appendable, android.text.GraphicsOperations
{
    private static final int END_MASK;
    private static final int MARK;
    private static final android.text.InputFilter[] NO_FILTERS;
    private static final int PARAGRAPH;
    private static final int POINT;
    private static final int SPAN_END_AT_END;
    private static final int SPAN_END_AT_START;
    private static final int SPAN_START_AT_END;
    private static final int SPAN_START_AT_START;
    private static final int SPAN_START_END_MASK;
    private static final int START_MASK;
    private static final int START_SHIFT;
    private android.text.InputFilter[] mFilters;
    private int mGapLength;
    private int mGapStart;
    private int mSpanCount;
    private int mSpanCountBeforeAdd;
    private int[] mSpanEnds;
    private int[] mSpanFlags;
    private int[] mSpanStarts;
    private java.lang.Object[] mSpans;
    private char[] mText;

    static void <clinit>()
    {
        android.text.InputFilter[] $r0;

        <android.text.SpannableStringBuilder: int START_SHIFT> = 4;

        <android.text.SpannableStringBuilder: int START_MASK> = 240;

        <android.text.SpannableStringBuilder: int SPAN_START_END_MASK> = 61440;

        <android.text.SpannableStringBuilder: int SPAN_START_AT_START> = 4096;

        <android.text.SpannableStringBuilder: int SPAN_START_AT_END> = 8192;

        <android.text.SpannableStringBuilder: int SPAN_END_AT_START> = 16384;

        <android.text.SpannableStringBuilder: int SPAN_END_AT_END> = 32768;

        <android.text.SpannableStringBuilder: int POINT> = 2;

        <android.text.SpannableStringBuilder: int PARAGRAPH> = 3;

        <android.text.SpannableStringBuilder: int MARK> = 1;

        <android.text.SpannableStringBuilder: int END_MASK> = 15;

        $r0 = newarray (android.text.InputFilter)[0];

        <android.text.SpannableStringBuilder: android.text.InputFilter[] NO_FILTERS> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.SpannableStringBuilder r0;

        r0 := @this: android.text.SpannableStringBuilder;

        specialinvoke r0.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>("");

        return;
    }

    public void <init>(java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.CharSequence r1;
        int $i0;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.text.Spanned r2;
        java.lang.Object[] r3, $r8;
        android.text.InputFilter[] $r4;
        char[] $r5, $r6;
        int[] $r7, $r9, $r10;
        boolean $z0, $z1;
        java.lang.Object $r11, $r12, $r13, $r14, $r16;
        java.lang.StringIndexOutOfBoundsException $r15;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = <android.text.SpannableStringBuilder: android.text.InputFilter[] NO_FILTERS>;

        r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters> = $r4;

        i2 = i1 - i0;

        if i2 >= 0 goto label1;

        $r15 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r15.<java.lang.StringIndexOutOfBoundsException: void <init>()>();

        throw $r15;

     label1:
        $i9 = i2 + 1;

        i3 = staticinvoke <com.android.internal.util.ArrayUtils: int idealCharArraySize(int)>($i9);

        $r5 = newarray (char)[i3];

        r0.<android.text.SpannableStringBuilder: char[] mText> = $r5;

        r0.<android.text.SpannableStringBuilder: int mGapStart> = i2;

        $i10 = i3 - i2;

        r0.<android.text.SpannableStringBuilder: int mGapLength> = $i10;

        $r6 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i0, i1, $r6, 0);

        r0.<android.text.SpannableStringBuilder: int mSpanCount> = 0;

        i4 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>(0);

        $r8 = newarray (java.lang.Object)[i4];

        r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans> = $r8;

        $r7 = newarray (int)[i4];

        r0.<android.text.SpannableStringBuilder: int[] mSpanStarts> = $r7;

        $r10 = newarray (int)[i4];

        r0.<android.text.SpannableStringBuilder: int[] mSpanEnds> = $r10;

        $r9 = newarray (int)[i4];

        r0.<android.text.SpannableStringBuilder: int[] mSpanFlags> = $r9;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label9;

        r2 = (android.text.Spanned) r1;

        r3 = interfaceinvoke r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "java/lang/Object");

        i5 = 0;

     label2:
        $i11 = lengthof r3;

        if i5 >= $i11 goto label9;

        $r11 = r3[i5];

        $z1 = $r11 instanceof android.text.NoCopySpan;

        if $z1 == 0 goto label4;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        $r12 = r3[i5];

        $i12 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r12);

        i6 = $i12 - i0;

        $r13 = r3[i5];

        $i14 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r13);

        i7 = $i14 - i0;

        $r14 = r3[i5];

        i8 = interfaceinvoke r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r14);

        if i6 >= 0 goto label5;

        i6 = 0;

     label5:
        $i13 = i1 - i0;

        if i6 <= $i13 goto label6;

        i6 = i1 - i0;

     label6:
        if i7 >= 0 goto label7;

        i7 = 0;

     label7:
        $i15 = i1 - i0;

        if i7 <= $i15 goto label8;

        i7 = i1 - i0;

     label8:
        $r16 = r3[i5];

        specialinvoke r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(0, $r16, i6, i7, i8);

        goto label3;

     label9:
        return;
    }

    private void change(int, int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i21, i22, i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i76, $i77, $i78, $i79, $i80, $i82;
        java.lang.CharSequence r1;
        boolean z0, z1, $z2;
        android.text.Spanned r2;
        java.lang.Object[] r3, $r32;
        char c20, $c75, $c81;
        int[] r4, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r31;
        char[] $r5, $r11, $r27;
        java.lang.Object $r6, $r7, $r8, $r9, $r10, $r30;
        java.lang.Exception $r20;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 = i1 - i0;

        i5 = i3 - i2;

        i6 = i5 - i4;

        $i27 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        i7 = -1 + $i27;

     label01:
        if i7 < 0 goto label16;

        $r26 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        i19 = $r26[i7];

        $i74 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i19 <= $i74 goto label02;

        $i79 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i19 = i19 - $i79;

     label02:
        $r29 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        i18 = $r29[i7];

        $i73 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i18 <= $i73 goto label03;

        $i80 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i18 = i18 - $i80;

     label03:
        $r28 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i71 = $r28[i7];

        $i72 = 51 & $i71;

        if $i72 != 51 goto label09;

        i22 = i19;

        i24 = i18;

        i23 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i19 <= i0 goto label05;

        if i19 > i1 goto label05;

        i19 = i1;

     label04:
        if i19 >= i23 goto label05;

        if i19 <= i1 goto label12;

        $i82 = i19 - 1;

        $c81 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i82);

        if $c81 != 10 goto label12;

     label05:
        if i18 <= i0 goto label07;

        if i18 > i1 goto label07;

        i18 = i1;

     label06:
        if i18 >= i23 goto label07;

        if i18 <= i1 goto label13;

        $i76 = i18 - 1;

        $c75 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i76);

        if $c75 != 10 goto label13;

     label07:
        if i19 != i22 goto label08;

        if i18 == i24 goto label09;

     label08:
        $r32 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r30 = $r32[i7];

        $r31 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i77 = $r31[i7];

        specialinvoke r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(0, $r30, i19, i18, $i77);

     label09:
        if i19 != i0 goto label14;

        c20 = 4096;

     label10:
        if i18 != i0 goto label15;

        c20 = 16384 | c20;

     label11:
        r4 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i70 = r4[i7];

        $i78 = c20 | $i70;

        r4[i7] = $i78;

        i7 = i7 + -1;

        goto label01;

     label12:
        i19 = i19 + 1;

        goto label04;

     label13:
        i18 = i18 + 1;

        goto label06;

     label14:
        i21 = i1 + i6;

        c20 = 0;

        if i19 != i21 goto label10;

        c20 = 8192;

        goto label10;

     label15:
        $i69 = i1 + i6;

        if i18 != $i69 goto label11;

        c20 = c20 | 32768;

        goto label11;

     label16:
        specialinvoke r0.<android.text.SpannableStringBuilder: void moveGapTo(int)>(i1);

        $i28 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        if i6 < $i28 goto label17;

        $r27 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i66 = lengthof $r27;

        $i65 = i6 + $i66;

        $i64 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i63 = $i65 - $i64;

        specialinvoke r0.<android.text.SpannableStringBuilder: void resizeFor(int)>($i63);

     label17:
        if i5 != 0 goto label21;

        z0 = 1;

     label18:
        if i4 <= 0 goto label23;

        i17 = 0;

     label19:
        i16 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        if i17 >= i16 goto label23;

        $r17 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i48 = $r17[i17];

        $i49 = 33 & $i48;

        if $i49 != 33 goto label22;

        $r18 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i55 = $r18[i17];

        if $i55 < i0 goto label22;

        $r22 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i52 = $r22[i17];

        $i56 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i57 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i53 = $i56 + $i57;

        if $i52 >= $i53 goto label22;

        $r21 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i54 = $r21[i17];

        if $i54 < i0 goto label22;

        $r25 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i58 = $r25[i17];

        $i62 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i60 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i61 = $i62 + $i60;

        if $i58 >= $i61 goto label22;

        if z0 != 0 goto label20;

        $r23 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i59 = $r23[i17];

        if $i59 > i0 goto label20;

        $r24 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i68 = $r24[i17];

        $i67 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i68 >= $i67 goto label22;

     label20:
        specialinvoke r0.<android.text.SpannableStringBuilder: void removeSpan(int)>(i17);

        goto label19;

     label21:
        z0 = 0;

        goto label18;

     label22:
        i17 = i17 + 1;

        goto label19;

     label23:
        $i25 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i26 = i6 + $i25;

        r0.<android.text.SpannableStringBuilder: int mGapStart> = $i26;

        $i30 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i31 = $i30 - i6;

        r0.<android.text.SpannableStringBuilder: int mGapLength> = $i31;

        $i29 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        if $i29 >= 1 goto label24;

        $r20 = new java.lang.Exception;

        specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>("mGapLength < 1");

        virtualinvoke $r20.<java.lang.Exception: void printStackTrace()>();

     label24:
        $r5 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i2, i3, $r5, i0);

        if i4 <= 0 goto label28;

        $i38 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i39 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i42 = $i38 + $i39;

        $r11 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i43 = lengthof $r11;

        if $i42 != $i43 goto label27;

        z1 = 1;

     label25:
        i13 = 0;

     label26:
        i12 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        if i13 >= i12 goto label28;

        $r12 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i41 = $r12[i13];

        $i46 = 240 & $i41;

        i15 = $i46 >> 4;

        $r16 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $r15 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i47 = $r15[i13];

        $i44 = specialinvoke r0.<android.text.SpannableStringBuilder: int updatedIntervalBound(int,int,int,int,boolean,boolean)>($i47, i0, i6, i15, z1, z0);

        $r16[i13] = $i44;

        $r13 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i45 = $r13[i13];

        i14 = 15 & $i45;

        $r19 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $r14 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i50 = $r14[i13];

        $i51 = specialinvoke r0.<android.text.SpannableStringBuilder: int updatedIntervalBound(int,int,int,int,boolean,boolean)>($i50, i0, i6, i14, z1, z0);

        $r19[i13] = $i51;

        i13 = i13 + 1;

        goto label26;

     label27:
        z1 = 0;

        goto label25;

     label28:
        $i32 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        r0.<android.text.SpannableStringBuilder: int mSpanCountBeforeAdd> = $i32;

        $z2 = r1 instanceof android.text.Spanned;

        if $z2 == 0 goto label33;

        r2 = (android.text.Spanned) r1;

        r3 = interfaceinvoke r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i2, i3, class "java/lang/Object");

        i8 = 0;

     label29:
        i9 = lengthof r3;

        if i8 >= i9 goto label33;

        $r6 = r3[i8];

        i10 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>($r6);

        $r8 = r3[i8];

        i11 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>($r8);

        if i10 >= i2 goto label30;

        i10 = i2;

     label30:
        if i11 <= i3 goto label31;

        i11 = i3;

     label31:
        $r7 = r3[i8];

        $i35 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>($r7);

        if $i35 >= 0 goto label32;

        $r10 = r3[i8];

        $i34 = i10 - i2;

        $i37 = i0 + $i34;

        $i33 = i11 - i2;

        $i36 = i0 + $i33;

        $r9 = r3[i8];

        $i40 = interfaceinvoke r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r9);

        specialinvoke r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(0, $r10, $i37, $i36, $i40);

     label32:
        i8 = i8 + 1;

        goto label29;

     label33:
        return;
    }

    private void checkRange(java.lang.String, int, int)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.String r1, $r6, $r10, $r14, $r19, $r22, $r26;
        int i0, i1, i2;
        java.lang.IndexOutOfBoundsException $r2, $r11, $r18;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9, $r12, $r13, $r15, $r16, $r17, $r20, $r21, $r23, $r24, $r25;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 >= i0 goto label1;

        $r18 = new java.lang.IndexOutOfBoundsException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = staticinvoke <android.text.SpannableStringBuilder: java.lang.String region(int,int)>(i0, i1);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has end before start");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r26);

        throw $r18;

     label1:
        i2 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i0 > i2 goto label2;

        if i1 <= i2 goto label3;

     label2:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = staticinvoke <android.text.SpannableStringBuilder: java.lang.String region(int,int)>(i0, i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ends beyond length ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r10);

        throw $r2;

     label3:
        if i0 < 0 goto label4;

        if i1 >= 0 goto label5;

     label4:
        $r11 = new java.lang.IndexOutOfBoundsException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = staticinvoke <android.text.SpannableStringBuilder: java.lang.String region(int,int)>(i0, i1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starts before 0");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r19);

        throw $r11;

     label5:
        return;
    }

    private static boolean hasNonExclusiveExclusiveSpanAt(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, i2, $i3;
        android.text.Spanned r1;
        java.lang.Object[] r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $z0 = r0 instanceof android.text.Spanned;

        if $z0 == 0 goto label3;

        r1 = (android.text.Spanned) r0;

        r2 = interfaceinvoke r1.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i0, class "java/lang/Object");

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r3 = r2[i2];

        $i3 = interfaceinvoke r1.<android.text.Spanned: int getSpanFlags(java.lang.Object)>($r3);

        if $i3 == 33 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    private void moveGapTo(int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        boolean z0;
        char[] $r1, $r2, $r9, $r10;
        int[] $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        $i8 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 != $i8 goto label01;

        return;

     label01:
        $i9 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i0 != $i9 goto label09;

        z0 = 1;

     label02:
        $i10 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 >= $i10 goto label10;

        $i26 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        i7 = $i26 - i0;

        $r10 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $r9 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i31 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i27 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i32 = $i31 + $i27;

        $i30 = $i32 - i7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, i0, $r9, $i30, i7);

     label03:
        i2 = 0;

     label04:
        $i16 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        if i2 >= $i16 goto label15;

        $r3 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        i3 = $r3[i2];

        $r4 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        i4 = $r4[i2];

        $i17 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i3 <= $i17 goto label05;

        $i29 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i3 = i3 - $i29;

     label05:
        if i3 <= i0 goto label11;

        $i28 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i3 = i3 + $i28;

     label06:
        $i18 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i4 <= $i18 goto label07;

        $i21 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i4 = i4 - $i21;

     label07:
        if i4 <= i0 goto label13;

        $i22 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i4 = i4 + $i22;

     label08:
        $r5 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $r5[i2] = i3;

        $r7 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $r7[i2] = i4;

        i2 = i2 + 1;

        goto label04;

     label09:
        z0 = 0;

        goto label02;

     label10:
        $i11 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        i1 = i0 - $i11;

        $r2 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i12 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i13 = i0 + $i12;

        $i15 = $i13 - i1;

        $r1 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i14 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i15, $r1, $i14, i1);

        goto label03;

     label11:
        if i3 != i0 goto label06;

        $r8 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i25 = $r8[i2];

        $i23 = 240 & $i25;

        i5 = $i23 >> 4;

        if i5 == 2 goto label12;

        if z0 == 0 goto label06;

        if i5 != 3 goto label06;

     label12:
        $i24 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i3 = i3 + $i24;

        goto label06;

     label13:
        if i4 != i0 goto label08;

        $r6 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i20 = $r6[i2];

        i6 = 15 & $i20;

        if i6 == 2 goto label14;

        if z0 == 0 goto label08;

        if i6 != 3 goto label08;

     label14:
        $i19 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i4 = i4 + $i19;

        goto label08;

     label15:
        r0.<android.text.SpannableStringBuilder: int mGapStart> = i0;

        return;
    }

    private static java.lang.String region(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private void removeSpan(int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.Object r1;
        java.lang.Object[] $r2, $r5, $r6, $r13;
        int[] $r3, $r4, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        $r2 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        r1 = $r2[i0];

        $r3 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        i1 = $r3[i0];

        $r4 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        i2 = $r4[i0];

        $i4 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 <= $i4 goto label1;

        $i16 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i1 = i1 - $i16;

     label1:
        $i5 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i2 <= $i5 goto label2;

        $i15 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i2 = i2 - $i15;

     label2:
        $i7 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i6 = i0 + 1;

        i3 = $i7 - $i6;

        $r6 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i8 = i0 + 1;

        $r5 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i8, $r5, i0, i3);

        $r9 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i9 = i0 + 1;

        $r7 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, $i9, $r7, i0, i3);

        $r10 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i10 = i0 + 1;

        $r8 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, $i10, $r8, i0, i3);

        $r12 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i11 = i0 + 1;

        $r11 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, $i11, $r11, i0, i3);

        $i12 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i14 = -1 + $i12;

        r0.<android.text.SpannableStringBuilder: int mSpanCount> = $i14;

        $r13 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i13 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r13[$i13] = null;

        specialinvoke r0.<android.text.SpannableStringBuilder: void sendSpanRemoved(java.lang.Object,int,int)>(r1, i1, i2);

        return;
    }

    private void resizeFor(int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        char[] r1, $r4, $r5, $r6;
        int[] r2, r3, $r7, $r8;
        java.lang.Exception $r9;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        $r4 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        i1 = lengthof $r4;

        $i6 = i0 + 1;

        i2 = staticinvoke <com.android.internal.util.ArrayUtils: int idealCharArraySize(int)>($i6);

        i3 = i2 - i1;

        if i3 != 0 goto label2;

     label1:
        return;

     label2:
        r1 = newarray (char)[i2];

        $r5 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i7 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r1, 0, $i7);

        $i10 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i8 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i9 = $i10 + $i8;

        i4 = i1 - $i9;

        $r6 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i11 = i1 - i4;

        $i12 = i2 - i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i11, r1, $i12, i4);

        r0.<android.text.SpannableStringBuilder: char[] mText> = r1;

        $i13 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i15 = i3 + $i13;

        r0.<android.text.SpannableStringBuilder: int mGapLength> = $i15;

        $i14 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        if $i14 >= 1 goto label3;

        $r9 = new java.lang.Exception;

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>("mGapLength < 1");

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label3:
        i5 = 0;

     label4:
        $i16 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        if i5 >= $i16 goto label1;

        $r7 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i17 = $r7[i5];

        $i18 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i17 <= $i18 goto label5;

        r3 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i24 = r3[i5];

        $i22 = i3 + $i24;

        r3[i5] = $i22;

     label5:
        $r8 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i21 = $r8[i5];

        $i19 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if $i21 <= $i19 goto label6;

        r2 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i20 = r2[i5];

        $i23 = i3 + $i20;

        r2[i5] = $i23;

     label6:
        i5 = i5 + 1;

        goto label4;
    }

    private void sendAfterTextChanged(android.text.TextWatcher[])
    {
        android.text.SpannableStringBuilder r0;
        android.text.TextWatcher[] r1;
        int i0, i1;
        android.text.TextWatcher $r2;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: android.text.TextWatcher[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1[i1];

        interfaceinvoke $r2.<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendBeforeTextChanged(android.text.TextWatcher[], int, int, int)
    {
        android.text.SpannableStringBuilder r0;
        android.text.TextWatcher[] r1;
        int i0, i1, i2, i3, i4;
        android.text.TextWatcher $r2;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: android.text.TextWatcher[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $r2 = r1[i4];

        interfaceinvoke $r2.<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>(r0, i0, i1, i2);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendSpanAdded(java.lang.Object, int, int)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.Object r1;
        int i0, i1, i2, i3;
        android.text.SpanWatcher[] r2;
        java.lang.Object[] $r3;
        android.text.SpanWatcher $r4;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "android/text/SpanWatcher");

        r2 = (android.text.SpanWatcher[]) $r3;

        i2 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r4 = r2[i3];

        interfaceinvoke $r4.<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>(r0, r1, i0, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendSpanChanged(java.lang.Object, int, int, int, int)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.Object r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        android.text.SpanWatcher[] r2;
        java.lang.Object[] $r3;
        android.text.SpanWatcher $r4;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i2);

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i3);

        $i8 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i8);

        $r3 = virtualinvoke r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>($i6, $i9, class "android/text/SpanWatcher");

        r2 = (android.text.SpanWatcher[]) $r3;

        i4 = lengthof r2;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $r4 = r2[i5];

        interfaceinvoke $r4.<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>(r0, r1, i0, i1, i2, i3);

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendSpanRemoved(java.lang.Object, int, int)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.Object r1;
        int i0, i1, i2, i3;
        android.text.SpanWatcher[] r2;
        java.lang.Object[] $r3;
        android.text.SpanWatcher $r4;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = virtualinvoke r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, i1, class "android/text/SpanWatcher");

        r2 = (android.text.SpanWatcher[]) $r3;

        i2 = lengthof r2;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $r4 = r2[i3];

        interfaceinvoke $r4.<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>(r0, r1, i0, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendTextChanged(android.text.TextWatcher[], int, int, int)
    {
        android.text.SpannableStringBuilder r0;
        android.text.TextWatcher[] r1;
        int i0, i1, i2, i3, i4;
        android.text.TextWatcher $r2;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: android.text.TextWatcher[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i3 goto label2;

        $r2 = r1[i4];

        interfaceinvoke $r2.<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>(r0, i0, i1, i2);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    private void sendToSpanWatchers(int, int, int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        boolean z0;
        int[] r1, $r2, $r3, $r6, $r7, $r9;
        java.lang.Object $r4, $r10;
        java.lang.Object[] $r5, $r8;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = 0;

     label01:
        $i16 = r0.<android.text.SpannableStringBuilder: int mSpanCountBeforeAdd>;

        if i3 >= $i16 goto label13;

        $r7 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        i7 = $r7[i3];

        $r6 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        i8 = $r6[i3];

        $i22 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i7 <= $i22 goto label02;

        $i28 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i7 = i7 - $i28;

     label02:
        $i21 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i8 <= $i21 goto label03;

        $i26 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i8 = i8 - $i26;

     label03:
        $r9 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        i9 = $r9[i3];

        i10 = i1 + i2;

        i11 = i7;

        if i7 <= i10 goto label07;

        z0 = 0;

        if i2 == 0 goto label04;

        i11 = i11 - i2;

        z0 = 1;

     label04:
        i12 = i8;

        if i8 <= i10 goto label10;

        if i2 == 0 goto label05;

        i12 = i12 - i2;

        z0 = 1;

     label05:
        if z0 == 0 goto label06;

        $r8 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r10 = $r8[i3];

        specialinvoke r0.<android.text.SpannableStringBuilder: void sendSpanChanged(java.lang.Object,int,int,int,int)>($r10, i11, i12, i7, i8);

     label06:
        r1 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i24 = r1[i3];

        $i23 = -61441 & $i24;

        r1[i3] = $i23;

        i3 = i3 + 1;

        goto label01;

     label07:
        z0 = 0;

        if i7 < i0 goto label04;

        if i7 != i0 goto label08;

        i13 = i9 & 4096;

        z0 = 0;

        if i13 == 4096 goto label04;

     label08:
        if i7 != i10 goto label09;

        i14 = i9 & 8192;

        z0 = 0;

        if i14 == 8192 goto label04;

     label09:
        z0 = 1;

        goto label04;

     label10:
        if i8 < i0 goto label05;

        if i8 != i0 goto label11;

        $i25 = i9 & 16384;

        if $i25 == 16384 goto label05;

     label11:
        if i8 != i10 goto label12;

        $i27 = i9 & 32768;

        if $i27 == 32768 goto label05;

     label12:
        z0 = 1;

        goto label05;

     label13:
        i4 = r0.<android.text.SpannableStringBuilder: int mSpanCountBeforeAdd>;

     label14:
        $i15 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        if i4 >= $i15 goto label17;

        $r3 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        i5 = $r3[i4];

        $r2 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        i6 = $r2[i4];

        $i18 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i5 <= $i18 goto label15;

        $i19 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i5 = i5 - $i19;

     label15:
        $i17 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i6 <= $i17 goto label16;

        $i20 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i6 = i6 - $i20;

     label16:
        $r5 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r4 = $r5[i4];

        specialinvoke r0.<android.text.SpannableStringBuilder: void sendSpanAdded(java.lang.Object,int,int)>($r4, i5, i6);

        i4 = i4 + 1;

        goto label14;

     label17:
        return;
    }

    private void setSpan(boolean, java.lang.Object, int, int, int)
    {
        android.text.SpannableStringBuilder r0;
        boolean z0;
        java.lang.Object r1, $r14;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i47;
        java.lang.Object[] r2, r4, $r7, $r8, $r13;
        int[] r3, r5, r6, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        char $c46, $c48;
        java.lang.RuntimeException $r22, $r23;

        r0 := @this: android.text.SpannableStringBuilder;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.Object;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("setSpan", i0, i1);

        $i19 = i2 & 240;

        i3 = $i19 >> 4;

        if i3 != 3 goto label01;

        if i0 == 0 goto label01;

        i20 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i0 == i20 goto label01;

        $i45 = i0 - 1;

        $c46 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i45);

        if $c46 == 10 goto label01;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>("PARAGRAPH span must start at paragraph boundary");

        throw $r22;

     label01:
        i4 = i2 & 15;

        if i4 != 3 goto label02;

        if i1 == 0 goto label02;

        i18 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i1 == i18 goto label02;

        $i47 = i1 - 1;

        $c48 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i47);

        if $c48 == 10 goto label02;

        $r23 = new java.lang.RuntimeException;

        specialinvoke $r23.<java.lang.RuntimeException: void <init>(java.lang.String)>("PARAGRAPH span must end at paragraph boundary");

        throw $r23;

     label02:
        if i3 != 2 goto label04;

        if i4 != 1 goto label04;

        if i0 != i1 goto label04;

        if z0 == 0 goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SpannableStringBuilder", "SPAN_EXCLUSIVE_EXCLUSIVE spans cannot have a zero length");

     label03:
        return;

     label04:
        i5 = i0;

        i6 = i1;

        i7 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 <= i7 goto label10;

        $i40 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i0 = i0 + $i40;

     label05:
        i9 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 <= i9 goto label12;

        $i44 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i1 = i1 + $i44;

     label06:
        i11 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        i13 = 0;

     label07:
        if i13 >= i11 goto label15;

        $r14 = r2[i13];

        if $r14 != r1 goto label14;

        $r18 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        i15 = $r18[i13];

        $r17 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        i14 = $r17[i13];

        $i37 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i15 <= $i37 goto label08;

        $i42 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i15 = i15 - $i42;

     label08:
        $i36 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i14 <= $i36 goto label09;

        $i38 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i14 = i14 - $i38;

     label09:
        $r21 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $r21[i13] = i0;

        $r20 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $r20[i13] = i1;

        $r19 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $r19[i13] = i2;

        if z0 == 0 goto label03;

        specialinvoke r0.<android.text.SpannableStringBuilder: void sendSpanChanged(java.lang.Object,int,int,int,int)>(r1, i15, i14, i5, i6);

        return;

     label10:
        i8 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 != i8 goto label05;

        if i3 == 2 goto label11;

        if i3 != 3 goto label05;

        i16 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i0 != i16 goto label05;

     label11:
        $i39 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i0 = i0 + $i39;

        goto label05;

     label12:
        i10 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 != i10 goto label06;

        if i4 == 2 goto label13;

        if i4 != 3 goto label06;

        i17 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i1 != i17 goto label06;

     label13:
        $i43 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i1 = i1 + $i43;

        goto label06;

     label14:
        i13 = i13 + 1;

        goto label07;

     label15:
        $i21 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i24 = 1 + $i21;

        $r7 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i23 = lengthof $r7;

        if $i24 < $i23 goto label16;

        $i31 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i32 = 1 + $i31;

        i12 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i32);

        r4 = newarray (java.lang.Object)[i12];

        r3 = newarray (int)[i12];

        r6 = newarray (int)[i12];

        r5 = newarray (int)[i12];

        $r13 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i30 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r4, 0, $i30);

        $r12 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i34 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, r3, 0, $i34);

        $r16 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i33 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, r6, 0, $i33);

        $r15 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i35 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, r5, 0, $i35);

        r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans> = r4;

        r0.<android.text.SpannableStringBuilder: int[] mSpanStarts> = r3;

        r0.<android.text.SpannableStringBuilder: int[] mSpanEnds> = r6;

        r0.<android.text.SpannableStringBuilder: int[] mSpanFlags> = r5;

     label16:
        $r8 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $i22 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r8[$i22] = r1;

        $r10 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        $i26 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r10[$i26] = i0;

        $r9 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        $i25 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r9[$i25] = i1;

        $r11 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i29 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $r11[$i29] = i2;

        $i27 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i28 = 1 + $i27;

        r0.<android.text.SpannableStringBuilder: int mSpanCount> = $i28;

        if z0 == 0 goto label03;

        specialinvoke r0.<android.text.SpannableStringBuilder: void sendSpanAdded(java.lang.Object,int,int)>(r1, i5, i6);

        return;
    }

    private int updatedIntervalBound(int, int, int, int, boolean, boolean)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, z1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        if i0 < i1 goto label5;

        $i5 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i4 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i6 = $i5 + $i4;

        if i0 >= $i6 goto label5;

        if i3 != 2 goto label3;

        if z1 != 0 goto label1;

        if i0 <= i1 goto label5;

     label1:
        $i13 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i14 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i1 = $i13 + $i14;

     label2:
        return i1;

     label3:
        if i3 != 3 goto label4;

        if z0 == 0 goto label5;

        $i11 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i10 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i12 = $i11 + $i10;

        return $i12;

     label4:
        if z1 != 0 goto label2;

        $i7 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i8 = $i7 - i2;

        if i0 < $i8 goto label2;

        $i9 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        return $i9;

     label5:
        return i0;
    }

    public static android.text.SpannableStringBuilder valueOf(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean $z0;
        android.text.SpannableStringBuilder $r1, $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $z0 = r0 instanceof android.text.SpannableStringBuilder;

        if $z0 == 0 goto label1;

        $r2 = (android.text.SpannableStringBuilder) r0;

        return $r2;

     label1:
        $r1 = new android.text.SpannableStringBuilder;

        specialinvoke $r1.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r0);

        return $r1;
    }

    public volatile android.text.Editable append(char)
    {
        android.text.SpannableStringBuilder r0, $r1;
        char c0;

        r0 := @this: android.text.SpannableStringBuilder;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(c0);

        return $r1;
    }

    public volatile android.text.Editable append(java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile android.text.Editable append(java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public android.text.SpannableStringBuilder append(char)
    {
        android.text.SpannableStringBuilder r0, $r2;
        char c0;
        java.lang.String $r1;

        r0 := @this: android.text.SpannableStringBuilder;

        c0 := @parameter0: char;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r1);

        return $r2;
    }

    public android.text.SpannableStringBuilder append(java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder r0, $r2;
        java.lang.CharSequence r1;
        int i0, $i1;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(i0, i0, r1, 0, $i1);

        return $r2;
    }

    public android.text.SpannableStringBuilder append(java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(i2, i2, r1, i0, i1);

        return $r2;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        android.text.SpannableStringBuilder r0, $r1;
        char c0;

        r0 := @this: android.text.SpannableStringBuilder;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>(c0);

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        android.text.SpannableStringBuilder r0, $r2;
        java.lang.CharSequence r1;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>(r1);

        return $r2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        android.text.SpannableStringBuilder r0, $r2;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>(r1, i0, i1);

        return $r2;
    }

    public char charAt(int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, $i2, $i4, $i5;
        char[] $r1, $r2;
        char $c3, $c6;
        java.lang.IndexOutOfBoundsException $r3, $r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r15;
        java.lang.String $r8, $r14;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        if i0 >= 0 goto label1;

        $r11 = new java.lang.IndexOutOfBoundsException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("charAt: ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r14);

        throw $r11;

     label1:
        if i0 < i1 goto label2;

        $r3 = new java.lang.IndexOutOfBoundsException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("charAt: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= length ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $i2 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 < $i2 goto label3;

        $r2 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i4 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i5 = i0 + $i4;

        $c6 = $r2[$i5];

        return $c6;

     label3:
        $r1 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $c3 = $r1[i0];

        return $c3;
    }

    public void clear()
    {
        android.text.SpannableStringBuilder r0;
        int $i0;

        r0 := @this: android.text.SpannableStringBuilder;

        $i0 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(0, $i0, "", 0, 0);

        return;
    }

    public void clearSpans()
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Object r1;
        java.lang.Object[] $r2, $r5;
        int[] $r3, $r4;

        r0 := @this: android.text.SpannableStringBuilder;

        $i3 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        i0 = -1 + $i3;

     label1:
        if i0 < 0 goto label4;

        $r2 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        r1 = $r2[i0];

        $r3 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        i1 = $r3[i0];

        $r4 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        i2 = $r4[i0];

        $i4 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 <= $i4 goto label2;

        $i7 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i1 = i1 - $i7;

     label2:
        $i5 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i2 <= $i5 goto label3;

        $i6 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i2 = i2 - $i6;

     label3:
        r0.<android.text.SpannableStringBuilder: int mSpanCount> = i0;

        $r5 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r5[i0] = null;

        specialinvoke r0.<android.text.SpannableStringBuilder: void sendSpanRemoved(java.lang.Object,int,int)>(r1, i1, i2);

        i0 = i0 + -1;

        goto label1;

     label4:
        return;
    }

    public volatile android.text.Editable delete(int, int)
    {
        android.text.SpannableStringBuilder r0, $r1;
        int i0, i1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, i1);

        return $r1;
    }

    public android.text.SpannableStringBuilder delete(int, int)
    {
        android.text.SpannableStringBuilder r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(i0, i1, "", 0, 0);

        $i2 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i3 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        $i4 = 2 * $i3;

        if $i2 <= $i4 goto label1;

        $i5 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        specialinvoke r0.<android.text.SpannableStringBuilder: void resizeFor(int)>($i5);

     label1:
        return r1;
    }

    public void drawText(android.graphics.Canvas, int, int, float, float, android.graphics.Paint)
    {
        android.text.SpannableStringBuilder r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float f0, f1;
        android.graphics.Paint r2;
        char[] r3, $r4, $r5;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r2 := @parameter5: android.graphics.Paint;

        specialinvoke r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("drawText", i0, i1);

        $i2 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 > $i2 goto label1;

        $r5 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i9 = i1 - i0;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>($r5, i0, $i9, f0, f1, r2);

        return;

     label1:
        $i3 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 < $i3 goto label2;

        $r4 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i6 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i8 = i0 + $i6;

        $i7 = i1 - i0;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>($r4, $i8, $i7, f0, f1, r2);

        return;

     label2:
        $i4 = i1 - i0;

        r3 = staticinvoke <android.text.TextUtils: char[] obtain(int)>($i4);

        virtualinvoke r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>(i0, i1, r3, 0);

        $i5 = i1 - i0;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>(r3, 0, $i5, f0, f1, r2);

        staticinvoke <android.text.TextUtils: void recycle(char[])>(r3);

        return;
    }

    public void drawTextRun(android.graphics.Canvas, int, int, int, int, float, float, int, android.graphics.Paint)
    {
        android.text.SpannableStringBuilder r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float f0, f1;
        android.graphics.Paint r2;
        char[] r3, $r4, $r5;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: android.graphics.Canvas;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        i4 := @parameter7: int;

        r2 := @parameter8: android.graphics.Paint;

        specialinvoke r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("drawTextRun", i0, i1);

        i5 = i3 - i2;

        i6 = i1 - i0;

        $i7 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i3 > $i7 goto label1;

        $r5 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        virtualinvoke r1.<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)>($r5, i0, i6, i2, i5, f0, f1, i4, r2);

        return;

     label1:
        $i8 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i2 < $i8 goto label2;

        $r4 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i9 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i13 = i0 + $i9;

        $i12 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i11 = i2 + $i12;

        virtualinvoke r1.<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)>($r4, $i13, i6, $i11, i5, f0, f1, i4, r2);

        return;

     label2:
        r3 = staticinvoke <android.text.TextUtils: char[] obtain(int)>(i5);

        virtualinvoke r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>(i2, i3, r3, 0);

        $i10 = i0 - i2;

        virtualinvoke r1.<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)>(r3, $i10, i6, 0, i5, f0, f1, i4, r2);

        staticinvoke <android.text.TextUtils: void recycle(char[])>(r3);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.Object r1, r4, r5;
        android.text.Spanned r2;
        java.lang.Object[] r3, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        boolean $z0, $z1, $z2;
        java.lang.String $r6, $r7;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.text.Spanned;

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke r0.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        r2 = (android.text.Spanned) r1;

        $i1 = interfaceinvoke r2.<android.text.Spanned: int length()>();

        r3 = interfaceinvoke r2.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i1, class "java/lang/Object");

        $i3 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        $i2 = lengthof r3;

        if $i3 != $i2 goto label2;

        i0 = 0;

     label1:
        $i4 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        if i0 >= $i4 goto label5;

        $r8 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        r4 = $r8[i0];

        r5 = r3[i0];

        if r4 != r0 goto label3;

        if r2 != r5 goto label2;

        $i10 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>(r4);

        $i13 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r5);

        if $i10 != $i13 goto label2;

        $i12 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>(r4);

        $i15 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r5);

        if $i12 != $i15 goto label2;

        $i14 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>(r4);

        $i16 = interfaceinvoke r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r5);

        if $i14 == $i16 goto label4;

     label2:
        return 0;

     label3:
        $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z2 == 0 goto label2;

        $i5 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>(r4);

        $i7 = interfaceinvoke r2.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r5);

        if $i5 != $i7 goto label2;

        $i6 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>(r4);

        $i9 = interfaceinvoke r2.<android.text.Spanned: int getSpanEnd(java.lang.Object)>(r5);

        if $i6 != $i9 goto label2;

        $i8 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>(r4);

        $i11 = interfaceinvoke r2.<android.text.Spanned: int getSpanFlags(java.lang.Object)>(r5);

        if $i8 != $i11 goto label2;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        return 1;
    }

    public void getChars(int, int, char[], int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        char[] r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        specialinvoke r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("getChars", i0, i1);

        $i3 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 > $i3 goto label1;

        $r5 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i18 = i1 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, i0, r1, i2, $i18);

        return;

     label1:
        $i4 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 < $i4 goto label2;

        $r4 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i15 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i16 = i0 + $i15;

        $i17 = i1 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i16, r1, i2, $i17);

        return;

     label2:
        $r2 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i5 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i6 = $i5 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i0, r1, i2, $i6);

        $r3 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i8 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i7 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i13 = $i8 + $i7;

        $i9 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i10 = $i9 - i0;

        $i14 = i2 + $i10;

        $i11 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        $i12 = i1 - $i11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i13, r1, $i14, $i12);

        return;
    }

    public android.text.InputFilter[] getFilters()
    {
        android.text.SpannableStringBuilder r0;
        android.text.InputFilter[] $r1;

        r0 := @this: android.text.SpannableStringBuilder;

        $r1 = r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters>;

        return $r1;
    }

    public int getSpanEnd(java.lang.Object)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.Object r1, $r3;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object[] r2;
        int[] $r4;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label4;

        $r3 = r2[i1];

        if $r3 != r1 goto label3;

        $r4 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        i2 = $r4[i1];

        $i3 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i2 <= $i3 goto label2;

        $i4 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i2 = i2 - $i4;

     label2:
        return i2;

     label3:
        i1 = i1 + -1;

        goto label1;

     label4:
        return -1;
    }

    public int getSpanFlags(java.lang.Object)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.Object r1, $r3;
        int i0, i1, $i2;
        java.lang.Object[] r2;
        int[] $r4;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r2[i1];

        if $r3 != r1 goto label2;

        $r4 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        $i2 = $r4[i1];

        return $i2;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    public int getSpanStart(java.lang.Object)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.Object r1, $r3;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object[] r2;
        int[] $r4;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.Object;

        i0 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label4;

        $r3 = r2[i1];

        if $r3 != r1 goto label3;

        $r4 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        i2 = $r4[i1];

        $i3 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i2 <= $i3 goto label2;

        $i4 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        i2 = i2 - $i4;

     label2:
        return i2;

     label3:
        i1 = i1 + -1;

        goto label1;

     label4:
        return -1;
    }

    public java.lang.Object[] getSpans(int, int, java.lang.Class)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.Class r1;
        java.lang.Object[] r2, r6, r8, r9, $r12, $r13, $r14, $r19;
        int[] r3, r4, r5;
        java.lang.Object r7, $r10, $r11, $r15, $r16, $r17, $r18, $r20;
        boolean $z0;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        if r1 != null goto label02;

        r6 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(r1);

     label01:
        return r6;

     label02:
        i2 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        r4 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        r5 = r0.<android.text.SpannableStringBuilder: int[] mSpanFlags>;

        i3 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        i4 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        r6 = null;

        r7 = null;

        i5 = 0;

        i6 = 0;

     label03:
        if i5 >= i2 goto label18;

        i7 = r3[i5];

        if i7 <= i3 goto label04;

        i7 = i7 - i4;

     label04:
        if i7 <= i1 goto label06;

        i11 = i6;

     label05:
        i5 = i5 + 1;

        i6 = i11;

        goto label03;

     label06:
        i9 = r4[i5];

        if i9 <= i3 goto label07;

        i9 = i9 - i4;

     label07:
        if i9 >= i0 goto label08;

        i11 = i6;

        goto label05;

     label08:
        if i7 == i9 goto label10;

        if i0 == i1 goto label10;

        if i7 != i1 goto label09;

        i11 = i6;

        goto label05;

     label09:
        if i9 != i0 goto label10;

        i11 = i6;

        goto label05;

     label10:
        $r15 = r2[i5];

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r15);

        if $z0 != 0 goto label11;

        i11 = i6;

        goto label05;

     label11:
        if i6 != 0 goto label12;

        r7 = r2[i5];

        i11 = i6 + 1;

        goto label05;

     label12:
        if i6 != 1 goto label13;

        $i17 = i2 - i5;

        $i19 = 1 + $i17;

        $r20 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, $i19);

        $r19 = (java.lang.Object[]) $r20;

        r6 = (java.lang.Object[]) $r19;

        r6[0] = r7;

     label13:
        $i13 = r5[i5];

        i8 = 16711680 & $i13;

        if i8 == 0 goto label17;

        i10 = 0;

     label14:
        if i10 >= i6 goto label15;

        $r18 = r6[i10];

        $i18 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>($r18);

        $i16 = 16711680 & $i18;

        if i8 <= $i16 goto label16;

     label15:
        $i15 = i10 + 1;

        $i14 = i6 - i10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, i10, r6, $i15, $i14);

        $r17 = r2[i5];

        r6[i10] = $r17;

        i11 = i6 + 1;

        goto label05;

     label16:
        i10 = i10 + 1;

        goto label14;

     label17:
        i11 = i6 + 1;

        $r16 = r2[i5];

        r6[i6] = $r16;

        goto label05;

     label18:
        if i6 != 0 goto label19;

        $r13 = staticinvoke <com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>(r1);

        return $r13;

     label19:
        if i6 != 1 goto label20;

        $r11 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, 1);

        $r14 = (java.lang.Object[]) $r11;

        r9 = (java.lang.Object[]) $r14;

        r9[0] = r7;

        return r9;

     label20:
        $i12 = lengthof r6;

        if i6 == $i12 goto label01;

        $r10 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, i6);

        $r12 = (java.lang.Object[]) $r10;

        r8 = (java.lang.Object[]) $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r6, 0, r8, 0, i6);

        return r8;
    }

    public float getTextRunAdvances(int, int, int, int, int, float[], int, android.graphics.Paint)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        float[] r1;
        android.graphics.Paint r2;
        char[] r3, $r4, $r5;
        float f0, $f1, $f2;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: float[];

        i5 := @parameter6: int;

        r2 := @parameter7: android.graphics.Paint;

        i6 = i3 - i2;

        i7 = i1 - i0;

        $i8 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 > $i8 goto label1;

        $r5 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $f2 = virtualinvoke r2.<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)>($r5, i0, i7, i2, i6, i4, r1, i5);

        return $f2;

     label1:
        $i9 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 < $i9 goto label2;

        $r4 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i12 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i13 = i0 + $i12;

        $i11 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i14 = i2 + $i11;

        $f1 = virtualinvoke r2.<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)>($r4, $i13, i7, $i14, i6, i4, r1, i5);

        return $f1;

     label2:
        r3 = staticinvoke <android.text.TextUtils: char[] obtain(int)>(i6);

        virtualinvoke r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>(i2, i3, r3, 0);

        $i10 = i0 - i2;

        f0 = virtualinvoke r2.<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)>(r3, $i10, i7, 0, i6, i4, r1, i5);

        staticinvoke <android.text.TextUtils: void recycle(char[])>(r3);

        return f0;
    }

    public int getTextRunCursor(int, int, int, int, int, android.graphics.Paint)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.graphics.Paint r1;
        char[] r2, $r3, $r4;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: android.graphics.Paint;

        i5 = i1 - i0;

        $i7 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 > $i7 goto label1;

        $r4 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i18 = virtualinvoke r1.<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)>($r4, i0, i5, i2, i3, i4);

        return $i18;

     label1:
        $i8 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 < $i8 goto label2;

        $r3 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i11 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i14 = i0 + $i11;

        $i13 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i12 = i3 + $i13;

        $i16 = virtualinvoke r1.<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)>($r3, $i14, i5, i2, $i12, i4);

        $i15 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i17 = $i16 - $i15;

        return $i17;

     label2:
        r2 = staticinvoke <android.text.TextUtils: char[] obtain(int)>(i5);

        virtualinvoke r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>(i0, i1, r2, 0);

        $i9 = i3 - i0;

        $i10 = virtualinvoke r1.<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)>(r2, 0, i5, i2, $i9, i4);

        i6 = i0 + $i10;

        staticinvoke <android.text.TextUtils: void recycle(char[])>(r2);

        return i6;
    }

    public int getTextWidths(int, int, float[], android.graphics.Paint)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        float[] r1;
        android.graphics.Paint r2;
        char[] r3, $r4, $r5;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        r2 := @parameter3: android.graphics.Paint;

        specialinvoke r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("getTextWidths", i0, i1);

        $i3 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 > $i3 goto label1;

        $r5 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i11 = i1 - i0;

        $i12 = virtualinvoke r2.<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>($r5, i0, $i11, r1);

        return $i12;

     label1:
        $i4 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 < $i4 goto label2;

        $r4 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i7 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i9 = i0 + $i7;

        $i8 = i1 - i0;

        $i10 = virtualinvoke r2.<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>($r4, $i9, $i8, r1);

        return $i10;

     label2:
        $i5 = i1 - i0;

        r3 = staticinvoke <android.text.TextUtils: char[] obtain(int)>($i5);

        virtualinvoke r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>(i0, i1, r3, 0);

        $i6 = i1 - i0;

        i2 = virtualinvoke r2.<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>(r3, 0, $i6, r1);

        staticinvoke <android.text.TextUtils: void recycle(char[])>(r3);

        return i2;
    }

    public int hashCode()
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.Object r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;

        r0 := @this: android.text.SpannableStringBuilder;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $i4 = 31 * $i2;

        $i3 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        i0 = $i4 + $i3;

        i1 = 0;

     label1:
        $i5 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        if i1 >= $i5 goto label3;

        $r3 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        r1 = $r3[i1];

        if r1 == r0 goto label2;

        $i13 = i0 * 31;

        $i15 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i0 = $i13 + $i15;

     label2:
        $i6 = i0 * 31;

        $i7 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>(r1);

        $i8 = $i6 + $i7;

        $i10 = 31 * $i8;

        $i9 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>(r1);

        $i12 = $i10 + $i9;

        $i11 = 31 * $i12;

        $i14 = virtualinvoke r0.<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>(r1);

        i0 = $i11 + $i14;

        i1 = i1 + 1;

        goto label1;

     label3:
        return i0;
    }

    public volatile android.text.Editable insert(int, java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder r0, $r2;
        int i0;
        java.lang.CharSequence r1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>(i0, r1);

        return $r2;
    }

    public volatile android.text.Editable insert(int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder r0, $r2;
        int i0, i1, i2;
        java.lang.CharSequence r1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>(i0, r1, i1, i2);

        return $r2;
    }

    public android.text.SpannableStringBuilder insert(int, java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder r0, $r2;
        int i0, $i1;
        java.lang.CharSequence r1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(i0, i0, r1, 0, $i1);

        return $r2;
    }

    public android.text.SpannableStringBuilder insert(int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder r0, $r2;
        int i0, i1, i2;
        java.lang.CharSequence r1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(i0, i0, r1, i1, i2);

        return $r2;
    }

    public int length()
    {
        android.text.SpannableStringBuilder r0;
        char[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: android.text.SpannableStringBuilder;

        $r1 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i1 = lengthof $r1;

        $i0 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public float measureText(int, int, android.graphics.Paint)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Paint r1;
        char[] r2, $r3, $r4;
        float f0, $f1, $f2;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Paint;

        specialinvoke r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("measureText", i0, i1);

        $i2 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i1 > $i2 goto label1;

        $r4 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i9 = i1 - i0;

        $f2 = virtualinvoke r1.<android.graphics.Paint: float measureText(char[],int,int)>($r4, i0, $i9);

        return $f2;

     label1:
        $i3 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        if i0 < $i3 goto label2;

        $r3 = r0.<android.text.SpannableStringBuilder: char[] mText>;

        $i6 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        $i8 = i0 + $i6;

        $i7 = i1 - i0;

        $f1 = virtualinvoke r1.<android.graphics.Paint: float measureText(char[],int,int)>($r3, $i8, $i7);

        return $f1;

     label2:
        $i4 = i1 - i0;

        r2 = staticinvoke <android.text.TextUtils: char[] obtain(int)>($i4);

        virtualinvoke r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>(i0, i1, r2, 0);

        $i5 = i1 - i0;

        f0 = virtualinvoke r1.<android.graphics.Paint: float measureText(char[],int,int)>(r2, 0, $i5);

        staticinvoke <android.text.TextUtils: void recycle(char[])>(r2);

        return f0;
    }

    public int nextSpanTransition(int, int, java.lang.Class)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        java.lang.Class r1;
        java.lang.Object[] r2;
        int[] r3, r4;
        java.lang.Object $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Class;

        i2 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        r2 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        r3 = r0.<android.text.SpannableStringBuilder: int[] mSpanStarts>;

        r4 = r0.<android.text.SpannableStringBuilder: int[] mSpanEnds>;

        i3 = r0.<android.text.SpannableStringBuilder: int mGapStart>;

        i4 = r0.<android.text.SpannableStringBuilder: int mGapLength>;

        if r1 != null goto label1;

        r1 = class "java/lang/Object";

     label1:
        i5 = 0;

     label2:
        if i5 >= i2 goto label7;

        i6 = r3[i5];

        i7 = r4[i5];

        if i6 <= i3 goto label3;

        i6 = i6 - i4;

     label3:
        if i7 <= i3 goto label4;

        i7 = i7 - i4;

     label4:
        if i6 <= i0 goto label5;

        if i6 >= i1 goto label5;

        $r6 = r2[i5];

        $z1 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r6);

        if $z1 == 0 goto label5;

        i1 = i6;

     label5:
        if i7 <= i0 goto label6;

        if i7 >= i1 goto label6;

        $r5 = r2[i5];

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        i1 = i7;

     label6:
        i5 = i5 + 1;

        goto label2;

     label7:
        return i1;
    }

    public void removeSpan(java.lang.Object)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.Object r1, $r3;
        int i0, $i1;
        java.lang.Object[] $r2;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<android.text.SpannableStringBuilder: int mSpanCount>;

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r2 = r0.<android.text.SpannableStringBuilder: java.lang.Object[] mSpans>;

        $r3 = $r2[i0];

        if $r3 != r1 goto label3;

        specialinvoke r0.<android.text.SpannableStringBuilder: void removeSpan(int)>(i0);

     label2:
        return;

     label3:
        i0 = i0 + -1;

        goto label1;
    }

    public volatile android.text.Editable replace(int, int, java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder r0, $r2;
        int i0, i1;
        java.lang.CharSequence r1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>(i0, i1, r1);

        return $r2;
    }

    public volatile android.text.Editable replace(int, int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder r0, $r2;
        int i0, i1, i2, i3;
        java.lang.CharSequence r1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(i0, i1, r1, i2, i3);

        return $r2;
    }

    public android.text.SpannableStringBuilder replace(int, int, java.lang.CharSequence)
    {
        android.text.SpannableStringBuilder r0, $r2;
        int i0, i1, $i2;
        java.lang.CharSequence r1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r2 = virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>(i0, i1, r1, 0, $i2);

        return $r2;
    }

    public android.text.SpannableStringBuilder replace(int, int, java.lang.CharSequence, int, int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.CharSequence r1, r4;
        android.text.TextWatcher[] r2;
        boolean z0, $z1;
        android.text.InputFilter[] $r3, $r8;
        java.lang.Object[] $r5;
        java.lang.Object $r6, $r7;
        android.text.InputFilter $r9;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.CharSequence;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.text.SpannableStringBuilder: void checkRange(java.lang.String,int,int)>("replace", i0, i1);

        $r3 = r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters>;

        i4 = lengthof $r3;

        i5 = 0;

     label1:
        if i5 >= i4 goto label3;

        $r8 = r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters>;

        $r9 = $r8[i5];

        r4 = interfaceinvoke $r9.<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>(r1, i2, i3, r0, i0, i1);

        if r4 == null goto label2;

        r1 = r4;

        i2 = 0;

        i3 = interfaceinvoke r4.<java.lang.CharSequence: int length()>();

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        i6 = i1 - i0;

        i7 = i3 - i2;

        if i6 != 0 goto label4;

        if i7 != 0 goto label4;

        $z1 = staticinvoke <android.text.SpannableStringBuilder: boolean hasNonExclusiveExclusiveSpanAt(java.lang.CharSequence,int)>(r1, i2);

        if $z1 != 0 goto label4;

        return r0;

     label4:
        $i12 = i0 + i6;

        $r5 = virtualinvoke r0.<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i0, $i12, class "android/text/TextWatcher");

        r2 = (android.text.TextWatcher[]) $r5;

        specialinvoke r0.<android.text.SpannableStringBuilder: void sendBeforeTextChanged(android.text.TextWatcher[],int,int,int)>(r2, i0, i6, i7);

        if i6 == 0 goto label9;

        if i7 == 0 goto label9;

        z0 = 1;

     label5:
        i8 = 0;

        i9 = 0;

        if z0 == 0 goto label6;

        i8 = staticinvoke <android.text.Selection: int getSelectionStart(java.lang.CharSequence)>(r0);

        i9 = staticinvoke <android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>(r0);

     label6:
        specialinvoke r0.<android.text.SpannableStringBuilder: void change(int,int,java.lang.CharSequence,int,int)>(i0, i1, r1, i2, i3);

        if z0 == 0 goto label8;

        if i8 <= i0 goto label7;

        if i8 >= i1 goto label7;

        $i17 = i8 - i0;

        $i19 = i7 * $i17;

        $i18 = $i19 / i6;

        i11 = i0 + $i18;

        $r7 = <android.text.Selection: java.lang.Object SELECTION_START>;

        specialinvoke r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(0, $r7, i11, i11, 34);

     label7:
        if i9 <= i0 goto label8;

        if i9 >= i1 goto label8;

        $i13 = i9 - i0;

        $i16 = i7 * $i13;

        $i15 = $i16 / i6;

        i10 = i0 + $i15;

        $r6 = <android.text.Selection: java.lang.Object SELECTION_END>;

        specialinvoke r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(0, $r6, i10, i10, 34);

     label8:
        specialinvoke r0.<android.text.SpannableStringBuilder: void sendTextChanged(android.text.TextWatcher[],int,int,int)>(r2, i0, i6, i7);

        specialinvoke r0.<android.text.SpannableStringBuilder: void sendAfterTextChanged(android.text.TextWatcher[])>(r2);

        $i14 = i7 - i6;

        specialinvoke r0.<android.text.SpannableStringBuilder: void sendToSpanWatchers(int,int,int)>(i0, i1, $i14);

        return r0;

     label9:
        z0 = 0;

        goto label5;
    }

    public void setFilters(android.text.InputFilter[])
    {
        android.text.SpannableStringBuilder r0;
        android.text.InputFilter[] r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: android.text.InputFilter[];

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r0.<android.text.SpannableStringBuilder: android.text.InputFilter[] mFilters> = r1;

        return;
    }

    public void setSpan(java.lang.Object, int, int, int)
    {
        android.text.SpannableStringBuilder r0;
        java.lang.Object r1;
        int i0, i1, i2;

        r0 := @this: android.text.SpannableStringBuilder;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)>(1, r1, i0, i1, i2);

        return;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        android.text.SpannableStringBuilder r0, $r1;
        int i0, i1;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.text.SpannableStringBuilder;

        specialinvoke $r1.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>(r0, i0, i1);

        return $r1;
    }

    public java.lang.String substring(int, int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, $i2;
        char[] r1;
        java.lang.String $r2;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 - i0;

        r1 = newarray (char)[$i2];

        virtualinvoke r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>(i0, i1, r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        android.text.SpannableStringBuilder r0;
        int i0;
        char[] r1;
        java.lang.String $r2;

        r0 := @this: android.text.SpannableStringBuilder;

        i0 = virtualinvoke r0.<android.text.SpannableStringBuilder: int length()>();

        r1 = newarray (char)[i0];

        virtualinvoke r0.<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>(0, i0, r1, 0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }
}
