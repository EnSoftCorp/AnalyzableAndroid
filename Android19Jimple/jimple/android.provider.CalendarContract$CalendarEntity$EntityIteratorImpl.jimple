class android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl extends android.content.CursorEntityIterator
{

    public void <init>(android.database.Cursor)
    {
        android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl r0;
        android.database.Cursor r1;

        r0 := @this: android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        specialinvoke r0.<android.content.CursorEntityIterator: void <init>(android.database.Cursor)>(r1);

        return;
    }

    public android.content.Entity getEntityAndIncrementCursor(android.database.Cursor) throws android.os.RemoteException
    {
        android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl r0;
        android.database.Cursor r1;
        long l0;
        android.content.ContentValues r2, $r4;
        android.content.Entity r3, $r6;
        int $i1;
        java.lang.Long $r5;

        r0 := @this: android.provider.CalendarContract$CalendarEntity$EntityIteratorImpl;

        r1 := @parameter0: android.database.Cursor;

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

        l0 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>($i1);

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        r2 = $r4;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_id", $r5);

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "account_name");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "account_type");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "_sync_id");

        staticinvoke <android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "dirty");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "mutators");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync1");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync2");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync3");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync4");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync5");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync6");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync7");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync8");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync9");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "cal_sync10");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "name");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "calendar_displayName");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "calendar_color");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "calendar_color_index");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "calendar_access_level");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "visible");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "sync_events");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "calendar_location");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "calendar_timezone");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "ownerAccount");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "canOrganizerRespond");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "canModifyTimeZone");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "maxReminders");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "canPartiallyUpdate");

        staticinvoke <android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "allowedReminders");

        staticinvoke <android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>(r1, r2, "deleted");

        $r6 = new android.content.Entity;

        specialinvoke $r6.<android.content.Entity: void <init>(android.content.ContentValues)>(r2);

        r3 = $r6;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        return r3;
    }
}
