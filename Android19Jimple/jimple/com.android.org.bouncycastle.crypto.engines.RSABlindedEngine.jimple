public class com.android.org.bouncycastle.crypto.engines.RSABlindedEngine extends java.lang.Object implements com.android.org.bouncycastle.crypto.AsymmetricBlockCipher
{
    private static java.math.BigInteger ONE;
    private com.android.org.bouncycastle.crypto.engines.RSACoreEngine core;
    private com.android.org.bouncycastle.crypto.params.RSAKeyParameters key;
    private java.security.SecureRandom random;

    static void <clinit>()
    {
        java.math.BigInteger $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: java.math.BigInteger ONE> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.org.bouncycastle.crypto.engines.RSABlindedEngine r0;
        com.android.org.bouncycastle.crypto.engines.RSACoreEngine $r1;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.org.bouncycastle.crypto.engines.RSACoreEngine;

        specialinvoke $r1.<com.android.org.bouncycastle.crypto.engines.RSACoreEngine: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.engines.RSACoreEngine core> = $r1;

        return;
    }

    public int getInputBlockSize()
    {
        com.android.org.bouncycastle.crypto.engines.RSABlindedEngine r0;
        com.android.org.bouncycastle.crypto.engines.RSACoreEngine $r1;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        $r1 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.engines.RSACoreEngine core>;

        $i0 = virtualinvoke $r1.<com.android.org.bouncycastle.crypto.engines.RSACoreEngine: int getInputBlockSize()>();

        return $i0;
    }

    public int getOutputBlockSize()
    {
        com.android.org.bouncycastle.crypto.engines.RSABlindedEngine r0;
        com.android.org.bouncycastle.crypto.engines.RSACoreEngine $r1;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        $r1 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.engines.RSACoreEngine core>;

        $i0 = virtualinvoke $r1.<com.android.org.bouncycastle.crypto.engines.RSACoreEngine: int getOutputBlockSize()>();

        return $i0;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters)
    {
        com.android.org.bouncycastle.crypto.engines.RSABlindedEngine r0;
        boolean z0, $z1;
        com.android.org.bouncycastle.crypto.CipherParameters r1, $r6;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom r2;
        com.android.org.bouncycastle.crypto.engines.RSACoreEngine $r3;
        com.android.org.bouncycastle.crypto.params.RSAKeyParameters $r4, $r7;
        java.security.SecureRandom $r5, $r8;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        $r3 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.engines.RSACoreEngine core>;

        virtualinvoke $r3.<com.android.org.bouncycastle.crypto.engines.RSACoreEngine: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(z0, r1);

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r2 = (com.android.org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r6 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: com.android.org.bouncycastle.crypto.CipherParameters getParameters()>();

        $r7 = (com.android.org.bouncycastle.crypto.params.RSAKeyParameters) $r6;

        r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.params.RSAKeyParameters key> = $r7;

        $r8 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: java.security.SecureRandom random> = $r8;

        return;

     label1:
        $r4 = (com.android.org.bouncycastle.crypto.params.RSAKeyParameters) r1;

        r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.params.RSAKeyParameters key> = $r4;

        $r5 = new java.security.SecureRandom;

        specialinvoke $r5.<java.security.SecureRandom: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: java.security.SecureRandom random> = $r5;

        return;
    }

    public byte[] processBlock(byte[], int, int)
    {
        com.android.org.bouncycastle.crypto.engines.RSABlindedEngine r0;
        byte[] r1, $r13;
        int i0, i1;
        java.math.BigInteger r2, r3, r5, r6, r7, r8, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r27;
        com.android.org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters r4;
        com.android.org.bouncycastle.crypto.params.RSAKeyParameters $r9, $r11, $r15;
        com.android.org.bouncycastle.crypto.engines.RSACoreEngine $r10, $r12, $r14, $r16, $r25;
        boolean $z0;
        java.security.SecureRandom $r20;
        java.lang.IllegalStateException $r26;

        r0 := @this: com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r9 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.params.RSAKeyParameters key>;

        if $r9 != null goto label1;

        $r26 = new java.lang.IllegalStateException;

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RSA engine not initialised");

        throw $r26;

     label1:
        $r10 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.engines.RSACoreEngine core>;

        r2 = virtualinvoke $r10.<com.android.org.bouncycastle.crypto.engines.RSACoreEngine: java.math.BigInteger convertInput(byte[],int,int)>(r1, i0, i1);

        $r11 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.params.RSAKeyParameters key>;

        $z0 = $r11 instanceof com.android.org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters;

        if $z0 == 0 goto label4;

        $r15 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.params.RSAKeyParameters key>;

        r4 = (com.android.org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters) $r15;

        r5 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getPublicExponent()>();

        if r5 == null goto label3;

        r6 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters: java.math.BigInteger getModulus()>();

        $r19 = <com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: java.math.BigInteger ONE>;

        $r17 = <com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: java.math.BigInteger ONE>;

        $r18 = virtualinvoke r6.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r17);

        $r20 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: java.security.SecureRandom random>;

        r7 = staticinvoke <com.android.org.bouncycastle.util.BigIntegers: java.math.BigInteger createRandomInRange(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>($r19, $r18, $r20);

        $r22 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r5, r6);

        $r21 = virtualinvoke $r22.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>(r2);

        r8 = virtualinvoke $r21.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r6);

        $r25 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.engines.RSACoreEngine core>;

        $r23 = virtualinvoke $r25.<com.android.org.bouncycastle.crypto.engines.RSACoreEngine: java.math.BigInteger processBlock(java.math.BigInteger)>(r8);

        $r24 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>(r6);

        $r27 = virtualinvoke $r23.<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>($r24);

        r3 = virtualinvoke $r27.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r6);

     label2:
        $r14 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.engines.RSACoreEngine core>;

        $r13 = virtualinvoke $r14.<com.android.org.bouncycastle.crypto.engines.RSACoreEngine: byte[] convertOutput(java.math.BigInteger)>(r3);

        return $r13;

     label3:
        $r16 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.engines.RSACoreEngine core>;

        r3 = virtualinvoke $r16.<com.android.org.bouncycastle.crypto.engines.RSACoreEngine: java.math.BigInteger processBlock(java.math.BigInteger)>(r2);

        goto label2;

     label4:
        $r12 = r0.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: com.android.org.bouncycastle.crypto.engines.RSACoreEngine core>;

        r3 = virtualinvoke $r12.<com.android.org.bouncycastle.crypto.engines.RSACoreEngine: java.math.BigInteger processBlock(java.math.BigInteger)>(r2);

        goto label2;
    }
}
