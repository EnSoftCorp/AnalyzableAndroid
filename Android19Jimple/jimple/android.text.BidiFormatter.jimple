public final class android.text.BidiFormatter extends java.lang.Object
{
    private static final int DEFAULT_FLAGS;
    private static final android.text.BidiFormatter DEFAULT_LTR_INSTANCE;
    private static final android.text.BidiFormatter DEFAULT_RTL_INSTANCE;
    private static android.text.TextDirectionHeuristic DEFAULT_TEXT_DIRECTION_HEURISTIC;
    private static final int DIR_LTR;
    private static final int DIR_RTL;
    private static final int DIR_UNKNOWN;
    private static final java.lang.String EMPTY_STRING;
    private static final int FLAG_STEREO_RESET;
    private static final char LRE;
    private static final char LRM;
    private static final java.lang.String LRM_STRING;
    private static final char PDF;
    private static final char RLE;
    private static final char RLM;
    private static final java.lang.String RLM_STRING;
    private final android.text.TextDirectionHeuristic mDefaultTextDirectionHeuristic;
    private final int mFlags;
    private final boolean mIsRtlContext;

    static void <clinit>()
    {
        android.text.TextDirectionHeuristic $r0, $r4, $r6;
        java.lang.String $r1, $r2;
        android.text.BidiFormatter $r3, $r5;

        <android.text.BidiFormatter: char RLM> = 8207;

        <android.text.BidiFormatter: char RLE> = 8235;

        <android.text.BidiFormatter: char PDF> = 8236;

        <android.text.BidiFormatter: char LRM> = 8206;

        <android.text.BidiFormatter: char LRE> = 8234;

        <android.text.BidiFormatter: int FLAG_STEREO_RESET> = 2;

        <android.text.BidiFormatter: java.lang.String EMPTY_STRING> = "";

        <android.text.BidiFormatter: int DIR_UNKNOWN> = 0;

        <android.text.BidiFormatter: int DIR_RTL> = 1;

        <android.text.BidiFormatter: int DIR_LTR> = -1;

        <android.text.BidiFormatter: int DEFAULT_FLAGS> = 2;

        $r0 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        <android.text.BidiFormatter: android.text.TextDirectionHeuristic DEFAULT_TEXT_DIRECTION_HEURISTIC> = $r0;

        $r1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(8206);

        <android.text.BidiFormatter: java.lang.String LRM_STRING> = $r1;

        $r2 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(8207);

        <android.text.BidiFormatter: java.lang.String RLM_STRING> = $r2;

        $r3 = new android.text.BidiFormatter;

        $r4 = <android.text.BidiFormatter: android.text.TextDirectionHeuristic DEFAULT_TEXT_DIRECTION_HEURISTIC>;

        specialinvoke $r3.<android.text.BidiFormatter: void <init>(boolean,int,android.text.TextDirectionHeuristic)>(0, 2, $r4);

        <android.text.BidiFormatter: android.text.BidiFormatter DEFAULT_LTR_INSTANCE> = $r3;

        $r5 = new android.text.BidiFormatter;

        $r6 = <android.text.BidiFormatter: android.text.TextDirectionHeuristic DEFAULT_TEXT_DIRECTION_HEURISTIC>;

        specialinvoke $r5.<android.text.BidiFormatter: void <init>(boolean,int,android.text.TextDirectionHeuristic)>(1, 2, $r6);

        <android.text.BidiFormatter: android.text.BidiFormatter DEFAULT_RTL_INSTANCE> = $r5;

        return;
    }

    private void <init>(boolean, int, android.text.TextDirectionHeuristic)
    {
        android.text.BidiFormatter r0;
        boolean z0;
        int i0;
        android.text.TextDirectionHeuristic r1;

        r0 := @this: android.text.BidiFormatter;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.text.TextDirectionHeuristic;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.BidiFormatter: boolean mIsRtlContext> = z0;

        r0.<android.text.BidiFormatter: int mFlags> = i0;

        r0.<android.text.BidiFormatter: android.text.TextDirectionHeuristic mDefaultTextDirectionHeuristic> = r1;

        return;
    }

    void <init>(boolean, int, android.text.TextDirectionHeuristic, android.text.BidiFormatter$1)
    {
        android.text.BidiFormatter r0;
        boolean z0;
        int i0;
        android.text.TextDirectionHeuristic r1;
        android.text.BidiFormatter$1 r2;

        r0 := @this: android.text.BidiFormatter;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.text.TextDirectionHeuristic;

        r2 := @parameter3: android.text.BidiFormatter$1;

        specialinvoke r0.<android.text.BidiFormatter: void <init>(boolean,int,android.text.TextDirectionHeuristic)>(z0, i0, r1);

        return;
    }

    static boolean access$000(java.util.Locale)
    {
        java.util.Locale r0;
        boolean $z0;

        r0 := @parameter0: java.util.Locale;

        $z0 = staticinvoke <android.text.BidiFormatter: boolean isRtlLocale(java.util.Locale)>(r0);

        return $z0;
    }

    static android.text.TextDirectionHeuristic access$100()
    {
        android.text.TextDirectionHeuristic $r0;

        $r0 = <android.text.BidiFormatter: android.text.TextDirectionHeuristic DEFAULT_TEXT_DIRECTION_HEURISTIC>;

        return $r0;
    }

    static android.text.BidiFormatter access$200()
    {
        android.text.BidiFormatter $r0;

        $r0 = <android.text.BidiFormatter: android.text.BidiFormatter DEFAULT_RTL_INSTANCE>;

        return $r0;
    }

    static android.text.BidiFormatter access$300()
    {
        android.text.BidiFormatter $r0;

        $r0 = <android.text.BidiFormatter: android.text.BidiFormatter DEFAULT_LTR_INSTANCE>;

        return $r0;
    }

    private static int getEntryDir(java.lang.String)
    {
        java.lang.String r0;
        android.text.BidiFormatter$DirectionalityEstimator $r1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.text.BidiFormatter$DirectionalityEstimator;

        specialinvoke $r1.<android.text.BidiFormatter$DirectionalityEstimator: void <init>(java.lang.String,boolean)>(r0, 0);

        $i0 = virtualinvoke $r1.<android.text.BidiFormatter$DirectionalityEstimator: int getEntryDir()>();

        return $i0;
    }

    private static int getExitDir(java.lang.String)
    {
        java.lang.String r0;
        android.text.BidiFormatter$DirectionalityEstimator $r1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $r1 = new android.text.BidiFormatter$DirectionalityEstimator;

        specialinvoke $r1.<android.text.BidiFormatter$DirectionalityEstimator: void <init>(java.lang.String,boolean)>(r0, 0);

        $i0 = virtualinvoke $r1.<android.text.BidiFormatter$DirectionalityEstimator: int getExitDir()>();

        return $i0;
    }

    public static android.text.BidiFormatter getInstance()
    {
        android.text.BidiFormatter$Builder $r0;
        android.text.BidiFormatter $r1;

        $r0 = new android.text.BidiFormatter$Builder;

        specialinvoke $r0.<android.text.BidiFormatter$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<android.text.BidiFormatter$Builder: android.text.BidiFormatter build()>();

        return $r1;
    }

    public static android.text.BidiFormatter getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        android.text.BidiFormatter$Builder $r1;
        android.text.BidiFormatter $r2;

        r0 := @parameter0: java.util.Locale;

        $r1 = new android.text.BidiFormatter$Builder;

        specialinvoke $r1.<android.text.BidiFormatter$Builder: void <init>(java.util.Locale)>(r0);

        $r2 = virtualinvoke $r1.<android.text.BidiFormatter$Builder: android.text.BidiFormatter build()>();

        return $r2;
    }

    public static android.text.BidiFormatter getInstance(boolean)
    {
        boolean z0;
        android.text.BidiFormatter$Builder $r0;
        android.text.BidiFormatter $r1;

        z0 := @parameter0: boolean;

        $r0 = new android.text.BidiFormatter$Builder;

        specialinvoke $r0.<android.text.BidiFormatter$Builder: void <init>(boolean)>(z0);

        $r1 = virtualinvoke $r0.<android.text.BidiFormatter$Builder: android.text.BidiFormatter build()>();

        return $r1;
    }

    private static boolean isRtlLocale(java.util.Locale)
    {
        java.util.Locale r0;
        int $i0;

        r0 := @parameter0: java.util.Locale;

        $i0 = staticinvoke <android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>(r0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean getStereoReset()
    {
        android.text.BidiFormatter r0;
        int $i0, $i1;

        r0 := @this: android.text.BidiFormatter;

        $i0 = r0.<android.text.BidiFormatter: int mFlags>;

        $i1 = 2 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRtl(java.lang.String)
    {
        android.text.BidiFormatter r0;
        java.lang.String r1;
        android.text.TextDirectionHeuristic $r2;
        int $i0;
        boolean $z0;

        r0 := @this: android.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.text.BidiFormatter: android.text.TextDirectionHeuristic mDefaultTextDirectionHeuristic>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = interfaceinvoke $r2.<android.text.TextDirectionHeuristic: boolean isRtl(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return $z0;
    }

    public boolean isRtlContext()
    {
        android.text.BidiFormatter r0;
        boolean $z0;

        r0 := @this: android.text.BidiFormatter;

        $z0 = r0.<android.text.BidiFormatter: boolean mIsRtlContext>;

        return $z0;
    }

    public java.lang.String markAfter(java.lang.String, android.text.TextDirectionHeuristic)
    {
        android.text.BidiFormatter r0;
        java.lang.String r1, $r3, $r4;
        android.text.TextDirectionHeuristic r2;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2;

        r0 := @this: android.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.text.TextDirectionHeuristic;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        z0 = interfaceinvoke r2.<android.text.TextDirectionHeuristic: boolean isRtl(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        $z1 = r0.<android.text.BidiFormatter: boolean mIsRtlContext>;

        if $z1 != 0 goto label2;

        if z0 != 0 goto label1;

        $i2 = staticinvoke <android.text.BidiFormatter: int getExitDir(java.lang.String)>(r1);

        if $i2 != 1 goto label2;

     label1:
        $r4 = <android.text.BidiFormatter: java.lang.String LRM_STRING>;

        return $r4;

     label2:
        $z2 = r0.<android.text.BidiFormatter: boolean mIsRtlContext>;

        if $z2 == 0 goto label4;

        if z0 == 0 goto label3;

        $i1 = staticinvoke <android.text.BidiFormatter: int getExitDir(java.lang.String)>(r1);

        if $i1 != -1 goto label4;

     label3:
        $r3 = <android.text.BidiFormatter: java.lang.String RLM_STRING>;

        return $r3;

     label4:
        return "";
    }

    public java.lang.String markBefore(java.lang.String, android.text.TextDirectionHeuristic)
    {
        android.text.BidiFormatter r0;
        java.lang.String r1, $r3, $r4;
        android.text.TextDirectionHeuristic r2;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2;

        r0 := @this: android.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.text.TextDirectionHeuristic;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        z0 = interfaceinvoke r2.<android.text.TextDirectionHeuristic: boolean isRtl(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        $z1 = r0.<android.text.BidiFormatter: boolean mIsRtlContext>;

        if $z1 != 0 goto label2;

        if z0 != 0 goto label1;

        $i2 = staticinvoke <android.text.BidiFormatter: int getEntryDir(java.lang.String)>(r1);

        if $i2 != 1 goto label2;

     label1:
        $r4 = <android.text.BidiFormatter: java.lang.String LRM_STRING>;

        return $r4;

     label2:
        $z2 = r0.<android.text.BidiFormatter: boolean mIsRtlContext>;

        if $z2 == 0 goto label4;

        if z0 == 0 goto label3;

        $i1 = staticinvoke <android.text.BidiFormatter: int getEntryDir(java.lang.String)>(r1);

        if $i1 != -1 goto label4;

     label3:
        $r3 = <android.text.BidiFormatter: java.lang.String RLM_STRING>;

        return $r3;

     label4:
        return "";
    }

    public java.lang.String unicodeWrap(java.lang.String)
    {
        android.text.BidiFormatter r0;
        java.lang.String r1, $r3;
        android.text.TextDirectionHeuristic $r2;

        r0 := @this: android.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.text.BidiFormatter: android.text.TextDirectionHeuristic mDefaultTextDirectionHeuristic>;

        $r3 = virtualinvoke r0.<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.text.TextDirectionHeuristic,boolean)>(r1, $r2, 1);

        return $r3;
    }

    public java.lang.String unicodeWrap(java.lang.String, android.text.TextDirectionHeuristic)
    {
        android.text.BidiFormatter r0;
        java.lang.String r1, $r3;
        android.text.TextDirectionHeuristic r2;

        r0 := @this: android.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.text.TextDirectionHeuristic;

        $r3 = virtualinvoke r0.<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.text.TextDirectionHeuristic,boolean)>(r1, r2, 1);

        return $r3;
    }

    public java.lang.String unicodeWrap(java.lang.String, android.text.TextDirectionHeuristic, boolean)
    {
        android.text.BidiFormatter r0;
        java.lang.String r1, $r7, $r10, $r13;
        android.text.TextDirectionHeuristic r2, r4, r5;
        boolean z0, z1, $z2, $z3;
        java.lang.StringBuilder r3, $r6;
        char c0;
        int $i1;

        r0 := @this: android.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.text.TextDirectionHeuristic;

        z0 := @parameter2: boolean;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        z1 = interfaceinvoke r2.<android.text.TextDirectionHeuristic: boolean isRtl(java.lang.CharSequence,int,int)>(r1, 0, $i1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r3 = $r6;

        $z3 = virtualinvoke r0.<android.text.BidiFormatter: boolean getStereoReset()>();

        if $z3 == 0 goto label02;

        if z0 == 0 goto label02;

        if z1 == 0 goto label07;

        r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

     label01:
        $r13 = virtualinvoke r0.<android.text.BidiFormatter: java.lang.String markBefore(java.lang.String,android.text.TextDirectionHeuristic)>(r1, r5);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label02:
        $z2 = r0.<android.text.BidiFormatter: boolean mIsRtlContext>;

        if z1 == $z2 goto label09;

        if z1 == 0 goto label08;

        c0 = 8235;

     label03:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8236);

     label04:
        if z0 == 0 goto label06;

        if z1 == 0 goto label10;

        r4 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic RTL>;

     label05:
        $r10 = virtualinvoke r0.<android.text.BidiFormatter: java.lang.String markAfter(java.lang.String,android.text.TextDirectionHeuristic)>(r1, r4);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label06:
        $r7 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label07:
        r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        goto label01;

     label08:
        c0 = 8234;

        goto label03;

     label09:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        goto label04;

     label10:
        r4 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic LTR>;

        goto label05;
    }

    public java.lang.String unicodeWrap(java.lang.String, boolean)
    {
        android.text.BidiFormatter r0;
        java.lang.String r1, $r3;
        boolean z0;
        android.text.TextDirectionHeuristic $r2;

        r0 := @this: android.text.BidiFormatter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.text.BidiFormatter: android.text.TextDirectionHeuristic mDefaultTextDirectionHeuristic>;

        $r3 = virtualinvoke r0.<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.text.TextDirectionHeuristic,boolean)>(r1, $r2, z0);

        return $r3;
    }
}
