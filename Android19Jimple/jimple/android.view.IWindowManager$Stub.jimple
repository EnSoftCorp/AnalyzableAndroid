public abstract class android.view.IWindowManager$Stub extends android.os.Binder implements android.view.IWindowManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_addAppToken;
    static final int TRANSACTION_addWindowToken;
    static final int TRANSACTION_clearForcedDisplayDensity;
    static final int TRANSACTION_clearForcedDisplaySize;
    static final int TRANSACTION_closeSystemDialogs;
    static final int TRANSACTION_disableKeyguard;
    static final int TRANSACTION_dismissKeyguard;
    static final int TRANSACTION_executeAppTransition;
    static final int TRANSACTION_exitKeyguardSecurely;
    static final int TRANSACTION_freezeRotation;
    static final int TRANSACTION_getAnimationScale;
    static final int TRANSACTION_getAnimationScales;
    static final int TRANSACTION_getAppOrientation;
    static final int TRANSACTION_getBaseDisplayDensity;
    static final int TRANSACTION_getBaseDisplaySize;
    static final int TRANSACTION_getCompatibleMagnificationSpecForWindow;
    static final int TRANSACTION_getFocusedWindowToken;
    static final int TRANSACTION_getInitialDisplayDensity;
    static final int TRANSACTION_getInitialDisplaySize;
    static final int TRANSACTION_getPendingAppTransition;
    static final int TRANSACTION_getPreferredOptionsPanelGravity;
    static final int TRANSACTION_getRotation;
    static final int TRANSACTION_getWindowFrame;
    static final int TRANSACTION_hasNavigationBar;
    static final int TRANSACTION_inKeyguardRestrictedInputMode;
    static final int TRANSACTION_inputMethodClientHasFocus;
    static final int TRANSACTION_isKeyguardLocked;
    static final int TRANSACTION_isKeyguardSecure;
    static final int TRANSACTION_isRotationFrozen;
    static final int TRANSACTION_isSafeModeEnabled;
    static final int TRANSACTION_isViewServerRunning;
    static final int TRANSACTION_lockNow;
    static final int TRANSACTION_openSession;
    static final int TRANSACTION_overridePendingAppTransition;
    static final int TRANSACTION_overridePendingAppTransitionScaleUp;
    static final int TRANSACTION_overridePendingAppTransitionThumb;
    static final int TRANSACTION_pauseKeyDispatching;
    static final int TRANSACTION_prepareAppTransition;
    static final int TRANSACTION_reenableKeyguard;
    static final int TRANSACTION_removeAppToken;
    static final int TRANSACTION_removeRotationWatcher;
    static final int TRANSACTION_removeWindowToken;
    static final int TRANSACTION_resumeKeyDispatching;
    static final int TRANSACTION_screenshotApplications;
    static final int TRANSACTION_setAnimationScale;
    static final int TRANSACTION_setAnimationScales;
    static final int TRANSACTION_setAppGroupId;
    static final int TRANSACTION_setAppOrientation;
    static final int TRANSACTION_setAppStartingWindow;
    static final int TRANSACTION_setAppVisibility;
    static final int TRANSACTION_setAppWillBeHidden;
    static final int TRANSACTION_setEventDispatching;
    static final int TRANSACTION_setFocusedApp;
    static final int TRANSACTION_setForcedDisplayDensity;
    static final int TRANSACTION_setForcedDisplaySize;
    static final int TRANSACTION_setInTouchMode;
    static final int TRANSACTION_setInputFilter;
    static final int TRANSACTION_setMagnificationCallbacks;
    static final int TRANSACTION_setMagnificationSpec;
    static final int TRANSACTION_setNewConfiguration;
    static final int TRANSACTION_setOverscan;
    static final int TRANSACTION_setStrictModeVisualIndicatorPreference;
    static final int TRANSACTION_setTouchExplorationEnabled;
    static final int TRANSACTION_showStrictModeViolation;
    static final int TRANSACTION_startAppFreezingScreen;
    static final int TRANSACTION_startFreezingScreen;
    static final int TRANSACTION_startViewServer;
    static final int TRANSACTION_statusBarVisibilityChanged;
    static final int TRANSACTION_stopAppFreezingScreen;
    static final int TRANSACTION_stopFreezingScreen;
    static final int TRANSACTION_stopViewServer;
    static final int TRANSACTION_thawRotation;
    static final int TRANSACTION_updateOrientationFromAppTokens;
    static final int TRANSACTION_updateRotation;
    static final int TRANSACTION_waitForWindowDrawn;
    static final int TRANSACTION_watchRotation;

    public void <init>()
    {
        android.view.IWindowManager$Stub r0;

        r0 := @this: android.view.IWindowManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.view.IWindowManager");

        return;
    }

    public static android.view.IWindowManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.view.IWindowManager$Stub$Proxy $r2;
        boolean $z0;
        android.view.IWindowManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.view.IWindowManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.view.IWindowManager;

        if $z0 == 0 goto label2;

        $r3 = (android.view.IWindowManager) r1;

        return $r3;

     label2:
        $r2 = new android.view.IWindowManager$Stub$Proxy;

        specialinvoke $r2.<android.view.IWindowManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.view.IWindowManager$Stub r0;

        r0 := @this: android.view.IWindowManager$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.view.IWindowManager$Stub r0;
        int i0, i1, i5, i6, i7, i9, i10, i11, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i32, i33, $i35, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91;
        android.os.Parcel r1, r2;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, z12, z13, z14, z15, z16, z17, z18, z19, z20, z21, z22, z23, z24, z25, $z26;
        android.view.MagnificationSpec r3, r4;
        byte b2, b3, b4, b8, b12, b13, b14, b31, b34, b36, b37;
        android.os.IBinder r5, r7, r9, r15, r16, r19, r22, r25, r26, $r30, $r31, $r39, $r41, $r42, $r44, $r48, $r52, $r53, $r55, $r56, $r58, $r59, $r62, $r65, $r69, $r71, $r74, $r75, $r77, $r79, $r80, $r81, $r82, $r83, $r87, $r89;
        android.graphics.Rect r6, $r38;
        android.os.Bundle r8;
        android.graphics.Bitmap r10, r21;
        float f0, $f1;
        float[] r11, $r45;
        android.content.res.Configuration r12, r13, r14;
        android.content.res.CompatibilityInfo r17;
        java.lang.String r18, $r46, $r49, $r57, $r72;
        java.lang.CharSequence r20;
        android.os.IRemoteCallback r23, $r40, $r70;
        android.view.IApplicationToken r24, $r76, $r78;
        android.view.IWindowSession r27;
        android.graphics.Point r28, r29, $r86, $r88;
        android.view.IMagnificationCallbacks $r32;
        android.os.Parcelable$Creator $r33, $r36, $r50, $r61, $r64, $r67, $r68;
        java.lang.Object $r34, $r35, $r51, $r60, $r63, $r66, $r73;
        android.view.IInputFilter $r37;
        android.view.IRotationWatcher $r43, $r47;
        android.view.IOnKeyguardExitResult $r54;
        com.android.internal.view.IInputMethodClient $r84, $r85;
        com.android.internal.view.IInputContext $r90;

        r0 := @this: android.view.IWindowManager$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label003;
            case 2: goto label006;
            case 3: goto label009;
            case 4: goto label012;
            case 5: goto label015;
            case 6: goto label018;
            case 7: goto label021;
            case 8: goto label024;
            case 9: goto label025;
            case 10: goto label026;
            case 11: goto label027;
            case 12: goto label028;
            case 13: goto label029;
            case 14: goto label030;
            case 15: goto label031;
            case 16: goto label032;
            case 17: goto label033;
            case 18: goto label036;
            case 19: goto label037;
            case 20: goto label038;
            case 21: goto label043;
            case 22: goto label044;
            case 23: goto label045;
            case 24: goto label046;
            case 25: goto label049;
            case 26: goto label052;
            case 27: goto label053;
            case 28: goto label054;
            case 29: goto label055;
            case 30: goto label060;
            case 31: goto label061;
            case 32: goto label068;
            case 33: goto label069;
            case 34: goto label072;
            case 35: goto label073;
            case 36: goto label076;
            case 37: goto label077;
            case 38: goto label082;
            case 39: goto label085;
            case 40: goto label086;
            case 41: goto label087;
            case 42: goto label088;
            case 43: goto label089;
            case 44: goto label090;
            case 45: goto label093;
            case 46: goto label096;
            case 47: goto label099;
            case 48: goto label100;
            case 49: goto label101;
            case 50: goto label102;
            case 51: goto label103;
            case 52: goto label104;
            case 53: goto label105;
            case 54: goto label108;
            case 55: goto label111;
            case 56: goto label112;
            case 57: goto label117;
            case 58: goto label118;
            case 59: goto label119;
            case 60: goto label120;
            case 61: goto label121;
            case 62: goto label122;
            case 63: goto label123;
            case 64: goto label126;
            case 65: goto label131;
            case 66: goto label132;
            case 67: goto label135;
            case 68: goto label138;
            case 69: goto label141;
            case 70: goto label142;
            case 71: goto label143;
            case 72: goto label146;
            case 73: goto label149;
            case 74: goto label150;
            case 75: goto label153;
            case 76: goto label156;
            case 1598968902: goto label002;
            default: goto label001;
        };

     label001:
        $z26 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z26;

     label002:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.view.IWindowManager");

        return 1;

     label003:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i91 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        z23 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean startViewServer(int)>($i91);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z23 == 0 goto label005;

        b34 = 1;

     label004:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b34);

        return 1;

     label005:
        b34 = 0;

        goto label004;

     label006:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z25 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean stopViewServer()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z25 == 0 goto label008;

        b37 = 1;

     label007:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b37);

        return 1;

     label008:
        b37 = 0;

        goto label007;

     label009:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z24 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isViewServerRunning()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z24 == 0 goto label011;

        b36 = 1;

     label010:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b36);

        return 1;

     label011:
        b36 = 0;

        goto label010;

     label012:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r83 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r84 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient asInterface(android.os.IBinder)>($r83);

        $r89 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r90 = staticinvoke <com.android.internal.view.IInputContext$Stub: com.android.internal.view.IInputContext asInterface(android.os.IBinder)>($r89);

        r27 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.view.IWindowSession openSession(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>($r84, $r90);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r27 == null goto label014;

        r26 = interfaceinvoke r27.<android.view.IWindowSession: android.os.IBinder asBinder()>();

     label013:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r26);

        return 1;

     label014:
        r26 = null;

        goto label013;

     label015:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r87 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r85 = staticinvoke <com.android.internal.view.IInputMethodClient$Stub: com.android.internal.view.IInputMethodClient asInterface(android.os.IBinder)>($r87);

        z22 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>($r85);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z22 == 0 goto label017;

        b31 = 1;

     label016:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b31);

        return 1;

     label017:
        b31 = 0;

        goto label016;

     label018:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i33 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r86 = new android.graphics.Point;

        specialinvoke $r86.<android.graphics.Point: void <init>()>();

        r29 = $r86;

        virtualinvoke r0.<android.view.IWindowManager$Stub: void getInitialDisplaySize(int,android.graphics.Point)>(i33, r29);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r29 == null goto label020;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r29.<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label019:
        return 1;

     label020:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label019;

     label021:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i32 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r88 = new android.graphics.Point;

        specialinvoke $r88.<android.graphics.Point: void <init>()>();

        r28 = $r88;

        virtualinvoke r0.<android.view.IWindowManager$Stub: void getBaseDisplaySize(int,android.graphics.Point)>(i32, r28);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r28 == null goto label023;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r28.<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label022:
        return 1;

     label023:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label022;

     label024:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i87 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i88 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i86 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setForcedDisplaySize(int,int,int)>($i87, $i88, $i86);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label025:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i89 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void clearForcedDisplaySize(int)>($i89);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label026:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i90 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i27 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getInitialDisplayDensity(int)>($i90);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i27);

        return 1;

     label027:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i74 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i26 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getBaseDisplayDensity(int)>($i74);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i26);

        return 1;

     label028:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i76 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i75 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setForcedDisplayDensity(int,int)>($i76, $i75);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label029:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i77 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void clearForcedDisplayDensity(int)>($i77);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label030:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i82 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i81 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i80 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i79 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i78 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setOverscan(int,int,int,int,int)>($i82, $i81, $i80, $i79, $i78);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label031:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r79 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void pauseKeyDispatching(android.os.IBinder)>($r79);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label032:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r80 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void resumeKeyDispatching(android.os.IBinder)>($r80);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label033:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i83 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i83 == 0 goto label035;

        z20 = 1;

     label034:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setEventDispatching(boolean)>(z20);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label035:
        z20 = 0;

        goto label034;

     label036:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r81 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i84 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void addWindowToken(android.os.IBinder,int)>($r81, $i84);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label037:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r82 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void removeWindowToken(android.os.IBinder)>($r82);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label038:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r74 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r24 = staticinvoke <android.view.IApplicationToken$Stub: android.view.IApplicationToken asInterface(android.os.IBinder)>($r74);

        i28 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i29 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i30 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i69 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i69 == 0 goto label041;

        z21 = 1;

     label039:
        $i70 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i70 == 0 goto label042;

        z19 = 1;

     label040:
        $i71 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i85 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int)>(i23, r24, i28, i29, i30, z21, z19, $i71, $i85);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label041:
        z21 = 0;

        goto label039;

     label042:
        z19 = 0;

        goto label040;

     label043:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r75 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i73 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setAppGroupId(android.os.IBinder,int)>($r75, $i73);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label044:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r77 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r78 = staticinvoke <android.view.IApplicationToken$Stub: android.view.IApplicationToken asInterface(android.os.IBinder)>($r77);

        $i72 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setAppOrientation(android.view.IApplicationToken,int)>($r78, $i72);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label045:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r69 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r76 = staticinvoke <android.view.IApplicationToken$Stub: android.view.IApplicationToken asInterface(android.os.IBinder)>($r69);

        i22 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getAppOrientation(android.view.IApplicationToken)>($r76);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i22);

        return 1;

     label046:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r25 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i62 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i62 == 0 goto label048;

        z17 = 1;

     label047:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setFocusedApp(android.os.IBinder,boolean)>(r25, z17);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label048:
        z17 = 0;

        goto label047;

     label049:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i61 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i61 == 0 goto label051;

        z18 = 1;

     label050:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void prepareAppTransition(int,boolean)>(i25, z18);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label051:
        z18 = 0;

        goto label050;

     label052:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i24 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getPendingAppTransition()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i24);

        return 1;

     label053:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r72 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $i65 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i64 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r71 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r70 = staticinvoke <android.os.IRemoteCallback$Stub: android.os.IRemoteCallback asInterface(android.os.IBinder)>($r71);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>($r72, $i65, $i64, $r70);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label054:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i66 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i68 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i67 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i63 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void overridePendingAppTransitionScaleUp(int,int,int,int)>($i66, $i68, $i67, $i63);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label055:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i58 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i58 == 0 goto label058;

        $r64 = <android.graphics.Bitmap: android.os.Parcelable$Creator CREATOR>;

        $r73 = interfaceinvoke $r64.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r21 = (android.graphics.Bitmap) $r73;

     label056:
        i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r65 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r23 = staticinvoke <android.os.IRemoteCallback$Stub: android.os.IRemoteCallback asInterface(android.os.IBinder)>($r65);

        $i59 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i59 == 0 goto label059;

        z16 = 1;

     label057:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>(r21, i21, i20, r23, z16);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label058:
        r21 = null;

        goto label056;

     label059:
        z16 = 0;

        goto label057;

     label060:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void executeAppTransition()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label061:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r19 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r18 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i55 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i55 == 0 goto label065;

        $r67 = <android.content.res.CompatibilityInfo: android.os.Parcelable$Creator CREATOR>;

        $r63 = interfaceinvoke $r67.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r17 = (android.content.res.CompatibilityInfo) $r63;

     label062:
        $i54 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i54 == 0 goto label066;

        $r68 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r66 = interfaceinvoke $r68.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r20 = (java.lang.CharSequence) $r66;

     label063:
        i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r22 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i60 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i60 == 0 goto label067;

        z15 = 1;

     label064:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>(r19, r18, i15, r17, r20, i18, i17, i16, i19, r22, z15);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label065:
        r17 = null;

        goto label062;

     label066:
        r20 = null;

        goto label063;

     label067:
        z15 = 0;

        goto label064;

     label068:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r58 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setAppWillBeHidden(android.os.IBinder)>($r58);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label069:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r15 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i53 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i53 == 0 goto label071;

        z13 = 1;

     label070:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setAppVisibility(android.os.IBinder,boolean)>(r15, z13);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label071:
        z13 = 0;

        goto label070;

     label072:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r62 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i56 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void startAppFreezingScreen(android.os.IBinder,int)>($r62, $i56);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label073:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r16 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $i57 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i57 == 0 goto label075;

        z14 = 1;

     label074:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void stopAppFreezingScreen(android.os.IBinder,boolean)>(r16, z14);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label075:
        z14 = 0;

        goto label074;

     label076:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r59 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void removeAppToken(android.os.IBinder)>($r59);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label077:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i52 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i52 == 0 goto label080;

        $r61 = <android.content.res.Configuration: android.os.Parcelable$Creator CREATOR>;

        $r60 = interfaceinvoke $r61.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r12 = (android.content.res.Configuration) $r60;

     label078:
        $r52 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r13 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>(r12, $r52);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r13 == null goto label081;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r13.<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label079:
        return 1;

     label080:
        r12 = null;

        goto label078;

     label081:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label079;

     label082:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i51 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i51 == 0 goto label084;

        $r50 = <android.content.res.Configuration: android.os.Parcelable$Creator CREATOR>;

        $r51 = interfaceinvoke $r50.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r14 = (android.content.res.Configuration) $r51;

     label083:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setNewConfiguration(android.content.res.Configuration)>(r14);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label084:
        r14 = null;

        goto label083;

     label085:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i49 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i50 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void startFreezingScreen(int,int)>($i49, $i50);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label086:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void stopFreezingScreen()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label087:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r56 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r57 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void disableKeyguard(android.os.IBinder,java.lang.String)>($r56, $r57);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label088:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r55 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void reenableKeyguard(android.os.IBinder)>($r55);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label089:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r53 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r54 = staticinvoke <android.view.IOnKeyguardExitResult$Stub: android.view.IOnKeyguardExitResult asInterface(android.os.IBinder)>($r53);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>($r54);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label090:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z11 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isKeyguardLocked()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z11 == 0 goto label092;

        b14 = 1;

     label091:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b14);

        return 1;

     label092:
        b14 = 0;

        goto label091;

     label093:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z12 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isKeyguardSecure()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z12 == 0 goto label095;

        b12 = 1;

     label094:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b12);

        return 1;

     label095:
        b12 = 0;

        goto label094;

     label096:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z9 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean inKeyguardRestrictedInputMode()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z9 == 0 goto label098;

        b13 = 1;

     label097:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b13);

        return 1;

     label098:
        b13 = 0;

        goto label097;

     label099:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void dismissKeyguard()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label100:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r46 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void closeSystemDialogs(java.lang.String)>($r46);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label101:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i45 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        f0 = virtualinvoke r0.<android.view.IWindowManager$Stub: float getAnimationScale(int)>($i45);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeFloat(float)>(f0);

        return 1;

     label102:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r11 = virtualinvoke r0.<android.view.IWindowManager$Stub: float[] getAnimationScales()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeFloatArray(float[])>(r11);

        return 1;

     label103:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i44 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setAnimationScale(int,float)>($i44, $f1);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label104:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r45 = virtualinvoke r1.<android.os.Parcel: float[] createFloatArray()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setAnimationScales(float[])>($r45);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label105:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i43 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i43 == 0 goto label107;

        z10 = 1;

     label106:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setInTouchMode(boolean)>(z10);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label107:
        z10 = 0;

        goto label106;

     label108:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i48 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i48 == 0 goto label110;

        z7 = 1;

     label109:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void showStrictModeViolation(boolean)>(z7);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label110:
        z7 = 0;

        goto label109;

     label111:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r49 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setStrictModeVisualIndicatorPreference(java.lang.String)>($r49);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label112:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i47 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i47 == 0 goto label115;

        z6 = 1;

     label113:
        $i46 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i46 == 0 goto label116;

        z8 = 1;

     label114:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void updateRotation(boolean,boolean)>(z6, z8);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label115:
        z6 = 0;

        goto label113;

     label116:
        z8 = 0;

        goto label114;

     label117:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i11 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getRotation()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i11);

        return 1;

     label118:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r48 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r47 = staticinvoke <android.view.IRotationWatcher$Stub: android.view.IRotationWatcher asInterface(android.os.IBinder)>($r48);

        i9 = virtualinvoke r0.<android.view.IWindowManager$Stub: int watchRotation(android.view.IRotationWatcher)>($r47);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i9);

        return 1;

     label119:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r44 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r43 = staticinvoke <android.view.IRotationWatcher$Stub: android.view.IRotationWatcher asInterface(android.os.IBinder)>($r44);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void removeRotationWatcher(android.view.IRotationWatcher)>($r43);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label120:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        i10 = virtualinvoke r0.<android.view.IWindowManager$Stub: int getPreferredOptionsPanelGravity()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i10);

        return 1;

     label121:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i41 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void freezeRotation(int)>($i41);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label122:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        virtualinvoke r0.<android.view.IWindowManager$Stub: void thawRotation()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label123:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z5 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isRotationFrozen()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z5 == 0 goto label125;

        b8 = 1;

     label124:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b8);

        return 1;

     label125:
        b8 = 0;

        goto label124;

     label126:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r9 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i42 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i42 == 0 goto label129;

        z4 = 1;

     label127:
        r10 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int,boolean)>(r9, i5, i7, i6, z4);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r10 == null goto label130;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r10.<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label128:
        return 1;

     label129:
        z4 = 0;

        goto label127;

     label130:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label128;

     label131:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i40 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.view.IWindowManager$Stub: void statusBarVisibilityChanged(int)>($i40);

        return 1;

     label132:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r42 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r41 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r40 = staticinvoke <android.os.IRemoteCallback$Stub: android.os.IRemoteCallback asInterface(android.os.IBinder)>($r41);

        z3 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean waitForWindowDrawn(android.os.IBinder,android.os.IRemoteCallback)>($r42, $r40);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z3 == 0 goto label134;

        b4 = 1;

     label133:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b4);

        return 1;

     label134:
        b4 = 0;

        goto label133;

     label135:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z2 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean hasNavigationBar()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z2 == 0 goto label137;

        b3 = 1;

     label136:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b3);

        return 1;

     label137:
        b3 = 0;

        goto label136;

     label138:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i39 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i39 == 0 goto label140;

        $r36 = <android.os.Bundle: android.os.Parcelable$Creator CREATOR>;

        $r35 = interfaceinvoke $r36.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r8 = (android.os.Bundle) $r35;

     label139:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void lockNow(android.os.Bundle)>(r8);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label140:
        r8 = null;

        goto label139;

     label141:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r7 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.os.IBinder getFocusedWindowToken()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r7);

        return 1;

     label142:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r39 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r37 = staticinvoke <android.view.IInputFilter$Stub: android.view.IInputFilter asInterface(android.os.IBinder)>($r39);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setInputFilter(android.view.IInputFilter)>($r37);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label143:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        r5 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r38 = new android.graphics.Rect;

        specialinvoke $r38.<android.graphics.Rect: void <init>()>();

        r6 = $r38;

        virtualinvoke r0.<android.view.IWindowManager$Stub: void getWindowFrame(android.os.IBinder,android.graphics.Rect)>(r5, r6);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r6 == null goto label145;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r6.<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label144:
        return 1;

     label145:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label144;

     label146:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        z1 = virtualinvoke r0.<android.view.IWindowManager$Stub: boolean isSafeModeEnabled()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z1 == 0 goto label148;

        b2 = 1;

     label147:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

        return 1;

     label148:
        b2 = 0;

        goto label147;

     label149:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r31 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        $r32 = staticinvoke <android.view.IMagnificationCallbacks$Stub: android.view.IMagnificationCallbacks asInterface(android.os.IBinder)>($r31);

        virtualinvoke r0.<android.view.IWindowManager$Stub: void setMagnificationCallbacks(android.view.IMagnificationCallbacks)>($r32);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label150:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i38 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i38 == 0 goto label152;

        $r33 = <android.view.MagnificationSpec: android.os.Parcelable$Creator CREATOR>;

        $r34 = interfaceinvoke $r33.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r4 = (android.view.MagnificationSpec) $r34;

     label151:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setMagnificationSpec(android.view.MagnificationSpec)>(r4);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label152:
        r4 = null;

        goto label151;

     label153:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $r30 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r3 = virtualinvoke r0.<android.view.IWindowManager$Stub: android.view.MagnificationSpec getCompatibleMagnificationSpecForWindow(android.os.IBinder)>($r30);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r3 == null goto label155;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.view.MagnificationSpec: void writeToParcel(android.os.Parcel,int)>(r2, 1);

     label154:
        return 1;

     label155:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

        goto label154;

     label156:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.view.IWindowManager");

        $i35 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i35 == 0 goto label158;

        z0 = 1;

     label157:
        virtualinvoke r0.<android.view.IWindowManager$Stub: void setTouchExplorationEnabled(boolean)>(z0);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label158:
        z0 = 0;

        goto label157;
    }

    public static void <clinit>()
    {
        <android.view.IWindowManager$Stub: int TRANSACTION_watchRotation> = 58;

        <android.view.IWindowManager$Stub: int TRANSACTION_waitForWindowDrawn> = 66;

        <android.view.IWindowManager$Stub: int TRANSACTION_updateRotation> = 56;

        <android.view.IWindowManager$Stub: int TRANSACTION_updateOrientationFromAppTokens> = 37;

        <android.view.IWindowManager$Stub: int TRANSACTION_thawRotation> = 62;

        <android.view.IWindowManager$Stub: int TRANSACTION_stopViewServer> = 2;

        <android.view.IWindowManager$Stub: int TRANSACTION_stopFreezingScreen> = 40;

        <android.view.IWindowManager$Stub: int TRANSACTION_stopAppFreezingScreen> = 35;

        <android.view.IWindowManager$Stub: int TRANSACTION_statusBarVisibilityChanged> = 65;

        <android.view.IWindowManager$Stub: int TRANSACTION_startViewServer> = 1;

        <android.view.IWindowManager$Stub: int TRANSACTION_startFreezingScreen> = 39;

        <android.view.IWindowManager$Stub: int TRANSACTION_startAppFreezingScreen> = 34;

        <android.view.IWindowManager$Stub: int TRANSACTION_showStrictModeViolation> = 54;

        <android.view.IWindowManager$Stub: int TRANSACTION_setTouchExplorationEnabled> = 76;

        <android.view.IWindowManager$Stub: int TRANSACTION_setStrictModeVisualIndicatorPreference> = 55;

        <android.view.IWindowManager$Stub: int TRANSACTION_setOverscan> = 14;

        <android.view.IWindowManager$Stub: int TRANSACTION_setNewConfiguration> = 38;

        <android.view.IWindowManager$Stub: int TRANSACTION_setMagnificationSpec> = 74;

        <android.view.IWindowManager$Stub: int TRANSACTION_setMagnificationCallbacks> = 73;

        <android.view.IWindowManager$Stub: int TRANSACTION_setInputFilter> = 70;

        <android.view.IWindowManager$Stub: int TRANSACTION_setInTouchMode> = 53;

        <android.view.IWindowManager$Stub: int TRANSACTION_setForcedDisplaySize> = 8;

        <android.view.IWindowManager$Stub: int TRANSACTION_setForcedDisplayDensity> = 12;

        <android.view.IWindowManager$Stub: int TRANSACTION_setFocusedApp> = 24;

        <android.view.IWindowManager$Stub: int TRANSACTION_setEventDispatching> = 17;

        <android.view.IWindowManager$Stub: int TRANSACTION_setAppWillBeHidden> = 32;

        <android.view.IWindowManager$Stub: int TRANSACTION_setAppVisibility> = 33;

        <android.view.IWindowManager$Stub: int TRANSACTION_setAppStartingWindow> = 31;

        <android.view.IWindowManager$Stub: int TRANSACTION_setAppOrientation> = 22;

        <android.view.IWindowManager$Stub: int TRANSACTION_setAppGroupId> = 21;

        <android.view.IWindowManager$Stub: int TRANSACTION_setAnimationScales> = 52;

        <android.view.IWindowManager$Stub: int TRANSACTION_setAnimationScale> = 51;

        <android.view.IWindowManager$Stub: int TRANSACTION_screenshotApplications> = 64;

        <android.view.IWindowManager$Stub: int TRANSACTION_resumeKeyDispatching> = 16;

        <android.view.IWindowManager$Stub: int TRANSACTION_removeWindowToken> = 19;

        <android.view.IWindowManager$Stub: int TRANSACTION_removeRotationWatcher> = 59;

        <android.view.IWindowManager$Stub: int TRANSACTION_removeAppToken> = 36;

        <android.view.IWindowManager$Stub: int TRANSACTION_reenableKeyguard> = 42;

        <android.view.IWindowManager$Stub: int TRANSACTION_prepareAppTransition> = 25;

        <android.view.IWindowManager$Stub: int TRANSACTION_pauseKeyDispatching> = 15;

        <android.view.IWindowManager$Stub: int TRANSACTION_overridePendingAppTransitionThumb> = 29;

        <android.view.IWindowManager$Stub: int TRANSACTION_overridePendingAppTransitionScaleUp> = 28;

        <android.view.IWindowManager$Stub: int TRANSACTION_overridePendingAppTransition> = 27;

        <android.view.IWindowManager$Stub: int TRANSACTION_openSession> = 4;

        <android.view.IWindowManager$Stub: int TRANSACTION_lockNow> = 68;

        <android.view.IWindowManager$Stub: int TRANSACTION_isViewServerRunning> = 3;

        <android.view.IWindowManager$Stub: int TRANSACTION_isSafeModeEnabled> = 72;

        <android.view.IWindowManager$Stub: int TRANSACTION_isRotationFrozen> = 63;

        <android.view.IWindowManager$Stub: int TRANSACTION_isKeyguardSecure> = 45;

        <android.view.IWindowManager$Stub: int TRANSACTION_isKeyguardLocked> = 44;

        <android.view.IWindowManager$Stub: int TRANSACTION_inputMethodClientHasFocus> = 5;

        <android.view.IWindowManager$Stub: int TRANSACTION_inKeyguardRestrictedInputMode> = 46;

        <android.view.IWindowManager$Stub: int TRANSACTION_hasNavigationBar> = 67;

        <android.view.IWindowManager$Stub: int TRANSACTION_getWindowFrame> = 71;

        <android.view.IWindowManager$Stub: int TRANSACTION_getRotation> = 57;

        <android.view.IWindowManager$Stub: int TRANSACTION_getPreferredOptionsPanelGravity> = 60;

        <android.view.IWindowManager$Stub: int TRANSACTION_getPendingAppTransition> = 26;

        <android.view.IWindowManager$Stub: int TRANSACTION_getInitialDisplaySize> = 6;

        <android.view.IWindowManager$Stub: int TRANSACTION_getInitialDisplayDensity> = 10;

        <android.view.IWindowManager$Stub: int TRANSACTION_getFocusedWindowToken> = 69;

        <android.view.IWindowManager$Stub: int TRANSACTION_getCompatibleMagnificationSpecForWindow> = 75;

        <android.view.IWindowManager$Stub: int TRANSACTION_getBaseDisplaySize> = 7;

        <android.view.IWindowManager$Stub: int TRANSACTION_getBaseDisplayDensity> = 11;

        <android.view.IWindowManager$Stub: int TRANSACTION_getAppOrientation> = 23;

        <android.view.IWindowManager$Stub: int TRANSACTION_getAnimationScales> = 50;

        <android.view.IWindowManager$Stub: int TRANSACTION_getAnimationScale> = 49;

        <android.view.IWindowManager$Stub: int TRANSACTION_freezeRotation> = 61;

        <android.view.IWindowManager$Stub: int TRANSACTION_exitKeyguardSecurely> = 43;

        <android.view.IWindowManager$Stub: int TRANSACTION_executeAppTransition> = 30;

        <android.view.IWindowManager$Stub: int TRANSACTION_dismissKeyguard> = 47;

        <android.view.IWindowManager$Stub: int TRANSACTION_disableKeyguard> = 41;

        <android.view.IWindowManager$Stub: int TRANSACTION_closeSystemDialogs> = 48;

        <android.view.IWindowManager$Stub: int TRANSACTION_clearForcedDisplaySize> = 9;

        <android.view.IWindowManager$Stub: int TRANSACTION_clearForcedDisplayDensity> = 13;

        <android.view.IWindowManager$Stub: int TRANSACTION_addWindowToken> = 18;

        <android.view.IWindowManager$Stub: int TRANSACTION_addAppToken> = 20;

        <android.view.IWindowManager$Stub: java.lang.String DESCRIPTOR> = "android.view.IWindowManager";

        return;
    }
}
