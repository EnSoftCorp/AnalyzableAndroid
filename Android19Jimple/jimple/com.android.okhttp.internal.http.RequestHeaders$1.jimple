class com.android.okhttp.internal.http.RequestHeaders$1 extends java.lang.Object implements com.android.okhttp.internal.http.HeaderParser$CacheControlHandler
{
    final com.android.okhttp.internal.http.RequestHeaders this$0;

    void <init>(com.android.okhttp.internal.http.RequestHeaders)
    {
        com.android.okhttp.internal.http.RequestHeaders$1 r0;
        com.android.okhttp.internal.http.RequestHeaders r1;

        r0 := @this: com.android.okhttp.internal.http.RequestHeaders$1;

        r1 := @parameter0: com.android.okhttp.internal.http.RequestHeaders;

        r0.<com.android.okhttp.internal.http.RequestHeaders$1: com.android.okhttp.internal.http.RequestHeaders this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void handle(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.RequestHeaders$1 r0;
        java.lang.String r1, r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.okhttp.internal.http.RequestHeaders $r8, $r9, $r10, $r11, $r12;
        int $i1, $i2, $i5;

        r0 := @this: com.android.okhttp.internal.http.RequestHeaders$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = "no-cache";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        $r12 = r0.<com.android.okhttp.internal.http.RequestHeaders$1: com.android.okhttp.internal.http.RequestHeaders this$0>;

        staticinvoke <com.android.okhttp.internal.http.RequestHeaders: boolean access$002(com.android.okhttp.internal.http.RequestHeaders,boolean)>($r12, 1);

     label1:
        return;

     label2:
        $r4 = "max-age";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        $r11 = r0.<com.android.okhttp.internal.http.RequestHeaders$1: com.android.okhttp.internal.http.RequestHeaders this$0>;

        $i5 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int parseSeconds(java.lang.String)>(r2);

        staticinvoke <com.android.okhttp.internal.http.RequestHeaders: int access$102(com.android.okhttp.internal.http.RequestHeaders,int)>($r11, $i5);

        return;

     label3:
        $r5 = "max-stale";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z2 == 0 goto label4;

        $r10 = r0.<com.android.okhttp.internal.http.RequestHeaders$1: com.android.okhttp.internal.http.RequestHeaders this$0>;

        $i2 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int parseSeconds(java.lang.String)>(r2);

        staticinvoke <com.android.okhttp.internal.http.RequestHeaders: int access$202(com.android.okhttp.internal.http.RequestHeaders,int)>($r10, $i2);

        return;

     label4:
        $r6 = "min-fresh";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z3 == 0 goto label5;

        $r9 = r0.<com.android.okhttp.internal.http.RequestHeaders$1: com.android.okhttp.internal.http.RequestHeaders this$0>;

        $i1 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int parseSeconds(java.lang.String)>(r2);

        staticinvoke <com.android.okhttp.internal.http.RequestHeaders: int access$302(com.android.okhttp.internal.http.RequestHeaders,int)>($r9, $i1);

        return;

     label5:
        $r7 = "only-if-cached";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z4 == 0 goto label1;

        $r8 = r0.<com.android.okhttp.internal.http.RequestHeaders$1: com.android.okhttp.internal.http.RequestHeaders this$0>;

        staticinvoke <com.android.okhttp.internal.http.RequestHeaders: boolean access$402(com.android.okhttp.internal.http.RequestHeaders,boolean)>($r8, 1);

        return;
    }
}
