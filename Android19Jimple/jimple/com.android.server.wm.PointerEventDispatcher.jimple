public class com.android.server.wm.PointerEventDispatcher extends android.view.InputEventReceiver
{
    java.util.ArrayList mListeners;
    android.view.WindowManagerPolicy$PointerEventListener[] mListenersArray;

    public void <init>(android.view.InputChannel)
    {
        com.android.server.wm.PointerEventDispatcher r0;
        android.view.InputChannel r1;
        android.os.Handler $r2;
        android.os.Looper $r3;
        java.util.ArrayList $r4;
        android.view.WindowManagerPolicy$PointerEventListener[] $r5;

        r0 := @this: com.android.server.wm.PointerEventDispatcher;

        r1 := @parameter0: android.view.InputChannel;

        $r2 = staticinvoke <com.android.server.UiThread: android.os.Handler getHandler()>();

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke r0.<android.view.InputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper)>(r1, $r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners> = $r4;

        $r5 = newarray (android.view.WindowManagerPolicy$PointerEventListener)[0];

        r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicy$PointerEventListener[] mListenersArray> = $r5;

        return;
    }

    public void onInputEvent(android.view.InputEvent)
    {
        com.android.server.wm.PointerEventDispatcher r0;
        android.view.InputEvent r1;
        java.lang.Throwable r2, r5, $r13, $r15;
        android.view.MotionEvent r3;
        java.util.ArrayList r4, $r8, $r11;
        android.view.WindowManagerPolicy$PointerEventListener[] r6, $r7, $r10, $r12;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        android.view.WindowManagerPolicy$PointerEventListener $r9;

        r0 := @this: com.android.server.wm.PointerEventDispatcher;

        r1 := @parameter0: android.view.InputEvent;

     label01:
        $z0 = r1 instanceof android.view.MotionEvent;

        if $z0 == 0 goto label11;

        $i1 = virtualinvoke r1.<android.view.InputEvent: int getSource()>();

        $i2 = 2 & $i1;

        if $i2 == 0 goto label11;

        r3 = (android.view.MotionEvent) r1;

        r4 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        entermonitor r4;

     label02:
        $r7 = r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicy$PointerEventListener[] mListenersArray>;

        if $r7 != null goto label03;

        $r8 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        $i4 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $r10 = newarray (android.view.WindowManagerPolicy$PointerEventListener)[$i4];

        r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicy$PointerEventListener[] mListenersArray> = $r10;

        $r11 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        $r12 = r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicy$PointerEventListener[] mListenersArray>;

        virtualinvoke $r11.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r12);

     label03:
        r6 = r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicy$PointerEventListener[] mListenersArray>;

        exitmonitor r4;

     label04:
        i0 = 0;

     label05:
        $i3 = lengthof r6;

        if i0 >= $i3 goto label11;

        $r9 = r6[i0];

        interfaceinvoke $r9.<android.view.WindowManagerPolicy$PointerEventListener: void onPointerEvent(android.view.MotionEvent)>(r3);

     label06:
        i0 = i0 + 1;

        goto label05;

     label07:
        $r13 := @caughtexception;

        r5 = $r13;

     label08:
        exitmonitor r4;

     label09:
        throw r5;

     label10:
        $r15 := @caughtexception;

        r2 = $r15;

        virtualinvoke r0.<com.android.server.wm.PointerEventDispatcher: void finishInputEvent(android.view.InputEvent,boolean)>(r1, 0);

        throw r2;

     label11:
        virtualinvoke r0.<com.android.server.wm.PointerEventDispatcher: void finishInputEvent(android.view.InputEvent,boolean)>(r1, 0);

        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public void registerInputEventListener(android.view.WindowManagerPolicy$PointerEventListener)
    {
        com.android.server.wm.PointerEventDispatcher r0;
        android.view.WindowManagerPolicy$PointerEventListener r1;
        java.util.ArrayList r2, $r4, $r5;
        java.lang.Throwable r3, $r12;
        boolean $z0;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.wm.PointerEventDispatcher;

        r1 := @parameter0: android.view.WindowManagerPolicy$PointerEventListener;

        r2 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label5;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerInputEventListener: trying to register");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" twice.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label2:
        $r12 := @caughtexception;

        r3 = $r12;

     label3:
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        $r5 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicy$PointerEventListener[] mListenersArray> = null;

        exitmonitor r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }

    public void unregisterInputEventListener(android.view.WindowManagerPolicy$PointerEventListener)
    {
        com.android.server.wm.PointerEventDispatcher r0;
        android.view.WindowManagerPolicy$PointerEventListener r1;
        java.util.ArrayList r2, $r4, $r5;
        java.lang.Throwable r3, $r12;
        boolean $z0;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.wm.PointerEventDispatcher;

        r1 := @parameter0: android.view.WindowManagerPolicy$PointerEventListener;

        r2 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label5;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerInputEventListener: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not registered.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label2:
        $r12 := @caughtexception;

        r3 = $r12;

     label3:
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        $r5 = r0.<com.android.server.wm.PointerEventDispatcher: java.util.ArrayList mListeners>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r0.<com.android.server.wm.PointerEventDispatcher: android.view.WindowManagerPolicy$PointerEventListener[] mListenersArray> = null;

        exitmonitor r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
    }
}
