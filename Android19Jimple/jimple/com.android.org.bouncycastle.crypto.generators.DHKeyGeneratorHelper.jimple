class com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper extends java.lang.Object
{
    static final com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper INSTANCE;
    private static final java.math.BigInteger ONE;
    private static final java.math.BigInteger TWO;

    static void <clinit>()
    {
        com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper $r0;
        java.math.BigInteger $r1, $r2;

        $r0 = new com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper;

        specialinvoke $r0.<com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: void <init>()>();

        <com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper INSTANCE> = $r0;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        <com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: java.math.BigInteger ONE> = $r1;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

        <com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: java.math.BigInteger TWO> = $r2;

        return;
    }

    private void <init>()
    {
        com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper r0;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    java.math.BigInteger calculatePrivate(com.android.org.bouncycastle.crypto.params.DHParameters, java.security.SecureRandom)
    {
        com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper r0;
        com.android.org.bouncycastle.crypto.params.DHParameters r1;
        java.security.SecureRandom r2;
        java.math.BigInteger r3, r4, r5, r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.params.DHParameters;

        r2 := @parameter1: java.security.SecureRandom;

        r3 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        i0 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DHParameters: int getL()>();

        if i0 == 0 goto label1;

        $r11 = new java.math.BigInteger;

        specialinvoke $r11.<java.math.BigInteger: void <init>(int,java.util.Random)>(i0, r2);

        $i3 = i0 - 1;

        $r12 = virtualinvoke $r11.<java.math.BigInteger: java.math.BigInteger setBit(int)>($i3);

        return $r12;

     label1:
        r4 = <com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: java.math.BigInteger TWO>;

        i1 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DHParameters: int getM()>();

        if i1 == 0 goto label2;

        $r10 = <com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: java.math.BigInteger ONE>;

        $i2 = i1 - 1;

        r4 = virtualinvoke $r10.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>($i2);

     label2:
        $r7 = <com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: java.math.BigInteger TWO>;

        r5 = virtualinvoke r3.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r7);

        r6 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getQ()>();

        if r6 == null goto label3;

        $r9 = <com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper: java.math.BigInteger TWO>;

        r5 = virtualinvoke r6.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r9);

     label3:
        $r8 = staticinvoke <com.android.org.bouncycastle.util.BigIntegers: java.math.BigInteger createRandomInRange(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>(r4, r5, r2);

        return $r8;
    }

    java.math.BigInteger calculatePublic(com.android.org.bouncycastle.crypto.params.DHParameters, java.math.BigInteger)
    {
        com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper r0;
        com.android.org.bouncycastle.crypto.params.DHParameters r1;
        java.math.BigInteger r2, $r3, $r4, $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.generators.DHKeyGeneratorHelper;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.params.DHParameters;

        r2 := @parameter1: java.math.BigInteger;

        $r3 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getG()>();

        $r4 = virtualinvoke r1.<com.android.org.bouncycastle.crypto.params.DHParameters: java.math.BigInteger getP()>();

        $r5 = virtualinvoke $r3.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r2, $r4);

        return $r5;
    }
}
