public final class android.view.VelocityTracker$Estimator extends java.lang.Object
{
    private static final int MAX_DEGREE;
    public float confidence;
    public int degree;
    public final float[] xCoeff;
    public final float[] yCoeff;

    public void <init>()
    {
        android.view.VelocityTracker$Estimator r0;
        float[] $r1, $r2;

        r0 := @this: android.view.VelocityTracker$Estimator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[5];

        r0.<android.view.VelocityTracker$Estimator: float[] xCoeff> = $r1;

        $r2 = newarray (float)[5];

        r0.<android.view.VelocityTracker$Estimator: float[] yCoeff> = $r2;

        return;
    }

    private float estimate(float, float[])
    {
        android.view.VelocityTracker$Estimator r0;
        float f0, f1, f2, $f3, $f4;
        float[] r1;
        int i0, $i1;

        r0 := @this: android.view.VelocityTracker$Estimator;

        f0 := @parameter0: float;

        r1 := @parameter1: float[];

        f1 = 0.0F;

        f2 = 1.0F;

        i0 = 0;

     label1:
        $i1 = r0.<android.view.VelocityTracker$Estimator: int degree>;

        if i0 > $i1 goto label2;

        $f3 = r1[i0];

        $f4 = f2 * $f3;

        f1 = f1 + $f4;

        f2 = f2 * f0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return f1;
    }

    public float estimateX(float)
    {
        android.view.VelocityTracker$Estimator r0;
        float f0, $f1;
        float[] $r1;

        r0 := @this: android.view.VelocityTracker$Estimator;

        f0 := @parameter0: float;

        $r1 = r0.<android.view.VelocityTracker$Estimator: float[] xCoeff>;

        $f1 = specialinvoke r0.<android.view.VelocityTracker$Estimator: float estimate(float,float[])>(f0, $r1);

        return $f1;
    }

    public float estimateY(float)
    {
        android.view.VelocityTracker$Estimator r0;
        float f0, $f1;
        float[] $r1;

        r0 := @this: android.view.VelocityTracker$Estimator;

        f0 := @parameter0: float;

        $r1 = r0.<android.view.VelocityTracker$Estimator: float[] yCoeff>;

        $f1 = specialinvoke r0.<android.view.VelocityTracker$Estimator: float estimate(float,float[])>(f0, $r1);

        return $f1;
    }

    public float getXCoeff(int)
    {
        android.view.VelocityTracker$Estimator r0;
        int i0, $i1;
        float[] $r1;
        float $f0;

        r0 := @this: android.view.VelocityTracker$Estimator;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.VelocityTracker$Estimator: int degree>;

        if i0 > $i1 goto label1;

        $r1 = r0.<android.view.VelocityTracker$Estimator: float[] xCoeff>;

        $f0 = $r1[i0];

        return $f0;

     label1:
        return 0.0F;
    }

    public float getYCoeff(int)
    {
        android.view.VelocityTracker$Estimator r0;
        int i0, $i1;
        float[] $r1;
        float $f0;

        r0 := @this: android.view.VelocityTracker$Estimator;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.VelocityTracker$Estimator: int degree>;

        if i0 > $i1 goto label1;

        $r1 = r0.<android.view.VelocityTracker$Estimator: float[] yCoeff>;

        $f0 = $r1[i0];

        return $f0;

     label1:
        return 0.0F;
    }

    public static void <clinit>()
    {
        <android.view.VelocityTracker$Estimator: int MAX_DEGREE> = 4;

        return;
    }
}
