public final class com.android.internal.os.BackgroundThread extends android.os.HandlerThread
{
    private static android.os.Handler sHandler;
    private static com.android.internal.os.BackgroundThread sInstance;

    private void <init>()
    {
        com.android.internal.os.BackgroundThread r0;

        r0 := @this: com.android.internal.os.BackgroundThread;

        specialinvoke r0.<android.os.HandlerThread: void <init>(java.lang.String,int)>("android.bg", 10);

        return;
    }

    private static void ensureThreadLocked()
    {
        com.android.internal.os.BackgroundThread $r0, $r1, $r2, $r4;
        android.os.Handler $r3;
        android.os.Looper $r5;

        $r0 = <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread sInstance>;

        if $r0 != null goto label1;

        $r1 = new com.android.internal.os.BackgroundThread;

        specialinvoke $r1.<com.android.internal.os.BackgroundThread: void <init>()>();

        <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread sInstance> = $r1;

        $r2 = <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread sInstance>;

        virtualinvoke $r2.<com.android.internal.os.BackgroundThread: void start()>();

        $r3 = new android.os.Handler;

        $r4 = <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread sInstance>;

        $r5 = virtualinvoke $r4.<com.android.internal.os.BackgroundThread: android.os.Looper getLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        <com.android.internal.os.BackgroundThread: android.os.Handler sHandler> = $r3;

     label1:
        return;
    }

    public static com.android.internal.os.BackgroundThread get()
    {
        java.lang.Throwable r0, $r2;
        com.android.internal.os.BackgroundThread r1;

        entermonitor class "com/android/internal/os/BackgroundThread";

     label1:
        staticinvoke <com.android.internal.os.BackgroundThread: void ensureThreadLocked()>();

        r1 = <com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread sInstance>;

        exitmonitor class "com/android/internal/os/BackgroundThread";

     label2:
        return r1;

     label3:
        $r2 := @caughtexception;

        r0 = $r2;

     label4:
        exitmonitor class "com/android/internal/os/BackgroundThread";

     label5:
        throw r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static android.os.Handler getHandler()
    {
        java.lang.Throwable r0, $r2;
        android.os.Handler r1;

        entermonitor class "com/android/internal/os/BackgroundThread";

     label1:
        staticinvoke <com.android.internal.os.BackgroundThread: void ensureThreadLocked()>();

        r1 = <com.android.internal.os.BackgroundThread: android.os.Handler sHandler>;

        exitmonitor class "com/android/internal/os/BackgroundThread";

     label2:
        return r1;

     label3:
        $r2 := @caughtexception;

        r0 = $r2;

     label4:
        exitmonitor class "com/android/internal/os/BackgroundThread";

     label5:
        throw r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
