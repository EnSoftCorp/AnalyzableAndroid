public class gov.nist.javax.sip.parser.AllowParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.AllowParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.AllowParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.AllowParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.AllowParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.AllowParser r0;
        gov.nist.javax.sip.header.AllowList r1, $r5;
        java.lang.Throwable r2, $r28;
        gov.nist.javax.sip.header.Allow r3, r4, $r6, $r20;
        boolean $z0, $z2, $z4;
        gov.nist.core.LexerCore $r7, $r8, $r10, $r13, $r14, $r15, $r16, $r19, $r21, $r23, $r25, $r27;
        java.lang.String $r11, $r24;
        gov.nist.core.Token $r12, $r26;
        char $c0;

        r0 := @this: gov.nist.javax.sip.parser.AllowParser;

        $z0 = <gov.nist.javax.sip.parser.AllowParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.AllowParser: void dbg_enter(java.lang.String)>("AllowParser.parse");

     label1:
        $r5 = new gov.nist.javax.sip.header.AllowList;

        specialinvoke $r5.<gov.nist.javax.sip.header.AllowList: void <init>()>();

        r1 = $r5;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.parser.AllowParser: void headerName(int)>(2069);

        $r6 = new gov.nist.javax.sip.header.Allow;

        specialinvoke $r6.<gov.nist.javax.sip.header.Allow: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<gov.nist.javax.sip.header.Allow: void setHeaderName(java.lang.String)>("Allow");

        $r7 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r10 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        $r12 = virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r11 = virtualinvoke $r12.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r3.<gov.nist.javax.sip.header.Allow: void setMethod(java.lang.String)>($r11);

        virtualinvoke r1.<gov.nist.javax.sip.header.AllowList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r3);

        $r13 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void SPorHT()>();

     label3:
        $r14 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r14.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 44 goto label7;

        $r19 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r21 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r21.<gov.nist.core.LexerCore: void SPorHT()>();

        $r20 = new gov.nist.javax.sip.header.Allow;

        specialinvoke $r20.<gov.nist.javax.sip.header.Allow: void <init>()>();

        r4 = $r20;

        $r23 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r23.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r25 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        $r26 = virtualinvoke $r25.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r24 = virtualinvoke $r26.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r4.<gov.nist.javax.sip.header.Allow: void setMethod(java.lang.String)>($r24);

        virtualinvoke r1.<gov.nist.javax.sip.header.AllowList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r4);

        $r27 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r27.<gov.nist.core.LexerCore: void SPorHT()>();

     label4:
        goto label3;

     label5:
        $r28 := @caughtexception;

        r2 = $r28;

        $z4 = <gov.nist.javax.sip.parser.AllowParser: boolean debug>;

        if $z4 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.AllowParser: void dbg_leave(java.lang.String)>("AllowParser.parse");

     label6:
        throw r2;

     label7:
        $r16 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: void SPorHT()>();

        $r15 = r0.<gov.nist.javax.sip.parser.AllowParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

     label8:
        $z2 = <gov.nist.javax.sip.parser.AllowParser: boolean debug>;

        if $z2 == 0 goto label9;

        virtualinvoke r0.<gov.nist.javax.sip.parser.AllowParser: void dbg_leave(java.lang.String)>("AllowParser.parse");

     label9:
        return r1;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }
}
