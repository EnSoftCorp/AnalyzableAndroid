public class android.graphics.Paint extends java.lang.Object
{
    public static final int ANTI_ALIAS_FLAG;
    public static final int AUTO_HINTING_TEXT_FLAG;
    public static final int BIDI_DEFAULT_LTR;
    public static final int BIDI_DEFAULT_RTL;
    private static final int BIDI_FLAG_MASK;
    public static final int BIDI_FORCE_LTR;
    public static final int BIDI_FORCE_RTL;
    public static final int BIDI_LTR;
    private static final int BIDI_MAX_FLAG_VALUE;
    public static final int BIDI_RTL;
    public static final int CURSOR_AFTER;
    public static final int CURSOR_AT;
    public static final int CURSOR_AT_OR_AFTER;
    public static final int CURSOR_AT_OR_BEFORE;
    public static final int CURSOR_BEFORE;
    private static final int CURSOR_OPT_MAX_VALUE;
    static final int DEFAULT_PAINT_FLAGS;
    public static final int DEV_KERN_TEXT_FLAG;
    public static final int DIRECTION_LTR;
    public static final int DIRECTION_RTL;
    public static final int DITHER_FLAG;
    public static final int EMBEDDED_BITMAP_TEXT_FLAG;
    public static final int FAKE_BOLD_TEXT_FLAG;
    public static final int FILTER_BITMAP_FLAG;
    public static final int HINTING_OFF;
    public static final int HINTING_ON;
    public static final int LCD_RENDER_TEXT_FLAG;
    public static final int LINEAR_TEXT_FLAG;
    public static final int STRIKE_THRU_TEXT_FLAG;
    public static final int SUBPIXEL_TEXT_FLAG;
    public static final int UNDERLINE_TEXT_FLAG;
    public static final int VERTICAL_TEXT_FLAG;
    static final android.graphics.Paint$Align[] sAlignArray;
    static final android.graphics.Paint$Cap[] sCapArray;
    static final android.graphics.Paint$Join[] sJoinArray;
    static final android.graphics.Paint$Style[] sStyleArray;
    public boolean hasShadow;
    public int mBidiFlags;
    private android.graphics.ColorFilter mColorFilter;
    private float mCompatScaling;
    private boolean mHasCompatScaling;
    private float mInvCompatScaling;
    private java.util.Locale mLocale;
    private android.graphics.MaskFilter mMaskFilter;
    public int mNativePaint;
    private android.graphics.PathEffect mPathEffect;
    private android.graphics.Rasterizer mRasterizer;
    private android.graphics.Shader mShader;
    private android.graphics.Typeface mTypeface;
    private android.graphics.Xfermode mXfermode;
    public int shadowColor;
    public float shadowDx;
    public float shadowDy;
    public float shadowRadius;

    static void <clinit>()
    {
        android.graphics.Paint$Style[] r0;
        android.graphics.Paint$Cap[] r1;
        android.graphics.Paint$Join[] r2;
        android.graphics.Paint$Align[] r3;
        android.graphics.Paint$Style $r4, $r5, $r6;
        android.graphics.Paint$Cap $r7, $r8, $r9;
        android.graphics.Paint$Join $r10, $r11, $r12;
        android.graphics.Paint$Align $r13, $r14, $r15;

        <android.graphics.Paint: int VERTICAL_TEXT_FLAG> = 4096;

        <android.graphics.Paint: int UNDERLINE_TEXT_FLAG> = 8;

        <android.graphics.Paint: int SUBPIXEL_TEXT_FLAG> = 128;

        <android.graphics.Paint: int STRIKE_THRU_TEXT_FLAG> = 16;

        <android.graphics.Paint: int LINEAR_TEXT_FLAG> = 64;

        <android.graphics.Paint: int LCD_RENDER_TEXT_FLAG> = 512;

        <android.graphics.Paint: int HINTING_ON> = 1;

        <android.graphics.Paint: int HINTING_OFF> = 0;

        <android.graphics.Paint: int FILTER_BITMAP_FLAG> = 2;

        <android.graphics.Paint: int FAKE_BOLD_TEXT_FLAG> = 32;

        <android.graphics.Paint: int EMBEDDED_BITMAP_TEXT_FLAG> = 1024;

        <android.graphics.Paint: int DITHER_FLAG> = 4;

        <android.graphics.Paint: int DIRECTION_RTL> = 1;

        <android.graphics.Paint: int DIRECTION_LTR> = 0;

        <android.graphics.Paint: int DEV_KERN_TEXT_FLAG> = 256;

        <android.graphics.Paint: int DEFAULT_PAINT_FLAGS> = 1280;

        <android.graphics.Paint: int CURSOR_OPT_MAX_VALUE> = 4;

        <android.graphics.Paint: int CURSOR_BEFORE> = 2;

        <android.graphics.Paint: int CURSOR_AT_OR_BEFORE> = 3;

        <android.graphics.Paint: int CURSOR_AT_OR_AFTER> = 1;

        <android.graphics.Paint: int CURSOR_AT> = 4;

        <android.graphics.Paint: int CURSOR_AFTER> = 0;

        <android.graphics.Paint: int BIDI_RTL> = 1;

        <android.graphics.Paint: int BIDI_MAX_FLAG_VALUE> = 5;

        <android.graphics.Paint: int BIDI_LTR> = 0;

        <android.graphics.Paint: int BIDI_FORCE_RTL> = 5;

        <android.graphics.Paint: int BIDI_FORCE_LTR> = 4;

        <android.graphics.Paint: int BIDI_FLAG_MASK> = 7;

        <android.graphics.Paint: int BIDI_DEFAULT_RTL> = 3;

        <android.graphics.Paint: int BIDI_DEFAULT_LTR> = 2;

        <android.graphics.Paint: int AUTO_HINTING_TEXT_FLAG> = 2048;

        <android.graphics.Paint: int ANTI_ALIAS_FLAG> = 1;

        r0 = newarray (android.graphics.Paint$Style)[3];

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        r0[0] = $r4;

        $r5 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        r0[1] = $r5;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL_AND_STROKE>;

        r0[2] = $r6;

        <android.graphics.Paint: android.graphics.Paint$Style[] sStyleArray> = r0;

        r1 = newarray (android.graphics.Paint$Cap)[3];

        $r7 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap BUTT>;

        r1[0] = $r7;

        $r8 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        r1[1] = $r8;

        $r9 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;

        r1[2] = $r9;

        <android.graphics.Paint: android.graphics.Paint$Cap[] sCapArray> = r1;

        r2 = newarray (android.graphics.Paint$Join)[3];

        $r10 = <android.graphics.Paint$Join: android.graphics.Paint$Join MITER>;

        r2[0] = $r10;

        $r11 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        r2[1] = $r11;

        $r12 = <android.graphics.Paint$Join: android.graphics.Paint$Join BEVEL>;

        r2[2] = $r12;

        <android.graphics.Paint: android.graphics.Paint$Join[] sJoinArray> = r2;

        r3 = newarray (android.graphics.Paint$Align)[3];

        $r13 = <android.graphics.Paint$Align: android.graphics.Paint$Align LEFT>;

        r3[0] = $r13;

        $r14 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        r3[1] = $r14;

        $r15 = <android.graphics.Paint$Align: android.graphics.Paint$Align RIGHT>;

        r3[2] = $r15;

        <android.graphics.Paint: android.graphics.Paint$Align[] sAlignArray> = r3;

        return;
    }

    public void <init>()
    {
        android.graphics.Paint r0;

        r0 := @this: android.graphics.Paint;

        specialinvoke r0.<android.graphics.Paint: void <init>(int)>(0);

        return;
    }

    public void <init>(int)
    {
        android.graphics.Paint r0;
        int i0, $i1, $i2;
        java.util.Locale $r1;

        r0 := @this: android.graphics.Paint;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.Paint: int mBidiFlags> = 2;

        $i1 = staticinvoke <android.graphics.Paint: int native_init()>();

        r0.<android.graphics.Paint: int mNativePaint> = $i1;

        $i2 = i0 | 1280;

        virtualinvoke r0.<android.graphics.Paint: void setFlags(int)>($i2);

        r0.<android.graphics.Paint: float mInvCompatScaling> = 1.0F;

        r0.<android.graphics.Paint: float mCompatScaling> = 1.0F;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        virtualinvoke r0.<android.graphics.Paint: void setTextLocale(java.util.Locale)>($r1);

        return;
    }

    public void <init>(android.graphics.Paint)
    {
        android.graphics.Paint r0, r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Paint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.graphics.Paint: int mBidiFlags> = 2;

        $i0 = r1.<android.graphics.Paint: int mNativePaint>;

        $i1 = staticinvoke <android.graphics.Paint: int native_initWithPaint(int)>($i0);

        r0.<android.graphics.Paint: int mNativePaint> = $i1;

        specialinvoke r0.<android.graphics.Paint: void setClassVariablesFrom(android.graphics.Paint)>(r1);

        return;
    }

    private static native void finalizer(int);

    private native void nSetShadowLayer(float, float, float, int);

    private static native void nativeGetCharArrayBounds(int, char[], int, int, int, android.graphics.Rect);

    private static native void nativeGetStringBounds(int, java.lang.String, int, int, int, android.graphics.Rect);

    private native int native_breakText(java.lang.String, boolean, float, int, float[]);

    private native int native_breakText(char[], int, int, float, int, float[]);

    private static native boolean native_getFillPath(int, int, int);

    private static native int native_getStrokeCap(int);

    private static native int native_getStrokeJoin(int);

    private static native int native_getStyle(int);

    private static native int native_getTextAlign(int);

    private static native int native_getTextGlyphs(int, java.lang.String, int, int, int, int, int, char[]);

    private static native void native_getTextPath(int, int, java.lang.String, int, int, float, float, int);

    private static native void native_getTextPath(int, int, char[], int, int, float, float, int);

    private static native float native_getTextRunAdvances(int, java.lang.String, int, int, int, int, int, float[], int);

    private static native float native_getTextRunAdvances(int, char[], int, int, int, int, int, float[], int);

    private native int native_getTextRunCursor(int, java.lang.String, int, int, int, int, int);

    private native int native_getTextRunCursor(int, char[], int, int, int, int, int);

    private static native int native_getTextWidths(int, java.lang.String, int, int, int, float[]);

    private static native int native_getTextWidths(int, char[], int, int, int, float[]);

    private static native int native_init();

    private static native int native_initWithPaint(int);

    private native float native_measureText(java.lang.String, int);

    private native float native_measureText(java.lang.String, int, int, int);

    private native float native_measureText(char[], int, int, int);

    private static native void native_reset(int);

    private static native void native_set(int, int);

    private static native int native_setColorFilter(int, int);

    private static native int native_setMaskFilter(int, int);

    private static native int native_setPathEffect(int, int);

    private static native int native_setRasterizer(int, int);

    private static native int native_setShader(int, int);

    private static native void native_setStrokeCap(int, int);

    private static native void native_setStrokeJoin(int, int);

    private static native void native_setStyle(int, int);

    private static native void native_setTextAlign(int, int);

    private static native void native_setTextLocale(int, java.lang.String);

    private static native int native_setTypeface(int, int);

    private static native int native_setXfermode(int, int);

    private void setClassVariablesFrom(android.graphics.Paint)
    {
        android.graphics.Paint r0, r1;
        android.graphics.ColorFilter $r2;
        android.graphics.MaskFilter $r3;
        android.graphics.PathEffect $r4;
        android.graphics.Rasterizer $r5;
        android.graphics.Shader $r6, $r9, $r11;
        android.graphics.Typeface $r7;
        android.graphics.Xfermode $r8;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4;
        int $i0, $i1;
        java.util.Locale $r10;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Paint;

        $r2 = r1.<android.graphics.Paint: android.graphics.ColorFilter mColorFilter>;

        r0.<android.graphics.Paint: android.graphics.ColorFilter mColorFilter> = $r2;

        $r3 = r1.<android.graphics.Paint: android.graphics.MaskFilter mMaskFilter>;

        r0.<android.graphics.Paint: android.graphics.MaskFilter mMaskFilter> = $r3;

        $r4 = r1.<android.graphics.Paint: android.graphics.PathEffect mPathEffect>;

        r0.<android.graphics.Paint: android.graphics.PathEffect mPathEffect> = $r4;

        $r5 = r1.<android.graphics.Paint: android.graphics.Rasterizer mRasterizer>;

        r0.<android.graphics.Paint: android.graphics.Rasterizer mRasterizer> = $r5;

        $r6 = r1.<android.graphics.Paint: android.graphics.Shader mShader>;

        if $r6 == null goto label2;

        $r9 = r1.<android.graphics.Paint: android.graphics.Shader mShader>;

        $r11 = virtualinvoke $r9.<android.graphics.Shader: android.graphics.Shader copy()>();

        r0.<android.graphics.Paint: android.graphics.Shader mShader> = $r11;

     label1:
        $r7 = r1.<android.graphics.Paint: android.graphics.Typeface mTypeface>;

        r0.<android.graphics.Paint: android.graphics.Typeface mTypeface> = $r7;

        $r8 = r1.<android.graphics.Paint: android.graphics.Xfermode mXfermode>;

        r0.<android.graphics.Paint: android.graphics.Xfermode mXfermode> = $r8;

        $z0 = r1.<android.graphics.Paint: boolean mHasCompatScaling>;

        r0.<android.graphics.Paint: boolean mHasCompatScaling> = $z0;

        $f0 = r1.<android.graphics.Paint: float mCompatScaling>;

        r0.<android.graphics.Paint: float mCompatScaling> = $f0;

        $f1 = r1.<android.graphics.Paint: float mInvCompatScaling>;

        r0.<android.graphics.Paint: float mInvCompatScaling> = $f1;

        $z1 = r1.<android.graphics.Paint: boolean hasShadow>;

        r0.<android.graphics.Paint: boolean hasShadow> = $z1;

        $f2 = r1.<android.graphics.Paint: float shadowDx>;

        r0.<android.graphics.Paint: float shadowDx> = $f2;

        $f3 = r1.<android.graphics.Paint: float shadowDy>;

        r0.<android.graphics.Paint: float shadowDy> = $f3;

        $f4 = r1.<android.graphics.Paint: float shadowRadius>;

        r0.<android.graphics.Paint: float shadowRadius> = $f4;

        $i1 = r1.<android.graphics.Paint: int shadowColor>;

        r0.<android.graphics.Paint: int shadowColor> = $i1;

        $i0 = r1.<android.graphics.Paint: int mBidiFlags>;

        r0.<android.graphics.Paint: int mBidiFlags> = $i0;

        $r10 = r1.<android.graphics.Paint: java.util.Locale mLocale>;

        r0.<android.graphics.Paint: java.util.Locale mLocale> = $r10;

        return;

     label2:
        r0.<android.graphics.Paint: android.graphics.Shader mShader> = null;

        goto label1;
    }

    public native float ascent();

    public int breakText(java.lang.CharSequence, int, int, boolean, float, float[])
    {
        android.graphics.Paint r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean z0, $z1;
        float f0;
        float[] r2;
        char[] r3;
        java.lang.String $r4;
        java.lang.IndexOutOfBoundsException $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        f0 := @parameter4: float;

        r2 := @parameter5: float[];

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r6;

     label1:
        $i4 = i0 | i1;

        $i3 = i1 - i0;

        $i5 = $i4 | $i3;

        $i6 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i7 = $i6 - i1;

        $i8 = $i5 | $i7;

        if $i8 >= 0 goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        $i9 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i9 == 0 goto label3;

        if i0 != i1 goto label4;

     label3:
        return 0;

     label4:
        if i0 != 0 goto label5;

        $z1 = r1 instanceof java.lang.String;

        if $z1 == 0 goto label5;

        $i14 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i1 != $i14 goto label5;

        $r4 = (java.lang.String) r1;

        $i15 = virtualinvoke r0.<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>($r4, z0, f0, r2);

        return $i15;

     label5:
        $i10 = i1 - i0;

        r3 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>($i10);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i0, i1, r3, 0);

        if z0 == 0 goto label7;

        $i13 = i1 - i0;

        i2 = virtualinvoke r0.<android.graphics.Paint: int breakText(char[],int,int,float,float[])>(r3, 0, $i13, f0, r2);

     label6:
        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>(r3);

        return i2;

     label7:
        $i12 = i1 - i0;

        $i11 = neg $i12;

        i2 = virtualinvoke r0.<android.graphics.Paint: int breakText(char[],int,int,float,float[])>(r3, 0, $i11, f0, r2);

        goto label6;
    }

    public int breakText(java.lang.String, boolean, float, float[])
    {
        android.graphics.Paint r0;
        java.lang.String r1;
        boolean z0, $z1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        float[] r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        r2 := @parameter3: float[];

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r3;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

        i0 = 0;

     label2:
        return i0;

     label3:
        $z1 = r0.<android.graphics.Paint: boolean mHasCompatScaling>;

        if $z1 != 0 goto label4;

        $i3 = r0.<android.graphics.Paint: int mBidiFlags>;

        $i4 = specialinvoke r0.<android.graphics.Paint: int native_breakText(java.lang.String,boolean,float,int,float[])>(r1, z0, f0, $i3, r2);

        return $i4;

     label4:
        f1 = virtualinvoke r0.<android.graphics.Paint: float getTextSize()>();

        $f2 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f3 = f1 * $f2;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>($f3);

        $f4 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f5 = f0 * $f4;

        $i2 = r0.<android.graphics.Paint: int mBidiFlags>;

        i0 = specialinvoke r0.<android.graphics.Paint: int native_breakText(java.lang.String,boolean,float,int,float[])>(r1, z0, $f5, $i2, r2);

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f1);

        if r2 == null goto label2;

        $f6 = r2[0];

        $f7 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f8 = $f6 * $f7;

        r2[0] = $f8;

        return i0;
    }

    public int breakText(char[], int, int, float, float[])
    {
        android.graphics.Paint r0;
        char[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        float[] r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        r2 := @parameter4: float[];

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r4;

     label1:
        if i0 < 0 goto label2;

        $i3 = lengthof r1;

        $i4 = $i3 - i0;

        $i5 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        if $i4 >= $i5 goto label3;

     label2:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label3:
        $i6 = lengthof r1;

        if $i6 == 0 goto label4;

        if i1 != 0 goto label6;

     label4:
        i2 = 0;

     label5:
        return i2;

     label6:
        $z0 = r0.<android.graphics.Paint: boolean mHasCompatScaling>;

        if $z0 != 0 goto label7;

        $i9 = r0.<android.graphics.Paint: int mBidiFlags>;

        $i8 = specialinvoke r0.<android.graphics.Paint: int native_breakText(char[],int,int,float,int,float[])>(r1, i0, i1, f0, $i9, r2);

        return $i8;

     label7:
        f1 = virtualinvoke r0.<android.graphics.Paint: float getTextSize()>();

        $f2 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f4 = f1 * $f2;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>($f4);

        $f3 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f5 = f0 * $f3;

        $i7 = r0.<android.graphics.Paint: int mBidiFlags>;

        i2 = specialinvoke r0.<android.graphics.Paint: int native_breakText(char[],int,int,float,int,float[])>(r1, i0, i1, $f5, $i7, r2);

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f1);

        if r2 == null goto label5;

        $f8 = r2[0];

        $f6 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f7 = $f8 * $f6;

        r2[0] = $f7;

        return i2;
    }

    public void clearShadowLayer()
    {
        android.graphics.Paint r0;

        r0 := @this: android.graphics.Paint;

        r0.<android.graphics.Paint: boolean hasShadow> = 0;

        specialinvoke r0.<android.graphics.Paint: void nSetShadowLayer(float,float,float,int)>(0.0F, 0.0F, 0.0F, 0);

        return;
    }

    public native float descent();

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.Paint r0;
        java.lang.Throwable r1, $r2;
        int $i0;

        r0 := @this: android.graphics.Paint;

     label1:
        $i0 = r0.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: void finalizer(int)>($i0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public native int getAlpha();

    public int getBidiFlags()
    {
        android.graphics.Paint r0;
        int $i0;

        r0 := @this: android.graphics.Paint;

        $i0 = r0.<android.graphics.Paint: int mBidiFlags>;

        return $i0;
    }

    public native int getColor();

    public android.graphics.ColorFilter getColorFilter()
    {
        android.graphics.Paint r0;
        android.graphics.ColorFilter $r1;

        r0 := @this: android.graphics.Paint;

        $r1 = r0.<android.graphics.Paint: android.graphics.ColorFilter mColorFilter>;

        return $r1;
    }

    public boolean getFillPath(android.graphics.Path, android.graphics.Path)
    {
        android.graphics.Paint r0;
        android.graphics.Path r1, r2;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Path;

        r2 := @parameter1: android.graphics.Path;

        $i0 = r0.<android.graphics.Paint: int mNativePaint>;

        $i1 = virtualinvoke r1.<android.graphics.Path: int ni()>();

        $i2 = virtualinvoke r2.<android.graphics.Path: int ni()>();

        $z0 = staticinvoke <android.graphics.Paint: boolean native_getFillPath(int,int,int)>($i0, $i1, $i2);

        return $z0;
    }

    public native int getFlags();

    public native float getFontMetrics(android.graphics.Paint$FontMetrics);

    public android.graphics.Paint$FontMetrics getFontMetrics()
    {
        android.graphics.Paint r0;
        android.graphics.Paint$FontMetrics r1, $r2;

        r0 := @this: android.graphics.Paint;

        $r2 = new android.graphics.Paint$FontMetrics;

        specialinvoke $r2.<android.graphics.Paint$FontMetrics: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<android.graphics.Paint: float getFontMetrics(android.graphics.Paint$FontMetrics)>(r1);

        return r1;
    }

    public native int getFontMetricsInt(android.graphics.Paint$FontMetricsInt);

    public android.graphics.Paint$FontMetricsInt getFontMetricsInt()
    {
        android.graphics.Paint r0;
        android.graphics.Paint$FontMetricsInt r1, $r2;

        r0 := @this: android.graphics.Paint;

        $r2 = new android.graphics.Paint$FontMetricsInt;

        specialinvoke $r2.<android.graphics.Paint$FontMetricsInt: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r1);

        return r1;
    }

    public float getFontSpacing()
    {
        android.graphics.Paint r0;
        float $f0;

        r0 := @this: android.graphics.Paint;

        $f0 = virtualinvoke r0.<android.graphics.Paint: float getFontMetrics(android.graphics.Paint$FontMetrics)>(null);

        return $f0;
    }

    public native int getHinting();

    public android.graphics.MaskFilter getMaskFilter()
    {
        android.graphics.Paint r0;
        android.graphics.MaskFilter $r1;

        r0 := @this: android.graphics.Paint;

        $r1 = r0.<android.graphics.Paint: android.graphics.MaskFilter mMaskFilter>;

        return $r1;
    }

    public android.graphics.PathEffect getPathEffect()
    {
        android.graphics.Paint r0;
        android.graphics.PathEffect $r1;

        r0 := @this: android.graphics.Paint;

        $r1 = r0.<android.graphics.Paint: android.graphics.PathEffect mPathEffect>;

        return $r1;
    }

    public android.graphics.Rasterizer getRasterizer()
    {
        android.graphics.Paint r0;
        android.graphics.Rasterizer $r1;

        r0 := @this: android.graphics.Paint;

        $r1 = r0.<android.graphics.Paint: android.graphics.Rasterizer mRasterizer>;

        return $r1;
    }

    public android.graphics.Shader getShader()
    {
        android.graphics.Paint r0;
        android.graphics.Shader $r1;

        r0 := @this: android.graphics.Paint;

        $r1 = r0.<android.graphics.Paint: android.graphics.Shader mShader>;

        return $r1;
    }

    public android.graphics.Paint$Cap getStrokeCap()
    {
        android.graphics.Paint r0;
        int $i0, $i1;
        android.graphics.Paint$Cap[] $r1;
        android.graphics.Paint$Cap $r2;

        r0 := @this: android.graphics.Paint;

        $r1 = <android.graphics.Paint: android.graphics.Paint$Cap[] sCapArray>;

        $i0 = r0.<android.graphics.Paint: int mNativePaint>;

        $i1 = staticinvoke <android.graphics.Paint: int native_getStrokeCap(int)>($i0);

        $r2 = $r1[$i1];

        return $r2;
    }

    public android.graphics.Paint$Join getStrokeJoin()
    {
        android.graphics.Paint r0;
        int $i0, $i1;
        android.graphics.Paint$Join[] $r1;
        android.graphics.Paint$Join $r2;

        r0 := @this: android.graphics.Paint;

        $r1 = <android.graphics.Paint: android.graphics.Paint$Join[] sJoinArray>;

        $i0 = r0.<android.graphics.Paint: int mNativePaint>;

        $i1 = staticinvoke <android.graphics.Paint: int native_getStrokeJoin(int)>($i0);

        $r2 = $r1[$i1];

        return $r2;
    }

    public native float getStrokeMiter();

    public native float getStrokeWidth();

    public android.graphics.Paint$Style getStyle()
    {
        android.graphics.Paint r0;
        int $i0, $i1;
        android.graphics.Paint$Style[] $r1;
        android.graphics.Paint$Style $r2;

        r0 := @this: android.graphics.Paint;

        $r1 = <android.graphics.Paint: android.graphics.Paint$Style[] sStyleArray>;

        $i0 = r0.<android.graphics.Paint: int mNativePaint>;

        $i1 = staticinvoke <android.graphics.Paint: int native_getStyle(int)>($i0);

        $r2 = $r1[$i1];

        return $r2;
    }

    public android.graphics.Paint$Align getTextAlign()
    {
        android.graphics.Paint r0;
        int $i0, $i1;
        android.graphics.Paint$Align[] $r1;
        android.graphics.Paint$Align $r2;

        r0 := @this: android.graphics.Paint;

        $r1 = <android.graphics.Paint: android.graphics.Paint$Align[] sAlignArray>;

        $i0 = r0.<android.graphics.Paint: int mNativePaint>;

        $i1 = staticinvoke <android.graphics.Paint: int native_getTextAlign(int)>($i0);

        $r2 = $r1[$i1];

        return $r2;
    }

    public void getTextBounds(java.lang.String, int, int, android.graphics.Rect)
    {
        android.graphics.Paint r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.graphics.Rect r2;
        java.lang.NullPointerException $r3;
        java.lang.IndexOutOfBoundsException $r4;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Rect;

        $i3 = i0 | i1;

        $i2 = i1 - i0;

        $i4 = $i3 | $i2;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i5 - i1;

        $i7 = $i4 | $i6;

        if $i7 >= 0 goto label1;

        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("need bounds Rect");

        throw $r3;

     label2:
        $i9 = r0.<android.graphics.Paint: int mNativePaint>;

        $i8 = r0.<android.graphics.Paint: int mBidiFlags>;

        staticinvoke <android.graphics.Paint: void nativeGetStringBounds(int,java.lang.String,int,int,int,android.graphics.Rect)>($i9, r1, i0, i1, $i8, r2);

        return;
    }

    public void getTextBounds(char[], int, int, android.graphics.Rect)
    {
        android.graphics.Paint r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Rect;

        $i2 = i0 | i1;

        if $i2 < 0 goto label1;

        $i4 = i0 + i1;

        $i3 = lengthof r1;

        if $i4 <= $i3 goto label2;

     label1:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label2:
        if r2 != null goto label3;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("need bounds Rect");

        throw $r4;

     label3:
        $i6 = r0.<android.graphics.Paint: int mNativePaint>;

        $i5 = r0.<android.graphics.Paint: int mBidiFlags>;

        staticinvoke <android.graphics.Paint: void nativeGetCharArrayBounds(int,char[],int,int,int,android.graphics.Rect)>($i6, r1, i0, i1, $i5, r2);

        return;
    }

    public int getTextGlyphs(java.lang.String, int, int, int, int, int, char[])
    {
        android.graphics.Paint r0;
        java.lang.String r1, $r10;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        char[] r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        java.lang.IllegalArgumentException $r4, $r8;
        java.lang.IndexOutOfBoundsException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: char[];

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r8;

     label1:
        if i4 == 0 goto label2;

        if i4 == 1 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown flags value: ");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label2:
        $i5 = i0 | i1;

        $i6 = i2 | $i5;

        $i8 = i3 | $i6;

        $i7 = i1 - i0;

        $i10 = $i8 | $i7;

        $i9 = i0 - i2;

        $i12 = $i10 | $i9;

        $i11 = i3 - i1;

        $i14 = $i12 | $i11;

        $i13 = virtualinvoke r1.<java.lang.String: int length()>();

        $i16 = $i13 - i1;

        $i15 = $i14 | $i16;

        $i18 = virtualinvoke r1.<java.lang.String: int length()>();

        $i17 = $i18 - i3;

        $i20 = $i15 | $i17;

        if $i20 >= 0 goto label3;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label3:
        $i22 = i1 - i0;

        $i19 = lengthof r2;

        if $i22 <= $i19 goto label4;

        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label4:
        $i21 = r0.<android.graphics.Paint: int mNativePaint>;

        $i23 = staticinvoke <android.graphics.Paint: int native_getTextGlyphs(int,java.lang.String,int,int,int,int,int,char[])>($i21, r1, i0, i1, i2, i3, i4, r2);

        return $i23;
    }

    public java.util.Locale getTextLocale()
    {
        android.graphics.Paint r0;
        java.util.Locale $r1;

        r0 := @this: android.graphics.Paint;

        $r1 = r0.<android.graphics.Paint: java.util.Locale mLocale>;

        return $r1;
    }

    public void getTextPath(java.lang.String, int, int, float, float, android.graphics.Path)
    {
        android.graphics.Paint r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        float f0, f1;
        android.graphics.Path r2;
        java.lang.IndexOutOfBoundsException $r3;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r2 := @parameter5: android.graphics.Path;

        $i3 = i0 | i1;

        $i2 = i1 - i0;

        $i4 = $i3 | $i2;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i5 - i1;

        $i7 = $i4 | $i6;

        if $i7 >= 0 goto label1;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label1:
        $i8 = r0.<android.graphics.Paint: int mNativePaint>;

        $i9 = r0.<android.graphics.Paint: int mBidiFlags>;

        $i10 = virtualinvoke r2.<android.graphics.Path: int ni()>();

        staticinvoke <android.graphics.Paint: void native_getTextPath(int,int,java.lang.String,int,int,float,float,int)>($i8, $i9, r1, i0, i1, f0, f1, $i10);

        return;
    }

    public void getTextPath(char[], int, int, float, float, android.graphics.Path)
    {
        android.graphics.Paint r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float f0, f1;
        android.graphics.Path r2;
        java.lang.ArrayIndexOutOfBoundsException $r3;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        r2 := @parameter5: android.graphics.Path;

        $i2 = i0 | i1;

        if $i2 < 0 goto label1;

        $i4 = i0 + i1;

        $i3 = lengthof r1;

        if $i4 <= $i3 goto label2;

     label1:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label2:
        $i5 = r0.<android.graphics.Paint: int mNativePaint>;

        $i6 = r0.<android.graphics.Paint: int mBidiFlags>;

        $i7 = virtualinvoke r2.<android.graphics.Path: int ni()>();

        staticinvoke <android.graphics.Paint: void native_getTextPath(int,int,char[],int,int,float,float,int)>($i5, $i6, r1, i0, i1, f0, f1, $i7);

        return;
    }

    public float getTextRunAdvances(java.lang.CharSequence, int, int, int, int, int, float[], int)
    {
        android.graphics.Paint r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        float[] r2;
        char[] r3;
        float f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r4, $r5;
        android.text.GraphicsOperations $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.IndexOutOfBoundsException $r8;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: float[];

        i5 := @parameter7: int;

        if r1 != null goto label01;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r7;

     label01:
        $i10 = i0 | i1;

        $i12 = i2 | $i10;

        $i11 = i3 | $i12;

        $i13 = i5 | $i11;

        $i14 = i1 - i0;

        $i15 = $i13 | $i14;

        $i16 = i0 - i2;

        $i17 = $i15 | $i16;

        $i18 = i3 - i1;

        $i20 = $i17 | $i18;

        $i19 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i22 = $i19 - i3;

        i6 = $i20 | $i22;

        if r2 != null goto label03;

        i7 = 0;

     label02:
        $i25 = i7 | i6;

        if $i25 >= 0 goto label04;

        $r8 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r8.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r8;

     label03:
        $i21 = lengthof r2;

        $i23 = $i21 - i5;

        $i24 = i1 - i0;

        i7 = $i23 - $i24;

        goto label02;

     label04:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label05;

        $r5 = (java.lang.String) r1;

        $f3 = virtualinvoke r0.<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int)>($r5, i0, i1, i2, i3, i4, r2, i5);

        return $f3;

     label05:
        $z2 = r1 instanceof android.text.SpannedString;

        if $z2 != 0 goto label06;

        $z1 = r1 instanceof android.text.SpannableString;

        if $z1 == 0 goto label07;

     label06:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $f1 = virtualinvoke r0.<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int)>($r4, i0, i1, i2, i3, i4, r2, i5);

        return $f1;

     label07:
        $z3 = r1 instanceof android.text.GraphicsOperations;

        if $z3 == 0 goto label08;

        $r6 = (android.text.GraphicsOperations) r1;

        $f2 = interfaceinvoke $r6.<android.text.GraphicsOperations: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint)>(i0, i1, i2, i3, i4, r2, i5, r0);

        return $f2;

     label08:
        $i27 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i27 == 0 goto label09;

        if i1 != i0 goto label10;

     label09:
        return 0.0F;

     label10:
        i8 = i3 - i2;

        i9 = i1 - i0;

        r3 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>(i8);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i2, i3, r3, 0);

        $i26 = i0 - i2;

        f0 = virtualinvoke r0.<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)>(r3, $i26, i9, 0, i8, i4, r2, i5);

        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>(r3);

        return f0;
    }

    public float getTextRunAdvances(java.lang.String, int, int, int, int, int, float[], int)
    {
        android.graphics.Paint r0;
        java.lang.String r1, $r5;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        float[] r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.IllegalArgumentException $r4, $r9;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: float[];

        i5 := @parameter7: int;

        if r1 != null goto label01;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r9;

     label01:
        if i4 == 0 goto label02;

        if i4 == 1 goto label02;

        $r4 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown flags value: ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label02:
        $i10 = i0 | i1;

        $i12 = i2 | $i10;

        $i11 = i3 | $i12;

        $i13 = i5 | $i11;

        $i14 = i1 - i0;

        $i15 = $i13 | $i14;

        $i16 = i0 - i2;

        $i17 = $i15 | $i16;

        $i18 = i3 - i1;

        $i20 = $i17 | $i18;

        $i19 = virtualinvoke r1.<java.lang.String: int length()>();

        $i22 = $i19 - i3;

        i6 = $i20 | $i22;

        if r2 != null goto label04;

        i7 = 0;

     label03:
        $i26 = i7 | i6;

        if $i26 >= 0 goto label05;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label04:
        $i21 = lengthof r2;

        $i23 = $i21 - i5;

        $i24 = i1 - i0;

        i7 = $i23 - $i24;

        goto label03;

     label05:
        $i25 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i25 == 0 goto label06;

        if i0 != i1 goto label07;

     label06:
        return 0.0F;

     label07:
        $z0 = r0.<android.graphics.Paint: boolean mHasCompatScaling>;

        if $z0 != 0 goto label08;

        $i29 = r0.<android.graphics.Paint: int mNativePaint>;

        $f9 = staticinvoke <android.graphics.Paint: float native_getTextRunAdvances(int,java.lang.String,int,int,int,int,int,float[],int)>($i29, r1, i0, i1, i2, i3, i4, r2, i5);

        return $f9;

     label08:
        f0 = virtualinvoke r0.<android.graphics.Paint: float getTextSize()>();

        $f2 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f3 = f0 * $f2;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>($f3);

        $i27 = r0.<android.graphics.Paint: int mNativePaint>;

        f1 = staticinvoke <android.graphics.Paint: float native_getTextRunAdvances(int,java.lang.String,int,int,int,int,int,float[],int)>($i27, r1, i0, i1, i2, i3, i4, r2, i5);

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f0);

        if r2 == null goto label10;

        i8 = i5;

        $i28 = i1 - i0;

        i9 = i8 + $i28;

     label09:
        if i8 >= i9 goto label10;

        $f6 = r2[i8];

        $f8 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f7 = $f6 * $f8;

        r2[i8] = $f7;

        i8 = i8 + 1;

        goto label09;

     label10:
        $f4 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f5 = f1 * $f4;

        return $f5;
    }

    public float getTextRunAdvances(char[], int, int, int, int, int, float[], int)
    {
        android.graphics.Paint r0;
        char[] r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        float[] r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.IllegalArgumentException $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        r2 := @parameter6: float[];

        i5 := @parameter7: int;

        if r1 != null goto label01;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r8;

     label01:
        if i4 == 0 goto label02;

        if i4 == 1 goto label02;

        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown flags value: ");

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label02:
        $i10 = i0 | i1;

        $i12 = i2 | $i10;

        $i11 = i3 | $i12;

        $i13 = i5 | $i11;

        $i14 = i0 - i2;

        $i15 = $i13 | $i14;

        $i16 = i3 - i1;

        $i19 = $i15 | $i16;

        $i17 = i2 + i3;

        $i18 = i0 + i1;

        $i20 = $i17 - $i18;

        $i23 = $i19 | $i20;

        $i21 = lengthof r1;

        $i22 = i2 + i3;

        $i24 = $i21 - $i22;

        i6 = $i23 | $i24;

        if r2 != null goto label04;

        i7 = 0;

     label03:
        $i27 = i7 | i6;

        if $i27 >= 0 goto label05;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label04:
        $i25 = lengthof r2;

        $i26 = i5 + i1;

        i7 = $i25 - $i26;

        goto label03;

     label05:
        $i28 = lengthof r1;

        if $i28 == 0 goto label06;

        if i1 != 0 goto label07;

     label06:
        return 0.0F;

     label07:
        $z0 = r0.<android.graphics.Paint: boolean mHasCompatScaling>;

        if $z0 != 0 goto label08;

        $i30 = r0.<android.graphics.Paint: int mNativePaint>;

        $f8 = staticinvoke <android.graphics.Paint: float native_getTextRunAdvances(int,char[],int,int,int,int,int,float[],int)>($i30, r1, i0, i1, i2, i3, i4, r2, i5);

        return $f8;

     label08:
        f0 = virtualinvoke r0.<android.graphics.Paint: float getTextSize()>();

        $f2 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f3 = f0 * $f2;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>($f3);

        $i29 = r0.<android.graphics.Paint: int mNativePaint>;

        f1 = staticinvoke <android.graphics.Paint: float native_getTextRunAdvances(int,char[],int,int,int,int,int,float[],int)>($i29, r1, i0, i1, i2, i3, i4, r2, i5);

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f0);

        if r2 == null goto label10;

        i8 = i5;

        i9 = i8 + i1;

     label09:
        if i8 >= i9 goto label10;

        $f5 = r2[i8];

        $f4 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f9 = $f5 * $f4;

        r2[i8] = $f9;

        i8 = i8 + 1;

        goto label09;

     label10:
        $f6 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f7 = f1 * $f6;

        return $f7;
    }

    public int getTextRunCursor(java.lang.CharSequence, int, int, int, int, int)
    {
        android.graphics.Paint r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9;
        char[] r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3;
        android.text.GraphicsOperations $r4;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $z0 = r1 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof android.text.SpannedString;

        if $z1 != 0 goto label1;

        $z2 = r1 instanceof android.text.SpannableString;

        if $z2 == 0 goto label2;

     label1:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i7 = virtualinvoke r0.<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,int,int,int)>($r3, i0, i1, i2, i3, i4);

        return $i7;

     label2:
        $z3 = r1 instanceof android.text.GraphicsOperations;

        if $z3 == 0 goto label3;

        $r4 = (android.text.GraphicsOperations) r1;

        $i9 = interfaceinvoke $r4.<android.text.GraphicsOperations: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>(i0, i1, i2, i3, i4, r0);

        return $i9;

     label3:
        i5 = i1 - i0;

        r2 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>(i5);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i0, i1, r2, 0);

        $i8 = i3 - i0;

        i6 = virtualinvoke r0.<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)>(r2, 0, i5, i2, $i8, i4);

        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>(r2);

        return i6;
    }

    public int getTextRunCursor(java.lang.String, int, int, int, int, int)
    {
        android.graphics.Paint r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $i5 = i0 | i1;

        $i7 = i3 | $i5;

        $i6 = i1 - i0;

        $i9 = $i7 | $i6;

        $i8 = i3 - i0;

        $i11 = $i9 | $i8;

        $i10 = i1 - i3;

        $i12 = $i11 | $i10;

        $i13 = virtualinvoke r1.<java.lang.String: int length()>();

        $i15 = $i13 - i1;

        $i14 = $i12 | $i15;

        $i16 = i4 | $i14;

        if $i16 < 0 goto label1;

        if i4 <= 4 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        $i18 = r0.<android.graphics.Paint: int mNativePaint>;

        $i17 = specialinvoke r0.<android.graphics.Paint: int native_getTextRunCursor(int,java.lang.String,int,int,int,int,int)>($i18, r1, i0, i1, i2, i3, i4);

        return $i17;
    }

    public int getTextRunCursor(char[], int, int, int, int, int)
    {
        android.graphics.Paint r0;
        char[] r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 = i0 + i1;

        $i6 = i0 | i5;

        $i8 = i3 | $i6;

        $i7 = i5 - i0;

        $i10 = $i8 | $i7;

        $i9 = i3 - i0;

        $i12 = $i10 | $i9;

        $i11 = i5 - i3;

        $i14 = $i12 | $i11;

        $i13 = lengthof r1;

        $i15 = $i13 - i5;

        $i17 = $i14 | $i15;

        $i16 = i4 | $i17;

        if $i16 < 0 goto label1;

        if i4 <= 4 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        $i18 = r0.<android.graphics.Paint: int mNativePaint>;

        $i19 = specialinvoke r0.<android.graphics.Paint: int native_getTextRunCursor(int,char[],int,int,int,int,int)>($i18, r1, i0, i1, i2, i3, i4);

        return $i19;
    }

    public native float getTextScaleX();

    public native float getTextSize();

    public native float getTextSkewX();

    public int getTextWidths(java.lang.CharSequence, int, int, float[])
    {
        android.graphics.Paint r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        float[] r2;
        char[] r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r4, $r6;
        android.text.GraphicsOperations $r5;
        java.lang.IndexOutOfBoundsException $r7;
        java.lang.ArrayIndexOutOfBoundsException $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: float[];

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r9;

     label1:
        $i4 = i0 | i1;

        $i3 = i1 - i0;

        $i5 = $i4 | $i3;

        $i6 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i7 = $i6 - i1;

        $i8 = $i5 | $i7;

        if $i8 >= 0 goto label2;

        $r7 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r7.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r7;

     label2:
        $i10 = i1 - i0;

        $i9 = lengthof r2;

        if $i10 <= $i9 goto label3;

        $r8 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r8.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r8;

     label3:
        $i11 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i11 == 0 goto label4;

        if i0 != i1 goto label5;

     label4:
        return 0;

     label5:
        $z1 = r1 instanceof java.lang.String;

        if $z1 == 0 goto label6;

        $r6 = (java.lang.String) r1;

        $i16 = virtualinvoke r0.<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>($r6, i0, i1, r2);

        return $i16;

     label6:
        $z0 = r1 instanceof android.text.SpannedString;

        if $z0 != 0 goto label7;

        $z3 = r1 instanceof android.text.SpannableString;

        if $z3 == 0 goto label8;

     label7:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i12 = virtualinvoke r0.<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>($r4, i0, i1, r2);

        return $i12;

     label8:
        $z2 = r1 instanceof android.text.GraphicsOperations;

        if $z2 == 0 goto label9;

        $r5 = (android.text.GraphicsOperations) r1;

        $i15 = interfaceinvoke $r5.<android.text.GraphicsOperations: int getTextWidths(int,int,float[],android.graphics.Paint)>(i0, i1, r2, r0);

        return $i15;

     label9:
        $i13 = i1 - i0;

        r3 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>($i13);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i0, i1, r3, 0);

        $i14 = i1 - i0;

        i2 = virtualinvoke r0.<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>(r3, 0, $i14, r2);

        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>(r3);

        return i2;
    }

    public int getTextWidths(java.lang.String, int, int, float[])
    {
        android.graphics.Paint r0;
        java.lang.String r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        float[] r2;
        float f0, $f1, $f2, $f3, $f4, $f5;
        boolean $z0;
        java.lang.IndexOutOfBoundsException $r3;
        java.lang.ArrayIndexOutOfBoundsException $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: float[];

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r5;

     label1:
        $i5 = i0 | i1;

        $i4 = i1 - i0;

        $i6 = $i5 | $i4;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        $i8 = $i7 - i1;

        $i9 = $i6 | $i8;

        if $i9 >= 0 goto label2;

        $r3 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label2:
        $i11 = i1 - i0;

        $i10 = lengthof r2;

        if $i11 <= $i10 goto label3;

        $r4 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label3:
        $i12 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i12 == 0 goto label4;

        if i0 != i1 goto label6;

     label4:
        i2 = 0;

     label5:
        return i2;

     label6:
        $z0 = r0.<android.graphics.Paint: boolean mHasCompatScaling>;

        if $z0 != 0 goto label7;

        $i17 = r0.<android.graphics.Paint: int mNativePaint>;

        $i15 = r0.<android.graphics.Paint: int mBidiFlags>;

        $i16 = staticinvoke <android.graphics.Paint: int native_getTextWidths(int,java.lang.String,int,int,int,float[])>($i17, r1, i0, i1, $i15, r2);

        return $i16;

     label7:
        f0 = virtualinvoke r0.<android.graphics.Paint: float getTextSize()>();

        $f1 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f2 = f0 * $f1;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>($f2);

        $i14 = r0.<android.graphics.Paint: int mNativePaint>;

        $i13 = r0.<android.graphics.Paint: int mBidiFlags>;

        i2 = staticinvoke <android.graphics.Paint: int native_getTextWidths(int,java.lang.String,int,int,int,float[])>($i14, r1, i0, i1, $i13, r2);

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f0);

        i3 = 0;

     label8:
        if i3 >= i2 goto label5;

        $f3 = r2[i3];

        $f4 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f5 = $f3 * $f4;

        r2[i3] = $f5;

        i3 = i3 + 1;

        goto label8;
    }

    public int getTextWidths(java.lang.String, float[])
    {
        android.graphics.Paint r0;
        java.lang.String r1;
        float[] r2;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: float[];

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke r0.<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>(r1, 0, $i0, r2);

        return $i1;
    }

    public int getTextWidths(char[], int, int, float[])
    {
        android.graphics.Paint r0;
        char[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float[] r2;
        float f0, $f1, $f2, $f3, $f4, $f5;
        java.lang.ArrayIndexOutOfBoundsException $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: float[];

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r4;

     label1:
        $i4 = i0 | i1;

        if $i4 < 0 goto label2;

        $i6 = i0 + i1;

        $i5 = lengthof r1;

        if $i6 > $i5 goto label2;

        $i7 = lengthof r2;

        if i1 <= $i7 goto label3;

     label2:
        $r3 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r3;

     label3:
        $i8 = lengthof r1;

        if $i8 == 0 goto label4;

        if i1 != 0 goto label6;

     label4:
        i2 = 0;

     label5:
        return i2;

     label6:
        $z0 = r0.<android.graphics.Paint: boolean mHasCompatScaling>;

        if $z0 != 0 goto label7;

        $i11 = r0.<android.graphics.Paint: int mNativePaint>;

        $i12 = r0.<android.graphics.Paint: int mBidiFlags>;

        $i13 = staticinvoke <android.graphics.Paint: int native_getTextWidths(int,char[],int,int,int,float[])>($i11, r1, i0, i1, $i12, r2);

        return $i13;

     label7:
        f0 = virtualinvoke r0.<android.graphics.Paint: float getTextSize()>();

        $f2 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f1 = f0 * $f2;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>($f1);

        $i9 = r0.<android.graphics.Paint: int mNativePaint>;

        $i10 = r0.<android.graphics.Paint: int mBidiFlags>;

        i2 = staticinvoke <android.graphics.Paint: int native_getTextWidths(int,char[],int,int,int,float[])>($i9, r1, i0, i1, $i10, r2);

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f0);

        i3 = 0;

     label8:
        if i3 >= i2 goto label5;

        $f5 = r2[i3];

        $f3 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f4 = $f5 * $f3;

        r2[i3] = $f4;

        i3 = i3 + 1;

        goto label8;
    }

    public android.graphics.Typeface getTypeface()
    {
        android.graphics.Paint r0;
        android.graphics.Typeface $r1;

        r0 := @this: android.graphics.Paint;

        $r1 = r0.<android.graphics.Paint: android.graphics.Typeface mTypeface>;

        return $r1;
    }

    public android.graphics.Xfermode getXfermode()
    {
        android.graphics.Paint r0;
        android.graphics.Xfermode $r1;

        r0 := @this: android.graphics.Paint;

        $r1 = r0.<android.graphics.Paint: android.graphics.Xfermode mXfermode>;

        return $r1;
    }

    public final boolean isAntiAlias()
    {
        android.graphics.Paint r0;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        $i0 = virtualinvoke r0.<android.graphics.Paint: int getFlags()>();

        $i1 = 1 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isDither()
    {
        android.graphics.Paint r0;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        $i0 = virtualinvoke r0.<android.graphics.Paint: int getFlags()>();

        $i1 = 4 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isFakeBoldText()
    {
        android.graphics.Paint r0;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        $i0 = virtualinvoke r0.<android.graphics.Paint: int getFlags()>();

        $i1 = 32 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isFilterBitmap()
    {
        android.graphics.Paint r0;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        $i0 = virtualinvoke r0.<android.graphics.Paint: int getFlags()>();

        $i1 = 2 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isLinearText()
    {
        android.graphics.Paint r0;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        $i0 = virtualinvoke r0.<android.graphics.Paint: int getFlags()>();

        $i1 = 64 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isStrikeThruText()
    {
        android.graphics.Paint r0;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        $i0 = virtualinvoke r0.<android.graphics.Paint: int getFlags()>();

        $i1 = 16 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isSubpixelText()
    {
        android.graphics.Paint r0;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        $i0 = virtualinvoke r0.<android.graphics.Paint: int getFlags()>();

        $i1 = 128 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isUnderlineText()
    {
        android.graphics.Paint r0;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        $i0 = virtualinvoke r0.<android.graphics.Paint: int getFlags()>();

        $i1 = 8 & $i0;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public float measureText(java.lang.CharSequence, int, int)
    {
        android.graphics.Paint r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        char[] r2;
        float f0, $f1, $f2, $f3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r3, $r5;
        android.text.GraphicsOperations $r4;
        java.lang.IndexOutOfBoundsException $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r7;

     label1:
        $i3 = i0 | i1;

        $i2 = i1 - i0;

        $i4 = $i3 | $i2;

        $i5 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i6 = $i5 - i1;

        $i7 = $i4 | $i6;

        if $i7 >= 0 goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        $i8 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i8 == 0 goto label3;

        if i0 != i1 goto label4;

     label3:
        return 0.0F;

     label4:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label5;

        $r5 = (java.lang.String) r1;

        $f3 = virtualinvoke r0.<android.graphics.Paint: float measureText(java.lang.String,int,int)>($r5, i0, i1);

        return $f3;

     label5:
        $z1 = r1 instanceof android.text.SpannedString;

        if $z1 != 0 goto label6;

        $z2 = r1 instanceof android.text.SpannableString;

        if $z2 == 0 goto label7;

     label6:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $f1 = virtualinvoke r0.<android.graphics.Paint: float measureText(java.lang.String,int,int)>($r3, i0, i1);

        return $f1;

     label7:
        $z3 = r1 instanceof android.text.GraphicsOperations;

        if $z3 == 0 goto label8;

        $r4 = (android.text.GraphicsOperations) r1;

        $f2 = interfaceinvoke $r4.<android.text.GraphicsOperations: float measureText(int,int,android.graphics.Paint)>(i0, i1, r0);

        return $f2;

     label8:
        $i9 = i1 - i0;

        r2 = staticinvoke <android.graphics.TemporaryBuffer: char[] obtain(int)>($i9);

        staticinvoke <android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>(r1, i0, i1, r2, 0);

        $i10 = i1 - i0;

        f0 = virtualinvoke r0.<android.graphics.Paint: float measureText(char[],int,int)>(r2, 0, $i10);

        staticinvoke <android.graphics.TemporaryBuffer: void recycle(char[])>(r2);

        return f0;
    }

    public float measureText(java.lang.String)
    {
        android.graphics.Paint r0;
        java.lang.String r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        int $i0, $i1, $i2;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r2;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return 0.0F;

     label2:
        $z0 = r0.<android.graphics.Paint: boolean mHasCompatScaling>;

        if $z0 != 0 goto label3;

        $i2 = r0.<android.graphics.Paint: int mBidiFlags>;

        $f7 = specialinvoke r0.<android.graphics.Paint: float native_measureText(java.lang.String,int)>(r1, $i2);

        $d3 = (double) $f7;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d3);

        $f8 = (float) $d2;

        return $f8;

     label3:
        f0 = virtualinvoke r0.<android.graphics.Paint: float getTextSize()>();

        $f2 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f3 = f0 * $f2;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>($f3);

        $i1 = r0.<android.graphics.Paint: int mBidiFlags>;

        f1 = specialinvoke r0.<android.graphics.Paint: float native_measureText(java.lang.String,int)>(r1, $i1);

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f0);

        $f4 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f5 = f1 * $f4;

        $d0 = (double) $f5;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f6 = (float) $d1;

        return $f6;
    }

    public float measureText(java.lang.String, int, int)
    {
        android.graphics.Paint r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r3;

     label1:
        $i3 = i0 | i1;

        $i2 = i1 - i0;

        $i4 = $i3 | $i2;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i5 - i1;

        $i7 = $i4 | $i6;

        if $i7 >= 0 goto label2;

        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label2:
        $i8 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i8 == 0 goto label3;

        if i0 != i1 goto label4;

     label3:
        return 0.0F;

     label4:
        $z0 = r0.<android.graphics.Paint: boolean mHasCompatScaling>;

        if $z0 != 0 goto label5;

        $i10 = r0.<android.graphics.Paint: int mBidiFlags>;

        $f7 = specialinvoke r0.<android.graphics.Paint: float native_measureText(java.lang.String,int,int,int)>(r1, i0, i1, $i10);

        $d3 = (double) $f7;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d3);

        $f8 = (float) $d2;

        return $f8;

     label5:
        f0 = virtualinvoke r0.<android.graphics.Paint: float getTextSize()>();

        $f2 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f3 = f0 * $f2;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>($f3);

        $i9 = r0.<android.graphics.Paint: int mBidiFlags>;

        f1 = specialinvoke r0.<android.graphics.Paint: float native_measureText(java.lang.String,int,int,int)>(r1, i0, i1, $i9);

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f0);

        $f4 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f5 = f1 * $f4;

        $d0 = (double) $f5;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f6 = (float) $d1;

        return $f6;
    }

    public float measureText(char[], int, int)
    {
        android.graphics.Paint r0;
        char[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        java.lang.ArrayIndexOutOfBoundsException $r2;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("text cannot be null");

        throw $r3;

     label1:
        $i2 = i0 | i1;

        if $i2 < 0 goto label2;

        $i4 = i0 + i1;

        $i3 = lengthof r1;

        if $i4 <= $i3 goto label3;

     label2:
        $r2 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label3:
        $i5 = lengthof r1;

        if $i5 == 0 goto label4;

        if i1 != 0 goto label5;

     label4:
        return 0.0F;

     label5:
        $z0 = r0.<android.graphics.Paint: boolean mHasCompatScaling>;

        if $z0 != 0 goto label6;

        $i7 = r0.<android.graphics.Paint: int mBidiFlags>;

        $f7 = specialinvoke r0.<android.graphics.Paint: float native_measureText(char[],int,int,int)>(r1, i0, i1, $i7);

        $d3 = (double) $f7;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d3);

        $f8 = (float) $d2;

        return $f8;

     label6:
        f0 = virtualinvoke r0.<android.graphics.Paint: float getTextSize()>();

        $f2 = r0.<android.graphics.Paint: float mCompatScaling>;

        $f3 = f0 * $f2;

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>($f3);

        $i6 = r0.<android.graphics.Paint: int mBidiFlags>;

        f1 = specialinvoke r0.<android.graphics.Paint: float native_measureText(char[],int,int,int)>(r1, i0, i1, $i6);

        virtualinvoke r0.<android.graphics.Paint: void setTextSize(float)>(f0);

        $f4 = r0.<android.graphics.Paint: float mInvCompatScaling>;

        $f5 = f1 * $f4;

        $d0 = (double) $f5;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $f6 = (float) $d1;

        return $f6;
    }

    public void reset()
    {
        android.graphics.Paint r0;
        int $i0;
        java.util.Locale $r1;

        r0 := @this: android.graphics.Paint;

        $i0 = r0.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: void native_reset(int)>($i0);

        virtualinvoke r0.<android.graphics.Paint: void setFlags(int)>(1280);

        r0.<android.graphics.Paint: android.graphics.ColorFilter mColorFilter> = null;

        r0.<android.graphics.Paint: android.graphics.MaskFilter mMaskFilter> = null;

        r0.<android.graphics.Paint: android.graphics.PathEffect mPathEffect> = null;

        r0.<android.graphics.Paint: android.graphics.Rasterizer mRasterizer> = null;

        r0.<android.graphics.Paint: android.graphics.Shader mShader> = null;

        r0.<android.graphics.Paint: android.graphics.Typeface mTypeface> = null;

        r0.<android.graphics.Paint: android.graphics.Xfermode mXfermode> = null;

        r0.<android.graphics.Paint: boolean mHasCompatScaling> = 0;

        r0.<android.graphics.Paint: float mCompatScaling> = 1.0F;

        r0.<android.graphics.Paint: float mInvCompatScaling> = 1.0F;

        r0.<android.graphics.Paint: boolean hasShadow> = 0;

        r0.<android.graphics.Paint: float shadowDx> = 0.0F;

        r0.<android.graphics.Paint: float shadowDy> = 0.0F;

        r0.<android.graphics.Paint: float shadowRadius> = 0.0F;

        r0.<android.graphics.Paint: int shadowColor> = 0;

        r0.<android.graphics.Paint: int mBidiFlags> = 2;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        virtualinvoke r0.<android.graphics.Paint: void setTextLocale(java.util.Locale)>($r1);

        return;
    }

    public void set(android.graphics.Paint)
    {
        android.graphics.Paint r0, r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Paint;

        if r0 == r1 goto label1;

        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        $i0 = r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: void native_set(int,int)>($i1, $i0);

        specialinvoke r0.<android.graphics.Paint: void setClassVariablesFrom(android.graphics.Paint)>(r1);

     label1:
        return;
    }

    public void setARGB(int, int, int, int)
    {
        android.graphics.Paint r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: android.graphics.Paint;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i5 = i0 << 24;

        $i4 = i1 << 16;

        $i7 = $i5 | $i4;

        $i6 = i2 << 8;

        $i8 = $i7 | $i6;

        $i9 = i3 | $i8;

        virtualinvoke r0.<android.graphics.Paint: void setColor(int)>($i9);

        return;
    }

    public native void setAlpha(int);

    public native void setAntiAlias(boolean);

    public void setBidiFlags(int)
    {
        android.graphics.Paint r0;
        int i0, i1;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.graphics.Paint;

        i0 := @parameter0: int;

        i1 = i0 & 7;

        if i1 <= 5 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown bidi flag: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<android.graphics.Paint: int mBidiFlags> = i1;

        return;
    }

    public native void setColor(int);

    public android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.Paint r0;
        android.graphics.ColorFilter r1;
        int i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.ColorFilter;

        i0 = 0;

        if r1 == null goto label1;

        i0 = r1.<android.graphics.ColorFilter: int native_instance>;

     label1:
        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: int native_setColorFilter(int,int)>($i1, i0);

        r0.<android.graphics.Paint: android.graphics.ColorFilter mColorFilter> = r1;

        return r1;
    }

    public void setCompatibilityScaling(float)
    {
        android.graphics.Paint r0;
        float f0, $f1;
        double $d0;
        byte $b0;

        r0 := @this: android.graphics.Paint;

        f0 := @parameter0: float;

        $d0 = (double) f0;

        $b0 = $d0 cmpl 1.0;

        if $b0 != 0 goto label1;

        r0.<android.graphics.Paint: boolean mHasCompatScaling> = 0;

        r0.<android.graphics.Paint: float mInvCompatScaling> = 1.0F;

        r0.<android.graphics.Paint: float mCompatScaling> = 1.0F;

        return;

     label1:
        r0.<android.graphics.Paint: boolean mHasCompatScaling> = 1;

        r0.<android.graphics.Paint: float mCompatScaling> = f0;

        $f1 = 1.0F / f0;

        r0.<android.graphics.Paint: float mInvCompatScaling> = $f1;

        return;
    }

    public native void setDither(boolean);

    public native void setFakeBoldText(boolean);

    public native void setFilterBitmap(boolean);

    public native void setFlags(int);

    public native void setHinting(int);

    public native void setLinearText(boolean);

    public android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)
    {
        android.graphics.Paint r0;
        android.graphics.MaskFilter r1;
        int i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.MaskFilter;

        i0 = 0;

        if r1 == null goto label1;

        i0 = r1.<android.graphics.MaskFilter: int native_instance>;

     label1:
        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: int native_setMaskFilter(int,int)>($i1, i0);

        r0.<android.graphics.Paint: android.graphics.MaskFilter mMaskFilter> = r1;

        return r1;
    }

    public android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)
    {
        android.graphics.Paint r0;
        android.graphics.PathEffect r1;
        int i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.PathEffect;

        i0 = 0;

        if r1 == null goto label1;

        i0 = r1.<android.graphics.PathEffect: int native_instance>;

     label1:
        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: int native_setPathEffect(int,int)>($i1, i0);

        r0.<android.graphics.Paint: android.graphics.PathEffect mPathEffect> = r1;

        return r1;
    }

    public android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)
    {
        android.graphics.Paint r0;
        android.graphics.Rasterizer r1;
        int i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Rasterizer;

        i0 = 0;

        if r1 == null goto label1;

        i0 = r1.<android.graphics.Rasterizer: int native_instance>;

     label1:
        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: int native_setRasterizer(int,int)>($i1, i0);

        r0.<android.graphics.Paint: android.graphics.Rasterizer mRasterizer> = r1;

        return r1;
    }

    public android.graphics.Shader setShader(android.graphics.Shader)
    {
        android.graphics.Paint r0;
        android.graphics.Shader r1;
        int i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Shader;

        i0 = 0;

        if r1 == null goto label1;

        i0 = r1.<android.graphics.Shader: int native_instance>;

     label1:
        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: int native_setShader(int,int)>($i1, i0);

        r0.<android.graphics.Paint: android.graphics.Shader mShader> = r1;

        return r1;
    }

    public void setShadowLayer(float, float, float, int)
    {
        android.graphics.Paint r0;
        float f0, f1, f2;
        int i0;
        boolean z0;
        byte $b1;

        r0 := @this: android.graphics.Paint;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        i0 := @parameter3: int;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label2;

        z0 = 1;

     label1:
        r0.<android.graphics.Paint: boolean hasShadow> = z0;

        r0.<android.graphics.Paint: float shadowRadius> = f0;

        r0.<android.graphics.Paint: float shadowDx> = f1;

        r0.<android.graphics.Paint: float shadowDy> = f2;

        r0.<android.graphics.Paint: int shadowColor> = i0;

        specialinvoke r0.<android.graphics.Paint: void nSetShadowLayer(float,float,float,int)>(f0, f1, f2, i0);

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    public native void setStrikeThruText(boolean);

    public void setStrokeCap(android.graphics.Paint$Cap)
    {
        android.graphics.Paint r0;
        android.graphics.Paint$Cap r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Paint$Cap;

        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        $i0 = r1.<android.graphics.Paint$Cap: int nativeInt>;

        staticinvoke <android.graphics.Paint: void native_setStrokeCap(int,int)>($i1, $i0);

        return;
    }

    public void setStrokeJoin(android.graphics.Paint$Join)
    {
        android.graphics.Paint r0;
        android.graphics.Paint$Join r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Paint$Join;

        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        $i0 = r1.<android.graphics.Paint$Join: int nativeInt>;

        staticinvoke <android.graphics.Paint: void native_setStrokeJoin(int,int)>($i1, $i0);

        return;
    }

    public native void setStrokeMiter(float);

    public native void setStrokeWidth(float);

    public void setStyle(android.graphics.Paint$Style)
    {
        android.graphics.Paint r0;
        android.graphics.Paint$Style r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Paint$Style;

        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        $i0 = r1.<android.graphics.Paint$Style: int nativeInt>;

        staticinvoke <android.graphics.Paint: void native_setStyle(int,int)>($i1, $i0);

        return;
    }

    public native void setSubpixelText(boolean);

    public void setTextAlign(android.graphics.Paint$Align)
    {
        android.graphics.Paint r0;
        android.graphics.Paint$Align r1;
        int $i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Paint$Align;

        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        $i0 = r1.<android.graphics.Paint$Align: int nativeInt>;

        staticinvoke <android.graphics.Paint: void native_setTextAlign(int,int)>($i1, $i0);

        return;
    }

    public void setTextLocale(java.util.Locale)
    {
        android.graphics.Paint r0;
        java.util.Locale r1, $r2;
        boolean $z0;
        int $i0;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: java.util.Locale;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("locale cannot be null");

        throw $r4;

     label1:
        $r2 = r0.<android.graphics.Paint: java.util.Locale mLocale>;

        $z0 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return;

     label2:
        r0.<android.graphics.Paint: java.util.Locale mLocale> = r1;

        $i0 = r0.<android.graphics.Paint: int mNativePaint>;

        $r3 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        staticinvoke <android.graphics.Paint: void native_setTextLocale(int,java.lang.String)>($i0, $r3);

        return;
    }

    public native void setTextScaleX(float);

    public native void setTextSize(float);

    public native void setTextSkewX(float);

    public android.graphics.Typeface setTypeface(android.graphics.Typeface)
    {
        android.graphics.Paint r0;
        android.graphics.Typeface r1;
        int i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Typeface;

        i0 = 0;

        if r1 == null goto label1;

        i0 = r1.<android.graphics.Typeface: int native_instance>;

     label1:
        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: int native_setTypeface(int,int)>($i1, i0);

        r0.<android.graphics.Paint: android.graphics.Typeface mTypeface> = r1;

        return r1;
    }

    public native void setUnderlineText(boolean);

    public android.graphics.Xfermode setXfermode(android.graphics.Xfermode)
    {
        android.graphics.Paint r0;
        android.graphics.Xfermode r1;
        int i0, $i1;

        r0 := @this: android.graphics.Paint;

        r1 := @parameter0: android.graphics.Xfermode;

        i0 = 0;

        if r1 == null goto label1;

        i0 = r1.<android.graphics.Xfermode: int native_instance>;

     label1:
        $i1 = r0.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.graphics.Paint: int native_setXfermode(int,int)>($i1, i0);

        r0.<android.graphics.Paint: android.graphics.Xfermode mXfermode> = r1;

        return r1;
    }
}
