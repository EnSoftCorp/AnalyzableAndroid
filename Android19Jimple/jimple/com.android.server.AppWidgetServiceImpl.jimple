class com.android.server.AppWidgetServiceImpl extends java.lang.Object
{
    private static final int CURRENT_VERSION;
    private static boolean DBG;
    private static final int KEYGUARD_HOST_ID;
    private static final java.lang.String KEYGUARD_HOST_PACKAGE;
    private static final int MIN_UPDATE_PERIOD;
    private static final java.lang.String SETTINGS_FILENAME;
    private static final java.lang.String TAG;
    final android.app.AlarmManager mAlarmManager;
    final java.util.ArrayList mAppWidgetIds;
    private final java.util.HashMap mBoundRemoteViewsServices;
    final android.content.Context mContext;
    java.util.ArrayList mDeletedHosts;
    java.util.ArrayList mDeletedProviders;
    final boolean mHasFeature;
    final java.util.ArrayList mHosts;
    final java.util.ArrayList mInstalledProviders;
    java.util.Locale mLocale;
    int mMaxWidgetBitmapMemory;
    int mNextAppWidgetId;
    final java.util.HashSet mPackagesWithBindWidgetPermission;
    final android.content.pm.IPackageManager mPm;
    private final java.util.HashMap mRemoteViewsServicesAppWidgets;
    boolean mSafeMode;
    private final android.os.Handler mSaveStateHandler;
    private final java.lang.Runnable mSaveStateRunnable;
    boolean mStateLoaded;
    final int mUserId;

    static void <clinit>()
    {
        <com.android.server.AppWidgetServiceImpl: java.lang.String TAG> = "AppWidgetServiceImpl";

        <com.android.server.AppWidgetServiceImpl: java.lang.String SETTINGS_FILENAME> = "appwidgets.xml";

        <com.android.server.AppWidgetServiceImpl: int MIN_UPDATE_PERIOD> = 1800000;

        <com.android.server.AppWidgetServiceImpl: java.lang.String KEYGUARD_HOST_PACKAGE> = "com.android.keyguard";

        <com.android.server.AppWidgetServiceImpl: int KEYGUARD_HOST_ID> = 1262836039;

        <com.android.server.AppWidgetServiceImpl: int CURRENT_VERSION> = 1;

        <com.android.server.AppWidgetServiceImpl: boolean DBG> = 0;

        return;
    }

    void <init>(android.content.Context, int, android.os.Handler)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.content.Context r1, $r13;
        int i0;
        android.os.Handler r2;
        java.util.HashMap $r3, $r4;
        java.util.ArrayList $r5, $r6, $r7, $r9, $r10;
        java.util.HashSet $r8;
        com.android.server.AppWidgetServiceImpl$2 $r11;
        android.content.pm.IPackageManager $r12;
        java.lang.Object $r14;
        android.content.pm.PackageManager $r15;
        android.app.AlarmManager $r16;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mRemoteViewsServicesAppWidgets> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders> = $r5;

        r0.<com.android.server.AppWidgetServiceImpl: int mNextAppWidgetId> = 1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts> = $r7;

        $r8 = new java.util.HashSet;

        specialinvoke $r8.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.AppWidgetServiceImpl: java.util.HashSet mPackagesWithBindWidgetPermission> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mDeletedProviders> = $r9;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mDeletedHosts> = $r10;

        $r11 = new com.android.server.AppWidgetServiceImpl$2;

        specialinvoke $r11.<com.android.server.AppWidgetServiceImpl$2: void <init>(com.android.server.AppWidgetServiceImpl)>(r0);

        r0.<com.android.server.AppWidgetServiceImpl: java.lang.Runnable mSaveStateRunnable> = $r11;

        r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext> = r1;

        $r12 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        r0.<com.android.server.AppWidgetServiceImpl: android.content.pm.IPackageManager mPm> = $r12;

        $r13 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r16 = (android.app.AlarmManager) $r14;

        r0.<com.android.server.AppWidgetServiceImpl: android.app.AlarmManager mAlarmManager> = $r16;

        r0.<com.android.server.AppWidgetServiceImpl: int mUserId> = i0;

        r0.<com.android.server.AppWidgetServiceImpl: android.os.Handler mSaveStateHandler> = r2;

        $r15 = virtualinvoke r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r15.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.software.app_widgets");

        r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature> = $z0;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void computeMaximumWidgetBitmapMemory()>();

        return;
    }

    static void access$000(com.android.server.AppWidgetServiceImpl)
    {
        com.android.server.AppWidgetServiceImpl r0;

        r0 := @parameter0: com.android.server.AppWidgetServiceImpl;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        return;
    }

    private void bindAppWidgetIdImpl(int, android.content.ComponentName, android.os.Bundle)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, $i2;
        android.content.ComponentName r1, $r30;
        android.os.Bundle r2, r6, $r14;
        long l1;
        java.lang.Throwable r3, r5, $r40, $r43;
        java.util.ArrayList r4, $r10, $r11;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r7;
        com.android.server.AppWidgetServiceImpl$Provider r8, $r9, $r32;
        boolean $z0, $z1, $z2, $z3;
        int[] $r12, $r13;
        java.lang.StringBuilder $r15, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r31, $r35, $r36, $r37, $r38, $r39, $r42;
        java.lang.IllegalArgumentException $r16, $r18, $r27, $r33;
        java.lang.String $r17, $r22, $r34, $r41;
        android.appwidget.AppWidgetProviderInfo $r29;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: android.os.Bundle;

        $z0 = <com.android.server.AppWidgetServiceImpl: boolean DBG>;

        if $z0 == 0 goto label01;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bindAppWidgetIdImpl appwid=");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider=");

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void log(java.lang.String)>($r41);

     label01:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label02:
        r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r4;

     label03:
        $z1 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z1 != 0 goto label05;

        exitmonitor r4;

     label04:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label05:
        r6 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: android.os.Bundle cloneIfLocalBinder(android.os.Bundle)>(r2);

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r7 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>(i0);

     label06:
        if r7 != null goto label12;

     label07:
        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad appWidgetId");

        throw $r33;

     label08:
        $r40 := @caughtexception;

        r5 = $r40;

     label09:
        exitmonitor r4;

     label10:
        throw r5;

     label11:
        $r43 := @caughtexception;

        r3 = $r43;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r3;

     label12:
        $r9 = r7.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if $r9 == null goto label13;

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("appWidgetId ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already bound to ");

        $r32 = r7.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $r29 = $r32.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r30 = $r29.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r27;

     label13:
        r8 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Provider lookupProviderLocked(android.content.ComponentName)>(r1);

     label14:
        if r8 != null goto label16;

     label15:
        $r18 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a appwidget provider: ");

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label16:
        $z3 = r8.<com.android.server.AppWidgetServiceImpl$Provider: boolean zombie>;

        if $z3 == 0 goto label17;

        $r16 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t bind to a 3rd party provider in safe mode: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label17:
        r7.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider> = r8;

     label18:
        if r6 != null goto label20;

     label19:
        $r14 = new android.os.Bundle;

        specialinvoke $r14.<android.os.Bundle: void <init>()>();

        r6 = $r14;

     label20:
        r7.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options> = r6;

        $z2 = virtualinvoke r6.<android.os.Bundle: boolean containsKey(java.lang.String)>("appWidgetCategory");

        if $z2 != 0 goto label21;

        virtualinvoke r6.<android.os.Bundle: void putInt(java.lang.String,int)>("appWidgetCategory", 1);

     label21:
        $r10 = r8.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

        $r11 = r8.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        $i2 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        if $i2 != 1 goto label22;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void sendEnableIntentLocked(com.android.server.AppWidgetServiceImpl$Provider)>(r8);

     label22:
        $r13 = newarray (int)[1];

        $r13[0] = i0;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void sendUpdateIntentLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>(r8, $r13);

        $r12 = staticinvoke <com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Provider)>(r8);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void registerForBroadcastsLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>(r8, $r12);

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

        exitmonitor r4;

     label23:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label08;
        catch java.lang.Throwable from label13 to label14 with label08;
        catch java.lang.Throwable from label15 to label16 with label08;
        catch java.lang.Throwable from label16 to label17 with label08;
        catch java.lang.Throwable from label17 to label18 with label08;
        catch java.lang.Throwable from label19 to label20 with label08;
        catch java.lang.Throwable from label20 to label21 with label08;
        catch java.lang.Throwable from label21 to label22 with label08;
        catch java.lang.Throwable from label22 to label23 with label08;
    }

    private boolean callerHasBindAppWidgetPermission(java.lang.String)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1;
        int i0, $i1;
        boolean z0, z1;
        java.util.ArrayList r3;
        java.lang.Throwable r4, $r7;
        java.util.HashSet $r5;
        java.lang.Exception $r6;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label1:
        $i1 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: int getUidForPackage(java.lang.String)>(r1);

        z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i0, $i1);

     label2:
        if z0 != 0 goto label4;

        return 0;

     label3:
        $r6 := @caughtexception;

        return 0;

     label4:
        r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r3;

     label5:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        $r5 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashSet mPackagesWithBindWidgetPermission>;

        z1 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        exitmonitor r3;

     label6:
        return z1;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

     label8:
        exitmonitor r3;

     label9:
        throw r4;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private android.appwidget.AppWidgetProviderInfo cloneIfLocalBinder(android.appwidget.AppWidgetProviderInfo)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.appwidget.AppWidgetProviderInfo r1;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.appwidget.AppWidgetProviderInfo;

        $z0 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean isLocalBinder()>();

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        r1 = virtualinvoke r1.<android.appwidget.AppWidgetProviderInfo: android.appwidget.AppWidgetProviderInfo clone()>();

     label1:
        return r1;
    }

    private android.os.Bundle cloneIfLocalBinder(android.os.Bundle)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.os.Bundle r1, $r3;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.os.Bundle;

        $z0 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean isLocalBinder()>();

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<android.os.Bundle: java.lang.Object clone()>();

        $r3 = (android.os.Bundle) $r2;

        return $r3;

     label1:
        return r1;
    }

    private android.widget.RemoteViews cloneIfLocalBinder(android.widget.RemoteViews)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.widget.RemoteViews r1;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.widget.RemoteViews;

        $z0 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean isLocalBinder()>();

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        r1 = virtualinvoke r1.<android.widget.RemoteViews: android.widget.RemoteViews clone()>();

     label1:
        return r1;
    }

    private void decrementAppWidgetServiceRefCount(com.android.server.AppWidgetServiceImpl$AppWidgetId)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r1;
        java.util.Iterator r2;
        android.content.Intent$FilterComparison r3;
        java.util.HashSet r4;
        java.util.HashMap $r5, $r8;
        java.util.Set $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7, $r9;
        int $i0;
        java.lang.Integer $r10;
        android.content.Intent $r11;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$AppWidgetId;

        $r5 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mRemoteViewsServicesAppWidgets>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.Intent$FilterComparison) $r7;

        $r8 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mRemoteViewsServicesAppWidgets>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.util.HashSet) $r9;

        $i0 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z1 = virtualinvoke r4.<java.util.HashSet: boolean remove(java.lang.Object)>($r10);

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r4.<java.util.HashSet: boolean isEmpty()>();

        if $z2 == 0 goto label1;

        $r11 = virtualinvoke r3.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void destroyRemoteViewsService(android.content.Intent,com.android.server.AppWidgetServiceImpl$AppWidgetId)>($r11, r1);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        return;
    }

    private void destroyRemoteViewsService(android.content.Intent, com.android.server.AppWidgetServiceImpl$AppWidgetId)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.content.Intent r1;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r2;
        com.android.server.AppWidgetServiceImpl$1 r3, $r5;
        int i0, $i2;
        long l1;
        java.lang.Throwable r4, $r9;
        com.android.server.AppWidgetServiceImpl$Provider $r6;
        android.os.UserHandle $r7;
        android.content.Context $r8;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.content.Intent;

        r2 := @parameter1: com.android.server.AppWidgetServiceImpl$AppWidgetId;

        $r5 = new com.android.server.AppWidgetServiceImpl$1;

        specialinvoke $r5.<com.android.server.AppWidgetServiceImpl$1: void <init>(com.android.server.AppWidgetServiceImpl,android.content.Intent)>(r0, r1);

        r3 = $r5;

        $r6 = r2.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $i2 = $r6.<com.android.server.AppWidgetServiceImpl$Provider: int uid>;

        i0 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i2);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r8 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r7 = new android.os.UserHandle;

        specialinvoke $r7.<android.os.UserHandle: void <init>(int)>(i0);

        virtualinvoke $r8.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r1, r3, 1, $r7);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void dumpAppWidgetId(com.android.server.AppWidgetServiceImpl$AppWidgetId, int, java.io.PrintWriter)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r1;
        int i0, $i1, $i2, $i3;
        java.io.PrintWriter r2;
        com.android.server.AppWidgetServiceImpl$Host $r3, $r4, $r6, $r8, $r11;
        java.lang.String $r5, $r16;
        com.android.server.AppWidgetServiceImpl$Provider $r7, $r12;
        android.widget.RemoteViews $r9, $r10;
        com.android.internal.appwidget.IAppWidgetHost $r13;
        android.content.ComponentName $r14;
        android.appwidget.AppWidgetProviderInfo $r15;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$AppWidgetId;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  [");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("] id=");

        $i1 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    hostId=");

        $r3 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $i2 = $r3.<com.android.server.AppWidgetServiceImpl$Host: int hostId>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(32);

        $r4 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r5 = $r4.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(47);

        $r6 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $i3 = $r6.<com.android.server.AppWidgetServiceImpl$Host: int uid>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i3);

        $r7 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if $r7 == null goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    provider=");

        $r12 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $r15 = $r12.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r14 = $r15.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $r16 = virtualinvoke $r14.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

     label1:
        $r8 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        if $r8 == null goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    host.callbacks=");

        $r11 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r13 = $r11.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r13);

     label2:
        $r9 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.widget.RemoteViews views>;

        if $r9 == null goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    views=");

        $r10 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.widget.RemoteViews views>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r10);

     label3:
        return;
    }

    private void dumpHost(com.android.server.AppWidgetServiceImpl$Host, int, java.io.PrintWriter)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$Host r1;
        int i0, $i1, $i2, $i3;
        java.io.PrintWriter r2;
        java.lang.String $r3;
        com.android.internal.appwidget.IAppWidgetHost $r4;
        java.util.ArrayList $r5;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$Host;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  [");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("] hostId=");

        $i1 = r1.<com.android.server.AppWidgetServiceImpl$Host: int hostId>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(32);

        $r3 = r1.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        virtualinvoke r2.<java.io.PrintWriter: void print(char)>(47);

        $i2 = r1.<com.android.server.AppWidgetServiceImpl$Host: int uid>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void println(char)>(58);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    callbacks=");

        $r4 = r1.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    instances.size=");

        $r5 = r1.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" zombie=");

        $z0 = r1.<com.android.server.AppWidgetServiceImpl$Host: boolean zombie>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        return;
    }

    private void dumpProvider(com.android.server.AppWidgetServiceImpl$Provider, int, java.io.PrintWriter)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$Provider r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.io.PrintWriter r2;
        android.appwidget.AppWidgetProviderInfo r3;
        android.content.ComponentName $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$Provider;

        i0 := @parameter1: int;

        r2 := @parameter2: java.io.PrintWriter;

        r3 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  [");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("] provider ");

        $r4 = r3.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $r5 = virtualinvoke $r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r5);

        virtualinvoke r2.<java.io.PrintWriter: void println(char)>(58);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    min=(");

        $i1 = r3.<android.appwidget.AppWidgetProviderInfo: int minWidth>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("x");

        $i2 = r3.<android.appwidget.AppWidgetProviderInfo: int minHeight>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(")   minResize=(");

        $i3 = r3.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("x");

        $i4 = r3.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(") updatePeriodMillis=");

        $i5 = r3.<android.appwidget.AppWidgetProviderInfo: int updatePeriodMillis>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" resizeMode=");

        $i6 = r3.<android.appwidget.AppWidgetProviderInfo: int resizeMode>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i6);

        $i7 = r3.<android.appwidget.AppWidgetProviderInfo: int widgetCategory>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" autoAdvanceViewId=");

        $i8 = r3.<android.appwidget.AppWidgetProviderInfo: int autoAdvanceViewId>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" initialLayout=#");

        $i9 = r3.<android.appwidget.AppWidgetProviderInfo: int initialLayout>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i9);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" uid=");

        $i10 = r1.<com.android.server.AppWidgetServiceImpl$Provider: int uid>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i10);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" zombie=");

        $z0 = r1.<com.android.server.AppWidgetServiceImpl$Provider: boolean zombie>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        return;
    }

    private void ensureStateLoadedLocked()
    {
        com.android.server.AppWidgetServiceImpl r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mStateLoaded>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void loadAppWidgetListLocked()>();

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void loadStateLocked()>();

        r0.<com.android.server.AppWidgetServiceImpl: boolean mStateLoaded> = 1;

        return;
    }

    static int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Host)
    {
        com.android.server.AppWidgetServiceImpl$Host r0;
        int i0, i1, $i2;
        int[] r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.AppWidgetServiceImpl$AppWidgetId $r5;

        r0 := @parameter0: com.android.server.AppWidgetServiceImpl$Host;

        $r2 = r0.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r1 = newarray (int)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r4;

        $i2 = $r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        r1[i1] = $i2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    static int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Provider)
    {
        com.android.server.AppWidgetServiceImpl$Provider r0;
        int i0, i1, $i2;
        int[] r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        com.android.server.AppWidgetServiceImpl$AppWidgetId $r5;

        r0 := @parameter0: com.android.server.AppWidgetServiceImpl$Provider;

        $r2 = r0.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        r1 = newarray (int)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r4;

        $i2 = $r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        r1[i1] = $i2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    static java.io.File getSettingsFile(int)
    {
        int i0;
        java.io.File $r0, $r1;

        i0 := @parameter0: int;

        $r0 = new java.io.File;

        $r1 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(i0);

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, "appwidgets.xml");

        return $r0;
    }

    private void incrementAppWidgetServiceRefCount(int, android.content.Intent$FilterComparison)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0;
        android.content.Intent$FilterComparison r1;
        java.util.HashSet r2, $r4;
        java.util.HashMap $r3, $r5, $r8;
        boolean $z0;
        java.lang.Integer $r7;
        java.lang.Object $r9;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent$FilterComparison;

        $r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mRemoteViewsServicesAppWidgets>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r8 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mRemoteViewsServicesAppWidgets>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.HashSet) $r9;

     label1:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r7);

        return;

     label2:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = $r4;

        $r5 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mRemoteViewsServicesAppWidgets>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        goto label1;
    }

    private boolean isLocalBinder()
    {
        com.android.server.AppWidgetServiceImpl r0;
        int $i0, $i1;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        if $i0 != $i1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void log(java.lang.String)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;
        int $i0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("u=");

        $i0 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r7);

        return;
    }

    private com.android.server.AppWidgetServiceImpl$Provider parseProviderInfoXml(android.content.ComponentName, android.content.pm.ResolveInfo)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.content.ComponentName r1, $r32;
        android.content.pm.ResolveInfo r2;
        android.content.pm.ActivityInfo r3;
        android.content.res.XmlResourceParser r4;
        java.lang.Throwable r5, $r42, $r47;
        java.lang.Exception r6, $r43, $r48;
        android.util.AttributeSet r7;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        com.android.server.AppWidgetServiceImpl$Provider r8, $r20;
        android.appwidget.AppWidgetProviderInfo r9, $r22;
        android.content.res.TypedArray r10;
        android.util.TypedValue r11, r12, r13, r14;
        android.content.Context $r15, $r21, $r29;
        java.lang.String r16, $r18, $r19, $r24, $r30, $r35, $r41, $r46, $r51;
        android.content.pm.PackageManager $r17, $r26, $r28;
        boolean $z0;
        android.content.pm.ApplicationInfo $r23;
        android.content.res.Resources $r25;
        int[] $r27;
        java.lang.CharSequence $r31;
        java.lang.StringBuilder $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r44, $r45, $r49, $r50, $r52;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.content.pm.ResolveInfo;

        r3 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        r4 = null;

     label01:
        $r15 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r17 = virtualinvoke $r15.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r4 = virtualinvoke r3.<android.content.pm.ActivityInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>($r17, "android.appwidget.provider");

     label02:
        if r4 != null goto label06;

     label03:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No android.appwidget.provider meta-data for AppWidget provider \'");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r46);

     label04:
        if r4 == null goto label05;

        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

     label05:
        return null;

     label06:
        r7 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r4);

     label07:
        i0 = interfaceinvoke r4.<android.content.res.XmlResourceParser: int next()>();

     label08:
        if i0 == 1 goto label09;

        if i0 != 2 goto label07;

     label09:
        $r19 = "appwidget-provider";

        $r18 = interfaceinvoke r4.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z0 != 0 goto label11;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Meta-data does not start with appwidget-provider tag for AppWidget provider \'");

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r41);

     label10:
        if r4 == null goto label05;

        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

        return null;

     label11:
        $r20 = new com.android.server.AppWidgetServiceImpl$Provider;

        specialinvoke $r20.<com.android.server.AppWidgetServiceImpl$Provider: void <init>()>();

        r8 = $r20;

     label12:
        $r22 = new android.appwidget.AppWidgetProviderInfo;

        specialinvoke $r22.<android.appwidget.AppWidgetProviderInfo: void <init>()>();

        r9 = $r22;

        r8.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info> = r9;

        r9.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider> = r1;

        $r23 = r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i5 = $r23.<android.content.pm.ApplicationInfo: int uid>;

        r8.<com.android.server.AppWidgetServiceImpl$Provider: int uid> = $i5;

        $r21 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r26 = virtualinvoke $r21.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r24 = r3.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $i6 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        $r25 = virtualinvoke $r26.<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>($r24, $i6);

        $r27 = <com.android.internal.R$styleable: int[] AppWidgetProviderInfo>;

        r10 = virtualinvoke $r25.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r7, $r27);

        r11 = virtualinvoke r10.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(0);

     label13:
        if r11 == null goto label30;

     label14:
        i1 = r11.<android.util.TypedValue: int data>;

     label15:
        r9.<android.appwidget.AppWidgetProviderInfo: int minWidth> = i1;

        r12 = virtualinvoke r10.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(1);

     label16:
        if r12 == null goto label31;

     label17:
        i2 = r12.<android.util.TypedValue: int data>;

     label18:
        r9.<android.appwidget.AppWidgetProviderInfo: int minHeight> = i2;

        r13 = virtualinvoke r10.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(8);

     label19:
        if r13 == null goto label32;

     label20:
        i3 = r13.<android.util.TypedValue: int data>;

     label21:
        r9.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth> = i3;

        r14 = virtualinvoke r10.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(9);

     label22:
        if r14 == null goto label34;

     label23:
        i4 = r14.<android.util.TypedValue: int data>;

     label24:
        r9.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight> = i4;

        $i7 = virtualinvoke r10.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        r9.<android.appwidget.AppWidgetProviderInfo: int updatePeriodMillis> = $i7;

        $i8 = virtualinvoke r10.<android.content.res.TypedArray: int getResourceId(int,int)>(3, 0);

        r9.<android.appwidget.AppWidgetProviderInfo: int initialLayout> = $i8;

        $i9 = virtualinvoke r10.<android.content.res.TypedArray: int getResourceId(int,int)>(10, 0);

        r9.<android.appwidget.AppWidgetProviderInfo: int initialKeyguardLayout> = $i9;

        r16 = virtualinvoke r10.<android.content.res.TypedArray: java.lang.String getString(int)>(4);

     label25:
        if r16 == null goto label27;

     label26:
        $r32 = new android.content.ComponentName;

        $r35 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        specialinvoke $r32.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r35, r16);

        r9.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName configure> = $r32;

     label27:
        $r29 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r28 = virtualinvoke $r29.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r31 = virtualinvoke r3.<android.content.pm.ActivityInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>($r28);

        $r30 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        r9.<android.appwidget.AppWidgetProviderInfo: java.lang.String label> = $r30;

        $i11 = virtualinvoke r2.<android.content.pm.ResolveInfo: int getIconResource()>();

        r9.<android.appwidget.AppWidgetProviderInfo: int icon> = $i11;

        $i10 = virtualinvoke r10.<android.content.res.TypedArray: int getResourceId(int,int)>(5, 0);

        r9.<android.appwidget.AppWidgetProviderInfo: int previewImage> = $i10;

        $i14 = virtualinvoke r10.<android.content.res.TypedArray: int getResourceId(int,int)>(6, -1);

        r9.<android.appwidget.AppWidgetProviderInfo: int autoAdvanceViewId> = $i14;

        $i13 = virtualinvoke r10.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        r9.<android.appwidget.AppWidgetProviderInfo: int resizeMode> = $i13;

        $i12 = virtualinvoke r10.<android.content.res.TypedArray: int getInt(int,int)>(11, 1);

        r9.<android.appwidget.AppWidgetProviderInfo: int widgetCategory> = $i12;

        virtualinvoke r10.<android.content.res.TypedArray: void recycle()>();

     label28:
        if r4 == null goto label29;

        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

     label29:
        return r8;

     label30:
        i1 = 0;

        goto label15;

     label31:
        i2 = 0;

        goto label18;

     label32:
        i3 = r9.<android.appwidget.AppWidgetProviderInfo: int minWidth>;

     label33:
        goto label21;

     label34:
        i4 = r9.<android.appwidget.AppWidgetProviderInfo: int minHeight>;

     label35:
        goto label24;

     label36:
        $r43 := @caughtexception;

        r6 = $r43;

     label37:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML parsing failed for AppWidget provider \'");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppWidgetServiceImpl", $r51, r6);

     label38:
        if r4 == null goto label05;

        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

        return null;

     label39:
        $r42 := @caughtexception;

        r5 = $r42;

     label40:
        if r4 == null goto label41;

        interfaceinvoke r4.<android.content.res.XmlResourceParser: void close()>();

     label41:
        throw r5;

     label42:
        $r47 := @caughtexception;

        r5 = $r47;

        goto label40;

     label43:
        $r48 := @caughtexception;

        r6 = $r48;

        goto label37;

        catch java.lang.Exception from label01 to label02 with label36;
        catch java.lang.Throwable from label01 to label02 with label39;
        catch java.lang.Exception from label03 to label04 with label36;
        catch java.lang.Throwable from label03 to label04 with label39;
        catch java.lang.Exception from label06 to label07 with label36;
        catch java.lang.Throwable from label06 to label07 with label39;
        catch java.lang.Exception from label07 to label08 with label36;
        catch java.lang.Throwable from label07 to label08 with label39;
        catch java.lang.Exception from label09 to label10 with label36;
        catch java.lang.Throwable from label09 to label10 with label39;
        catch java.lang.Exception from label11 to label12 with label36;
        catch java.lang.Throwable from label11 to label12 with label39;
        catch java.lang.Exception from label12 to label13 with label43;
        catch java.lang.Throwable from label12 to label13 with label42;
        catch java.lang.Exception from label14 to label15 with label43;
        catch java.lang.Throwable from label14 to label15 with label42;
        catch java.lang.Exception from label15 to label16 with label43;
        catch java.lang.Throwable from label15 to label16 with label42;
        catch java.lang.Exception from label17 to label18 with label43;
        catch java.lang.Throwable from label17 to label18 with label42;
        catch java.lang.Exception from label18 to label19 with label43;
        catch java.lang.Throwable from label18 to label19 with label42;
        catch java.lang.Exception from label20 to label21 with label43;
        catch java.lang.Throwable from label20 to label21 with label42;
        catch java.lang.Exception from label21 to label22 with label43;
        catch java.lang.Throwable from label21 to label22 with label42;
        catch java.lang.Exception from label23 to label24 with label43;
        catch java.lang.Throwable from label23 to label24 with label42;
        catch java.lang.Exception from label24 to label25 with label43;
        catch java.lang.Throwable from label24 to label25 with label42;
        catch java.lang.Exception from label26 to label27 with label43;
        catch java.lang.Throwable from label26 to label27 with label42;
        catch java.lang.Exception from label27 to label28 with label43;
        catch java.lang.Throwable from label27 to label28 with label42;
        catch java.lang.Exception from label32 to label33 with label43;
        catch java.lang.Throwable from label32 to label33 with label42;
        catch java.lang.Exception from label34 to label35 with label43;
        catch java.lang.Throwable from label34 to label35 with label42;
        catch java.lang.Throwable from label37 to label38 with label39;
    }

    private void performUpgrade(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, i1, i2, $i3, $i4, $i5;
        com.android.server.AppWidgetServiceImpl$Host r1;
        java.lang.IllegalStateException $r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        java.lang.String $r6, $r7, $r14;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r15;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading widget database from ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for user ");

        $i5 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r14);

     label1:
        i1 = i0;

        if i1 != 0 goto label5;

        i2 = 0;

     label2:
        $r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i3 goto label4;

        $r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.AppWidgetServiceImpl$Host) $r5;

        if r1 == null goto label3;

        $r7 = "android";

        $r6 = r1.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        $i4 = r1.<com.android.server.AppWidgetServiceImpl$Host: int hostId>;

        if $i4 != 1262836039 goto label3;

        r1.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName> = "com.android.keyguard";

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        i1 = 1;

     label5:
        if i1 == 1 goto label6;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to upgrade widget database");

        throw $r2;

     label6:
        return;
    }

    private void saveStateAsync()
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $r2 = r0.<com.android.server.AppWidgetServiceImpl: android.os.Handler mSaveStateHandler>;

        $r1 = r0.<com.android.server.AppWidgetServiceImpl: java.lang.Runnable mSaveStateRunnable>;

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void unbindAppWidgetRemoteViewsServicesLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r1;
        int i0, $i1;
        java.util.Iterator r2;
        android.util.Pair r3;
        com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy r4;
        java.util.HashMap $r5, $r10;
        java.util.Set $r6;
        boolean $z0;
        java.lang.Object $r7, $r8, $r11;
        java.lang.Integer $r9;
        android.content.Context $r12;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$AppWidgetId;

        i0 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        $r5 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.util.Pair) $r7;

        $r8 = r3.<android.util.Pair: java.lang.Object first>;

        $r9 = (java.lang.Integer) $r8;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        if $i1 != i0 goto label1;

        $r10 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices>;

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy) $r11;

        virtualinvoke r4.<com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy: void disconnect()>();

        $r12 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        virtualinvoke $r12.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r4);

        interfaceinvoke r2.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void decrementAppWidgetServiceRefCount(com.android.server.AppWidgetServiceImpl$AppWidgetId)>(r1);

        return;
    }

    boolean addProviderLocked(android.content.pm.ResolveInfo)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.content.pm.ResolveInfo r1;
        com.android.server.AppWidgetServiceImpl$Provider r2;
        android.content.pm.ActivityInfo $r3, $r5, $r7, $r8;
        android.content.pm.ApplicationInfo $r4;
        int $i0, $i1;
        boolean $z0;
        android.content.ComponentName $r6;
        java.lang.String $r9, $r10;
        java.util.ArrayList $r11;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.content.pm.ResolveInfo;

        $r3 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r4 = $r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r4.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = 262144 & $i0;

        if $i1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r5 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $z0 = virtualinvoke $r5.<android.content.pm.ActivityInfo: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = new android.content.ComponentName;

        $r7 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r10 = $r7.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r8 = r1.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r9 = $r8.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r6.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r10, $r9);

        r2 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Provider parseProviderInfoXml(android.content.ComponentName,android.content.pm.ResolveInfo)>($r6, r1);

        if r2 == null goto label1;

        $r11 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return 1;
    }

    boolean addProvidersForPackageLocked(java.lang.String)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1, $r12, $r15;
        boolean z0, $z1;
        android.content.Intent r2, $r7;
        java.util.List r4;
        int i0, i1, $i2, $i3, $i4;
        android.content.pm.ResolveInfo r5;
        android.content.pm.ActivityInfo r6;
        android.content.Context $r9;
        android.content.pm.IPackageManager $r10;
        android.content.ContentResolver $r11;
        android.content.pm.ApplicationInfo $r13;
        java.lang.Object $r14;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        z0 = 0;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.appwidget.action.APPWIDGET_UPDATE");

        r2 = $r7;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

     label1:
        $r10 = r0.<com.android.server.AppWidgetServiceImpl: android.content.pm.IPackageManager mPm>;

        $r9 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r11 = virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = virtualinvoke r2.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r11);

        $i2 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        r4 = interfaceinvoke $r10.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r2, $r12, 128, $i2);

     label2:
        i0 = 0;

        if r4 != null goto label7;

     label3:
        i1 = 0;

     label4:
        if i1 >= i0 goto label9;

        $r14 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (android.content.pm.ResolveInfo) $r14;

        r6 = r5.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r13 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i4 = $r13.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = 262144 & $i4;

        if $i3 == 0 goto label8;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        $r16 := @caughtexception;

        return 0;

     label7:
        i0 = interfaceinvoke r4.<java.util.List: int size()>();

        goto label3;

     label8:
        $r15 = r6.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z1 == 0 goto label5;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean addProviderLocked(android.content.pm.ResolveInfo)>(r5);

        z0 = 1;

        goto label5;

     label9:
        return z0;

        catch android.os.RemoteException from label1 to label2 with label6;
    }

    public int allocateAppWidgetId(java.lang.String, int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1, $r16;
        int i0, i1, i2, $i3;
        java.util.ArrayList r2, $r7, $r8;
        java.lang.Throwable r3, $r17;
        com.android.server.AppWidgetServiceImpl$Host r4;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r5, $r6;
        boolean $z0, $z2;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: int enforceSystemOrCallingUid(java.lang.String)>(r1);

        r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r2;

     label1:
        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label3;

        exitmonitor r2;

     label2:
        return -1;

     label3:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        i2 = r0.<com.android.server.AppWidgetServiceImpl: int mNextAppWidgetId>;

        $i3 = i2 + 1;

        r0.<com.android.server.AppWidgetServiceImpl: int mNextAppWidgetId> = $i3;

        r4 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Host lookupOrAddHostLocked(int,java.lang.String,int)>(i1, r1, i0);

        $r6 = new com.android.server.AppWidgetServiceImpl$AppWidgetId;

        specialinvoke $r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: void <init>()>();

        r5 = $r6;

        r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId> = i2;

        r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host> = r4;

        $r7 = r4.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        $r8 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

        $z2 = <com.android.server.AppWidgetServiceImpl: boolean DBG>;

        if $z2 == 0 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allocating AppWidgetId for ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" host=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void log(java.lang.String)>($r16);

     label4:
        exitmonitor r2;

     label5:
        return i2;

     label6:
        $r17 := @caughtexception;

        r3 = $r17;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void bindAppWidgetId(int, android.content.ComponentName, android.os.Bundle)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0;
        android.content.ComponentName r1;
        android.os.Bundle r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8;
        android.content.Context $r4;
        java.lang.String $r9;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: android.os.Bundle;

        $r4 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bindAppWidgetId appWidgetId=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" provider=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BIND_APPWIDGET", $r9);

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void bindAppWidgetIdImpl(int,android.content.ComponentName,android.os.Bundle)>(i0, r1, r2);

        return;
    }

    public boolean bindAppWidgetIdIfAllowed(java.lang.String, int, android.content.ComponentName, android.os.Bundle)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1;
        int i0;
        android.content.ComponentName r2;
        android.os.Bundle r3;
        boolean $z0, $z1;
        android.content.Context $r5;
        java.lang.SecurityException $r6;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName;

        r3 := @parameter3: android.os.Bundle;

        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r5 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BIND_APPWIDGET", null);

     label2:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void bindAppWidgetIdImpl(int,android.content.ComponentName,android.os.Bundle)>(i0, r2, r3);

        return 1;

     label3:
        $r6 := @caughtexception;

        $z1 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean callerHasBindAppWidgetPermission(java.lang.String)>(r1);

        if $z1 != 0 goto label2;

        return 0;

        catch java.lang.SecurityException from label1 to label2 with label3;
    }

    public void bindRemoteViewsService(int, android.content.Intent, android.os.IBinder)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, i1, $i3, $i4, $i5, $i6;
        android.content.Intent r1;
        android.os.IBinder r2;
        java.util.ArrayList r3;
        java.lang.Throwable r4, r9, $r36, $r37, $r44;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r5;
        android.content.ComponentName r6;
        android.content.Intent$FilterComparison r7, $r18;
        android.util.Pair r8;
        boolean z0, $z1, $z2;
        long l2;
        com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy r10, $r21, r49;
        android.os.UserHandle r11, $r22;
        android.content.Context r12, $r30;
        android.content.pm.IPackageManager $r13;
        java.lang.String $r14, $r16, $r26, $r40, $r43;
        android.content.pm.ServiceInfo $r15;
        java.util.HashMap $r17, $r23, $r32, $r35;
        java.lang.Integer $r19;
        com.android.server.AppWidgetServiceImpl$Provider $r20;
        java.lang.StringBuilder $r24, $r25, $r27, $r28, $r29, $r33, $r38, $r39, $r42, $r47, $r48;
        java.lang.Object $r31;
        java.lang.SecurityException $r34;
        java.lang.IllegalArgumentException $r41, $r46;
        android.os.RemoteException $r45;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: android.os.IBinder;

        r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r3;

     label01:
        $z1 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z1 != 0 goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r5 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>(i0);

     label04:
        if r5 != null goto label09;

     label05:
        $r41 = new java.lang.IllegalArgumentException;

        specialinvoke $r41.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad appWidgetId");

        throw $r41;

     label06:
        $r36 := @caughtexception;

        r4 = $r36;

     label07:
        exitmonitor r3;

     label08:
        throw r4;

     label09:
        r6 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

     label10:
        $r14 = "android.permission.BIND_REMOTEVIEWS";

        $r13 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

        $i3 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        $r15 = interfaceinvoke $r13.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r6, 4096, $i3);

        $r16 = $r15.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z2 != 0 goto label13;

        $r34 = new java.lang.SecurityException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Selected service does not require android.permission.BIND_REMOTEVIEWS: ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.lang.SecurityException: void <init>(java.lang.String)>($r40);

        throw $r34;

     label11:
        $r45 := @caughtexception;

     label12:
        $r46 = new java.lang.IllegalArgumentException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown component ");

        $r42 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r43);

        throw $r46;

     label13:
        $r18 = new android.content.Intent$FilterComparison;

        specialinvoke $r18.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r1);

        r7 = $r18;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r8 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r19, r7);

        $r17 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices>;

        z0 = virtualinvoke $r17.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r8);

     label14:
        if z0 == 0 goto label16;

     label15:
        $r32 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices>;

        $r31 = virtualinvoke $r32.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        r49 = (com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy) $r31;

        virtualinvoke r49.<com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy: void disconnect()>();

        $r30 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        virtualinvoke $r30.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r49);

        $r35 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices>;

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r8);

     label16:
        $r20 = r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $i4 = $r20.<com.android.server.AppWidgetServiceImpl$Provider: int uid>;

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        $i5 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        if i1 == $i5 goto label17;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppWidgetServiceImpl of user ");

        $i6 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" binding to provider on user ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r26);

     label17:
        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label18:
        $r21 = new com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy;

        specialinvoke $r21.<com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy: void <init>(android.util.Pair,android.os.IBinder)>(r8, r2);

        r10 = $r21;

     label19:
        r12 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r22 = new android.os.UserHandle;

        specialinvoke $r22.<android.os.UserHandle: void <init>(int)>(i1);

        r11 = $r22;

        virtualinvoke r12.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r1, r10, 1, r11);

        $r23 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices>;

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r10);

     label20:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void incrementAppWidgetServiceRefCount(int,android.content.Intent$FilterComparison)>(i0, r7);

        exitmonitor r3;

     label21:
        return;

     label22:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r9;

     label23:
        $r44 := @caughtexception;

        r9 = $r44;

        goto label22;

     label24:
        $r37 := @caughtexception;

        r9 = $r37;

        goto label22;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch android.os.RemoteException from label10 to label11 with label11;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label13 to label14 with label06;
        catch java.lang.Throwable from label15 to label16 with label06;
        catch java.lang.Throwable from label16 to label17 with label06;
        catch java.lang.Throwable from label17 to label18 with label06;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label20 to label21 with label06;
        catch java.lang.Throwable from label22 to label23 with label06;
    }

    boolean canAccessAppWidgetId(com.android.server.AppWidgetServiceImpl$AppWidgetId, int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r1;
        int i0, $i1, $i2;
        com.android.server.AppWidgetServiceImpl$Host $r2;
        boolean $z0;
        com.android.server.AppWidgetServiceImpl$Provider $r3, $r5;
        android.content.Context $r4;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$AppWidgetId;

        i0 := @parameter1: int;

        $r2 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $z0 = virtualinvoke $r2.<com.android.server.AppWidgetServiceImpl$Host: boolean uidMatches(int)>(i0);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        $r3 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if $r3 == null goto label3;

        $r5 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $i2 = $r5.<com.android.server.AppWidgetServiceImpl$Provider: int uid>;

        if $i2 == i0 goto label1;

     label3:
        $r4 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $i1 = virtualinvoke $r4.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.BIND_APPWIDGET");

        if $i1 == 0 goto label1;

        return 0;
    }

    void cancelBroadcasts(com.android.server.AppWidgetServiceImpl$Provider)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$Provider r1;
        long l0;
        java.lang.Throwable r2, $r11;
        boolean $z0;
        android.app.PendingIntent $r3, $r4, $r6;
        android.app.AlarmManager $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$Provider;

        $z0 = <com.android.server.AppWidgetServiceImpl: boolean DBG>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancelBroadcasts for ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void log(java.lang.String)>($r10);

     label1:
        $r3 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.app.PendingIntent broadcast>;

        if $r3 == null goto label4;

        $r5 = r0.<com.android.server.AppWidgetServiceImpl: android.app.AlarmManager mAlarmManager>;

        $r4 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.app.PendingIntent broadcast>;

        virtualinvoke $r5.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r4);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r6 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.app.PendingIntent broadcast>;

        virtualinvoke $r6.<android.app.PendingIntent: void cancel()>();

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        r1.<com.android.server.AppWidgetServiceImpl$Provider: android.app.PendingIntent broadcast> = null;

     label4:
        return;

     label5:
        $r11 := @caughtexception;

        r2 = $r11;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r2;

        catch java.lang.Throwable from label2 to label3 with label5;
    }

    void computeMaximumWidgetBitmapMemory()
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.view.Display r1;
        android.graphics.Point r2, $r6;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.view.WindowManager $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $r3 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r5 = (android.view.WindowManager) $r4;

        r1 = interfaceinvoke $r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r6 = new android.graphics.Point;

        specialinvoke $r6.<android.graphics.Point: void <init>()>();

        r2 = $r6;

        virtualinvoke r1.<android.view.Display: void getRealSize(android.graphics.Point)>(r2);

        $i0 = r2.<android.graphics.Point: int x>;

        $i2 = 6 * $i0;

        $i1 = r2.<android.graphics.Point: int y>;

        $i3 = $i2 * $i1;

        r0.<com.android.server.AppWidgetServiceImpl: int mMaxWidgetBitmapMemory> = $i3;

        return;
    }

    public void deleteAllHosts()
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.util.ArrayList r1, $r4, $r5;
        java.lang.Throwable r2, $r7;
        int i0, i1, i2;
        boolean z0, $z1, $z2;
        com.android.server.AppWidgetServiceImpl$Host r3;
        java.lang.Object $r6;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label01:
        $z1 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z1 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label04:
        z0 = 0;

        i2 = i1 - 1;

     label05:
        if i2 < 0 goto label08;

     label06:
        $r5 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r3 = (com.android.server.AppWidgetServiceImpl$Host) $r6;

        $z2 = virtualinvoke r3.<com.android.server.AppWidgetServiceImpl$Host: boolean uidMatches(int)>(i0);

        if $z2 == 0 goto label15;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void deleteHostLocked(com.android.server.AppWidgetServiceImpl$Host)>(r3);

     label07:
        z0 = 1;

        goto label15;

     label08:
        if z0 == 0 goto label10;

     label09:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

     label10:
        exitmonitor r1;

     label11:
        return;

     label12:
        $r7 := @caughtexception;

        r2 = $r7;

     label13:
        exitmonitor r1;

     label14:
        throw r2;

     label15:
        i2 = i2 + -1;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    public void deleteAppWidgetId(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r4;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r3;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r3 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>(i0);

     label04:
        if r3 == null goto label06;

     label05:
        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void deleteAppWidgetLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId)>(r3);

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

        r2 = $r4;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void deleteAppWidgetLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r1;
        com.android.server.AppWidgetServiceImpl$Host r2;
        com.android.server.AppWidgetServiceImpl$Provider r3;
        android.content.Intent r4, r5, $r10, $r17;
        java.util.ArrayList $r6, $r7, $r8, $r15;
        boolean $z2;
        android.appwidget.AppWidgetProviderInfo $r9, $r19;
        android.content.ComponentName $r12, $r18;
        int $i0, $i1, $i2, $i3;
        android.os.UserHandle $r14, $r22;
        android.content.Context $r16, $r20;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$AppWidgetId;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void unbindAppWidgetRemoteViewsServicesLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId)>(r1);

        r2 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r6 = r2.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void pruneHostLocked(com.android.server.AppWidgetServiceImpl$Host)>(r2);

        $r7 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        r3 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if r3 == null goto label1;

        $r8 = r3.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        virtualinvoke $r8.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $z2 = r3.<com.android.server.AppWidgetServiceImpl$Provider: boolean zombie>;

        if $z2 != 0 goto label1;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("android.appwidget.action.APPWIDGET_DELETED");

        r4 = $r10;

        $r9 = r3.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r12 = $r9.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r12);

        $i0 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("appWidgetId", $i0);

        $r16 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r14 = new android.os.UserHandle;

        $i1 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        specialinvoke $r14.<android.os.UserHandle: void <init>(int)>($i1);

        virtualinvoke $r16.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r4, $r14);

        $r15 = r3.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        $i2 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label1;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void cancelBroadcasts(com.android.server.AppWidgetServiceImpl$Provider)>(r3);

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(java.lang.String)>("android.appwidget.action.APPWIDGET_DISABLED");

        r5 = $r17;

        $r19 = r3.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r18 = $r19.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        virtualinvoke r5.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r18);

        $r20 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r22 = new android.os.UserHandle;

        $i3 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        specialinvoke $r22.<android.os.UserHandle: void <init>(int)>($i3);

        virtualinvoke $r20.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r5, $r22);

     label1:
        return;
    }

    public void deleteHost(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, $i1;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r4;
        com.android.server.AppWidgetServiceImpl$Host r3;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Host lookupHostLocked(int,int)>($i1, i0);

     label04:
        if r3 == null goto label06;

     label05:
        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void deleteHostLocked(com.android.server.AppWidgetServiceImpl$Host)>(r3);

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

        r2 = $r4;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void deleteHostLocked(com.android.server.AppWidgetServiceImpl$Host)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$Host r1;
        int i0, $i1;
        java.util.ArrayList $r2, $r3, $r4, $r5, $r6;
        java.lang.Object $r7;
        com.android.server.AppWidgetServiceImpl$AppWidgetId $r8;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$Host;

        $r2 = r1.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r6 = r1.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r8 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r7;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void deleteAppWidgetLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId)>($r8);

        i0 = i0 + -1;

        goto label1;

     label2:
        $r3 = r1.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        $r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r5 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mDeletedHosts>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        r1.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks> = null;

        return;
    }

    void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.ArrayList r4, $r7, $r8, $r9, $r10, $r11, $r13, $r17, $r19, $r20, $r22;
        java.lang.Throwable r5, $r32;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12;
        android.content.Context $r6;
        java.lang.Object $r12, $r14, $r21, $r23, $r24;
        com.android.server.AppWidgetServiceImpl$Provider $r15, $r27;
        com.android.server.AppWidgetServiceImpl$Host $r16, $r18;
        com.android.server.AppWidgetServiceImpl$AppWidgetId $r25;
        java.lang.StringBuilder $r26, $r28, $r29, $r30, $r31;
        java.lang.String $r33;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r6 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $i10 = virtualinvoke $r6.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i10 == 0 goto label01;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump from from pid=");

        $i11 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i12 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r33);

        return;

     label01:
        r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r4;

     label02:
        $r7 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        i0 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Providers:");

     label03:
        i1 = 0;

     label04:
        if i1 >= i0 goto label07;

     label05:
        $r22 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r27 = (com.android.server.AppWidgetServiceImpl$Provider) $r23;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void dumpProvider(com.android.server.AppWidgetServiceImpl$Provider,int,java.io.PrintWriter)>($r27, i1, r2);

     label06:
        i1 = i1 + 1;

        goto label04;

     label07:
        $r8 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("AppWidgetIds:");

     label08:
        i3 = 0;

     label09:
        if i3 >= i2 goto label12;

     label10:
        $r19 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        $r24 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r25 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r24;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void dumpAppWidgetId(com.android.server.AppWidgetServiceImpl$AppWidgetId,int,java.io.PrintWriter)>($r25, i3, r2);

     label11:
        i3 = i3 + 1;

        goto label09;

     label12:
        $r9 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        i4 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Hosts:");

     label13:
        i5 = 0;

     label14:
        if i5 >= i4 goto label17;

     label15:
        $r20 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r21 = virtualinvoke $r20.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r18 = (com.android.server.AppWidgetServiceImpl$Host) $r21;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void dumpHost(com.android.server.AppWidgetServiceImpl$Host,int,java.io.PrintWriter)>($r18, i5, r2);

     label16:
        i5 = i5 + 1;

        goto label14;

     label17:
        $r10 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mDeletedProviders>;

        i6 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Deleted Providers:");

     label18:
        i7 = 0;

     label19:
        if i7 >= i6 goto label22;

     label20:
        $r17 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mDeletedProviders>;

        $r14 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        $r15 = (com.android.server.AppWidgetServiceImpl$Provider) $r14;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void dumpProvider(com.android.server.AppWidgetServiceImpl$Provider,int,java.io.PrintWriter)>($r15, i7, r2);

     label21:
        i7 = i7 + 1;

        goto label19;

     label22:
        $r11 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mDeletedHosts>;

        i8 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Deleted Hosts:");

     label23:
        i9 = 0;

     label24:
        if i9 >= i8 goto label27;

     label25:
        $r13 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mDeletedHosts>;

        $r12 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i9);

        $r16 = (com.android.server.AppWidgetServiceImpl$Host) $r12;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void dumpHost(com.android.server.AppWidgetServiceImpl$Host,int,java.io.PrintWriter)>($r16, i9, r2);

     label26:
        i9 = i9 + 1;

        goto label24;

     label27:
        exitmonitor r4;

     label28:
        return;

     label29:
        $r32 := @caughtexception;

        r5 = $r32;

     label30:
        exitmonitor r4;

     label31:
        throw r5;

        catch java.lang.Throwable from label02 to label03 with label29;
        catch java.lang.Throwable from label05 to label06 with label29;
        catch java.lang.Throwable from label07 to label08 with label29;
        catch java.lang.Throwable from label10 to label11 with label29;
        catch java.lang.Throwable from label12 to label13 with label29;
        catch java.lang.Throwable from label15 to label16 with label29;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch java.lang.Throwable from label20 to label21 with label29;
        catch java.lang.Throwable from label22 to label23 with label29;
        catch java.lang.Throwable from label25 to label26 with label29;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label30 to label31 with label29;
    }

    int enforceCallingUid(java.lang.String) throws java.lang.IllegalArgumentException
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1, $r7, $r13;
        int i0, i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r3, $r9;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12;
        android.content.pm.PackageManager$NameNotFoundException $r8;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

     label1:
        i1 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: int getUidForPackage(java.lang.String)>(r1);

     label2:
        $z0 = staticinvoke <android.os.UserHandle: boolean isSameApp(int,int)>(i0, i1);

        if $z0 != 0 goto label4;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("packageName and uid don\'t match packageName=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("packageName and uid don\'t match packageName=");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label4:
        return i0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    int enforceSystemOrCallingUid(java.lang.String) throws java.lang.IllegalArgumentException
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = staticinvoke <android.os.UserHandle: int getAppId(int)>(i0);

        if $i1 == 1000 goto label1;

        if i0 != 0 goto label2;

     label1:
        return i0;

     label2:
        $i2 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: int enforceCallingUid(java.lang.String)>(r1);

        return $i2;
    }

    public int[] getAppWidgetIds(android.content.ComponentName)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.content.ComponentName r1;
        java.util.ArrayList r2;
        java.lang.Throwable r3, $r7;
        com.android.server.AppWidgetServiceImpl$Provider r4;
        int[] r5, r6;
        int $i0, $i1;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.content.ComponentName;

        r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r4 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Provider lookupProviderLocked(android.content.ComponentName)>(r1);

     label2:
        if r4 == null goto label5;

     label3:
        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $i1 = r4.<com.android.server.AppWidgetServiceImpl$Provider: int uid>;

        if $i0 != $i1 goto label5;

        r6 = staticinvoke <com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Provider)>(r4);

        exitmonitor r2;

     label4:
        return r6;

     label5:
        r5 = newarray (int)[0];

        exitmonitor r2;

     label6:
        return r5;

     label7:
        $r7 := @caughtexception;

        r3 = $r7;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int[] getAppWidgetIdsForHost(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, $i1;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r6;
        com.android.server.AppWidgetServiceImpl$Host r3;
        int[] r4, r5;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Host lookupHostLocked(int,int)>($i1, i0);

     label2:
        if r3 == null goto label5;

     label3:
        r4 = staticinvoke <com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Host)>(r3);

        exitmonitor r1;

     label4:
        return r4;

     label5:
        r5 = newarray (int)[0];

        exitmonitor r1;

     label6:
        return r5;

     label7:
        $r6 := @caughtexception;

        r2 = $r6;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r9;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r3;
        android.appwidget.AppWidgetProviderInfo r4, $r8;
        boolean $z0, $z1;
        com.android.server.AppWidgetServiceImpl$Provider $r5, $r6, $r7;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return null;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r3 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>(i0);

     label04:
        if r3 == null goto label10;

     label05:
        $r5 = r3.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if $r5 == null goto label10;

        $r6 = r3.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $z1 = $r6.<com.android.server.AppWidgetServiceImpl$Provider: boolean zombie>;

        if $z1 != 0 goto label10;

        $r7 = r3.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $r8 = $r7.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        r4 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: android.appwidget.AppWidgetProviderInfo cloneIfLocalBinder(android.appwidget.AppWidgetProviderInfo)>($r8);

        exitmonitor r1;

     label06:
        return r4;

     label07:
        $r9 := @caughtexception;

        r2 = $r9;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        exitmonitor r1;

     label11:
        return null;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public android.os.Bundle getAppWidgetOptions(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r9;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r3;
        android.os.Bundle r4, r5, r6, $r7, $r8;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label03;

        r6 = <android.os.Bundle: android.os.Bundle EMPTY>;

        exitmonitor r1;

     label02:
        return r6;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r3 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>(i0);

     label04:
        if r3 == null goto label10;

     label05:
        $r7 = r3.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        if $r7 == null goto label10;

        $r8 = r3.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        r5 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: android.os.Bundle cloneIfLocalBinder(android.os.Bundle)>($r8);

        exitmonitor r1;

     label06:
        return r5;

     label07:
        $r9 := @caughtexception;

        r2 = $r9;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        r4 = <android.os.Bundle: android.os.Bundle EMPTY>;

        exitmonitor r1;

     label11:
        return r4;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public android.widget.RemoteViews getAppWidgetViews(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r10;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r3;
        android.widget.RemoteViews r4, $r5;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        $z0 = <com.android.server.AppWidgetServiceImpl: boolean DBG>;

        if $z0 == 0 goto label01;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAppWidgetViews id=");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void log(java.lang.String)>($r8);

     label01:
        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label02:
        $z1 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z1 != 0 goto label04;

        exitmonitor r1;

     label03:
        return null;

     label04:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r3 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>(i0);

     label05:
        if r3 == null goto label11;

     label06:
        $r5 = r3.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.widget.RemoteViews views>;

        r4 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: android.widget.RemoteViews cloneIfLocalBinder(android.widget.RemoteViews)>($r5);

        exitmonitor r1;

     label07:
        return r4;

     label08:
        $r10 := @caughtexception;

        r2 = $r10;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

     label11:
        $z2 = <com.android.server.AppWidgetServiceImpl: boolean DBG>;

        if $z2 == 0 goto label12;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void log(java.lang.String)>("   couldn\'t find appwidgetid");

     label12:
        exitmonitor r1;

     label13:
        return null;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
        catch java.lang.Throwable from label12 to label13 with label08;
    }

    public java.util.List getInstalledProviders(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList r1, r3, r4, $r6, $r7, $r8, $r13;
        java.lang.Throwable r2, $r14;
        com.android.server.AppWidgetServiceImpl$Provider r5;
        boolean $z0, $z1;
        java.lang.Object $r9;
        android.appwidget.AppWidgetProviderInfo $r10, $r11, $r12;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label03;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>(0);

        r3 = $r13;

        exitmonitor r1;

     label02:
        return r3;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        $r6 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(i1);

        r4 = $r7;

     label04:
        i2 = 0;

     label05:
        if i2 >= i1 goto label08;

     label06:
        $r8 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.AppWidgetServiceImpl$Provider) $r9;

        $z1 = r5.<com.android.server.AppWidgetServiceImpl$Provider: boolean zombie>;

        if $z1 != 0 goto label13;

        $r10 = r5.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $i3 = $r10.<android.appwidget.AppWidgetProviderInfo: int widgetCategory>;

        $i4 = i0 & $i3;

        if $i4 == 0 goto label13;

        $r11 = r5.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r12 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: android.appwidget.AppWidgetProviderInfo cloneIfLocalBinder(android.appwidget.AppWidgetProviderInfo)>($r11);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label07:
        goto label13;

     label08:
        exitmonitor r1;

     label09:
        return r4;

     label10:
        $r14 := @caughtexception;

        r2 = $r14;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

     label13:
        i2 = i2 + 1;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    int getUidForPackage(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1;
        android.content.pm.PackageInfo r3, r4;
        int $i0, $i1;
        android.content.pm.IPackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        android.content.pm.ApplicationInfo $r7, $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

     label1:
        $r5 = r0.<com.android.server.AppWidgetServiceImpl: android.content.pm.IPackageManager mPm>;

        $i0 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        r4 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, 0, $i0);

     label2:
        r3 = r4;

     label3:
        if r3 == null goto label4;

        $r7 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if $r7 != null goto label5;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>()>();

        throw $r6;

     label5:
        $r8 = r3.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i1 = $r8.<android.content.pm.ApplicationInfo: int uid>;

        return $i1;

     label6:
        $r9 := @caughtexception;

        r3 = null;

        goto label3;

        catch android.os.RemoteException from label1 to label2 with label6;
    }

    public boolean hasBindAppWidgetPermission(java.lang.String)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1, $r8;
        java.util.ArrayList r2;
        java.lang.Throwable r3, $r10;
        boolean z0, $z1;
        java.lang.StringBuilder $r4, $r6, $r7;
        android.content.Context $r5;
        java.util.HashSet $r9;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        $z1 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z1 != 0 goto label1;

        return 0;

     label1:
        $r5 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hasBindAppWidgetPermission packageName=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS", $r8);

        r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r2;

     label2:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        $r9 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashSet mPackagesWithBindWidgetPermission>;

        z0 = virtualinvoke $r9.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        exitmonitor r2;

     label3:
        return z0;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void loadAppWidgetListLocked()
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.content.Intent r1, $r4;
        java.util.List r3;
        int i0, i1, i2, $i3;
        android.content.Context $r5;
        android.content.pm.IPackageManager $r6;
        android.content.ContentResolver $r7;
        java.lang.String $r8;
        android.content.pm.ResolveInfo $r9;
        java.lang.Object $r10;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.appwidget.action.APPWIDGET_UPDATE");

        r1 = $r4;

     label01:
        $r6 = r0.<com.android.server.AppWidgetServiceImpl: android.content.pm.IPackageManager mPm>;

        $r5 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r7 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r7);

        $i3 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        r3 = interfaceinvoke $r6.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r1, $r8, 128, $i3);

     label02:
        if r3 != null goto label06;

        i0 = 0;

        goto label10;

     label03:
        if i1 >= i0 goto label09;

     label04:
        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (android.content.pm.ResolveInfo) $r10;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean addProviderLocked(android.content.pm.ResolveInfo)>($r9);

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        i2 = interfaceinvoke r3.<java.util.List: int size()>();

     label07:
        i0 = i2;

        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        return;

     label10:
        i1 = 0;

        goto label03;

        catch android.os.RemoteException from label01 to label02 with label08;
        catch android.os.RemoteException from label04 to label05 with label08;
        catch android.os.RemoteException from label06 to label07 with label08;
    }

    void loadStateLocked()
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.util.AtomicFile r1;
        java.io.FileNotFoundException r2, $r5;
        java.io.FileInputStream r3;
        java.io.IOException r4, $r10;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        java.lang.String $r9, $r14;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: android.util.AtomicFile savedStateFile()>();

     label1:
        r3 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void readStateFromFileLocked(java.io.FileInputStream)>(r3);

     label2:
        if r3 == null goto label4;

     label3:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label4:
        return;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

     label6:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close state FileInputStream ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r14);

     label7:
        return;

     label8:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to read state: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r9);

        return;

        catch java.io.FileNotFoundException from label1 to label2 with label8;
        catch java.io.IOException from label3 to label4 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label8;
        catch java.io.FileNotFoundException from label6 to label7 with label8;
    }

    com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, i1, i2, i3, $i4;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r1 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r4;

        $i4 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        if $i4 != i0 goto label2;

        $z0 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean canAccessAppWidgetId(com.android.server.AppWidgetServiceImpl$AppWidgetId,int)>(r1, i1);

        if $z0 == 0 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    com.android.server.AppWidgetServiceImpl$Host lookupHostLocked(int, int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, i1, i2, i3, $i4;
        com.android.server.AppWidgetServiceImpl$Host r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r1 = (com.android.server.AppWidgetServiceImpl$Host) $r4;

        $z0 = virtualinvoke r1.<com.android.server.AppWidgetServiceImpl$Host: boolean uidMatches(int)>(i0);

        if $z0 == 0 goto label2;

        $i4 = r1.<com.android.server.AppWidgetServiceImpl$Host: int hostId>;

        if $i4 != i1 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    com.android.server.AppWidgetServiceImpl$Host lookupOrAddHostLocked(int, java.lang.String, int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, i1, i2, i3, $i4;
        java.lang.String r1, $r9;
        com.android.server.AppWidgetServiceImpl$Host r2, r3, $r5;
        java.util.ArrayList $r4, $r6, $r7;
        java.lang.Object $r8;
        boolean $z1;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        $r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        $r7 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.AppWidgetServiceImpl$Host) $r8;

        $i4 = r3.<com.android.server.AppWidgetServiceImpl$Host: int hostId>;

        if $i4 != i1 goto label2;

        $r9 = r3.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r5 = new com.android.server.AppWidgetServiceImpl$Host;

        specialinvoke $r5.<com.android.server.AppWidgetServiceImpl$Host: void <init>()>();

        r2 = $r5;

        r2.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName> = r1;

        r2.<com.android.server.AppWidgetServiceImpl$Host: int uid> = i0;

        r2.<com.android.server.AppWidgetServiceImpl$Host: int hostId> = i1;

        $r6 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return r2;
    }

    com.android.server.AppWidgetServiceImpl$Provider lookupProviderLocked(android.content.ComponentName)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.content.ComponentName r1, $r7;
        int i0, i1;
        com.android.server.AppWidgetServiceImpl$Provider r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        android.appwidget.AppWidgetProviderInfo $r6;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.content.ComponentName;

        $r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.AppWidgetServiceImpl$Provider) $r5;

        $r6 = r2.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r7 = $r6.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $z0 = virtualinvoke $r7.<android.content.ComponentName: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    public void notifyAppWidgetViewDataChanged(int[], int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int[] r1;
        int i0, i1, i2, $i3, $i4;
        java.util.ArrayList r2;
        java.lang.Throwable r3, $r5;
        boolean $z0;
        com.android.server.AppWidgetServiceImpl$AppWidgetId $r4;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label02;

     label01:
        return;

     label02:
        if r1 == null goto label01;

        $i3 = lengthof r1;

        if $i3 == 0 goto label01;

        i1 = lengthof r1;

        r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r2;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

     label04:
        i2 = 0;

     label05:
        if i2 >= i1 goto label08;

     label06:
        $i4 = r1[i2];

        $r4 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>($i4);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void notifyAppWidgetViewDataChangedInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,int)>($r4, i0);

     label07:
        i2 = i2 + 1;

        goto label05;

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r5 := @caughtexception;

        r3 = $r5;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void notifyAppWidgetViewDataChangedInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId, int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r1;
        int i0, i1, $i3, $i4, $i5, $i6;
        java.util.Iterator r2;
        android.content.Intent$FilterComparison r3;
        android.content.Intent r4;
        com.android.server.AppWidgetServiceImpl$3 r5, $r22;
        long l2;
        java.lang.Throwable r6, $r29;
        com.android.server.AppWidgetServiceImpl$Provider $r8, $r9, $r23;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.AppWidgetServiceImpl$Host $r10, $r12, $r14, $r25, $r30;
        com.android.internal.appwidget.IAppWidgetHost $r11, $r13, $r27;
        java.util.Set $r15;
        java.util.HashMap $r16, $r17;
        java.lang.Object $r18, $r19;
        java.lang.Integer $r20;
        java.util.HashSet $r21;
        android.os.UserHandle $r24;
        android.content.Context $r26;
        android.os.RemoteException $r28;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$AppWidgetId;

        i0 := @parameter1: int;

        if r1 == null goto label8;

        $r8 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if $r8 == null goto label8;

        $r9 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $z0 = $r9.<com.android.server.AppWidgetServiceImpl$Provider: boolean zombie>;

        if $z0 != 0 goto label8;

        $r10 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $z1 = $r10.<com.android.server.AppWidgetServiceImpl$Host: boolean zombie>;

        if $z1 != 0 goto label8;

        $r12 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r11 = $r12.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        if $r11 == null goto label2;

     label1:
        $r25 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r27 = $r25.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        $i6 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        $i5 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        interfaceinvoke $r27.<com.android.internal.appwidget.IAppWidgetHost: void viewDataChanged(int,int,int)>($i6, i0, $i5);

     label2:
        $r14 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r13 = $r14.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        if $r13 != null goto label8;

        $r16 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mRemoteViewsServicesAppWidgets>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r18 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.content.Intent$FilterComparison) $r18;

        $r17 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mRemoteViewsServicesAppWidgets>;

        $r19 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r21 = (java.util.HashSet) $r19;

        $i3 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $z3 = virtualinvoke $r21.<java.util.HashSet: boolean contains(java.lang.Object)>($r20);

        if $z3 == 0 goto label3;

        r4 = virtualinvoke r3.<android.content.Intent$FilterComparison: android.content.Intent getIntent()>();

        $r22 = new com.android.server.AppWidgetServiceImpl$3;

        specialinvoke $r22.<com.android.server.AppWidgetServiceImpl$3: void <init>(com.android.server.AppWidgetServiceImpl)>(r0);

        r5 = $r22;

        $r23 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $i4 = $r23.<com.android.server.AppWidgetServiceImpl$Provider: int uid>;

        i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i4);

        l2 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label4:
        $r26 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r24 = new android.os.UserHandle;

        specialinvoke $r24.<android.os.UserHandle: void <init>(int)>(i1);

        virtualinvoke $r26.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r4, r5, 1, $r24);

     label5:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        goto label3;

     label6:
        $r28 := @caughtexception;

        $r30 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r30.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks> = null;

        goto label2;

     label7:
        $r29 := @caughtexception;

        r6 = $r29;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l2);

        throw r6;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    void notifyHostsForProvidersChangedLocked()
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, $i1, $i2;
        com.android.server.AppWidgetServiceImpl$Host r1;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5;
        com.android.internal.appwidget.IAppWidgetHost $r6, $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label5;

        $r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.AppWidgetServiceImpl$Host) $r5;

     label2:
        $r6 = r1.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        if $r6 == null goto label3;

        $r7 = r1.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        $i2 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        interfaceinvoke $r7.<com.android.internal.appwidget.IAppWidgetHost: void providersChanged(int)>($i2);

     label3:
        i0 = i0 + -1;

        goto label1;

     label4:
        $r8 := @caughtexception;

        r1.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks> = null;

        goto label3;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void onBroadcastReceived(android.content.Intent)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.content.Intent r1;
        java.lang.String r2, r4, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r27;
        boolean z0, z1, z2, $z3, z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.net.Uri r3;
        java.lang.String[] r5, r9, r11, r15, $r19;
        java.util.ArrayList r6, r10, r13;
        java.lang.Throwable r7, r12, r16, $r26, $r30, $r31;
        android.os.Bundle r8, r14;
        int i0, i1, i2, i3, i4, i5, $i6;
        java.lang.StringBuilder $r25, $r28, $r29;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.content.Intent;

        $z3 = <com.android.server.AppWidgetServiceImpl: boolean DBG>;

        if $z3 == 0 goto label01;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onBroadcast ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void log(java.lang.String)>($r27);

     label01:
        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        z0 = 0;

        z1 = 0;

        $r17 = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";

        $z5 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label04;

        r5 = virtualinvoke r1.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

        z2 = 1;

     label02:
        if r5 == null goto label03;

        $i6 = lengthof r5;

        if $i6 != 0 goto label06;

     label03:
        return;

     label04:
        $r18 = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";

        $z6 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label05;

        r5 = virtualinvoke r1.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("android.intent.extra.changed_package_list");

        z2 = 0;

        z0 = 0;

        goto label02;

     label05:
        r3 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        if r3 == null goto label03;

        r4 = virtualinvoke r3.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        if r4 == null goto label03;

        $r19 = newarray (java.lang.String)[1];

        $r19[0] = r4;

        r5 = $r19;

        $r21 = "android.intent.action.PACKAGE_ADDED";

        z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        $r20 = "android.intent.action.PACKAGE_CHANGED";

        z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        goto label02;

     label06:
        if z2 != 0 goto label07;

        if z0 == 0 goto label33;

     label07:
        r6 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r6;

     label08:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r8 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

     label09:
        if z0 != 0 goto label11;

        if r8 == null goto label17;

     label10:
        $z8 = virtualinvoke r8.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        if $z8 == 0 goto label17;

     label11:
        r9 = r5;

     label12:
        i0 = lengthof r9;

     label13:
        i1 = 0;

     label14:
        if i1 >= i0 goto label23;

     label15:
        $r22 = r9[i1];

        $z7 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean updateProvidersForPackageLocked(java.lang.String,java.util.Set)>($r22, null);

        z1 = z1 | $z7;

     label16:
        i1 = i1 + 1;

        goto label14;

     label17:
        r11 = r5;

     label18:
        i3 = lengthof r11;

     label19:
        i2 = 0;

     label20:
        if i2 >= i3 goto label23;

     label21:
        $r23 = r11[i2];

        $z9 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean addProvidersForPackageLocked(java.lang.String)>($r23);

        z1 = z1 | $z9;

     label22:
        i2 = i2 + 1;

        goto label20;

     label23:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

        exitmonitor r6;

     label24:
        if z1 == 0 goto label03;

        r10 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r10;

     label25:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void notifyHostsForProvidersChangedLocked()>();

        exitmonitor r10;

     label26:
        return;

     label27:
        $r30 := @caughtexception;

        r12 = $r30;

     label28:
        exitmonitor r10;

     label29:
        throw r12;

     label30:
        $r26 := @caughtexception;

        r7 = $r26;

     label31:
        exitmonitor r6;

     label32:
        throw r7;

     label33:
        r14 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        if r14 == null goto label34;

        z4 = virtualinvoke r14.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("android.intent.extra.REPLACING", 0);

        z1 = 0;

        if z4 != 0 goto label24;

     label34:
        r13 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r13;

     label35:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

     label36:
        r15 = r5;

     label37:
        i5 = lengthof r15;

     label38:
        i4 = 0;

     label39:
        if i4 >= i5 goto label42;

     label40:
        $r24 = r15[i4];

        $z10 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean removeProvidersForPackageLocked(java.lang.String)>($r24);

        z1 = z1 | $z10;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

     label41:
        i4 = i4 + 1;

        goto label39;

     label42:
        exitmonitor r13;

     label43:
        goto label24;

     label44:
        $r31 := @caughtexception;

        r16 = $r31;

     label45:
        exitmonitor r13;

     label46:
        throw r16;

        catch java.lang.Throwable from label08 to label09 with label30;
        catch java.lang.Throwable from label10 to label11 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.lang.Throwable from label15 to label16 with label30;
        catch java.lang.Throwable from label18 to label19 with label30;
        catch java.lang.Throwable from label21 to label22 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.Throwable from label31 to label32 with label30;
        catch java.lang.Throwable from label35 to label36 with label44;
        catch java.lang.Throwable from label37 to label38 with label44;
        catch java.lang.Throwable from label40 to label41 with label44;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Throwable from label45 to label46 with label44;
    }

    void onConfigurationChanged()
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.util.Locale r1, $r14, $r15;
        java.util.ArrayList r2, r4, $r7, $r8;
        java.lang.Throwable r3, $r16;
        java.util.HashSet r5, $r9;
        int i0, $i1;
        android.content.ComponentName r6;
        boolean $z0, $z1, $z3;
        java.lang.Object $r10;
        android.appwidget.AppWidgetProviderInfo $r11;
        com.android.server.AppWidgetServiceImpl$Provider $r12;
        java.lang.String $r13;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $z0 = <com.android.server.AppWidgetServiceImpl: boolean DBG>;

        if $z0 == 0 goto label01;

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void log(java.lang.String)>("Got onConfigurationChanged()");

     label01:
        r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        if r1 == null goto label02;

        $r14 = r0.<com.android.server.AppWidgetServiceImpl: java.util.Locale mLocale>;

        if $r14 == null goto label02;

        $r15 = r0.<com.android.server.AppWidgetServiceImpl: java.util.Locale mLocale>;

        $z3 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>($r15);

        if $z3 != 0 goto label13;

     label02:
        r0.<com.android.server.AppWidgetServiceImpl: java.util.Locale mLocale> = r1;

        r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r2;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        $r7 = new java.util.ArrayList;

        $r8 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        r4 = $r7;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r5 = $r9;

        $i1 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label04:
        if i0 < 0 goto label07;

     label05:
        $r10 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r12 = (com.android.server.AppWidgetServiceImpl$Provider) $r10;

        $r11 = $r12.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        r6 = $r11.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $z1 = virtualinvoke r5.<java.util.HashSet: boolean contains(java.lang.Object)>(r6);

        if $z1 != 0 goto label12;

        $r13 = virtualinvoke r6.<android.content.ComponentName: java.lang.String getPackageName()>();

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean updateProvidersForPackageLocked(java.lang.String,java.util.Set)>($r13, r5);

     label06:
        goto label12;

     label07:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

        exitmonitor r2;

     label08:
        return;

     label09:
        $r16 := @caughtexception;

        r3 = $r16;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

     label12:
        i0 = i0 + -1;

        goto label04;

     label13:
        return;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    void onUserRemoved()
    {
        com.android.server.AppWidgetServiceImpl r0;
        int $i0;
        java.io.File $r1;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $i0 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        $r1 = staticinvoke <com.android.server.AppWidgetServiceImpl: java.io.File getSettingsFile(int)>($i0);

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;
    }

    void onUserStopping()
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, $i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.server.AppWidgetServiceImpl$Provider $r4;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (com.android.server.AppWidgetServiceImpl$Provider) $r3;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void cancelBroadcasts(com.android.server.AppWidgetServiceImpl$Provider)>($r4);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    public void partiallyUpdateAppWidgetIds(int[], android.widget.RemoteViews)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int[] r1;
        android.widget.RemoteViews r2, $r6;
        int i0, i1, $i2, $i3, $i4;
        java.util.ArrayList r3;
        java.lang.Throwable r4, $r12;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r5;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9, $r11;
        java.lang.String $r10;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.widget.RemoteViews;

        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label02;

     label01:
        return;

     label02:
        if r1 == null goto label01;

        $i2 = lengthof r1;

        if $i2 == 0 goto label01;

        i0 = lengthof r1;

        r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r3;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label15;

     label06:
        $i3 = r1[i1];

        r5 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>($i3);

     label07:
        if r5 != null goto label10;

     label08:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("widget id ");

        $i4 = r1[i1];

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found!");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r10);

     label09:
        goto label17;

     label10:
        $r6 = r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.widget.RemoteViews views>;

        if $r6 == null goto label17;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void updateAppWidgetInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,android.widget.RemoteViews,boolean)>(r5, r2, 1);

     label11:
        goto label17;

     label12:
        $r12 := @caughtexception;

        r4 = $r12;

     label13:
        exitmonitor r3;

     label14:
        throw r4;

     label15:
        exitmonitor r3;

     label16:
        return;

     label17:
        i1 = i1 + 1;

        goto label05;

        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
    }

    void pruneHostLocked(com.android.server.AppWidgetServiceImpl$Host)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$Host r1;
        java.util.ArrayList $r2, $r4;
        int $i0;
        com.android.internal.appwidget.IAppWidgetHost $r3;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$Host;

        $r2 = r1.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label1;

        $r3 = r1.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        if $r3 != null goto label1;

        $r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    void readStateFromFileLocked(java.io.FileInputStream)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.io.FileInputStream r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.IndexOutOfBoundsException r2, $r87;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z9, $z10, $z13;
        java.io.IOException r3, $r114;
        org.xmlpull.v1.XmlPullParserException r4, $r94;
        java.lang.NumberFormatException r5, $r88, $r100;
        java.lang.NullPointerException r6, $r107;
        org.xmlpull.v1.XmlPullParser r7;
        java.util.HashMap r8, $r33;
        com.android.server.AppWidgetServiceImpl$Host r9, $r46, $r53, $r56, $r62, $r72;
        java.lang.String r10, r14, r15, r16, r17, r18, r19, r20, r23, r24, r32, $r43, $r44, $r47, $r49, $r50, $r51, $r58, $r68, $r71, $r73, $r83, $r96, $r102, $r108, $r112;
        android.os.Bundle r12, $r52;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r13, $r48;
        android.content.pm.IPackageManager r21;
        android.content.ComponentName r22, r28, r29, $r76, $r78, $r80;
        com.android.server.AppWidgetServiceImpl$Provider r25, $r41, $r54, $r60, $r64, $r65, $r74;
        android.appwidget.AppWidgetProviderInfo r26, r30, $r75;
        java.util.ArrayList $r34, $r35, $r36, $r37, $r38, $r39, $r42, $r57, $r59, $r61, $r63, $r69, $r77;
        java.lang.Object $r40, $r45, $r55, $r66;
        java.lang.Integer $r67, $r81;
        java.util.HashSet $r70;
        java.lang.StringBuilder $r84, $r85, $r86, $r93, $r97, $r98, $r99, $r101, $r103, $r104, $r105, $r109, $r110, $r111, $r113;
        java.lang.String[] $r89, $r95;
        android.content.pm.PackageManager $r90;
        android.content.Context $r91;
        android.os.RemoteException $r92;
        android.content.pm.PackageManager$NameNotFoundException $r106;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.io.FileInputStream;

        i0 = 0;

     label01:
        r7 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r1, null);

     label02:
        i4 = 0;

     label03:
        $r33 = new java.util.HashMap;

        specialinvoke $r33.<java.util.HashMap: void <init>()>();

        r8 = $r33;

     label04:
        i5 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: int next()>();

     label05:
        if i5 != 2 goto label09;

     label06:
        r10 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r47 = "gs";

        $z1 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label13;

        r32 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "version");

     label07:
        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r32);

     label08:
        i0 = i7;

     label09:
        if i5 != 1 goto label04;

        z0 = 1;

     label10:
        if z0 == 0 goto label65;

        $r37 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $i9 = virtualinvoke $r37.<java.util.ArrayList: int size()>();

        i3 = -1 + $i9;

     label11:
        if i3 < 0 goto label63;

        $r38 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r45 = virtualinvoke $r38.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r46 = (com.android.server.AppWidgetServiceImpl$Host) $r45;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void pruneHostLocked(com.android.server.AppWidgetServiceImpl$Host)>($r46);

        i3 = i3 + -1;

        goto label11;

     label12:
        $r88 := @caughtexception;

        i0 = 0;

        goto label09;

     label13:
        $r43 = "p";

        $z2 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z2 == 0 goto label24;

        r23 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "pkg");

        r24 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "cl");

        r21 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label14:
        $r78 = new android.content.ComponentName;

        specialinvoke $r78.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r23, r24);

        r22 = $r78;

        $i23 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        interfaceinvoke r21.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>(r22, 0, $i23);

     label15:
        $r80 = new android.content.ComponentName;

        specialinvoke $r80.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r23, r24);

        r28 = $r80;

        r25 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Provider lookupProviderLocked(android.content.ComponentName)>(r28);

     label16:
        if r25 != null goto label18;

     label17:
        $z13 = r0.<com.android.server.AppWidgetServiceImpl: boolean mSafeMode>;

        if $z13 == 0 goto label18;

        $r74 = new com.android.server.AppWidgetServiceImpl$Provider;

        specialinvoke $r74.<com.android.server.AppWidgetServiceImpl$Provider: void <init>()>();

        r25 = $r74;

        $r75 = new android.appwidget.AppWidgetProviderInfo;

        specialinvoke $r75.<android.appwidget.AppWidgetProviderInfo: void <init>()>();

        r26 = $r75;

        r25.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info> = r26;

        r30 = r25.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r76 = new android.content.ComponentName;

        specialinvoke $r76.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r23, r24);

        r29 = $r76;

        r30.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider> = r29;

        r25.<com.android.server.AppWidgetServiceImpl$Provider: boolean zombie> = 1;

        $r77 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        virtualinvoke $r77.<java.util.ArrayList: boolean add(java.lang.Object)>(r25);

     label18:
        if r25 == null goto label67;

     label19:
        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r81, r25);

     label20:
        goto label67;

     label21:
        $r92 := @caughtexception;

     label22:
        $r91 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r90 = virtualinvoke $r91.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r89 = newarray (java.lang.String)[1];

        $r89[0] = r23;

        $r95 = virtualinvoke $r90.<android.content.pm.PackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>($r89);

        r23 = $r95[0];

     label23:
        goto label15;

     label24:
        $r44 = "h";

        $z4 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z4 == 0 goto label34;

        $r72 = new com.android.server.AppWidgetServiceImpl$Host;

        specialinvoke $r72.<com.android.server.AppWidgetServiceImpl$Host: void <init>()>();

        r9 = $r72;

        $r71 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "pkg");

        r9.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName> = $r71;

     label25:
        $r73 = r9.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName>;

        $i22 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: int getUidForPackage(java.lang.String)>($r73);

        r9.<com.android.server.AppWidgetServiceImpl$Host: int uid> = $i22;

     label26:
        $z9 = r9.<com.android.server.AppWidgetServiceImpl$Host: boolean zombie>;

        if $z9 == 0 goto label27;

        $z10 = r0.<com.android.server.AppWidgetServiceImpl: boolean mSafeMode>;

        if $z10 == 0 goto label09;

     label27:
        $r68 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        $i20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r68, 16);

        r9.<com.android.server.AppWidgetServiceImpl$Host: int hostId> = $i20;

        $r69 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        virtualinvoke $r69.<java.util.ArrayList: boolean add(java.lang.Object)>(r9);

     label28:
        goto label09;

     label29:
        $r107 := @caughtexception;

        r6 = $r107;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed parsing ");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r96 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r96);

        z0 = 0;

        goto label10;

     label30:
        $r106 := @caughtexception;

     label31:
        r9.<com.android.server.AppWidgetServiceImpl$Host: boolean zombie> = 1;

     label32:
        goto label26;

     label33:
        $r100 := @caughtexception;

        r5 = $r100;

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed parsing ");

        $r113 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r112 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r112);

        z0 = 0;

        goto label10;

     label34:
        $r50 = "b";

        $z5 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z5 == 0 goto label39;

        r20 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "packageName");

     label35:
        if r20 == null goto label09;

     label36:
        $r70 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashSet mPackagesWithBindWidgetPermission>;

        virtualinvoke $r70.<java.util.HashSet: boolean add(java.lang.Object)>(r20);

     label37:
        goto label09;

     label38:
        $r94 := @caughtexception;

        r4 = $r94;

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r85 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed parsing ");

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r83);

        z0 = 0;

        goto label10;

     label39:
        $r51 = "g";

        $z3 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z3 == 0 goto label09;

        $r48 = new com.android.server.AppWidgetServiceImpl$AppWidgetId;

        specialinvoke $r48.<com.android.server.AppWidgetServiceImpl$AppWidgetId: void <init>()>();

        r13 = $r48;

        $r49 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r49, 16);

        r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId> = $i10;

        $i11 = r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        $i12 = r0.<com.android.server.AppWidgetServiceImpl: int mNextAppWidgetId>;

        if $i11 < $i12 goto label40;

        $i15 = r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        $i21 = 1 + $i15;

        r0.<com.android.server.AppWidgetServiceImpl: int mNextAppWidgetId> = $i21;

     label40:
        $r52 = new android.os.Bundle;

        specialinvoke $r52.<android.os.Bundle: void <init>()>();

        r12 = $r52;

        r15 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "min_width");

     label41:
        if r15 == null goto label43;

     label42:
        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r15, 16);

        virtualinvoke r12.<android.os.Bundle: void putInt(java.lang.String,int)>("appWidgetMinWidth", $i16);

     label43:
        r14 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "min_height");

     label44:
        if r14 == null goto label46;

     label45:
        $i17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r14, 16);

        virtualinvoke r12.<android.os.Bundle: void putInt(java.lang.String,int)>("appWidgetMinHeight", $i17);

     label46:
        r17 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "max_width");

     label47:
        if r17 == null goto label49;

     label48:
        $i18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r17, 16);

        virtualinvoke r12.<android.os.Bundle: void putInt(java.lang.String,int)>("appWidgetMaxWidth", $i18);

     label49:
        r16 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "max_height");

     label50:
        if r16 == null goto label52;

     label51:
        $i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r16, 16);

        virtualinvoke r12.<android.os.Bundle: void putInt(java.lang.String,int)>("appWidgetMaxHeight", $i19);

     label52:
        r18 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "host_category");

     label53:
        if r18 == null goto label55;

     label54:
        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r18, 16);

        virtualinvoke r12.<android.os.Bundle: void putInt(java.lang.String,int)>("appWidgetCategory", $i13);

     label55:
        r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options> = r12;

        r19 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "p");

     label56:
        if r19 == null goto label58;

     label57:
        $i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r19, 16);

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        $r66 = virtualinvoke r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r67);

        $r65 = (com.android.server.AppWidgetServiceImpl$Provider) $r66;

        r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider> = $r65;

        $r64 = r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if $r64 == null goto label09;

     label58:
        $r58 = interfaceinvoke r7.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "h");

        i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r58, 16);

        $r57 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r55 = virtualinvoke $r57.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r56 = (com.android.server.AppWidgetServiceImpl$Host) $r55;

        r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host> = $r56;

        $r53 = r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        if $r53 == null goto label09;

        $r54 = r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if $r54 == null goto label59;

        $r60 = r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $r59 = $r60.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        virtualinvoke $r59.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

     label59:
        $r62 = r13.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r63 = $r62.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        virtualinvoke $r63.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        $r61 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        virtualinvoke $r61.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

     label60:
        goto label09;

     label61:
        $r114 := @caughtexception;

        r3 = $r114;

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed parsing ");

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r108 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r108);

        z0 = 0;

        goto label10;

     label62:
        $r87 := @caughtexception;

        r2 = $r87;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed parsing ");

        $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r102 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r102);

        z0 = 0;

        goto label10;

     label63:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void performUpgrade(int)>(i0);

     label64:
        return;

     label65:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", "Failed to read state, clearing widgets and hosts.");

        $r36 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        virtualinvoke $r36.<java.util.ArrayList: void clear()>();

        $r35 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        virtualinvoke $r35.<java.util.ArrayList: void clear()>();

        $r34 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        i1 = virtualinvoke $r34.<java.util.ArrayList: int size()>();

        i2 = 0;

     label66:
        if i2 >= i1 goto label64;

        $r39 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $r40 = virtualinvoke $r39.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r41 = (com.android.server.AppWidgetServiceImpl$Provider) $r40;

        $r42 = $r41.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        virtualinvoke $r42.<java.util.ArrayList: void clear()>();

        i2 = i2 + 1;

        goto label66;

     label67:
        i4 = i4 + 1;

        goto label09;

        catch java.lang.NullPointerException from label01 to label02 with label29;
        catch java.lang.NumberFormatException from label01 to label02 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label38;
        catch java.io.IOException from label01 to label02 with label61;
        catch java.lang.IndexOutOfBoundsException from label01 to label02 with label62;
        catch java.lang.NullPointerException from label03 to label04 with label29;
        catch java.lang.NumberFormatException from label03 to label04 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label38;
        catch java.io.IOException from label03 to label04 with label61;
        catch java.lang.IndexOutOfBoundsException from label03 to label04 with label62;
        catch java.lang.NullPointerException from label04 to label05 with label29;
        catch java.lang.NumberFormatException from label04 to label05 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label38;
        catch java.io.IOException from label04 to label05 with label61;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label62;
        catch java.lang.NullPointerException from label06 to label07 with label29;
        catch java.lang.NumberFormatException from label06 to label07 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label38;
        catch java.io.IOException from label06 to label07 with label61;
        catch java.lang.IndexOutOfBoundsException from label06 to label07 with label62;
        catch java.lang.NumberFormatException from label07 to label08 with label12;
        catch java.lang.NullPointerException from label07 to label08 with label29;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label38;
        catch java.io.IOException from label07 to label08 with label61;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label62;
        catch java.lang.NullPointerException from label13 to label14 with label29;
        catch java.lang.NumberFormatException from label13 to label14 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label13 to label14 with label38;
        catch java.io.IOException from label13 to label14 with label61;
        catch java.lang.IndexOutOfBoundsException from label13 to label14 with label62;
        catch android.os.RemoteException from label14 to label15 with label21;
        catch java.lang.NullPointerException from label14 to label15 with label29;
        catch java.lang.NumberFormatException from label14 to label15 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label14 to label15 with label38;
        catch java.io.IOException from label14 to label15 with label61;
        catch java.lang.IndexOutOfBoundsException from label14 to label15 with label62;
        catch java.lang.NullPointerException from label15 to label16 with label29;
        catch java.lang.NumberFormatException from label15 to label16 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label15 to label16 with label38;
        catch java.io.IOException from label15 to label16 with label61;
        catch java.lang.IndexOutOfBoundsException from label15 to label16 with label62;
        catch java.lang.NullPointerException from label17 to label18 with label29;
        catch java.lang.NumberFormatException from label17 to label18 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label38;
        catch java.io.IOException from label17 to label18 with label61;
        catch java.lang.IndexOutOfBoundsException from label17 to label18 with label62;
        catch java.lang.NullPointerException from label19 to label20 with label29;
        catch java.lang.NumberFormatException from label19 to label20 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label38;
        catch java.io.IOException from label19 to label20 with label61;
        catch java.lang.IndexOutOfBoundsException from label19 to label20 with label62;
        catch java.lang.NullPointerException from label22 to label23 with label29;
        catch java.lang.NumberFormatException from label22 to label23 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label38;
        catch java.io.IOException from label22 to label23 with label61;
        catch java.lang.IndexOutOfBoundsException from label22 to label23 with label62;
        catch java.lang.NullPointerException from label24 to label25 with label29;
        catch java.lang.NumberFormatException from label24 to label25 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label24 to label25 with label38;
        catch java.io.IOException from label24 to label25 with label61;
        catch java.lang.IndexOutOfBoundsException from label24 to label25 with label62;
        catch android.content.pm.PackageManager$NameNotFoundException from label25 to label26 with label30;
        catch java.lang.NullPointerException from label25 to label26 with label29;
        catch java.lang.NumberFormatException from label25 to label26 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label38;
        catch java.io.IOException from label25 to label26 with label61;
        catch java.lang.IndexOutOfBoundsException from label25 to label26 with label62;
        catch java.lang.NullPointerException from label26 to label27 with label29;
        catch java.lang.NumberFormatException from label26 to label27 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label26 to label27 with label38;
        catch java.io.IOException from label26 to label27 with label61;
        catch java.lang.IndexOutOfBoundsException from label26 to label27 with label62;
        catch java.lang.NullPointerException from label27 to label28 with label29;
        catch java.lang.NumberFormatException from label27 to label28 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label38;
        catch java.io.IOException from label27 to label28 with label61;
        catch java.lang.IndexOutOfBoundsException from label27 to label28 with label62;
        catch java.lang.NullPointerException from label31 to label32 with label29;
        catch java.lang.NumberFormatException from label31 to label32 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label31 to label32 with label38;
        catch java.io.IOException from label31 to label32 with label61;
        catch java.lang.IndexOutOfBoundsException from label31 to label32 with label62;
        catch java.lang.NullPointerException from label34 to label35 with label29;
        catch java.lang.NumberFormatException from label34 to label35 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label34 to label35 with label38;
        catch java.io.IOException from label34 to label35 with label61;
        catch java.lang.IndexOutOfBoundsException from label34 to label35 with label62;
        catch java.lang.NullPointerException from label36 to label37 with label29;
        catch java.lang.NumberFormatException from label36 to label37 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label36 to label37 with label38;
        catch java.io.IOException from label36 to label37 with label61;
        catch java.lang.IndexOutOfBoundsException from label36 to label37 with label62;
        catch java.lang.NullPointerException from label39 to label40 with label29;
        catch java.lang.NumberFormatException from label39 to label40 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label39 to label40 with label38;
        catch java.io.IOException from label39 to label40 with label61;
        catch java.lang.IndexOutOfBoundsException from label39 to label40 with label62;
        catch java.lang.NullPointerException from label40 to label41 with label29;
        catch java.lang.NumberFormatException from label40 to label41 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label40 to label41 with label38;
        catch java.io.IOException from label40 to label41 with label61;
        catch java.lang.IndexOutOfBoundsException from label40 to label41 with label62;
        catch java.lang.NullPointerException from label42 to label43 with label29;
        catch java.lang.NumberFormatException from label42 to label43 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label42 to label43 with label38;
        catch java.io.IOException from label42 to label43 with label61;
        catch java.lang.IndexOutOfBoundsException from label42 to label43 with label62;
        catch java.lang.NullPointerException from label43 to label44 with label29;
        catch java.lang.NumberFormatException from label43 to label44 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label43 to label44 with label38;
        catch java.io.IOException from label43 to label44 with label61;
        catch java.lang.IndexOutOfBoundsException from label43 to label44 with label62;
        catch java.lang.NullPointerException from label45 to label46 with label29;
        catch java.lang.NumberFormatException from label45 to label46 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label45 to label46 with label38;
        catch java.io.IOException from label45 to label46 with label61;
        catch java.lang.IndexOutOfBoundsException from label45 to label46 with label62;
        catch java.lang.NullPointerException from label46 to label47 with label29;
        catch java.lang.NumberFormatException from label46 to label47 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label46 to label47 with label38;
        catch java.io.IOException from label46 to label47 with label61;
        catch java.lang.IndexOutOfBoundsException from label46 to label47 with label62;
        catch java.lang.NullPointerException from label48 to label49 with label29;
        catch java.lang.NumberFormatException from label48 to label49 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label48 to label49 with label38;
        catch java.io.IOException from label48 to label49 with label61;
        catch java.lang.IndexOutOfBoundsException from label48 to label49 with label62;
        catch java.lang.NullPointerException from label49 to label50 with label29;
        catch java.lang.NumberFormatException from label49 to label50 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label49 to label50 with label38;
        catch java.io.IOException from label49 to label50 with label61;
        catch java.lang.IndexOutOfBoundsException from label49 to label50 with label62;
        catch java.lang.NullPointerException from label51 to label52 with label29;
        catch java.lang.NumberFormatException from label51 to label52 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label51 to label52 with label38;
        catch java.io.IOException from label51 to label52 with label61;
        catch java.lang.IndexOutOfBoundsException from label51 to label52 with label62;
        catch java.lang.NullPointerException from label52 to label53 with label29;
        catch java.lang.NumberFormatException from label52 to label53 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label52 to label53 with label38;
        catch java.io.IOException from label52 to label53 with label61;
        catch java.lang.IndexOutOfBoundsException from label52 to label53 with label62;
        catch java.lang.NullPointerException from label54 to label55 with label29;
        catch java.lang.NumberFormatException from label54 to label55 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label54 to label55 with label38;
        catch java.io.IOException from label54 to label55 with label61;
        catch java.lang.IndexOutOfBoundsException from label54 to label55 with label62;
        catch java.lang.NullPointerException from label55 to label56 with label29;
        catch java.lang.NumberFormatException from label55 to label56 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label55 to label56 with label38;
        catch java.io.IOException from label55 to label56 with label61;
        catch java.lang.IndexOutOfBoundsException from label55 to label56 with label62;
        catch java.lang.NullPointerException from label57 to label58 with label29;
        catch java.lang.NumberFormatException from label57 to label58 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label57 to label58 with label38;
        catch java.io.IOException from label57 to label58 with label61;
        catch java.lang.IndexOutOfBoundsException from label57 to label58 with label62;
        catch java.lang.NullPointerException from label58 to label59 with label29;
        catch java.lang.NumberFormatException from label58 to label59 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label58 to label59 with label38;
        catch java.io.IOException from label58 to label59 with label61;
        catch java.lang.IndexOutOfBoundsException from label58 to label59 with label62;
        catch java.lang.NullPointerException from label59 to label60 with label29;
        catch java.lang.NumberFormatException from label59 to label60 with label33;
        catch org.xmlpull.v1.XmlPullParserException from label59 to label60 with label38;
        catch java.io.IOException from label59 to label60 with label61;
        catch java.lang.IndexOutOfBoundsException from label59 to label60 with label62;
    }

    void registerForBroadcastsLocked(com.android.server.AppWidgetServiceImpl$Provider, int[])
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$Provider r1;
        int[] r2;
        boolean z0;
        android.content.Intent r3, $r7;
        long l0, l1, $l6, $l7;
        java.lang.Throwable r4, $r17;
        android.appwidget.AppWidgetProviderInfo $r5, $r8, $r14;
        int $i2, $i3, $i5;
        android.app.PendingIntent $r6, $r15, $r18;
        android.content.ComponentName $r11;
        android.os.UserHandle $r12;
        android.content.Context $r13;
        byte $b4;
        android.app.AlarmManager $r16;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$Provider;

        r2 := @parameter1: int[];

        z0 = 1;

        $r5 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $i2 = $r5.<android.appwidget.AppWidgetProviderInfo: int updatePeriodMillis>;

        if $i2 <= 0 goto label5;

        $r6 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.app.PendingIntent broadcast>;

        if $r6 == null goto label6;

     label1:
        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.appwidget.action.APPWIDGET_UPDATE");

        r3 = $r7;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>("appWidgetIds", r2);

        $r8 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r11 = $r8.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r11);

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r13 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r12 = new android.os.UserHandle;

        $i3 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        specialinvoke $r12.<android.os.UserHandle: void <init>(int)>($i3);

        $r15 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>($r13, 1, r3, 134217728, $r12);

        r1.<com.android.server.AppWidgetServiceImpl$Provider: android.app.PendingIntent broadcast> = $r15;

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        if z0 != 0 goto label5;

        $r14 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $i5 = $r14.<android.appwidget.AppWidgetProviderInfo: int updatePeriodMillis>;

        l1 = (long) $i5;

        $b4 = l1 cmp 1800000L;

        if $b4 >= 0 goto label4;

        l1 = 1800000L;

     label4:
        $r16 = r0.<com.android.server.AppWidgetServiceImpl: android.app.AlarmManager mAlarmManager>;

        $l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l6 = l1 + $l7;

        $r18 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.app.PendingIntent broadcast>;

        virtualinvoke $r16.<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>(2, $l6, l1, $r18);

     label5:
        return;

     label6:
        z0 = 0;

        goto label1;

     label7:
        $r17 := @caughtexception;

        r4 = $r17;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r4;

        catch java.lang.Throwable from label2 to label3 with label7;
    }

    void removeProviderLocked(int, com.android.server.AppWidgetServiceImpl$Provider)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, i1, i2;
        com.android.server.AppWidgetServiceImpl$Provider r1;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r2;
        java.util.ArrayList $r3, $r4, $r5, $r7, $r8, $r11, $r12;
        com.android.server.AppWidgetServiceImpl$Host $r9, $r13;
        java.lang.Object $r10;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.AppWidgetServiceImpl$Provider;

        $r3 = r1.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r8 = r1.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        $r10 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r10;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void updateAppWidgetInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,android.widget.RemoteViews)>(r2, null);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void cancelBroadcasts(com.android.server.AppWidgetServiceImpl$Provider)>(r1);

        $r9 = r2.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r11 = $r9.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        virtualinvoke $r11.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        $r12 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        virtualinvoke $r12.<java.util.ArrayList: boolean remove(java.lang.Object)>(r2);

        r2.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider> = null;

        $r13 = r2.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void pruneHostLocked(com.android.server.AppWidgetServiceImpl$Host)>($r13);

        r2.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host> = null;

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = r1.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        $r7 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mDeletedProviders>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void cancelBroadcasts(com.android.server.AppWidgetServiceImpl$Provider)>(r1);

        return;
    }

    boolean removeProvidersForPackageLocked(java.lang.String)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1, $r8, $r12;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3;
        com.android.server.AppWidgetServiceImpl$Host r2;
        com.android.server.AppWidgetServiceImpl$Provider r3;
        java.util.ArrayList $r4, $r5, $r6, $r9;
        java.lang.Object $r7, $r11;
        android.appwidget.AppWidgetProviderInfo $r10;
        android.content.ComponentName $r13;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        z0 = 0;

        $r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i0 = -1 + $i2;

     label1:
        if i0 < 0 goto label3;

        $r9 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r3 = (com.android.server.AppWidgetServiceImpl$Provider) $r11;

        $r10 = r3.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r13 = $r10.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $r12 = virtualinvoke $r13.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label2;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void removeProviderLocked(int,com.android.server.AppWidgetServiceImpl$Provider)>(i0, r3);

        z0 = 1;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        $r5 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = -1 + $i3;

     label4:
        if i1 < 0 goto label6;

        $r6 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.AppWidgetServiceImpl$Host) $r7;

        $r8 = r2.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName>;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label5;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void deleteHostLocked(com.android.server.AppWidgetServiceImpl$Host)>(r2);

     label5:
        i1 = i1 + -1;

        goto label4;

     label6:
        return z0;
    }

    void saveStateLocked()
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.util.AtomicFile r1;
        java.io.IOException r2, $r4;
        java.io.FileOutputStream r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: android.util.AtomicFile savedStateFile()>();

     label2:
        r3 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $z1 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean writeStateToFileLocked(java.io.FileOutputStream)>(r3);

        if $z1 == 0 goto label5;

        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r3);

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed open state file for write: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r8);

        return;

     label5:
        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r3);

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", "Failed to save state, restoring backup.");

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label5 to label6 with label4;
    }

    android.util.AtomicFile savedStateFile()
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.io.File r1, r2, $r4;
        int $i0, $i1, $i2;
        boolean $z0, $z1;
        android.util.AtomicFile $r3;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        $i0 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        r1 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>($i0);

        $i1 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        r2 = staticinvoke <com.android.server.AppWidgetServiceImpl: java.io.File getSettingsFile(int)>($i1);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $i2 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        if $i2 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label1;

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

     label1:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("/data/system/appwidgets.xml");

        virtualinvoke $r4.<java.io.File: boolean renameTo(java.io.File)>(r2);

     label2:
        $r3 = new android.util.AtomicFile;

        specialinvoke $r3.<android.util.AtomicFile: void <init>(java.io.File)>(r2);

        return $r3;
    }

    void sendEnableIntentLocked(com.android.server.AppWidgetServiceImpl$Provider)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$Provider r1;
        android.content.Intent r2, $r3;
        android.appwidget.AppWidgetProviderInfo $r4;
        android.content.ComponentName $r5;
        android.os.UserHandle $r7;
        int $i0;
        android.content.Context $r8;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$Provider;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.appwidget.action.APPWIDGET_ENABLED");

        r2 = $r3;

        $r4 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r5 = $r4.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r5);

        $r8 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r7 = new android.os.UserHandle;

        $i0 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        specialinvoke $r7.<android.os.UserHandle: void <init>(int)>($i0);

        virtualinvoke $r8.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r7);

        return;
    }

    void sendInitialBroadcasts()
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.util.ArrayList r1, $r5, $r6, $r8;
        java.lang.Throwable r2, $r9;
        int i0, i1, $i2;
        com.android.server.AppWidgetServiceImpl$Provider r3;
        int[] r4;
        java.lang.Object $r7;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label01:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        $r5 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label06;

     label04:
        $r6 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.AppWidgetServiceImpl$Provider) $r7;

        $r8 = r3.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label11;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void sendEnableIntentLocked(com.android.server.AppWidgetServiceImpl$Provider)>(r3);

        r4 = staticinvoke <com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Provider)>(r3);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void sendUpdateIntentLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>(r3, r4);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void registerForBroadcastsLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>(r3, r4);

     label05:
        goto label11;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

        r2 = $r9;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

     label11:
        i1 = i1 + 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    void sendUpdateIntentLocked(com.android.server.AppWidgetServiceImpl$Provider, int[])
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$Provider r1;
        int[] r2;
        android.content.Intent r3, $r4;
        int $i0, $i1;
        android.appwidget.AppWidgetProviderInfo $r6;
        android.content.ComponentName $r7;
        android.os.UserHandle $r9;
        android.content.Context $r10;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$Provider;

        r2 := @parameter1: int[];

        if r2 == null goto label1;

        $i0 = lengthof r2;

        if $i0 <= 0 goto label1;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.appwidget.action.APPWIDGET_UPDATE");

        r3 = $r4;

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>("appWidgetIds", r2);

        $r6 = r1.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r7 = $r6.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r7);

        $r10 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r9 = new android.os.UserHandle;

        $i1 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        specialinvoke $r9.<android.os.UserHandle: void <init>(int)>($i1);

        virtualinvoke $r10.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r3, $r9);

     label1:
        return;
    }

    public void setBindAppWidgetPermission(java.lang.String, boolean)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1, $r8;
        boolean z0, $z1;
        java.util.ArrayList r2;
        java.lang.Throwable r3, $r11;
        java.lang.StringBuilder $r4, $r6, $r7;
        android.content.Context $r5;
        java.util.HashSet $r9, $r10;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $z1 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z1 != 0 goto label01;

        return;

     label01:
        $r5 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setBindAppWidgetPermission packageName=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>("android.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS", $r8);

        r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r2;

     label02:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

     label03:
        if z0 == 0 goto label10;

     label04:
        $r10 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashSet mPackagesWithBindWidgetPermission>;

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

     label05:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

        exitmonitor r2;

     label06:
        return;

     label07:
        $r11 := @caughtexception;

        r3 = $r11;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        $r9 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashSet mPackagesWithBindWidgetPermission>;

        virtualinvoke $r9.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

     label11:
        goto label05;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public int[] startListening(com.android.internal.appwidget.IAppWidgetHost, java.lang.String, int, java.util.List)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.internal.appwidget.IAppWidgetHost r1;
        java.lang.String r2;
        int i0, i1, i2, i3, $i4;
        java.util.List r3;
        java.util.ArrayList r4, r7;
        java.lang.Throwable r5, $r14;
        com.android.server.AppWidgetServiceImpl$Host r6;
        int[] r8, $r13;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r9;
        boolean $z0;
        java.lang.Object $r10;
        android.widget.RemoteViews $r11, $r12;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.internal.appwidget.IAppWidgetHost;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: java.util.List;

        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label01;

        $r13 = newarray (int)[0];

        return $r13;

     label01:
        i1 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: int enforceCallingUid(java.lang.String)>(r2);

        r4 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r4;

     label02:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r6 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Host lookupOrAddHostLocked(int,java.lang.String,int)>(i1, r2, i0);

        r6.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks> = r1;

        interfaceinvoke r3.<java.util.List: void clear()>();

        r7 = r6.<com.android.server.AppWidgetServiceImpl$Host: java.util.ArrayList instances>;

        i2 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        r8 = newarray (int)[i2];

     label03:
        i3 = 0;

     label04:
        if i3 >= i2 goto label07;

     label05:
        $r10 = virtualinvoke r7.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r9 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r10;

        $i4 = r9.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        r8[i3] = $i4;

        $r12 = r9.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.widget.RemoteViews views>;

        $r11 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: android.widget.RemoteViews cloneIfLocalBinder(android.widget.RemoteViews)>($r12);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r11);

     label06:
        i3 = i3 + 1;

        goto label04;

     label07:
        exitmonitor r4;

     label08:
        return r8;

     label09:
        $r14 := @caughtexception;

        r5 = $r14;

     label10:
        exitmonitor r4;

     label11:
        throw r5;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void stopListening(int)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, $i1;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r4;
        com.android.server.AppWidgetServiceImpl$Host r3;
        boolean $z0;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label01:
        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r3 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Host lookupHostLocked(int,int)>($i1, i0);

     label04:
        if r3 == null goto label06;

     label05:
        r3.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks> = null;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void pruneHostLocked(com.android.server.AppWidgetServiceImpl$Host)>(r3);

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        $r4 := @caughtexception;

        r2 = $r4;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void systemReady(boolean)
    {
        com.android.server.AppWidgetServiceImpl r0;
        boolean z0;
        java.util.ArrayList r1;
        java.lang.Throwable r2, $r3;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        z0 := @parameter0: boolean;

        r0.<com.android.server.AppWidgetServiceImpl: boolean mSafeMode> = z0;

        r1 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void unbindRemoteViewsService(int, android.content.Intent)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0;
        android.content.Intent r1;
        java.util.ArrayList r2;
        java.lang.Throwable r3, $r16;
        android.util.Pair r4;
        com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy r5;
        boolean $z0, $z1;
        java.lang.Integer $r6;
        android.content.Intent$FilterComparison $r7;
        java.util.HashMap $r8, $r11, $r12;
        com.android.server.AppWidgetServiceImpl$AppWidgetId $r9;
        java.lang.Object $r10;
        android.content.Context $r13;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r2;

     label1:
        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = new android.content.Intent$FilterComparison;

        specialinvoke $r7.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r1);

        r4 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r8 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices>;

        $z1 = virtualinvoke $r8.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r4);

        if $z1 == 0 goto label8;

        $r9 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>(i0);

        if $r9 != null goto label7;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad appWidgetId");

        throw $r14;

     label4:
        $r16 := @caughtexception;

        r3 = $r16;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r11 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices>;

        $r10 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy) $r10;

        virtualinvoke r5.<com.android.server.AppWidgetServiceImpl$ServiceConnectionProxy: void disconnect()>();

        $r13 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        virtualinvoke $r13.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r5);

        $r12 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashMap mBoundRemoteViewsServices>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r4);

     label8:
        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label4 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
        catch java.lang.Throwable from label8 to label9 with label4;
    }

    public void updateAppWidgetIds(int[], android.widget.RemoteViews)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int[] r1;
        android.widget.RemoteViews r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        java.util.ArrayList r3;
        java.lang.Throwable r4, $r18;
        boolean $z0, $z1;
        com.android.server.AppWidgetServiceImpl$AppWidgetId $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r13, $r19;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.widget.RemoteViews;

        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label02;

     label01:
        return;

     label02:
        if r1 == null goto label01;

        $z1 = <com.android.server.AppWidgetServiceImpl: boolean DBG>;

        if $z1 == 0 goto label03;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAppWidgetIds views: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void log(java.lang.String)>($r19);

     label03:
        i0 = 0;

        if r2 == null goto label04;

        i0 = virtualinvoke r2.<android.widget.RemoteViews: int estimateMemoryUsage()>();

     label04:
        $i3 = r0.<com.android.server.AppWidgetServiceImpl: int mMaxWidgetBitmapMemory>;

        if i0 <= $i3 goto label05;

        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RemoteViews for widget update exceeds maximum bitmap memory usage (used: ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max: ");

        $i6 = r0.<com.android.server.AppWidgetServiceImpl: int mMaxWidgetBitmapMemory>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") The total memory cannot exceed that required to");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fill the device\'s screen once.");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label05:
        $i4 = lengthof r1;

        if $i4 == 0 goto label01;

        i1 = lengthof r1;

        r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r3;

     label06:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

     label07:
        i2 = 0;

     label08:
        if i2 >= i1 goto label11;

     label09:
        $i5 = r1[i2];

        $r5 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>($i5);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void updateAppWidgetInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,android.widget.RemoteViews)>($r5, r2);

     label10:
        i2 = i2 + 1;

        goto label08;

     label11:
        exitmonitor r3;

     label12:
        return;

     label13:
        $r18 := @caughtexception;

        r4 = $r18;

     label14:
        exitmonitor r3;

     label15:
        throw r4;

        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    void updateAppWidgetInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId, android.widget.RemoteViews)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r1;
        android.widget.RemoteViews r2;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$AppWidgetId;

        r2 := @parameter1: android.widget.RemoteViews;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void updateAppWidgetInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,android.widget.RemoteViews,boolean)>(r1, r2, 0);

        return;
    }

    void updateAppWidgetInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId, android.widget.RemoteViews, boolean)
    {
        com.android.server.AppWidgetServiceImpl r0;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r1;
        android.widget.RemoteViews r2, $r7;
        boolean z0, $z1, $z2;
        com.android.server.AppWidgetServiceImpl$Provider $r4, $r5;
        com.android.server.AppWidgetServiceImpl$Host $r6, $r8, $r10, $r13;
        com.android.internal.appwidget.IAppWidgetHost $r9, $r12;
        int $i0, $i1;
        android.os.RemoteException $r11;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: com.android.server.AppWidgetServiceImpl$AppWidgetId;

        r2 := @parameter1: android.widget.RemoteViews;

        z0 := @parameter2: boolean;

        if r1 == null goto label3;

        $r4 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if $r4 == null goto label3;

        $r5 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $z1 = $r5.<com.android.server.AppWidgetServiceImpl$Provider: boolean zombie>;

        if $z1 != 0 goto label3;

        $r6 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $z2 = $r6.<com.android.server.AppWidgetServiceImpl$Host: boolean zombie>;

        if $z2 != 0 goto label3;

        if z0 != 0 goto label4;

        r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.widget.RemoteViews views> = r2;

     label1:
        $r8 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r9 = $r8.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        if $r9 == null goto label3;

     label2:
        $r10 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r12 = $r10.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        $i1 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        $i0 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        interfaceinvoke $r12.<com.android.internal.appwidget.IAppWidgetHost: void updateAppWidget(int,android.widget.RemoteViews,int)>($i1, r2, $i0);

     label3:
        return;

     label4:
        $r7 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.widget.RemoteViews views>;

        virtualinvoke $r7.<android.widget.RemoteViews: void mergeRemoteViews(android.widget.RemoteViews)>(r2);

        goto label1;

     label5:
        $r11 := @caughtexception;

        $r13 = r1.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r13.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks> = null;

        return;

        catch android.os.RemoteException from label2 to label3 with label5;
    }

    public void updateAppWidgetOptions(int, android.os.Bundle)
    {
        com.android.server.AppWidgetServiceImpl r0;
        int i0, $i1, $i2;
        android.os.Bundle r1, r4, $r8, $r15;
        java.util.ArrayList r2;
        java.lang.Throwable r3, $r18;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r5;
        com.android.server.AppWidgetServiceImpl$Provider r6;
        android.content.Intent r7, $r9;
        boolean $z0;
        android.appwidget.AppWidgetProviderInfo $r10;
        android.content.ComponentName $r12;
        android.os.UserHandle $r16;
        android.content.Context $r17;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r2;

     label01:
        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        r4 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: android.os.Bundle cloneIfLocalBinder(android.os.Bundle)>(r1);

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r5 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$AppWidgetId lookupAppWidgetIdLocked(int)>(i0);

     label04:
        if r5 != null goto label10;

     label05:
        exitmonitor r2;

     label06:
        return;

     label07:
        $r18 := @caughtexception;

        r3 = $r18;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        r6 = r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $r8 = r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        virtualinvoke $r8.<android.os.Bundle: void putAll(android.os.Bundle)>(r4);

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.appwidget.action.APPWIDGET_UPDATE_OPTIONS");

        r7 = $r9;

        $r10 = r6.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r12 = $r10.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        virtualinvoke r7.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r12);

        $i1 = r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("appWidgetId", $i1);

        $r15 = r5.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>("appWidgetOptions", $r15);

        $r17 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r16 = new android.os.UserHandle;

        $i2 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        specialinvoke $r16.<android.os.UserHandle: void <init>(int)>($i2);

        virtualinvoke $r17.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r7, $r16);

        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void saveStateAsync()>();

        exitmonitor r2;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public void updateAppWidgetProvider(android.content.ComponentName, android.widget.RemoteViews)
    {
        com.android.server.AppWidgetServiceImpl r0;
        android.content.ComponentName r1;
        android.widget.RemoteViews r2;
        java.util.ArrayList r3, r6;
        java.lang.Throwable r4, $r13;
        com.android.server.AppWidgetServiceImpl$Provider r5;
        int i0, i1, i2;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.widget.RemoteViews;

        $z0 = r0.<com.android.server.AppWidgetServiceImpl: boolean mHasFeature>;

        if $z0 != 0 goto label01;

        return;

     label01:
        r3 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        entermonitor r3;

     label02:
        specialinvoke r0.<com.android.server.AppWidgetServiceImpl: void ensureStateLoadedLocked()>();

        r5 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Provider lookupProviderLocked(android.content.ComponentName)>(r1);

     label03:
        if r5 != null goto label09;

     label04:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAppWidgetProvider: provider doesn\'t exist: ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r12);

        exitmonitor r3;

     label05:
        return;

     label06:
        $r13 := @caughtexception;

        r4 = $r13;

     label07:
        exitmonitor r3;

     label08:
        throw r4;

     label09:
        r6 = r5.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        i1 = virtualinvoke r6.<java.util.ArrayList: int size()>();

     label10:
        i2 = 0;

     label11:
        if i2 >= i1 goto label14;

     label12:
        $r8 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r8;

        $z1 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean canAccessAppWidgetId(com.android.server.AppWidgetServiceImpl$AppWidgetId,int)>(r7, i0);

        if $z1 == 0 goto label16;

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void updateAppWidgetInstanceLocked(com.android.server.AppWidgetServiceImpl$AppWidgetId,android.widget.RemoteViews)>(r7, r2);

     label13:
        goto label16;

     label14:
        exitmonitor r3;

     label15:
        return;

     label16:
        i2 = i2 + 1;

        goto label11;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
        catch java.lang.Throwable from label12 to label13 with label06;
        catch java.lang.Throwable from label14 to label15 with label06;
    }

    boolean updateProvidersForPackageLocked(java.lang.String, java.util.Set)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.lang.String r1, $r21, $r26, $r29, $r35, $r37, $r38, $r40, $r48;
        java.util.Set r2;
        boolean z0, $z1, $z2, $z4, $z6;
        java.util.HashSet r3, $r15;
        android.content.Intent r4, $r18;
        java.util.List r6;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.android.server.AppWidgetServiceImpl$Provider r7, r10, r12;
        android.content.pm.ResolveInfo r8;
        android.content.pm.ActivityInfo r9;
        android.content.ComponentName r11, $r28, $r31, $r33, $r39;
        int[] r13;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r14;
        android.content.pm.IPackageManager $r19;
        android.content.Context $r20;
        android.content.ContentResolver $r22;
        java.util.ArrayList $r23, $r24, $r41, $r46;
        java.lang.Object $r25, $r32, $r42;
        android.appwidget.AppWidgetProviderInfo $r27, $r30, $r34, $r45, $r51;
        android.content.pm.ApplicationInfo $r36;
        com.android.server.AppWidgetServiceImpl$Host $r43, $r44, $r50, $r53;
        com.android.internal.appwidget.IAppWidgetHost $r47, $r49;
        android.os.RemoteException $r52, $r54;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        z0 = 0;

        $r15 = new java.util.HashSet;

        specialinvoke $r15.<java.util.HashSet: void <init>()>();

        r3 = $r15;

        $r18 = new android.content.Intent;

        specialinvoke $r18.<android.content.Intent: void <init>(java.lang.String)>("android.appwidget.action.APPWIDGET_UPDATE");

        r4 = $r18;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

     label01:
        $r19 = r0.<com.android.server.AppWidgetServiceImpl: android.content.pm.IPackageManager mPm>;

        $r20 = r0.<com.android.server.AppWidgetServiceImpl: android.content.Context mContext>;

        $r22 = virtualinvoke $r20.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r21 = virtualinvoke r4.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r22);

        $i5 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        r6 = interfaceinvoke $r19.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r4, $r21, 128, $i5);

     label02:
        if r6 != null goto label07;

        i0 = 0;

     label03:
        i1 = 0;

     label04:
        if i1 >= i0 goto label15;

        $r32 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i1);

        r8 = (android.content.pm.ResolveInfo) $r32;

        r9 = r8.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r36 = r9.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r36.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = 262144 & $i8;

        if $i7 == 0 goto label08;

     label05:
        i1 = i1 + 1;

        goto label04;

     label06:
        $r52 := @caughtexception;

        return 0;

     label07:
        i0 = interfaceinvoke r6.<java.util.List: int size()>();

        goto label03;

     label08:
        $r35 = r9.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z4 == 0 goto label05;

        $r39 = new android.content.ComponentName;

        $r37 = r9.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r38 = r9.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r39.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r37, $r38);

        r11 = $r39;

        r10 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Provider lookupProviderLocked(android.content.ComponentName)>(r11);

        if r10 != null goto label09;

        $z6 = virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: boolean addProviderLocked(android.content.pm.ResolveInfo)>(r8);

        if $z6 == 0 goto label05;

        $r48 = r9.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r48);

        z0 = 1;

        goto label05;

     label09:
        r12 = specialinvoke r0.<com.android.server.AppWidgetServiceImpl: com.android.server.AppWidgetServiceImpl$Provider parseProviderInfoXml(android.content.ComponentName,android.content.pm.ResolveInfo)>(r11, r8);

        if r12 == null goto label05;

        $r40 = r9.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>($r40);

        $r45 = r12.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        r10.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info> = $r45;

        $r46 = r10.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        i3 = virtualinvoke $r46.<java.util.ArrayList: int size()>();

        if i3 <= 0 goto label05;

        r13 = staticinvoke <com.android.server.AppWidgetServiceImpl: int[] getAppWidgetIds(com.android.server.AppWidgetServiceImpl$Provider)>(r10);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void cancelBroadcasts(com.android.server.AppWidgetServiceImpl$Provider)>(r10);

        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void registerForBroadcastsLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>(r10, r13);

        i4 = 0;

     label10:
        if i4 >= i3 goto label14;

        $r41 = r10.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        $r42 = virtualinvoke $r41.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r14 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r42;

        r14.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.widget.RemoteViews views> = null;

        $r43 = r14.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        if $r43 == null goto label12;

        $r44 = r14.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r49 = $r44.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        if $r49 == null goto label12;

     label11:
        $r50 = r14.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r47 = $r50.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks>;

        $i9 = r14.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        $r51 = r10.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $i10 = r0.<com.android.server.AppWidgetServiceImpl: int mUserId>;

        interfaceinvoke $r47.<com.android.internal.appwidget.IAppWidgetHost: void providerChanged(int,android.appwidget.AppWidgetProviderInfo,int)>($i9, $r51, $i10);

     label12:
        i4 = i4 + 1;

        goto label10;

     label13:
        $r54 := @caughtexception;

        $r53 = r14.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $r53.<com.android.server.AppWidgetServiceImpl$Host: com.android.internal.appwidget.IAppWidgetHost callbacks> = null;

        goto label12;

     label14:
        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void sendUpdateIntentLocked(com.android.server.AppWidgetServiceImpl$Provider,int[])>(r10, r13);

        z0 = 1;

        goto label05;

     label15:
        $r23 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $i6 = virtualinvoke $r23.<java.util.ArrayList: int size()>();

        i2 = -1 + $i6;

     label16:
        if i2 < 0 goto label19;

        $r24 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $r25 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (com.android.server.AppWidgetServiceImpl$Provider) $r25;

        $r27 = r7.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r28 = $r27.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $r26 = virtualinvoke $r28.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z1 == 0 goto label18;

        $r30 = r7.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r31 = $r30.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $r29 = virtualinvoke $r31.<android.content.ComponentName: java.lang.String getClassName()>();

        $z2 = virtualinvoke r3.<java.util.HashSet: boolean contains(java.lang.Object)>($r29);

        if $z2 != 0 goto label18;

        if r2 == null goto label17;

        $r34 = r7.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r33 = $r34.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r33);

     label17:
        virtualinvoke r0.<com.android.server.AppWidgetServiceImpl: void removeProviderLocked(int,com.android.server.AppWidgetServiceImpl$Provider)>(i2, r7);

        z0 = 1;

     label18:
        i2 = i2 + -1;

        goto label16;

     label19:
        return z0;

        catch android.os.RemoteException from label01 to label02 with label06;
        catch android.os.RemoteException from label11 to label12 with label13;
    }

    boolean writeStateToFileLocked(java.io.FileOutputStream)
    {
        com.android.server.AppWidgetServiceImpl r0;
        java.io.FileOutputStream r1;
        com.android.internal.util.FastXmlSerializer r2, $r10;
        java.io.IOException r3, $r67;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        com.android.server.AppWidgetServiceImpl$Provider r4, $r34, $r47;
        com.android.server.AppWidgetServiceImpl$Host r5, $r27;
        com.android.server.AppWidgetServiceImpl$AppWidgetId r6;
        java.util.Iterator r7;
        java.lang.Boolean $r8;
        java.lang.String $r11, $r20, $r28, $r32, $r37, $r39, $r41, $r44, $r48, $r51, $r56, $r62, $r66, $r73, $r77;
        java.util.ArrayList $r13, $r14, $r16, $r24, $r54, $r57, $r59;
        java.util.HashSet $r15;
        boolean $z0;
        java.lang.Object $r21, $r23, $r53, $r58;
        android.os.Bundle $r29, $r31, $r35, $r42, $r43, $r46;
        android.content.ComponentName $r63, $r70;
        android.appwidget.AppWidgetProviderInfo $r64, $r71;
        java.lang.StringBuilder $r74, $r75, $r76;

        r0 := @this: com.android.server.AppWidgetServiceImpl;

        r1 := @parameter0: java.io.FileOutputStream;

     label01:
        $r10 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r10.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r2 = $r10;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r1, "utf-8");

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "gs");

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r11);

     label02:
        i0 = 0;

     label03:
        $r14 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        i1 = virtualinvoke $r14.<java.util.ArrayList: int size()>();

     label04:
        i2 = 0;

     label05:
        if i2 >= i1 goto label08;

     label06:
        $r59 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mInstalledProviders>;

        $r58 = virtualinvoke $r59.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r4 = (com.android.server.AppWidgetServiceImpl$Provider) $r58;

        $r57 = r4.<com.android.server.AppWidgetServiceImpl$Provider: java.util.ArrayList instances>;

        $i16 = virtualinvoke $r57.<java.util.ArrayList: int size()>();

        if $i16 <= 0 goto label26;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "p");

        $r71 = r4.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r70 = $r71.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $r73 = virtualinvoke $r70.<android.content.ComponentName: java.lang.String getPackageName()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pkg", $r73);

        $r64 = r4.<com.android.server.AppWidgetServiceImpl$Provider: android.appwidget.AppWidgetProviderInfo info>;

        $r63 = $r64.<android.appwidget.AppWidgetProviderInfo: android.content.ComponentName provider>;

        $r66 = virtualinvoke $r63.<android.content.ComponentName: java.lang.String getClassName()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "cl", $r66);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "p");

        r4.<com.android.server.AppWidgetServiceImpl$Provider: int tag> = i0;

     label07:
        i0 = i0 + 1;

        goto label26;

     label08:
        $r13 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        i3 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

     label09:
        i4 = 0;

     label10:
        if i4 >= i3 goto label13;

     label11:
        $r54 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mHosts>;

        $r53 = virtualinvoke $r54.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r5 = (com.android.server.AppWidgetServiceImpl$Host) $r53;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "h");

        $r51 = r5.<com.android.server.AppWidgetServiceImpl$Host: java.lang.String packageName>;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "pkg", $r51);

        $i15 = r5.<com.android.server.AppWidgetServiceImpl$Host: int hostId>;

        $r62 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i15);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r62);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "h");

        r5.<com.android.server.AppWidgetServiceImpl$Host: int tag> = i4;

     label12:
        i4 = i4 + 1;

        goto label10;

     label13:
        $r16 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        i6 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

     label14:
        i5 = 0;

     label15:
        if i5 >= i6 goto label20;

     label16:
        $r24 = r0.<com.android.server.AppWidgetServiceImpl: java.util.ArrayList mAppWidgetIds>;

        $r23 = virtualinvoke $r24.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r6 = (com.android.server.AppWidgetServiceImpl$AppWidgetId) $r23;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "g");

        $i8 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: int appWidgetId>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i8);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r28);

        $r27 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Host host>;

        $i7 = $r27.<com.android.server.AppWidgetServiceImpl$Host: int tag>;

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i7);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "h", $r32);

        $r34 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        if $r34 == null goto label17;

        $r47 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: com.android.server.AppWidgetServiceImpl$Provider provider>;

        $i13 = $r47.<com.android.server.AppWidgetServiceImpl$Provider: int tag>;

        $r56 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i13);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "p", $r56);

     label17:
        $r29 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        if $r29 == null goto label18;

        $r31 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        $i10 = virtualinvoke $r31.<android.os.Bundle: int getInt(java.lang.String)>("appWidgetMinWidth");

        $r37 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i10);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "min_width", $r37);

        $r35 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        $i9 = virtualinvoke $r35.<android.os.Bundle: int getInt(java.lang.String)>("appWidgetMinHeight");

        $r41 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i9);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "min_height", $r41);

        $r42 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        $i11 = virtualinvoke $r42.<android.os.Bundle: int getInt(java.lang.String)>("appWidgetMaxWidth");

        $r39 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i11);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "max_width", $r39);

        $r46 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        $i12 = virtualinvoke $r46.<android.os.Bundle: int getInt(java.lang.String)>("appWidgetMaxHeight");

        $r44 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i12);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "max_height", $r44);

        $r43 = r6.<com.android.server.AppWidgetServiceImpl$AppWidgetId: android.os.Bundle options>;

        $i14 = virtualinvoke $r43.<android.os.Bundle: int getInt(java.lang.String)>("appWidgetCategory");

        $r48 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i14);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "host_category", $r48);

     label18:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "g");

     label19:
        i5 = i5 + 1;

        goto label15;

     label20:
        $r15 = r0.<com.android.server.AppWidgetServiceImpl: java.util.HashSet mPackagesWithBindWidgetPermission>;

        r7 = virtualinvoke $r15.<java.util.HashSet: java.util.Iterator iterator()>();

     label21:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label24;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "b");

        $r21 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (java.lang.String) $r21;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "packageName", $r20);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "b");

     label22:
        goto label21;

     label23:
        $r67 := @caughtexception;

        r3 = $r67;

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write state: ");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppWidgetServiceImpl", $r77);

        return 0;

     label24:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "gs");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label25:
        return 1;

     label26:
        i2 = i2 + 1;

        goto label05;

        catch java.io.IOException from label01 to label02 with label23;
        catch java.io.IOException from label03 to label04 with label23;
        catch java.io.IOException from label06 to label07 with label23;
        catch java.io.IOException from label08 to label09 with label23;
        catch java.io.IOException from label11 to label12 with label23;
        catch java.io.IOException from label13 to label14 with label23;
        catch java.io.IOException from label16 to label17 with label23;
        catch java.io.IOException from label17 to label18 with label23;
        catch java.io.IOException from label18 to label19 with label23;
        catch java.io.IOException from label20 to label21 with label23;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label24 to label25 with label23;
    }
}
