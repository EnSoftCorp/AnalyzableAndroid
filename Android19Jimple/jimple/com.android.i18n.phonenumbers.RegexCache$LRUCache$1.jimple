class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 extends java.util.LinkedHashMap
{
    final com.android.i18n.phonenumbers.RegexCache$LRUCache this$0;

    void <init>(com.android.i18n.phonenumbers.RegexCache$LRUCache, int, float, boolean)
    {
        com.android.i18n.phonenumbers.RegexCache$LRUCache$1 r0;
        com.android.i18n.phonenumbers.RegexCache$LRUCache r1;
        int i0;
        float f0;
        boolean z0;

        r0 := @this: com.android.i18n.phonenumbers.RegexCache$LRUCache$1;

        r1 := @parameter0: com.android.i18n.phonenumbers.RegexCache$LRUCache;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        z0 := @parameter3: boolean;

        r0.<com.android.i18n.phonenumbers.RegexCache$LRUCache$1: com.android.i18n.phonenumbers.RegexCache$LRUCache this$0> = r1;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(i0, f0, z0);

        return;
    }

    protected boolean removeEldestEntry(java.util.Map$Entry)
    {
        com.android.i18n.phonenumbers.RegexCache$LRUCache$1 r0;
        java.util.Map$Entry r1;
        int $i0, $i1;
        com.android.i18n.phonenumbers.RegexCache$LRUCache $r2;

        r0 := @this: com.android.i18n.phonenumbers.RegexCache$LRUCache$1;

        r1 := @parameter0: java.util.Map$Entry;

        $i0 = virtualinvoke r0.<com.android.i18n.phonenumbers.RegexCache$LRUCache$1: int size()>();

        $r2 = r0.<com.android.i18n.phonenumbers.RegexCache$LRUCache$1: com.android.i18n.phonenumbers.RegexCache$LRUCache this$0>;

        $i1 = staticinvoke <com.android.i18n.phonenumbers.RegexCache$LRUCache: int access$000(com.android.i18n.phonenumbers.RegexCache$LRUCache)>($r2);

        if $i0 <= $i1 goto label1;

        return 1;

     label1:
        return 0;
    }
}
