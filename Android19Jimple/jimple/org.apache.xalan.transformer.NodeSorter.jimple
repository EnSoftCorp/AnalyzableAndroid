public class org.apache.xalan.transformer.NodeSorter extends java.lang.Object
{
    org.apache.xpath.XPathContext m_execContext;
    java.util.Vector m_keys;

    public void <init>(org.apache.xpath.XPathContext)
    {
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xpath.XPathContext r1;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext> = r1;

        return;
    }

    int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem, org.apache.xalan.transformer.NodeSorter$NodeCompareElem, int, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xalan.transformer.NodeSorter$NodeCompareElem r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i15, $i16, $i17;
        org.apache.xpath.XPathContext r3, $r15, $r17, $r34, $r38;
        org.apache.xalan.transformer.NodeSortKey r4;
        org.apache.xpath.objects.XObject r5, r6, r9, r10;
        java.text.CollationKey r7, r8;
        double d0, d1, d2;
        java.util.Vector $r11, $r24, $r41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.Object $r12, $r29, $r30, $r31, $r32, $r39, $r44, $r46, $r47;
        org.apache.xml.utils.PrefixResolver $r13, $r16, $r35, $r37;
        org.apache.xpath.XPath $r14, $r18, $r33, $r36;
        java.text.Collator $r19, $r20;
        java.lang.String $r21, $r22, $r25, $r26, $r27, $r28;
        org.apache.xml.dtm.DTM $r23;
        byte $b12, $b13, $b14;
        java.lang.Double $r40, $r42, $r43, $r45;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: org.apache.xalan.transformer.NodeSorter$NodeCompareElem;

        r2 := @parameter1: org.apache.xalan.transformer.NodeSorter$NodeCompareElem;

        i0 := @parameter2: int;

        r3 := @parameter3: org.apache.xpath.XPathContext;

        $r11 = r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys>;

        $r12 = virtualinvoke $r11.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r4 = (org.apache.xalan.transformer.NodeSortKey) $r12;

        $z0 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_treatAsNumbers>;

        if $z0 == 0 goto label17;

        if i0 != 0 goto label05;

        $r47 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        $r42 = (java.lang.Double) $r47;

        d0 = virtualinvoke $r42.<java.lang.Double: double doubleValue()>();

        $r44 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        $r43 = (java.lang.Double) $r44;

        d1 = virtualinvoke $r43.<java.lang.Double: double doubleValue()>();

     label01:
        $b13 = d0 cmpl d1;

        if $b13 != 0 goto label07;

        $i15 = i0 + 1;

        $r41 = r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys>;

        $i17 = virtualinvoke $r41.<java.util.Vector: int size()>();

        if $i15 >= $i17 goto label07;

        $i16 = i0 + 1;

        i1 = virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)>(r1, r2, $i16, r3);

     label02:
        if i1 != 0 goto label03;

        $i6 = i0 + 1;

        $r24 = r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys>;

        $i9 = virtualinvoke $r24.<java.util.Vector: int size()>();

        if $i6 >= $i9 goto label03;

        $i8 = i0 + 1;

        i1 = virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)>(r1, r2, $i8, r3);

     label03:
        if i1 != 0 goto label04;

        $i5 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r23 = virtualinvoke r3.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>($i5);

        $i7 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $i4 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $z3 = interfaceinvoke $r23.<org.apache.xml.dtm.DTM: boolean isNodeAfter(int,int)>($i7, $i4);

        if $z3 == 0 goto label23;

        i1 = -1;

     label04:
        return i1;

     label05:
        if i0 != 1 goto label06;

        $r39 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        $r40 = (java.lang.Double) $r39;

        d0 = virtualinvoke $r40.<java.lang.Double: double doubleValue()>();

        $r46 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        $r45 = (java.lang.Double) $r46;

        d1 = virtualinvoke $r45.<java.lang.Double: double doubleValue()>();

        goto label01;

     label06:
        $r33 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r34 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i10 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r35 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        r9 = virtualinvoke $r33.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r34, $i10, $r35);

        $r36 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r38 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i11 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r37 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        r10 = virtualinvoke $r36.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r38, $i11, $r37);

        d0 = virtualinvoke r9.<org.apache.xpath.objects.XObject: double num()>();

        d1 = virtualinvoke r10.<org.apache.xpath.objects.XObject: double num()>();

        goto label01;

     label07:
        $z8 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z8 == 0 goto label11;

        $z7 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z7 == 0 goto label10;

        d2 = 0.0;

     label08:
        $b14 = d2 cmpg 0.0;

        if $b14 >= 0 goto label14;

        $z6 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_descending>;

        if $z6 == 0 goto label13;

        i1 = 1;

     label09:
        goto label02;

     label10:
        d2 = -1.0;

        goto label08;

     label11:
        $z9 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z9 == 0 goto label12;

        d2 = 1.0;

        goto label08;

     label12:
        d2 = d0 - d1;

        goto label08;

     label13:
        i1 = -1;

        goto label09;

     label14:
        $b12 = d2 cmpl 0.0;

        if $b12 <= 0 goto label16;

        $z5 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_descending>;

        if $z5 == 0 goto label15;

        i1 = -1;

        goto label09;

     label15:
        i1 = 1;

        goto label09;

     label16:
        i1 = 0;

        goto label09;

     label17:
        if i0 != 0 goto label20;

        $r30 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        r7 = (java.text.CollationKey) $r30;

        $r29 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key1Value>;

        r8 = (java.text.CollationKey) $r29;

     label18:
        i1 = virtualinvoke r7.<java.text.CollationKey: int compareTo(java.text.CollationKey)>(r8);

        $z1 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_caseOrderUpper>;

        if $z1 == 0 goto label19;

        $r25 = virtualinvoke r7.<java.text.CollationKey: java.lang.String getSourceString()>();

        $r28 = virtualinvoke $r25.<java.lang.String: java.lang.String toLowerCase()>();

        $r27 = virtualinvoke r8.<java.text.CollationKey: java.lang.String getSourceString()>();

        $r26 = virtualinvoke $r27.<java.lang.String: java.lang.String toLowerCase()>();

        $z4 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z4 == 0 goto label19;

        if i1 != 0 goto label22;

        i1 = 0;

     label19:
        $z2 = r4.<org.apache.xalan.transformer.NodeSortKey: boolean m_descending>;

        if $z2 == 0 goto label02;

        i1 = neg i1;

        goto label02;

     label20:
        if i0 != 1 goto label21;

        $r32 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        r7 = (java.text.CollationKey) $r32;

        $r31 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: java.lang.Object m_key2Value>;

        r8 = (java.text.CollationKey) $r31;

        goto label18;

     label21:
        $r14 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r15 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i2 = r1.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r13 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        r5 = virtualinvoke $r14.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r15, $i2, $r13);

        $r18 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xpath.XPath m_selectPat>;

        $r17 = r0.<org.apache.xalan.transformer.NodeSorter: org.apache.xpath.XPathContext m_execContext>;

        $i3 = r2.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        $r16 = r4.<org.apache.xalan.transformer.NodeSortKey: org.apache.xml.utils.PrefixResolver m_namespaceContext>;

        r6 = virtualinvoke $r18.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>($r17, $i3, $r16);

        $r20 = r4.<org.apache.xalan.transformer.NodeSortKey: java.text.Collator m_col>;

        $r21 = virtualinvoke r5.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        r7 = virtualinvoke $r20.<java.text.Collator: java.text.CollationKey getCollationKey(java.lang.String)>($r21);

        $r19 = r4.<org.apache.xalan.transformer.NodeSortKey: java.text.Collator m_col>;

        $r22 = virtualinvoke r6.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        r8 = virtualinvoke $r19.<java.text.Collator: java.text.CollationKey getCollationKey(java.lang.String)>($r22);

        goto label18;

     label22:
        i1 = neg i1;

        goto label19;

     label23:
        return 1;
    }

    void mergesort(java.util.Vector, java.util.Vector, int, int, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.NodeSorter r0;
        java.util.Vector r1, r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        org.apache.xpath.XPathContext r3;
        org.apache.xalan.transformer.NodeSorter$NodeCompareElem $r4, $r6;
        java.lang.Object $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: java.util.Vector;

        r2 := @parameter1: java.util.Vector;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: org.apache.xpath.XPathContext;

        $i9 = i1 - i0;

        if $i9 <= 0 goto label14;

        $i10 = i1 + i0;

        i2 = $i10 / 2;

        virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)>(r1, r2, i0, i2, r3);

        $i11 = i2 + 1;

        virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)>(r1, r2, $i11, i1, r3);

        i3 = i2;

     label01:
        if i3 < i0 goto label04;

        $i20 = virtualinvoke r2.<java.util.Vector: int size()>();

        if i3 < $i20 goto label03;

        $r13 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        virtualinvoke r2.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r13, i3);

     label02:
        i3 = i3 + -1;

        goto label01;

     label03:
        $r12 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        virtualinvoke r2.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r12, i3);

        goto label02;

     label04:
        i4 = i0;

        i5 = i2 + 1;

     label05:
        if i5 > i1 goto label08;

        $i12 = i1 + i2;

        $i14 = 1 + $i12;

        $i13 = $i14 - i5;

        $i15 = virtualinvoke r2.<java.util.Vector: int size()>();

        if $i13 < $i15 goto label07;

        $r11 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i5);

        $i21 = i1 + i2;

        $i22 = 1 + $i21;

        $i19 = $i22 - i5;

        virtualinvoke r2.<java.util.Vector: void insertElementAt(java.lang.Object,int)>($r11, $i19);

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        $r10 = virtualinvoke r1.<java.util.Vector: java.lang.Object elementAt(int)>(i5);

        $i17 = i1 + i2;

        $i16 = 1 + $i17;

        $i18 = $i16 - i5;

        virtualinvoke r2.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r10, $i18);

        goto label06;

     label08:
        i6 = i1;

        i7 = i0;

     label09:
        if i7 > i1 goto label14;

        if i4 != i6 goto label12;

        i8 = -1;

     label10:
        if i8 >= 0 goto label13;

        $r9 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i4);

        virtualinvoke r1.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r9, i7);

        i4 = i4 + 1;

     label11:
        i7 = i7 + 1;

        goto label09;

     label12:
        $r5 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i4);

        $r4 = (org.apache.xalan.transformer.NodeSorter$NodeCompareElem) $r5;

        $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i6);

        $r6 = (org.apache.xalan.transformer.NodeSorter$NodeCompareElem) $r7;

        i8 = virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)>($r4, $r6, 0, r3);

        goto label10;

     label13:
        if i8 <= 0 goto label11;

        $r8 = virtualinvoke r2.<java.util.Vector: java.lang.Object elementAt(int)>(i6);

        virtualinvoke r1.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r8, i7);

        i6 = i6 + -1;

        goto label11;

     label14:
        return;
    }

    public void sort(org.apache.xml.dtm.DTMIterator, java.util.Vector, org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.NodeSorter r0;
        org.apache.xml.dtm.DTMIterator r1;
        java.util.Vector r2, r4, $r5, $r6;
        org.apache.xpath.XPathContext r3;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.Object $r7;
        org.apache.xalan.transformer.NodeSorter$NodeCompareElem $r8, $r9;

        r0 := @this: org.apache.xalan.transformer.NodeSorter;

        r1 := @parameter0: org.apache.xml.dtm.DTMIterator;

        r2 := @parameter1: java.util.Vector;

        r3 := @parameter2: org.apache.xpath.XPathContext;

        r0.<org.apache.xalan.transformer.NodeSorter: java.util.Vector m_keys> = r2;

        i0 = interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: int getLength()>();

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        r4 = $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r9 = new org.apache.xalan.transformer.NodeSorter$NodeCompareElem;

        $i5 = interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: int item(int)>(i1);

        specialinvoke $r9.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: void <init>(org.apache.xalan.transformer.NodeSorter,int)>(r0, $i5);

        virtualinvoke r4.<java.util.Vector: void addElement(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        $i3 = i0 - 1;

        virtualinvoke r0.<org.apache.xalan.transformer.NodeSorter: void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)>(r4, $r6, 0, $i3, r3);

        i2 = 0;

     label3:
        if i2 >= i0 goto label4;

        $r7 = virtualinvoke r4.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r8 = (org.apache.xalan.transformer.NodeSorter$NodeCompareElem) $r7;

        $i4 = $r8.<org.apache.xalan.transformer.NodeSorter$NodeCompareElem: int m_node>;

        interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: void setItem(int,int)>($i4, i2);

        i2 = i2 + 1;

        goto label3;

     label4:
        interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: void setCurrentPos(int)>(0);

        return;
    }
}
