class gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer extends gov.nist.javax.sip.stack.SIPStackTimerTask
{
    final gov.nist.javax.sip.stack.SIPTransactionStack this$0;
    gov.nist.core.ThreadAuditor$ThreadHandle threadHandle;

    public void <init>(gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.core.ThreadAuditor$ThreadHandle)
    {
        gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;
        gov.nist.core.ThreadAuditor$ThreadHandle r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r2 := @parameter1: gov.nist.core.ThreadAuditor$ThreadHandle;

        r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.javax.sip.stack.SIPTransactionStack this$0> = r1;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPStackTimerTask: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.core.ThreadAuditor$ThreadHandle threadHandle> = r2;

        return;
    }

    protected void runTask()
    {
        gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer r0, $r7;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r5, $r9, $r11;
        java.util.Timer $r2, $r6;
        gov.nist.core.ThreadAuditor$ThreadHandle $r3, $r4, $r8, $r10, $r13;
        long $l0;
        gov.nist.core.ThreadAuditor $r12;

        r0 := @this: gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.javax.sip.stack.SIPTransactionStack this$0>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r2 == null goto label2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.core.ThreadAuditor$ThreadHandle threadHandle>;

        if $r3 != null goto label1;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.javax.sip.stack.SIPTransactionStack this$0>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        $r13 = virtualinvoke $r12.<gov.nist.core.ThreadAuditor: gov.nist.core.ThreadAuditor$ThreadHandle addCurrentThread()>();

        r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.core.ThreadAuditor$ThreadHandle threadHandle> = $r13;

     label1:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.core.ThreadAuditor$ThreadHandle threadHandle>;

        virtualinvoke $r4.<gov.nist.core.ThreadAuditor$ThreadHandle: void ping()>();

        $r5 = r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.javax.sip.stack.SIPTransactionStack this$0>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r7 = new gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.javax.sip.stack.SIPTransactionStack this$0>;

        $r8 = r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.core.ThreadAuditor$ThreadHandle threadHandle>;

        specialinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: void <init>(gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.core.ThreadAuditor$ThreadHandle)>($r9, $r8);

        $r10 = r0.<gov.nist.javax.sip.stack.SIPTransactionStack$PingTimer: gov.nist.core.ThreadAuditor$ThreadHandle threadHandle>;

        $l0 = virtualinvoke $r10.<gov.nist.core.ThreadAuditor$ThreadHandle: long getPingIntervalInMillisecs()>();

        virtualinvoke $r6.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r7, $l0);

     label2:
        return;
    }
}
