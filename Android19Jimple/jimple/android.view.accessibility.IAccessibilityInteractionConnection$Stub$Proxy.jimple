class android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy extends java.lang.Object implements android.view.accessibility.IAccessibilityInteractionConnection
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy;

        $r1 = r0.<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void findAccessibilityNodeInfoByAccessibilityId(long, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy r0;
        long l0, l4;
        int i1, i2, i3;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        l4 := @parameter5: long;

        r2 := @parameter6: android.view.MagnificationSpec;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityInteractionConnection");

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

     label02:
        r5 = null;

        if r1 == null goto label04;

     label03:
        r5 = interfaceinvoke r1.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l4);

     label05:
        if r2 == null goto label09;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.view.MagnificationSpec: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label07:
        $r6 = r0.<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r3, null, 1);

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label07;

     label11:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void findAccessibilityNodeInfosByText(long, java.lang.String, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy r0;
        long l0, l4;
        java.lang.String r1;
        int i1, i2, i3;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Parcel r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder r6, $r7;

        r0 := @this: android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        r3 := @parameter7: android.view.MagnificationSpec;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityInteractionConnection");

        virtualinvoke r4.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

     label02:
        r6 = null;

        if r2 == null goto label04;

     label03:
        r6 = interfaceinvoke r2.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r4.<android.os.Parcel: void writeLong(long)>(l4);

     label05:
        if r3 == null goto label09;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.view.MagnificationSpec: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label07:
        $r7 = r0.<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r4, null, 1);

     label08:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label07;

     label11:
        $r8 := @caughtexception;

        r5 = $r8;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void findAccessibilityNodeInfosByViewId(long, java.lang.String, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy r0;
        long l0, l4;
        java.lang.String r1;
        int i1, i2, i3;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Parcel r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder r6, $r7;

        r0 := @this: android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        r3 := @parameter7: android.view.MagnificationSpec;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityInteractionConnection");

        virtualinvoke r4.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i1);

     label02:
        r6 = null;

        if r2 == null goto label04;

     label03:
        r6 = interfaceinvoke r2.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r4.<android.os.Parcel: void writeLong(long)>(l4);

     label05:
        if r3 == null goto label09;

     label06:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r3.<android.view.MagnificationSpec: void writeToParcel(android.os.Parcel,int)>(r4, 0);

     label07:
        $r7 = r0.<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r4, null, 1);

     label08:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label07;

     label11:
        $r8 := @caughtexception;

        r5 = $r8;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void findFocus(long, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy r0;
        long l0, l5;
        int i1, i2, i3, i4;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        l5 := @parameter6: long;

        r2 := @parameter7: android.view.MagnificationSpec;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityInteractionConnection");

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

     label02:
        r5 = null;

        if r1 == null goto label04;

     label03:
        r5 = interfaceinvoke r1.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l5);

     label05:
        if r2 == null goto label09;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.view.MagnificationSpec: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label07:
        $r6 = r0.<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, null, 1);

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label07;

     label11:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void focusSearch(long, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy r0;
        long l0, l5;
        int i1, i2, i3, i4;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        l5 := @parameter6: long;

        r2 := @parameter7: android.view.MagnificationSpec;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityInteractionConnection");

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

     label02:
        r5 = null;

        if r1 == null goto label04;

     label03:
        r5 = interfaceinvoke r1.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: android.os.IBinder asBinder()>();

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l5);

     label05:
        if r2 == null goto label09;

     label06:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.view.MagnificationSpec: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label07:
        $r6 = r0.<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r3, null, 1);

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label07;

     label11:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy r0;

        r0 := @this: android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy;

        return "android.view.accessibility.IAccessibilityInteractionConnection";
    }

    public void performAccessibilityAction(long, int, android.os.Bundle, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long) throws android.os.RemoteException
    {
        android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy r0;
        long l0, l5;
        int i1, i2, i3, i4;
        android.os.Bundle r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        l5 := @parameter7: long;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.view.accessibility.IAccessibilityInteractionConnection");

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

     label02:
        if r1 == null goto label09;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i2);

     label05:
        r5 = null;

        if r2 == null goto label07;

     label06:
        r5 = interfaceinvoke r2.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: android.os.IBinder asBinder()>();

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i3);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i4);

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l5);

        $r6 = r0.<android.view.accessibility.IAccessibilityInteractionConnection$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r3, null, 1);

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label04;

     label11:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }
}
