public class org.apache.xpath.axes.UnionChildIterator extends org.apache.xpath.axes.ChildTestIterator
{
    static final long serialVersionUID;
    private org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests;

    public void <init>()
    {
        org.apache.xpath.axes.UnionChildIterator r0;

        r0 := @this: org.apache.xpath.axes.UnionChildIterator;

        specialinvoke r0.<org.apache.xpath.axes.ChildTestIterator: void <init>(org.apache.xml.dtm.DTMAxisTraverser)>(null);

        r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests> = null;

        return;
    }

    public short acceptNode(int)
    {
        org.apache.xpath.axes.UnionChildIterator r0;
        int i0, i1, $i2, $i3;
        org.apache.xpath.XPathContext r1;
        java.lang.Throwable r2, $r10;
        javax.xml.transform.TransformerException r3, $r9;
        org.apache.xpath.axes.PredicatedNodeTest r4;
        boolean z0;
        org.apache.xpath.axes.PredicatedNodeTest[] $r5, $r6;
        org.apache.xpath.objects.XObject $r7;
        org.apache.xpath.objects.XNumber $r8;
        java.lang.String $r11;
        java.lang.RuntimeException $r12;

        r0 := @this: org.apache.xpath.axes.UnionChildIterator;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.XPathContext getXPathContext()>();

     label01:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

     label02:
        i1 = 0;

     label03:
        $r5 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $i2 = lengthof $r5;

        if i1 >= $i2 goto label07;

        $r6 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        r4 = $r6[i1];

        $r7 = virtualinvoke r4.<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)>(r1, i0);

        $r8 = <org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber SCORE_NONE>;

        if $r7 == $r8 goto label06;

        $i3 = virtualinvoke r4.<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateCount()>();

        if $i3 <= 0 goto label05;

        z0 = virtualinvoke r4.<org.apache.xpath.axes.PredicatedNodeTest: boolean executePredicates(int,org.apache.xpath.XPathContext)>(i0, r1);

     label04:
        if z0 == 0 goto label06;

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        return 1;

     label05:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        return 1;

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        return 3;

     label08:
        $r9 := @caughtexception;

        r3 = $r9;

     label09:
        $r12 = new java.lang.RuntimeException;

        $r11 = virtualinvoke r3.<javax.xml.transform.TransformerException: java.lang.String getMessage()>();

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r12;

     label10:
        $r10 := @caughtexception;

        r2 = $r10;

        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        throw r2;

        catch javax.xml.transform.TransformerException from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch javax.xml.transform.TransformerException from label03 to label04 with label08;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public void addNodeTest(org.apache.xpath.axes.PredicatedNodeTest)
    {
        org.apache.xpath.axes.UnionChildIterator r0;
        org.apache.xpath.axes.PredicatedNodeTest r1;
        org.apache.xpath.axes.PredicatedNodeTest[] r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int i0, $i1;

        r0 := @this: org.apache.xpath.axes.UnionChildIterator;

        r1 := @parameter0: org.apache.xpath.axes.PredicatedNodeTest;

        $r3 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        if $r3 != null goto label2;

        $r8 = newarray (org.apache.xpath.axes.PredicatedNodeTest)[1];

        r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests> = $r8;

        $r9 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $r9[0] = r1;

     label1:
        virtualinvoke r1.<org.apache.xpath.axes.PredicatedNodeTest: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        return;

     label2:
        r2 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $r4 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        i0 = lengthof $r4;

        $i1 = i0 + 1;

        $r5 = newarray (org.apache.xpath.axes.PredicatedNodeTest)[$i1];

        r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests> = $r5;

        $r6 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r6, 0, i0);

        $r7 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $r7[i0] = r1;

        goto label1;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.axes.UnionChildIterator r0;
        java.util.Vector r1;
        int i0, i1, $i2;
        org.apache.xpath.axes.PredicatedNodeTest[] $r2, $r3, $r4;
        org.apache.xpath.axes.PredicatedNodeTest $r5;

        r0 := @this: org.apache.xpath.axes.UnionChildIterator;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.xpath.axes.ChildTestIterator: void fixupVariables(java.util.Vector,int)>(r1, i0);

        $r2 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        if $r2 == null goto label2;

        i1 = 0;

     label1:
        $r3 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label2;

        $r4 = r0.<org.apache.xpath.axes.UnionChildIterator: org.apache.xpath.axes.PredicatedNodeTest[] m_nodeTests>;

        $r5 = $r4[i1];

        virtualinvoke $r5.<org.apache.xpath.axes.PredicatedNodeTest: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.axes.UnionChildIterator: long serialVersionUID> = 3500298482193003495L;

        return;
    }
}
