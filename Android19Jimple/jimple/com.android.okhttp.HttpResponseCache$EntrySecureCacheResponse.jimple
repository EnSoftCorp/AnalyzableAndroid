class com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse extends java.net.SecureCacheResponse
{
    private final com.android.okhttp.HttpResponseCache$Entry entry;
    private final java.io.InputStream in;
    private final com.android.okhttp.internal.DiskLruCache$Snapshot snapshot;

    public void <init>(com.android.okhttp.HttpResponseCache$Entry, com.android.okhttp.internal.DiskLruCache$Snapshot)
    {
        com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse r0;
        com.android.okhttp.HttpResponseCache$Entry r1;
        com.android.okhttp.internal.DiskLruCache$Snapshot r2;
        java.io.InputStream $r3;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse;

        r1 := @parameter0: com.android.okhttp.HttpResponseCache$Entry;

        r2 := @parameter1: com.android.okhttp.internal.DiskLruCache$Snapshot;

        specialinvoke r0.<java.net.SecureCacheResponse: void <init>()>();

        r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry> = r1;

        r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.internal.DiskLruCache$Snapshot snapshot> = r2;

        $r3 = staticinvoke <com.android.okhttp.HttpResponseCache: java.io.InputStream access$1000(com.android.okhttp.internal.DiskLruCache$Snapshot)>(r2);

        r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: java.io.InputStream in> = $r3;

        return;
    }

    static com.android.okhttp.internal.DiskLruCache$Snapshot access$600(com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse)
    {
        com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse r0;
        com.android.okhttp.internal.DiskLruCache$Snapshot $r1;

        r0 := @parameter0: com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.internal.DiskLruCache$Snapshot snapshot>;

        return $r1;
    }

    public java.io.InputStream getBody()
    {
        com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse r0;
        java.io.InputStream $r1;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: java.io.InputStream in>;

        return $r1;
    }

    public java.lang.String getCipherSuite()
    {
        com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse r0;
        com.android.okhttp.HttpResponseCache$Entry $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r2 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.lang.String access$1200(com.android.okhttp.HttpResponseCache$Entry)>($r1);

        return $r2;
    }

    public java.util.Map getHeaders()
    {
        com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse r0;
        com.android.okhttp.HttpResponseCache$Entry $r1;
        com.android.okhttp.internal.http.RawHeaders $r2;
        java.util.Map $r3;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r2 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.internal.http.RawHeaders access$1100(com.android.okhttp.HttpResponseCache$Entry)>($r1);

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.http.RawHeaders: java.util.Map toMultimap(boolean)>(1);

        return $r3;
    }

    public java.util.List getLocalCertificateChain()
    {
        com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse r0;
        com.android.okhttp.HttpResponseCache$Entry $r1, $r3, $r5;
        java.security.cert.Certificate[] $r2, $r4, $r6;
        int $i0;
        java.lang.Object $r7;
        java.lang.Object[] $r8;
        java.util.List $r9;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r2 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1400(com.android.okhttp.HttpResponseCache$Entry)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r4 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1400(com.android.okhttp.HttpResponseCache$Entry)>($r3);

        $i0 = lengthof $r4;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r5 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r6 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1400(com.android.okhttp.HttpResponseCache$Entry)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>();

        $r8 = (java.lang.Object[]) $r7;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        return $r9;
    }

    public java.security.Principal getLocalPrincipal()
    {
        com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse r0;
        com.android.okhttp.HttpResponseCache$Entry $r1, $r3, $r5;
        java.security.cert.Certificate[] $r2, $r4, $r6;
        int $i0;
        java.security.cert.Certificate $r7;
        java.security.cert.X509Certificate $r8;
        javax.security.auth.x500.X500Principal $r9;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r2 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1400(com.android.okhttp.HttpResponseCache$Entry)>($r1);

        if $r2 == null goto label1;

        $r3 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r4 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1400(com.android.okhttp.HttpResponseCache$Entry)>($r3);

        $i0 = lengthof $r4;

        if $i0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r5 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r6 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1400(com.android.okhttp.HttpResponseCache$Entry)>($r5);

        $r7 = $r6[0];

        $r8 = (java.security.cert.X509Certificate) $r7;

        $r9 = virtualinvoke $r8.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        return $r9;
    }

    public java.security.Principal getPeerPrincipal() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse r0;
        com.android.okhttp.HttpResponseCache$Entry $r1, $r4, $r6;
        java.security.cert.Certificate[] $r2, $r5, $r7;
        javax.net.ssl.SSLPeerUnverifiedException $r3;
        int $i0;
        java.security.cert.Certificate $r8;
        java.security.cert.X509Certificate $r9;
        javax.security.auth.x500.X500Principal $r10;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r2 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1300(com.android.okhttp.HttpResponseCache$Entry)>($r1);

        if $r2 == null goto label1;

        $r4 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r5 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1300(com.android.okhttp.HttpResponseCache$Entry)>($r4);

        $i0 = lengthof $r5;

        if $i0 != 0 goto label2;

     label1:
        $r3 = new javax.net.ssl.SSLPeerUnverifiedException;

        specialinvoke $r3.<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>(null);

        throw $r3;

     label2:
        $r6 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r7 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1300(com.android.okhttp.HttpResponseCache$Entry)>($r6);

        $r8 = $r7[0];

        $r9 = (java.security.cert.X509Certificate) $r8;

        $r10 = virtualinvoke $r9.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        return $r10;
    }

    public java.util.List getServerCertificateChain() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse r0;
        com.android.okhttp.HttpResponseCache$Entry $r1, $r4, $r6;
        java.security.cert.Certificate[] $r2, $r5, $r7;
        javax.net.ssl.SSLPeerUnverifiedException $r3;
        int $i0;
        java.lang.Object $r8;
        java.lang.Object[] $r9;
        java.util.List $r10;

        r0 := @this: com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r2 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1300(com.android.okhttp.HttpResponseCache$Entry)>($r1);

        if $r2 == null goto label1;

        $r4 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r5 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1300(com.android.okhttp.HttpResponseCache$Entry)>($r4);

        $i0 = lengthof $r5;

        if $i0 != 0 goto label2;

     label1:
        $r3 = new javax.net.ssl.SSLPeerUnverifiedException;

        specialinvoke $r3.<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>(null);

        throw $r3;

     label2:
        $r6 = r0.<com.android.okhttp.HttpResponseCache$EntrySecureCacheResponse: com.android.okhttp.HttpResponseCache$Entry entry>;

        $r7 = staticinvoke <com.android.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] access$1300(com.android.okhttp.HttpResponseCache$Entry)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        $r9 = (java.lang.Object[]) $r8;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        return $r10;
    }
}
