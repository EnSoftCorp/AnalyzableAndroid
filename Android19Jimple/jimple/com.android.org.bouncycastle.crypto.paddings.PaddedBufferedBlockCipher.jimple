public class com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher extends com.android.org.bouncycastle.crypto.BufferedBlockCipher
{
    com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding;

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher)
    {
        com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        com.android.org.bouncycastle.crypto.paddings.PKCS7Padding $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        $r2 = new com.android.org.bouncycastle.crypto.paddings.PKCS7Padding;

        specialinvoke $r2.<com.android.org.bouncycastle.crypto.paddings.PKCS7Padding: void <init>()>();

        specialinvoke r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(com.android.org.bouncycastle.crypto.BlockCipher,com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)>(r1, $r2);

        return;
    }

    public void <init>(com.android.org.bouncycastle.crypto.BlockCipher, com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding)
    {
        com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher r0;
        com.android.org.bouncycastle.crypto.BlockCipher r1;
        com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding r2;
        int $i0;
        byte[] $r3;

        r0 := @this: com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.BlockCipher;

        r2 := @parameter1: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding;

        specialinvoke r0.<com.android.org.bouncycastle.crypto.BufferedBlockCipher: void <init>()>();

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher> = r1;

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding> = r2;

        $i0 = interfaceinvoke r1.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $r3 = newarray (byte)[$i0];

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf> = $r3;

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff> = 0;

        return;
    }

    public int doFinal(byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException, com.android.org.bouncycastle.crypto.InvalidCipherTextException
    {
        com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher r0;
        byte[] r1, $r5, $r6, $r9, $r10, $r11, $r13, $r15;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15;
        java.lang.Throwable r2, $r17;
        com.android.org.bouncycastle.crypto.BlockCipher $r3, $r7, $r14, $r18;
        boolean $z0;
        com.android.org.bouncycastle.crypto.DataLengthException $r4;
        com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding $r8, $r12;
        com.android.org.bouncycastle.crypto.OutputLengthException $r16;

        r0 := @this: com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r3 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        i1 = interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        $z0 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label3;

        i4 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        i5 = 0;

        if i4 != i1 goto label2;

        $i14 = i1 * 2;

        $i13 = i0 + $i14;

        $i15 = lengthof r1;

        if $i13 <= $i15 goto label1;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void reset()>();

        $r16 = new com.android.org.bouncycastle.crypto.OutputLengthException;

        specialinvoke $r16.<com.android.org.bouncycastle.crypto.OutputLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r16;

     label1:
        $r18 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r15 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        i5 = interfaceinvoke $r18.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r15, 0, r1, i0);

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff> = 0;

     label2:
        $r12 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding>;

        $r11 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i9 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        interfaceinvoke $r12.<com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding: int addPadding(byte[],int)>($r11, $i9);

        $r14 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r13 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i11 = i0 + i5;

        $i12 = interfaceinvoke $r14.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r13, 0, r1, $i11);

        i6 = i5 + $i12;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void reset()>();

        return i6;

     label3:
        $i7 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        if $i7 != i1 goto label6;

        $r7 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $r6 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        i2 = interfaceinvoke $r7.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, $r6, 0);

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff> = 0;

     label4:
        $r8 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding>;

        $r9 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i8 = interfaceinvoke $r8.<com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding: int padCount(byte[])>($r9);

        i3 = i2 - $i8;

        $r10 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r1, i0, i3);

     label5:
        virtualinvoke r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void reset()>();

        return i3;

     label6:
        virtualinvoke r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void reset()>();

        $r4 = new com.android.org.bouncycastle.crypto.DataLengthException;

        specialinvoke $r4.<com.android.org.bouncycastle.crypto.DataLengthException: void <init>(java.lang.String)>("last block incomplete in decryption");

        throw $r4;

     label7:
        $r17 := @caughtexception;

        r2 = $r17;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void reset()>();

        throw r2;

        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public int getOutputSize(int)
    {
        com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte[] $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        i0 := @parameter0: int;

        $i3 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        i1 = i0 + $i3;

        $r1 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i4 = lengthof $r1;

        i2 = i1 % $i4;

        if i2 != 0 goto label2;

        $z0 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: boolean forEncryption>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i8 = lengthof $r3;

        i1 = i1 + $i8;

     label1:
        return i1;

     label2:
        $i6 = i1 - i2;

        $r2 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i5 = lengthof $r2;

        $i7 = $i6 + $i5;

        return $i7;
    }

    public int getUpdateOutputSize(int)
    {
        com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        byte[] $r1, $r2;

        r0 := @this: com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        i0 := @parameter0: int;

        $i3 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        i1 = i0 + $i3;

        $r1 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i4 = lengthof $r1;

        i2 = i1 % $i4;

        if i2 != 0 goto label1;

        $r2 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i6 = lengthof $r2;

        $i7 = i1 - $i6;

        return $i7;

     label1:
        $i5 = i1 - i2;

        return $i5;
    }

    public void init(boolean, com.android.org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException
    {
        com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher r0;
        boolean z0, $z1;
        com.android.org.bouncycastle.crypto.CipherParameters r1, $r8;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom r2;
        com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding $r3, $r5;
        com.android.org.bouncycastle.crypto.BlockCipher $r4, $r7;
        java.security.SecureRandom $r6;

        r0 := @this: com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.org.bouncycastle.crypto.CipherParameters;

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: boolean forEncryption> = z0;

        virtualinvoke r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void reset()>();

        $z1 = r1 instanceof com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        if $z1 == 0 goto label1;

        r2 = (com.android.org.bouncycastle.crypto.params.ParametersWithRandom) r1;

        $r5 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding>;

        $r6 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: java.security.SecureRandom getRandom()>();

        interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding: void init(java.security.SecureRandom)>($r6);

        $r7 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r8 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: com.android.org.bouncycastle.crypto.CipherParameters getParameters()>();

        interfaceinvoke $r7.<com.android.org.bouncycastle.crypto.BlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(z0, $r8);

        return;

     label1:
        $r3 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding padding>;

        interfaceinvoke $r3.<com.android.org.bouncycastle.crypto.paddings.BlockCipherPadding: void init(java.security.SecureRandom)>(null);

        $r4 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        interfaceinvoke $r4.<com.android.org.bouncycastle.crypto.BlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(z0, r1);

        return;
    }

    public int processByte(byte, byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher r0;
        byte b0;
        byte[] r1, r2, $r3, $r4;
        int i1, i2, i3, i4, i5, $i6;
        com.android.org.bouncycastle.crypto.BlockCipher $r5;

        r0 := @this: com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        b0 := @parameter0: byte;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        i2 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        $r3 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        i3 = lengthof $r3;

        i4 = 0;

        if i2 != i3 goto label1;

        $r5 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r4 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        i4 = interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r4, 0, r1, i1);

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff> = 0;

     label1:
        r2 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        i5 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        $i6 = i5 + 1;

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff> = $i6;

        r2[i5] = b0;

        return i4;
    }

    public int processBytes(byte[], int, int, byte[], int) throws com.android.org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException
    {
        com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher r0;
        byte[] r1, r2, $r3, $r4, $r5, $r6, $r8;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        com.android.org.bouncycastle.crypto.BlockCipher $r7, $r9;
        com.android.org.bouncycastle.crypto.OutputLengthException $r10;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        if i1 >= 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t have a negative input length!");

        throw $r11;

     label1:
        i3 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int getBlockSize()>();

        i4 = virtualinvoke r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int getUpdateOutputSize(int)>(i1);

        if i4 <= 0 goto label2;

        $i17 = i2 + i4;

        $i18 = lengthof r2;

        if $i17 <= $i18 goto label2;

        $r10 = new com.android.org.bouncycastle.crypto.OutputLengthException;

        specialinvoke $r10.<com.android.org.bouncycastle.crypto.OutputLengthException: void <init>(java.lang.String)>("output buffer too short");

        throw $r10;

     label2:
        $r3 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i8 = lengthof $r3;

        $i7 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        i5 = $i8 - $i7;

        i6 = 0;

        if i1 <= i5 goto label4;

        $r6 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i11 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r6, $i11, i5);

        $r7 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $r5 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i13 = interfaceinvoke $r7.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>($r5, 0, r2, i2);

        i6 = 0 + $i13;

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff> = 0;

        i1 = i1 - i5;

        i0 = i0 + i5;

     label3:
        $r8 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i15 = lengthof $r8;

        if i1 <= $i15 goto label4;

        $r9 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: com.android.org.bouncycastle.crypto.BlockCipher cipher>;

        $i14 = i2 + i6;

        $i16 = interfaceinvoke $r9.<com.android.org.bouncycastle.crypto.BlockCipher: int processBlock(byte[],int,byte[],int)>(r1, i0, r2, $i14);

        i6 = i6 + $i16;

        i1 = i1 - i3;

        i0 = i0 + i3;

        goto label3;

     label4:
        $r4 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: byte[] buf>;

        $i9 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r4, $i9, i1);

        $i10 = r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff>;

        $i12 = i1 + $i10;

        r0.<com.android.org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: int bufOff> = $i12;

        return i6;
    }
}
