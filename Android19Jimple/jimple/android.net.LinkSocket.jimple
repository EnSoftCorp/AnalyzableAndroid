public class android.net.LinkSocket extends java.net.Socket
{
    private static final boolean DBG;
    private static final java.lang.String TAG;

    public void <init>()
    {
        android.net.LinkSocket r0;

        r0 := @this: android.net.LinkSocket;

        specialinvoke r0.<java.net.Socket: void <init>()>();

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("LinkSocket() EX");

        return;
    }

    public void <init>(android.net.LinkSocketNotifier)
    {
        android.net.LinkSocket r0;
        android.net.LinkSocketNotifier r1;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: android.net.LinkSocketNotifier;

        specialinvoke r0.<java.net.Socket: void <init>()>();

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("LinkSocket(notifier) EX");

        return;
    }

    public void <init>(android.net.LinkSocketNotifier, android.net.Proxy)
    {
        android.net.LinkSocket r0;
        android.net.LinkSocketNotifier r1;
        android.net.Proxy r2;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: android.net.LinkSocketNotifier;

        r2 := @parameter1: android.net.Proxy;

        specialinvoke r0.<java.net.Socket: void <init>()>();

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("LinkSocket(notifier, proxy) EX");

        return;
    }

    protected static void log(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LinkSocket", r0);

        return;
    }

    public void bind(java.net.SocketAddress) throws java.lang.UnsupportedOperationException
    {
        android.net.LinkSocket r0;
        java.net.SocketAddress r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: java.net.SocketAddress;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("bind(localAddr) EX throws IOException");

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("bind is deprecated for LinkSocket");

        throw $r2;
    }

    public void close() throws java.io.IOException
    {
        android.net.LinkSocket r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.net.LinkSocket;

        entermonitor r0;

     label1:
        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("close() EX");

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void connect() throws java.io.IOException
    {
        android.net.LinkSocket r0;

        r0 := @this: android.net.LinkSocket;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("connect() EX");

        return;
    }

    public void connect(int) throws java.io.IOException
    {
        android.net.LinkSocket r0;
        int i0;

        r0 := @this: android.net.LinkSocket;

        i0 := @parameter0: int;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("connect(timeout) EX");

        return;
    }

    public void connect(java.lang.String, int) throws java.net.UnknownHostException, java.io.IOException
    {
        android.net.LinkSocket r0;
        java.lang.String r1;
        int i0;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("connect(dstName, dstPort, timeout) EX");

        return;
    }

    public void connect(java.lang.String, int, int) throws java.net.UnknownHostException, java.io.IOException, java.net.SocketTimeoutException
    {
        android.net.LinkSocket r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("connect(dstName, dstPort, timeout) EX");

        return;
    }

    public void connect(java.net.SocketAddress) throws java.io.IOException
    {
        android.net.LinkSocket r0;
        java.net.SocketAddress r1;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: java.net.SocketAddress;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("connect(remoteAddr) EX DEPRECATED");

        return;
    }

    public void connect(java.net.SocketAddress, int) throws java.io.IOException, java.net.SocketTimeoutException
    {
        android.net.LinkSocket r0;
        java.net.SocketAddress r1;
        int i0;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: java.net.SocketAddress;

        i0 := @parameter1: int;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("connect(remoteAddr, timeout) EX DEPRECATED");

        return;
    }

    public android.net.LinkCapabilities getCapabilities()
    {
        android.net.LinkSocket r0;

        r0 := @this: android.net.LinkSocket;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("getCapabilities() EX");

        return null;
    }

    public android.net.LinkCapabilities getCapabilities(java.util.Set)
    {
        android.net.LinkSocket r0;
        java.util.Set r1;
        android.net.LinkCapabilities $r2;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: java.util.Set;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("getCapabilities(capabilities) EX");

        $r2 = new android.net.LinkCapabilities;

        specialinvoke $r2.<android.net.LinkCapabilities: void <init>()>();

        return $r2;
    }

    public android.net.LinkProperties getLinkProperties()
    {
        android.net.LinkSocket r0;
        android.net.LinkProperties $r1;

        r0 := @this: android.net.LinkSocket;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("LinkProperties() EX");

        $r1 = new android.net.LinkProperties;

        specialinvoke $r1.<android.net.LinkProperties: void <init>()>();

        return $r1;
    }

    public android.net.LinkCapabilities getNeededCapabilities()
    {
        android.net.LinkSocket r0;

        r0 := @this: android.net.LinkSocket;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("getNeeds() EX");

        return null;
    }

    public java.util.Set getTrackedCapabilities()
    {
        android.net.LinkSocket r0;
        java.util.HashSet $r1;

        r0 := @this: android.net.LinkSocket;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("getTrackedCapabilities(capabilities) EX");

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        return $r1;
    }

    public void requestNewLink(android.net.LinkSocket$LinkRequestReason)
    {
        android.net.LinkSocket r0;
        android.net.LinkSocket$LinkRequestReason r1;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: android.net.LinkSocket$LinkRequestReason;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("requestNewLink(linkRequestReason) EX");

        return;
    }

    public boolean setNeededCapabilities(android.net.LinkCapabilities)
    {
        android.net.LinkSocket r0;
        android.net.LinkCapabilities r1;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: android.net.LinkCapabilities;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("setNeeds() EX");

        return 0;
    }

    public void setTrackedCapabilities(java.util.Set)
    {
        android.net.LinkSocket r0;
        java.util.Set r1;

        r0 := @this: android.net.LinkSocket;

        r1 := @parameter0: java.util.Set;

        staticinvoke <android.net.LinkSocket: void log(java.lang.String)>("setTrackedCapabilities(capabilities) EX");

        return;
    }

    public static void <clinit>()
    {
        <android.net.LinkSocket: java.lang.String TAG> = "LinkSocket";

        <android.net.LinkSocket: boolean DBG> = 1;

        return;
    }
}
