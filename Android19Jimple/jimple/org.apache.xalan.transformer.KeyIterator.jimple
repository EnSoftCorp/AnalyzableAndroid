public class org.apache.xalan.transformer.KeyIterator extends org.apache.xpath.axes.OneStepIteratorForward
{
    static final long serialVersionUID;
    private java.util.Vector m_keyDeclarations;
    private org.apache.xml.utils.QName m_name;

    void <init>(org.apache.xml.utils.QName, java.util.Vector)
    {
        org.apache.xalan.transformer.KeyIterator r0;
        org.apache.xml.utils.QName r1;
        java.util.Vector r2;

        r0 := @this: org.apache.xalan.transformer.KeyIterator;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r2 := @parameter1: java.util.Vector;

        specialinvoke r0.<org.apache.xpath.axes.OneStepIteratorForward: void <init>(int)>(16);

        r0.<org.apache.xalan.transformer.KeyIterator: java.util.Vector m_keyDeclarations> = r2;

        r0.<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.QName m_name> = r1;

        return;
    }

    public short acceptNode(int)
    {
        org.apache.xalan.transformer.KeyIterator r0, r1;
        int i0, i1, i2;
        boolean z0, $z1;
        org.apache.xpath.XPathContext r2;
        java.util.Vector r3;
        org.apache.xml.utils.QName r4, $r13;
        java.lang.Object[] r6;
        org.apache.xalan.templates.KeyDeclaration r7;
        double d0;
        org.apache.xpath.axes.LocPathIterator $r8;
        java.lang.RuntimeException $r9;
        java.lang.String $r10, $r12;
        java.lang.Object $r11;
        org.apache.xpath.XPath $r14;
        byte $b3;
        javax.xml.transform.TransformerException $r16;

        r0 := @this: org.apache.xalan.transformer.KeyIterator;

        i0 := @parameter0: int;

        z0 = 0;

        $r8 = r0.<org.apache.xalan.transformer.KeyIterator: org.apache.xpath.axes.LocPathIterator m_lpi>;

        r1 = (org.apache.xalan.transformer.KeyIterator) $r8;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.KeyIterator: org.apache.xpath.XPathContext getXPathContext()>();

        r3 = virtualinvoke r1.<org.apache.xalan.transformer.KeyIterator: java.util.Vector getKeyDeclarations()>();

        r4 = virtualinvoke r1.<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.QName getName()>();

     label01:
        i1 = virtualinvoke r3.<java.util.Vector: int size()>();

     label02:
        i2 = 0;

     label03:
        if i2 >= i1 goto label10;

     label04:
        $r11 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        r7 = (org.apache.xalan.templates.KeyDeclaration) $r11;

        $r13 = virtualinvoke r7.<org.apache.xalan.templates.KeyDeclaration: org.apache.xml.utils.QName getName()>();

        $z1 = virtualinvoke $r13.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r4);

        if $z1 != 0 goto label06;

     label05:
        goto label12;

     label06:
        z0 = 1;

     label07:
        $r14 = virtualinvoke r7.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath getMatch()>();

        d0 = virtualinvoke $r14.<org.apache.xpath.XPath: double getMatchScore(org.apache.xpath.XPathContext,int)>(r2, i0);

        virtualinvoke r7.<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath getMatch()>();

     label08:
        $b3 = d0 cmpl #-Infinity;

        if $b3 == 0 goto label12;

        return 1;

     label09:
        $r16 := @caughtexception;

     label10:
        if z0 != 0 goto label11;

        r6 = newarray (java.lang.Object)[1];

        $r10 = virtualinvoke r4.<org.apache.xml.utils.QName: java.lang.String getLocalName()>();

        r6[0] = $r10;

        $r9 = new java.lang.RuntimeException;

        $r12 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_XSLKEY_DECLARATION", r6);

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label11:
        return 2;

     label12:
        i2 = i2 + 1;

        goto label03;

        catch javax.xml.transform.TransformerException from label01 to label02 with label09;
        catch javax.xml.transform.TransformerException from label04 to label05 with label09;
        catch javax.xml.transform.TransformerException from label07 to label08 with label09;
    }

    public java.util.Vector getKeyDeclarations()
    {
        org.apache.xalan.transformer.KeyIterator r0;
        java.util.Vector $r1;

        r0 := @this: org.apache.xalan.transformer.KeyIterator;

        $r1 = r0.<org.apache.xalan.transformer.KeyIterator: java.util.Vector m_keyDeclarations>;

        return $r1;
    }

    public org.apache.xml.utils.QName getName()
    {
        org.apache.xalan.transformer.KeyIterator r0;
        org.apache.xml.utils.QName $r1;

        r0 := @this: org.apache.xalan.transformer.KeyIterator;

        $r1 = r0.<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.QName m_name>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.transformer.KeyIterator: long serialVersionUID> = -1349109910100249661L;

        return;
    }
}
