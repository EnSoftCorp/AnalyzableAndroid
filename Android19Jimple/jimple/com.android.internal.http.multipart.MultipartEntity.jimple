public class com.android.internal.http.multipart.MultipartEntity extends org.apache.http.entity.AbstractHttpEntity
{
    public static final java.lang.String MULTIPART_BOUNDARY;
    private static byte[] MULTIPART_CHARS;
    private static final java.lang.String MULTIPART_FORM_CONTENT_TYPE;
    private static final org.apache.commons.logging.Log log;
    private boolean contentConsumed;
    private byte[] multipartBoundary;
    private org.apache.http.params.HttpParams params;
    protected com.android.internal.http.multipart.Part[] parts;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;
        byte[] $r1;

        <com.android.internal.http.multipart.MultipartEntity: java.lang.String MULTIPART_FORM_CONTENT_TYPE> = "multipart/form-data";

        <com.android.internal.http.multipart.MultipartEntity: java.lang.String MULTIPART_BOUNDARY> = "http.method.multipart.boundary";

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "com/android/internal/http/multipart/MultipartEntity");

        <com.android.internal.http.multipart.MultipartEntity: org.apache.commons.logging.Log log> = $r0;

        $r1 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>("-_1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ");

        <com.android.internal.http.multipart.MultipartEntity: byte[] MULTIPART_CHARS> = $r1;

        return;
    }

    public void <init>(com.android.internal.http.multipart.Part[])
    {
        com.android.internal.http.multipart.MultipartEntity r0;
        com.android.internal.http.multipart.Part[] r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.android.internal.http.multipart.MultipartEntity;

        r1 := @parameter0: com.android.internal.http.multipart.Part[];

        specialinvoke r0.<org.apache.http.entity.AbstractHttpEntity: void <init>()>();

        r0.<com.android.internal.http.multipart.MultipartEntity: boolean contentConsumed> = 0;

        virtualinvoke r0.<com.android.internal.http.multipart.MultipartEntity: void setContentType(java.lang.String)>("multipart/form-data");

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parts cannot be null");

        throw $r2;

     label1:
        r0.<com.android.internal.http.multipart.MultipartEntity: com.android.internal.http.multipart.Part[] parts> = r1;

        r0.<com.android.internal.http.multipart.MultipartEntity: org.apache.http.params.HttpParams params> = null;

        return;
    }

    public void <init>(com.android.internal.http.multipart.Part[], org.apache.http.params.HttpParams)
    {
        com.android.internal.http.multipart.MultipartEntity r0;
        com.android.internal.http.multipart.Part[] r1;
        org.apache.http.params.HttpParams r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: com.android.internal.http.multipart.MultipartEntity;

        r1 := @parameter0: com.android.internal.http.multipart.Part[];

        r2 := @parameter1: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.entity.AbstractHttpEntity: void <init>()>();

        r0.<com.android.internal.http.multipart.MultipartEntity: boolean contentConsumed> = 0;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("parts cannot be null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("params cannot be null");

        throw $r3;

     label2:
        r0.<com.android.internal.http.multipart.MultipartEntity: com.android.internal.http.multipart.Part[] parts> = r1;

        r0.<com.android.internal.http.multipart.MultipartEntity: org.apache.http.params.HttpParams params> = r2;

        return;
    }

    private static byte[] generateMultipartBoundary()
    {
        java.util.Random r0, $r2;
        byte[] r1, $r3, $r4;
        int i0, $i1, $i2, $i3, $i4, $i5;
        byte $b6;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>()>();

        r0 = $r2;

        $i1 = virtualinvoke r0.<java.util.Random: int nextInt(int)>(11);

        $i2 = 30 + $i1;

        r1 = newarray (byte)[$i2];

        i0 = 0;

     label1:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label2;

        $r4 = <com.android.internal.http.multipart.MultipartEntity: byte[] MULTIPART_CHARS>;

        $r3 = <com.android.internal.http.multipart.MultipartEntity: byte[] MULTIPART_CHARS>;

        $i4 = lengthof $r3;

        $i5 = virtualinvoke r0.<java.util.Random: int nextInt(int)>($i4);

        $b6 = $r4[$i5];

        r1[i0] = $b6;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    public java.io.InputStream getContent() throws java.io.IOException, java.lang.IllegalStateException
    {
        com.android.internal.http.multipart.MultipartEntity r0;
        java.io.ByteArrayOutputStream r1, $r2;
        boolean $z0, $z1;
        byte[] $r3, $r6;
        com.android.internal.http.multipart.Part[] $r4;
        java.io.ByteArrayInputStream $r5;
        java.lang.IllegalStateException $r7;

        r0 := @this: com.android.internal.http.multipart.MultipartEntity;

        $z0 = virtualinvoke r0.<com.android.internal.http.multipart.MultipartEntity: boolean isRepeatable()>();

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.internal.http.multipart.MultipartEntity: boolean contentConsumed>;

        if $z1 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Content has been consumed");

        throw $r7;

     label1:
        r0.<com.android.internal.http.multipart.MultipartEntity: boolean contentConsumed> = 1;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r2;

        $r4 = r0.<com.android.internal.http.multipart.MultipartEntity: com.android.internal.http.multipart.Part[] parts>;

        $r3 = r0.<com.android.internal.http.multipart.MultipartEntity: byte[] multipartBoundary>;

        staticinvoke <com.android.internal.http.multipart.Part: void sendParts(java.io.OutputStream,com.android.internal.http.multipart.Part[],byte[])>(r1, $r4, $r3);

        $r5 = new java.io.ByteArrayInputStream;

        $r6 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

        return $r5;
    }

    public long getContentLength()
    {
        com.android.internal.http.multipart.MultipartEntity r0;
        java.lang.Exception r1, $r4;
        long l0;
        com.android.internal.http.multipart.Part[] $r2;
        byte[] $r3;
        org.apache.commons.logging.Log $r5;

        r0 := @this: com.android.internal.http.multipart.MultipartEntity;

     label1:
        $r2 = r0.<com.android.internal.http.multipart.MultipartEntity: com.android.internal.http.multipart.Part[] parts>;

        $r3 = virtualinvoke r0.<com.android.internal.http.multipart.MultipartEntity: byte[] getMultipartBoundary()>();

        l0 = staticinvoke <com.android.internal.http.multipart.Part: long getLengthOfParts(com.android.internal.http.multipart.Part[],byte[])>($r2, $r3);

     label2:
        return l0;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = <com.android.internal.http.multipart.MultipartEntity: org.apache.commons.logging.Log log>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("An exception occurred while getting the length of the parts", r1);

        return 0L;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public org.apache.http.Header getContentType()
    {
        com.android.internal.http.multipart.MultipartEntity r0;
        java.lang.StringBuffer r1, $r2;
        byte[] $r4;
        java.lang.String $r5, $r8;
        org.apache.http.message.BasicHeader $r7;

        r0 := @this: com.android.internal.http.multipart.MultipartEntity;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>("multipart/form-data");

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; boundary=");

        $r4 = virtualinvoke r0.<com.android.internal.http.multipart.MultipartEntity: byte[] getMultipartBoundary()>();

        $r5 = staticinvoke <org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[])>($r4);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = new org.apache.http.message.BasicHeader;

        $r8 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>("Content-Type", $r8);

        return $r7;
    }

    protected byte[] getMultipartBoundary()
    {
        com.android.internal.http.multipart.MultipartEntity r0;
        org.apache.http.params.HttpParams r1, $r7;
        java.lang.String r2;
        byte[] $r3, $r4, $r5, $r6;
        java.lang.Object $r8;

        r0 := @this: com.android.internal.http.multipart.MultipartEntity;

        $r3 = r0.<com.android.internal.http.multipart.MultipartEntity: byte[] multipartBoundary>;

        if $r3 != null goto label2;

        r1 = r0.<com.android.internal.http.multipart.MultipartEntity: org.apache.http.params.HttpParams params>;

        r2 = null;

        if r1 == null goto label1;

        $r7 = r0.<com.android.internal.http.multipart.MultipartEntity: org.apache.http.params.HttpParams params>;

        $r8 = interfaceinvoke $r7.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.method.multipart.boundary");

        r2 = (java.lang.String) $r8;

     label1:
        if r2 == null goto label3;

        $r6 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>(r2);

        r0.<com.android.internal.http.multipart.MultipartEntity: byte[] multipartBoundary> = $r6;

     label2:
        $r4 = r0.<com.android.internal.http.multipart.MultipartEntity: byte[] multipartBoundary>;

        return $r4;

     label3:
        $r5 = staticinvoke <com.android.internal.http.multipart.MultipartEntity: byte[] generateMultipartBoundary()>();

        r0.<com.android.internal.http.multipart.MultipartEntity: byte[] multipartBoundary> = $r5;

        goto label2;
    }

    public boolean isRepeatable()
    {
        com.android.internal.http.multipart.MultipartEntity r0;
        int i0, $i1;
        com.android.internal.http.multipart.Part[] $r1, $r2;
        com.android.internal.http.multipart.Part $r3;
        boolean $z0;

        r0 := @this: com.android.internal.http.multipart.MultipartEntity;

        i0 = 0;

     label1:
        $r1 = r0.<com.android.internal.http.multipart.MultipartEntity: com.android.internal.http.multipart.Part[] parts>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label3;

        $r2 = r0.<com.android.internal.http.multipart.MultipartEntity: com.android.internal.http.multipart.Part[] parts>;

        $r3 = $r2[i0];

        $z0 = virtualinvoke $r3.<com.android.internal.http.multipart.Part: boolean isRepeatable()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 1;
    }

    public boolean isStreaming()
    {
        com.android.internal.http.multipart.MultipartEntity r0;

        r0 := @this: com.android.internal.http.multipart.MultipartEntity;

        return 0;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        com.android.internal.http.multipart.MultipartEntity r0;
        java.io.OutputStream r1;
        com.android.internal.http.multipart.Part[] $r2;
        byte[] $r3;

        r0 := @this: com.android.internal.http.multipart.MultipartEntity;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<com.android.internal.http.multipart.MultipartEntity: com.android.internal.http.multipart.Part[] parts>;

        $r3 = virtualinvoke r0.<com.android.internal.http.multipart.MultipartEntity: byte[] getMultipartBoundary()>();

        staticinvoke <com.android.internal.http.multipart.Part: void sendParts(java.io.OutputStream,com.android.internal.http.multipart.Part[],byte[])>(r1, $r2, $r3);

        return;
    }
}
