class com.android.server.wm.ViewServer$ViewServerWorker extends java.lang.Object implements java.lang.Runnable, com.android.server.wm.WindowManagerService$WindowChangeListener
{
    private java.net.Socket mClient;
    private boolean mNeedFocusedWindowUpdate;
    private boolean mNeedWindowListUpdate;
    final com.android.server.wm.ViewServer this$0;

    public void <init>(com.android.server.wm.ViewServer, java.net.Socket)
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        com.android.server.wm.ViewServer r1;
        java.net.Socket r2;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        r1 := @parameter0: com.android.server.wm.ViewServer;

        r2 := @parameter1: java.net.Socket;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient> = r2;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate> = 0;

        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate> = 0;

        return;
    }

    private boolean windowManagerAutolistLoop()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        java.io.BufferedWriter r1, r3, r6, $r12;
        java.lang.Throwable r2, r9, $r21, $r24, $r27;
        boolean z0, z1, z2, z3, $z4, $z5, $z6;
        com.android.server.wm.ViewServer $r11, $r18, $r19, $r25;
        com.android.server.wm.WindowManagerService $r13, $r17, $r22, $r26;
        java.net.Socket $r14;
        java.io.OutputStreamWriter $r15;
        java.io.OutputStream $r16;
        java.lang.Exception $r20, $r29;
        java.io.IOException $r23, $r28, $r30;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        $r11 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r13 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r11);

        virtualinvoke $r13.<com.android.server.wm.WindowManagerService: void addWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

     label01:
        $r12 = new java.io.BufferedWriter;

        $r15 = new java.io.OutputStreamWriter;

        $r14 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        $r16 = virtualinvoke $r14.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r15.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r16);

        specialinvoke $r12.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r15);

        r1 = $r12;

     label02:
        $z4 = staticinvoke <java.lang.Thread: boolean interrupted()>();

        if $z4 != 0 goto label31;

        entermonitor r0;

     label03:
        $z5 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate>;

        if $z5 != 0 goto label13;

        $z6 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate>;

        if $z6 != 0 goto label13;

        virtualinvoke r0.<java.lang.Object: void wait()>();

     label04:
        goto label03;

     label05:
        $r27 := @caughtexception;

        r9 = $r27;

     label06:
        exitmonitor r0;

     label07:
        throw r9;

     label08:
        $r29 := @caughtexception;

        r6 = r1;

     label09:
        if r6 == null goto label11;

     label10:
        virtualinvoke r6.<java.io.BufferedWriter: void close()>();

     label11:
        $r19 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r22 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r19);

        virtualinvoke $r22.<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

     label12:
        return 1;

     label13:
        z0 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate>;

     label14:
        z1 = 0;

        if z0 == 0 goto label17;

     label15:
        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate> = 0;

     label16:
        z1 = 1;

     label17:
        z2 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate>;

     label18:
        z3 = 0;

        if z2 == 0 goto label21;

     label19:
        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate> = 0;

     label20:
        z3 = 1;

     label21:
        exitmonitor r0;

     label22:
        if z1 == 0 goto label24;

     label23:
        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>("LIST UPDATE\n");

        virtualinvoke r1.<java.io.BufferedWriter: void flush()>();

     label24:
        if z3 == 0 goto label02;

     label25:
        virtualinvoke r1.<java.io.BufferedWriter: void write(java.lang.String)>("FOCUS UPDATE\n");

        virtualinvoke r1.<java.io.BufferedWriter: void flush()>();

     label26:
        goto label02;

     label27:
        $r24 := @caughtexception;

        r2 = $r24;

        r3 = r1;

     label28:
        if r3 == null goto label30;

     label29:
        virtualinvoke r3.<java.io.BufferedWriter: void close()>();

     label30:
        $r25 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r26 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r25);

        virtualinvoke $r26.<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

        throw r2;

     label31:
        if r1 == null goto label33;

     label32:
        virtualinvoke r1.<java.io.BufferedWriter: void close()>();

     label33:
        $r18 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r17 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r18);

        virtualinvoke $r17.<com.android.server.wm.WindowManagerService: void removeWindowChangeListener(com.android.server.wm.WindowManagerService$WindowChangeListener)>(r0);

        goto label12;

     label34:
        $r30 := @caughtexception;

        goto label33;

     label35:
        $r23 := @caughtexception;

        goto label11;

     label36:
        $r28 := @caughtexception;

        goto label30;

     label37:
        $r21 := @caughtexception;

        r2 = $r21;

        r3 = null;

        goto label28;

     label38:
        $r20 := @caughtexception;

        r6 = null;

        goto label09;

        catch java.lang.Exception from label01 to label02 with label38;
        catch java.lang.Throwable from label01 to label02 with label37;
        catch java.lang.Exception from label02 to label03 with label08;
        catch java.lang.Throwable from label02 to label03 with label27;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Exception from label07 to label08 with label08;
        catch java.lang.Throwable from label07 to label08 with label27;
        catch java.io.IOException from label10 to label11 with label35;
        catch java.lang.Throwable from label13 to label14 with label05;
        catch java.lang.Throwable from label15 to label16 with label05;
        catch java.lang.Throwable from label17 to label18 with label05;
        catch java.lang.Throwable from label19 to label20 with label05;
        catch java.lang.Throwable from label21 to label22 with label05;
        catch java.lang.Exception from label23 to label24 with label08;
        catch java.lang.Throwable from label23 to label24 with label27;
        catch java.lang.Exception from label25 to label26 with label08;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.io.IOException from label29 to label30 with label36;
        catch java.io.IOException from label32 to label33 with label34;
    }

    public void focusChanged()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        entermonitor r0;

     label1:
        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedFocusedWindowUpdate> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void run()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        java.io.BufferedReader r1, r2, $r13;
        java.io.IOException r3, r5, r6, r7, r8, r12, r14, $r39, $r45, $r46, $r48, $r49, $r51, $r52, $r53;
        java.lang.Throwable r4, $r42, $r50;
        java.lang.String r9, r10, r11, $r18, $r19, $r20, $r21, $r24, $r32;
        int i0, $i1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        java.net.Socket $r15, $r25, $r26, $r27, $r34, $r36, $r37, $r40, $r41, $r43, $r44, $r47;
        java.io.InputStreamReader $r16;
        java.io.InputStream $r17;
        com.android.server.wm.ViewServer $r22, $r31, $r33;
        com.android.server.wm.WindowManagerService $r23, $r35, $r38;
        java.lang.StringBuilder $r28, $r29, $r30;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        r1 = null;

     label01:
        $r13 = new java.io.BufferedReader;

        $r16 = new java.io.InputStreamReader;

        $r15 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        $r17 = virtualinvoke $r15.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r16.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r17);

        specialinvoke $r13.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r16, 1024);

        r2 = $r13;

     label02:
        r9 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        i0 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(32);

     label03:
        if i0 != -1 goto label12;

        r10 = r9;

        r11 = "";

     label04:
        $r18 = "PROTOCOL";

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r10);

        if $z2 == 0 goto label14;

        $r40 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z1 = staticinvoke <com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)>($r40, "4");

     label05:
        if z1 != 0 goto label07;

     label06:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An error occurred with the command: ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ViewServer", $r32);

     label07:
        if r2 == null goto label09;

     label08:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label09:
        $r25 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        if $r25 == null goto label45;

     label10:
        $r26 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        virtualinvoke $r26.<java.net.Socket: void close()>();

     label11:
        return;

     label12:
        r10 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        r11 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i1);

     label13:
        goto label04;

     label14:
        $r19 = "SERVER";

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r10);

        if $z3 == 0 goto label16;

        $r36 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z1 = staticinvoke <com.android.server.wm.ViewServer: boolean access$000(java.net.Socket,java.lang.String)>($r36, "4");

     label15:
        goto label05;

     label16:
        $r21 = "LIST";

        $z5 = virtualinvoke $r21.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r10);

        if $z5 == 0 goto label18;

        $r33 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r38 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r33);

        $r37 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z1 = virtualinvoke $r38.<com.android.server.wm.WindowManagerService: boolean viewServerListWindows(java.net.Socket)>($r37);

     label17:
        goto label05;

     label18:
        $r20 = "GET_FOCUS";

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r10);

        if $z4 == 0 goto label20;

        $r31 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r35 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r31);

        $r34 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z1 = virtualinvoke $r35.<com.android.server.wm.WindowManagerService: boolean viewServerGetFocusedWindow(java.net.Socket)>($r34);

     label19:
        goto label05;

     label20:
        $r24 = "AUTOLIST";

        $z6 = virtualinvoke $r24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r10);

        if $z6 == 0 goto label22;

        z1 = specialinvoke r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean windowManagerAutolistLoop()>();

     label21:
        goto label05;

     label22:
        $r22 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: com.android.server.wm.ViewServer this$0>;

        $r23 = staticinvoke <com.android.server.wm.ViewServer: com.android.server.wm.WindowManagerService access$100(com.android.server.wm.ViewServer)>($r22);

        $r27 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        z0 = virtualinvoke $r23.<com.android.server.wm.WindowManagerService: boolean viewServerWindowCommand(java.net.Socket,java.lang.String,java.lang.String)>($r27, r10, r11);

     label23:
        z1 = z0;

        goto label05;

     label24:
        $r48 := @caughtexception;

        r14 = $r48;

        virtualinvoke r14.<java.io.IOException: void printStackTrace()>();

        goto label09;

     label25:
        $r52 := @caughtexception;

        r12 = $r52;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        return;

     label26:
        $r46 := @caughtexception;

        r3 = $r46;

     label27:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewServer", "Connection error: ", r3);

     label28:
        if r1 == null goto label30;

     label29:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label30:
        $r47 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        if $r47 == null goto label11;

     label31:
        $r41 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        virtualinvoke $r41.<java.net.Socket: void close()>();

     label32:
        return;

     label33:
        $r39 := @caughtexception;

        r7 = $r39;

        virtualinvoke r7.<java.io.IOException: void printStackTrace()>();

        return;

     label34:
        $r49 := @caughtexception;

        r8 = $r49;

        virtualinvoke r8.<java.io.IOException: void printStackTrace()>();

        goto label30;

     label35:
        $r42 := @caughtexception;

        r4 = $r42;

     label36:
        if r1 == null goto label38;

     label37:
        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label38:
        $r43 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        if $r43 == null goto label40;

     label39:
        $r44 = r0.<com.android.server.wm.ViewServer$ViewServerWorker: java.net.Socket mClient>;

        virtualinvoke $r44.<java.net.Socket: void close()>();

     label40:
        throw r4;

     label41:
        $r51 := @caughtexception;

        r6 = $r51;

        virtualinvoke r6.<java.io.IOException: void printStackTrace()>();

        goto label38;

     label42:
        $r45 := @caughtexception;

        r5 = $r45;

        virtualinvoke r5.<java.io.IOException: void printStackTrace()>();

        goto label40;

     label43:
        $r50 := @caughtexception;

        r4 = $r50;

        r1 = r2;

        goto label36;

     label44:
        $r53 := @caughtexception;

        r3 = $r53;

        r1 = r2;

        goto label27;

     label45:
        return;

        catch java.io.IOException from label01 to label02 with label26;
        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.io.IOException from label02 to label03 with label44;
        catch java.lang.Throwable from label02 to label03 with label43;
        catch java.io.IOException from label04 to label05 with label44;
        catch java.lang.Throwable from label04 to label05 with label43;
        catch java.io.IOException from label06 to label07 with label44;
        catch java.lang.Throwable from label06 to label07 with label43;
        catch java.io.IOException from label08 to label09 with label24;
        catch java.io.IOException from label10 to label11 with label25;
        catch java.io.IOException from label12 to label13 with label44;
        catch java.lang.Throwable from label12 to label13 with label43;
        catch java.io.IOException from label14 to label15 with label44;
        catch java.lang.Throwable from label14 to label15 with label43;
        catch java.io.IOException from label16 to label17 with label44;
        catch java.lang.Throwable from label16 to label17 with label43;
        catch java.io.IOException from label18 to label19 with label44;
        catch java.lang.Throwable from label18 to label19 with label43;
        catch java.io.IOException from label20 to label21 with label44;
        catch java.lang.Throwable from label20 to label21 with label43;
        catch java.io.IOException from label22 to label23 with label44;
        catch java.lang.Throwable from label22 to label23 with label43;
        catch java.lang.Throwable from label27 to label28 with label35;
        catch java.io.IOException from label29 to label30 with label34;
        catch java.io.IOException from label31 to label32 with label33;
        catch java.io.IOException from label37 to label38 with label41;
        catch java.io.IOException from label39 to label40 with label42;
    }

    public void windowsChanged()
    {
        com.android.server.wm.ViewServer$ViewServerWorker r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.server.wm.ViewServer$ViewServerWorker;

        entermonitor r0;

     label1:
        r0.<com.android.server.wm.ViewServer$ViewServerWorker: boolean mNeedWindowListUpdate> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
