class android.net.INetworkStatsSession$Stub$Proxy extends java.lang.Object implements android.net.INetworkStatsSession
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        $r1 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void close() throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

        $r4 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate, int) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.net.NetworkTemplate r1;
        int i0, $i1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r9;
        android.net.NetworkStatsHistory r5;
        android.os.IBinder $r6;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r1 := @parameter0: android.net.NetworkTemplate;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r6 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label9;

        $r7 = <android.net.NetworkStatsHistory: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r5 = (android.net.NetworkStatsHistory) $r8;

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r9 := @caughtexception;

        r4 = $r9;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label9:
        r5 = null;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate, int, int, int, int) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.net.NetworkTemplate r1;
        int i0, i1, i2, i3, $i4;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r9;
        android.net.NetworkStatsHistory r5;
        android.os.IBinder $r6;
        java.lang.Object $r7;
        android.os.Parcelable$Creator $r8;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r1 := @parameter0: android.net.NetworkTemplate;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i3);

        $r6 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i4 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label9;

        $r8 = <android.net.NetworkStatsHistory: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r5 = (android.net.NetworkStatsHistory) $r7;

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r9 := @caughtexception;

        r4 = $r9;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label9:
        r5 = null;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        return "android.net.INetworkStatsSession";
    }

    public android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate, long, long, boolean) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.net.NetworkTemplate r1;
        long l0, l1;
        boolean z0;
        byte b2;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r9;
        android.net.NetworkStats r5;
        android.os.IBinder $r6;
        int $i3;
        java.lang.Object $r7;
        android.os.Parcelable$Creator $r8;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r1 := @parameter0: android.net.NetworkTemplate;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        b2 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label02:
        if r1 == null goto label08;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l1);

     label05:
        if z0 == 0 goto label11;

     label06:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b2);

        $r6 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label12;

        $r8 = <android.net.NetworkStats: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r5 = (android.net.NetworkStats) $r7;

     label07:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label08:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label09:
        goto label04;

     label10:
        $r9 := @caughtexception;

        r4 = $r9;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label11:
        b2 = 0;

        goto label06;

     label12:
        r5 = null;

        goto label07;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate, long, long) throws android.os.RemoteException
    {
        android.net.INetworkStatsSession$Stub$Proxy r0;
        android.net.NetworkTemplate r1;
        long l0, l1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r9;
        android.net.NetworkStats r5;
        android.os.IBinder $r6;
        int $i2;
        java.lang.Object $r7;
        android.os.Parcelable$Creator $r8;

        r0 := @this: android.net.INetworkStatsSession$Stub$Proxy;

        r1 := @parameter0: android.net.NetworkTemplate;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.INetworkStatsSession");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l1);

        $r6 = r0.<android.net.INetworkStatsSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label9;

        $r8 = <android.net.NetworkStats: android.os.Parcelable$Creator CREATOR>;

        $r7 = interfaceinvoke $r8.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r5 = (android.net.NetworkStats) $r7;

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r9 := @caughtexception;

        r4 = $r9;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label9:
        r5 = null;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }
}
