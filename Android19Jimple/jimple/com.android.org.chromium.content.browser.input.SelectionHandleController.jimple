public abstract class com.android.org.chromium.content.browser.input.SelectionHandleController extends java.lang.Object implements com.android.org.chromium.content.browser.input.CursorController
{
    private boolean mAllowAutomaticShowing;
    private com.android.org.chromium.content.browser.input.HandleView mEndHandle;
    private int mFixedHandleX;
    private int mFixedHandleY;
    private boolean mIsShowing;
    private android.view.View mParent;
    private com.android.org.chromium.content.browser.PositionObserver mPositionObserver;
    private com.android.org.chromium.content.browser.input.HandleView mStartHandle;

    public void <init>(android.view.View, com.android.org.chromium.content.browser.PositionObserver)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        android.view.View r1;
        com.android.org.chromium.content.browser.PositionObserver r2;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: com.android.org.chromium.content.browser.PositionObserver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: boolean mAllowAutomaticShowing> = 1;

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: android.view.View mParent> = r1;

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.PositionObserver mPositionObserver> = r2;

        return;
    }

    private void createHandlesIfNeeded(int, int)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        int i0, i1;
        byte b2, b3;
        com.android.org.chromium.content.browser.input.HandleView $r1, $r2, $r3, $r6;
        com.android.org.chromium.content.browser.PositionObserver $r4, $r7;
        android.view.View $r5, $r8;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        if $r1 != null goto label2;

        if i0 != 2 goto label5;

        b3 = 2;

     label1:
        $r6 = new com.android.org.chromium.content.browser.input.HandleView;

        $r8 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: android.view.View mParent>;

        $r7 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.PositionObserver mPositionObserver>;

        specialinvoke $r6.<com.android.org.chromium.content.browser.input.HandleView: void <init>(com.android.org.chromium.content.browser.input.CursorController,int,android.view.View,com.android.org.chromium.content.browser.PositionObserver)>(r0, b3, $r8, $r7);

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle> = $r6;

     label2:
        $r2 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

        if $r2 != null goto label4;

        b2 = 0;

        if i1 != 2 goto label6;

     label3:
        $r3 = new com.android.org.chromium.content.browser.input.HandleView;

        $r5 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: android.view.View mParent>;

        $r4 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.PositionObserver mPositionObserver>;

        specialinvoke $r3.<com.android.org.chromium.content.browser.input.HandleView: void <init>(com.android.org.chromium.content.browser.input.CursorController,int,android.view.View,com.android.org.chromium.content.browser.PositionObserver)>(r0, b2, $r5, $r4);

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle> = $r3;

     label4:
        return;

     label5:
        b3 = 0;

        goto label1;

     label6:
        b2 = 2;

        goto label3;
    }

    private void showHandlesIfNeeded()
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        boolean $z0;
        com.android.org.chromium.content.browser.input.HandleView $r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        $z0 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: boolean mIsShowing>;

        if $z0 != 0 goto label1;

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: boolean mIsShowing> = 1;

        $r1 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void show()>();

        $r2 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.input.HandleView: void show()>();

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: void setHandleVisibility(int)>(0);

     label1:
        return;
    }

    public void allowAutomaticShowing()
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: boolean mAllowAutomaticShowing> = 1;

        return;
    }

    public void beforeStartUpdatingPosition(com.android.org.chromium.content.browser.input.HandleView)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView r1, r2, $r3;
        int $i0, $i1;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        r1 := @parameter0: com.android.org.chromium.content.browser.input.HandleView;

        $r3 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        if r1 != $r3 goto label2;

        r2 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

     label1:
        $i0 = virtualinvoke r2.<com.android.org.chromium.content.browser.input.HandleView: int getAdjustedPositionX()>();

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: int mFixedHandleX> = $i0;

        $i1 = virtualinvoke r2.<com.android.org.chromium.content.browser.input.HandleView: int getLineAdjustedPositionY()>();

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: int mFixedHandleY> = $i1;

        return;

     label2:
        r2 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        goto label1;
    }

    public void beginHandleFadeIn()
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView $r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void beginFadeIn()>();

        $r2 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.input.HandleView: void beginFadeIn()>();

        return;
    }

    public void hide()
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        boolean $z0;
        com.android.org.chromium.content.browser.input.HandleView $r1, $r2, $r3, $r4;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        $z0 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: boolean mIsShowing>;

        if $z0 == 0 goto label3;

        $r1 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        virtualinvoke $r4.<com.android.org.chromium.content.browser.input.HandleView: void hide()>();

     label1:
        $r2 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

        virtualinvoke $r3.<com.android.org.chromium.content.browser.input.HandleView: void hide()>();

     label2:
        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: boolean mIsShowing> = 0;

     label3:
        return;
    }

    public void hideAndDisallowAutomaticShowing()
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: void hide()>();

        r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: boolean mAllowAutomaticShowing> = 0;

        return;
    }

    public boolean isDragging()
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        $z1 = virtualinvoke $r4.<com.android.org.chromium.content.browser.input.HandleView: boolean isDragging()>();

        if $z1 != 0 goto label2;

     label1:
        $r2 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

        $z0 = virtualinvoke $r3.<com.android.org.chromium.content.browser.input.HandleView: boolean isDragging()>();

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean isShowing()
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        $z0 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: boolean mIsShowing>;

        return $z0;
    }

    public void onSelectionChanged(int, int)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: boolean mAllowAutomaticShowing>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: void showHandles(int,int)>(i0, i1);

     label1:
        return;
    }

    public void onTouchModeChanged(boolean)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        boolean z0;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: void hide()>();

     label1:
        return;
    }

    protected abstract void selectBetweenCoordinates(int, int, int, int);

    public void setEndHandlePosition(float, float)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        float f0, f1;
        int $i0, $i1;
        com.android.org.chromium.content.browser.input.HandleView $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

        $i1 = (int) f0;

        $i0 = (int) f1;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void positionAt(int,int)>($i1, $i0);

        return;
    }

    public void setHandleVisibility(int)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        int i0;
        com.android.org.chromium.content.browser.input.HandleView $r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void setVisibility(int)>(i0);

        $r2 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mEndHandle>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.input.HandleView: void setVisibility(int)>(i0);

        return;
    }

    public void setStartHandlePosition(float, float)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        float f0, f1;
        int $i0, $i1;
        com.android.org.chromium.content.browser.input.HandleView $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: com.android.org.chromium.content.browser.input.HandleView mStartHandle>;

        $i1 = (int) f0;

        $i0 = (int) f1;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void positionAt(int,int)>($i1, $i0);

        return;
    }

    public void showHandles(int, int)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        int i0, i1;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: void createHandlesIfNeeded(int,int)>(i0, i1);

        specialinvoke r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: void showHandlesIfNeeded()>();

        return;
    }

    public void updatePosition(com.android.org.chromium.content.browser.input.HandleView, int, int)
    {
        com.android.org.chromium.content.browser.input.SelectionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView r1;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.org.chromium.content.browser.input.SelectionHandleController;

        r1 := @parameter0: com.android.org.chromium.content.browser.input.HandleView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: int mFixedHandleX>;

        $i2 = r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: int mFixedHandleY>;

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.SelectionHandleController: void selectBetweenCoordinates(int,int,int,int)>($i3, $i2, i0, i1);

        return;
    }
}
