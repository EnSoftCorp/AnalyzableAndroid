final class android.content.res.XmlBlock extends java.lang.Object
{
    private static final boolean DEBUG;
    private final android.content.res.AssetManager mAssets;
    private final int mNative;
    private boolean mOpen;
    private int mOpenCount;
    final android.content.res.StringBlock mStrings;

    void <init>(android.content.res.AssetManager, int)
    {
        android.content.res.XmlBlock r0;
        android.content.res.AssetManager r1;
        int i0, $i1;
        android.content.res.StringBlock $r2;

        r0 := @this: android.content.res.XmlBlock;

        r1 := @parameter0: android.content.res.AssetManager;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.XmlBlock: boolean mOpen> = 1;

        r0.<android.content.res.XmlBlock: int mOpenCount> = 1;

        r0.<android.content.res.XmlBlock: android.content.res.AssetManager mAssets> = r1;

        r0.<android.content.res.XmlBlock: int mNative> = i0;

        $r2 = new android.content.res.StringBlock;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetStringBlock(int)>(i0);

        specialinvoke $r2.<android.content.res.StringBlock: void <init>(int,boolean)>($i1, 0);

        r0.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings> = $r2;

        return;
    }

    public void <init>(byte[])
    {
        android.content.res.XmlBlock r0;
        byte[] r1;
        int $i0, $i1, $i2, $i3;
        android.content.res.StringBlock $r2;

        r0 := @this: android.content.res.XmlBlock;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.XmlBlock: boolean mOpen> = 1;

        r0.<android.content.res.XmlBlock: int mOpenCount> = 1;

        r0.<android.content.res.XmlBlock: android.content.res.AssetManager mAssets> = null;

        $i0 = lengthof r1;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeCreate(byte[],int,int)>(r1, 0, $i0);

        r0.<android.content.res.XmlBlock: int mNative> = $i1;

        $r2 = new android.content.res.StringBlock;

        $i2 = r0.<android.content.res.XmlBlock: int mNative>;

        $i3 = staticinvoke <android.content.res.XmlBlock: int nativeGetStringBlock(int)>($i2);

        specialinvoke $r2.<android.content.res.StringBlock: void <init>(int,boolean)>($i3, 0);

        r0.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings> = $r2;

        return;
    }

    public void <init>(byte[], int, int)
    {
        android.content.res.XmlBlock r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4;
        android.content.res.StringBlock $r2;

        r0 := @this: android.content.res.XmlBlock;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.content.res.XmlBlock: boolean mOpen> = 1;

        r0.<android.content.res.XmlBlock: int mOpenCount> = 1;

        r0.<android.content.res.XmlBlock: android.content.res.AssetManager mAssets> = null;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeCreate(byte[],int,int)>(r1, i0, i1);

        r0.<android.content.res.XmlBlock: int mNative> = $i2;

        $r2 = new android.content.res.StringBlock;

        $i3 = r0.<android.content.res.XmlBlock: int mNative>;

        $i4 = staticinvoke <android.content.res.XmlBlock: int nativeGetStringBlock(int)>($i3);

        specialinvoke $r2.<android.content.res.StringBlock: void <init>(int,boolean)>($i4, 0);

        r0.<android.content.res.XmlBlock: android.content.res.StringBlock mStrings> = $r2;

        return;
    }

    static int access$008(android.content.res.XmlBlock)
    {
        android.content.res.XmlBlock r0;
        int i0, $i1;

        r0 := @parameter0: android.content.res.XmlBlock;

        i0 = r0.<android.content.res.XmlBlock: int mOpenCount>;

        $i1 = i0 + 1;

        r0.<android.content.res.XmlBlock: int mOpenCount> = $i1;

        return i0;
    }

    static int access$100(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetText(int)>(i0);

        return $i1;
    }

    static int access$1000(int, java.lang.String, java.lang.String)
    {
        int i0, $i1;
        java.lang.String r0, r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeIndex(int,java.lang.String,java.lang.String)>(i0, r0, r1);

        return $i1;
    }

    static int access$1100(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeResource(int,int)>(i0, i1);

        return $i2;
    }

    static int access$1200(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetIdAttribute(int)>(i0);

        return $i1;
    }

    static int access$1300(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetClassAttribute(int)>(i0);

        return $i1;
    }

    static int access$1400(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetStyleAttribute(int)>(i0);

        return $i1;
    }

    static void access$1500(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <android.content.res.XmlBlock: void nativeDestroyParseState(int)>(i0);

        return;
    }

    static void access$1600(android.content.res.XmlBlock)
    {
        android.content.res.XmlBlock r0;

        r0 := @parameter0: android.content.res.XmlBlock;

        specialinvoke r0.<android.content.res.XmlBlock: void decOpenCountLocked()>();

        return;
    }

    static int access$200(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetLineNumber(int)>(i0);

        return $i1;
    }

    static int access$300(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetNamespace(int)>(i0);

        return $i1;
    }

    static int access$400(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeNamespace(int,int)>(i0, i1);

        return $i2;
    }

    static int access$500(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeName(int,int)>(i0, i1);

        return $i2;
    }

    static int access$600(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeCount(int)>(i0);

        return $i1;
    }

    static int access$700(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeStringValue(int,int)>(i0, i1);

        return $i2;
    }

    static int access$800(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeDataType(int,int)>(i0, i1);

        return $i2;
    }

    static int access$900(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeGetAttributeData(int,int)>(i0, i1);

        return $i2;
    }

    private void decOpenCountLocked()
    {
        android.content.res.XmlBlock r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.res.AssetManager $r1, $r2;

        r0 := @this: android.content.res.XmlBlock;

        $i0 = r0.<android.content.res.XmlBlock: int mOpenCount>;

        $i1 = -1 + $i0;

        r0.<android.content.res.XmlBlock: int mOpenCount> = $i1;

        $i2 = r0.<android.content.res.XmlBlock: int mOpenCount>;

        if $i2 != 0 goto label1;

        $i3 = r0.<android.content.res.XmlBlock: int mNative>;

        staticinvoke <android.content.res.XmlBlock: void nativeDestroy(int)>($i3);

        $r1 = r0.<android.content.res.XmlBlock: android.content.res.AssetManager mAssets>;

        if $r1 == null goto label1;

        $r2 = r0.<android.content.res.XmlBlock: android.content.res.AssetManager mAssets>;

        $i4 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        virtualinvoke $r2.<android.content.res.AssetManager: void xmlBlockGone(int)>($i4);

     label1:
        return;
    }

    private static final native int nativeCreate(byte[], int, int);

    private static final native int nativeCreateParseState(int);

    private static final native void nativeDestroy(int);

    private static final native void nativeDestroyParseState(int);

    private static final native int nativeGetAttributeCount(int);

    private static final native int nativeGetAttributeData(int, int);

    private static final native int nativeGetAttributeDataType(int, int);

    private static final native int nativeGetAttributeIndex(int, java.lang.String, java.lang.String);

    private static final native int nativeGetAttributeName(int, int);

    private static final native int nativeGetAttributeNamespace(int, int);

    private static final native int nativeGetAttributeResource(int, int);

    private static final native int nativeGetAttributeStringValue(int, int);

    private static final native int nativeGetClassAttribute(int);

    private static final native int nativeGetIdAttribute(int);

    private static final native int nativeGetLineNumber(int);

    static final native int nativeGetName(int);

    private static final native int nativeGetNamespace(int);

    private static final native int nativeGetStringBlock(int);

    private static final native int nativeGetStyleAttribute(int);

    private static final native int nativeGetText(int);

    static final native int nativeNext(int);

    public void close()
    {
        android.content.res.XmlBlock r0;
        java.lang.Throwable r1, $r2;
        boolean $z0;

        r0 := @this: android.content.res.XmlBlock;

        entermonitor r0;

     label1:
        $z0 = r0.<android.content.res.XmlBlock: boolean mOpen>;

        if $z0 == 0 goto label2;

        r0.<android.content.res.XmlBlock: boolean mOpen> = 0;

        specialinvoke r0.<android.content.res.XmlBlock: void decOpenCountLocked()>();

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        r1 = $r2;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.res.XmlBlock r0;

        r0 := @this: android.content.res.XmlBlock;

        virtualinvoke r0.<android.content.res.XmlBlock: void close()>();

        return;
    }

    public android.content.res.XmlResourceParser newParser()
    {
        android.content.res.XmlBlock r0;
        java.lang.Throwable r1, $r4;
        android.content.res.XmlBlock$Parser r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: android.content.res.XmlBlock;

        entermonitor r0;

     label1:
        $i0 = r0.<android.content.res.XmlBlock: int mNative>;

        if $i0 == 0 goto label3;

        $r3 = new android.content.res.XmlBlock$Parser;

        $i1 = r0.<android.content.res.XmlBlock: int mNative>;

        $i2 = staticinvoke <android.content.res.XmlBlock: int nativeCreateParseState(int)>($i1);

        specialinvoke $r3.<android.content.res.XmlBlock$Parser: void <init>(android.content.res.XmlBlock,int,android.content.res.XmlBlock)>(r0, $i2, r0);

        r2 = $r3;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        exitmonitor r0;

     label4:
        return null;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

     label6:
        exitmonitor r0;

     label7:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
