public class android.filterpacks.imageproc.DrawRectFilter extends android.filterfw.core.Filter
{
    private float mColorBlue;
    private float mColorGreen;
    private float mColorRed;
    private final java.lang.String mFixedColorFragmentShader;
    private android.filterfw.core.ShaderProgram mProgram;
    private final java.lang.String mVertexShader;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.DrawRectFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.DrawRectFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.DrawRectFilter: float mColorRed> = 0.8F;

        r0.<android.filterpacks.imageproc.DrawRectFilter: float mColorGreen> = 0.8F;

        r0.<android.filterpacks.imageproc.DrawRectFilter: float mColorBlue> = 0.0F;

        r0.<android.filterpacks.imageproc.DrawRectFilter: java.lang.String mVertexShader> = "attribute vec4 aPosition;\nvoid main() {\n  gl_Position = aPosition;\n}\n";

        r0.<android.filterpacks.imageproc.DrawRectFilter: java.lang.String mFixedColorFragmentShader> = "precision mediump float;\nuniform vec4 color;\nvoid main() {\n  gl_FragColor = color;\n}\n";

        return;
    }

    private void renderBox(android.filterfw.geometry.Quad)
    {
        android.filterpacks.imageproc.DrawRectFilter r0;
        android.filterfw.geometry.Quad r1;
        float[] r2, r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.filterfw.geometry.Point $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        android.filterfw.core.ShaderProgram $r12, $r13, $r14, $r15;

        r0 := @this: android.filterpacks.imageproc.DrawRectFilter;

        r1 := @parameter0: android.filterfw.geometry.Quad;

        r2 = newarray (float)[4];

        $f0 = r0.<android.filterpacks.imageproc.DrawRectFilter: float mColorRed>;

        r2[0] = $f0;

        $f1 = r0.<android.filterpacks.imageproc.DrawRectFilter: float mColorGreen>;

        r2[1] = $f1;

        $f2 = r0.<android.filterpacks.imageproc.DrawRectFilter: float mColorBlue>;

        r2[2] = $f2;

        r2[3] = 1.0F;

        r3 = newarray (float)[8];

        $r4 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f3 = $r4.<android.filterfw.geometry.Point: float x>;

        r3[0] = $f3;

        $r5 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p0>;

        $f4 = $r5.<android.filterfw.geometry.Point: float y>;

        r3[1] = $f4;

        $r6 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f5 = $r6.<android.filterfw.geometry.Point: float x>;

        r3[2] = $f5;

        $r7 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p1>;

        $f6 = $r7.<android.filterfw.geometry.Point: float y>;

        r3[3] = $f6;

        $r8 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f7 = $r8.<android.filterfw.geometry.Point: float x>;

        r3[4] = $f7;

        $r9 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p3>;

        $f8 = $r9.<android.filterfw.geometry.Point: float y>;

        r3[5] = $f8;

        $r10 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f9 = $r10.<android.filterfw.geometry.Point: float x>;

        r3[6] = $f9;

        $r11 = r1.<android.filterfw.geometry.Quad: android.filterfw.geometry.Point p2>;

        $f10 = $r11.<android.filterfw.geometry.Point: float y>;

        r3[7] = $f10;

        $r12 = r0.<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r12.<android.filterfw.core.ShaderProgram: void setHostValue(java.lang.String,java.lang.Object)>("color", r2);

        $r14 = r0.<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r14.<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,float[],int)>("aPosition", r3, 2);

        $r13 = r0.<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r13.<android.filterfw.core.ShaderProgram: void setVertexCount(int)>(4);

        $r15 = r0.<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.ShaderProgram mProgram>;

        virtualinvoke $r15.<android.filterfw.core.ShaderProgram: void beginDrawing()>();

        staticinvoke <android.opengl.GLES20: void glLineWidth(float)>(1.0F);

        staticinvoke <android.opengl.GLES20: void glDrawArrays(int,int,int)>(2, 0, 4);

        return;
    }

    public android.filterfw.core.FrameFormat getOutputFormat(java.lang.String, android.filterfw.core.FrameFormat)
    {
        android.filterpacks.imageproc.DrawRectFilter r0;
        java.lang.String r1;
        android.filterfw.core.FrameFormat r2;

        r0 := @this: android.filterpacks.imageproc.DrawRectFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FrameFormat;

        return r2;
    }

    public void prepare(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.DrawRectFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.ShaderProgram $r2;

        r0 := @this: android.filterpacks.imageproc.DrawRectFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = new android.filterfw.core.ShaderProgram;

        specialinvoke $r2.<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String,java.lang.String)>(r1, "attribute vec4 aPosition;\nvoid main() {\n  gl_Position = aPosition;\n}\n", "precision mediump float;\nuniform vec4 color;\nvoid main() {\n  gl_FragColor = color;\n}\n");

        r0.<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.ShaderProgram mProgram> = $r2;

        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.DrawRectFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2, $r5, $r10;
        android.filterfw.geometry.Quad r3, $r7, $r8;
        android.filterfw.core.GLFrame r4;
        java.lang.Object $r6;
        android.filterfw.core.FrameManager $r9;

        r0 := @this: android.filterpacks.imageproc.DrawRectFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        $r5 = virtualinvoke r0.<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("box");

        $r6 = virtualinvoke $r5.<android.filterfw.core.Frame: java.lang.Object getObjectValue()>();

        $r7 = (android.filterfw.geometry.Quad) $r6;

        $r8 = virtualinvoke $r7.<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad scaled(float)>(2.0F);

        r3 = virtualinvoke $r8.<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad translated(float,float)>(-1.0F, -1.0F);

        $r9 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r10 = virtualinvoke $r9.<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrame(android.filterfw.core.Frame)>(r2);

        r4 = (android.filterfw.core.GLFrame) $r10;

        virtualinvoke r4.<android.filterfw.core.GLFrame: void focus()>();

        specialinvoke r0.<android.filterpacks.imageproc.DrawRectFilter: void renderBox(android.filterfw.geometry.Quad)>(r3);

        virtualinvoke r0.<android.filterpacks.imageproc.DrawRectFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r4);

        virtualinvoke r4.<android.filterfw.core.GLFrame: android.filterfw.core.Frame release()>();

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.DrawRectFilter r0;
        android.filterfw.core.MutableFrameFormat $r1, $r2;

        r0 := @this: android.filterpacks.imageproc.DrawRectFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>(3, 3);

        virtualinvoke r0.<android.filterpacks.imageproc.DrawRectFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        $r2 = staticinvoke <android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int)>(class "android/filterfw/geometry/Quad", 1);

        virtualinvoke r0.<android.filterpacks.imageproc.DrawRectFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("box", $r2);

        virtualinvoke r0.<android.filterpacks.imageproc.DrawRectFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }
}
