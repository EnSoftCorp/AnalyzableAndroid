public final class android.os.SystemClock extends java.lang.Object
{

    private void <init>()
    {
        android.os.SystemClock r0;

        r0 := @this: android.os.SystemClock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static native long currentThreadTimeMicro();

    public static native long currentThreadTimeMillis();

    public static native long currentTimeMicro();

    public static native long elapsedRealtime();

    public static native long elapsedRealtimeNanos();

    public static native boolean setCurrentTimeMillis(long);

    public static void sleep(long)
    {
        long l0, l1, l2, $l3, $l4;
        boolean z0;
        byte $b5;
        java.lang.Thread $r1;
        java.lang.InterruptedException $r2;

        l0 := @parameter0: long;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l2 = l0;

        z0 = 0;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(l2);

     label2:
        $l3 = l1 + l0;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l2 = $l3 - $l4;

        $b5 = l2 cmp 0L;

        if $b5 > 0 goto label1;

        if z0 == 0 goto label3;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r1.<java.lang.Thread: void interrupt()>();

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        z0 = 1;

        goto label2;

        catch java.lang.InterruptedException from label1 to label2 with label4;
    }

    public static native long uptimeMillis();
}
