public final class android.provider.CalendarContract$CalendarAlerts extends java.lang.Object implements android.provider.BaseColumns, android.provider.CalendarContract$CalendarAlertsColumns, android.provider.CalendarContract$EventsColumns, android.provider.CalendarContract$CalendarColumns
{
    public static final android.net.Uri CONTENT_URI;
    public static final android.net.Uri CONTENT_URI_BY_INSTANCE;
    private static final boolean DEBUG;
    private static final java.lang.String SORT_ORDER_ALARMTIME_ASC;
    public static final java.lang.String TABLE_NAME;
    private static final java.lang.String WHERE_ALARM_EXISTS;
    private static final java.lang.String WHERE_FINDNEXTALARMTIME;
    private static final java.lang.String WHERE_RESCHEDULE_MISSED_ALARMS;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1;

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String WHERE_RESCHEDULE_MISSED_ALARMS> = "state=0 AND alarmTime<? AND alarmTime>? AND end>=?";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String WHERE_FINDNEXTALARMTIME> = "alarmTime>=?";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String WHERE_ALARM_EXISTS> = "event_id=? AND begin=? AND alarmTime=?";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String TABLE_NAME> = "CalendarAlerts";

        <android.provider.CalendarContract$CalendarAlerts: java.lang.String SORT_ORDER_ALARMTIME_ASC> = "alarmTime ASC";

        <android.provider.CalendarContract$CalendarAlerts: boolean DEBUG> = 0;

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/calendar_alerts");

        <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI> = $r0;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.calendar/calendar_alerts/by_instance");

        <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI_BY_INSTANCE> = $r1;

        return;
    }

    private void <init>()
    {
        android.provider.CalendarContract$CalendarAlerts r0;

        r0 := @this: android.provider.CalendarContract$CalendarAlerts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final boolean alarmExists(android.content.ContentResolver, long, long, long)
    {
        android.content.ContentResolver r0;
        long l0, l1, l2;
        java.lang.String[] r1, r3, $r6;
        android.net.Uri r2;
        android.database.Cursor r4;
        boolean z0;
        java.lang.Throwable r5, $r10;
        int i3;
        java.lang.String $r7, $r8, $r9;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "alarmTime";

        r1 = $r6;

        r2 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        r3 = newarray (java.lang.String)[3];

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r3[0] = $r7;

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        r3[1] = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        r3[2] = $r9;

        r4 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, r1, "event_id=? AND begin=? AND alarmTime=?", r3, null);

        z0 = 0;

        if r4 == null goto label3;

     label1:
        i3 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

     label2:
        z0 = 0;

        if i3 <= 0 goto label3;

        z0 = 1;

     label3:
        if r4 == null goto label4;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label4:
        return z0;

     label5:
        $r10 := @caughtexception;

        r5 = $r10;

        if r4 == null goto label6;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public static final long findNextAlarmTime(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0, l1, l2;
        java.lang.String[] r1, r3, $r9;
        android.net.Uri r2;
        android.database.Cursor r4;
        java.lang.Throwable r5, $r12;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r11;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("alarmTime>=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "alarmTime";

        r1 = $r9;

        r2 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        r3 = newarray (java.lang.String)[1];

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r3[0] = $r11;

        r4 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, r1, "alarmTime>=?", r3, "alarmTime ASC");

        l1 = -1L;

        if r4 == null goto label3;

     label1:
        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        l2 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(0);

     label2:
        l1 = l2;

     label3:
        if r4 == null goto label4;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label4:
        return l1;

     label5:
        $r12 := @caughtexception;

        r5 = $r12;

        if r4 == null goto label6;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public static final android.net.Uri insert(android.content.ContentResolver, long, long, long, long, int)
    {
        android.content.ContentResolver r0;
        long l0, l1, l2, l3, $l5;
        android.net.Uri $r1, $r12;
        int i4;
        android.content.ContentValues r2, $r3;
        java.lang.Long $r4, $r5, $r6, $r7, $r8;
        java.lang.Integer $r9, $r10, $r11, $r13;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        i4 := @parameter5: int;

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        r2 = $r3;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("event_id", $r4);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("begin", $r5);

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("end", $r6);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("alarmTime", $r7);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("creationTime", $r8);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("receivedTime", $r9);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("notifyTime", $r10);

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("state", $r11);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("minutes", $r13);

        $r12 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        $r1 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r12, r2);

        return $r1;
    }

    public static final void rescheduleMissedAlarms(android.content.ContentResolver, android.content.Context, android.app.AlarmManager)
    {
        android.content.ContentResolver r0;
        android.content.Context r1;
        android.app.AlarmManager r2;
        long l0, l1, l2, l3;
        java.lang.String[] r3, r5, $r8;
        android.net.Uri r4;
        android.database.Cursor r6;
        java.lang.Throwable r7, $r12;
        java.lang.String $r9, $r10, $r11;
        boolean $z0;
        byte $b4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.app.AlarmManager;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = l0 - 86400000L;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "alarmTime";

        r3 = $r8;

        r4 = <android.provider.CalendarContract$CalendarAlerts: android.net.Uri CONTENT_URI>;

        r5 = newarray (java.lang.String)[3];

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r5[0] = $r9;

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        r5[1] = $r10;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r5[2] = $r11;

        r6 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r4, r3, "state=0 AND alarmTime<? AND alarmTime>? AND end>=?", r5, "alarmTime ASC");

        if r6 != null goto label1;

        return;

     label1:
        l2 = -1L;

     label2:
        $z0 = interfaceinvoke r6.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label6;

        l3 = interfaceinvoke r6.<android.database.Cursor: long getLong(int)>(0);

     label3:
        $b4 = l2 cmp l3;

        if $b4 == 0 goto label2;

     label4:
        staticinvoke <android.provider.CalendarContract$CalendarAlerts: void scheduleAlarm(android.content.Context,android.app.AlarmManager,long)>(r1, r2, l3);

     label5:
        l2 = l3;

        goto label2;

     label6:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

        return;

     label7:
        $r12 := @caughtexception;

        r7 = $r12;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

        throw r7;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public static void scheduleAlarm(android.content.Context, android.app.AlarmManager, long)
    {
        android.content.Context r0;
        android.app.AlarmManager r1;
        long l0;
        android.content.Intent r2, $r3;
        android.net.Uri $r4, $r5;
        android.app.PendingIntent $r8;
        java.lang.Object $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.app.AlarmManager;

        l0 := @parameter2: long;

        if r1 != null goto label1;

        $r9 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r1 = (android.app.AlarmManager) $r9;

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.EVENT_REMINDER");

        r2 = $r3;

        $r4 = <android.provider.CalendarContract: android.net.Uri CONTENT_URI>;

        $r5 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r4, l0);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r5);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("alarmTime", l0);

        $r8 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r0, 0, r2, 0);

        virtualinvoke r1.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(0, l0, $r8);

        return;
    }
}
