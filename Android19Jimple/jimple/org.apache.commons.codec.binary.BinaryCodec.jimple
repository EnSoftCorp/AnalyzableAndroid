public class org.apache.commons.codec.binary.BinaryCodec extends java.lang.Object implements org.apache.commons.codec.BinaryDecoder, org.apache.commons.codec.BinaryEncoder
{
    private static final int[] BITS;
    private static final int BIT_0;
    private static final int BIT_1;
    private static final int BIT_2;
    private static final int BIT_3;
    private static final int BIT_4;
    private static final int BIT_5;
    private static final int BIT_6;
    private static final int BIT_7;
    private static final byte[] EMPTY_BYTE_ARRAY;
    private static final char[] EMPTY_CHAR_ARRAY;

    static void <clinit>()
    {
        char[] $r0;
        byte[] $r1;
        int[] $r2;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_7> = 128;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_6> = 64;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_5> = 32;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_4> = 16;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_3> = 8;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_2> = 4;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_1> = 2;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_0> = 1;

        $r0 = newarray (char)[0];

        <org.apache.commons.codec.binary.BinaryCodec: char[] EMPTY_CHAR_ARRAY> = $r0;

        $r1 = newarray (byte)[0];

        <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY> = $r1;

        $r2 = newarray (int)[8];

        $r2[0] = 1;

        $r2[1] = 2;

        $r2[2] = 4;

        $r2[3] = 8;

        $r2[4] = 16;

        $r2[5] = 32;

        $r2[6] = 64;

        $r2[7] = 128;

        <org.apache.commons.codec.binary.BinaryCodec: int[] BITS> = $r2;

        return;
    }

    public void <init>()
    {
        org.apache.commons.codec.binary.BinaryCodec r0;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] fromAscii(byte[])
    {
        byte[] r0, r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12;
        int[] $r2, $r3;
        byte $b10, $b13, $b14;

        r0 := @parameter0: byte[];

        if r0 == null goto label1;

        $i3 = lengthof r0;

        if $i3 != 0 goto label3;

     label1:
        r1 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

     label2:
        return r1;

     label3:
        $i4 = lengthof r0;

        $i5 = $i4 >> 3;

        r1 = newarray (byte)[$i5];

        i0 = 0;

        $i6 = lengthof r0;

        i1 = -1 + $i6;

     label4:
        $i7 = lengthof r1;

        if i0 >= $i7 goto label2;

        i2 = 0;

     label5:
        $r2 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i8 = lengthof $r2;

        if i2 >= $i8 goto label7;

        $i9 = i1 - i2;

        $b10 = r0[$i9];

        if $b10 != 49 goto label6;

        $b13 = r1[i0];

        $r3 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i11 = $r3[i2];

        $i12 = $b13 | $i11;

        $b14 = (byte) $i12;

        r1[i0] = $b14;

     label6:
        i2 = i2 + 1;

        goto label5;

     label7:
        i0 = i0 + 1;

        i1 = i1 + -8;

        goto label4;
    }

    public static byte[] fromAscii(char[])
    {
        char[] r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12;
        int[] $r2, $r3;
        char $c10;
        byte $b13, $b14;

        r0 := @parameter0: char[];

        if r0 == null goto label1;

        $i3 = lengthof r0;

        if $i3 != 0 goto label3;

     label1:
        r1 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

     label2:
        return r1;

     label3:
        $i4 = lengthof r0;

        $i5 = $i4 >> 3;

        r1 = newarray (byte)[$i5];

        i0 = 0;

        $i6 = lengthof r0;

        i1 = -1 + $i6;

     label4:
        $i7 = lengthof r1;

        if i0 >= $i7 goto label2;

        i2 = 0;

     label5:
        $r2 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i8 = lengthof $r2;

        if i2 >= $i8 goto label7;

        $i9 = i1 - i2;

        $c10 = r0[$i9];

        if $c10 != 49 goto label6;

        $b13 = r1[i0];

        $r3 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i11 = $r3[i2];

        $i12 = $b13 | $i11;

        $b14 = (byte) $i12;

        r1[i0] = $b14;

     label6:
        i2 = i2 + 1;

        goto label5;

     label7:
        i0 = i0 + 1;

        i1 = i1 + -8;

        goto label4;
    }

    public static byte[] toAsciiBytes(byte[])
    {
        byte[] r0, r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13;
        int[] $r2, $r3;
        byte $b10;

        r0 := @parameter0: byte[];

        if r0 == null goto label1;

        $i3 = lengthof r0;

        if $i3 != 0 goto label3;

     label1:
        r1 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

     label2:
        return r1;

     label3:
        $i4 = lengthof r0;

        $i5 = $i4 << 3;

        r1 = newarray (byte)[$i5];

        i0 = 0;

        $i6 = lengthof r1;

        i1 = -1 + $i6;

     label4:
        $i7 = lengthof r0;

        if i0 >= $i7 goto label2;

        i2 = 0;

     label5:
        $r2 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i8 = lengthof $r2;

        if i2 >= $i8 goto label8;

        $b10 = r0[i0];

        $r3 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i9 = $r3[i2];

        $i11 = $b10 & $i9;

        if $i11 != 0 goto label7;

        $i12 = i1 - i2;

        r1[$i12] = 48;

     label6:
        i2 = i2 + 1;

        goto label5;

     label7:
        $i13 = i1 - i2;

        r1[$i13] = 49;

        goto label6;

     label8:
        i0 = i0 + 1;

        i1 = i1 + -8;

        goto label4;
    }

    public static char[] toAsciiChars(byte[])
    {
        byte[] r0;
        char[] r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13;
        int[] $r2, $r3;
        byte $b10;

        r0 := @parameter0: byte[];

        if r0 == null goto label1;

        $i3 = lengthof r0;

        if $i3 != 0 goto label3;

     label1:
        r1 = <org.apache.commons.codec.binary.BinaryCodec: char[] EMPTY_CHAR_ARRAY>;

     label2:
        return r1;

     label3:
        $i4 = lengthof r0;

        $i5 = $i4 << 3;

        r1 = newarray (char)[$i5];

        i0 = 0;

        $i6 = lengthof r1;

        i1 = -1 + $i6;

     label4:
        $i7 = lengthof r0;

        if i0 >= $i7 goto label2;

        i2 = 0;

     label5:
        $r2 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i8 = lengthof $r2;

        if i2 >= $i8 goto label8;

        $b10 = r0[i0];

        $r3 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i9 = $r3[i2];

        $i11 = $b10 & $i9;

        if $i11 != 0 goto label7;

        $i12 = i1 - i2;

        r1[$i12] = 48;

     label6:
        i2 = i2 + 1;

        goto label5;

     label7:
        $i13 = i1 - i2;

        r1[$i13] = 49;

        goto label6;

     label8:
        i0 = i0 + 1;

        i1 = i1 + -8;

        goto label4;
    }

    public static java.lang.String toAsciiString(byte[])
    {
        byte[] r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @parameter0: byte[];

        $r1 = new java.lang.String;

        $r2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r0);

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        return $r1;
    }

    public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.apache.commons.codec.DecoderException $r2;
        java.lang.String $r3;
        char[] $r4, $r6, $r7;
        byte[] $r5, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r12 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

        return $r12;

     label1:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label2;

        $r9 = (byte[]) r1;

        $r10 = (byte[]) $r9;

        $r11 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r10);

        return $r11;

     label2:
        $z1 = r1 instanceof char[];

        if $z1 == 0 goto label3;

        $r6 = (char[]) r1;

        $r7 = (char[]) $r6;

        $r8 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r7);

        return $r8;

     label3:
        $z2 = r1 instanceof java.lang.String;

        if $z2 == 0 goto label4;

        $r3 = (java.lang.String) r1;

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        $r5 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r4);

        return $r5;

     label4:
        $r2 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r2.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("argument not a byte array");

        throw $r2;
    }

    public byte[] decode(byte[])
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        byte[] r1, $r2;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>(r1);

        return $r2;
    }

    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        java.lang.Object r1;
        boolean $z0;
        byte[] $r2, $r3;
        char[] $r4;
        org.apache.commons.codec.EncoderException $r5;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof byte[];

        if $z0 != 0 goto label1;

        $r5 = new org.apache.commons.codec.EncoderException;

        specialinvoke $r5.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>("argument not a byte array");

        throw $r5;

     label1:
        $r2 = (byte[]) r1;

        $r3 = (byte[]) $r2;

        $r4 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>($r3);

        return $r4;
    }

    public byte[] encode(byte[])
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        byte[] r1, $r2;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r1);

        return $r2;
    }

    public byte[] toByteArray(java.lang.String)
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        java.lang.String r1;
        char[] $r2;
        byte[] $r3, $r4;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

        return $r4;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        $r3 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r2);

        return $r3;
    }
}
