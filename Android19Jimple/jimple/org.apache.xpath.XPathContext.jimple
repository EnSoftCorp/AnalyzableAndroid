public class org.apache.xpath.XPathContext extends org.apache.xml.dtm.DTMManager
{
    public static final int RECURSIONLIMIT;
    org.apache.xpath.XPathContext$XPathExpressionContext expressionContext;
    private java.util.HashMap m_DTMXRTreeFrags;
    private java.util.Stack m_axesIteratorStack;
    private java.util.Stack m_contextNodeLists;
    private org.apache.xml.utils.IntStack m_currentExpressionNodes;
    private org.apache.xml.utils.IntStack m_currentNodes;
    private javax.xml.transform.ErrorListener m_defaultErrorListener;
    protected org.apache.xml.dtm.DTMManager m_dtmManager;
    private javax.xml.transform.ErrorListener m_errorListener;
    private org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM m_global_rtfdtm;
    private boolean m_isSecureProcessing;
    private org.apache.xml.utils.NodeVector m_iteratorRoots;
    org.apache.xml.utils.IntStack m_last_pushed_rtfdtm;
    private java.lang.Object m_owner;
    private java.lang.reflect.Method m_ownerGetErrorListener;
    private org.apache.xml.utils.IntStack m_predicatePos;
    private org.apache.xml.utils.NodeVector m_predicateRoots;
    private org.apache.xml.utils.ObjectStack m_prefixResolvers;
    public org.xml.sax.XMLReader m_primaryReader;
    private java.util.Vector m_rtfdtm_stack;
    org.apache.xml.utils.ObjectStack m_saxLocations;
    private org.apache.xpath.SourceTreeManager m_sourceTreeManager;
    private javax.xml.transform.URIResolver m_uriResolver;
    private org.apache.xpath.VariableStack m_variableStacks;
    private int m_which_rtfdtm;

    public void <init>()
    {
        org.apache.xpath.XPathContext r0;

        r0 := @this: org.apache.xpath.XPathContext;

        specialinvoke r0.<org.apache.xpath.XPathContext: void <init>(boolean)>(1);

        return;
    }

    public void <init>(java.lang.Object)
    {
        org.apache.xpath.XPathContext r0;
        java.lang.Object r1;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<org.apache.xpath.XPathContext: void <init>(java.lang.Object,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.lang.Object, boolean)
    {
        org.apache.xpath.XPathContext r0;
        java.lang.Object r1, $r3;
        boolean z0;
        java.lang.Class $r4;
        java.lang.Class[] $r5;
        java.lang.reflect.Method $r6;
        java.lang.NoSuchMethodException $r7;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xpath.XPathContext: void <init>(boolean)>(z0);

        r0.<org.apache.xpath.XPathContext: java.lang.Object m_owner> = r1;

     label1:
        $r3 = r0.<org.apache.xpath.XPathContext: java.lang.Object m_owner>;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = newarray (java.lang.Class)[0];

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getErrorListener", $r5);

        r0.<org.apache.xpath.XPathContext: java.lang.reflect.Method m_ownerGetErrorListener> = $r6;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    public void <init>(boolean)
    {
        org.apache.xpath.XPathContext r0;
        boolean z0;
        org.apache.xpath.VariableStack r1, $r21, $r23;
        org.apache.xml.utils.IntStack $r2, $r8, $r11, $r12, $r17, $r19;
        org.apache.xml.utils.XMLStringFactory $r3;
        org.apache.xml.dtm.DTMManager $r4;
        org.apache.xml.utils.ObjectStack $r5, $r14, $r15, $r20;
        org.apache.xpath.SourceTreeManager $r6;
        java.util.Stack $r7, $r13;
        org.apache.xml.utils.NodeVector $r9, $r10;
        org.apache.xpath.XPathContext$XPathExpressionContext $r16;

        r0 := @this: org.apache.xpath.XPathContext;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.apache.xml.dtm.DTMManager: void <init>()>();

        $r2 = new org.apache.xml.utils.IntStack;

        specialinvoke $r2.<org.apache.xml.utils.IntStack: void <init>()>();

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_last_pushed_rtfdtm> = $r2;

        r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack> = null;

        r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm> = -1;

        r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM m_global_rtfdtm> = null;

        r0.<org.apache.xpath.XPathContext: java.util.HashMap m_DTMXRTreeFrags> = null;

        r0.<org.apache.xpath.XPathContext: boolean m_isSecureProcessing> = 0;

        $r3 = staticinvoke <org.apache.xpath.objects.XMLStringFactoryImpl: org.apache.xml.utils.XMLStringFactory getFactory()>();

        $r4 = staticinvoke <org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTMManager newInstance(org.apache.xml.utils.XMLStringFactory)>($r3);

        r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager> = $r4;

        $r5 = new org.apache.xml.utils.ObjectStack;

        specialinvoke $r5.<org.apache.xml.utils.ObjectStack: void <init>(int)>(4096);

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_saxLocations> = $r5;

        $r6 = new org.apache.xpath.SourceTreeManager;

        specialinvoke $r6.<org.apache.xpath.SourceTreeManager: void <init>()>();

        r0.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager m_sourceTreeManager> = $r6;

        $r7 = new java.util.Stack;

        specialinvoke $r7.<java.util.Stack: void <init>()>();

        r0.<org.apache.xpath.XPathContext: java.util.Stack m_contextNodeLists> = $r7;

        $r8 = new org.apache.xml.utils.IntStack;

        specialinvoke $r8.<org.apache.xml.utils.IntStack: void <init>(int)>(4096);

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes> = $r8;

        $r9 = new org.apache.xml.utils.NodeVector;

        specialinvoke $r9.<org.apache.xml.utils.NodeVector: void <init>()>();

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_iteratorRoots> = $r9;

        $r10 = new org.apache.xml.utils.NodeVector;

        specialinvoke $r10.<org.apache.xml.utils.NodeVector: void <init>()>();

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_predicateRoots> = $r10;

        $r12 = new org.apache.xml.utils.IntStack;

        specialinvoke $r12.<org.apache.xml.utils.IntStack: void <init>(int)>(4096);

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes> = $r12;

        $r11 = new org.apache.xml.utils.IntStack;

        specialinvoke $r11.<org.apache.xml.utils.IntStack: void <init>()>();

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_predicatePos> = $r11;

        $r14 = new org.apache.xml.utils.ObjectStack;

        specialinvoke $r14.<org.apache.xml.utils.ObjectStack: void <init>(int)>(4096);

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers> = $r14;

        $r13 = new java.util.Stack;

        specialinvoke $r13.<java.util.Stack: void <init>()>();

        r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack> = $r13;

        $r16 = new org.apache.xpath.XPathContext$XPathExpressionContext;

        specialinvoke $r16.<org.apache.xpath.XPathContext$XPathExpressionContext: void <init>(org.apache.xpath.XPathContext)>(r0);

        r0.<org.apache.xpath.XPathContext: org.apache.xpath.XPathContext$XPathExpressionContext expressionContext> = $r16;

        $r15 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        virtualinvoke $r15.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(null);

        $r17 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        virtualinvoke $r17.<org.apache.xml.utils.IntStack: int push(int)>(-1);

        $r19 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        virtualinvoke $r19.<org.apache.xml.utils.IntStack: int push(int)>(-1);

        $r20 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_saxLocations>;

        virtualinvoke $r20.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(null);

        if z0 == 0 goto label2;

        $r23 = new org.apache.xpath.VariableStack;

        specialinvoke $r23.<org.apache.xpath.VariableStack: void <init>()>();

        r1 = $r23;

     label1:
        r0.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack m_variableStacks> = r1;

        return;

     label2:
        $r21 = new org.apache.xpath.VariableStack;

        specialinvoke $r21.<org.apache.xpath.VariableStack: void <init>(int)>(1);

        r1 = $r21;

        goto label1;
    }

    static org.apache.xpath.VariableStack access$000(org.apache.xpath.XPathContext)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xpath.VariableStack $r1;

        r0 := @parameter0: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack m_variableStacks>;

        return $r1;
    }

    private void assertion(boolean, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.XPathContext r0;
        boolean z0;
        java.lang.String r1, $r5;
        javax.xml.transform.ErrorListener r2;
        javax.xml.transform.TransformerException $r3;
        java.lang.Object[] $r4;
        javax.xml.transform.SourceLocator $r6;
        org.apache.xml.utils.SAXSourceLocator $r7;

        r0 := @this: org.apache.xpath.XPathContext;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        if z0 != 0 goto label1;

        r2 = virtualinvoke r0.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener getErrorListener()>();

        if r2 == null goto label1;

        $r3 = new javax.xml.transform.TransformerException;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        $r5 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_INCORRECT_PROGRAMMER_ASSERTION", $r4);

        $r6 = virtualinvoke r0.<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()>();

        $r7 = (org.apache.xml.utils.SAXSourceLocator) $r6;

        specialinvoke $r3.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r5, $r7);

        interfaceinvoke r2.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r3);

     label1:
        return;
    }

    private final void releaseDTMXRTreeFrags()
    {
        org.apache.xpath.XPathContext r0;
        java.util.Iterator r1;
        java.util.HashMap $r2, $r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;
        org.apache.xpath.objects.DTMXRTreeFrag $r6;

        r0 := @this: org.apache.xpath.XPathContext;

        $r2 = r0.<org.apache.xpath.XPathContext: java.util.HashMap m_DTMXRTreeFrags>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<org.apache.xpath.XPathContext: java.util.HashMap m_DTMXRTreeFrags>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.apache.xpath.objects.DTMXRTreeFrag) $r5;

        virtualinvoke $r6.<org.apache.xpath.objects.DTMXRTreeFrag: void destruct()>();

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        goto label2;

     label3:
        r0.<org.apache.xpath.XPathContext: java.util.HashMap m_DTMXRTreeFrags> = null;

        return;
    }

    public org.apache.xml.dtm.DTMIterator createDTMIterator(int)
    {
        org.apache.xpath.XPathContext r0;
        int i0;
        org.apache.xpath.axes.OneStepIteratorForward r1, $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        $r2 = new org.apache.xpath.axes.OneStepIteratorForward;

        specialinvoke $r2.<org.apache.xpath.axes.OneStepIteratorForward: void <init>(int)>(13);

        r1 = $r2;

        interfaceinvoke r1.<org.apache.xml.dtm.DTMIterator: void setRoot(int,java.lang.Object)>(i0, r0);

        return r1;
    }

    public org.apache.xml.dtm.DTMIterator createDTMIterator(int, org.apache.xml.dtm.DTMFilter, boolean)
    {
        org.apache.xpath.XPathContext r0;
        int i0;
        org.apache.xml.dtm.DTMFilter r1;
        boolean z0;
        org.apache.xml.dtm.DTMManager $r2;
        org.apache.xml.dtm.DTMIterator $r3;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xml.dtm.DTMFilter;

        z0 := @parameter2: boolean;

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r3 = virtualinvoke $r2.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTMIterator createDTMIterator(int,org.apache.xml.dtm.DTMFilter,boolean)>(i0, r1, z0);

        return $r3;
    }

    public org.apache.xml.dtm.DTMIterator createDTMIterator(java.lang.Object, int)
    {
        org.apache.xpath.XPathContext r0;
        java.lang.Object r1;
        int i0;
        org.apache.xml.dtm.DTMManager $r2;
        org.apache.xml.dtm.DTMIterator $r3;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r3 = virtualinvoke $r2.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTMIterator createDTMIterator(java.lang.Object,int)>(r1, i0);

        return $r3;
    }

    public org.apache.xml.dtm.DTMIterator createDTMIterator(java.lang.String, org.apache.xml.utils.PrefixResolver)
    {
        org.apache.xpath.XPathContext r0;
        java.lang.String r1;
        org.apache.xml.utils.PrefixResolver r2;
        org.apache.xml.dtm.DTMManager $r3;
        org.apache.xml.dtm.DTMIterator $r4;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.xml.utils.PrefixResolver;

        $r3 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r4 = virtualinvoke $r3.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTMIterator createDTMIterator(java.lang.String,org.apache.xml.utils.PrefixResolver)>(r1, r2);

        return $r4;
    }

    public org.apache.xml.dtm.DTM createDocumentFragment()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.dtm.DTMManager $r1;
        org.apache.xml.dtm.DTM $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r2 = virtualinvoke $r1.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM createDocumentFragment()>();

        return $r2;
    }

    public java.util.Stack getAxesIteratorStackStacks()
    {
        org.apache.xpath.XPathContext r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack>;

        return $r1;
    }

    public final int getContextNode()
    {
        org.apache.xpath.XPathContext r0;
        int $i0;

        r0 := @this: org.apache.xpath.XPathContext;

        $i0 = virtualinvoke r0.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        return $i0;
    }

    public final org.apache.xml.dtm.DTMIterator getContextNodeList()
    {
        org.apache.xpath.XPathContext r0;
        java.util.Stack $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        org.apache.xml.dtm.DTMIterator $r4;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_contextNodeLists>;

        $i0 = virtualinvoke $r1.<java.util.Stack: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_contextNodeLists>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.xml.dtm.DTMIterator) $r3;

        return $r4;

     label1:
        return null;
    }

    public java.util.Stack getContextNodeListsStack()
    {
        org.apache.xpath.XPathContext r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_contextNodeLists>;

        return $r1;
    }

    public final org.apache.xml.dtm.DTMIterator getContextNodes()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.dtm.DTMIterator r2, r3, r4;
        java.lang.CloneNotSupportedException $r5;

        r0 := @this: org.apache.xpath.XPathContext;

     label1:
        r2 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMIterator getContextNodeList()>();

     label2:
        r3 = null;

        if r2 == null goto label5;

     label3:
        r4 = interfaceinvoke r2.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTMIterator cloneWithReset()>();

     label4:
        r3 = r4;

     label5:
        return r3;

     label6:
        $r5 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label6;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label6;
    }

    public final int getCurrentExpressionNode()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1;
        int $i0;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.IntStack: int peek()>();

        return $i0;
    }

    public org.apache.xml.utils.IntStack getCurrentExpressionNodeStack()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        return $r1;
    }

    public final int getCurrentNode()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1;
        int $i0;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.IntStack: int peek()>();

        return $i0;
    }

    public org.apache.xpath.axes.SubContextList getCurrentNodeList()
    {
        org.apache.xpath.XPathContext r0;
        java.util.Stack $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.apache.xpath.axes.SubContextList $r4;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object elementAt(int)>(0);

        $r4 = (org.apache.xpath.axes.SubContextList) $r3;

        return $r4;
    }

    public org.apache.xml.utils.IntStack getCurrentNodeStack()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        return $r1;
    }

    public org.apache.xml.dtm.DTM getDTM(int)
    {
        org.apache.xpath.XPathContext r0;
        int i0;
        org.apache.xml.dtm.DTMManager $r1;
        org.apache.xml.dtm.DTM $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r2 = virtualinvoke $r1.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        return $r2;
    }

    public org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source, boolean, org.apache.xml.dtm.DTMWSFilter, boolean, boolean)
    {
        org.apache.xpath.XPathContext r0;
        javax.xml.transform.Source r1;
        boolean z0, z1, z2;
        org.apache.xml.dtm.DTMWSFilter r2;
        org.apache.xml.dtm.DTMManager $r3;
        org.apache.xml.dtm.DTM $r4;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: javax.xml.transform.Source;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.xml.dtm.DTMWSFilter;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        $r3 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r4 = virtualinvoke $r3.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>(r1, z0, r2, z1, z2);

        return $r4;
    }

    public int getDTMHandleFromNode(org.w3c.dom.Node)
    {
        org.apache.xpath.XPathContext r0;
        org.w3c.dom.Node r1;
        org.apache.xml.dtm.DTMManager $r2;
        int $i0;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $i0 = virtualinvoke $r2.<org.apache.xml.dtm.DTMManager: int getDTMHandleFromNode(org.w3c.dom.Node)>(r1);

        return $i0;
    }

    public int getDTMIdentity(org.apache.xml.dtm.DTM)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.dtm.DTM r1;
        org.apache.xml.dtm.DTMManager $r2;
        int $i0;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $i0 = virtualinvoke $r2.<org.apache.xml.dtm.DTMManager: int getDTMIdentity(org.apache.xml.dtm.DTM)>(r1);

        return $i0;
    }

    public org.apache.xml.dtm.DTMManager getDTMManager()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.dtm.DTMManager $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        return $r1;
    }

    public org.apache.xpath.objects.DTMXRTreeFrag getDTMXRTreeFrag(int)
    {
        org.apache.xpath.XPathContext r0;
        int i0;
        org.apache.xpath.objects.DTMXRTreeFrag r1, $r5, $r12;
        java.util.HashMap $r2, $r4, $r7, $r10, $r13;
        java.lang.Integer $r3, $r6, $r9;
        boolean $z0;
        java.lang.Object $r11;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        $r2 = r0.<org.apache.xpath.XPathContext: java.util.HashMap m_DTMXRTreeFrags>;

        if $r2 != null goto label1;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        r0.<org.apache.xpath.XPathContext: java.util.HashMap m_DTMXRTreeFrags> = $r13;

     label1:
        $r4 = r0.<org.apache.xpath.XPathContext: java.util.HashMap m_DTMXRTreeFrags>;

        $r3 = new java.lang.Integer;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i0);

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r10 = r0.<org.apache.xpath.XPathContext: java.util.HashMap m_DTMXRTreeFrags>;

        $r9 = new java.lang.Integer;

        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(i0);

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r9);

        $r12 = (org.apache.xpath.objects.DTMXRTreeFrag) $r11;

        return $r12;

     label2:
        $r5 = new org.apache.xpath.objects.DTMXRTreeFrag;

        specialinvoke $r5.<org.apache.xpath.objects.DTMXRTreeFrag: void <init>(int,org.apache.xpath.XPathContext)>(i0, r0);

        r1 = $r5;

        $r7 = r0.<org.apache.xpath.XPathContext: java.util.HashMap m_DTMXRTreeFrags>;

        $r6 = new java.lang.Integer;

        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1);

        return r1;
    }

    public final javax.xml.transform.ErrorListener getErrorListener()
    {
        org.apache.xpath.XPathContext r0;
        javax.xml.transform.ErrorListener r2, $r4, $r5, $r6;
        java.lang.reflect.Method r3, $r10;
        org.apache.xml.utils.DefaultErrorHandler $r7;
        java.lang.Object[] $r8;
        java.lang.Object $r9, $r11;
        java.lang.Exception $r12;

        r0 := @this: org.apache.xpath.XPathContext;

        $r4 = r0.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener m_errorListener>;

        if $r4 == null goto label2;

        r2 = r0.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener m_errorListener>;

     label1:
        return r2;

     label2:
        r3 = r0.<org.apache.xpath.XPathContext: java.lang.reflect.Method m_ownerGetErrorListener>;

     label3:
        r2 = null;

        if r3 == null goto label5;

     label4:
        $r10 = r0.<org.apache.xpath.XPathContext: java.lang.reflect.Method m_ownerGetErrorListener>;

        $r9 = r0.<org.apache.xpath.XPathContext: java.lang.Object m_owner>;

        $r8 = newarray (java.lang.Object)[0];

        $r11 = virtualinvoke $r10.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r9, $r8);

        r2 = (javax.xml.transform.ErrorListener) $r11;

     label5:
        if r2 != null goto label1;

        $r5 = r0.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener m_defaultErrorListener>;

        if $r5 != null goto label6;

        $r7 = new org.apache.xml.utils.DefaultErrorHandler;

        specialinvoke $r7.<org.apache.xml.utils.DefaultErrorHandler: void <init>()>();

        r0.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener m_defaultErrorListener> = $r7;

     label6:
        $r6 = r0.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener m_defaultErrorListener>;

        return $r6;

     label7:
        $r12 := @caughtexception;

        r2 = null;

        goto label5;

        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.Exception from label4 to label5 with label7;
    }

    public org.apache.xalan.extensions.ExpressionContext getExpressionContext()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xpath.XPathContext$XPathExpressionContext $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xpath.XPathContext$XPathExpressionContext expressionContext>;

        return $r1;
    }

    public org.apache.xml.dtm.DTM getGlobalRTFDTM()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM $r1, $r4, $r5, $r6;
        org.apache.xml.dtm.DTMManager $r2;
        org.apache.xml.dtm.DTM $r3;
        boolean $z0;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM m_global_rtfdtm>;

        if $r1 == null goto label1;

        $r6 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM m_global_rtfdtm>;

        $z0 = virtualinvoke $r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: boolean isTreeIncomplete()>();

        if $z0 == 0 goto label2;

     label1:
        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r3 = virtualinvoke $r2.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>(null, 1, null, 0, 0);

        $r4 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r3;

        r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM m_global_rtfdtm> = $r4;

     label2:
        $r5 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM m_global_rtfdtm>;

        return $r5;
    }

    public final int getIteratorRoot()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.NodeVector $r1;
        int $i0;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_iteratorRoots>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.NodeVector: int peepOrNull()>();

        return $i0;
    }

    public final org.apache.xml.utils.PrefixResolver getNamespaceContext()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.ObjectStack $r1;
        java.lang.Object $r2;
        org.apache.xml.utils.PrefixResolver $r3;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object peek()>();

        $r3 = (org.apache.xml.utils.PrefixResolver) $r2;

        return $r3;
    }

    public java.lang.Object getOwnerObject()
    {
        org.apache.xpath.XPathContext r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: java.lang.Object m_owner>;

        return $r1;
    }

    public final int getPredicatePos()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1;
        int $i0;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_predicatePos>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.IntStack: int peek()>();

        return $i0;
    }

    public final int getPredicateRoot()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.NodeVector $r1;
        int $i0;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_predicateRoots>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.NodeVector: int peepOrNull()>();

        return $i0;
    }

    public final org.xml.sax.XMLReader getPrimaryReader()
    {
        org.apache.xpath.XPathContext r0;
        org.xml.sax.XMLReader $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.xml.sax.XMLReader m_primaryReader>;

        return $r1;
    }

    public org.apache.xml.dtm.DTM getRTFDTM()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM r1, r2, $r12, $r16;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Vector r3, $r4, $r5, $r7, $r9, $r11, $r15, $r19;
        java.lang.Object $r6, $r13, $r14;
        boolean $z0;
        org.apache.xml.dtm.DTMManager $r8, $r18;
        org.apache.xml.dtm.DTM $r10, $r17;

        r0 := @this: org.apache.xpath.XPathContext;

        $r4 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        if $r4 != null goto label2;

        $r15 = new java.util.Vector;

        specialinvoke $r15.<java.util.Vector: void <init>()>();

        r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack> = $r15;

        $r18 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r17 = virtualinvoke $r18.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>(null, 1, null, 0, 0);

        r1 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r17;

        $r19 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        virtualinvoke $r19.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        $i8 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        $i9 = 1 + $i8;

        r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm> = $i9;

     label1:
        return r1;

     label2:
        $i2 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        if $i2 >= 0 goto label3;

        r3 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        $i7 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        i1 = 1 + $i7;

        r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm> = i1;

        $r14 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r16 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r14;

        return $r16;

     label3:
        $r5 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        $i3 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>($i3);

        r1 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r6;

        $z0 = virtualinvoke r1.<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: boolean isTreeIncomplete()>();

        if $z0 == 0 goto label1;

        $i4 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        i0 = 1 + $i4;

        r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm> = i0;

        $r7 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        $i5 = virtualinvoke $r7.<java.util.Vector: int size()>();

        if i0 >= $i5 goto label4;

        $r11 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        $i6 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        $r13 = virtualinvoke $r11.<java.util.Vector: java.lang.Object elementAt(int)>($i6);

        $r12 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r13;

        return $r12;

     label4:
        $r8 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r10 = virtualinvoke $r8.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>(null, 1, null, 0, 0);

        r2 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r10;

        $r9 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>(r2);

        return r2;
    }

    public javax.xml.transform.SourceLocator getSAXLocator()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.ObjectStack $r1;
        java.lang.Object $r2;
        javax.xml.transform.SourceLocator $r3;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_saxLocations>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object peek()>();

        $r3 = (javax.xml.transform.SourceLocator) $r2;

        return $r3;
    }

    public final org.apache.xpath.SourceTreeManager getSourceTreeManager()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xpath.SourceTreeManager $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager m_sourceTreeManager>;

        return $r1;
    }

    public org.apache.xpath.axes.SubContextList getSubContextList()
    {
        org.apache.xpath.XPathContext r0;
        java.util.Stack $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        org.apache.xpath.axes.SubContextList $r4;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.xpath.axes.SubContextList) $r3;

        return $r4;
    }

    public final javax.xml.transform.URIResolver getURIResolver()
    {
        org.apache.xpath.XPathContext r0;
        javax.xml.transform.URIResolver $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: javax.xml.transform.URIResolver m_uriResolver>;

        return $r1;
    }

    public final org.apache.xpath.VariableStack getVarStack()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xpath.VariableStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack m_variableStacks>;

        return $r1;
    }

    public boolean isSecureProcessing()
    {
        org.apache.xpath.XPathContext r0;
        boolean $z0;

        r0 := @this: org.apache.xpath.XPathContext;

        $z0 = r0.<org.apache.xpath.XPathContext: boolean m_isSecureProcessing>;

        return $z0;
    }

    public final void popContextNodeList()
    {
        org.apache.xpath.XPathContext r0;
        java.util.Stack $r1, $r2;
        boolean $z0;
        java.io.PrintStream $r4;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_contextNodeLists>;

        $z0 = virtualinvoke $r1.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Warning: popContextNodeList when stack is empty!");

        return;

     label1:
        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_contextNodeLists>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public final void popCurrentExpressionNode()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: void quickPop(int)>(1);

        return;
    }

    public final void popCurrentNode()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: void quickPop(int)>(1);

        return;
    }

    public final void popCurrentNodeAndExpression()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1, $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: void quickPop(int)>(1);

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        virtualinvoke $r2.<org.apache.xml.utils.IntStack: void quickPop(int)>(1);

        return;
    }

    public final void popExpressionState()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1, $r2;
        org.apache.xml.utils.ObjectStack $r3;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: void quickPop(int)>(1);

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        virtualinvoke $r2.<org.apache.xml.utils.IntStack: void quickPop(int)>(1);

        $r3 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        virtualinvoke $r3.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        return;
    }

    public final void popIteratorRoot()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.NodeVector $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_iteratorRoots>;

        virtualinvoke $r1.<org.apache.xml.utils.NodeVector: void popQuick()>();

        return;
    }

    public final void popNamespaceContext()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.ObjectStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        return;
    }

    public final void popPredicatePos()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_predicatePos>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: int pop()>();

        return;
    }

    public final void popPredicateRoot()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.NodeVector $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_predicateRoots>;

        virtualinvoke $r1.<org.apache.xml.utils.NodeVector: void popQuick()>();

        return;
    }

    public void popRTFContext()
    {
        org.apache.xpath.XPathContext r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.xml.utils.IntStack $r1;
        java.util.Vector $r2, $r3, $r7;
        java.lang.Object $r4, $r9;
        org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM $r5, $r6, $r8, $r10;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_last_pushed_rtfdtm>;

        i0 = virtualinvoke $r1.<org.apache.xml.utils.IntStack: int pop()>();

        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $i1 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        if $i1 != i0 goto label3;

        if i0 < 0 goto label1;

        $r7 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        $r9 = virtualinvoke $r7.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r8 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r9;

        $r10 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r8;

        virtualinvoke $r10.<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: boolean popRewindMark()>();

        return;

     label3:
        $i2 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        if $i2 == i0 goto label1;

        $r3 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        $i3 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>($i3);

        $r5 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r4;

        $r6 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r5;

        virtualinvoke $r6.<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: boolean popRewindMark()>();

        $i4 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        $i5 = -1 + $i4;

        r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm> = $i5;

        goto label3;
    }

    public void popSAXLocator()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.ObjectStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_saxLocations>;

        virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        return;
    }

    public final void popSubContextList()
    {
        org.apache.xpath.XPathContext r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public final void pushContextNodeList(org.apache.xml.dtm.DTMIterator)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.dtm.DTMIterator r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xml.dtm.DTMIterator;

        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_contextNodeLists>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public final void pushCurrentExpressionNode(int)
    {
        org.apache.xpath.XPathContext r0;
        int i0;
        org.apache.xml.utils.IntStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: int push(int)>(i0);

        return;
    }

    public final void pushCurrentNode(int)
    {
        org.apache.xpath.XPathContext r0;
        int i0;
        org.apache.xml.utils.IntStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: int push(int)>(i0);

        return;
    }

    public final void pushCurrentNodeAndExpression(int, int)
    {
        org.apache.xpath.XPathContext r0;
        int i0, i1;
        org.apache.xml.utils.IntStack $r1, $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: int push(int)>(i0);

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        virtualinvoke $r2.<org.apache.xml.utils.IntStack: int push(int)>(i0);

        return;
    }

    public final void pushExpressionState(int, int, org.apache.xml.utils.PrefixResolver)
    {
        org.apache.xpath.XPathContext r0;
        int i0, i1;
        org.apache.xml.utils.PrefixResolver r1;
        org.apache.xml.utils.IntStack $r2, $r3;
        org.apache.xml.utils.ObjectStack $r4;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.xml.utils.PrefixResolver;

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        virtualinvoke $r2.<org.apache.xml.utils.IntStack: int push(int)>(i0);

        $r3 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        virtualinvoke $r3.<org.apache.xml.utils.IntStack: int push(int)>(i0);

        $r4 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        virtualinvoke $r4.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public final void pushIteratorRoot(int)
    {
        org.apache.xpath.XPathContext r0;
        int i0;
        org.apache.xml.utils.NodeVector $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_iteratorRoots>;

        virtualinvoke $r1.<org.apache.xml.utils.NodeVector: void push(int)>(i0);

        return;
    }

    public final void pushNamespaceContext(org.apache.xml.utils.PrefixResolver)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.PrefixResolver r1;
        org.apache.xml.utils.ObjectStack $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xml.utils.PrefixResolver;

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public final void pushNamespaceContextNull()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.ObjectStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(null);

        return;
    }

    public final void pushPredicatePos(int)
    {
        org.apache.xpath.XPathContext r0;
        int i0;
        org.apache.xml.utils.IntStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_predicatePos>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: int push(int)>(i0);

        return;
    }

    public final void pushPredicateRoot(int)
    {
        org.apache.xpath.XPathContext r0;
        int i0;
        org.apache.xml.utils.NodeVector $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_predicateRoots>;

        virtualinvoke $r1.<org.apache.xml.utils.NodeVector: void push(int)>(i0);

        return;
    }

    public void pushRTFContext()
    {
        org.apache.xpath.XPathContext r0;
        int $i0;
        org.apache.xml.utils.IntStack $r1;
        java.util.Vector $r2;
        org.apache.xml.dtm.DTM $r3;
        org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM $r4, $r5;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_last_pushed_rtfdtm>;

        $i0 = r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm>;

        virtualinvoke $r1.<org.apache.xml.utils.IntStack: int push(int)>($i0);

        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getRTFDTM()>();

        $r4 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r3;

        $r5 = (org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM) $r4;

        virtualinvoke $r5.<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: void pushRewindMark()>();

     label1:
        return;
    }

    public void pushSAXLocator(javax.xml.transform.SourceLocator)
    {
        org.apache.xpath.XPathContext r0;
        javax.xml.transform.SourceLocator r1;
        org.apache.xml.utils.ObjectStack $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_saxLocations>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public void pushSAXLocatorNull()
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.ObjectStack $r1;

        r0 := @this: org.apache.xpath.XPathContext;

        $r1 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_saxLocations>;

        virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(null);

        return;
    }

    public final void pushSubContextList(org.apache.xpath.axes.SubContextList)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xpath.axes.SubContextList r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xpath.axes.SubContextList;

        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public boolean release(org.apache.xml.dtm.DTM, boolean)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.dtm.DTM r1;
        boolean z0, $z1, $z2;
        java.util.Vector $r2, $r4;
        org.apache.xml.dtm.DTMManager $r3;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xml.dtm.DTM;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        if $r2 == null goto label1;

        $r4 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        $z2 = virtualinvoke $r4.<java.util.Vector: boolean contains(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $z1 = virtualinvoke $r3.<org.apache.xml.dtm.DTMManager: boolean release(org.apache.xml.dtm.DTM,boolean)>(r1, z0);

        return $z1;
    }

    public void reset()
    {
        org.apache.xpath.XPathContext r0;
        java.util.Enumeration r1;
        java.util.Vector $r2, $r23;
        org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM $r3, $r22;
        org.apache.xml.utils.XMLStringFactory $r4;
        org.apache.xml.dtm.DTMManager $r5, $r21, $r24;
        org.apache.xml.utils.ObjectStack $r6, $r13, $r16, $r20;
        java.util.Stack $r7, $r8;
        org.apache.xml.utils.IntStack $r9, $r10, $r11, $r17, $r18;
        org.apache.xml.utils.NodeVector $r12, $r14;
        java.lang.Object $r25;
        boolean $z1;
        org.apache.xml.dtm.DTM $r26;

        r0 := @this: org.apache.xpath.XPathContext;

        specialinvoke r0.<org.apache.xpath.XPathContext: void releaseDTMXRTreeFrags()>();

        $r2 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        if $r2 == null goto label2;

        $r23 = r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack>;

        r1 = virtualinvoke $r23.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label2;

        $r24 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r25 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r26 = (org.apache.xml.dtm.DTM) $r25;

        virtualinvoke $r24.<org.apache.xml.dtm.DTMManager: boolean release(org.apache.xml.dtm.DTM,boolean)>($r26, 1);

        goto label1;

     label2:
        r0.<org.apache.xpath.XPathContext: java.util.Vector m_rtfdtm_stack> = null;

        r0.<org.apache.xpath.XPathContext: int m_which_rtfdtm> = -1;

        $r3 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM m_global_rtfdtm>;

        if $r3 == null goto label3;

        $r21 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager>;

        $r22 = r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM m_global_rtfdtm>;

        virtualinvoke $r21.<org.apache.xml.dtm.DTMManager: boolean release(org.apache.xml.dtm.DTM,boolean)>($r22, 1);

     label3:
        r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM m_global_rtfdtm> = null;

        $r4 = staticinvoke <org.apache.xpath.objects.XMLStringFactoryImpl: org.apache.xml.utils.XMLStringFactory getFactory()>();

        $r5 = staticinvoke <org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTMManager newInstance(org.apache.xml.utils.XMLStringFactory)>($r4);

        r0.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager m_dtmManager> = $r5;

        $r6 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_saxLocations>;

        virtualinvoke $r6.<org.apache.xml.utils.ObjectStack: void removeAllElements()>();

        $r7 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack>;

        virtualinvoke $r7.<java.util.Stack: void removeAllElements()>();

        $r8 = r0.<org.apache.xpath.XPathContext: java.util.Stack m_contextNodeLists>;

        virtualinvoke $r8.<java.util.Stack: void removeAllElements()>();

        $r9 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        virtualinvoke $r9.<org.apache.xml.utils.IntStack: void removeAllElements()>();

        $r10 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        virtualinvoke $r10.<org.apache.xml.utils.IntStack: void removeAllElements()>();

        $r12 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_iteratorRoots>;

        virtualinvoke $r12.<org.apache.xml.utils.NodeVector: void RemoveAllNoClear()>();

        $r11 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_predicatePos>;

        virtualinvoke $r11.<org.apache.xml.utils.IntStack: void removeAllElements()>();

        $r14 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.NodeVector m_predicateRoots>;

        virtualinvoke $r14.<org.apache.xml.utils.NodeVector: void RemoveAllNoClear()>();

        $r13 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        virtualinvoke $r13.<org.apache.xml.utils.ObjectStack: void removeAllElements()>();

        $r16 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        virtualinvoke $r16.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(null);

        $r17 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes>;

        virtualinvoke $r17.<org.apache.xml.utils.IntStack: int push(int)>(-1);

        $r18 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes>;

        virtualinvoke $r18.<org.apache.xml.utils.IntStack: int push(int)>(-1);

        $r20 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_saxLocations>;

        virtualinvoke $r20.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(null);

        return;
    }

    public void setAxesIteratorStackStacks(java.util.Stack)
    {
        org.apache.xpath.XPathContext r0;
        java.util.Stack r1;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: java.util.Stack;

        r0.<org.apache.xpath.XPathContext: java.util.Stack m_axesIteratorStack> = r1;

        return;
    }

    public void setContextNodeListsStack(java.util.Stack)
    {
        org.apache.xpath.XPathContext r0;
        java.util.Stack r1;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: java.util.Stack;

        r0.<org.apache.xpath.XPathContext: java.util.Stack m_contextNodeLists> = r1;

        return;
    }

    public void setCurrentExpressionNodeStack(org.apache.xml.utils.IntStack)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack r1;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xml.utils.IntStack;

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentExpressionNodes> = r1;

        return;
    }

    public void setCurrentNodeStack(org.apache.xml.utils.IntStack)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.IntStack r1;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xml.utils.IntStack;

        r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack m_currentNodes> = r1;

        return;
    }

    public void setErrorListener(javax.xml.transform.ErrorListener) throws java.lang.IllegalArgumentException
    {
        org.apache.xpath.XPathContext r0;
        javax.xml.transform.ErrorListener r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: javax.xml.transform.ErrorListener;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_NULL_ERROR_HANDLER", null);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label1:
        r0.<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener m_errorListener> = r1;

        return;
    }

    public final void setNamespaceContext(org.apache.xml.utils.PrefixResolver)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xml.utils.PrefixResolver r1;
        org.apache.xml.utils.ObjectStack $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xml.utils.PrefixResolver;

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_prefixResolvers>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: void setTop(java.lang.Object)>(r1);

        return;
    }

    public void setPrimaryReader(org.xml.sax.XMLReader)
    {
        org.apache.xpath.XPathContext r0;
        org.xml.sax.XMLReader r1;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.xml.sax.XMLReader;

        r0.<org.apache.xpath.XPathContext: org.xml.sax.XMLReader m_primaryReader> = r1;

        return;
    }

    public void setSAXLocator(javax.xml.transform.SourceLocator)
    {
        org.apache.xpath.XPathContext r0;
        javax.xml.transform.SourceLocator r1;
        org.apache.xml.utils.ObjectStack $r2;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        $r2 = r0.<org.apache.xpath.XPathContext: org.apache.xml.utils.ObjectStack m_saxLocations>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: void setTop(java.lang.Object)>(r1);

        return;
    }

    public void setSecureProcessing(boolean)
    {
        org.apache.xpath.XPathContext r0;
        boolean z0;

        r0 := @this: org.apache.xpath.XPathContext;

        z0 := @parameter0: boolean;

        r0.<org.apache.xpath.XPathContext: boolean m_isSecureProcessing> = z0;

        return;
    }

    public void setSourceTreeManager(org.apache.xpath.SourceTreeManager)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xpath.SourceTreeManager r1;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xpath.SourceTreeManager;

        r0.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager m_sourceTreeManager> = r1;

        return;
    }

    public void setURIResolver(javax.xml.transform.URIResolver)
    {
        org.apache.xpath.XPathContext r0;
        javax.xml.transform.URIResolver r1;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: javax.xml.transform.URIResolver;

        r0.<org.apache.xpath.XPathContext: javax.xml.transform.URIResolver m_uriResolver> = r1;

        return;
    }

    public final void setVarStack(org.apache.xpath.VariableStack)
    {
        org.apache.xpath.XPathContext r0;
        org.apache.xpath.VariableStack r1;

        r0 := @this: org.apache.xpath.XPathContext;

        r1 := @parameter0: org.apache.xpath.VariableStack;

        r0.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack m_variableStacks> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.XPathContext: int RECURSIONLIMIT> = 4096;

        return;
    }
}
