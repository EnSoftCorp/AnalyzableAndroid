public final class org.apache.http.params.BasicHttpParams extends org.apache.http.params.AbstractHttpParams implements java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;
    private java.util.HashMap parameters;

    public void <init>()
    {
        org.apache.http.params.BasicHttpParams r0;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        specialinvoke r0.<org.apache.http.params.AbstractHttpParams: void <init>()>();

        return;
    }

    public void clear()
    {
        org.apache.http.params.BasicHttpParams r0;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters> = null;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.params.BasicHttpParams r0, r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (org.apache.http.params.BasicHttpParams) $r2;

        virtualinvoke r0.<org.apache.http.params.BasicHttpParams: void copyParams(org.apache.http.params.HttpParams)>(r1);

        return r1;
    }

    public org.apache.http.params.HttpParams copy()
    {
        org.apache.http.params.BasicHttpParams r0, r1, $r2;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        $r2 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r2.<org.apache.http.params.BasicHttpParams: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<org.apache.http.params.BasicHttpParams: void copyParams(org.apache.http.params.HttpParams)>(r1);

        return r1;
    }

    protected void copyParams(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.BasicHttpParams r0;
        org.apache.http.params.HttpParams r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.HashMap $r4, $r5;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r9, $r11;
        java.lang.String $r10;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        r1 := @parameter0: org.apache.http.params.HttpParams;

        $r4 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        if $r4 != null goto label2;

     label1:
        return;

     label2:
        $r5 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z1 = $r8 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r1.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>($r10, $r11);

        goto label3;
    }

    public java.lang.Object getParameter(java.lang.String)
    {
        org.apache.http.params.BasicHttpParams r0;
        java.lang.String r1;
        java.util.HashMap r2, $r4;
        java.lang.Object r3;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        r3 = null;

        if r2 == null goto label1;

        $r4 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        r3 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        return r3;
    }

    public boolean isParameterSet(java.lang.String)
    {
        org.apache.http.params.BasicHttpParams r0;
        java.lang.String r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)>(r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isParameterSetLocally(java.lang.String)
    {
        org.apache.http.params.BasicHttpParams r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r4 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean removeParameter(java.lang.String)
    {
        org.apache.http.params.BasicHttpParams r0;
        java.lang.String r1;
        java.util.HashMap $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        if $r2 != null goto label2;

     label1:
        return 0;

     label2:
        $r3 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return 1;
    }

    public org.apache.http.params.HttpParams setParameter(java.lang.String, java.lang.Object)
    {
        org.apache.http.params.BasicHttpParams r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.util.HashMap $r3, $r4, $r6;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        if $r3 != null goto label1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters> = $r6;

     label1:
        $r4 = r0.<org.apache.http.params.BasicHttpParams: java.util.HashMap parameters>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r0;
    }

    public void setParameters(java.lang.String[], java.lang.Object)
    {
        org.apache.http.params.BasicHttpParams r0;
        java.lang.String[] r1;
        java.lang.Object r2;
        int i0, $i1;
        java.lang.String $r3;

        r0 := @this: org.apache.http.params.BasicHttpParams;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.Object;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r3 = r1[i0];

        virtualinvoke r0.<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>($r3, r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.http.params.BasicHttpParams: long serialVersionUID> = -7086398485908701455L;

        return;
    }
}
