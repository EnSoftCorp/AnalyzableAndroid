public class android.media.MediaFocusControl$RemoteControlStackEntry extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    public java.lang.String mCallingPackageName;
    public int mCallingUid;
    public final android.media.MediaFocusControl mController;
    public final android.app.PendingIntent mMediaIntent;
    public android.media.MediaFocusControl$RccPlaybackState mPlaybackState;
    public int mPlaybackStream;
    public int mPlaybackType;
    public int mPlaybackVolume;
    public int mPlaybackVolumeHandling;
    public int mPlaybackVolumeMax;
    public android.media.IRemoteControlClient mRcClient;
    public android.media.MediaFocusControl$RcClientDeathHandler mRcClientDeathHandler;
    public int mRccId;
    public final android.content.ComponentName mReceiverComponent;
    public android.media.IRemoteVolumeObserver mRemoteVolumeObs;
    public android.os.IBinder mToken;

    public void <init>(android.media.MediaFocusControl, android.app.PendingIntent, android.content.ComponentName, android.os.IBinder)
    {
        android.media.MediaFocusControl$RemoteControlStackEntry r0;
        android.media.MediaFocusControl r1, $r10;
        android.app.PendingIntent r2;
        android.content.ComponentName r3;
        android.os.IBinder r4, $r7, $r8;
        int $i0;
        android.media.MediaFocusControl$RccPlaybackState $r6;
        android.os.RemoteException $r9;
        android.media.MediaFocusControl$MediaEventHandler $r11;
        android.media.MediaFocusControl$RemoteControlStackEntry$1 $r12;

        r0 := @this: android.media.MediaFocusControl$RemoteControlStackEntry;

        r1 := @parameter0: android.media.MediaFocusControl;

        r2 := @parameter1: android.app.PendingIntent;

        r3 := @parameter2: android.content.ComponentName;

        r4 := @parameter3: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: int mRccId> = -1;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl mController> = r1;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.app.PendingIntent mMediaIntent> = r2;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.content.ComponentName mReceiverComponent> = r3;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.os.IBinder mToken> = r4;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: int mCallingUid> = -1;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.IRemoteControlClient mRcClient> = null;

        $i0 = staticinvoke <android.media.MediaFocusControl: int access$3004()>();

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: int mRccId> = $i0;

        $r6 = new android.media.MediaFocusControl$RccPlaybackState;

        specialinvoke $r6.<android.media.MediaFocusControl$RccPlaybackState: void <init>(int,long,float)>(1, -1L, 1.0F);

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl$RccPlaybackState mPlaybackState> = $r6;

        virtualinvoke r0.<android.media.MediaFocusControl$RemoteControlStackEntry: void resetPlaybackInfo()>();

        $r7 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.os.IBinder mToken>;

        if $r7 == null goto label2;

     label1:
        $r8 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.os.IBinder mToken>;

        interfaceinvoke $r8.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        $r10 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl mController>;

        $r11 = staticinvoke <android.media.MediaFocusControl: android.media.MediaFocusControl$MediaEventHandler access$200(android.media.MediaFocusControl)>($r10);

        $r12 = new android.media.MediaFocusControl$RemoteControlStackEntry$1;

        specialinvoke $r12.<android.media.MediaFocusControl$RemoteControlStackEntry$1: void <init>(android.media.MediaFocusControl$RemoteControlStackEntry)>(r0);

        virtualinvoke $r11.<android.media.MediaFocusControl$MediaEventHandler: boolean post(java.lang.Runnable)>($r12);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void binderDied()
    {
        android.media.MediaFocusControl$RemoteControlStackEntry r0;
        android.app.PendingIntent $r1;
        android.media.MediaFocusControl $r2;

        r0 := @this: android.media.MediaFocusControl$RemoteControlStackEntry;

        $r2 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl mController>;

        $r1 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.app.PendingIntent mMediaIntent>;

        virtualinvoke $r2.<android.media.MediaFocusControl: void unregisterMediaButtonIntent(android.app.PendingIntent)>($r1);

        return;
    }

    public void destroy()
    {
        android.media.MediaFocusControl$RemoteControlStackEntry r0;
        android.os.IBinder $r1, $r2;

        r0 := @this: android.media.MediaFocusControl$RemoteControlStackEntry;

        virtualinvoke r0.<android.media.MediaFocusControl$RemoteControlStackEntry: void unlinkToRcClientDeath()>();

        $r1 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.os.IBinder mToken>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.os.IBinder mToken>;

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.os.IBinder mToken> = null;

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.media.MediaFocusControl$RemoteControlStackEntry r0;

        r0 := @this: android.media.MediaFocusControl$RemoteControlStackEntry;

        virtualinvoke r0.<android.media.MediaFocusControl$RemoteControlStackEntry: void destroy()>();

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public void resetPlaybackInfo()
    {
        android.media.MediaFocusControl$RemoteControlStackEntry r0;
        android.media.MediaFocusControl$RccPlaybackState $r1;

        r0 := @this: android.media.MediaFocusControl$RemoteControlStackEntry;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: int mPlaybackType> = 0;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: int mPlaybackVolume> = 15;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: int mPlaybackVolumeMax> = 15;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: int mPlaybackVolumeHandling> = 1;

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: int mPlaybackStream> = 3;

        $r1 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl$RccPlaybackState mPlaybackState>;

        virtualinvoke $r1.<android.media.MediaFocusControl$RccPlaybackState: void reset()>();

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.IRemoteVolumeObserver mRemoteVolumeObs> = null;

        return;
    }

    public void unlinkToRcClientDeath()
    {
        android.media.MediaFocusControl$RemoteControlStackEntry r0;
        java.util.NoSuchElementException r1, $r8;
        android.media.MediaFocusControl$RcClientDeathHandler $r2, $r3, $r5, $r7;
        android.os.IBinder $r4, $r6;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        java.lang.String $r13;

        r0 := @this: android.media.MediaFocusControl$RemoteControlStackEntry;

        $r2 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl$RcClientDeathHandler mRcClientDeathHandler>;

        if $r2 == null goto label2;

        $r3 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl$RcClientDeathHandler mRcClientDeathHandler>;

        $r4 = staticinvoke <android.media.MediaFocusControl$RcClientDeathHandler: android.os.IBinder access$3100(android.media.MediaFocusControl$RcClientDeathHandler)>($r3);

        if $r4 == null goto label2;

     label1:
        $r5 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl$RcClientDeathHandler mRcClientDeathHandler>;

        $r6 = staticinvoke <android.media.MediaFocusControl$RcClientDeathHandler: android.os.IBinder access$3100(android.media.MediaFocusControl$RcClientDeathHandler)>($r5);

        $r7 = r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl$RcClientDeathHandler mRcClientDeathHandler>;

        interfaceinvoke $r6.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r7, 0);

        r0.<android.media.MediaFocusControl$RemoteControlStackEntry: android.media.MediaFocusControl$RcClientDeathHandler mRcClientDeathHandler> = null;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Encountered ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in unlinkToRcClientDeath()");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaFocusControl", $r13);

        virtualinvoke r1.<java.util.NoSuchElementException: void printStackTrace()>();

        return;

        catch java.util.NoSuchElementException from label1 to label2 with label3;
    }
}
