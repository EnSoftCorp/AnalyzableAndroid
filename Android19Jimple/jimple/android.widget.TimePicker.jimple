public class android.widget.TimePicker extends android.widget.FrameLayout
{
    private static final boolean DEFAULT_ENABLED_STATE;
    private static final int HOURS_IN_HALF_DAY;
    private static final android.widget.TimePicker$OnTimeChangedListener NO_OP_CHANGE_LISTENER;
    private final android.widget.Button mAmPmButton;
    private final android.widget.NumberPicker mAmPmSpinner;
    private final android.widget.EditText mAmPmSpinnerInput;
    private final java.lang.String[] mAmPmStrings;
    private java.util.Locale mCurrentLocale;
    private final android.widget.TextView mDivider;
    private char mHourFormat;
    private final android.widget.NumberPicker mHourSpinner;
    private final android.widget.EditText mHourSpinnerInput;
    private boolean mHourWithTwoDigit;
    private boolean mIs24HourView;
    private boolean mIsAm;
    private boolean mIsEnabled;
    private final android.widget.NumberPicker mMinuteSpinner;
    private final android.widget.EditText mMinuteSpinnerInput;
    private android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener;
    private java.util.Calendar mTempCalendar;

    static void <clinit>()
    {
        android.widget.TimePicker$1 $r0;

        <android.widget.TimePicker: int HOURS_IN_HALF_DAY> = 12;

        <android.widget.TimePicker: boolean DEFAULT_ENABLED_STATE> = 1;

        $r0 = new android.widget.TimePicker$1;

        specialinvoke $r0.<android.widget.TimePicker$1: void <init>()>();

        <android.widget.TimePicker: android.widget.TimePicker$OnTimeChangedListener NO_OP_CHANGE_LISTENER> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.TimePicker r0;
        android.content.Context r1;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TimePicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843780);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.TimePicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.content.res.TypedArray r3;
        android.view.View r4, $r11, $r18, $r19, $r24, $r35, $r43, $r53;
        android.view.ViewGroup r5;
        android.view.ViewGroup$MarginLayoutParams r6;
        java.util.Locale $r7;
        int[] $r8;
        android.view.LayoutInflater $r9;
        java.lang.Object $r10;
        android.widget.TimePicker$2 $r13;
        android.widget.NumberPicker $r14, $r15, $r16, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r37, $r39, $r41, $r42, $r44, $r45;
        android.widget.EditText $r17, $r20, $r33, $r36, $r48, $r49;
        android.widget.TextView $r21, $r22;
        android.widget.NumberPicker$Formatter $r31;
        android.widget.TimePicker$3 $r32;
        java.text.DateFormatSymbols $r34;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r38, $r40;
        android.widget.TimePicker$5 $r46;
        android.widget.TimePicker$OnTimeChangedListener $r47;
        java.util.Calendar $r50, $r52;
        java.lang.Integer $r51, $r55;
        android.view.ViewGroup$LayoutParams $r54;
        android.widget.Button $r56, $r58;
        android.widget.TimePicker$4 $r57;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.widget.TimePicker: boolean mIsEnabled> = 1;

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<android.widget.TimePicker: void setCurrentLocale(java.util.Locale)>($r7);

        $r8 = <com.android.internal.R$styleable: int[] TimePicker>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r8, i0, 0);

        i1 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 17367218);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $r10 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r9 = (android.view.LayoutInflater) $r10;

        virtualinvoke $r9.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i1, r0, 1);

        $r11 = virtualinvoke r0.<android.widget.TimePicker: android.view.View findViewById(int)>(16909130);

        $r14 = (android.widget.NumberPicker) $r11;

        r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner> = $r14;

        $r16 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        $r13 = new android.widget.TimePicker$2;

        specialinvoke $r13.<android.widget.TimePicker$2: void <init>(android.widget.TimePicker)>(r0);

        virtualinvoke $r16.<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)>($r13);

        $r15 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        $r18 = virtualinvoke $r15.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909033);

        $r17 = (android.widget.EditText) $r18;

        r0.<android.widget.TimePicker: android.widget.EditText mHourSpinnerInput> = $r17;

        $r20 = r0.<android.widget.TimePicker: android.widget.EditText mHourSpinnerInput>;

        virtualinvoke $r20.<android.widget.EditText: void setImeOptions(int)>(5);

        $r19 = virtualinvoke r0.<android.widget.TimePicker: android.view.View findViewById(int)>(16909134);

        $r22 = (android.widget.TextView) $r19;

        r0.<android.widget.TimePicker: android.widget.TextView mDivider> = $r22;

        $r21 = r0.<android.widget.TimePicker: android.widget.TextView mDivider>;

        if $r21 == null goto label1;

        specialinvoke r0.<android.widget.TimePicker: void setDividerText()>();

     label1:
        $r24 = virtualinvoke r0.<android.widget.TimePicker: android.view.View findViewById(int)>(16909131);

        $r23 = (android.widget.NumberPicker) $r24;

        r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner> = $r23;

        $r27 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        virtualinvoke $r27.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r28 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        virtualinvoke $r28.<android.widget.NumberPicker: void setMaxValue(int)>(59);

        $r25 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        virtualinvoke $r25.<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)>(100L);

        $r26 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        $r31 = staticinvoke <android.widget.NumberPicker: android.widget.NumberPicker$Formatter getTwoDigitFormatter()>();

        virtualinvoke $r26.<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker$Formatter)>($r31);

        $r29 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        $r32 = new android.widget.TimePicker$3;

        specialinvoke $r32.<android.widget.TimePicker$3: void <init>(android.widget.TimePicker)>(r0);

        virtualinvoke $r29.<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)>($r32);

        $r30 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        $r35 = virtualinvoke $r30.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909033);

        $r36 = (android.widget.EditText) $r35;

        r0.<android.widget.TimePicker: android.widget.EditText mMinuteSpinnerInput> = $r36;

        $r33 = r0.<android.widget.TimePicker: android.widget.EditText mMinuteSpinnerInput>;

        virtualinvoke $r33.<android.widget.EditText: void setImeOptions(int)>(5);

        $r34 = new java.text.DateFormatSymbols;

        specialinvoke $r34.<java.text.DateFormatSymbols: void <init>()>();

        $r38 = virtualinvoke $r34.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();

        r0.<android.widget.TimePicker: java.lang.String[] mAmPmStrings> = $r38;

        r4 = virtualinvoke r0.<android.widget.TimePicker: android.view.View findViewById(int)>(16909132);

        $z0 = r4 instanceof android.widget.Button;

        if $z0 == 0 goto label6;

        r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner> = null;

        r0.<android.widget.TimePicker: android.widget.EditText mAmPmSpinnerInput> = null;

        $r56 = (android.widget.Button) r4;

        r0.<android.widget.TimePicker: android.widget.Button mAmPmButton> = $r56;

        $r58 = r0.<android.widget.TimePicker: android.widget.Button mAmPmButton>;

        $r57 = new android.widget.TimePicker$4;

        specialinvoke $r57.<android.widget.TimePicker$4: void <init>(android.widget.TimePicker)>(r0);

        virtualinvoke $r58.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r57);

     label2:
        $z1 = specialinvoke r0.<android.widget.TimePicker: boolean isAmPmAtStart()>();

        if $z1 == 0 goto label3;

        $r53 = virtualinvoke r0.<android.widget.TimePicker: android.view.View findViewById(int)>(16909129);

        r5 = (android.view.ViewGroup) $r53;

        virtualinvoke r5.<android.view.ViewGroup: void removeView(android.view.View)>(r4);

        virtualinvoke r5.<android.view.ViewGroup: void addView(android.view.View,int)>(r4, 0);

        $r54 = virtualinvoke r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.view.ViewGroup$MarginLayoutParams) $r54;

        i2 = virtualinvoke r6.<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()>();

        i3 = virtualinvoke r6.<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()>();

        if i2 == i3 goto label3;

        virtualinvoke r6.<android.view.ViewGroup$MarginLayoutParams: void setMarginStart(int)>(i3);

        virtualinvoke r6.<android.view.ViewGroup$MarginLayoutParams: void setMarginEnd(int)>(i2);

     label3:
        specialinvoke r0.<android.widget.TimePicker: void getHourFormatData()>();

        specialinvoke r0.<android.widget.TimePicker: void updateHourControl()>();

        specialinvoke r0.<android.widget.TimePicker: void updateMinuteControl()>();

        specialinvoke r0.<android.widget.TimePicker: void updateAmPmControl()>();

        $r47 = <android.widget.TimePicker: android.widget.TimePicker$OnTimeChangedListener NO_OP_CHANGE_LISTENER>;

        virtualinvoke r0.<android.widget.TimePicker: void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)>($r47);

        $r52 = r0.<android.widget.TimePicker: java.util.Calendar mTempCalendar>;

        $i4 = virtualinvoke $r52.<java.util.Calendar: int get(int)>(11);

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r0.<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>($r51);

        $r50 = r0.<android.widget.TimePicker: java.util.Calendar mTempCalendar>;

        $i5 = virtualinvoke $r50.<java.util.Calendar: int get(int)>(12);

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r0.<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)>($r55);

        $z2 = virtualinvoke r0.<android.widget.TimePicker: boolean isEnabled()>();

        if $z2 != 0 goto label4;

        virtualinvoke r0.<android.widget.TimePicker: void setEnabled(boolean)>(0);

     label4:
        specialinvoke r0.<android.widget.TimePicker: void setContentDescriptions()>();

        $i6 = virtualinvoke r0.<android.widget.TimePicker: int getImportantForAccessibility()>();

        if $i6 != 0 goto label5;

        virtualinvoke r0.<android.widget.TimePicker: void setImportantForAccessibility(int)>(1);

     label5:
        return;

     label6:
        r0.<android.widget.TimePicker: android.widget.Button mAmPmButton> = null;

        $r37 = (android.widget.NumberPicker) r4;

        r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner> = $r37;

        $r42 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        virtualinvoke $r42.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r41 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        virtualinvoke $r41.<android.widget.NumberPicker: void setMaxValue(int)>(1);

        $r39 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        $r40 = r0.<android.widget.TimePicker: java.lang.String[] mAmPmStrings>;

        virtualinvoke $r39.<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>($r40);

        $r45 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        $r46 = new android.widget.TimePicker$5;

        specialinvoke $r46.<android.widget.TimePicker$5: void <init>(android.widget.TimePicker)>(r0);

        virtualinvoke $r45.<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)>($r46);

        $r44 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        $r43 = virtualinvoke $r44.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909033);

        $r49 = (android.widget.EditText) $r43;

        r0.<android.widget.TimePicker: android.widget.EditText mAmPmSpinnerInput> = $r49;

        $r48 = r0.<android.widget.TimePicker: android.widget.EditText mAmPmSpinnerInput>;

        virtualinvoke $r48.<android.widget.EditText: void setImeOptions(int)>(6);

        goto label2;
    }

    static void access$000(android.widget.TimePicker)
    {
        android.widget.TimePicker r0;

        r0 := @parameter0: android.widget.TimePicker;

        specialinvoke r0.<android.widget.TimePicker: void updateInputState()>();

        return;
    }

    static boolean access$100(android.widget.TimePicker)
    {
        android.widget.TimePicker r0;
        boolean $z0;

        r0 := @parameter0: android.widget.TimePicker;

        $z0 = r0.<android.widget.TimePicker: boolean mIsAm>;

        return $z0;
    }

    static boolean access$102(android.widget.TimePicker, boolean)
    {
        android.widget.TimePicker r0;
        boolean z0;

        r0 := @parameter0: android.widget.TimePicker;

        z0 := @parameter1: boolean;

        r0.<android.widget.TimePicker: boolean mIsAm> = z0;

        return z0;
    }

    static void access$200(android.widget.TimePicker)
    {
        android.widget.TimePicker r0;

        r0 := @parameter0: android.widget.TimePicker;

        specialinvoke r0.<android.widget.TimePicker: void updateAmPmControl()>();

        return;
    }

    static void access$300(android.widget.TimePicker)
    {
        android.widget.TimePicker r0;

        r0 := @parameter0: android.widget.TimePicker;

        specialinvoke r0.<android.widget.TimePicker: void onTimeChanged()>();

        return;
    }

    static android.widget.NumberPicker access$400(android.widget.TimePicker)
    {
        android.widget.TimePicker r0;
        android.widget.NumberPicker $r1;

        r0 := @parameter0: android.widget.TimePicker;

        $r1 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        return $r1;
    }

    static android.widget.NumberPicker access$500(android.widget.TimePicker)
    {
        android.widget.TimePicker r0;
        android.widget.NumberPicker $r1;

        r0 := @parameter0: android.widget.TimePicker;

        $r1 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        return $r1;
    }

    private void getHourFormatData()
    {
        android.widget.TimePicker r0;
        java.util.Locale r1;
        java.lang.String r2, r3;
        int i0, i1, $i3, $i4;
        char c2, $c5;
        boolean $z0;

        r0 := @this: android.widget.TimePicker;

        r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $z0 = r0.<android.widget.TimePicker: boolean mIs24HourView>;

        if $z0 == 0 goto label5;

        r2 = "Hm";

     label1:
        r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>(r1, r2);

        i0 = virtualinvoke r3.<java.lang.String: int length()>();

        r0.<android.widget.TimePicker: boolean mHourWithTwoDigit> = 0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i1);

        if c2 == 72 goto label3;

        if c2 == 104 goto label3;

        if c2 == 75 goto label3;

        if c2 != 107 goto label6;

     label3:
        r0.<android.widget.TimePicker: char mHourFormat> = c2;

        $i3 = i1 + 1;

        if $i3 >= i0 goto label4;

        $i4 = i1 + 1;

        $c5 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i4);

        if c2 != $c5 goto label4;

        r0.<android.widget.TimePicker: boolean mHourWithTwoDigit> = 1;

     label4:
        return;

     label5:
        r2 = "hm";

        goto label1;

     label6:
        i1 = i1 + 1;

        goto label2;
    }

    private boolean isAmPmAtStart()
    {
        android.widget.TimePicker r0;
        java.util.Locale $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: android.widget.TimePicker;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r1, "hm");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("a");

        return $z0;
    }

    private void onTimeChanged()
    {
        android.widget.TimePicker r0;
        android.widget.TimePicker$OnTimeChangedListener $r1, $r2;
        java.lang.Integer $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.widget.TimePicker;

        virtualinvoke r0.<android.widget.TimePicker: void sendAccessibilityEvent(int)>(4);

        $r1 = r0.<android.widget.TimePicker: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TimePicker: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener>;

        $r3 = virtualinvoke r0.<android.widget.TimePicker: java.lang.Integer getCurrentHour()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke r0.<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>();

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        interfaceinvoke $r2.<android.widget.TimePicker$OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>(r0, $i0, $i1);

     label1:
        return;
    }

    private void setContentDescriptions()
    {
        android.widget.TimePicker r0;
        android.widget.NumberPicker $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.widget.TimePicker;

        $r1 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        specialinvoke r0.<android.widget.TimePicker: void trySetContentDescription(android.view.View,int,int)>($r1, 16909032, 17040622);

        $r2 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        specialinvoke r0.<android.widget.TimePicker: void trySetContentDescription(android.view.View,int,int)>($r2, 16909034, 17040623);

        $r3 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        specialinvoke r0.<android.widget.TimePicker: void trySetContentDescription(android.view.View,int,int)>($r3, 16909032, 17040624);

        $r4 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        specialinvoke r0.<android.widget.TimePicker: void trySetContentDescription(android.view.View,int,int)>($r4, 16909034, 17040625);

        $r5 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        if $r5 == null goto label1;

        $r6 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        specialinvoke r0.<android.widget.TimePicker: void trySetContentDescription(android.view.View,int,int)>($r6, 16909032, 17040626);

        $r7 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        specialinvoke r0.<android.widget.TimePicker: void trySetContentDescription(android.view.View,int,int)>($r7, 16909034, 17040627);

     label1:
        return;
    }

    private void setCurrentHour(java.lang.Integer, boolean)
    {
        android.widget.TimePicker r0;
        java.lang.Integer r1, $r2;
        boolean z0, $z1;
        android.widget.NumberPicker $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: java.lang.Integer;

        z0 := @parameter1: boolean;

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<android.widget.TimePicker: java.lang.Integer getCurrentHour()>();

        if r1 != $r2 goto label2;

     label1:
        return;

     label2:
        $z1 = virtualinvoke r0.<android.widget.TimePicker: boolean is24HourView()>();

        if $z1 != 0 goto label4;

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i1 < 12 goto label5;

        r0.<android.widget.TimePicker: boolean mIsAm> = 0;

        $i3 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i3 <= 12 goto label3;

        $i4 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        $i5 = -12 + $i4;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

     label3:
        specialinvoke r0.<android.widget.TimePicker: void updateAmPmControl()>();

     label4:
        $r3 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<android.widget.NumberPicker: void setValue(int)>($i0);

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.TimePicker: void onTimeChanged()>();

        return;

     label5:
        r0.<android.widget.TimePicker: boolean mIsAm> = 1;

        $i2 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        if $i2 != 0 goto label3;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        goto label3;
    }

    private void setCurrentLocale(java.util.Locale)
    {
        android.widget.TimePicker r0;
        java.util.Locale r1, $r2;
        boolean $z0;
        java.util.Calendar $r3;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<android.widget.TimePicker: java.util.Locale mCurrentLocale>;

        $z0 = virtualinvoke r1.<java.util.Locale: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<android.widget.TimePicker: java.util.Locale mCurrentLocale> = r1;

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r1);

        r0.<android.widget.TimePicker: java.util.Calendar mTempCalendar> = $r3;

        return;
    }

    private void setDividerText()
    {
        android.widget.TimePicker r0;
        java.util.Locale r1;
        java.lang.String r2, r3, r4;
        int i0, i1, $i2, $i3, $i5;
        boolean $z0;
        android.widget.TextView $r5;
        char $c4;

        r0 := @this: android.widget.TimePicker;

        r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $z0 = r0.<android.widget.TimePicker: boolean mIs24HourView>;

        if $z0 == 0 goto label4;

        r2 = "Hm";

     label1:
        r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>(r1, r2);

        i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(72);

        if i0 != -1 goto label2;

        i0 = virtualinvoke r3.<java.lang.String: int lastIndexOf(int)>(104);

     label2:
        if i0 != -1 goto label5;

        r4 = ":";

     label3:
        $r5 = r0.<android.widget.TimePicker: android.widget.TextView mDivider>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>(r4);

        return;

     label4:
        r2 = "hm";

        goto label1;

     label5:
        $i2 = i0 + 1;

        i1 = virtualinvoke r3.<java.lang.String: int indexOf(int,int)>(109, $i2);

        if i1 != -1 goto label6;

        $i5 = i0 + 1;

        $c4 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i5);

        r4 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c4);

        goto label3;

     label6:
        $i3 = i0 + 1;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i3, i1);

        goto label3;
    }

    private void trySetContentDescription(android.view.View, int, int)
    {
        android.widget.TimePicker r0;
        android.view.View r1, r2;
        int i0, i1;
        android.content.Context $r3;
        java.lang.String $r4;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(i0);

        if r2 == null goto label1;

        $r3 = r0.<android.widget.TimePicker: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>(i1);

        virtualinvoke r2.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r4);

     label1:
        return;
    }

    private void updateAmPmControl()
    {
        android.widget.TimePicker r0;
        byte b0;
        boolean $z0, $z1;
        android.widget.NumberPicker $r1, $r6, $r7, $r8, $r10;
        java.lang.String[] $r2;
        java.lang.String $r3;
        android.widget.Button $r4, $r5, $r9;

        r0 := @this: android.widget.TimePicker;

        $z0 = virtualinvoke r0.<android.widget.TimePicker: boolean is24HourView()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        if $r8 == null goto label2;

        $r10 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        virtualinvoke $r10.<android.widget.NumberPicker: void setVisibility(int)>(8);

     label1:
        virtualinvoke r0.<android.widget.TimePicker: void sendAccessibilityEvent(int)>(4);

        return;

     label2:
        $r9 = r0.<android.widget.TimePicker: android.widget.Button mAmPmButton>;

        virtualinvoke $r9.<android.widget.Button: void setVisibility(int)>(8);

        goto label1;

     label3:
        $z1 = r0.<android.widget.TimePicker: boolean mIsAm>;

        if $z1 == 0 goto label5;

        b0 = 0;

     label4:
        $r1 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        if $r1 == null goto label6;

        $r6 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        virtualinvoke $r6.<android.widget.NumberPicker: void setValue(int)>(b0);

        $r7 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        virtualinvoke $r7.<android.widget.NumberPicker: void setVisibility(int)>(0);

        goto label1;

     label5:
        b0 = 1;

        goto label4;

     label6:
        $r4 = r0.<android.widget.TimePicker: android.widget.Button mAmPmButton>;

        $r2 = r0.<android.widget.TimePicker: java.lang.String[] mAmPmStrings>;

        $r3 = $r2[b0];

        virtualinvoke $r4.<android.widget.Button: void setText(java.lang.CharSequence)>($r3);

        $r5 = r0.<android.widget.TimePicker: android.widget.Button mAmPmButton>;

        virtualinvoke $r5.<android.widget.Button: void setVisibility(int)>(0);

        goto label1;
    }

    private void updateHourControl()
    {
        android.widget.TimePicker r0;
        android.widget.NumberPicker r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        android.widget.NumberPicker$Formatter r2;
        boolean $z0, $z1;
        char $c0, $c1;

        r0 := @this: android.widget.TimePicker;

        $z0 = virtualinvoke r0.<android.widget.TimePicker: boolean is24HourView()>();

        if $z0 == 0 goto label4;

        $c1 = r0.<android.widget.TimePicker: char mHourFormat>;

        if $c1 != 107 goto label3;

        $r9 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r9.<android.widget.NumberPicker: void setMinValue(int)>(1);

        $r10 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r10.<android.widget.NumberPicker: void setMaxValue(int)>(24);

     label1:
        r1 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        $z1 = r0.<android.widget.TimePicker: boolean mHourWithTwoDigit>;

        if $z1 == 0 goto label6;

        r2 = staticinvoke <android.widget.NumberPicker: android.widget.NumberPicker$Formatter getTwoDigitFormatter()>();

     label2:
        virtualinvoke r1.<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker$Formatter)>(r2);

        return;

     label3:
        $r7 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r7.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r8 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r8.<android.widget.NumberPicker: void setMaxValue(int)>(23);

        goto label1;

     label4:
        $c0 = r0.<android.widget.TimePicker: char mHourFormat>;

        if $c0 != 75 goto label5;

        $r5 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r5.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r6 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r6.<android.widget.NumberPicker: void setMaxValue(int)>(11);

        goto label1;

     label5:
        $r3 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r3.<android.widget.NumberPicker: void setMinValue(int)>(1);

        $r4 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r4.<android.widget.NumberPicker: void setMaxValue(int)>(12);

        goto label1;

     label6:
        r2 = null;

        goto label2;
    }

    private void updateInputState()
    {
        android.widget.TimePicker r0;
        android.view.inputmethod.InputMethodManager r1;
        android.widget.EditText $r2, $r3, $r4, $r5, $r7, $r9;
        boolean $z0, $z1, $z2;
        android.os.IBinder $r6, $r8, $r10;

        r0 := @this: android.widget.TimePicker;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label1;

        $r2 = r0.<android.widget.TimePicker: android.widget.EditText mHourSpinnerInput>;

        $z0 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r2);

        if $z0 == 0 goto label2;

        $r9 = r0.<android.widget.TimePicker: android.widget.EditText mHourSpinnerInput>;

        virtualinvoke $r9.<android.widget.EditText: void clearFocus()>();

        $r10 = virtualinvoke r0.<android.widget.TimePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r10, 0);

     label1:
        return;

     label2:
        $r3 = r0.<android.widget.TimePicker: android.widget.EditText mMinuteSpinnerInput>;

        $z1 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r3);

        if $z1 == 0 goto label3;

        $r7 = r0.<android.widget.TimePicker: android.widget.EditText mMinuteSpinnerInput>;

        virtualinvoke $r7.<android.widget.EditText: void clearFocus()>();

        $r8 = virtualinvoke r0.<android.widget.TimePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r8, 0);

        return;

     label3:
        $r4 = r0.<android.widget.TimePicker: android.widget.EditText mAmPmSpinnerInput>;

        $z2 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r4);

        if $z2 == 0 goto label1;

        $r5 = r0.<android.widget.TimePicker: android.widget.EditText mAmPmSpinnerInput>;

        virtualinvoke $r5.<android.widget.EditText: void clearFocus()>();

        $r6 = virtualinvoke r0.<android.widget.TimePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r6, 0);

        return;
    }

    private void updateMinuteControl()
    {
        android.widget.TimePicker r0;
        boolean $z0;
        android.widget.EditText $r1, $r2;

        r0 := @this: android.widget.TimePicker;

        $z0 = virtualinvoke r0.<android.widget.TimePicker: boolean is24HourView()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.widget.TimePicker: android.widget.EditText mMinuteSpinnerInput>;

        virtualinvoke $r2.<android.widget.EditText: void setImeOptions(int)>(6);

        return;

     label1:
        $r1 = r0.<android.widget.TimePicker: android.widget.EditText mMinuteSpinnerInput>;

        virtualinvoke $r1.<android.widget.EditText: void setImeOptions(int)>(5);

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePicker r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.widget.TimePicker: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public int getBaseline()
    {
        android.widget.TimePicker r0;
        android.widget.NumberPicker $r1;
        int $i0;

        r0 := @this: android.widget.TimePicker;

        $r1 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        $i0 = virtualinvoke $r1.<android.widget.NumberPicker: int getBaseline()>();

        return $i0;
    }

    public java.lang.Integer getCurrentHour()
    {
        android.widget.TimePicker r0;
        int i0, $i1, $i2, $i3;
        android.widget.NumberPicker $r1;
        boolean $z0, $z1;
        java.lang.Integer $r2, $r3, $r4;

        r0 := @this: android.widget.TimePicker;

        $r1 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        i0 = virtualinvoke $r1.<android.widget.NumberPicker: int getValue()>();

        $z0 = virtualinvoke r0.<android.widget.TimePicker: boolean is24HourView()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        return $r4;

     label1:
        $z1 = r0.<android.widget.TimePicker: boolean mIsAm>;

        if $z1 == 0 goto label2;

        $i3 = i0 % 12;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        return $r3;

     label2:
        $i1 = i0 % 12;

        $i2 = 12 + $i1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r2;
    }

    public java.lang.Integer getCurrentMinute()
    {
        android.widget.TimePicker r0;
        android.widget.NumberPicker $r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: android.widget.TimePicker;

        $r1 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        $i0 = virtualinvoke $r1.<android.widget.NumberPicker: int getValue()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    public boolean is24HourView()
    {
        android.widget.TimePicker r0;
        boolean $z0;

        r0 := @this: android.widget.TimePicker;

        $z0 = r0.<android.widget.TimePicker: boolean mIs24HourView>;

        return $z0;
    }

    public boolean isEnabled()
    {
        android.widget.TimePicker r0;
        boolean $z0;

        r0 := @this: android.widget.TimePicker;

        $z0 = r0.<android.widget.TimePicker: boolean mIsEnabled>;

        return $z0;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.widget.TimePicker r0;
        android.content.res.Configuration r1;
        java.util.Locale $r2;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.widget.FrameLayout: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r2 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        specialinvoke r0.<android.widget.TimePicker: void setCurrentLocale(java.util.Locale)>($r2);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePicker r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/TimePicker";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.TimePicker r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/TimePicker";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TimePicker r0;
        android.view.accessibility.AccessibilityEvent r1;
        short s0;
        java.lang.String r2;
        boolean $z0;
        java.util.Calendar $r3, $r5, $r7;
        java.lang.Integer $r4, $r6;
        int $i1, $i2;
        android.content.Context $r8;
        long $l3;
        java.util.List $r9;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.FrameLayout: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $z0 = r0.<android.widget.TimePicker: boolean mIs24HourView>;

        if $z0 == 0 goto label2;

        s0 = 129;

     label1:
        $r3 = r0.<android.widget.TimePicker: java.util.Calendar mTempCalendar>;

        $r4 = virtualinvoke r0.<android.widget.TimePicker: java.lang.Integer getCurrentHour()>();

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(11, $i1);

        $r5 = r0.<android.widget.TimePicker: java.util.Calendar mTempCalendar>;

        $r6 = virtualinvoke r0.<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>();

        $i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        virtualinvoke $r5.<java.util.Calendar: void set(int,int)>(12, $i2);

        $r8 = r0.<android.widget.TimePicker: android.content.Context mContext>;

        $r7 = r0.<android.widget.TimePicker: java.util.Calendar mTempCalendar>;

        $l3 = virtualinvoke $r7.<java.util.Calendar: long getTimeInMillis()>();

        r2 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r8, $l3, s0);

        $r9 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;

     label2:
        s0 = 65;

        goto label1;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.TimePicker r0;
        android.os.Parcelable r1, $r3;
        android.widget.TimePicker$SavedState r2;
        int $i0, $i1;
        java.lang.Integer $r4, $r5;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.widget.TimePicker$SavedState) r1;

        $r3 = virtualinvoke r2.<android.widget.TimePicker$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.FrameLayout: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        $i0 = virtualinvoke r2.<android.widget.TimePicker$SavedState: int getHour()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r0.<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>($r4);

        $i1 = virtualinvoke r2.<android.widget.TimePicker$SavedState: int getMinute()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r0.<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)>($r5);

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.widget.TimePicker r0;
        android.widget.TimePicker$SavedState $r1;
        android.os.Parcelable $r2;
        java.lang.Integer $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.widget.TimePicker;

        $r1 = new android.widget.TimePicker$SavedState;

        $r2 = specialinvoke r0.<android.widget.FrameLayout: android.os.Parcelable onSaveInstanceState()>();

        $r3 = virtualinvoke r0.<android.widget.TimePicker: java.lang.Integer getCurrentHour()>();

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = virtualinvoke r0.<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>();

        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        specialinvoke $r1.<android.widget.TimePicker$SavedState: void <init>(android.os.Parcelable,int,int,android.widget.TimePicker$1)>($r2, $i0, $i1, null);

        return $r1;
    }

    public void setCurrentHour(java.lang.Integer)
    {
        android.widget.TimePicker r0;
        java.lang.Integer r1;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: java.lang.Integer;

        specialinvoke r0.<android.widget.TimePicker: void setCurrentHour(java.lang.Integer,boolean)>(r1, 1);

        return;
    }

    public void setCurrentMinute(java.lang.Integer)
    {
        android.widget.TimePicker r0;
        java.lang.Integer r1, $r2;
        android.widget.NumberPicker $r3;
        int $i0;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: java.lang.Integer;

        $r2 = virtualinvoke r0.<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>();

        if r1 != $r2 goto label1;

        return;

     label1:
        $r3 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<android.widget.NumberPicker: void setValue(int)>($i0);

        specialinvoke r0.<android.widget.TimePicker: void onTimeChanged()>();

        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.TimePicker r0;
        boolean z0, $z1;
        android.widget.NumberPicker $r1, $r3, $r4, $r6;
        android.widget.TextView $r2, $r7;
        android.widget.Button $r5;

        r0 := @this: android.widget.TimePicker;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.TimePicker: boolean mIsEnabled>;

        if $z1 != z0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void setEnabled(boolean)>(z0);

        $r1 = r0.<android.widget.TimePicker: android.widget.NumberPicker mMinuteSpinner>;

        virtualinvoke $r1.<android.widget.NumberPicker: void setEnabled(boolean)>(z0);

        $r2 = r0.<android.widget.TimePicker: android.widget.TextView mDivider>;

        if $r2 == null goto label2;

        $r7 = r0.<android.widget.TimePicker: android.widget.TextView mDivider>;

        virtualinvoke $r7.<android.widget.TextView: void setEnabled(boolean)>(z0);

     label2:
        $r3 = r0.<android.widget.TimePicker: android.widget.NumberPicker mHourSpinner>;

        virtualinvoke $r3.<android.widget.NumberPicker: void setEnabled(boolean)>(z0);

        $r4 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        if $r4 == null goto label4;

        $r6 = r0.<android.widget.TimePicker: android.widget.NumberPicker mAmPmSpinner>;

        virtualinvoke $r6.<android.widget.NumberPicker: void setEnabled(boolean)>(z0);

     label3:
        r0.<android.widget.TimePicker: boolean mIsEnabled> = z0;

        return;

     label4:
        $r5 = r0.<android.widget.TimePicker: android.widget.Button mAmPmButton>;

        virtualinvoke $r5.<android.widget.Button: void setEnabled(boolean)>(z0);

        goto label3;
    }

    public void setIs24HourView(java.lang.Boolean)
    {
        android.widget.TimePicker r0;
        java.lang.Boolean r1;
        int i0;
        boolean $z0, $z1, $z2;
        java.lang.Integer $r2, $r3;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: java.lang.Boolean;

        $z0 = r0.<android.widget.TimePicker: boolean mIs24HourView>;

        $z1 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != $z1 goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.<android.widget.TimePicker: java.lang.Integer getCurrentHour()>();

        i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $z2 = virtualinvoke r1.<java.lang.Boolean: boolean booleanValue()>();

        r0.<android.widget.TimePicker: boolean mIs24HourView> = $z2;

        specialinvoke r0.<android.widget.TimePicker: void getHourFormatData()>();

        specialinvoke r0.<android.widget.TimePicker: void updateHourControl()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke r0.<android.widget.TimePicker: void setCurrentHour(java.lang.Integer,boolean)>($r3, 0);

        specialinvoke r0.<android.widget.TimePicker: void updateMinuteControl()>();

        specialinvoke r0.<android.widget.TimePicker: void updateAmPmControl()>();

        return;
    }

    public void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)
    {
        android.widget.TimePicker r0;
        android.widget.TimePicker$OnTimeChangedListener r1;

        r0 := @this: android.widget.TimePicker;

        r1 := @parameter0: android.widget.TimePicker$OnTimeChangedListener;

        r0.<android.widget.TimePicker: android.widget.TimePicker$OnTimeChangedListener mOnTimeChangedListener> = r1;

        return;
    }
}
