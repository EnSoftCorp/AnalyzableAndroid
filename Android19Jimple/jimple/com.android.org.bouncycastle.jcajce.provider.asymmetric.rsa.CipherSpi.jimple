public class com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi extends com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi
{
    private java.io.ByteArrayOutputStream bOut;
    private com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher;
    private java.security.AlgorithmParameters engineParams;
    private java.security.spec.AlgorithmParameterSpec paramSpec;
    private boolean privateKeyOnly;
    private boolean publicKeyOnly;

    public void <init>(com.android.org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher r1;
        java.io.ByteArrayOutputStream $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean publicKeyOnly> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean privateKeyOnly> = 0;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = r1;

        return;
    }

    public void <init>(javax.crypto.spec.OAEPParameterSpec)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        javax.crypto.spec.OAEPParameterSpec r1;
        javax.crypto.NoSuchPaddingException r2, $r4;
        java.io.ByteArrayOutputStream $r3;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: javax.crypto.spec.OAEPParameterSpec;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean publicKeyOnly> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean privateKeyOnly> = 0;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut> = $r3;

     label1:
        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke r2.<javax.crypto.NoSuchPaddingException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label3;
    }

    public void <init>(boolean, boolean, com.android.org.bouncycastle.crypto.AsymmetricBlockCipher)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        boolean z0, z1;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher r1;
        java.io.ByteArrayOutputStream $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 := @parameter2: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean publicKeyOnly> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean privateKeyOnly> = 0;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut> = $r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean publicKeyOnly> = z0;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean privateKeyOnly> = z1;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = r1;

        return;
    }

    private void initFromSpec(javax.crypto.spec.OAEPParameterSpec) throws javax.crypto.NoSuchPaddingException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        javax.crypto.spec.OAEPParameterSpec r1;
        java.security.spec.MGF1ParameterSpec r2;
        com.android.org.bouncycastle.crypto.Digest r3;
        java.security.spec.AlgorithmParameterSpec $r4;
        java.lang.String $r5, $r14, $r15;
        com.android.org.bouncycastle.crypto.encodings.OAEPEncoding $r6;
        com.android.org.bouncycastle.crypto.engines.RSABlindedEngine $r7;
        javax.crypto.spec.PSource $r8;
        javax.crypto.spec.PSource$PSpecified $r9;
        byte[] $r10;
        javax.crypto.NoSuchPaddingException $r11;
        java.lang.StringBuilder $r12, $r13, $r16;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: javax.crypto.spec.OAEPParameterSpec;

        $r4 = virtualinvoke r1.<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        r2 = (java.security.spec.MGF1ParameterSpec) $r4;

        $r5 = virtualinvoke r2.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        r3 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.util.DigestFactory: com.android.org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r5);

        if r3 != null goto label1;

        $r11 = new javax.crypto.NoSuchPaddingException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on OAEP constructor for digest algorithm: ");

        $r14 = virtualinvoke r2.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label1:
        $r6 = new com.android.org.bouncycastle.crypto.encodings.OAEPEncoding;

        $r7 = new com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r7.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        $r8 = virtualinvoke r1.<javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.PSource getPSource()>();

        $r9 = (javax.crypto.spec.PSource$PSpecified) $r8;

        $r10 = virtualinvoke $r9.<javax.crypto.spec.PSource$PSpecified: byte[] getValue()>();

        specialinvoke $r6.<com.android.org.bouncycastle.crypto.encodings.OAEPEncoding: void <init>(com.android.org.bouncycastle.crypto.AsymmetricBlockCipher,com.android.org.bouncycastle.crypto.Digest,byte[])>($r7, r3, $r10);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r6;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.security.spec.AlgorithmParameterSpec paramSpec> = r1;

        return;
    }

    protected int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        byte[] r1, r2, r5, r6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13;
        java.lang.Throwable r3, $r19;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException r4, $r20;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r7, $r9, $r11, $r15;
        boolean $z0;
        java.io.ByteArrayOutputStream $r8, $r10, $r12, $r14, $r17, $r22;
        byte $b8;
        java.lang.ArrayIndexOutOfBoundsException $r13, $r16;
        java.lang.String $r18;
        javax.crypto.BadPaddingException $r21;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        if r1 == null goto label1;

        $r17 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r17.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

     label1:
        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z0 = $r7 instanceof com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z0 == 0 goto label2;

        $r14 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        $i11 = virtualinvoke $r14.<java.io.ByteArrayOutputStream: int size()>();

        $r15 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i12 = interfaceinvoke $r15.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $i13 = 1 + $i12;

        if $i11 <= $i13 goto label3;

        $r16 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r16.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r16;

     label2:
        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        $i4 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: int size()>();

        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i5 = interfaceinvoke $r9.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        if $i4 <= $i5 goto label3;

        $r13 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r13.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r13;

     label3:
        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        r5 = virtualinvoke $r10.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r11 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i6 = lengthof r5;

        r6 = interfaceinvoke $r11.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r5, 0, $i6);

     label4:
        $r12 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r12.<java.io.ByteArrayOutputStream: void reset()>();

        i3 = 0;

     label5:
        $i7 = lengthof r6;

        if i3 == $i7 goto label9;

        $i10 = i2 + i3;

        $b8 = r6[i3];

        r2[$i10] = $b8;

        i3 = i3 + 1;

        goto label5;

     label6:
        $r20 := @caughtexception;

        r4 = $r20;

     label7:
        $r21 = new javax.crypto.BadPaddingException;

        $r18 = virtualinvoke r4.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r21.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r18);

        throw $r21;

     label8:
        $r19 := @caughtexception;

        r3 = $r19;

        $r22 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r22.<java.io.ByteArrayOutputStream: void reset()>();

        throw r3;

     label9:
        $i9 = lengthof r6;

        return $i9;

        catch com.android.org.bouncycastle.crypto.InvalidCipherTextException from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    protected byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        byte[] r1, r3, r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.org.bouncycastle.crypto.InvalidCipherTextException r2, $r17;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r5, $r7, $r10, $r13;
        boolean $z0;
        java.io.ByteArrayOutputStream $r6, $r8, $r9, $r12, $r14;
        java.lang.ArrayIndexOutOfBoundsException $r11, $r15;
        javax.crypto.BadPaddingException $r16;
        java.lang.String $r18;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 == null goto label1;

        $r14 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r14.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

     label1:
        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z0 = $r5 instanceof com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z0 == 0 goto label2;

        $r12 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        $i5 = virtualinvoke $r12.<java.io.ByteArrayOutputStream: int size()>();

        $r13 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i7 = interfaceinvoke $r13.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $i6 = 1 + $i7;

        if $i5 <= $i6 goto label3;

        $r15 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r15.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r15;

     label2:
        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        $i2 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: int size()>();

        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i3 = interfaceinvoke $r7.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        if $i2 <= $i3 goto label3;

        $r11 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r11.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r11;

     label3:
        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        r3 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void reset()>();

        $r10 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i4 = lengthof r3;

        r4 = interfaceinvoke $r10.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: byte[] processBlock(byte[],int,int)>(r3, 0, $i4);

     label4:
        return r4;

     label5:
        $r17 := @caughtexception;

        r2 = $r17;

        $r16 = new javax.crypto.BadPaddingException;

        $r18 = virtualinvoke r2.<com.android.org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r16.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r18);

        throw $r16;

        catch com.android.org.bouncycastle.crypto.InvalidCipherTextException from label3 to label4 with label5;
    }

    protected int engineGetBlockSize()
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        int i0;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r2;
        java.lang.NullPointerException $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

     label1:
        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        i0 = interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RSA Cipher not initialised");

        throw $r4;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    protected int engineGetKeySize(java.security.Key)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        java.security.Key r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.security.interfaces.RSAPublicKey $r3;
        java.math.BigInteger $r4, $r6;
        int $i0, $i1;
        java.security.interfaces.RSAPrivateKey $r5;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: java.security.Key;

        $z0 = r1 instanceof java.security.interfaces.RSAPrivateKey;

        if $z0 == 0 goto label1;

        $r5 = (java.security.interfaces.RSAPrivateKey) r1;

        $r6 = interfaceinvoke $r5.<java.security.interfaces.RSAPrivateKey: java.math.BigInteger getModulus()>();

        $i1 = virtualinvoke $r6.<java.math.BigInteger: int bitLength()>();

        return $i1;

     label1:
        $z1 = r1 instanceof java.security.interfaces.RSAPublicKey;

        if $z1 == 0 goto label2;

        $r3 = (java.security.interfaces.RSAPublicKey) r1;

        $r4 = interfaceinvoke $r3.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getModulus()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int bitLength()>();

        return $i0;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("not an RSA key!");

        throw $r2;
    }

    protected int engineGetOutputSize(int)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        int i0, i1;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r2;
        java.lang.NullPointerException $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        i1 = interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();

     label2:
        return i1;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("RSA Cipher not initialised");

        throw $r4;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        java.lang.Exception r1, $r8;
        java.security.AlgorithmParameters $r2, $r3, $r5, $r7;
        java.security.spec.AlgorithmParameterSpec $r4, $r6;
        java.lang.RuntimeException $r9;
        java.lang.String $r10;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.security.AlgorithmParameters engineParams>;

        if $r2 != null goto label2;

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.security.spec.AlgorithmParameterSpec paramSpec>;

        if $r4 == null goto label2;

     label1:
        $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>("OAEP", "BC");

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.security.AlgorithmParameters engineParams> = $r5;

        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.security.AlgorithmParameters engineParams>;

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.security.spec.AlgorithmParameterSpec paramSpec>;

        virtualinvoke $r7.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r6);

     label2:
        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.security.AlgorithmParameters engineParams>;

        return $r3;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = new java.lang.RuntimeException;

        $r10 = virtualinvoke r1.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        int i0;
        java.security.Key r1;
        java.security.AlgorithmParameters r2;
        java.security.SecureRandom r3;
        java.security.spec.AlgorithmParameterSpec r4, r6;
        java.security.spec.InvalidParameterSpecException r5, $r7;
        java.security.InvalidAlgorithmParameterException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r13;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.AlgorithmParameters;

        r3 := @parameter3: java.security.SecureRandom;

        r4 = null;

        if r2 == null goto label3;

     label1:
        r6 = virtualinvoke r2.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>(class "javax/crypto/spec/OAEPParameterSpec");

     label2:
        r4 = r6;

     label3:
        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.security.AlgorithmParameters engineParams> = r2;

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, r4, r3);

        return;

     label4:
        $r7 := @caughtexception;

        r5 = $r7;

        $r8 = new java.security.InvalidAlgorithmParameterException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot recognise parameters: ");

        $r11 = virtualinvoke r5.<java.security.spec.InvalidParameterSpecException: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r5);

        throw $r8;

        catch java.security.spec.InvalidParameterSpecException from label1 to label2 with label4;
    }

    protected void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        int i0;
        java.security.Key r1;
        java.security.SecureRandom r2;
        java.security.InvalidAlgorithmParameterException r3, $r5;
        java.security.spec.AlgorithmParameterSpec $r4;
        java.security.InvalidKeyException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.SecureRandom;

     label1:
        $r4 = (java.security.spec.AlgorithmParameterSpec) null;

        virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, $r4, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.security.InvalidKeyException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Eeeek! ");

        $r9 = virtualinvoke r3.<java.security.InvalidAlgorithmParameterException: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.InvalidKeyException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r3);

        throw $r6;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    protected void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        int i0;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2, $r27, $r29;
        java.security.SecureRandom r3, $r22;
        com.android.org.bouncycastle.crypto.params.RSAKeyParameters r4;
        com.android.org.bouncycastle.crypto.CipherParameters r5;
        javax.crypto.spec.OAEPParameterSpec r6;
        com.android.org.bouncycastle.crypto.Digest r7, r9;
        java.security.spec.MGF1ParameterSpec r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.security.InvalidKeyException $r10, $r50, $r55;
        java.security.interfaces.RSAPrivateKey $r11;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r12, $r20, $r21;
        java.io.ByteArrayOutputStream $r13;
        java.lang.StringBuilder $r14, $r16, $r17, $r19, $r34, $r35, $r40, $r42, $r44, $r45;
        java.security.InvalidParameterException $r15;
        java.lang.String $r18, $r24, $r26, $r28, $r39, $r41, $r43, $r47, $r49, $r52;
        com.android.org.bouncycastle.crypto.params.ParametersWithRandom $r23, $r25;
        javax.crypto.spec.PSource $r30;
        javax.crypto.spec.PSource$PSpecified $r31;
        com.android.org.bouncycastle.crypto.encodings.OAEPEncoding $r32;
        com.android.org.bouncycastle.crypto.engines.RSABlindedEngine $r33;
        byte[] $r36;
        java.security.InvalidAlgorithmParameterException $r37, $r38, $r48, $r51;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r46;
        java.lang.IllegalArgumentException $r53;
        java.security.interfaces.RSAPublicKey $r54;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        r3 := @parameter3: java.security.SecureRandom;

        if r2 == null goto label01;

        $z7 = r2 instanceof javax.crypto.spec.OAEPParameterSpec;

        if $z7 == 0 goto label14;

     label01:
        $z0 = r1 instanceof java.security.interfaces.RSAPublicKey;

        if $z0 == 0 goto label04;

        $z8 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean privateKeyOnly>;

        if $z8 == 0 goto label02;

        if i0 != 1 goto label02;

        $r55 = new java.security.InvalidKeyException;

        specialinvoke $r55.<java.security.InvalidKeyException: void <init>(java.lang.String)>("mode 1 requires RSAPrivateKey");

        throw $r55;

     label02:
        $r54 = (java.security.interfaces.RSAPublicKey) r1;

        r4 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil: com.android.org.bouncycastle.crypto.params.RSAKeyParameters generatePublicKeyParameter(java.security.interfaces.RSAPublicKey)>($r54);

     label03:
        if r2 == null goto label11;

        r6 = (javax.crypto.spec.OAEPParameterSpec) r2;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.security.spec.AlgorithmParameterSpec paramSpec> = r2;

        $r24 = virtualinvoke r6.<javax.crypto.spec.OAEPParameterSpec: java.lang.String getMGFAlgorithm()>();

        $z5 = virtualinvoke $r24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MGF1");

        if $z5 != 0 goto label07;

        $r47 = virtualinvoke r6.<javax.crypto.spec.OAEPParameterSpec: java.lang.String getMGFAlgorithm()>();

        $r46 = <com.android.org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier id_mgf1>;

        $r52 = virtualinvoke $r46.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z6 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z6 != 0 goto label07;

        $r51 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r51.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unknown mask generation function specified");

        throw $r51;

     label04:
        $z1 = r1 instanceof java.security.interfaces.RSAPrivateKey;

        if $z1 == 0 goto label06;

        $z2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean publicKeyOnly>;

        if $z2 == 0 goto label05;

        if i0 != 1 goto label05;

        $r50 = new java.security.InvalidKeyException;

        specialinvoke $r50.<java.security.InvalidKeyException: void <init>(java.lang.String)>("mode 2 requires RSAPublicKey");

        throw $r50;

     label05:
        $r11 = (java.security.interfaces.RSAPrivateKey) r1;

        r4 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil: com.android.org.bouncycastle.crypto.params.RSAKeyParameters generatePrivateKeyParameter(java.security.interfaces.RSAPrivateKey)>($r11);

        goto label03;

     label06:
        $r10 = new java.security.InvalidKeyException;

        specialinvoke $r10.<java.security.InvalidKeyException: void <init>(java.lang.String)>("unknown key type passed to RSA");

        throw $r10;

     label07:
        $r27 = virtualinvoke r6.<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        $z4 = $r27 instanceof java.security.spec.MGF1ParameterSpec;

        if $z4 != 0 goto label08;

        $r48 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r48.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unkown MGF parameters");

        throw $r48;

     label08:
        $r26 = virtualinvoke r6.<javax.crypto.spec.OAEPParameterSpec: java.lang.String getDigestAlgorithm()>();

        r7 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.util.DigestFactory: com.android.org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r26);

        if r7 != null goto label09;

        $r38 = new java.security.InvalidAlgorithmParameterException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on digest algorithm: ");

        $r43 = virtualinvoke r6.<javax.crypto.spec.OAEPParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r49 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r49);

        throw $r38;

     label09:
        $r29 = virtualinvoke r6.<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()>();

        r8 = (java.security.spec.MGF1ParameterSpec) $r29;

        $r28 = virtualinvoke r8.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        r9 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.util.DigestFactory: com.android.org.bouncycastle.crypto.Digest getDigest(java.lang.String)>($r28);

        if r9 != null goto label10;

        $r37 = new java.security.InvalidAlgorithmParameterException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no match on MGF digest algorithm: ");

        $r41 = virtualinvoke r8.<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()>();

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r39);

        throw $r37;

     label10:
        $r32 = new com.android.org.bouncycastle.crypto.encodings.OAEPEncoding;

        $r33 = new com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r33.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        $r30 = virtualinvoke r6.<javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.PSource getPSource()>();

        $r31 = (javax.crypto.spec.PSource$PSpecified) $r30;

        $r36 = virtualinvoke $r31.<javax.crypto.spec.PSource$PSpecified: byte[] getValue()>();

        specialinvoke $r32.<com.android.org.bouncycastle.crypto.encodings.OAEPEncoding: void <init>(com.android.org.bouncycastle.crypto.AsymmetricBlockCipher,com.android.org.bouncycastle.crypto.Digest,com.android.org.bouncycastle.crypto.Digest,byte[])>($r33, r7, r9, $r36);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r32;

     label11:
        $r12 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z3 = $r12 instanceof com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z3 != 0 goto label18;

        if r3 == null goto label15;

        $r25 = new com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        specialinvoke $r25.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r4, r3);

        r5 = $r25;

     label12:
        $r13 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r13.<java.io.ByteArrayOutputStream: void reset()>();

        tableswitch(i0)
        {
            case 1: goto label16;
            case 2: goto label17;
            case 3: goto label16;
            case 4: goto label17;
            default: goto label13;
        };

     label13:
        $r15 = new java.security.InvalidParameterException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown opmode ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" passed to RSA");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r18);

        throw $r15;

     label14:
        $r53 = new java.lang.IllegalArgumentException;

        specialinvoke $r53.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown parameter type.");

        throw $r53;

     label15:
        $r23 = new com.android.org.bouncycastle.crypto.params.ParametersWithRandom;

        $r22 = new java.security.SecureRandom;

        specialinvoke $r22.<java.security.SecureRandom: void <init>()>();

        specialinvoke $r23.<com.android.org.bouncycastle.crypto.params.ParametersWithRandom: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,java.security.SecureRandom)>(r4, $r22);

        r5 = $r23;

        goto label12;

     label16:
        $r20 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r20.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(1, r5);

        return;

     label17:
        $r21 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        interfaceinvoke $r21.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,com.android.org.bouncycastle.crypto.CipherParameters)>(0, r5);

        return;

     label18:
        r5 = r4;

        goto label12;
    }

    protected void engineSetMode(java.lang.String) throws java.security.NoSuchAlgorithmException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        java.lang.String r1, r2, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.security.NoSuchAlgorithmException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.android.org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r1);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("NONE");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("1");

        if $z2 == 0 goto label3;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean privateKeyOnly> = 1;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean publicKeyOnly> = 0;

        return;

     label3:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z3 == 0 goto label4;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean privateKeyOnly> = 0;

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: boolean publicKeyOnly> = 1;

        return;

     label4:
        $r3 = new java.security.NoSuchAlgorithmException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t support mode ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    protected void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        java.lang.String r1, r2, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        javax.crypto.spec.OAEPParameterSpec $r3, $r4, $r7, $r11, $r17, $r19;
        javax.crypto.spec.PSource$PSpecified $r5, $r9, $r10, $r23;
        java.security.spec.MGF1ParameterSpec $r6, $r8, $r12, $r20;
        java.lang.StringBuilder $r13, $r15, $r16;
        javax.crypto.NoSuchPaddingException $r14;
        com.android.org.bouncycastle.crypto.engines.RSABlindedEngine $r21, $r22;
        com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding $r24;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.android.org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r1);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("NOPADDING");

        if $z0 == 0 goto label01;

        $r22 = new com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r22.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r22;

        return;

     label01:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("PKCS1PADDING");

        if $z1 == 0 goto label02;

        $r24 = new com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding;

        $r21 = new com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        specialinvoke $r21.<com.android.org.bouncycastle.crypto.engines.RSABlindedEngine: void <init>()>();

        specialinvoke $r24.<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: void <init>(com.android.org.bouncycastle.crypto.AsymmetricBlockCipher)>($r21);

        r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher> = $r24;

        return;

     label02:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHMD5ANDMGF1PADDING");

        if $z2 == 0 goto label03;

        $r19 = new javax.crypto.spec.OAEPParameterSpec;

        $r20 = new java.security.spec.MGF1ParameterSpec;

        specialinvoke $r20.<java.security.spec.MGF1ParameterSpec: void <init>(java.lang.String)>("MD5");

        $r23 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r19.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("MD5", "MGF1", $r20, $r23);

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r19);

        return;

     label03:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPPADDING");

        if $z3 == 0 goto label04;

        $r17 = <javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.OAEPParameterSpec DEFAULT>;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r17);

        return;

     label04:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA1ANDMGF1PADDING");

        if $z4 != 0 goto label05;

        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA-1ANDMGF1PADDING");

        if $z5 == 0 goto label06;

     label05:
        $r3 = <javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.OAEPParameterSpec DEFAULT>;

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r3);

        return;

     label06:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA256ANDMGF1PADDING");

        if $z6 != 0 goto label07;

        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA-256ANDMGF1PADDING");

        if $z7 == 0 goto label08;

     label07:
        $r4 = new javax.crypto.spec.OAEPParameterSpec;

        $r6 = <java.security.spec.MGF1ParameterSpec: java.security.spec.MGF1ParameterSpec SHA256>;

        $r5 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r4.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-256", "MGF1", $r6, $r5);

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r4);

        return;

     label08:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA384ANDMGF1PADDING");

        if $z8 != 0 goto label09;

        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA-384ANDMGF1PADDING");

        if $z10 == 0 goto label10;

     label09:
        $r7 = new javax.crypto.spec.OAEPParameterSpec;

        $r8 = <java.security.spec.MGF1ParameterSpec: java.security.spec.MGF1ParameterSpec SHA384>;

        $r9 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r7.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-384", "MGF1", $r8, $r9);

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r7);

        return;

     label10:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA512ANDMGF1PADDING");

        if $z9 != 0 goto label11;

        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("OAEPWITHSHA-512ANDMGF1PADDING");

        if $z11 == 0 goto label12;

     label11:
        $r11 = new javax.crypto.spec.OAEPParameterSpec;

        $r12 = <java.security.spec.MGF1ParameterSpec: java.security.spec.MGF1ParameterSpec SHA512>;

        $r10 = <javax.crypto.spec.PSource$PSpecified: javax.crypto.spec.PSource$PSpecified DEFAULT>;

        specialinvoke $r11.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>("SHA-512", "MGF1", $r12, $r10);

        specialinvoke r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: void initFromSpec(javax.crypto.spec.OAEPParameterSpec)>($r11);

        return;

     label12:
        $r14 = new javax.crypto.NoSuchPaddingException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unavailable with RSA.");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r18);

        throw $r14;
    }

    protected int engineUpdate(byte[], int, int, byte[], int)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        byte[] r1, r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.io.ByteArrayOutputStream $r3, $r5, $r8;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r4, $r6, $r9;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r7, $r10;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z0 = $r4 instanceof com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z0 == 0 goto label1;

        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        $i5 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: int size()>();

        $r9 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i7 = interfaceinvoke $r9.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $i6 = 1 + $i7;

        if $i5 <= $i6 goto label2;

        $r10 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r10.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r10;

     label1:
        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        $i3 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: int size()>();

        $r6 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i4 = interfaceinvoke $r6.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        if $i3 <= $i4 goto label2;

        $r7 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r7.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r7;

     label2:
        return 0;
    }

    protected byte[] engineUpdate(byte[], int, int)
    {
        com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.io.ByteArrayOutputStream $r2, $r4, $r7;
        com.android.org.bouncycastle.crypto.AsymmetricBlockCipher $r3, $r5, $r8;
        boolean $z0;
        java.lang.ArrayIndexOutOfBoundsException $r6, $r9;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $r3 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $z0 = $r3 instanceof com.android.org.bouncycastle.crypto.engines.RSABlindedEngine;

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        $i4 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: int size()>();

        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i6 = interfaceinvoke $r8.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        $i5 = 1 + $i6;

        if $i4 <= $i5 goto label2;

        $r9 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r9.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r9;

     label1:
        $r4 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: java.io.ByteArrayOutputStream bOut>;

        $i2 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: int size()>();

        $r5 = r0.<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi: com.android.org.bouncycastle.crypto.AsymmetricBlockCipher cipher>;

        $i3 = interfaceinvoke $r5.<com.android.org.bouncycastle.crypto.AsymmetricBlockCipher: int getInputBlockSize()>();

        if $i2 <= $i3 goto label2;

        $r6 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>("too much data for RSA block");

        throw $r6;

     label2:
        return null;
    }
}
