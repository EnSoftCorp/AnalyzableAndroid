class com.android.org.chromium.media.AudioRecordInput extends java.lang.Object
{
    private android.media.audiofx.AcousticEchoCanceler mAEC;
    private android.media.AudioRecord mAudioRecord;
    private com.android.org.chromium.media.AudioRecordInput$AudioRecordThread mAudioRecordThread;
    private final int mBitsPerSample;
    private java.nio.ByteBuffer mBuffer;
    private final int mChannels;
    private final int mHardwareDelayBytes;
    private final long mNativeAudioRecordInputStream;
    private final int mSampleRate;
    private final boolean mUsePlatformAEC;

    private void <init>(long, int, int, int, int, boolean)
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        long l0, $l9;
        int i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        boolean z0;
        java.nio.ByteBuffer $r1, $r2;

        r0 := @this: com.android.org.chromium.media.AudioRecordInput;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.media.AudioRecordInput: long mNativeAudioRecordInputStream> = l0;

        r0.<com.android.org.chromium.media.AudioRecordInput: int mSampleRate> = i1;

        r0.<com.android.org.chromium.media.AudioRecordInput: int mChannels> = i2;

        r0.<com.android.org.chromium.media.AudioRecordInput: int mBitsPerSample> = i3;

        $i5 = i1 * 100;

        $i6 = $i5 / 1000;

        $i7 = i3 * $i6;

        $i8 = $i7 / 8;

        r0.<com.android.org.chromium.media.AudioRecordInput: int mHardwareDelayBytes> = $i8;

        r0.<com.android.org.chromium.media.AudioRecordInput: boolean mUsePlatformAEC> = z0;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(i4);

        r0.<com.android.org.chromium.media.AudioRecordInput: java.nio.ByteBuffer mBuffer> = $r1;

        $l9 = r0.<com.android.org.chromium.media.AudioRecordInput: long mNativeAudioRecordInputStream>;

        $r2 = r0.<com.android.org.chromium.media.AudioRecordInput: java.nio.ByteBuffer mBuffer>;

        specialinvoke r0.<com.android.org.chromium.media.AudioRecordInput: void nativeCacheDirectBufferAddress(long,java.nio.ByteBuffer)>($l9, $r2);

        return;
    }

    static android.media.AudioRecord access$000(com.android.org.chromium.media.AudioRecordInput)
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        android.media.AudioRecord $r1;

        r0 := @parameter0: com.android.org.chromium.media.AudioRecordInput;

        $r1 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.AudioRecord mAudioRecord>;

        return $r1;
    }

    static java.nio.ByteBuffer access$100(com.android.org.chromium.media.AudioRecordInput)
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        java.nio.ByteBuffer $r1;

        r0 := @parameter0: com.android.org.chromium.media.AudioRecordInput;

        $r1 = r0.<com.android.org.chromium.media.AudioRecordInput: java.nio.ByteBuffer mBuffer>;

        return $r1;
    }

    static long access$200(com.android.org.chromium.media.AudioRecordInput)
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        long $l0;

        r0 := @parameter0: com.android.org.chromium.media.AudioRecordInput;

        $l0 = r0.<com.android.org.chromium.media.AudioRecordInput: long mNativeAudioRecordInputStream>;

        return $l0;
    }

    static int access$300(com.android.org.chromium.media.AudioRecordInput)
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        int $i0;

        r0 := @parameter0: com.android.org.chromium.media.AudioRecordInput;

        $i0 = r0.<com.android.org.chromium.media.AudioRecordInput: int mHardwareDelayBytes>;

        return $i0;
    }

    static void access$400(com.android.org.chromium.media.AudioRecordInput, long, int, int)
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        long l0;
        int i1, i2;

        r0 := @parameter0: com.android.org.chromium.media.AudioRecordInput;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.org.chromium.media.AudioRecordInput: void nativeOnData(long,int,int)>(l0, i1, i2);

        return;
    }

    private void close()
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        com.android.org.chromium.media.AudioRecordInput$AudioRecordThread $r1;
        android.media.AudioRecord $r2, $r4;
        android.media.audiofx.AcousticEchoCanceler $r3, $r5;

        r0 := @this: com.android.org.chromium.media.AudioRecordInput;

        $r1 = r0.<com.android.org.chromium.media.AudioRecordInput: com.android.org.chromium.media.AudioRecordInput$AudioRecordThread mAudioRecordThread>;

        if $r1 == null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioRecordInput", "close() called before stop().");

     label1:
        return;

     label2:
        $r2 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.AudioRecord mAudioRecord>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.audiofx.AcousticEchoCanceler mAEC>;

        if $r3 == null goto label3;

        $r5 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.audiofx.AcousticEchoCanceler mAEC>;

        virtualinvoke $r5.<android.media.audiofx.AcousticEchoCanceler: void release()>();

        r0.<com.android.org.chromium.media.AudioRecordInput: android.media.audiofx.AcousticEchoCanceler mAEC> = null;

     label3:
        $r4 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.AudioRecord mAudioRecord>;

        virtualinvoke $r4.<android.media.AudioRecord: void release()>();

        r0.<com.android.org.chromium.media.AudioRecordInput: android.media.AudioRecord mAudioRecord> = null;

        return;
    }

    private static com.android.org.chromium.media.AudioRecordInput createAudioRecordInput(long, int, int, int, int, boolean)
    {
        long l0;
        int i1, i2, i3, i4;
        boolean z0;
        com.android.org.chromium.media.AudioRecordInput $r0;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        z0 := @parameter5: boolean;

        $r0 = new com.android.org.chromium.media.AudioRecordInput;

        specialinvoke $r0.<com.android.org.chromium.media.AudioRecordInput: void <init>(long,int,int,int,int,boolean)>(l0, i1, i2, i3, i4, z0);

        return $r0;
    }

    private native void nativeCacheDirectBufferAddress(long, java.nio.ByteBuffer);

    private native void nativeOnData(long, int, int);

    private boolean open()
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        byte b0, b1;
        int i2, i3, i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i14, $i15, $i16;
        java.lang.IllegalArgumentException r1, $r25;
        android.media.AudioRecord $r2, $r12, $r14;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r10, $r17, $r18, $r19, $r20, $r23, $r24;
        java.lang.String $r6, $r9, $r21, $r22;
        java.nio.ByteBuffer $r11;
        android.media.audiofx.AcousticEchoCanceler $r13, $r15, $r16;
        boolean $z0, $z1;

        r0 := @this: com.android.org.chromium.media.AudioRecordInput;

        $r2 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.AudioRecord mAudioRecord>;

        if $r2 == null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioRecordInput", "open() called twice without a close()");

        return 0;

     label01:
        $i5 = r0.<com.android.org.chromium.media.AudioRecordInput: int mChannels>;

        if $i5 != 1 goto label04;

        b0 = 16;

     label02:
        $i10 = r0.<com.android.org.chromium.media.AudioRecordInput: int mBitsPerSample>;

        if $i10 != 8 goto label06;

        b1 = 3;

     label03:
        $i12 = r0.<com.android.org.chromium.media.AudioRecordInput: int mSampleRate>;

        i2 = staticinvoke <android.media.AudioRecord: int getMinBufferSize(int,int,int)>($i12, b0, b1);

        if i2 >= 0 goto label08;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMinBufferSize error: ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioRecordInput", $r22);

        return 0;

     label04:
        $i6 = r0.<com.android.org.chromium.media.AudioRecordInput: int mChannels>;

        if $i6 != 2 goto label05;

        b0 = 12;

        goto label02;

     label05:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported number of channels: ");

        $i7 = r0.<com.android.org.chromium.media.AudioRecordInput: int mChannels>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioRecordInput", $r6);

        return 0;

     label06:
        $i9 = r0.<com.android.org.chromium.media.AudioRecordInput: int mBitsPerSample>;

        if $i9 != 16 goto label07;

        b1 = 2;

        goto label03;

     label07:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported bits per sample: ");

        $i11 = r0.<com.android.org.chromium.media.AudioRecordInput: int mBitsPerSample>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioRecordInput", $r9);

        return 0;

     label08:
        $r11 = r0.<com.android.org.chromium.media.AudioRecordInput: java.nio.ByteBuffer mBuffer>;

        $i15 = virtualinvoke $r11.<java.nio.ByteBuffer: int capacity()>();

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i15, i2);

     label09:
        $r12 = new android.media.AudioRecord;

        $i14 = r0.<com.android.org.chromium.media.AudioRecordInput: int mSampleRate>;

        specialinvoke $r12.<android.media.AudioRecord: void <init>(int,int,int,int,int)>(7, $i14, b0, b1, i3);

        r0.<com.android.org.chromium.media.AudioRecordInput: android.media.AudioRecord mAudioRecord> = $r12;

     label10:
        $z0 = staticinvoke <android.media.audiofx.AcousticEchoCanceler: boolean isAvailable()>();

        if $z0 == 0 goto label13;

        $r14 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.AudioRecord mAudioRecord>;

        $i16 = virtualinvoke $r14.<android.media.AudioRecord: int getAudioSessionId()>();

        $r13 = staticinvoke <android.media.audiofx.AcousticEchoCanceler: android.media.audiofx.AcousticEchoCanceler create(int)>($i16);

        r0.<com.android.org.chromium.media.AudioRecordInput: android.media.audiofx.AcousticEchoCanceler mAEC> = $r13;

        $r16 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.audiofx.AcousticEchoCanceler mAEC>;

        if $r16 != null goto label12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioRecordInput", "AcousticEchoCanceler.create failed");

        return 0;

     label11:
        $r25 := @caughtexception;

        r1 = $r25;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("AudioRecordInput", "AudioRecord failed", r1);

        return 0;

     label12:
        $r15 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.audiofx.AcousticEchoCanceler mAEC>;

        $z1 = r0.<com.android.org.chromium.media.AudioRecordInput: boolean mUsePlatformAEC>;

        i4 = virtualinvoke $r15.<android.media.audiofx.AcousticEchoCanceler: int setEnabled(boolean)>($z1);

        if i4 == 0 goto label13;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setEnabled error: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioRecordInput", $r21);

        return 0;

     label13:
        return 1;

        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
    }

    private void start()
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        android.media.AudioRecord $r1;
        com.android.org.chromium.media.AudioRecordInput$AudioRecordThread $r2, $r3, $r4;

        r0 := @this: com.android.org.chromium.media.AudioRecordInput;

        $r1 = r0.<com.android.org.chromium.media.AudioRecordInput: android.media.AudioRecord mAudioRecord>;

        if $r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioRecordInput", "start() called before open().");

     label1:
        return;

     label2:
        $r2 = r0.<com.android.org.chromium.media.AudioRecordInput: com.android.org.chromium.media.AudioRecordInput$AudioRecordThread mAudioRecordThread>;

        if $r2 != null goto label1;

        $r3 = new com.android.org.chromium.media.AudioRecordInput$AudioRecordThread;

        specialinvoke $r3.<com.android.org.chromium.media.AudioRecordInput$AudioRecordThread: void <init>(com.android.org.chromium.media.AudioRecordInput,com.android.org.chromium.media.AudioRecordInput$1)>(r0, null);

        r0.<com.android.org.chromium.media.AudioRecordInput: com.android.org.chromium.media.AudioRecordInput$AudioRecordThread mAudioRecordThread> = $r3;

        $r4 = r0.<com.android.org.chromium.media.AudioRecordInput: com.android.org.chromium.media.AudioRecordInput$AudioRecordThread mAudioRecordThread>;

        virtualinvoke $r4.<com.android.org.chromium.media.AudioRecordInput$AudioRecordThread: void start()>();

        return;
    }

    private void stop()
    {
        com.android.org.chromium.media.AudioRecordInput r0;
        com.android.org.chromium.media.AudioRecordInput$AudioRecordThread $r1, $r2;

        r0 := @this: com.android.org.chromium.media.AudioRecordInput;

        $r1 = r0.<com.android.org.chromium.media.AudioRecordInput: com.android.org.chromium.media.AudioRecordInput$AudioRecordThread mAudioRecordThread>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.org.chromium.media.AudioRecordInput: com.android.org.chromium.media.AudioRecordInput$AudioRecordThread mAudioRecordThread>;

        virtualinvoke $r2.<com.android.org.chromium.media.AudioRecordInput$AudioRecordThread: void joinRecordThread()>();

        r0.<com.android.org.chromium.media.AudioRecordInput: com.android.org.chromium.media.AudioRecordInput$AudioRecordThread mAudioRecordThread> = null;

        return;
    }
}
