public class android.view.GraphicBuffer extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public static final int USAGE_HW_2D;
    public static final int USAGE_HW_COMPOSER;
    public static final int USAGE_HW_MASK;
    public static final int USAGE_HW_RENDER;
    public static final int USAGE_HW_TEXTURE;
    public static final int USAGE_HW_VIDEO_ENCODER;
    public static final int USAGE_PROTECTED;
    public static final int USAGE_SOFTWARE_MASK;
    public static final int USAGE_SW_READ_MASK;
    public static final int USAGE_SW_READ_NEVER;
    public static final int USAGE_SW_READ_OFTEN;
    public static final int USAGE_SW_READ_RARELY;
    public static final int USAGE_SW_WRITE_MASK;
    public static final int USAGE_SW_WRITE_NEVER;
    public static final int USAGE_SW_WRITE_OFTEN;
    public static final int USAGE_SW_WRITE_RARELY;
    private android.graphics.Canvas mCanvas;
    private boolean mDestroyed;
    private final int mFormat;
    private final int mHeight;
    private final int mNativeObject;
    private int mSaveCount;
    private final int mUsage;
    private final int mWidth;

    static void <clinit>()
    {
        android.view.GraphicBuffer$1 $r0;

        <android.view.GraphicBuffer: int USAGE_SW_WRITE_RARELY> = 32;

        <android.view.GraphicBuffer: int USAGE_SW_WRITE_OFTEN> = 48;

        <android.view.GraphicBuffer: int USAGE_SW_WRITE_NEVER> = 0;

        <android.view.GraphicBuffer: int USAGE_SW_WRITE_MASK> = 240;

        <android.view.GraphicBuffer: int USAGE_SW_READ_RARELY> = 2;

        <android.view.GraphicBuffer: int USAGE_SW_READ_OFTEN> = 3;

        <android.view.GraphicBuffer: int USAGE_SW_READ_NEVER> = 0;

        <android.view.GraphicBuffer: int USAGE_SW_READ_MASK> = 15;

        <android.view.GraphicBuffer: int USAGE_SOFTWARE_MASK> = 255;

        <android.view.GraphicBuffer: int USAGE_PROTECTED> = 16384;

        <android.view.GraphicBuffer: int USAGE_HW_VIDEO_ENCODER> = 65536;

        <android.view.GraphicBuffer: int USAGE_HW_TEXTURE> = 256;

        <android.view.GraphicBuffer: int USAGE_HW_RENDER> = 512;

        <android.view.GraphicBuffer: int USAGE_HW_MASK> = 466688;

        <android.view.GraphicBuffer: int USAGE_HW_COMPOSER> = 2048;

        <android.view.GraphicBuffer: int USAGE_HW_2D> = 1024;

        $r0 = new android.view.GraphicBuffer$1;

        specialinvoke $r0.<android.view.GraphicBuffer$1: void <init>()>();

        <android.view.GraphicBuffer: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(int, int, int, int, int)
    {
        android.view.GraphicBuffer r0;
        int i0, i1, i2, i3, i4;

        r0 := @this: android.view.GraphicBuffer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.GraphicBuffer: int mWidth> = i0;

        r0.<android.view.GraphicBuffer: int mHeight> = i1;

        r0.<android.view.GraphicBuffer: int mFormat> = i2;

        r0.<android.view.GraphicBuffer: int mUsage> = i3;

        r0.<android.view.GraphicBuffer: int mNativeObject> = i4;

        return;
    }

    void <init>(int, int, int, int, int, android.view.GraphicBuffer$1)
    {
        android.view.GraphicBuffer r0;
        int i0, i1, i2, i3, i4;
        android.view.GraphicBuffer$1 r1;

        r0 := @this: android.view.GraphicBuffer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: android.view.GraphicBuffer$1;

        specialinvoke r0.<android.view.GraphicBuffer: void <init>(int,int,int,int,int)>(i0, i1, i2, i3, i4);

        return;
    }

    static int access$000(android.os.Parcel)
    {
        android.os.Parcel r0;
        int $i0;

        r0 := @parameter0: android.os.Parcel;

        $i0 = staticinvoke <android.view.GraphicBuffer: int nReadGraphicBufferFromParcel(android.os.Parcel)>(r0);

        return $i0;
    }

    public static android.view.GraphicBuffer create(int, int, int, int)
    {
        int i0, i1, i2, i3, i4;
        android.view.GraphicBuffer $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 = staticinvoke <android.view.GraphicBuffer: int nCreateGraphicBuffer(int,int,int,int)>(i0, i1, i2, i3);

        if i4 == 0 goto label1;

        $r0 = new android.view.GraphicBuffer;

        specialinvoke $r0.<android.view.GraphicBuffer: void <init>(int,int,int,int,int)>(i0, i1, i2, i3, i4);

        return $r0;

     label1:
        return null;
    }

    private static native int nCreateGraphicBuffer(int, int, int, int);

    private static native void nDestroyGraphicBuffer(int);

    private static native boolean nLockCanvas(int, android.graphics.Canvas, android.graphics.Rect);

    private static native int nReadGraphicBufferFromParcel(android.os.Parcel);

    private static native boolean nUnlockCanvasAndPost(int, android.graphics.Canvas);

    private static native void nWriteGraphicBufferToParcel(int, android.os.Parcel);

    public int describeContents()
    {
        android.view.GraphicBuffer r0;

        r0 := @this: android.view.GraphicBuffer;

        return 0;
    }

    public void destroy()
    {
        android.view.GraphicBuffer r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.view.GraphicBuffer;

        $z0 = r0.<android.view.GraphicBuffer: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.view.GraphicBuffer: boolean mDestroyed> = 1;

        $i0 = r0.<android.view.GraphicBuffer: int mNativeObject>;

        staticinvoke <android.view.GraphicBuffer: void nDestroyGraphicBuffer(int)>($i0);

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.view.GraphicBuffer r0;
        java.lang.Throwable r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @this: android.view.GraphicBuffer;

     label1:
        $z0 = r0.<android.view.GraphicBuffer: boolean mDestroyed>;

        if $z0 != 0 goto label2;

        $i0 = r0.<android.view.GraphicBuffer: int mNativeObject>;

        staticinvoke <android.view.GraphicBuffer: void nDestroyGraphicBuffer(int)>($i0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getFormat()
    {
        android.view.GraphicBuffer r0;
        int $i0;

        r0 := @this: android.view.GraphicBuffer;

        $i0 = r0.<android.view.GraphicBuffer: int mFormat>;

        return $i0;
    }

    public int getHeight()
    {
        android.view.GraphicBuffer r0;
        int $i0;

        r0 := @this: android.view.GraphicBuffer;

        $i0 = r0.<android.view.GraphicBuffer: int mHeight>;

        return $i0;
    }

    public int getUsage()
    {
        android.view.GraphicBuffer r0;
        int $i0;

        r0 := @this: android.view.GraphicBuffer;

        $i0 = r0.<android.view.GraphicBuffer: int mUsage>;

        return $i0;
    }

    public int getWidth()
    {
        android.view.GraphicBuffer r0;
        int $i0;

        r0 := @this: android.view.GraphicBuffer;

        $i0 = r0.<android.view.GraphicBuffer: int mWidth>;

        return $i0;
    }

    public boolean isDestroyed()
    {
        android.view.GraphicBuffer r0;
        boolean $z0;

        r0 := @this: android.view.GraphicBuffer;

        $z0 = r0.<android.view.GraphicBuffer: boolean mDestroyed>;

        return $z0;
    }

    public android.graphics.Canvas lockCanvas()
    {
        android.view.GraphicBuffer r0;
        android.graphics.Canvas $r1;

        r0 := @this: android.view.GraphicBuffer;

        $r1 = virtualinvoke r0.<android.view.GraphicBuffer: android.graphics.Canvas lockCanvas(android.graphics.Rect)>(null);

        return $r1;
    }

    public android.graphics.Canvas lockCanvas(android.graphics.Rect)
    {
        android.view.GraphicBuffer r0;
        android.graphics.Rect r1;
        boolean $z0, $z1;
        android.graphics.Canvas $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;

        r0 := @this: android.view.GraphicBuffer;

        r1 := @parameter0: android.graphics.Rect;

        $z0 = r0.<android.view.GraphicBuffer: boolean mDestroyed>;

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<android.view.GraphicBuffer: android.graphics.Canvas mCanvas>;

        if $r2 != null goto label3;

        $r6 = new android.graphics.Canvas;

        specialinvoke $r6.<android.graphics.Canvas: void <init>()>();

        r0.<android.view.GraphicBuffer: android.graphics.Canvas mCanvas> = $r6;

     label3:
        $i0 = r0.<android.view.GraphicBuffer: int mNativeObject>;

        $r3 = r0.<android.view.GraphicBuffer: android.graphics.Canvas mCanvas>;

        $z1 = staticinvoke <android.view.GraphicBuffer: boolean nLockCanvas(int,android.graphics.Canvas,android.graphics.Rect)>($i0, $r3, r1);

        if $z1 == 0 goto label1;

        $r4 = r0.<android.view.GraphicBuffer: android.graphics.Canvas mCanvas>;

        $i1 = virtualinvoke $r4.<android.graphics.Canvas: int save()>();

        r0.<android.view.GraphicBuffer: int mSaveCount> = $i1;

        $r5 = r0.<android.view.GraphicBuffer: android.graphics.Canvas mCanvas>;

        return $r5;
    }

    public void unlockCanvasAndPost(android.graphics.Canvas)
    {
        android.view.GraphicBuffer r0;
        android.graphics.Canvas r1, $r2, $r3, $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.view.GraphicBuffer;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<android.view.GraphicBuffer: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $r2 = r0.<android.view.GraphicBuffer: android.graphics.Canvas mCanvas>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.GraphicBuffer: android.graphics.Canvas mCanvas>;

        if r1 != $r3 goto label1;

        $i0 = r0.<android.view.GraphicBuffer: int mSaveCount>;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>($i0);

        r0.<android.view.GraphicBuffer: int mSaveCount> = 0;

        $i1 = r0.<android.view.GraphicBuffer: int mNativeObject>;

        $r4 = r0.<android.view.GraphicBuffer: android.graphics.Canvas mCanvas>;

        staticinvoke <android.view.GraphicBuffer: boolean nUnlockCanvasAndPost(int,android.graphics.Canvas)>($i1, $r4);

     label1:
        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.GraphicBuffer r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.view.GraphicBuffer;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $z0 = r0.<android.view.GraphicBuffer: boolean mDestroyed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This GraphicBuffer has been destroyed and cannot be written to a parcel.");

        throw $r2;

     label1:
        $i1 = r0.<android.view.GraphicBuffer: int mWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.GraphicBuffer: int mHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.view.GraphicBuffer: int mFormat>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.view.GraphicBuffer: int mUsage>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.view.GraphicBuffer: int mNativeObject>;

        staticinvoke <android.view.GraphicBuffer: void nWriteGraphicBufferToParcel(int,android.os.Parcel)>($i5, r1);

        return;
    }
}
