public class com.android.org.conscrypt.SSLServerSocketImpl extends javax.net.ssl.SSLServerSocket
{
    private com.android.org.conscrypt.Logger$Stream logger;
    private final com.android.org.conscrypt.SSLParametersImpl sslParameters;

    protected void <init>(int, int, com.android.org.conscrypt.SSLParametersImpl) throws java.io.IOException
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        int i0, i1;
        com.android.org.conscrypt.SSLParametersImpl r1;
        com.android.org.conscrypt.Logger$Stream $r2;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.org.conscrypt.SSLParametersImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocket: void <init>(int,int)>(i0, i1);

        $r2 = staticinvoke <com.android.org.conscrypt.Logger: com.android.org.conscrypt.Logger$Stream getStream(java.lang.String)>("ssocket");

        r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.Logger$Stream logger> = $r2;

        r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = r1;

        return;
    }

    protected void <init>(int, int, java.net.InetAddress, com.android.org.conscrypt.SSLParametersImpl) throws java.io.IOException
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        int i0, i1;
        java.net.InetAddress r1;
        com.android.org.conscrypt.SSLParametersImpl r2;
        com.android.org.conscrypt.Logger$Stream $r3;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.net.InetAddress;

        r2 := @parameter3: com.android.org.conscrypt.SSLParametersImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocket: void <init>(int,int,java.net.InetAddress)>(i0, i1, r1);

        $r3 = staticinvoke <com.android.org.conscrypt.Logger: com.android.org.conscrypt.Logger$Stream getStream(java.lang.String)>("ssocket");

        r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.Logger$Stream logger> = $r3;

        r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = r2;

        return;
    }

    protected void <init>(int, com.android.org.conscrypt.SSLParametersImpl) throws java.io.IOException
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        int i0;
        com.android.org.conscrypt.SSLParametersImpl r1;
        com.android.org.conscrypt.Logger$Stream $r2;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.org.conscrypt.SSLParametersImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocket: void <init>(int)>(i0);

        $r2 = staticinvoke <com.android.org.conscrypt.Logger: com.android.org.conscrypt.Logger$Stream getStream(java.lang.String)>("ssocket");

        r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.Logger$Stream logger> = $r2;

        r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = r1;

        return;
    }

    protected void <init>(com.android.org.conscrypt.SSLParametersImpl) throws java.io.IOException
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl r1;
        com.android.org.conscrypt.Logger$Stream $r2;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        r1 := @parameter0: com.android.org.conscrypt.SSLParametersImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocket: void <init>()>();

        $r2 = staticinvoke <com.android.org.conscrypt.Logger: com.android.org.conscrypt.Logger$Stream getStream(java.lang.String)>("ssocket");

        r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.Logger$Stream logger> = $r2;

        r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = r1;

        return;
    }

    public java.net.Socket accept() throws java.io.IOException
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLSocketImpl r1, $r3;
        com.android.org.conscrypt.Logger$Stream $r2, $r7, $r8, $r9;
        com.android.org.conscrypt.SSLParametersImpl $r4, $r6;
        java.lang.Object $r5;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        $r2 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.Logger$Stream logger>;

        if $r2 == null goto label1;

        $r9 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r9.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("SSLServerSocketImpl.accept ..");

     label1:
        $r3 = new com.android.org.conscrypt.SSLSocketImpl;

        $r4 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $r5 = virtualinvoke $r4.<com.android.org.conscrypt.SSLParametersImpl: java.lang.Object clone()>();

        $r6 = (com.android.org.conscrypt.SSLParametersImpl) $r5;

        specialinvoke $r3.<com.android.org.conscrypt.SSLSocketImpl: void <init>(com.android.org.conscrypt.SSLParametersImpl)>($r6);

        r1 = $r3;

        virtualinvoke r0.<com.android.org.conscrypt.SSLServerSocketImpl: void implAccept(java.net.Socket)>(r1);

        virtualinvoke r1.<com.android.org.conscrypt.SSLSocketImpl: void init()>();

        $r7 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.Logger$Stream logger>;

        if $r7 == null goto label2;

        $r8 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.Logger$Stream logger>;

        virtualinvoke $r8.<com.android.org.conscrypt.Logger$Stream: void println(java.lang.String)>("SSLServerSocketImpl: accepted, initialized");

     label2:
        return r1;
    }

    public boolean getEnableSessionCreation()
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $z0 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: boolean getEnableSessionCreation()>();

        return $z0;
    }

    public java.lang.String[] getEnabledCipherSuites()
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $r2 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: java.lang.String[] getEnabledCipherSuites()>();

        return $r2;
    }

    public java.lang.String[] getEnabledProtocols()
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $r2 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: java.lang.String[] getEnabledProtocols()>();

        return $r2;
    }

    public boolean getNeedClientAuth()
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $z0 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: boolean getNeedClientAuth()>();

        return $z0;
    }

    public java.lang.String[] getSupportedCipherSuites()
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        $r1 = staticinvoke <com.android.org.conscrypt.CipherSuite: java.lang.String[] getSupportedCipherSuiteNames()>();

        return $r1;
    }

    public java.lang.String[] getSupportedProtocols()
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        java.lang.String[] $r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        $r1 = <com.android.org.conscrypt.ProtocolVersion: java.lang.String[] supportedProtocols>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.lang.String[]) $r2;

        return $r3;
    }

    public boolean getUseClientMode()
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $z0 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: boolean getUseClientMode()>();

        return $z0;
    }

    public boolean getWantClientAuth()
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $z0 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: boolean getWantClientAuth()>();

        return $z0;
    }

    public void setEnableSessionCreation(boolean)
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        boolean z0;
        com.android.org.conscrypt.SSLParametersImpl $r1;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: void setEnableSessionCreation(boolean)>(z0);

        return;
    }

    public void setEnabledCipherSuites(java.lang.String[])
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        java.lang.String[] r1;
        com.android.org.conscrypt.SSLParametersImpl $r2;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r2.<com.android.org.conscrypt.SSLParametersImpl: void setEnabledCipherSuites(java.lang.String[])>(r1);

        return;
    }

    public void setEnabledProtocols(java.lang.String[])
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        java.lang.String[] r1;
        com.android.org.conscrypt.SSLParametersImpl $r2;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r2.<com.android.org.conscrypt.SSLParametersImpl: void setEnabledProtocols(java.lang.String[])>(r1);

        return;
    }

    public void setNeedClientAuth(boolean)
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        boolean z0;
        com.android.org.conscrypt.SSLParametersImpl $r1;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: void setNeedClientAuth(boolean)>(z0);

        return;
    }

    public void setUseClientMode(boolean)
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        boolean z0;
        com.android.org.conscrypt.SSLParametersImpl $r1;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: void setUseClientMode(boolean)>(z0);

        return;
    }

    public void setWantClientAuth(boolean)
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;
        boolean z0;
        com.android.org.conscrypt.SSLParametersImpl $r1;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.conscrypt.SSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: void setWantClientAuth(boolean)>(z0);

        return;
    }

    public java.lang.String toString()
    {
        com.android.org.conscrypt.SSLServerSocketImpl r0;

        r0 := @this: com.android.org.conscrypt.SSLServerSocketImpl;

        return "[SSLServerSocketImpl]";
    }
}
