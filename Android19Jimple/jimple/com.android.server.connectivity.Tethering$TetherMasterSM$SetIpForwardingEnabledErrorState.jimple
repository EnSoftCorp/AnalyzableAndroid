class com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState extends com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState
{
    final com.android.server.connectivity.Tethering$TetherMasterSM this$1;

    void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM r1;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState;

        r1 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: com.android.server.connectivity.Tethering$TetherMasterSM this$1> = r1;

        specialinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)>(r1);

        return;
    }

    public void enter()
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState r0;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Tethering", "Error in setIpForwardingEnabled");

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: void notify(int)>(7);

        return;
    }
}
