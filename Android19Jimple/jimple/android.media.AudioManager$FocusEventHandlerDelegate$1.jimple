class android.media.AudioManager$FocusEventHandlerDelegate$1 extends android.os.Handler
{
    final android.media.AudioManager$FocusEventHandlerDelegate this$1;
    final android.media.AudioManager val$this$0;

    void <init>(android.media.AudioManager$FocusEventHandlerDelegate, android.os.Looper, android.media.AudioManager)
    {
        android.media.AudioManager$FocusEventHandlerDelegate$1 r0;
        android.media.AudioManager$FocusEventHandlerDelegate r1;
        android.os.Looper r2;
        android.media.AudioManager r3;

        r0 := @this: android.media.AudioManager$FocusEventHandlerDelegate$1;

        r1 := @parameter0: android.media.AudioManager$FocusEventHandlerDelegate;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: android.media.AudioManager;

        r0.<android.media.AudioManager$FocusEventHandlerDelegate$1: android.media.AudioManager$FocusEventHandlerDelegate this$1> = r1;

        r0.<android.media.AudioManager$FocusEventHandlerDelegate$1: android.media.AudioManager val$this$0> = r3;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        android.media.AudioManager$FocusEventHandlerDelegate$1 r0;
        android.os.Message r1;
        java.lang.Object r2, $r8;
        java.lang.Throwable r3, $r11;
        android.media.AudioManager$OnAudioFocusChangeListener r4;
        android.media.AudioManager$FocusEventHandlerDelegate $r5, $r7;
        android.media.AudioManager $r6, $r10;
        java.lang.String $r9;
        int $i0;

        r0 := @this: android.media.AudioManager$FocusEventHandlerDelegate$1;

        r1 := @parameter0: android.os.Message;

        $r5 = r0.<android.media.AudioManager$FocusEventHandlerDelegate$1: android.media.AudioManager$FocusEventHandlerDelegate this$1>;

        $r6 = $r5.<android.media.AudioManager$FocusEventHandlerDelegate: android.media.AudioManager this$0>;

        r2 = staticinvoke <android.media.AudioManager: java.lang.Object access$000(android.media.AudioManager)>($r6);

        entermonitor r2;

     label1:
        $r7 = r0.<android.media.AudioManager$FocusEventHandlerDelegate$1: android.media.AudioManager$FocusEventHandlerDelegate this$1>;

        $r10 = $r7.<android.media.AudioManager$FocusEventHandlerDelegate: android.media.AudioManager this$0>;

        $r8 = r1.<android.os.Message: java.lang.Object obj>;

        $r9 = (java.lang.String) $r8;

        r4 = staticinvoke <android.media.AudioManager: android.media.AudioManager$OnAudioFocusChangeListener access$100(android.media.AudioManager,java.lang.String)>($r10, $r9);

        exitmonitor r2;

     label2:
        if r4 == null goto label3;

        $i0 = r1.<android.os.Message: int what>;

        interfaceinvoke r4.<android.media.AudioManager$OnAudioFocusChangeListener: void onAudioFocusChange(int)>($i0);

     label3:
        return;

     label4:
        $r11 := @caughtexception;

        r3 = $r11;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
