class java.util.Collections$UnmodifiableCollection extends java.lang.Object implements java.util.Collection, java.io.Serializable
{
    private static final long serialVersionUID;
    final java.util.Collection c;

    void <init>(java.util.Collection)
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collection r1;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Collections$UnmodifiableCollection: java.util.Collection c> = r1;

        return;
    }

    public boolean add(java.lang.Object)
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void clear()
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.lang.Object r1;
        java.util.Collection $r2;
        boolean $z0;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<java.util.Collections$UnmodifiableCollection: java.util.Collection c>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collection r1, $r2;
        boolean $z0;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<java.util.Collections$UnmodifiableCollection: java.util.Collection c>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean isEmpty()
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collection $r1;
        boolean $z0;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        $r1 = r0.<java.util.Collections$UnmodifiableCollection: java.util.Collection c>;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collections$UnmodifiableCollection$1 $r1;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        $r1 = new java.util.Collections$UnmodifiableCollection$1;

        specialinvoke $r1.<java.util.Collections$UnmodifiableCollection$1: void <init>(java.util.Collections$UnmodifiableCollection)>(r0);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public int size()
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        $r1 = r0.<java.util.Collections$UnmodifiableCollection: java.util.Collection c>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;
    }

    public java.lang.Object[] toArray()
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collection $r1;
        java.lang.Object[] $r2;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        $r1 = r0.<java.util.Collections$UnmodifiableCollection: java.util.Collection c>;

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.lang.Object[] toArray()>();

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.lang.Object[] r1, $r3;
        java.util.Collection $r2;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        r1 := @parameter0: java.lang.Object[];

        $r2 = r0.<java.util.Collections$UnmodifiableCollection: java.util.Collection c>;

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r3;
    }

    public java.lang.String toString()
    {
        java.util.Collections$UnmodifiableCollection r0;
        java.util.Collection $r1;
        java.lang.String $r2;

        r0 := @this: java.util.Collections$UnmodifiableCollection;

        $r1 = r0.<java.util.Collections$UnmodifiableCollection: java.util.Collection c>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <java.util.Collections$UnmodifiableCollection: long serialVersionUID> = 1820017752578914078L;

        return;
    }
}
