public class android.app.NativeActivity extends android.app.Activity implements android.view.SurfaceHolder$Callback2, android.view.InputQueue$Callback, android.view.ViewTreeObserver$OnGlobalLayoutListener
{
    private static final java.lang.String KEY_NATIVE_SAVED_STATE;
    public static final java.lang.String META_DATA_FUNC_NAME;
    public static final java.lang.String META_DATA_LIB_NAME;
    private android.view.InputQueue mCurInputQueue;
    private android.view.SurfaceHolder mCurSurfaceHolder;
    private boolean mDestroyed;
    private boolean mDispatchingUnhandledKey;
    private android.view.inputmethod.InputMethodManager mIMM;
    int mLastContentHeight;
    int mLastContentWidth;
    int mLastContentX;
    int mLastContentY;
    final int[] mLocation;
    private android.app.NativeActivity$NativeContentView mNativeContentView;
    private int mNativeHandle;

    public void <init>()
    {
        android.app.NativeActivity r0;
        int[] $r1;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<android.app.NativeActivity: int[] mLocation> = $r1;

        return;
    }

    private static java.lang.String getAbsolutePath(java.io.File)
    {
        java.io.File r0;
        java.lang.String $r1;

        r0 := @parameter0: java.io.File;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r1;

     label1:
        return null;
    }

    private native int loadNativeCode(java.lang.String, java.lang.String, android.os.MessageQueue, java.lang.String, java.lang.String, java.lang.String, int, android.content.res.AssetManager, byte[]);

    private native void onConfigurationChangedNative(int);

    private native void onContentRectChangedNative(int, int, int, int, int);

    private native void onInputQueueCreatedNative(int, int);

    private native void onInputQueueDestroyedNative(int, int);

    private native void onLowMemoryNative(int);

    private native void onPauseNative(int);

    private native void onResumeNative(int);

    private native byte[] onSaveInstanceStateNative(int);

    private native void onStartNative(int);

    private native void onStopNative(int);

    private native void onSurfaceChangedNative(int, android.view.Surface, int, int, int);

    private native void onSurfaceCreatedNative(int, android.view.Surface);

    private native void onSurfaceDestroyedNative(int);

    private native void onSurfaceRedrawNeededNative(int, android.view.Surface);

    private native void onWindowFocusChangedNative(int, boolean);

    private native void unloadNativeCode(int);

    void hideIme(int)
    {
        android.app.NativeActivity r0;
        int i0;
        android.app.NativeActivity$NativeContentView $r1;
        android.view.inputmethod.InputMethodManager $r2;
        android.os.IBinder $r3;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.NativeActivity: android.view.inputmethod.InputMethodManager mIMM>;

        $r1 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r3 = virtualinvoke $r1.<android.app.NativeActivity$NativeContentView: android.os.IBinder getWindowToken()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r3, i0);

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.app.NativeActivity r0;
        android.content.res.Configuration r1;
        boolean $z0;
        int $i0;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onConfigurationChangedNative(int)>($i0);

     label1:
        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        android.app.NativeActivity r0;
        android.os.Bundle r1, $r28, $r48, $r52;
        java.lang.String r2, r3, r8, r10, r11, $r29, $r31, $r32, $r36, $r37, $r41, $r49;
        java.lang.RuntimeException $r4;
        android.content.pm.PackageManager$NameNotFoundException r5, $r51;
        android.content.pm.ActivityInfo r6;
        java.io.File r7, $r27, $r33, $r35, $r38;
        boolean z0;
        byte[] r9;
        java.lang.Object $r12;
        android.view.inputmethod.InputMethodManager $r13;
        android.view.Window $r14, $r15, $r16, $r18;
        android.app.NativeActivity$NativeContentView $r17, $r19, $r20, $r21, $r23;
        android.view.ViewTreeObserver $r22;
        android.content.Intent $r24;
        android.content.pm.PackageManager $r25;
        android.content.ComponentName $r26;
        android.content.pm.ApplicationInfo $r30;
        android.os.MessageQueue $r34;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r39, $r47;
        android.content.res.AssetManager $r40;
        java.lang.StringBuilder $r42, $r43, $r44, $r45, $r46, $r50;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.os.Bundle;

        r2 = "main";

        r3 = "ANativeActivity_onCreate";

        $r12 = virtualinvoke r0.<android.app.NativeActivity: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r13 = (android.view.inputmethod.InputMethodManager) $r12;

        r0.<android.app.NativeActivity: android.view.inputmethod.InputMethodManager mIMM> = $r13;

        $r14 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r14.<android.view.Window: void takeSurface(android.view.SurfaceHolder$Callback2)>(r0);

        $r16 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r16.<android.view.Window: void takeInputQueue(android.view.InputQueue$Callback)>(r0);

        $r15 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r15.<android.view.Window: void setFormat(int)>(4);

        $r18 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r18.<android.view.Window: void setSoftInputMode(int)>(16);

        $r17 = new android.app.NativeActivity$NativeContentView;

        specialinvoke $r17.<android.app.NativeActivity$NativeContentView: void <init>(android.content.Context)>(r0);

        r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView> = $r17;

        $r20 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r20.<android.app.NativeActivity$NativeContentView: android.app.NativeActivity mActivity> = r0;

        $r19 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        virtualinvoke r0.<android.app.NativeActivity: void setContentView(android.view.View)>($r19);

        $r21 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        virtualinvoke $r21.<android.app.NativeActivity$NativeContentView: boolean requestFocus()>();

        $r23 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r22 = virtualinvoke $r23.<android.app.NativeActivity$NativeContentView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r22.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

     label01:
        $r25 = virtualinvoke r0.<android.app.NativeActivity: android.content.pm.PackageManager getPackageManager()>();

        $r24 = virtualinvoke r0.<android.app.NativeActivity: android.content.Intent getIntent()>();

        $r26 = virtualinvoke $r24.<android.content.Intent: android.content.ComponentName getComponent()>();

        r6 = virtualinvoke $r25.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r26, 128);

        $r28 = r6.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r28 == null goto label05;

        $r48 = r6.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r10 = virtualinvoke $r48.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.app.lib_name");

     label02:
        if r10 == null goto label03;

        r2 = r10;

     label03:
        $r52 = r6.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r11 = virtualinvoke $r52.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.app.func_name");

     label04:
        if r11 == null goto label05;

        r3 = r11;

     label05:
        $r27 = new java.io.File;

        $r30 = r6.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r31 = $r30.<android.content.pm.ApplicationInfo: java.lang.String nativeLibraryDir>;

        $r29 = staticinvoke <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>(r2);

        specialinvoke $r27.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r31, $r29);

        r7 = $r27;

        z0 = virtualinvoke r7.<java.io.File: boolean exists()>();

        r8 = null;

        if z0 == 0 goto label06;

        r8 = virtualinvoke r7.<java.io.File: java.lang.String getPath()>();

     label06:
        if r8 != null goto label08;

        $r47 = new java.lang.IllegalArgumentException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find native library: ");

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r49);

        throw $r47;

     label07:
        $r51 := @caughtexception;

        r5 = $r51;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error getting activity info", r5);

        throw $r4;

     label08:
        if r1 == null goto label10;

        r9 = virtualinvoke r1.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("android:native_state");

     label09:
        $r34 = staticinvoke <android.os.Looper: android.os.MessageQueue myQueue()>();

        $r35 = virtualinvoke r0.<android.app.NativeActivity: java.io.File getFilesDir()>();

        $r32 = staticinvoke <android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>($r35);

        $r33 = virtualinvoke r0.<android.app.NativeActivity: java.io.File getObbDir()>();

        $r37 = staticinvoke <android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>($r33);

        $r38 = virtualinvoke r0.<android.app.NativeActivity: java.io.File getExternalFilesDir(java.lang.String)>(null);

        $r36 = staticinvoke <android.app.NativeActivity: java.lang.String getAbsolutePath(java.io.File)>($r38);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $r40 = virtualinvoke r0.<android.app.NativeActivity: android.content.res.AssetManager getAssets()>();

        $i2 = specialinvoke r0.<android.app.NativeActivity: int loadNativeCode(java.lang.String,java.lang.String,android.os.MessageQueue,java.lang.String,java.lang.String,java.lang.String,int,android.content.res.AssetManager,byte[])>(r8, r3, $r34, $r32, $r37, $r36, $i0, $r40, r9);

        r0.<android.app.NativeActivity: int mNativeHandle> = $i2;

        $i1 = r0.<android.app.NativeActivity: int mNativeHandle>;

        if $i1 != 0 goto label11;

        $r39 = new java.lang.IllegalArgumentException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to load native library: ");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r41);

        throw $r39;

     label10:
        r9 = null;

        goto label09;

     label11:
        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label07;
    }

    protected void onDestroy()
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder $r1;
        android.view.InputQueue $r2, $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.app.NativeActivity;

        r0.<android.app.NativeActivity: boolean mDestroyed> = 1;

        $r1 = r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder>;

        if $r1 == null goto label1;

        $i3 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceDestroyedNative(int)>($i3);

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = null;

     label1:
        $r2 = r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue>;

        if $r2 == null goto label2;

        $i1 = r0.<android.app.NativeActivity: int mNativeHandle>;

        $r3 = r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue>;

        $i2 = virtualinvoke $r3.<android.view.InputQueue: int getNativePtr()>();

        specialinvoke r0.<android.app.NativeActivity: void onInputQueueDestroyedNative(int,int)>($i1, $i2);

        r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue> = null;

     label2:
        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void unloadNativeCode(int)>($i0);

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        return;
    }

    public void onGlobalLayout()
    {
        android.app.NativeActivity r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] $r1, $r5, $r6, $r7, $r8;
        android.app.NativeActivity$NativeContentView $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: android.app.NativeActivity;

        $r2 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        $r1 = r0.<android.app.NativeActivity: int[] mLocation>;

        virtualinvoke $r2.<android.app.NativeActivity$NativeContentView: void getLocationInWindow(int[])>($r1);

        $r3 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        i0 = virtualinvoke $r3.<android.app.NativeActivity$NativeContentView: int getWidth()>();

        $r4 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        i1 = virtualinvoke $r4.<android.app.NativeActivity$NativeContentView: int getHeight()>();

        $r5 = r0.<android.app.NativeActivity: int[] mLocation>;

        $i3 = $r5[0];

        $i2 = r0.<android.app.NativeActivity: int mLastContentX>;

        if $i3 != $i2 goto label1;

        $r8 = r0.<android.app.NativeActivity: int[] mLocation>;

        $i13 = $r8[1];

        $i11 = r0.<android.app.NativeActivity: int mLastContentY>;

        if $i13 != $i11 goto label1;

        $i12 = r0.<android.app.NativeActivity: int mLastContentWidth>;

        if i0 != $i12 goto label1;

        $i14 = r0.<android.app.NativeActivity: int mLastContentHeight>;

        if i1 == $i14 goto label2;

     label1:
        $r6 = r0.<android.app.NativeActivity: int[] mLocation>;

        $i4 = $r6[0];

        r0.<android.app.NativeActivity: int mLastContentX> = $i4;

        $r7 = r0.<android.app.NativeActivity: int[] mLocation>;

        $i5 = $r7[1];

        r0.<android.app.NativeActivity: int mLastContentY> = $i5;

        r0.<android.app.NativeActivity: int mLastContentWidth> = i0;

        r0.<android.app.NativeActivity: int mLastContentHeight> = i1;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label2;

        $i9 = r0.<android.app.NativeActivity: int mNativeHandle>;

        $i10 = r0.<android.app.NativeActivity: int mLastContentX>;

        $i7 = r0.<android.app.NativeActivity: int mLastContentY>;

        $i8 = r0.<android.app.NativeActivity: int mLastContentWidth>;

        $i6 = r0.<android.app.NativeActivity: int mLastContentHeight>;

        specialinvoke r0.<android.app.NativeActivity: void onContentRectChangedNative(int,int,int,int,int)>($i9, $i10, $i7, $i8, $i6);

     label2:
        return;
    }

    public void onInputQueueCreated(android.view.InputQueue)
    {
        android.app.NativeActivity r0;
        android.view.InputQueue r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.InputQueue;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue> = r1;

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        $i1 = virtualinvoke r1.<android.view.InputQueue: int getNativePtr()>();

        specialinvoke r0.<android.app.NativeActivity: void onInputQueueCreatedNative(int,int)>($i0, $i1);

     label1:
        return;
    }

    public void onInputQueueDestroyed(android.view.InputQueue)
    {
        android.app.NativeActivity r0;
        android.view.InputQueue r1;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.InputQueue;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        $i1 = virtualinvoke r1.<android.view.InputQueue: int getNativePtr()>();

        specialinvoke r0.<android.app.NativeActivity: void onInputQueueDestroyedNative(int,int)>($i0, $i1);

        r0.<android.app.NativeActivity: android.view.InputQueue mCurInputQueue> = null;

     label1:
        return;
    }

    public void onLowMemory()
    {
        android.app.NativeActivity r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onLowMemory()>();

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onLowMemoryNative(int)>($i0);

     label1:
        return;
    }

    protected void onPause()
    {
        android.app.NativeActivity r0;
        int $i0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onPause()>();

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onPauseNative(int)>($i0);

        return;
    }

    protected void onResume()
    {
        android.app.NativeActivity r0;
        int $i0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onResumeNative(int)>($i0);

        return;
    }

    protected void onSaveInstanceState(android.os.Bundle)
    {
        android.app.NativeActivity r0;
        android.os.Bundle r1;
        byte[] r2;
        int $i0;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        r2 = specialinvoke r0.<android.app.NativeActivity: byte[] onSaveInstanceStateNative(int)>($i0);

        if r2 == null goto label1;

        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("android:native_state", r2);

     label1:
        return;
    }

    protected void onStart()
    {
        android.app.NativeActivity r0;
        int $i0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onStart()>();

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onStartNative(int)>($i0);

        return;
    }

    protected void onStop()
    {
        android.app.NativeActivity r0;
        int $i0;

        r0 := @this: android.app.NativeActivity;

        specialinvoke r0.<android.app.Activity: void onStop()>();

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onStopNative(int)>($i0);

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.app.NativeActivity r0;
        boolean z0, $z1;
        int $i0;

        r0 := @this: android.app.NativeActivity;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.app.Activity: void onWindowFocusChanged(boolean)>(z0);

        $z1 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z1 != 0 goto label1;

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onWindowFocusChangedNative(int,boolean)>($i0, z0);

     label1:
        return;
    }

    void setWindowFlags(int, int)
    {
        android.app.NativeActivity r0;
        int i0, i1;
        android.view.Window $r1;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFlags(int,int)>(i0, i1);

        return;
    }

    void setWindowFormat(int)
    {
        android.app.NativeActivity r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.app.NativeActivity: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setFormat(int)>(i0);

        return;
    }

    void showIme(int)
    {
        android.app.NativeActivity r0;
        int i0;
        android.app.NativeActivity$NativeContentView $r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: android.app.NativeActivity;

        i0 := @parameter0: int;

        $r2 = r0.<android.app.NativeActivity: android.view.inputmethod.InputMethodManager mIMM>;

        $r1 = r0.<android.app.NativeActivity: android.app.NativeActivity$NativeContentView mNativeContentView>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r1, i0);

        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2, $i3;
        boolean $z0;
        android.view.Surface $r2;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $i3 = r0.<android.app.NativeActivity: int mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceChangedNative(int,android.view.Surface,int,int,int)>($i3, $r2, i0, i1, i2);

     label1:
        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        int $i0;
        android.view.Surface $r2;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceCreatedNative(int,android.view.Surface)>($i0, $r2);

     label1:
        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        int $i0;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = null;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceDestroyedNative(int)>($i0);

     label1:
        return;
    }

    public void surfaceRedrawNeeded(android.view.SurfaceHolder)
    {
        android.app.NativeActivity r0;
        android.view.SurfaceHolder r1;
        boolean $z0;
        int $i0;
        android.view.Surface $r2;

        r0 := @this: android.app.NativeActivity;

        r1 := @parameter0: android.view.SurfaceHolder;

        $z0 = r0.<android.app.NativeActivity: boolean mDestroyed>;

        if $z0 != 0 goto label1;

        r0.<android.app.NativeActivity: android.view.SurfaceHolder mCurSurfaceHolder> = r1;

        $i0 = r0.<android.app.NativeActivity: int mNativeHandle>;

        $r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        specialinvoke r0.<android.app.NativeActivity: void onSurfaceRedrawNeededNative(int,android.view.Surface)>($i0, $r2);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <android.app.NativeActivity: java.lang.String META_DATA_LIB_NAME> = "android.app.lib_name";

        <android.app.NativeActivity: java.lang.String META_DATA_FUNC_NAME> = "android.app.func_name";

        <android.app.NativeActivity: java.lang.String KEY_NATIVE_SAVED_STATE> = "android:native_state";

        return;
    }
}
