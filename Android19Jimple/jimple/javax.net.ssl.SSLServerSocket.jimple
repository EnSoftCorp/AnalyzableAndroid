public abstract class javax.net.ssl.SSLServerSocket extends java.net.ServerSocket
{

    protected void <init>() throws java.io.IOException
    {
        javax.net.ssl.SSLServerSocket r0;

        r0 := @this: javax.net.ssl.SSLServerSocket;

        specialinvoke r0.<java.net.ServerSocket: void <init>()>();

        return;
    }

    protected void <init>(int) throws java.io.IOException
    {
        javax.net.ssl.SSLServerSocket r0;
        int i0;

        r0 := @this: javax.net.ssl.SSLServerSocket;

        i0 := @parameter0: int;

        specialinvoke r0.<java.net.ServerSocket: void <init>(int)>(i0);

        return;
    }

    protected void <init>(int, int) throws java.io.IOException
    {
        javax.net.ssl.SSLServerSocket r0;
        int i0, i1;

        r0 := @this: javax.net.ssl.SSLServerSocket;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.net.ServerSocket: void <init>(int,int)>(i0, i1);

        return;
    }

    protected void <init>(int, int, java.net.InetAddress) throws java.io.IOException
    {
        javax.net.ssl.SSLServerSocket r0;
        int i0, i1;
        java.net.InetAddress r1;

        r0 := @this: javax.net.ssl.SSLServerSocket;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.net.InetAddress;

        specialinvoke r0.<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>(i0, i1, r1);

        return;
    }

    public abstract boolean getEnableSessionCreation();

    public abstract java.lang.String[] getEnabledCipherSuites();

    public abstract java.lang.String[] getEnabledProtocols();

    public abstract boolean getNeedClientAuth();

    public abstract java.lang.String[] getSupportedCipherSuites();

    public abstract java.lang.String[] getSupportedProtocols();

    public abstract boolean getUseClientMode();

    public abstract boolean getWantClientAuth();

    public abstract void setEnableSessionCreation(boolean);

    public abstract void setEnabledCipherSuites(java.lang.String[]);

    public abstract void setEnabledProtocols(java.lang.String[]);

    public abstract void setNeedClientAuth(boolean);

    public abstract void setUseClientMode(boolean);

    public abstract void setWantClientAuth(boolean);
}
