public class com.android.org.chromium.android_webview.AwContents extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private static final boolean SUPPORTS_ON_ANIMATION;
    private static final android.graphics.Rect sLocalGlobalVisibleRect;
    private com.android.org.chromium.android_webview.AwAutofillManagerDelegate mAwAutofillManagerDelegate;
    private com.android.org.chromium.android_webview.AwPdfExporter mAwPdfExporter;
    private int mBaseBackgroundColor;
    private final com.android.org.chromium.android_webview.AwBrowserContext mBrowserContext;
    private com.android.org.chromium.content.common.CleanupReference mCleanupReference;
    private boolean mClearViewActive;
    private final android.graphics.Rect mClipBoundsTemporary;
    private android.content.ComponentCallbacks2 mComponentCallbacks;
    private final android.view.ViewGroup mContainerView;
    private boolean mContainerViewFocused;
    private float mContentHeightDip;
    private final com.android.org.chromium.android_webview.AwContentViewClient mContentViewClient;
    private com.android.org.chromium.content.browser.ContentViewCore mContentViewCore;
    private float mContentWidthDip;
    private final com.android.org.chromium.android_webview.AwContentsClient mContentsClient;
    private final com.android.org.chromium.android_webview.AwContentsClientBridge mContentsClientBridge;
    private final double mDIPScale;
    private final com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler mDefaultVideoPosterRequestHandler;
    private boolean mDeferredShouldOverrideUrlLoadingIsPendingForPopup;
    private android.graphics.Bitmap mFavicon;
    private boolean mHasRequestedVisitedHistoryFromClient;
    private final com.android.org.chromium.android_webview.AwContents$InterceptNavigationDelegateImpl mInterceptNavigationDelegate;
    private final com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate mInternalAccessAdapter;
    private final com.android.org.chromium.android_webview.AwContentsIoThreadClient mIoThreadClient;
    private boolean mIsAttachedToWindow;
    private boolean mIsPaused;
    private boolean mIsViewVisible;
    private boolean mIsWindowVisible;
    private int mLayerType;
    private final com.android.org.chromium.android_webview.AwLayoutSizer mLayoutSizer;
    private long mNativeAwContents;
    private com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow;
    private boolean mOverlayHorizontalScrollbar;
    private boolean mOverlayVerticalScrollbar;
    private float mPageScaleFactor;
    private java.util.List mPendingDetachCleanupReferences;
    private java.util.concurrent.Callable mPictureListenerContentProvider;
    private boolean mPictureListenerEnabled;
    private final com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData;
    private final com.android.org.chromium.android_webview.ScrollAccessibilityHelper mScrollAccessibilityHelper;
    private final com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager;
    private final com.android.org.chromium.android_webview.AwSettings mSettings;
    private final com.android.org.chromium.android_webview.AwWebContentsDelegate mWebContentsDelegate;
    private boolean mWindowFocused;
    private final com.android.org.chromium.android_webview.AwZoomControls mZoomControls;

    static void <clinit>()
    {
        boolean z0, z1, $z2;
        java.lang.Class $r0;
        android.graphics.Rect $r1;
        int $i0;

        z0 = 1;

        $r0 = class "com/android/org/chromium/android_webview/AwContents";

        $z2 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z2 != 0 goto label3;

        z1 = 1;

     label1:
        <com.android.org.chromium.android_webview.AwContents: boolean $assertionsDisabled> = z1;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        <com.android.org.chromium.android_webview.AwContents: android.graphics.Rect sLocalGlobalVisibleRect> = $r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label4;

     label2:
        <com.android.org.chromium.android_webview.AwContents: boolean SUPPORTS_ON_ANIMATION> = z0;

        return;

     label3:
        z1 = 0;

        goto label1;

     label4:
        z0 = 0;

        goto label2;
    }

    public void <init>(com.android.org.chromium.android_webview.AwBrowserContext, android.view.ViewGroup, com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate, com.android.org.chromium.android_webview.AwContentsClient, com.android.org.chromium.android_webview.AwSettings)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwBrowserContext r1;
        android.view.ViewGroup r2;
        com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate r3;
        com.android.org.chromium.android_webview.AwContentsClient r4;
        com.android.org.chromium.android_webview.AwSettings r5;
        com.android.org.chromium.android_webview.AwLayoutSizer $r6;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: com.android.org.chromium.android_webview.AwBrowserContext;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate;

        r4 := @parameter3: com.android.org.chromium.android_webview.AwContentsClient;

        r5 := @parameter4: com.android.org.chromium.android_webview.AwSettings;

        $r6 = new com.android.org.chromium.android_webview.AwLayoutSizer;

        specialinvoke $r6.<com.android.org.chromium.android_webview.AwLayoutSizer: void <init>()>();

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void <init>(com.android.org.chromium.android_webview.AwBrowserContext,android.view.ViewGroup,com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate,com.android.org.chromium.android_webview.AwContentsClient,com.android.org.chromium.android_webview.AwSettings,com.android.org.chromium.android_webview.AwLayoutSizer)>(r1, r2, r3, r4, r5, $r6);

        return;
    }

    public void <init>(com.android.org.chromium.android_webview.AwBrowserContext, android.view.ViewGroup, com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate, com.android.org.chromium.android_webview.AwContentsClient, com.android.org.chromium.android_webview.AwSettings, com.android.org.chromium.android_webview.AwLayoutSizer)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwBrowserContext r1, $r41;
        android.view.ViewGroup r2, $r11, $r19, $r36, $r38, $r39, $r40, $r43, $r44, $r45;
        com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate r3, $r37;
        com.android.org.chromium.android_webview.AwContentsClient r4, $r27;
        com.android.org.chromium.android_webview.AwSettings r5, $r25, $r29, $r32;
        com.android.org.chromium.android_webview.AwLayoutSizer r6, $r15, $r17;
        com.android.org.chromium.android_webview.AwContents$1 r7, $r22;
        com.android.org.chromium.android_webview.AwContents$HitTestData $r8;
        android.graphics.Rect $r9;
        com.android.org.chromium.android_webview.AwContentViewClient $r10;
        android.content.Context $r12, $r33;
        com.android.org.chromium.ui.gfx.DeviceDisplayInfo $r13;
        double $d0, $d1, $d2;
        com.android.org.chromium.android_webview.AwContents$AwLayoutSizerDelegate $r14;
        com.android.org.chromium.android_webview.AwWebContentsDelegateAdapter $r16;
        com.android.org.chromium.android_webview.AwContentsClientBridge $r18;
        com.android.org.chromium.android_webview.AwContents$IoThreadClientImpl $r20;
        com.android.org.chromium.android_webview.AwZoomControls $r21;
        com.android.org.chromium.android_webview.AwContents$InterceptNavigationDelegateImpl $r23;
        com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler $r24, $r26;
        java.lang.String $r28;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r30;
        com.android.org.chromium.android_webview.AwContents$AwScrollOffsetManagerDelegate $r31;
        com.android.org.chromium.android_webview.ScrollAccessibilityHelper $r34;
        android.widget.OverScroller $r35;
        int $i0, $i1, $i2, $i4;
        com.android.org.chromium.android_webview.AwContents$AwLayoutChangeListener $r42;
        long $l3;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: com.android.org.chromium.android_webview.AwBrowserContext;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate;

        r4 := @parameter3: com.android.org.chromium.android_webview.AwContentsClient;

        r5 := @parameter4: com.android.org.chromium.android_webview.AwSettings;

        r6 := @parameter5: com.android.org.chromium.android_webview.AwLayoutSizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.android_webview.AwContents: int mBaseBackgroundColor> = -1;

        r0.<com.android.org.chromium.android_webview.AwContents: int mLayerType> = 0;

        $r8 = new com.android.org.chromium.android_webview.AwContents$HitTestData;

        specialinvoke $r8.<com.android.org.chromium.android_webview.AwContents$HitTestData: void <init>()>();

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData> = $r8;

        r0.<com.android.org.chromium.android_webview.AwContents: float mPageScaleFactor> = 1.0F;

        $r9 = new android.graphics.Rect;

        specialinvoke $r9.<android.graphics.Rect: void <init>()>();

        r0.<com.android.org.chromium.android_webview.AwContents: android.graphics.Rect mClipBoundsTemporary> = $r9;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayHorizontalScrollbar> = 1;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayVerticalScrollbar> = 0;

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwBrowserContext mBrowserContext> = r1;

        r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView> = r2;

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate mInternalAccessAdapter> = r3;

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient> = r4;

        $r10 = new com.android.org.chromium.android_webview.AwContentViewClient;

        specialinvoke $r10.<com.android.org.chromium.android_webview.AwContentViewClient: void <init>(com.android.org.chromium.android_webview.AwContentsClient,com.android.org.chromium.android_webview.AwSettings)>(r4, r5);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentViewClient mContentViewClient> = $r10;

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwLayoutSizer mLayoutSizer> = r6;

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings> = r5;

        $r11 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $r12 = virtualinvoke $r11.<android.view.ViewGroup: android.content.Context getContext()>();

        $r13 = staticinvoke <com.android.org.chromium.ui.gfx.DeviceDisplayInfo: com.android.org.chromium.ui.gfx.DeviceDisplayInfo create(android.content.Context)>($r12);

        $d0 = virtualinvoke $r13.<com.android.org.chromium.ui.gfx.DeviceDisplayInfo: double getDIPScale()>();

        r0.<com.android.org.chromium.android_webview.AwContents: double mDIPScale> = $d0;

        $r15 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwLayoutSizer mLayoutSizer>;

        $r14 = new com.android.org.chromium.android_webview.AwContents$AwLayoutSizerDelegate;

        specialinvoke $r14.<com.android.org.chromium.android_webview.AwContents$AwLayoutSizerDelegate: void <init>(com.android.org.chromium.android_webview.AwContents,com.android.org.chromium.android_webview.AwContents$1)>(r0, null);

        virtualinvoke $r15.<com.android.org.chromium.android_webview.AwLayoutSizer: void setDelegate(com.android.org.chromium.android_webview.AwLayoutSizer$Delegate)>($r14);

        $r17 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwLayoutSizer mLayoutSizer>;

        $d1 = r0.<com.android.org.chromium.android_webview.AwContents: double mDIPScale>;

        virtualinvoke $r17.<com.android.org.chromium.android_webview.AwLayoutSizer: void setDIPScale(double)>($d1);

        $r16 = new com.android.org.chromium.android_webview.AwWebContentsDelegateAdapter;

        $r19 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        specialinvoke $r16.<com.android.org.chromium.android_webview.AwWebContentsDelegateAdapter: void <init>(com.android.org.chromium.android_webview.AwContentsClient,android.view.View)>(r4, $r19);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwWebContentsDelegate mWebContentsDelegate> = $r16;

        $r18 = new com.android.org.chromium.android_webview.AwContentsClientBridge;

        specialinvoke $r18.<com.android.org.chromium.android_webview.AwContentsClientBridge: void <init>(com.android.org.chromium.android_webview.AwContentsClient)>(r4);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClientBridge mContentsClientBridge> = $r18;

        $r21 = new com.android.org.chromium.android_webview.AwZoomControls;

        specialinvoke $r21.<com.android.org.chromium.android_webview.AwZoomControls: void <init>(com.android.org.chromium.android_webview.AwContents)>(r0);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwZoomControls mZoomControls> = $r21;

        $r20 = new com.android.org.chromium.android_webview.AwContents$IoThreadClientImpl;

        specialinvoke $r20.<com.android.org.chromium.android_webview.AwContents$IoThreadClientImpl: void <init>(com.android.org.chromium.android_webview.AwContents,com.android.org.chromium.android_webview.AwContents$1)>(r0, null);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsIoThreadClient mIoThreadClient> = $r20;

        $r23 = new com.android.org.chromium.android_webview.AwContents$InterceptNavigationDelegateImpl;

        specialinvoke $r23.<com.android.org.chromium.android_webview.AwContents$InterceptNavigationDelegateImpl: void <init>(com.android.org.chromium.android_webview.AwContents,com.android.org.chromium.android_webview.AwContents$1)>(r0, null);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$InterceptNavigationDelegateImpl mInterceptNavigationDelegate> = $r23;

        $r22 = new com.android.org.chromium.android_webview.AwContents$1;

        specialinvoke $r22.<com.android.org.chromium.android_webview.AwContents$1: void <init>(com.android.org.chromium.android_webview.AwContents)>(r0);

        r7 = $r22;

        $r25 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        virtualinvoke $r25.<com.android.org.chromium.android_webview.AwSettings: void setZoomListener(com.android.org.chromium.android_webview.AwSettings$ZoomSupportChangeListener)>(r7);

        $r24 = new com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler;

        $r27 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        specialinvoke $r24.<com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler: void <init>(com.android.org.chromium.android_webview.AwContentsClient)>($r27);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler mDefaultVideoPosterRequestHandler> = $r24;

        $r29 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        $r26 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler mDefaultVideoPosterRequestHandler>;

        $r28 = virtualinvoke $r26.<com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler: java.lang.String getDefaultVideoPosterURL()>();

        virtualinvoke $r29.<com.android.org.chromium.android_webview.AwSettings: void setDefaultVideoPosterURL(java.lang.String)>($r28);

        $r32 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        $d2 = r0.<com.android.org.chromium.android_webview.AwContents: double mDIPScale>;

        virtualinvoke $r32.<com.android.org.chromium.android_webview.AwSettings: void setDIPScale(double)>($d2);

        $r30 = new com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $r31 = new com.android.org.chromium.android_webview.AwContents$AwScrollOffsetManagerDelegate;

        specialinvoke $r31.<com.android.org.chromium.android_webview.AwContents$AwScrollOffsetManagerDelegate: void <init>(com.android.org.chromium.android_webview.AwContents,com.android.org.chromium.android_webview.AwContents$1)>(r0, null);

        $r35 = new android.widget.OverScroller;

        $r36 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $r33 = virtualinvoke $r36.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r35.<android.widget.OverScroller: void <init>(android.content.Context)>($r33);

        specialinvoke $r30.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void <init>(com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate,android.widget.OverScroller)>($r31, $r35);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager> = $r30;

        $r34 = new com.android.org.chromium.android_webview.ScrollAccessibilityHelper;

        $r38 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        specialinvoke $r34.<com.android.org.chromium.android_webview.ScrollAccessibilityHelper: void <init>(android.view.View)>($r38);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.ScrollAccessibilityHelper mScrollAccessibilityHelper> = $r34;

        $r39 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i0 = virtualinvoke $r39.<android.view.ViewGroup: int getOverScrollMode()>();

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setOverScrollMode(int)>($i0);

        $r37 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate mInternalAccessAdapter>;

        $i1 = interfaceinvoke $r37.<com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate: int super_getScrollBarStyle()>();

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setScrollBarStyle(int)>($i1);

        $r40 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $r42 = new com.android.org.chromium.android_webview.AwContents$AwLayoutChangeListener;

        specialinvoke $r42.<com.android.org.chromium.android_webview.AwContents$AwLayoutChangeListener: void <init>(com.android.org.chromium.android_webview.AwContents,com.android.org.chromium.android_webview.AwContents$1)>(r0, null);

        virtualinvoke $r40.<android.view.ViewGroup: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>($r42);

        $r41 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwBrowserContext mBrowserContext>;

        $l3 = staticinvoke <com.android.org.chromium.android_webview.AwContents: long nativeInit(com.android.org.chromium.android_webview.AwBrowserContext)>($r41);

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setNewAwContents(long)>($l3);

        $r43 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $r44 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i2 = virtualinvoke $r44.<android.view.ViewGroup: int getVisibility()>();

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onVisibilityChanged(android.view.View,int)>($r43, $i2);

        $r45 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i4 = virtualinvoke $r45.<android.view.ViewGroup: int getWindowVisibility()>();

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onWindowVisibilityChanged(int)>($i4);

        return;
    }

    static void access$000(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <com.android.org.chromium.android_webview.AwContents: void nativeOnDetachedFromWindow(long)>(l0);

        return;
    }

    static void access$100(long)
    {
        long l0;

        l0 := @parameter0: long;

        staticinvoke <com.android.org.chromium.android_webview.AwContents: void nativeDestroy(long)>(l0);

        return;
    }

    static void access$1000(com.android.org.chromium.android_webview.AwContents, long, int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long l0;
        int i1, i2;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeScrollTo(long,int,int)>(l0, i1, i2);

        return;
    }

    static com.android.org.chromium.android_webview.AwLayoutSizer access$1100(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwLayoutSizer $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwLayoutSizer mLayoutSizer>;

        return $r1;
    }

    static com.android.org.chromium.android_webview.AwScrollOffsetManager access$1200(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        return $r1;
    }

    static com.android.org.chromium.android_webview.ScrollAccessibilityHelper access$1300(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.ScrollAccessibilityHelper $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.ScrollAccessibilityHelper mScrollAccessibilityHelper>;

        return $r1;
    }

    static void access$1400(com.android.org.chromium.android_webview.AwContents, long, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long l0;
        int i1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeTrimMemory(long,int)>(l0, i1);

        return;
    }

    static com.android.org.chromium.content.browser.ContentViewCore access$1800(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        return $r1;
    }

    static com.android.org.chromium.android_webview.AwSettings access$200(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        return $r1;
    }

    static void access$2300(com.android.org.chromium.android_webview.AwContents, long, java.lang.String[])
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long l0;
        java.lang.String[] r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String[];

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeAddVisitedLinks(long,java.lang.String[])>(l0, r1);

        return;
    }

    static java.lang.String access$2400(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.org.chromium.android_webview.AwContents: java.lang.String generateArchiveAutoNamePath(java.lang.String,java.lang.String)>(r0, r1);

        return $r2;
    }

    static void access$2500(com.android.org.chromium.android_webview.AwContents, java.lang.String, android.webkit.ValueCallback)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1;
        android.webkit.ValueCallback r2;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.webkit.ValueCallback;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void saveWebArchiveInternal(java.lang.String,android.webkit.ValueCallback)>(r1, r2);

        return;
    }

    static com.android.org.chromium.android_webview.AwBrowserContext access$2700(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwBrowserContext $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwBrowserContext mBrowserContext>;

        return $r1;
    }

    static void access$2800(com.android.org.chromium.android_webview.AwContents, long, boolean, java.lang.String)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long l0;
        boolean z0;
        java.lang.String r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeInvokeGeolocationCallback(long,boolean,java.lang.String)>(l0, z0, r1);

        return;
    }

    static com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler access$300(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.DefaultVideoPosterRequestHandler mDefaultVideoPosterRequestHandler>;

        return $r1;
    }

    static com.android.org.chromium.android_webview.AwContentsClient access$400(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwContentsClient $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        return $r1;
    }

    static boolean access$500(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $z0 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mDeferredShouldOverrideUrlLoadingIsPendingForPopup>;

        return $z0;
    }

    static boolean access$502(com.android.org.chromium.android_webview.AwContents, boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter1: boolean;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mDeferredShouldOverrideUrlLoadingIsPendingForPopup> = z0;

        return z0;
    }

    static android.view.ViewGroup access$600(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.ViewGroup $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        return $r1;
    }

    static com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate access$700(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate $r1;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate mInternalAccessAdapter>;

        return $r1;
    }

    static long access$800(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        return $l0;
    }

    static void access$900(com.android.org.chromium.android_webview.AwContents, long, int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long l0;
        int i1, i2;

        r0 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetFixedLayoutSize(long,int,int)>(l0, i1, i2);

        return;
    }

    private static com.android.org.chromium.content.browser.ContentViewCore createAndInitializeContentViewCore(android.view.ViewGroup, com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate, int, com.android.org.chromium.content.browser.ContentViewCore$GestureStateListener, com.android.org.chromium.content.browser.ContentViewClient, com.android.org.chromium.content.browser.ContentViewCore$ZoomControlsDelegate)
    {
        android.view.ViewGroup r0;
        com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate r1;
        int i0;
        com.android.org.chromium.content.browser.ContentViewCore$GestureStateListener r2;
        com.android.org.chromium.content.browser.ContentViewClient r3;
        com.android.org.chromium.content.browser.ContentViewCore$ZoomControlsDelegate r4;
        android.content.Context r5, $r10;
        com.android.org.chromium.content.browser.ContentViewCore r6, $r8;
        long l1;
        com.android.org.chromium.ui.base.WindowAndroid r7, $r9;
        boolean $z0;
        android.app.Activity $r11;
        com.android.org.chromium.ui.base.ActivityWindowAndroid $r12;

        r0 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate;

        i0 := @parameter2: int;

        r2 := @parameter3: com.android.org.chromium.content.browser.ContentViewCore$GestureStateListener;

        r3 := @parameter4: com.android.org.chromium.content.browser.ContentViewClient;

        r4 := @parameter5: com.android.org.chromium.content.browser.ContentViewCore$ZoomControlsDelegate;

        r5 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        $r8 = new com.android.org.chromium.content.browser.ContentViewCore;

        specialinvoke $r8.<com.android.org.chromium.content.browser.ContentViewCore: void <init>(android.content.Context)>(r5);

        r6 = $r8;

        l1 = (long) i0;

        $z0 = r5 instanceof android.app.Activity;

        if $z0 == 0 goto label2;

        $r12 = new com.android.org.chromium.ui.base.ActivityWindowAndroid;

        $r11 = (android.app.Activity) r5;

        specialinvoke $r12.<com.android.org.chromium.ui.base.ActivityWindowAndroid: void <init>(android.app.Activity)>($r11);

        r7 = $r12;

     label1:
        virtualinvoke r6.<com.android.org.chromium.content.browser.ContentViewCore: void initialize(android.view.ViewGroup,com.android.org.chromium.content.browser.ContentViewCore$InternalAccessDelegate,long,com.android.org.chromium.ui.base.WindowAndroid)>(r0, r1, l1, r7);

        virtualinvoke r6.<com.android.org.chromium.content.browser.ContentViewCore: void setGestureStateListener(com.android.org.chromium.content.browser.ContentViewCore$GestureStateListener)>(r2);

        virtualinvoke r6.<com.android.org.chromium.content.browser.ContentViewCore: void setContentViewClient(com.android.org.chromium.content.browser.ContentViewClient)>(r3);

        virtualinvoke r6.<com.android.org.chromium.content.browser.ContentViewCore: void setZoomControlsDelegate(com.android.org.chromium.content.browser.ContentViewCore$ZoomControlsDelegate)>(r4);

        return r6;

     label2:
        $r9 = new com.android.org.chromium.ui.base.WindowAndroid;

        $r10 = virtualinvoke r5.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke $r9.<com.android.org.chromium.ui.base.WindowAndroid: void <init>(android.content.Context)>($r10);

        r7 = $r9;

        goto label1;
    }

    private void didOverscroll(int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1;
        com.android.org.chromium.android_webview.OverScrollGlow $r1, $r3, $r4, $r6;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r2;
        boolean $z0;
        android.view.ViewGroup $r5;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        if $r1 == null goto label1;

        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        virtualinvoke $r6.<com.android.org.chromium.android_webview.OverScrollGlow: void setOverScrollDeltas(int,int)>(i0, i1);

     label1:
        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void overScrollBy(int,int)>(i0, i1);

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        $z0 = virtualinvoke $r4.<com.android.org.chromium.android_webview.OverScrollGlow: boolean isAnimating()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        virtualinvoke $r5.<android.view.ViewGroup: void invalidate()>();

     label2:
        return;
    }

    private static java.lang.String generateArchiveAutoNamePath(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, r4, r6, $r15;
        int i0, i1, $i3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21;
        java.io.File $r11, $r22;
        java.net.URL $r23;
        java.net.MalformedURLException $r24;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label12;

        $z3 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z3 != 0 goto label12;

     label01:
        $r23 = new java.net.URL;

        specialinvoke $r23.<java.net.URL: void <init>(java.lang.String)>(r0);

        r2 = virtualinvoke $r23.<java.net.URL: java.lang.String getPath()>();

        i1 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(47);

     label02:
        if i1 <= 0 goto label05;

     label03:
        $i3 = i1 + 1;

        r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

     label04:
        r2 = r6;

     label05:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label06;

        r2 = "index";

     label06:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".mht");

        r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>(r3);

        $z1 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label08;

        return r3;

     label07:
        $r24 := @caughtexception;

        r2 = null;

        goto label05;

     label08:
        i0 = 1;

     label09:
        if i0 >= 100 goto label11;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".mht");

        r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = new java.io.File;

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>(r4);

        $z2 = virtualinvoke $r22.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label10;

        return r4;

     label10:
        i0 = i0 + 1;

        goto label09;

     label11:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to auto generate archive name for path: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AwContents", $r15);

        return null;

     label12:
        r2 = null;

        goto label05;

        catch java.net.MalformedURLException from label01 to label02 with label07;
        catch java.net.MalformedURLException from label03 to label04 with label07;
    }

    private static void generateMHTMLCallback(java.lang.String, long, android.webkit.ValueCallback)
    {
        java.lang.String r0;
        long l0;
        android.webkit.ValueCallback r1;
        byte $b1;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 := @parameter2: android.webkit.ValueCallback;

        if r1 != null goto label1;

        return;

     label1:
        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label2;

        r0 = null;

     label2:
        interfaceinvoke r1.<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>(r0);

        return;
    }

    public static int getAwDrawGLFunction()
    {
        int $i0;

        $i0 = staticinvoke <com.android.org.chromium.android_webview.AwContents: int nativeGetAwDrawGLFunction()>();

        return $i0;
    }

    private int getEffectiveBackgroundColor()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0;
        byte $b1;
        int $i2, $i3;
        com.android.org.chromium.android_webview.AwContentsClient $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwContentsClient: boolean isCachedRendererBackgroundColorValid()>();

        if $z0 != 0 goto label2;

     label1:
        $i2 = r0.<com.android.org.chromium.android_webview.AwContents: int mBaseBackgroundColor>;

        return $i2;

     label2:
        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        $i3 = virtualinvoke $r2.<com.android.org.chromium.android_webview.AwContentsClient: int getCachedRendererBackgroundColor()>();

        return $i3;
    }

    private int[] getLocationOnScreen()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int[] r1;
        android.view.ViewGroup $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 = newarray (int)[2];

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        virtualinvoke $r2.<android.view.ViewGroup: void getLocationOnScreen(int[])>(r1);

        return r1;
    }

    public static int getNativeInstanceCount()
    {
        int $i0;

        $i0 = staticinvoke <com.android.org.chromium.android_webview.AwContents: int nativeGetNativeInstanceCount()>();

        return $i0;
    }

    private boolean isDpadEvent(android.view.KeyEvent)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.KeyEvent r1;
        int $i0, $i1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.KeyEvent;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        tableswitch($i1)
        {
            case 19: goto label2;
            case 20: goto label2;
            case 21: goto label2;
            case 22: goto label2;
            case 23: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean isFlingActive()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean isFlingActive()>();

        return $z0;
    }

    private native void nativeAddVisitedLinks(long, java.lang.String[]);

    private native long nativeCapturePicture(long, int, int);

    private native void nativeClearCache(long, boolean);

    private native void nativeClearMatches(long);

    private native void nativeCreatePdfExporter(long, com.android.org.chromium.android_webview.AwPdfExporter);

    private static native void nativeDestroy(long);

    private native void nativeDocumentHasImages(long, android.os.Message);

    private native void nativeEnableOnNewPicture(long, boolean);

    private native void nativeFindAllAsync(long, java.lang.String);

    private native void nativeFindNext(long, boolean);

    private native void nativeFocusFirstNode(long);

    private native void nativeGenerateMHTML(long, java.lang.String, android.webkit.ValueCallback);

    private static native int nativeGetAwDrawGLFunction();

    private native int nativeGetAwDrawGLViewContext(long);

    private native byte[] nativeGetCertificate(long);

    private static native int nativeGetNativeInstanceCount();

    private native byte[] nativeGetOpaqueState(long);

    private native int nativeGetWebContents(long);

    private static native long nativeInit(com.android.org.chromium.android_webview.AwBrowserContext);

    private native void nativeInvokeGeolocationCallback(long, boolean, java.lang.String);

    private native void nativeOnAttachedToWindow(long, int, int);

    private static native void nativeOnDetachedFromWindow(long);

    private native boolean nativeOnDraw(long, android.graphics.Canvas, boolean, int, int, int, int, int, int);

    private native void nativeOnSizeChanged(long, int, int, int, int);

    private native int nativeReleasePopupAwContents(long);

    private native void nativeRequestNewHitTestDataAt(long, int, int);

    private native boolean nativeRestoreFromOpaqueState(long, byte[]);

    private native void nativeScrollTo(long, int, int);

    private static native void nativeSetAwDrawGLFunctionTable(int);

    private static native void nativeSetAwDrawSWFunctionTable(int);

    private native void nativeSetBackgroundColor(long, int);

    private native void nativeSetDipScale(long, float);

    private native void nativeSetExtraHeadersForUrl(long, java.lang.String, java.lang.String);

    private native void nativeSetFixedLayoutSize(long, int, int);

    private native void nativeSetGlobalVisibleRect(long, int, int, int, int);

    private native void nativeSetIsPaused(long, boolean);

    private native void nativeSetJavaPeers(long, com.android.org.chromium.android_webview.AwContents, com.android.org.chromium.android_webview.AwWebContentsDelegate, com.android.org.chromium.android_webview.AwContentsClientBridge, com.android.org.chromium.android_webview.AwContentsIoThreadClient, com.android.org.chromium.components.navigation_interception.InterceptNavigationDelegate);

    private native void nativeSetJsOnlineProperty(long, boolean);

    private static native void nativeSetShouldDownloadFavicons();

    private native void nativeSetViewVisibility(long, boolean);

    private native void nativeSetWindowVisibility(long, boolean);

    private native void nativeTrimMemory(long, int);

    private native void nativeUpdateLastHitTestData(long);

    private static void onDocumentHasImagesResponse(boolean, android.os.Message)
    {
        boolean z0;
        android.os.Message r0;
        byte b0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: android.os.Message;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        r0.<android.os.Message: int arg1> = b0;

        virtualinvoke r0.<android.os.Message: void sendToTarget()>();

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    private void onGeolocationPermissionsHidePrompt()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwContentsClient $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwContentsClient: void onGeolocationPermissionsHidePrompt()>();

        return;
    }

    private void onGeolocationPermissionsShowPrompt(java.lang.String)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwGeolocationPermissions r2;
        long $l0, $l2, $l3;
        byte $b1;
        com.android.org.chromium.android_webview.AwBrowserContext $r3;
        com.android.org.chromium.android_webview.AwSettings $r4;
        boolean $z0, $z1, $z2;
        com.android.org.chromium.android_webview.AwContents$AwGeolocationCallback $r5;
        com.android.org.chromium.android_webview.AwContentsClient $r6;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwBrowserContext mBrowserContext>;

        r2 = virtualinvoke $r3.<com.android.org.chromium.android_webview.AwBrowserContext: com.android.org.chromium.android_webview.AwGeolocationPermissions getGeolocationPermissions()>();

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        $z0 = virtualinvoke $r4.<com.android.org.chromium.android_webview.AwSettings: boolean getGeolocationEnabled()>();

        if $z0 != 0 goto label2;

        $l3 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeInvokeGeolocationCallback(long,boolean,java.lang.String)>($l3, 0, r1);

        return;

     label2:
        $z1 = virtualinvoke r2.<com.android.org.chromium.android_webview.AwGeolocationPermissions: boolean hasOrigin(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $z2 = virtualinvoke r2.<com.android.org.chromium.android_webview.AwGeolocationPermissions: boolean isOriginAllowed(java.lang.String)>(r1);

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeInvokeGeolocationCallback(long,boolean,java.lang.String)>($l2, $z2, r1);

        return;

     label3:
        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        $r5 = new com.android.org.chromium.android_webview.AwContents$AwGeolocationCallback;

        specialinvoke $r5.<com.android.org.chromium.android_webview.AwContents$AwGeolocationCallback: void <init>(com.android.org.chromium.android_webview.AwContents,com.android.org.chromium.android_webview.AwContents$1)>(r0, null);

        virtualinvoke $r6.<com.android.org.chromium.android_webview.AwContentsClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)>(r1, $r5);

        return;
    }

    private void onReceivedHttpAuthRequest(com.android.org.chromium.android_webview.AwHttpAuthHandler, java.lang.String, java.lang.String)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwHttpAuthHandler r1;
        java.lang.String r2, r3;
        com.android.org.chromium.android_webview.AwContentsClient $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: com.android.org.chromium.android_webview.AwHttpAuthHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        virtualinvoke $r4.<com.android.org.chromium.android_webview.AwContentsClient: void onReceivedHttpAuthRequest(com.android.org.chromium.android_webview.AwHttpAuthHandler,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    private void onReceivedIcon(android.graphics.Bitmap)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.graphics.Bitmap r1;
        com.android.org.chromium.android_webview.AwContentsClient $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwContentsClient: void onReceivedIcon(android.graphics.Bitmap)>(r1);

        r0.<com.android.org.chromium.android_webview.AwContents: android.graphics.Bitmap mFavicon> = r1;

        return;
    }

    private void onReceivedTouchIconUrl(java.lang.String, boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1;
        boolean z0;
        com.android.org.chromium.android_webview.AwContentsClient $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwContentsClient: void onReceivedTouchIconUrl(java.lang.String,boolean)>(r1, z0);

        return;
    }

    private void onWebLayoutContentsSizeChanged(int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1;
        com.android.org.chromium.android_webview.AwLayoutSizer $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwLayoutSizer mLayoutSizer>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwLayoutSizer: void onContentSizeChanged(int,int)>(i0, i1);

        return;
    }

    private void onWebLayoutPageScaleFactorChanged(float)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        float f0;
        com.android.org.chromium.android_webview.AwLayoutSizer $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        f0 := @parameter0: float;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwLayoutSizer mLayoutSizer>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwLayoutSizer: void onPageScaleChanged(float)>(f0);

        return;
    }

    private void postInvalidateOnAnimation()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0;
        android.view.ViewGroup $r1, $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = <com.android.org.chromium.android_webview.AwContents: boolean SUPPORTS_ON_ANIMATION>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        virtualinvoke $r2.<android.view.ViewGroup: void postInvalidateOnAnimation()>();

        return;

     label1:
        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        virtualinvoke $r1.<android.view.ViewGroup: void postInvalidate()>();

        return;
    }

    private void receivePopupContents(int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, $i2, $i3;
        boolean z0, z1, z2, z3, z4, z5;
        long $l1;
        android.view.ViewGroup $r1, $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mDeferredShouldOverrideUrlLoadingIsPendingForPopup> = 1;

        z0 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsAttachedToWindow>;

        z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsViewVisible>;

        z2 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsWindowVisible>;

        z3 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsPaused>;

        z4 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mContainerViewFocused>;

        z5 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mWindowFocused>;

        if z4 == 0 goto label01;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onFocusChanged(boolean,int,android.graphics.Rect)>(0, 0, null);

     label01:
        if z5 == 0 goto label02;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onWindowFocusChanged(boolean)>(0);

     label02:
        if z1 == 0 goto label03;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setViewVisibilityInternal(boolean)>(0);

     label03:
        if z2 == 0 goto label04;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setWindowVisibilityInternal(boolean)>(0);

     label04:
        if z3 != 0 goto label05;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onPause()>();

     label05:
        $l1 = (long) i0;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setNewAwContents(long)>($l1);

        if z3 != 0 goto label06;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onResume()>();

     label06:
        if z0 == 0 goto label07;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onAttachedToWindow()>();

     label07:
        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i2 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i3 = virtualinvoke $r2.<android.view.ViewGroup: int getHeight()>();

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onSizeChanged(int,int,int,int)>($i2, $i3, 0, 0);

        if z2 == 0 goto label08;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setWindowVisibilityInternal(boolean)>(1);

     label08:
        if z1 == 0 goto label09;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setViewVisibilityInternal(boolean)>(1);

     label09:
        if z5 == 0 goto label10;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onWindowFocusChanged(boolean)>(z5);

     label10:
        if z4 == 0 goto label11;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void onFocusChanged(boolean,int,android.graphics.Rect)>(1, 0, null);

     label11:
        return;
    }

    private boolean requestDrawGL(android.graphics.Canvas)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.graphics.Canvas r1;
        com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate mInternalAccessAdapter>;

        $z0 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate: boolean requestDrawGL(android.graphics.Canvas)>(r1);

        return $z0;
    }

    private void requestVisitedHistoryFromClient()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwContents$3 r1, $r2;
        com.android.org.chromium.android_webview.AwContentsClient $r3;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r2 = new com.android.org.chromium.android_webview.AwContents$3;

        specialinvoke $r2.<com.android.org.chromium.android_webview.AwContents$3: void <init>(com.android.org.chromium.android_webview.AwContents)>(r0);

        r1 = $r2;

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        virtualinvoke $r3.<com.android.org.chromium.android_webview.AwContentsClient: void getVisitedHistory(android.webkit.ValueCallback)>(r1);

        return;
    }

    private void saveWebArchiveInternal(java.lang.String, android.webkit.ValueCallback)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1;
        android.webkit.ValueCallback r2;
        com.android.org.chromium.android_webview.AwContents$6 $r3;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.webkit.ValueCallback;

        if r1 == null goto label1;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

     label1:
        $r3 = new com.android.org.chromium.android_webview.AwContents$6;

        specialinvoke $r3.<com.android.org.chromium.android_webview.AwContents$6: void <init>(com.android.org.chromium.android_webview.AwContents,android.webkit.ValueCallback)>(r0, r2);

        staticinvoke <com.android.org.chromium.base.ThreadUtils: void runOnUiThread(java.lang.Runnable)>($r3);

        return;

     label2:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeGenerateMHTML(long,java.lang.String,android.webkit.ValueCallback)>($l2, r1, r2);

        return;
    }

    private void scrollContainerViewTo(int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void scrollContainerViewTo(int,int)>(i0, i1);

        return;
    }

    private void setAwAutofillManagerDelegate(com.android.org.chromium.android_webview.AwAutofillManagerDelegate)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwAutofillManagerDelegate r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: com.android.org.chromium.android_webview.AwAutofillManagerDelegate;

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwAutofillManagerDelegate mAwAutofillManagerDelegate> = r1;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke r1.<com.android.org.chromium.android_webview.AwAutofillManagerDelegate: void init(com.android.org.chromium.content.browser.ContentViewCore)>($r2);

        return;
    }

    public static void setAwDrawGLFunctionTable(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <com.android.org.chromium.android_webview.AwContents: void nativeSetAwDrawGLFunctionTable(int)>(i0);

        return;
    }

    public static void setAwDrawSWFunctionTable(int)
    {
        int i0;

        i0 := @parameter0: int;

        staticinvoke <com.android.org.chromium.android_webview.AwContents: void nativeSetAwDrawSWFunctionTable(int)>(i0);

        return;
    }

    private void setContentsSize(int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1;
        float $f0, $f1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $f0 = (float) i0;

        r0.<com.android.org.chromium.android_webview.AwContents: float mContentWidthDip> = $f0;

        $f1 = (float) i1;

        r0.<com.android.org.chromium.android_webview.AwContents: float mContentHeightDip> = $f1;

        return;
    }

    private void setMaxContainerViewScrollOffset(int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void setMaxScrollOffset(int,int)>(i0, i1);

        return;
    }

    private void setNewAwContents(long)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long l0, $l2, $l4, $l5, $l6, $l7, $l9;
        int i1;
        byte $b3, $b8;
        boolean $z0;
        com.android.org.chromium.content.common.CleanupReference $r1, $r19;
        com.android.org.chromium.android_webview.AwContents$DestroyRunnable $r2;
        com.android.org.chromium.android_webview.AwContents$AwGestureStateListener $r3;
        android.view.ViewGroup $r4;
        com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate $r5;
        com.android.org.chromium.android_webview.AwZoomControls $r6;
        com.android.org.chromium.content.browser.ContentViewCore $r7, $r13, $r16, $r17;
        com.android.org.chromium.android_webview.AwContentViewClient $r8;
        com.android.org.chromium.android_webview.AwContentsIoThreadClient $r9;
        com.android.org.chromium.android_webview.AwContents$InterceptNavigationDelegateImpl $r10;
        com.android.org.chromium.android_webview.AwWebContentsDelegate $r11;
        com.android.org.chromium.android_webview.AwContentsClientBridge $r12;
        com.android.org.chromium.android_webview.AwSettings $r14;
        com.android.org.chromium.android_webview.AwContentsClient $r15;
        float $f0;
        double $d0;
        java.lang.AssertionError $r18;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        l0 := @parameter0: long;

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void destroy()>();

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore> = null;

     label1:
        $z0 = <com.android.org.chromium.android_webview.AwContents: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $l9 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b8 = $l9 cmp 0L;

        if $b8 != 0 goto label2;

        $r19 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.common.CleanupReference mCleanupReference>;

        if $r19 != null goto label2;

        $r17 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        if $r17 == null goto label3;

     label2:
        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label3:
        r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents> = l0;

        $r1 = new com.android.org.chromium.content.common.CleanupReference;

        $r2 = new com.android.org.chromium.android_webview.AwContents$DestroyRunnable;

        $l4 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke $r2.<com.android.org.chromium.android_webview.AwContents$DestroyRunnable: void <init>(long,com.android.org.chromium.android_webview.AwContents$1)>($l4, null);

        specialinvoke $r1.<com.android.org.chromium.content.common.CleanupReference: void <init>(java.lang.Object,java.lang.Runnable)>(r0, $r2);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.common.CleanupReference mCleanupReference> = $r1;

        $l5 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        i1 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: int nativeGetWebContents(long)>($l5);

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate mInternalAccessAdapter>;

        $r3 = new com.android.org.chromium.android_webview.AwContents$AwGestureStateListener;

        specialinvoke $r3.<com.android.org.chromium.android_webview.AwContents$AwGestureStateListener: void <init>(com.android.org.chromium.android_webview.AwContents,com.android.org.chromium.android_webview.AwContents$1)>(r0, null);

        $r8 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentViewClient mContentViewClient>;

        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwZoomControls mZoomControls>;

        $r7 = staticinvoke <com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore createAndInitializeContentViewCore(android.view.ViewGroup,com.android.org.chromium.android_webview.AwContents$InternalAccessDelegate,int,com.android.org.chromium.content.browser.ContentViewCore$GestureStateListener,com.android.org.chromium.content.browser.ContentViewClient,com.android.org.chromium.content.browser.ContentViewCore$ZoomControlsDelegate)>($r4, $r5, i1, $r3, $r8, $r6);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore> = $r7;

        $l6 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $r11 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwWebContentsDelegate mWebContentsDelegate>;

        $r12 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClientBridge mContentsClientBridge>;

        $r9 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsIoThreadClient mIoThreadClient>;

        $r10 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$InterceptNavigationDelegateImpl mInterceptNavigationDelegate>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetJavaPeers(long,com.android.org.chromium.android_webview.AwContents,com.android.org.chromium.android_webview.AwWebContentsDelegate,com.android.org.chromium.android_webview.AwContentsClientBridge,com.android.org.chromium.android_webview.AwContentsIoThreadClient,com.android.org.chromium.components.navigation_interception.InterceptNavigationDelegate)>($l6, r0, $r11, $r12, $r9, $r10);

        $r15 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        $r13 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r15.<com.android.org.chromium.android_webview.AwContentsClient: void installWebContentsObserver(com.android.org.chromium.content.browser.ContentViewCore)>($r13);

        $r14 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        virtualinvoke $r14.<com.android.org.chromium.android_webview.AwSettings: void setWebContents(int)>(i1);

        $l7 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $d0 = r0.<com.android.org.chromium.android_webview.AwContents: double mDIPScale>;

        $f0 = (float) $d0;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetDipScale(long,float)>($l7, $f0);

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void updateGlobalVisibleRect()>();

        $r16 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r16.<com.android.org.chromium.content.browser.ContentViewCore: void onShow()>();

        return;
    }

    private void setPageScaleFactor(float)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        byte $b0;
        com.android.org.chromium.android_webview.AwContentsClient $r1;
        com.android.org.chromium.android_webview.AwContentsClientCallbackHelper $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        f0 := @parameter0: float;

        $f2 = r0.<com.android.org.chromium.android_webview.AwContents: float mPageScaleFactor>;

        $b0 = $f2 cmpl f0;

        if $b0 != 0 goto label1;

        return;

     label1:
        f1 = r0.<com.android.org.chromium.android_webview.AwContents: float mPageScaleFactor>;

        r0.<com.android.org.chromium.android_webview.AwContents: float mPageScaleFactor> = f0;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwContentsClient: com.android.org.chromium.android_webview.AwContentsClientCallbackHelper getCallbackHelper()>();

        $d1 = (double) f1;

        $d0 = r0.<com.android.org.chromium.android_webview.AwContents: double mDIPScale>;

        $d2 = $d1 * $d0;

        $f5 = (float) $d2;

        $f3 = r0.<com.android.org.chromium.android_webview.AwContents: float mPageScaleFactor>;

        $d4 = (double) $f3;

        $d3 = r0.<com.android.org.chromium.android_webview.AwContents: double mDIPScale>;

        $d5 = $d4 * $d3;

        $f4 = (float) $d5;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwContentsClientCallbackHelper: void postOnScaleChangedScaled(float,float)>($f5, $f4);

        return;
    }

    public static void setShouldDownloadFavicons()
    {
        staticinvoke <com.android.org.chromium.android_webview.AwContents: void nativeSetShouldDownloadFavicons()>();

        return;
    }

    private void setViewVisibilityInternal(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0, $z1;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsViewVisible> = z0;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsViewVisible>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetViewVisibility(long,boolean)>($l2, $z1);

        return;
    }

    private void setWindowVisibilityInternal(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0, $z1;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsWindowVisible> = z0;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsWindowVisible>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetWindowVisibility(long,boolean)>($l2, $z1);

        return;
    }

    private void syncOnNewPictureStateToNative()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long l0, $l1;
        boolean z0, $z1, $z2;
        byte $b2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l1 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return;

     label1:
        l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mPictureListenerEnabled>;

        if $z1 != 0 goto label2;

        $z2 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mClearViewActive>;

        if $z2 == 0 goto label4;

     label2:
        z0 = 1;

     label3:
        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeEnableOnNewPicture(long,boolean)>(l0, z0);

        return;

     label4:
        z0 = 0;

        goto label3;
    }

    private void updateGlobalVisibleRect()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0, $l6;
        byte $b1;
        android.graphics.Rect $r1, $r3, $r4, $r5, $r6, $r7;
        android.view.ViewGroup $r2;
        boolean $z0;
        int $i2, $i3, $i4, $i5;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $r1 = <com.android.org.chromium.android_webview.AwContents: android.graphics.Rect sLocalGlobalVisibleRect>;

        $z0 = virtualinvoke $r2.<android.view.ViewGroup: boolean getGlobalVisibleRect(android.graphics.Rect)>($r1);

        if $z0 != 0 goto label2;

        $r7 = <com.android.org.chromium.android_webview.AwContents: android.graphics.Rect sLocalGlobalVisibleRect>;

        virtualinvoke $r7.<android.graphics.Rect: void setEmpty()>();

     label2:
        $l6 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $r3 = <com.android.org.chromium.android_webview.AwContents: android.graphics.Rect sLocalGlobalVisibleRect>;

        $i5 = $r3.<android.graphics.Rect: int left>;

        $r4 = <com.android.org.chromium.android_webview.AwContents: android.graphics.Rect sLocalGlobalVisibleRect>;

        $i4 = $r4.<android.graphics.Rect: int top>;

        $r5 = <com.android.org.chromium.android_webview.AwContents: android.graphics.Rect sLocalGlobalVisibleRect>;

        $i3 = $r5.<android.graphics.Rect: int right>;

        $r6 = <com.android.org.chromium.android_webview.AwContents: android.graphics.Rect sLocalGlobalVisibleRect>;

        $i2 = $r6.<android.graphics.Rect: int bottom>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetGlobalVisibleRect(long,int,int,int,int)>($l6, $i5, $i4, $i3, $i2);

        return;
    }

    private void updateHardwareAcceleratedFeaturesToggle()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwSettings r1;
        boolean z0, $z1, $z2;
        android.view.ViewGroup $r2;
        int $i0, $i1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        $z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsAttachedToWindow>;

        if $z1 == 0 goto label3;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $z2 = virtualinvoke $r2.<android.view.ViewGroup: boolean isHardwareAccelerated()>();

        if $z2 == 0 goto label3;

        $i0 = r0.<com.android.org.chromium.android_webview.AwContents: int mLayerType>;

        if $i0 == 0 goto label1;

        $i1 = r0.<com.android.org.chromium.android_webview.AwContents: int mLayerType>;

        if $i1 != 2 goto label3;

     label1:
        z0 = 1;

     label2:
        virtualinvoke r1.<com.android.org.chromium.android_webview.AwSettings: void setEnableSupportedHardwareAcceleratedFeatures(boolean)>(z0);

        return;

     label3:
        z0 = 0;

        goto label2;
    }

    private void updateHitTestData(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        java.lang.String r1, r2, r3, r4;
        com.android.org.chromium.android_webview.AwContents$HitTestData $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        $r5.<com.android.org.chromium.android_webview.AwContents$HitTestData: int hitTestResultType> = i0;

        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        $r6.<com.android.org.chromium.android_webview.AwContents$HitTestData: java.lang.String hitTestResultExtraData> = r1;

        $r7 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        $r7.<com.android.org.chromium.android_webview.AwContents$HitTestData: java.lang.String href> = r2;

        $r8 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        $r8.<com.android.org.chromium.android_webview.AwContents$HitTestData: java.lang.String anchorText> = r3;

        $r9 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        $r9.<com.android.org.chromium.android_webview.AwContents$HitTestData: java.lang.String imgSrc> = r4;

        return;
    }

    public void addPossiblyUnsafeJavascriptInterface(java.lang.Object, java.lang.String, java.lang.Class)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.Object r1;
        java.lang.String r2;
        java.lang.Class r3;
        com.android.org.chromium.content.browser.ContentViewCore $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Class;

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r4.<com.android.org.chromium.content.browser.ContentViewCore: void addPossiblyUnsafeJavascriptInterface(java.lang.Object,java.lang.String,java.lang.Class)>(r1, r2, r3);

        return;
    }

    public boolean canGoBack()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: boolean canGoBack()>();

        return $z0;
    }

    public boolean canGoBackOrForward(int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: boolean canGoToOffset(int)>(i0);

        return $z0;
    }

    public boolean canGoForward()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: boolean canGoForward()>();

        return $z0;
    }

    public boolean canZoomIn()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        com.android.org.chromium.content.browser.RenderCoordinates $r2;
        float $f0, $f1, $f2;
        byte $b0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: com.android.org.chromium.content.browser.RenderCoordinates getRenderCoordinates()>();

        $f0 = virtualinvoke $r2.<com.android.org.chromium.content.browser.RenderCoordinates: float getMaxPageScaleFactor()>();

        $f1 = r0.<com.android.org.chromium.android_webview.AwContents: float mPageScaleFactor>;

        $f2 = $f0 - $f1;

        $b0 = $f2 cmpl 0.007F;

        if $b0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean canZoomOut()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        float $f0, $f1, $f2;
        com.android.org.chromium.content.browser.RenderCoordinates $r2;
        byte $b0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $f0 = r0.<com.android.org.chromium.android_webview.AwContents: float mPageScaleFactor>;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: com.android.org.chromium.content.browser.RenderCoordinates getRenderCoordinates()>();

        $f1 = virtualinvoke $r2.<com.android.org.chromium.content.browser.RenderCoordinates: float getMinPageScaleFactor()>();

        $f2 = $f0 - $f1;

        $b0 = $f2 cmpl 0.007F;

        if $b0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.graphics.Picture capturePicture()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0, $l2, $l5;
        byte $b1;
        com.android.org.chromium.android_webview.AwPicture $r1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r2, $r3;
        int $i3, $i4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return null;

     label1:
        $r1 = new com.android.org.chromium.android_webview.AwPicture;

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i3 = virtualinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeHorizontalScrollRange()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i4 = virtualinvoke $r3.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeVerticalScrollRange()>();

        $l5 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: long nativeCapturePicture(long,int,int)>($l2, $i3, $i4);

        specialinvoke $r1.<com.android.org.chromium.android_webview.AwPicture: void <init>(long)>($l5);

        return $r1;
    }

    public void clearCache(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeClearCache(long,boolean)>($l2, z0);

        return;
    }

    public void clearHistory()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void clearHistory()>();

        return;
    }

    public void clearMatches()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeClearMatches(long)>($l2);

        return;
    }

    public void clearSslPreferences()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void clearSslPreferences()>();

        return;
    }

    public void clearView()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.ViewGroup $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mClearViewActive> = 1;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void syncOnNewPictureStateToNative()>();

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        virtualinvoke $r1.<android.view.ViewGroup: void invalidate()>();

        return;
    }

    public int computeHorizontalScrollOffset()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeHorizontalScrollOffset()>();

        return $i0;
    }

    public int computeHorizontalScrollRange()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeHorizontalScrollRange()>();

        return $i0;
    }

    public void computeScroll()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.OverScrollGlow $r1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void computeScrollAndAbsorbGlow(com.android.org.chromium.android_webview.OverScrollGlow)>($r1);

        return;
    }

    public int computeVerticalScrollExtent()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeVerticalScrollExtent()>();

        return $i0;
    }

    public int computeVerticalScrollOffset()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeVerticalScrollOffset()>();

        return $i0;
    }

    public int computeVerticalScrollRange()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeVerticalScrollRange()>();

        return $i0;
    }

    public void destroy()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.common.CleanupReference $r1, $r6, $r8;
        boolean $z0, $z1, $z2, $z3;
        long $l0;
        byte $b1;
        java.lang.AssertionError $r2, $r4;
        com.android.org.chromium.content.browser.ContentViewCore $r3, $r5;
        java.util.List $r7, $r9;
        java.util.ArrayList $r10;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.common.CleanupReference mCleanupReference>;

        if $r1 == null goto label3;

        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r5.<com.android.org.chromium.content.browser.ContentViewCore: void destroy()>();

        r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents> = 0L;

        $z3 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsAttachedToWindow>;

        if $z3 == 0 goto label4;

        $r7 = r0.<com.android.org.chromium.android_webview.AwContents: java.util.List mPendingDetachCleanupReferences>;

        if $r7 != null goto label1;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r0.<com.android.org.chromium.android_webview.AwContents: java.util.List mPendingDetachCleanupReferences> = $r10;

     label1:
        $r9 = r0.<com.android.org.chromium.android_webview.AwContents: java.util.List mPendingDetachCleanupReferences>;

        $r8 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.common.CleanupReference mCleanupReference>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.common.CleanupReference mCleanupReference> = null;

     label3:
        $z0 = <com.android.org.chromium.android_webview.AwContents: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z2 = virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: boolean isAlive()>();

        if $z2 == 0 goto label5;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label4:
        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.common.CleanupReference mCleanupReference>;

        virtualinvoke $r6.<com.android.org.chromium.content.common.CleanupReference: void cleanupNow()>();

        goto label2;

     label5:
        $z1 = <com.android.org.chromium.android_webview.AwContents: boolean $assertionsDisabled>;

        if $z1 != 0 goto label6;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label6;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label6:
        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;
        com.android.org.chromium.android_webview.AwSettings $r3;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: boolean isDpadEvent(android.view.KeyEvent)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        virtualinvoke $r3.<com.android.org.chromium.android_webview.AwSettings: void setSpatialNavigationEnabled(boolean)>(1);

     label1:
        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z1 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z1;
    }

    public void documentHasImages(android.os.Message)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.os.Message r1;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.os.Message;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeDocumentHasImages(long,android.os.Message)>($l2, r1);

        return;
    }

    public void enableOnNewPicture(boolean, boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0, z1;
        long $l0;
        byte $b1;
        java.util.concurrent.Callable $r1;
        com.android.org.chromium.android_webview.AwContents$2 $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        if z1 == 0 goto label3;

        r0.<com.android.org.chromium.android_webview.AwContents: java.util.concurrent.Callable mPictureListenerContentProvider> = null;

     label2:
        r0.<com.android.org.chromium.android_webview.AwContents: boolean mPictureListenerEnabled> = z0;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void syncOnNewPictureStateToNative()>();

        return;

     label3:
        if z0 == 0 goto label2;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: java.util.concurrent.Callable mPictureListenerContentProvider>;

        if $r1 != null goto label2;

        $r2 = new com.android.org.chromium.android_webview.AwContents$2;

        specialinvoke $r2.<com.android.org.chromium.android_webview.AwContents$2: void <init>(com.android.org.chromium.android_webview.AwContents)>(r0);

        r0.<com.android.org.chromium.android_webview.AwContents: java.util.concurrent.Callable mPictureListenerContentProvider> = $r2;

        goto label2;
    }

    public void evaluateJavaScript(java.lang.String, android.webkit.ValueCallback)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1;
        android.webkit.ValueCallback r2;
        com.android.org.chromium.android_webview.AwContents$5 r3, $r5;
        com.android.org.chromium.content.browser.ContentViewCore $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.webkit.ValueCallback;

        r3 = null;

        if r2 == null goto label1;

        $r5 = new com.android.org.chromium.android_webview.AwContents$5;

        specialinvoke $r5.<com.android.org.chromium.android_webview.AwContents$5: void <init>(com.android.org.chromium.android_webview.AwContents,android.webkit.ValueCallback)>(r0, r2);

        r3 = $r5;

     label1:
        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r4.<com.android.org.chromium.content.browser.ContentViewCore: void evaluateJavaScript(java.lang.String,com.android.org.chromium.content.browser.ContentViewCore$JavaScriptCallback)>(r1, r3);

        return;
    }

    public void evaluateJavaScriptEvenIfNotYetNavigated(java.lang.String)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: void evaluateJavaScriptEvenIfNotYetNavigated(java.lang.String)>(r1);

        return;
    }

    public void findAllAsync(java.lang.String)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeFindAllAsync(long,java.lang.String)>($l2, r1);

        return;
    }

    public void findNext(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeFindNext(long,boolean)>($l2, z0);

        return;
    }

    public void flingScroll(int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void flingScroll(int,int)>(i0, i1);

        return;
    }

    public android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        android.view.accessibility.AccessibilityNodeProvider $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        return $r2;
    }

    public int getAwDrawGLViewContext()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0;
        long $l0, $l2;
        int $i1;
        byte $b3;
        java.lang.AssertionError $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = <com.android.org.chromium.android_webview.AwContents: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $i1 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: int nativeGetAwDrawGLViewContext(long)>($l0);

        return $i1;
    }

    public android.net.http.SslCertificate getCertificate()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0, $l2;
        byte $b1;
        byte[] $r1;
        android.net.http.SslCertificate $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return null;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $r1 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: byte[] nativeGetCertificate(long)>($l2);

        $r2 = staticinvoke <com.android.org.chromium.android_webview.SslUtil: android.net.http.SslCertificate getCertificateFromDerBytes(byte[])>($r1);

        return $r2;
    }

    public int getContentHeightCss()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        float $f0;
        double $d0, $d1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $f0 = r0.<com.android.org.chromium.android_webview.AwContents: float mContentHeightDip>;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d1;

        return $i0;
    }

    public com.android.org.chromium.content.browser.ContentViewCore getContentViewCore()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        return $r1;
    }

    public int getContentWidthCss()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        float $f0;
        double $d0, $d1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $f0 = r0.<com.android.org.chromium.android_webview.AwContents: float mContentWidthDip>;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d1;

        return $i0;
    }

    public android.graphics.Bitmap getFavicon()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.graphics.Bitmap $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: android.graphics.Bitmap mFavicon>;

        return $r1;
    }

    public java.lang.String[] getHttpAuthUsernamePassword(java.lang.String, java.lang.String)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1, r2;
        com.android.org.chromium.content.browser.ContentViewCore $r3;
        com.android.org.chromium.android_webview.AwBrowserContext $r4;
        android.content.Context $r5;
        com.android.org.chromium.android_webview.HttpAuthDatabase $r6;
        java.lang.String[] $r7;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwBrowserContext mBrowserContext>;

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r5 = virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: android.content.Context getContext()>();

        $r6 = virtualinvoke $r4.<com.android.org.chromium.android_webview.AwBrowserContext: com.android.org.chromium.android_webview.HttpAuthDatabase getHttpAuthDatabase(android.content.Context)>($r5);

        $r7 = virtualinvoke $r6.<com.android.org.chromium.android_webview.HttpAuthDatabase: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>(r1, r2);

        return $r7;
    }

    public com.android.org.chromium.android_webview.AwContents$HitTestData getLastHitTestResult()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0, $l2;
        byte $b1;
        com.android.org.chromium.android_webview.AwContents$HitTestData $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return null;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeUpdateLastHitTestData(long)>($l2);

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        return $r1;
    }

    public int getMostRecentProgress()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwWebContentsDelegate $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwWebContentsDelegate mWebContentsDelegate>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwWebContentsDelegate: int getMostRecentProgress()>();

        return $i0;
    }

    public com.android.org.chromium.content.browser.NavigationHistory getNavigationHistory()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        com.android.org.chromium.content.browser.NavigationHistory $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: com.android.org.chromium.content.browser.NavigationHistory getNavigationHistory()>();

        return $r2;
    }

    public java.lang.String getOriginalUrl()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.NavigationHistory r1;
        int i0, $i1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;
        com.android.org.chromium.content.browser.NavigationEntry $r3;
        java.lang.String $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        r1 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: com.android.org.chromium.content.browser.NavigationHistory getNavigationHistory()>();

        i0 = virtualinvoke r1.<com.android.org.chromium.content.browser.NavigationHistory: int getCurrentEntryIndex()>();

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r1.<com.android.org.chromium.content.browser.NavigationHistory: int getEntryCount()>();

        if i0 >= $i1 goto label1;

        $r3 = virtualinvoke r1.<com.android.org.chromium.content.browser.NavigationHistory: com.android.org.chromium.content.browser.NavigationEntry getEntryAtIndex(int)>(i0);

        $r4 = virtualinvoke $r3.<com.android.org.chromium.content.browser.NavigationEntry: java.lang.String getOriginalUrl()>();

        return $r4;

     label1:
        return null;
    }

    public com.android.org.chromium.android_webview.AwPdfExporter getPdfExporter()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0, $l2;
        byte $b1;
        com.android.org.chromium.android_webview.AwPdfExporter $r1, $r2, $r3, $r5;
        android.view.ViewGroup $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwPdfExporter mAwPdfExporter>;

        if $r1 != null goto label2;

        $r3 = new com.android.org.chromium.android_webview.AwPdfExporter;

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        specialinvoke $r3.<com.android.org.chromium.android_webview.AwPdfExporter: void <init>(android.view.ViewGroup)>($r4);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwPdfExporter mAwPdfExporter> = $r3;

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwPdfExporter mAwPdfExporter>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeCreatePdfExporter(long,com.android.org.chromium.android_webview.AwPdfExporter)>($l2, $r5);

     label2:
        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwPdfExporter mAwPdfExporter>;

        return $r2;
    }

    public float getScale()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        float $f0, $f1;
        double $d0, $d1, $d2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $f0 = r0.<com.android.org.chromium.android_webview.AwContents: float mPageScaleFactor>;

        $d1 = (double) $f0;

        $d0 = r0.<com.android.org.chromium.android_webview.AwContents: double mDIPScale>;

        $d2 = $d1 * $d0;

        $f1 = (float) $d2;

        return $f1;
    }

    public com.android.org.chromium.android_webview.AwSettings getSettings()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        return $r1;
    }

    public java.lang.String getTitle()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        java.lang.String $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: java.lang.String getTitle()>();

        return $r2;
    }

    public java.lang.String getUrl()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1, $r3;
        com.android.org.chromium.content.browser.ContentViewCore $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        r1 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: java.lang.String getUrl()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        r1 = null;

     label2:
        return r1;
    }

    public void goBack()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void goBack()>();

        return;
    }

    public void goBackOrForward(int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void goToOffset(int)>(i0);

        return;
    }

    public void goForward()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void goForward()>();

        return;
    }

    public void hideAutofillPopup()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.android_webview.AwAutofillManagerDelegate $r1, $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwAutofillManagerDelegate mAwAutofillManagerDelegate>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwAutofillManagerDelegate mAwAutofillManagerDelegate>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwAutofillManagerDelegate: void hideAutofillPopup()>();

     label1:
        return;
    }

    public void invokeZoomPicker()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void invokeZoomPicker()>();

        return;
    }

    public boolean isPaused()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsPaused>;

        return $z0;
    }

    public void loadUrl(com.android.org.chromium.content.browser.LoadUrlParams)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.LoadUrlParams r1;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8, $i10;
        java.lang.String $r2, $r6, $r7, $r9, $r10, $r11, $r12;
        long $l5, $l9;
        byte $b6;
        java.util.HashMap $r3;
        com.android.org.chromium.content.browser.ContentViewCore $r4, $r13;
        boolean $z0, $z1, $z2;
        com.android.org.chromium.android_webview.AwContentsClient $r5;
        com.android.org.chromium.android_webview.AwContentsClientCallbackHelper $r8;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: com.android.org.chromium.content.browser.LoadUrlParams;

        $i0 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: int getLoadUrlType()>();

        $i1 = <com.android.org.chromium.content.browser.LoadUrlParams: int LOAD_TYPE_DATA>;

        if $i0 != $i1 goto label1;

        $z2 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: boolean isBaseUrlDataScheme()>();

        if $z2 != 0 goto label1;

        virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: void setCanLoadLocalResources(boolean)>(1);

     label1:
        $r2 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: java.lang.String getUrl()>();

        if $r2 == null goto label2;

        $r10 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: java.lang.String getUrl()>();

        $r13 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r12 = virtualinvoke $r13.<com.android.org.chromium.content.browser.ContentViewCore: java.lang.String getUrl()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label2;

        $i10 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: int getTransitionType()>();

        if $i10 != 0 goto label2;

        virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: void setTransitionType(int)>(8);

     label2:
        $i2 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: int getTransitionType()>();

        $i3 = 134217728 | $i2;

        virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: void setTransitionType(int)>($i3);

        $i4 = <com.android.org.chromium.content.browser.LoadUrlParams: int UA_OVERRIDE_TRUE>;

        virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: void setOverrideUserAgent(int)>($i4);

        $l5 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label3;

        $l9 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $r9 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: java.lang.String getUrl()>();

        $r11 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: java.lang.String getExtraHttpRequestHeadersString()>();

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetExtraHeadersForUrl(long,java.lang.String,java.lang.String)>($l9, $r9, $r11);

     label3:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: void setExtraHeaders(java.util.Map)>($r3);

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r4.<com.android.org.chromium.content.browser.ContentViewCore: void loadUrl(com.android.org.chromium.content.browser.LoadUrlParams)>(r1);

        $z0 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mHasRequestedVisitedHistoryFromClient>;

        if $z0 != 0 goto label4;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mHasRequestedVisitedHistoryFromClient> = 1;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void requestVisitedHistoryFromClient()>();

     label4:
        $i7 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: int getLoadUrlType()>();

        $i8 = <com.android.org.chromium.content.browser.LoadUrlParams: int LOAD_TYPE_DATA>;

        if $i7 != $i8 goto label5;

        $r6 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: java.lang.String getBaseUrl()>();

        if $r6 == null goto label5;

        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        $r8 = virtualinvoke $r5.<com.android.org.chromium.android_webview.AwContentsClient: com.android.org.chromium.android_webview.AwContentsClientCallbackHelper getCallbackHelper()>();

        $r7 = virtualinvoke r1.<com.android.org.chromium.content.browser.LoadUrlParams: java.lang.String getBaseUrl()>();

        virtualinvoke $r8.<com.android.org.chromium.android_webview.AwContentsClientCallbackHelper: void postOnPageStarted(java.lang.String)>($r7);

     label5:
        return;
    }

    public void onAttachedToWindow()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0, $l2;
        byte $b1;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        android.view.ViewGroup $r2, $r3, $r6;
        int $i3, $i4;
        android.content.ComponentCallbacks2 $r4, $r8;
        com.android.org.chromium.android_webview.AwContents$AwComponentCallbacks $r5;
        android.content.Context $r7;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

     label1:
        return;

     label2:
        r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsAttachedToWindow> = 1;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void onAttachedToWindow()>();

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i3 = virtualinvoke $r2.<android.view.ViewGroup: int getWidth()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i4 = virtualinvoke $r3.<android.view.ViewGroup: int getHeight()>();

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeOnAttachedToWindow(long,int,int)>($l2, $i3, $i4);

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void updateHardwareAcceleratedFeaturesToggle()>();

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: android.content.ComponentCallbacks2 mComponentCallbacks>;

        if $r4 != null goto label1;

        $r5 = new com.android.org.chromium.android_webview.AwContents$AwComponentCallbacks;

        specialinvoke $r5.<com.android.org.chromium.android_webview.AwContents$AwComponentCallbacks: void <init>(com.android.org.chromium.android_webview.AwContents,com.android.org.chromium.android_webview.AwContents$1)>(r0, null);

        r0.<com.android.org.chromium.android_webview.AwContents: android.content.ComponentCallbacks2 mComponentCallbacks> = $r5;

        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $r7 = virtualinvoke $r6.<android.view.ViewGroup: android.content.Context getContext()>();

        $r8 = r0.<com.android.org.chromium.android_webview.AwContents: android.content.ComponentCallbacks2 mComponentCallbacks>;

        virtualinvoke $r7.<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>($r8);

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.content.res.Configuration r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        return;
    }

    public void onContainerViewOverScrolled(int, int, boolean, boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        boolean z0, z1;
        android.view.ViewGroup $r1, $r2, $r5, $r7;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r3, $r8, $r9;
        com.android.org.chromium.android_webview.OverScrollGlow $r4, $r6;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        i2 = virtualinvoke $r1.<android.view.ViewGroup: int getScrollX()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        i3 = virtualinvoke $r2.<android.view.ViewGroup: int getScrollY()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        virtualinvoke $r3.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void onContainerViewOverScrolled(int,int,boolean,boolean)>(i0, i1, z0, z1);

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        if $r4 == null goto label1;

        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i4 = virtualinvoke $r5.<android.view.ViewGroup: int getScrollX()>();

        $r7 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i5 = virtualinvoke $r7.<android.view.ViewGroup: int getScrollY()>();

        $r8 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i6 = virtualinvoke $r8.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumHorizontalScrollOffset()>();

        $r9 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i7 = virtualinvoke $r9.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumVerticalScrollOffset()>();

        virtualinvoke $r6.<com.android.org.chromium.android_webview.OverScrollGlow: void pullGlow(int,int,int,int,int,int)>($i4, $i5, i2, i3, $i6, $i7);

     label1:
        return;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.inputmethod.EditorInfo r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;
        android.view.inputmethod.InputConnection $r3;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r3 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>(r1);

        return $r3;
    }

    public void onDetachedFromWindow()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, $i3;
        long $l1, $l4;
        byte $b2;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        android.content.ComponentCallbacks2 $r2, $r11;
        com.android.org.chromium.android_webview.ScrollAccessibilityHelper $r3;
        java.util.List $r4, $r5, $r6;
        java.lang.Object $r7;
        com.android.org.chromium.content.common.CleanupReference $r8;
        android.view.ViewGroup $r9;
        android.content.Context $r10;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsAttachedToWindow> = 0;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: void hideAutofillPopup()>();

        $l1 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $l4 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        staticinvoke <com.android.org.chromium.android_webview.AwContents: void nativeOnDetachedFromWindow(long)>($l4);

     label1:
        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void onDetachedFromWindow()>();

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void updateHardwareAcceleratedFeaturesToggle()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.content.ComponentCallbacks2 mComponentCallbacks>;

        if $r2 == null goto label2;

        $r9 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $r10 = virtualinvoke $r9.<android.view.ViewGroup: android.content.Context getContext()>();

        $r11 = r0.<com.android.org.chromium.android_webview.AwContents: android.content.ComponentCallbacks2 mComponentCallbacks>;

        virtualinvoke $r10.<android.content.Context: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>($r11);

        r0.<com.android.org.chromium.android_webview.AwContents: android.content.ComponentCallbacks2 mComponentCallbacks> = null;

     label2:
        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.ScrollAccessibilityHelper mScrollAccessibilityHelper>;

        virtualinvoke $r3.<com.android.org.chromium.android_webview.ScrollAccessibilityHelper: void removePostedCallbacks()>();

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: java.util.List mPendingDetachCleanupReferences>;

        if $r4 == null goto label5;

        i0 = 0;

     label3:
        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: java.util.List mPendingDetachCleanupReferences>;

        $i3 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i0 >= $i3 goto label4;

        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: java.util.List mPendingDetachCleanupReferences>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        $r8 = (com.android.org.chromium.content.common.CleanupReference) $r7;

        virtualinvoke $r8.<com.android.org.chromium.content.common.CleanupReference: void cleanupNow()>();

        i0 = i0 + 1;

        goto label3;

     label4:
        r0.<com.android.org.chromium.android_webview.AwContents: java.util.List mPendingDetachCleanupReferences> = null;

     label5:
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.graphics.Canvas r1;
        long $l0, $l2;
        byte $b1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r2, $r12, $r13;
        android.graphics.Rect $r3, $r6, $r7, $r8, $r9;
        boolean $z1, $z2, $z3, $z4;
        android.view.ViewGroup $r4, $r5, $r14;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14;
        com.android.org.chromium.android_webview.OverScrollGlow $r10, $r11;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.graphics.Canvas;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $i12 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: int getEffectiveBackgroundColor()>();

        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int)>($i12);

     label1:
        return;

     label2:
        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void syncScrollOffsetFromOnDraw()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: android.graphics.Rect mClipBoundsTemporary>;

        virtualinvoke r1.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>($r3);

        $z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mClearViewActive>;

        if $z1 == 0 goto label4;

        $i14 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: int getEffectiveBackgroundColor()>();

        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int)>($i14);

     label3:
        $r10 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        if $r10 == null goto label1;

        $r11 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        $r12 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i9 = virtualinvoke $r12.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumHorizontalScrollOffset()>();

        $r13 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i10 = virtualinvoke $r13.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumVerticalScrollOffset()>();

        $z4 = virtualinvoke $r11.<com.android.org.chromium.android_webview.OverScrollGlow: boolean drawEdgeGlows(android.graphics.Canvas,int,int)>(r1, $i9, $i10);

        if $z4 == 0 goto label1;

        $r14 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        virtualinvoke $r14.<android.view.ViewGroup: void invalidate()>();

        return;

     label4:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $z2 = virtualinvoke r1.<android.graphics.Canvas: boolean isHardwareAccelerated()>();

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i3 = virtualinvoke $r4.<android.view.ViewGroup: int getScrollX()>();

        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i4 = virtualinvoke $r5.<android.view.ViewGroup: int getScrollY()>();

        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: android.graphics.Rect mClipBoundsTemporary>;

        $i7 = $r6.<android.graphics.Rect: int left>;

        $r7 = r0.<com.android.org.chromium.android_webview.AwContents: android.graphics.Rect mClipBoundsTemporary>;

        $i8 = $r7.<android.graphics.Rect: int top>;

        $r9 = r0.<com.android.org.chromium.android_webview.AwContents: android.graphics.Rect mClipBoundsTemporary>;

        $i5 = $r9.<android.graphics.Rect: int right>;

        $r8 = r0.<com.android.org.chromium.android_webview.AwContents: android.graphics.Rect mClipBoundsTemporary>;

        $i6 = $r8.<android.graphics.Rect: int bottom>;

        $z3 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: boolean nativeOnDraw(long,android.graphics.Canvas,boolean,int,int,int,int,int,int)>($l2, r1, $z2, $i3, $i4, $i7, $i8, $i5, $i6);

        if $z3 != 0 goto label3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AwContents", "nativeOnDraw failed; clearing to background color.");

        $i13 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: int getEffectiveBackgroundColor()>();

        virtualinvoke r1.<android.graphics.Canvas: void drawColor(int)>($i13);

        goto label3;
    }

    public void onFindResultReceived(int, int, boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1;
        boolean z0;
        com.android.org.chromium.android_webview.AwContentsClient $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwContentsClient: void onFindResultReceived(int,int,boolean)>(i0, i1, z0);

        return;
    }

    public void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0;
        int i0;
        android.graphics.Rect r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mContainerViewFocused> = z0;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: void onFocusChanged(boolean)>(z0);

        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.MotionEvent r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z0 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.MotionEvent r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z0 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: boolean onHoverEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.accessibility.AccessibilityEvent r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        return;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        android.view.KeyEvent r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z0 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public void onMeasure(int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1;
        com.android.org.chromium.android_webview.AwLayoutSizer $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwLayoutSizer mLayoutSizer>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwLayoutSizer: void onMeasure(int,int)>(i0, i1);

        return;
    }

    public void onNewPicture()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0;
        com.android.org.chromium.android_webview.AwContentsClient $r1;
        com.android.org.chromium.android_webview.AwContentsClientCallbackHelper $r2;
        java.util.concurrent.Callable $r3;
        android.view.ViewGroup $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mClearViewActive>;

        if $z0 == 0 goto label1;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mClearViewActive> = 0;

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        virtualinvoke $r4.<android.view.ViewGroup: void invalidate()>();

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void syncOnNewPictureStateToNative()>();

     label1:
        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwContentsClient: com.android.org.chromium.android_webview.AwContentsClientCallbackHelper getCallbackHelper()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: java.util.concurrent.Callable mPictureListenerContentProvider>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwContentsClientCallbackHelper: void postOnNewPicture(java.util.concurrent.Callable)>($r3);

        return;
    }

    public void onPause()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0, $z1;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsPaused>;

        if $z0 != 0 goto label1;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

     label1:
        return;

     label2:
        r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsPaused> = 1;

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsPaused>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetIsPaused(long,boolean)>($l2, $z1);

        return;
    }

    public void onResume()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0, $z1;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsPaused>;

        if $z0 == 0 goto label1;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

     label1:
        return;

     label2:
        r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsPaused> = 0;

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsPaused>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetIsPaused(long,boolean)>($l2, $z1);

        return;
    }

    public void onSizeChanged(int, int, int, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0, i1, i2, i3;
        long $l4, $l6;
        byte $b5;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;
        com.android.org.chromium.android_webview.AwLayoutSizer $r2;
        com.android.org.chromium.content.browser.ContentViewCore $r3, $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $l4 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void setContainerViewSize(int,int)>(i0, i1);

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwLayoutSizer mLayoutSizer>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwLayoutSizer: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: void onPhysicalBackingSizeChanged(int,int)>(i0, i1);

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r4.<com.android.org.chromium.content.browser.ContentViewCore: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        $l6 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeOnSizeChanged(long,int,int,int,int)>($l6, i0, i1, i2, i3);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.MotionEvent r1;
        boolean z0;
        int i0, $i3, $i4, $i5, $i8, $i10;
        long $l1, $l6, $l7, $l9;
        byte $b2;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r2, $r4;
        com.android.org.chromium.content.browser.ContentViewCore $r3;
        com.android.org.chromium.android_webview.OverScrollGlow $r5, $r6;
        float $f0, $f1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        com.android.org.chromium.android_webview.AwSettings $r7;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.MotionEvent;

        $l1 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        z0 = 0;

     label1:
        return z0;

     label2:
        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i3 != 0 goto label3;

        $r7 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        virtualinvoke $r7.<com.android.org.chromium.android_webview.AwSettings: void setSpatialNavigationEnabled(boolean)>(0);

     label3:
        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void setProcessingTouchEvent(boolean)>(1);

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        z0 = virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        virtualinvoke $r4.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void setProcessingTouchEvent(boolean)>(0);

        $i4 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i4 != 0 goto label4;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        $l6 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $d0 = (double) $f0;

        $d1 = r0.<com.android.org.chromium.android_webview.AwContents: double mDIPScale>;

        $d2 = $d0 / $d1;

        $l7 = staticinvoke <java.lang.Math: long round(double)>($d2);

        $i8 = (int) $l7;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        $d3 = (double) $f1;

        $d4 = r0.<com.android.org.chromium.android_webview.AwContents: double mDIPScale>;

        $d5 = $d3 / $d4;

        $l9 = staticinvoke <java.lang.Math: long round(double)>($d5);

        $i10 = (int) $l9;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeRequestNewHitTestDataAt(long,int,int)>($l6, $i8, $i10);

     label4:
        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        if $r5 == null goto label1;

        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i5 != 1 goto label1;

        $r6 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow>;

        virtualinvoke $r6.<com.android.org.chromium.android_webview.OverScrollGlow: void releaseAll()>();

        return z0;
    }

    public void onVisibilityChanged(android.view.View, int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.View r1;
        int i0, $i1;
        boolean z0, $z1;
        android.view.ViewGroup $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $i1 = virtualinvoke $r2.<android.view.ViewGroup: int getVisibility()>();

        if $i1 != 0 goto label2;

        z0 = 1;

     label1:
        $z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsViewVisible>;

        if $z1 != z0 goto label3;

        return;

     label2:
        z0 = 0;

        goto label1;

     label3:
        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setViewVisibilityInternal(boolean)>(z0);

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mWindowFocused> = z0;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void onWindowFocusChanged(boolean)>(z0);

        return;
    }

    public void onWindowVisibilityChanged(int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        boolean z0, $z1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        if i0 != 0 goto label2;

        z0 = 1;

     label1:
        $z1 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mIsWindowVisible>;

        if $z1 != z0 goto label3;

        return;

     label2:
        z0 = 0;

        goto label1;

     label3:
        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void setWindowVisibilityInternal(boolean)>(z0);

        return;
    }

    public boolean overlayHorizontalScrollbar()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayHorizontalScrollbar>;

        return $z0;
    }

    public boolean overlayVerticalScrollbar()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayVerticalScrollbar>;

        return $z0;
    }

    public boolean pageDown(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0, $z1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $z1 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean pageDown(boolean)>(z0);

        return $z1;
    }

    public boolean pageUp(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0, $z1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $z1 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean pageUp(boolean)>(z0);

        return $z1;
    }

    public void pauseTimers()
    {
        com.android.org.chromium.android_webview.AwContents r0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        staticinvoke <com.android.org.chromium.content.browser.ContentViewStatics: void setWebKitSharedTimersSuspended(boolean)>(1);

        return;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        android.os.Bundle r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z0 = virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        return $z0;
    }

    public void reload()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void reload(boolean)>(1);

        return;
    }

    public void removeJavascriptInterface(java.lang.String)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1;
        com.android.org.chromium.content.browser.ContentViewCore $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.ContentViewCore: void removeJavascriptInterface(java.lang.String)>(r1);

        return;
    }

    public boolean requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.view.View r1;
        android.graphics.Rect r2;
        boolean z0, $z1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.graphics.Rect;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwScrollOffsetManager mScrollOffsetManager>;

        $i0 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i1 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i4 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        $i5 = $i3 - $i4;

        $z1 = virtualinvoke $r3.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean requestChildRectangleOnScreen(int,int,android.graphics.Rect,boolean)>($i2, $i5, r2, z0);

        return $z1;
    }

    public void requestFocus()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        long $l0, $l2;
        byte $b1;
        android.view.ViewGroup $r1;
        boolean $z0, $z1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

     label1:
        return;

     label2:
        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        $z0 = virtualinvoke $r1.<android.view.ViewGroup: boolean isInTouchMode()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwSettings mSettings>;

        $z1 = virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: boolean shouldFocusFirstNode()>();

        if $z1 == 0 goto label1;

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeFocusFirstNode(long)>($l2);

        return;
    }

    public void requestFocusNodeHref(android.os.Message)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.os.Message r1;
        android.os.Bundle r2;
        long $l0, $l2;
        byte $b1;
        com.android.org.chromium.android_webview.AwContents$HitTestData $r3, $r5, $r7;
        java.lang.String $r4, $r6, $r8;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.os.Message;

        if r1 == null goto label1;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

     label1:
        return;

     label2:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeUpdateLastHitTestData(long)>($l2);

        r2 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        $r4 = $r3.<com.android.org.chromium.android_webview.AwContents$HitTestData: java.lang.String href>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("url", $r4);

        $r5 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        $r6 = $r5.<com.android.org.chromium.android_webview.AwContents$HitTestData: java.lang.String anchorText>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("title", $r6);

        $r7 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        $r8 = $r7.<com.android.org.chromium.android_webview.AwContents$HitTestData: java.lang.String imgSrc>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("src", $r8);

        virtualinvoke r1.<android.os.Message: void setData(android.os.Bundle)>(r2);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void requestImageRef(android.os.Message)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.os.Message r1;
        android.os.Bundle r2;
        long $l0, $l2;
        byte $b1;
        com.android.org.chromium.android_webview.AwContents$HitTestData $r3;
        java.lang.String $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.os.Message;

        if r1 == null goto label1;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

     label1:
        return;

     label2:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeUpdateLastHitTestData(long)>($l2);

        r2 = virtualinvoke r1.<android.os.Message: android.os.Bundle getData()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContents$HitTestData mPossiblyStaleHitTestData>;

        $r4 = $r3.<com.android.org.chromium.android_webview.AwContents$HitTestData: java.lang.String imgSrc>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("url", $r4);

        virtualinvoke r1.<android.os.Message: void setData(android.os.Bundle)>(r2);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;
    }

    public boolean restoreState(android.os.Bundle)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.os.Bundle r1;
        byte b0;
        boolean z0;
        byte[] r2;
        long $l1, $l2;
        com.android.org.chromium.content.browser.ContentViewCore $r3;
        com.android.org.chromium.android_webview.AwContentsClient $r4;
        java.lang.String $r5;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.os.Bundle;

        $l1 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        b0 = $l1 cmp 0L;

        z0 = 0;

        if b0 == 0 goto label1;

        z0 = 0;

        if r1 != null goto label2;

     label1:
        return z0;

     label2:
        r2 = virtualinvoke r1.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("WEBVIEW_CHROMIUM_STATE");

        z0 = 0;

        if r2 == null goto label1;

        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        z0 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: boolean nativeRestoreFromOpaqueState(long,byte[])>($l2, r2);

        if z0 == 0 goto label1;

        $r4 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwContentsClient mContentsClient>;

        $r3 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r5 = virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: java.lang.String getTitle()>();

        virtualinvoke $r4.<com.android.org.chromium.android_webview.AwContentsClient: void onReceivedTitle(java.lang.String)>($r5);

        return z0;
    }

    public void resumeTimers()
    {
        com.android.org.chromium.android_webview.AwContents r0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        staticinvoke <com.android.org.chromium.content.browser.ContentViewStatics: void setWebKitSharedTimersSuspended(boolean)>(0);

        return;
    }

    public boolean saveState(android.os.Bundle)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        android.os.Bundle r1;
        byte[] r2;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: android.os.Bundle;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        r2 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: byte[] nativeGetOpaqueState(long)>($l2);

        if r2 == null goto label1;

        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("WEBVIEW_CHROMIUM_STATE", r2);

        return 1;
    }

    public void saveWebArchive(java.lang.String, boolean, android.webkit.ValueCallback)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        java.lang.String r1;
        boolean z0;
        android.webkit.ValueCallback r2;
        com.android.org.chromium.android_webview.AwContents$4 $r3;
        java.lang.Void[] $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.webkit.ValueCallback;

        if z0 != 0 goto label1;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void saveWebArchiveInternal(java.lang.String,android.webkit.ValueCallback)>(r1, r2);

        return;

     label1:
        $r3 = new com.android.org.chromium.android_webview.AwContents$4;

        specialinvoke $r3.<com.android.org.chromium.android_webview.AwContents$4: void <init>(com.android.org.chromium.android_webview.AwContents,java.lang.String,android.webkit.ValueCallback)>(r0, r1, r2);

        $r4 = newarray (java.lang.Void)[0];

        virtualinvoke $r3.<com.android.org.chromium.android_webview.AwContents$4: android.os.AsyncTask execute(java.lang.Object[])>($r4);

        return;
    }

    public void setBackgroundColor(int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        long $l1, $l3;
        byte $b2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        r0.<com.android.org.chromium.android_webview.AwContents: int mBaseBackgroundColor> = i0;

        $l1 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $l3 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetBackgroundColor(long,int)>($l3, i0);

     label1:
        return;
    }

    public void setHorizontalScrollbarOverlay(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayHorizontalScrollbar> = z0;

        return;
    }

    public void setHttpAuthUsernamePassword(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.org.chromium.android_webview.HttpAuthDatabase $r0;
        com.android.org.chromium.android_webview.AwContents r1;
        java.lang.String r2, r3, r4, r5;
        com.android.org.chromium.content.browser.ContentViewCore $r6;
        com.android.org.chromium.android_webview.AwBrowserContext $r7;
        android.content.Context $r8;

        r1 := @this: com.android.org.chromium.android_webview.AwContents;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        $r7 = r1.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.AwBrowserContext mBrowserContext>;

        $r6 = r1.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $r8 = virtualinvoke $r6.<com.android.org.chromium.content.browser.ContentViewCore: android.content.Context getContext()>();

        $r0 = virtualinvoke $r7.<com.android.org.chromium.android_webview.AwBrowserContext: com.android.org.chromium.android_webview.HttpAuthDatabase getHttpAuthDatabase(android.content.Context)>($r8);

        virtualinvoke $r0.<com.android.org.chromium.android_webview.HttpAuthDatabase: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4, r5);

        return;
    }

    public void setLayerType(int, android.graphics.Paint)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        android.graphics.Paint r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Paint;

        r0.<com.android.org.chromium.android_webview.AwContents: int mLayerType> = i0;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void updateHardwareAcceleratedFeaturesToggle()>();

        return;
    }

    public void setNetworkAvailable(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        $l0 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $l2 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: void nativeSetJsOnlineProperty(long,boolean)>($l2, z0);

        return;
    }

    public void setOverScrollMode(int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        com.android.org.chromium.android_webview.OverScrollGlow $r1;
        android.view.ViewGroup $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        $r1 = new com.android.org.chromium.android_webview.OverScrollGlow;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContents: android.view.ViewGroup mContainerView>;

        specialinvoke $r1.<com.android.org.chromium.android_webview.OverScrollGlow: void <init>(android.view.View)>($r2);

        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow> = $r1;

        return;

     label1:
        r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.android_webview.OverScrollGlow mOverScrollGlow> = null;

        return;
    }

    public void setScrollBarStyle(int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 != 33554432 goto label2;

     label1:
        r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayVerticalScrollbar> = 1;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayHorizontalScrollbar> = 1;

        return;

     label2:
        r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayVerticalScrollbar> = 0;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayHorizontalScrollbar> = 0;

        return;
    }

    public void setVerticalScrollbarOverlay(boolean)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        z0 := @parameter0: boolean;

        r0.<com.android.org.chromium.android_webview.AwContents: boolean mOverlayVerticalScrollbar> = z0;

        return;
    }

    public void stopLoading()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: void stopLoading()>();

        return;
    }

    public void supplyContentsForPopup(com.android.org.chromium.android_webview.AwContents)
    {
        com.android.org.chromium.android_webview.AwContents r0, r1;
        int i0;
        long $l1, $l2;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        r1 := @parameter0: com.android.org.chromium.android_webview.AwContents;

        $l1 = r0.<com.android.org.chromium.android_webview.AwContents: long mNativeAwContents>;

        i0 = specialinvoke r0.<com.android.org.chromium.android_webview.AwContents: int nativeReleasePopupAwContents(long)>($l1);

        if i0 != 0 goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AwContents", "Popup WebView bind failed: no pending content.");

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.org.chromium.android_webview.AwContents: void destroy()>();

     label1:
        return;

     label2:
        if r1 != null goto label3;

        $l2 = (long) i0;

        staticinvoke <com.android.org.chromium.android_webview.AwContents: void nativeDestroy(long)>($l2);

        return;

     label3:
        specialinvoke r1.<com.android.org.chromium.android_webview.AwContents: void receivePopupContents(int)>(i0);

        return;
    }

    public boolean supportsAccessibilityAction(int)
    {
        com.android.org.chromium.android_webview.AwContents r0;
        int i0;
        com.android.org.chromium.content.browser.ContentViewCore $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: boolean supportsAccessibilityAction(int)>(i0);

        return $z0;
    }

    public boolean zoomIn()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: boolean canZoomIn()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z1 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: boolean pinchByDelta(float)>(1.25F);

        return $z1;
    }

    public boolean zoomOut()
    {
        com.android.org.chromium.android_webview.AwContents r0;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.ContentViewCore $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContents;

        $z0 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwContents: boolean canZoomOut()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.org.chromium.android_webview.AwContents: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $z1 = virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentViewCore: boolean pinchByDelta(float)>(0.8F);

        return $z1;
    }
}
