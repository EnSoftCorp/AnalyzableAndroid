public class gov.nist.javax.sip.message.MultipartMimeContentImpl extends java.lang.Object implements gov.nist.javax.sip.message.MultipartMimeContent
{
    public static java.lang.String BOUNDARY;
    private java.lang.String boundary;
    private java.util.List contentList;
    private javax.sip.header.ContentTypeHeader multipartMimeContentTypeHeader;

    static void <clinit>()
    {
        <gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String BOUNDARY> = "boundary";

        return;
    }

    public void <init>(javax.sip.header.ContentTypeHeader)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        javax.sip.header.ContentTypeHeader r1;
        java.util.LinkedList $r2;
        java.lang.String $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: javax.sip.header.ContentTypeHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList> = $r2;

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader multipartMimeContentTypeHeader> = r1;

        $r3 = <gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String BOUNDARY>;

        $r4 = interfaceinvoke r1.<javax.sip.header.ContentTypeHeader: java.lang.String getParameter(java.lang.String)>($r3);

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String boundary> = $r4;

        return;
    }

    public boolean add(gov.nist.javax.sip.message.Content)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        gov.nist.javax.sip.message.Content r1;
        gov.nist.javax.sip.message.ContentImpl $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: gov.nist.javax.sip.message.Content;

        $r3 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        $r2 = (gov.nist.javax.sip.message.ContentImpl) r1;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $z0;
    }

    public void addContent(gov.nist.javax.sip.message.Content)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        gov.nist.javax.sip.message.Content r1;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: gov.nist.javax.sip.message.Content;

        virtualinvoke r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: boolean add(gov.nist.javax.sip.message.Content)>(r1);

        return;
    }

    public void createContentList(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.lang.String r1, r4, r7, r9, r10, r12, $r17, $r22, $r24, $r26, $r29, $r34, $r40, $r47;
        gov.nist.javax.sip.header.HeaderFactoryImpl r2, $r16;
        gov.nist.javax.sip.message.ContentImpl r5, r11, $r25, $r51;
        java.lang.String[] r6, r13;
        int i0, i1, i2, i4, i5, $i6, $i7, $i8;
        java.lang.StringBuffer r8, $r23;
        byte b3;
        javax.sip.header.Header r14;
        javax.sip.header.ContentTypeHeader $r15, $r38, $r52;
        java.lang.StringBuilder $r18, $r19, $r20, $r21, $r28, $r30, $r31, $r35, $r36, $r41, $r42, $r44, $r45, $r46;
        boolean $z0, $z1;
        java.text.ParseException $r27, $r37, $r39, $r49;
        java.util.List $r32, $r53;
        javax.sip.header.ContentDispositionHeader $r33;
        char $c9, $c10;
        java.lang.StringIndexOutOfBoundsException $r48;
        java.util.LinkedList $r50;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: java.lang.String;

     label01:
        $r16 = new gov.nist.javax.sip.header.HeaderFactoryImpl;

        specialinvoke $r16.<gov.nist.javax.sip.header.HeaderFactoryImpl: void <init>()>();

        r2 = $r16;

        $r15 = virtualinvoke r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        $r17 = <gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String BOUNDARY>;

        r4 = interfaceinvoke $r15.<javax.sip.header.ContentTypeHeader: java.lang.String getParameter(java.lang.String)>($r17);

     label02:
        if r4 != null goto label05;

     label03:
        $r50 = new java.util.LinkedList;

        specialinvoke $r50.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList> = $r50;

        $r51 = new gov.nist.javax.sip.message.ContentImpl;

        specialinvoke $r51.<gov.nist.javax.sip.message.ContentImpl: void <init>(java.lang.String,java.lang.String)>(r1, r4);

        r5 = $r51;

        $r52 = virtualinvoke r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        virtualinvoke r5.<gov.nist.javax.sip.message.ContentImpl: void setContentTypeHeader(javax.sip.header.ContentTypeHeader)>($r52);

        $r53 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>(r5);

     label04:
        return;

     label05:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r22);

        i0 = lengthof r6;

     label06:
        i1 = 0;

     label07:
        if i1 >= i0 goto label35;

     label08:
        r7 = r6[i1];

     label09:
        if r7 == null goto label35;

     label10:
        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>(java.lang.String)>(r7);

        r8 = $r23;

     label11:
        $i7 = virtualinvoke r8.<java.lang.StringBuffer: int length()>();

        if $i7 <= 0 goto label15;

        $c9 = virtualinvoke r8.<java.lang.StringBuffer: char charAt(int)>(0);

        if $c9 == 13 goto label12;

        $c10 = virtualinvoke r8.<java.lang.StringBuffer: char charAt(int)>(0);

        if $c10 != 10 goto label15;

     label12:
        virtualinvoke r8.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(0);

     label13:
        goto label11;

     label14:
        $r48 := @caughtexception;

        $r49 = new java.text.ParseException;

        specialinvoke $r49.<java.text.ParseException: void <init>(java.lang.String,int)>("Invalid Multipart mime format", 0);

        throw $r49;

     label15:
        $i6 = virtualinvoke r8.<java.lang.StringBuffer: int length()>();

        if $i6 != 0 goto label17;

     label16:
        goto label36;

     label17:
        r9 = virtualinvoke r8.<java.lang.StringBuffer: java.lang.String toString()>();

        i2 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>("\r\n\r\n");

     label18:
        b3 = 4;

        if i2 != -1 goto label21;

     label19:
        i2 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>("\n");

     label20:
        b3 = 2;

     label21:
        if i2 != -1 goto label23;

     label22:
        $r39 = new java.text.ParseException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no content type header found in ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.text.ParseException: void <init>(java.lang.String,int)>($r47, 0);

        throw $r39;

     label23:
        $i8 = i2 + b3;

        r10 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int)>($i8);

     label24:
        if r10 != null goto label26;

     label25:
        $r37 = new java.text.ParseException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content [");

        $r42 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.text.ParseException: void <init>(java.lang.String,int)>($r40, 0);

        throw $r37;

     label26:
        r12 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $r25 = new gov.nist.javax.sip.message.ContentImpl;

        $r26 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String boundary>;

        specialinvoke $r25.<gov.nist.javax.sip.message.ContentImpl: void <init>(java.lang.String,java.lang.String)>(r10, $r26);

        r11 = $r25;

        r13 = virtualinvoke r12.<java.lang.String: java.lang.String[] split(java.lang.String)>("\r\n");

        i4 = lengthof r13;

     label27:
        i5 = 0;

     label28:
        if i5 >= i4 goto label36;

     label29:
        $r24 = r13[i5];

        r14 = interfaceinvoke r2.<gov.nist.javax.sip.header.HeaderFactoryExt: javax.sip.header.Header createHeader(java.lang.String)>($r24);

        $z1 = r14 instanceof javax.sip.header.ContentTypeHeader;

        if $z1 == 0 goto label32;

        $r38 = (javax.sip.header.ContentTypeHeader) r14;

        virtualinvoke r11.<gov.nist.javax.sip.message.ContentImpl: void setContentTypeHeader(javax.sip.header.ContentTypeHeader)>($r38);

     label30:
        $r32 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>(r11);

     label31:
        i5 = i5 + 1;

        goto label28;

     label32:
        $z0 = r14 instanceof javax.sip.header.ContentDispositionHeader;

        if $z0 == 0 goto label34;

        $r33 = (javax.sip.header.ContentDispositionHeader) r14;

        virtualinvoke r11.<gov.nist.javax.sip.message.ContentImpl: void setContentDispositionHeader(javax.sip.header.ContentDispositionHeader)>($r33);

     label33:
        goto label30;

     label34:
        $r27 = new java.text.ParseException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header type ");

        $r29 = interfaceinvoke r14.<javax.sip.header.Header: java.lang.String getName()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.text.ParseException: void <init>(java.lang.String,int)>($r34, 0);

        throw $r27;

     label35:
        return;

     label36:
        i1 = i1 + 1;

        goto label07;

        catch java.lang.StringIndexOutOfBoundsException from label01 to label02 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label03 to label04 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label05 to label06 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label08 to label09 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label10 to label11 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label11 to label12 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label12 to label13 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label15 to label16 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label17 to label18 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label19 to label20 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label22 to label23 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label23 to label24 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label25 to label26 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label26 to label27 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label29 to label30 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label30 to label31 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label32 to label33 with label14;
        catch java.lang.StringIndexOutOfBoundsException from label34 to label35 with label14;
    }

    public gov.nist.javax.sip.message.Content getContentByType(java.lang.String, java.lang.String)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.lang.String r1, r2, $r10, $r12;
        java.util.Iterator r3;
        boolean z0, $z1, $z2;
        gov.nist.javax.sip.message.Content r4, r5;
        java.util.List $r6, $r7;
        java.lang.Object $r8;
        javax.sip.header.ContentTypeHeader $r9, $r11;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r6 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        if $r6 != null goto label1;

        return null;

     label1:
        $r7 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        r4 = null;

        if z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (gov.nist.javax.sip.message.Content) $r8;

        $r9 = interfaceinvoke r5.<gov.nist.javax.sip.message.Content: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        $r10 = interfaceinvoke $r9.<javax.sip.header.ContentTypeHeader: java.lang.String getContentType()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r5.<gov.nist.javax.sip.message.Content: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        $r12 = interfaceinvoke $r11.<javax.sip.header.ContentTypeHeader: java.lang.String getContentSubType()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 == 0 goto label2;

        r4 = r5;

     label3:
        return r4;
    }

    public int getContentCount()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r1 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public javax.sip.header.ContentTypeHeader getContentTypeHeader()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        javax.sip.header.ContentTypeHeader $r1;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r1 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader multipartMimeContentTypeHeader>;

        return $r1;
    }

    public java.util.Iterator getContents()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r1 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.lang.StringBuffer r1, $r3;
        java.util.Iterator r2;
        java.util.List $r4;
        boolean $z0;
        java.lang.String $r5, $r8;
        java.lang.Object $r6;
        gov.nist.javax.sip.message.Content $r7;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r1 = $r3;

        $r4 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (gov.nist.javax.sip.message.Content) $r6;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label1;

     label2:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
