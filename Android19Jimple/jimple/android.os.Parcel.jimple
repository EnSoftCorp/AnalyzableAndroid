public final class android.os.Parcel extends java.lang.Object
{
    private static final boolean DEBUG_ARRAY_MAP;
    private static final boolean DEBUG_RECYCLE;
    private static final int EX_BAD_PARCELABLE;
    private static final int EX_HAS_REPLY_HEADER;
    private static final int EX_ILLEGAL_ARGUMENT;
    private static final int EX_ILLEGAL_STATE;
    private static final int EX_NETWORK_MAIN_THREAD;
    private static final int EX_NULL_POINTER;
    private static final int EX_SECURITY;
    private static final int POOL_SIZE;
    public static final android.os.Parcelable$Creator STRING_CREATOR;
    private static final java.lang.String TAG;
    private static final int VAL_BOOLEAN;
    private static final int VAL_BOOLEANARRAY;
    private static final int VAL_BUNDLE;
    private static final int VAL_BYTE;
    private static final int VAL_BYTEARRAY;
    private static final int VAL_CHARSEQUENCE;
    private static final int VAL_CHARSEQUENCEARRAY;
    private static final int VAL_DOUBLE;
    private static final int VAL_FLOAT;
    private static final int VAL_IBINDER;
    private static final int VAL_INTARRAY;
    private static final int VAL_INTEGER;
    private static final int VAL_LIST;
    private static final int VAL_LONG;
    private static final int VAL_LONGARRAY;
    private static final int VAL_MAP;
    private static final int VAL_NULL;
    private static final int VAL_OBJECTARRAY;
    private static final int VAL_PARCELABLE;
    private static final int VAL_PARCELABLEARRAY;
    private static final int VAL_SERIALIZABLE;
    private static final int VAL_SHORT;
    private static final int VAL_SPARSEARRAY;
    private static final int VAL_SPARSEBOOLEANARRAY;
    private static final int VAL_STRING;
    private static final int VAL_STRINGARRAY;
    private static final java.util.HashMap mCreators;
    private static final android.os.Parcel[] sHolderPool;
    private static final android.os.Parcel[] sOwnedPool;
    private int mNativePtr;
    private boolean mOwnsNativeParcelObject;
    private java.lang.RuntimeException mStack;

    static void <clinit>()
    {
        android.os.Parcel[] $r0, $r1;
        android.os.Parcel$1 $r2;
        java.util.HashMap $r3;

        <android.os.Parcel: int VAL_STRINGARRAY> = 14;

        <android.os.Parcel: int VAL_STRING> = 0;

        <android.os.Parcel: int VAL_SPARSEBOOLEANARRAY> = 22;

        <android.os.Parcel: int VAL_SPARSEARRAY> = 12;

        <android.os.Parcel: int VAL_SHORT> = 5;

        <android.os.Parcel: int VAL_SERIALIZABLE> = 21;

        <android.os.Parcel: int VAL_PARCELABLEARRAY> = 16;

        <android.os.Parcel: int VAL_PARCELABLE> = 4;

        <android.os.Parcel: int VAL_OBJECTARRAY> = 17;

        <android.os.Parcel: int VAL_NULL> = -1;

        <android.os.Parcel: int VAL_MAP> = 2;

        <android.os.Parcel: int VAL_LONGARRAY> = 19;

        <android.os.Parcel: int VAL_LONG> = 6;

        <android.os.Parcel: int VAL_LIST> = 11;

        <android.os.Parcel: int VAL_INTEGER> = 1;

        <android.os.Parcel: int VAL_INTARRAY> = 18;

        <android.os.Parcel: int VAL_IBINDER> = 15;

        <android.os.Parcel: int VAL_FLOAT> = 7;

        <android.os.Parcel: int VAL_DOUBLE> = 8;

        <android.os.Parcel: int VAL_CHARSEQUENCEARRAY> = 24;

        <android.os.Parcel: int VAL_CHARSEQUENCE> = 10;

        <android.os.Parcel: int VAL_BYTEARRAY> = 13;

        <android.os.Parcel: int VAL_BYTE> = 20;

        <android.os.Parcel: int VAL_BUNDLE> = 3;

        <android.os.Parcel: int VAL_BOOLEANARRAY> = 23;

        <android.os.Parcel: int VAL_BOOLEAN> = 9;

        <android.os.Parcel: java.lang.String TAG> = "Parcel";

        <android.os.Parcel: int POOL_SIZE> = 6;

        <android.os.Parcel: int EX_SECURITY> = -1;

        <android.os.Parcel: int EX_NULL_POINTER> = -4;

        <android.os.Parcel: int EX_NETWORK_MAIN_THREAD> = -6;

        <android.os.Parcel: int EX_ILLEGAL_STATE> = -5;

        <android.os.Parcel: int EX_ILLEGAL_ARGUMENT> = -3;

        <android.os.Parcel: int EX_HAS_REPLY_HEADER> = -128;

        <android.os.Parcel: int EX_BAD_PARCELABLE> = -2;

        <android.os.Parcel: boolean DEBUG_RECYCLE> = 0;

        <android.os.Parcel: boolean DEBUG_ARRAY_MAP> = 0;

        $r0 = newarray (android.os.Parcel)[6];

        <android.os.Parcel: android.os.Parcel[] sOwnedPool> = $r0;

        $r1 = newarray (android.os.Parcel)[6];

        <android.os.Parcel: android.os.Parcel[] sHolderPool> = $r1;

        $r2 = new android.os.Parcel$1;

        specialinvoke $r2.<android.os.Parcel$1: void <init>()>();

        <android.os.Parcel: android.os.Parcelable$Creator STRING_CREATOR> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <android.os.Parcel: java.util.HashMap mCreators> = $r3;

        return;
    }

    private void <init>(int)
    {
        android.os.Parcel r0;
        int i0;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.os.Parcel: void init(int)>(i0);

        return;
    }

    static native void clearFileDescriptor(java.io.FileDescriptor);

    static native void closeFileDescriptor(java.io.FileDescriptor) throws java.io.IOException;

    private void destroy()
    {
        android.os.Parcel r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        if $i0 == 0 goto label2;

        $z0 = r0.<android.os.Parcel: boolean mOwnsNativeParcelObject>;

        if $z0 == 0 goto label1;

        $i1 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeDestroy(int)>($i1);

     label1:
        r0.<android.os.Parcel: int mNativePtr> = 0;

     label2:
        return;
    }

    static native java.io.FileDescriptor dupFileDescriptor(java.io.FileDescriptor) throws java.io.IOException;

    private void freeBuffer()
    {
        android.os.Parcel r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.os.Parcel;

        $z0 = r0.<android.os.Parcel: boolean mOwnsNativeParcelObject>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeFreeBuffer(int)>($i0);

     label1:
        return;
    }

    private void init(int)
    {
        android.os.Parcel r0;
        int i0, $i1;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        r0.<android.os.Parcel: int mNativePtr> = i0;

        r0.<android.os.Parcel: boolean mOwnsNativeParcelObject> = 0;

        return;

     label1:
        $i1 = staticinvoke <android.os.Parcel: int nativeCreate()>();

        r0.<android.os.Parcel: int mNativePtr> = $i1;

        r0.<android.os.Parcel: boolean mOwnsNativeParcelObject> = 1;

        return;
    }

    private static native void nativeAppendFrom(int, int, int, int);

    private static native int nativeCreate();

    private static native byte[] nativeCreateByteArray(int);

    private static native int nativeDataAvail(int);

    private static native int nativeDataCapacity(int);

    private static native int nativeDataPosition(int);

    private static native int nativeDataSize(int);

    private static native void nativeDestroy(int);

    private static native void nativeEnforceInterface(int, java.lang.String);

    private static native void nativeFreeBuffer(int);

    private static native boolean nativeHasFileDescriptors(int);

    private static native byte[] nativeMarshall(int);

    private static native boolean nativePushAllowFds(int, boolean);

    private static native double nativeReadDouble(int);

    private static native java.io.FileDescriptor nativeReadFileDescriptor(int);

    private static native float nativeReadFloat(int);

    private static native int nativeReadInt(int);

    private static native long nativeReadLong(int);

    private static native java.lang.String nativeReadString(int);

    private static native android.os.IBinder nativeReadStrongBinder(int);

    private static native void nativeRestoreAllowFds(int, boolean);

    private static native void nativeSetDataCapacity(int, int);

    private static native void nativeSetDataPosition(int, int);

    private static native void nativeSetDataSize(int, int);

    private static native void nativeUnmarshall(int, byte[], int, int);

    private static native void nativeWriteByteArray(int, byte[], int, int);

    private static native void nativeWriteDouble(int, double);

    private static native void nativeWriteFileDescriptor(int, java.io.FileDescriptor);

    private static native void nativeWriteFloat(int, float);

    private static native void nativeWriteInt(int, int);

    private static native void nativeWriteInterfaceToken(int, java.lang.String);

    private static native void nativeWriteLong(int, long);

    private static native void nativeWriteString(int, java.lang.String);

    private static native void nativeWriteStrongBinder(int, android.os.IBinder);

    public static android.os.Parcel obtain()
    {
        android.os.Parcel[] r0;
        int i0;
        java.lang.Throwable r1, $r4;
        android.os.Parcel r2, $r3;

        r0 = <android.os.Parcel: android.os.Parcel[] sOwnedPool>;

        entermonitor r0;

        i0 = 0;

     label01:
        if i0 >= 6 goto label06;

     label02:
        r2 = r0[i0];

     label03:
        if r2 == null goto label11;

     label04:
        r0[i0] = null;

        exitmonitor r0;

     label05:
        return r2;

     label06:
        exitmonitor r0;

     label07:
        $r3 = new android.os.Parcel;

        specialinvoke $r3.<android.os.Parcel: void <init>(int)>(0);

        return $r3;

     label08:
        $r4 := @caughtexception;

        r1 = $r4;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

     label11:
        i0 = i0 + 1;

        goto label01;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    protected static final android.os.Parcel obtain(int)
    {
        int i0, i1;
        android.os.Parcel[] r0;
        java.lang.Throwable r1, $r4;
        android.os.Parcel r2, $r3;

        i0 := @parameter0: int;

        r0 = <android.os.Parcel: android.os.Parcel[] sHolderPool>;

        entermonitor r0;

        i1 = 0;

     label01:
        if i1 >= 6 goto label06;

     label02:
        r2 = r0[i1];

     label03:
        if r2 == null goto label11;

     label04:
        r0[i1] = null;

        specialinvoke r2.<android.os.Parcel: void init(int)>(i0);

        exitmonitor r0;

     label05:
        return r2;

     label06:
        exitmonitor r0;

     label07:
        $r3 = new android.os.Parcel;

        specialinvoke $r3.<android.os.Parcel: void <init>(int)>(i0);

        return $r3;

     label08:
        $r4 := @caughtexception;

        r1 = $r4;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

     label11:
        i1 = i1 + 1;

        goto label01;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    static native java.io.FileDescriptor openFileDescriptor(java.lang.String, int) throws java.io.FileNotFoundException;

    private void readArrayInternal(java.lang.Object[], int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.ClassLoader r2;
        java.lang.Object $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        r1[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void readListInternal(java.util.List, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0;
        java.lang.ClassLoader r2;
        java.lang.Object $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    private void readSparseArrayInternal(android.util.SparseArray, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        android.util.SparseArray r1;
        int i0, $i1;
        java.lang.ClassLoader r2;
        java.lang.Object $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseArray;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i0 <= 0 goto label2;

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        virtualinvoke r1.<android.util.SparseArray: void append(int,java.lang.Object)>($i1, $r3);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    private void readSparseBooleanArrayInternal(android.util.SparseBooleanArray, int)
    {
        android.os.Parcel r0;
        android.util.SparseBooleanArray r1;
        int i0, i1;
        boolean z0;
        byte $b2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseBooleanArray;

        i0 := @parameter1: int;

     label1:
        if i0 <= 0 goto label4;

        i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $b2 = virtualinvoke r0.<android.os.Parcel: byte readByte()>();

        if $b2 != 1 goto label3;

        z0 = 1;

     label2:
        virtualinvoke r1.<android.util.SparseBooleanArray: void append(int,boolean)>(i1, z0);

        i0 = i0 + -1;

        goto label1;

     label3:
        z0 = 0;

        goto label2;

     label4:
        return;
    }

    public final void appendFrom(android.os.Parcel, int, int)
    {
        android.os.Parcel r0, r1;
        int i0, i1, $i2, $i3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = r0.<android.os.Parcel: int mNativePtr>;

        $i2 = r1.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeAppendFrom(int,int,int,int)>($i3, $i2, i0, i1);

        return;
    }

    public final android.os.IBinder[] createBinderArray()
    {
        android.os.Parcel r0;
        int i0, i1;
        android.os.IBinder[] r1;
        android.os.IBinder $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        r1 = newarray (android.os.IBinder)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        r1 = null;

     label3:
        return r1;
    }

    public final java.util.ArrayList createBinderArrayList()
    {
        android.os.Parcel r0;
        int i0;
        java.util.ArrayList r1, $r2;
        android.os.IBinder $r3;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label2;

        r1 = null;

     label1:
        return r1;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

        r1 = $r2;

     label3:
        if i0 <= 0 goto label1;

        $r3 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i0 = i0 + -1;

        goto label3;
    }

    public final boolean[] createBooleanArray()
    {
        android.os.Parcel r0;
        int i0, i1, $i2, $i3, $i4;
        boolean[] r1;
        boolean z0;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label4;

        $i2 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i3 = $i2 >> 2;

        if i0 > $i3 goto label4;

        r1 = newarray (boolean)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $i4 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label3;

        z0 = 1;

     label2:
        r1[i1] = z0;

        i1 = i1 + 1;

        goto label1;

     label3:
        z0 = 0;

        goto label2;

     label4:
        r1 = null;

     label5:
        return r1;
    }

    public final byte[] createByteArray()
    {
        android.os.Parcel r0;
        int $i0;
        byte[] $r1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: byte[] nativeCreateByteArray(int)>($i0);

        return $r1;
    }

    public final char[] createCharArray()
    {
        android.os.Parcel r0;
        int i0, i1, $i2, $i3, $i4;
        char[] r1;
        char $c5;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        $i2 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i3 = $i2 >> 2;

        if i0 > $i3 goto label2;

        r1 = newarray (char)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i4 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $c5 = (char) $i4;

        r1[i1] = $c5;

        i1 = i1 + 1;

        goto label1;

     label2:
        r1 = null;

     label3:
        return r1;
    }

    public final double[] createDoubleArray()
    {
        android.os.Parcel r0;
        int i0, i1, $i2, $i3;
        double[] r1;
        double $d0;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        $i2 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i3 = $i2 >> 3;

        if i0 > $i3 goto label2;

        r1 = newarray (double)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $d0 = virtualinvoke r0.<android.os.Parcel: double readDouble()>();

        r1[i1] = $d0;

        i1 = i1 + 1;

        goto label1;

     label2:
        r1 = null;

     label3:
        return r1;
    }

    public final float[] createFloatArray()
    {
        android.os.Parcel r0;
        int i0, i1, $i2, $i3;
        float[] r1;
        float $f0;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        $i2 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i3 = $i2 >> 2;

        if i0 > $i3 goto label2;

        r1 = newarray (float)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $f0 = virtualinvoke r0.<android.os.Parcel: float readFloat()>();

        r1[i1] = $f0;

        i1 = i1 + 1;

        goto label1;

     label2:
        r1 = null;

     label3:
        return r1;
    }

    public final int[] createIntArray()
    {
        android.os.Parcel r0;
        int i0, i1, $i2, $i3, $i4;
        int[] r1;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        $i2 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i3 = $i2 >> 2;

        if i0 > $i3 goto label2;

        r1 = newarray (int)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i4 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        r1[i1] = $i4;

        i1 = i1 + 1;

        goto label1;

     label2:
        r1 = null;

     label3:
        return r1;
    }

    public final long[] createLongArray()
    {
        android.os.Parcel r0;
        int i0, i1, $i2, $i3;
        long[] r1;
        long $l4;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        $i2 = virtualinvoke r0.<android.os.Parcel: int dataAvail()>();

        $i3 = $i2 >> 3;

        if i0 > $i3 goto label2;

        r1 = newarray (long)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $l4 = virtualinvoke r0.<android.os.Parcel: long readLong()>();

        r1[i1] = $l4;

        i1 = i1 + 1;

        goto label1;

     label2:
        r1 = null;

     label3:
        return r1;
    }

    public final java.lang.String[] createStringArray()
    {
        android.os.Parcel r0;
        int i0, i1;
        java.lang.String[] r1;
        java.lang.String $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 < 0 goto label2;

        r1 = newarray (java.lang.String)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        r1 = null;

     label3:
        return r1;
    }

    public final java.util.ArrayList createStringArrayList()
    {
        android.os.Parcel r0;
        int i0;
        java.util.ArrayList r1, $r2;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label2;

        r1 = null;

     label1:
        return r1;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

        r1 = $r2;

     label3:
        if i0 <= 0 goto label1;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        i0 = i0 + -1;

        goto label3;
    }

    public final java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int i0, i1, $i2;
        java.lang.Object[] r2;
        java.lang.Object $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label2;

        r2 = null;

     label1:
        return r2;

     label2:
        r2 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object[] newArray(int)>(i0);

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $i2 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label4;

        $r3 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        r2[i1] = $r3;

     label4:
        i1 = i1 + 1;

        goto label3;
    }

    public final java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        int i0, $i1;
        java.util.ArrayList r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label2;

        r2 = null;

     label1:
        return r2;

     label2:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r3;

     label3:
        if i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label5;

        $r4 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label4:
        i0 = i0 + -1;

        goto label3;

     label5:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        goto label4;
    }

    public final int dataAvail()
    {
        android.os.Parcel r0;
        int $i0, $i1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeDataAvail(int)>($i0);

        return $i1;
    }

    public final int dataCapacity()
    {
        android.os.Parcel r0;
        int $i0, $i1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeDataCapacity(int)>($i0);

        return $i1;
    }

    public final int dataPosition()
    {
        android.os.Parcel r0;
        int $i0, $i1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeDataPosition(int)>($i0);

        return $i1;
    }

    public final int dataSize()
    {
        android.os.Parcel r0;
        int $i0, $i1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeDataSize(int)>($i0);

        return $i1;
    }

    public final void enforceInterface(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeEnforceInterface(int,java.lang.String)>($i0, r1);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.Parcel r0;

        r0 := @this: android.os.Parcel;

        specialinvoke r0.<android.os.Parcel: void destroy()>();

        return;
    }

    public final boolean hasFileDescriptors()
    {
        android.os.Parcel r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $z0 = staticinvoke <android.os.Parcel: boolean nativeHasFileDescriptors(int)>($i0);

        return $z0;
    }

    public final byte[] marshall()
    {
        android.os.Parcel r0;
        int $i0;
        byte[] $r1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: byte[] nativeMarshall(int)>($i0);

        return $r1;
    }

    public final boolean pushAllowFds(boolean)
    {
        android.os.Parcel r0;
        boolean z0, $z1;
        int $i0;

        r0 := @this: android.os.Parcel;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $z1 = staticinvoke <android.os.Parcel: boolean nativePushAllowFds(int,boolean)>($i0, z0);

        return $z1;
    }

    public final java.lang.Object[] readArray(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        java.lang.Object[] r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        r2 = newarray (java.lang.Object)[i0];

        specialinvoke r0.<android.os.Parcel: void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader)>(r2, i0, r1);

        return r2;
    }

    public final java.util.ArrayList readArrayList(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        java.util.ArrayList r2, $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(i0);

        r2 = $r3;

        specialinvoke r0.<android.os.Parcel: void readListInternal(java.util.List,int,java.lang.ClassLoader)>(r2, i0, r1);

        return r2;
    }

    void readArrayMapInternal(android.util.ArrayMap, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;
        int i0;
        java.lang.ClassLoader r2;
        java.lang.Object $r3, $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArrayMap;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        virtualinvoke r1.<android.util.ArrayMap: void append(java.lang.Object,java.lang.Object)>($r3, $r4);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    void readArrayMapSafelyInternal(android.util.ArrayMap, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;
        int i0;
        java.lang.ClassLoader r2;
        java.lang.Object $r3, $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArrayMap;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        virtualinvoke r1.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    public final void readBinderArray(android.os.IBinder[])
    {
        android.os.Parcel r0;
        android.os.IBinder[] r1;
        int i0, i1, $i2;
        java.lang.RuntimeException $r2;
        android.os.IBinder $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.IBinder[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i2 = lengthof r1;

        if i0 != $i2 goto label2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r1[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final void readBinderList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1, i2;
        android.os.IBinder $r3, $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        if i2 >= i1 goto label2;

        $r4 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        if i2 >= i1 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        i2 = i2 + 1;

        goto label2;

     label3:
        if i2 >= i0 goto label4;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public final void readBooleanArray(boolean[])
    {
        android.os.Parcel r0;
        boolean[] r1;
        int i0, i1, $i2, $i3;
        boolean z0;
        java.lang.RuntimeException $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: boolean[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i2 = lengthof r1;

        if i0 != $i2 goto label4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label3;

        z0 = 1;

     label2:
        r1[i1] = z0;

        i1 = i1 + 1;

        goto label1;

     label3:
        z0 = 0;

        goto label2;

     label4:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label5:
        return;
    }

    public final android.os.Bundle readBundle()
    {
        android.os.Parcel r0;
        android.os.Bundle $r1;

        r0 := @this: android.os.Parcel;

        $r1 = virtualinvoke r0.<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>(null);

        return $r1;
    }

    public final android.os.Bundle readBundle(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        android.os.Bundle r2, $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label2;

        r2 = null;

     label1:
        return r2;

     label2:
        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>(android.os.Parcel,int)>(r0, i0);

        r2 = $r3;

        if r1 == null goto label1;

        virtualinvoke r2.<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>(r1);

        return r2;
    }

    public final byte readByte()
    {
        android.os.Parcel r0;
        int $i0, $i1;
        byte $b2;

        r0 := @this: android.os.Parcel;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i1 = 255 & $i0;

        $b2 = (byte) $i1;

        return $b2;
    }

    public final void readByteArray(byte[])
    {
        android.os.Parcel r0;
        byte[] r1, r2;
        int $i0, $i1, $i2;
        java.lang.RuntimeException $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        r2 = virtualinvoke r0.<android.os.Parcel: byte[] createByteArray()>();

        $i1 = lengthof r2;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label1;

        $i2 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, 0, $i2);

        return;

     label1:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r3;
    }

    public final void readCharArray(char[])
    {
        android.os.Parcel r0;
        char[] r1;
        int i0, i1, $i2, $i3;
        java.lang.RuntimeException $r2;
        char $c4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: char[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i2 = lengthof r1;

        if i0 != $i2 goto label2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $c4 = (char) $i3;

        r1[i1] = $c4;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final java.lang.CharSequence readCharSequence()
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator $r1;
        java.lang.Object $r2;
        java.lang.CharSequence $r3;

        r0 := @this: android.os.Parcel;

        $r1 = <android.text.TextUtils: android.os.Parcelable$Creator CHAR_SEQUENCE_CREATOR>;

        $r2 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r3 = (java.lang.CharSequence) $r2;

        return $r3;
    }

    public final java.lang.CharSequence[] readCharSequenceArray()
    {
        android.os.Parcel r0;
        int i0, i1;
        java.lang.CharSequence[] r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        r1 = null;

        if i0 < 0 goto label2;

        r1 = newarray (java.lang.CharSequence)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public final android.os.Parcelable readCreator(android.os.Parcelable$Creator, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.lang.ClassLoader r2;
        boolean $z0;
        java.lang.Object $r3, $r6;
        android.os.Parcelable $r4, $r7;
        android.os.Parcelable$ClassLoaderCreator $r5;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        r2 := @parameter1: java.lang.ClassLoader;

        $z0 = r1 instanceof android.os.Parcelable$ClassLoaderCreator;

        if $z0 == 0 goto label1;

        $r5 = (android.os.Parcelable$ClassLoaderCreator) r1;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r0, r2);

        $r7 = (android.os.Parcelable) $r6;

        return $r7;

     label1:
        $r3 = interfaceinvoke r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r4 = (android.os.Parcelable) $r3;

        return $r4;
    }

    public final double readDouble()
    {
        android.os.Parcel r0;
        int $i0;
        double $d0;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $d0 = staticinvoke <android.os.Parcel: double nativeReadDouble(int)>($i0);

        return $d0;
    }

    public final void readDoubleArray(double[])
    {
        android.os.Parcel r0;
        double[] r1;
        int i0, i1, $i2;
        java.lang.RuntimeException $r2;
        double $d0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: double[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i2 = lengthof r1;

        if i0 != $i2 goto label2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $d0 = virtualinvoke r0.<android.os.Parcel: double readDouble()>();

        r1[i1] = $d0;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final void readException()
    {
        android.os.Parcel r0;
        int i0;
        java.lang.String $r1;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readExceptionCode()>();

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        virtualinvoke r0.<android.os.Parcel: void readException(int,java.lang.String)>(i0, $r1);

     label1:
        return;
    }

    public final void readException(int, java.lang.String)
    {
        android.os.Parcel r0;
        int i0;
        java.lang.String r1, $r8;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.SecurityException $r9;
        android.os.BadParcelableException $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.NullPointerException $r12;
        java.lang.IllegalStateException $r13;
        android.os.NetworkOnMainThreadException $r14;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        tableswitch(i0)
        {
            case -6: goto label7;
            case -5: goto label6;
            case -4: goto label5;
            case -3: goto label4;
            case -2: goto label3;
            case -1: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown exception code: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" msg ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label2:
        $r9 = new java.lang.SecurityException;

        specialinvoke $r9.<java.lang.SecurityException: void <init>(java.lang.String)>(r1);

        throw $r9;

     label3:
        $r10 = new android.os.BadParcelableException;

        specialinvoke $r10.<android.os.BadParcelableException: void <init>(java.lang.String)>(r1);

        throw $r10;

     label4:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r11;

     label5:
        $r12 = new java.lang.NullPointerException;

        specialinvoke $r12.<java.lang.NullPointerException: void <init>(java.lang.String)>(r1);

        throw $r12;

     label6:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r1);

        throw $r13;

     label7:
        $r14 = new android.os.NetworkOnMainThreadException;

        specialinvoke $r14.<android.os.NetworkOnMainThreadException: void <init>()>();

        throw $r14;
    }

    public final int readExceptionCode()
    {
        android.os.Parcel r0;
        int i0, $i1;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 != -128 goto label2;

        $i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i1 != 0 goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Parcel", "Unexpected zero-sized Parcel reply header.");

     label1:
        i0 = 0;

     label2:
        return i0;

     label3:
        staticinvoke <android.os.StrictMode: void readAndHandleBinderCallViolations(android.os.Parcel)>(r0);

        goto label1;
    }

    public final android.os.ParcelFileDescriptor readFileDescriptor()
    {
        android.os.Parcel r0;
        java.io.FileDescriptor r1;
        int $i0;
        android.os.ParcelFileDescriptor $r2;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        r1 = staticinvoke <android.os.Parcel: java.io.FileDescriptor nativeReadFileDescriptor(int)>($i0);

        if r1 == null goto label1;

        $r2 = new android.os.ParcelFileDescriptor;

        specialinvoke $r2.<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>(r1);

        return $r2;

     label1:
        return null;
    }

    public final float readFloat()
    {
        android.os.Parcel r0;
        int $i0;
        float $f0;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $f0 = staticinvoke <android.os.Parcel: float nativeReadFloat(int)>($i0);

        return $f0;
    }

    public final void readFloatArray(float[])
    {
        android.os.Parcel r0;
        float[] r1;
        int i0, i1, $i2;
        java.lang.RuntimeException $r2;
        float $f0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: float[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i2 = lengthof r1;

        if i0 != $i2 goto label2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $f0 = virtualinvoke r0.<android.os.Parcel: float readFloat()>();

        r1[i1] = $f0;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final java.util.HashMap readHashMap(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        java.util.HashMap r2, $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(i0);

        r2 = $r3;

        virtualinvoke r0.<android.os.Parcel: void readMapInternal(java.util.Map,int,java.lang.ClassLoader)>(r2, i0, r1);

        return r2;
    }

    public final int readInt()
    {
        android.os.Parcel r0;
        int $i0, $i1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $i1 = staticinvoke <android.os.Parcel: int nativeReadInt(int)>($i0);

        return $i1;
    }

    public final void readIntArray(int[])
    {
        android.os.Parcel r0;
        int[] r1;
        int i0, i1, $i2, $i3;
        java.lang.RuntimeException $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: int[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i2 = lengthof r1;

        if i0 != $i2 goto label2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        r1[i1] = $i3;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final void readList(java.util.List, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.util.List r1;
        java.lang.ClassLoader r2;
        int $i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.ClassLoader;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        specialinvoke r0.<android.os.Parcel: void readListInternal(java.util.List,int,java.lang.ClassLoader)>(r1, $i0, r2);

        return;
    }

    public final long readLong()
    {
        android.os.Parcel r0;
        int $i0;
        long $l1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $l1 = staticinvoke <android.os.Parcel: long nativeReadLong(int)>($i0);

        return $l1;
    }

    public final void readLongArray(long[])
    {
        android.os.Parcel r0;
        long[] r1;
        int i0, i1, $i2;
        java.lang.RuntimeException $r2;
        long $l3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: long[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i2 = lengthof r1;

        if i0 != $i2 goto label2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $l3 = virtualinvoke r0.<android.os.Parcel: long readLong()>();

        r1[i1] = $l3;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final void readMap(java.util.Map, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.util.Map r1;
        java.lang.ClassLoader r2;
        int $i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.ClassLoader;

        $i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.os.Parcel: void readMapInternal(java.util.Map,int,java.lang.ClassLoader)>(r1, $i0, r2);

        return;
    }

    void readMapInternal(java.util.Map, int, java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.util.Map r1;
        int i0;
        java.lang.ClassLoader r2;
        java.lang.Object $r3, $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.Map;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.ClassLoader;

     label1:
        if i0 <= 0 goto label2;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>(r2);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    public final android.os.Parcelable readParcelable(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        android.os.Parcelable$Creator r2;
        boolean $z0;
        java.lang.Object $r3, $r6;
        android.os.Parcelable $r4, $r7;
        android.os.Parcelable$ClassLoaderCreator $r5;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = r2 instanceof android.os.Parcelable$ClassLoaderCreator;

        if $z0 == 0 goto label2;

        $r5 = (android.os.Parcelable$ClassLoaderCreator) r2;

        $r6 = interfaceinvoke $r5.<android.os.Parcelable$ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>(r0, r1);

        $r7 = (android.os.Parcelable) $r6;

        return $r7;

     label2:
        $r3 = interfaceinvoke r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r4 = (android.os.Parcelable) $r3;

        return $r4;
    }

    public final android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0, i1;
        android.os.Parcelable[] r2;
        android.os.Parcelable $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label2;

        r2 = null;

     label1:
        return r2;

     label2:
        r2 = newarray (android.os.Parcelable)[i0];

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r3 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(r1);

        r2[i1] = $r3;

        i1 = i1 + 1;

        goto label3;
    }

    public final android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        java.lang.String r2, $r23, $r32, $r39, $r41, $r49, $r58, $r62, $r64;
        java.util.HashMap r3, r5, $r14, $r25, $r27;
        java.lang.Throwable r4, $r30;
        android.os.Parcelable$Creator r6;
        java.lang.ClassNotFoundException r10, $r28;
        java.lang.IllegalAccessException r11, $r47;
        java.lang.Class r12, r13;
        java.lang.Object $r15, $r16, $r17;
        java.lang.reflect.Field $r18;
        android.os.BadParcelableException $r19, $r36, $r37, $r48, $r52, $r66;
        java.lang.StringBuilder $r21, $r22, $r24, $r29, $r31, $r33, $r34, $r35, $r40, $r42, $r43, $r44, $r45, $r46, $r50, $r53, $r54, $r55, $r56, $r57, $r59, $r60, $r61, $r63;
        java.lang.NoSuchFieldException $r38;
        java.lang.NullPointerException $r51;
        java.lang.ClassCastException $r65;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        if r2 != null goto label01;

        return null;

     label01:
        r3 = <android.os.Parcel: java.util.HashMap mCreators>;

        entermonitor r3;

     label02:
        $r14 = <android.os.Parcel: java.util.HashMap mCreators>;

        $r16 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (java.util.HashMap) $r16;

     label03:
        if r5 != null goto label05;

     label04:
        $r27 = new java.util.HashMap;

        specialinvoke $r27.<java.util.HashMap: void <init>()>();

        r5 = $r27;

        $r25 = <android.os.Parcel: java.util.HashMap mCreators>;

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

     label05:
        $r15 = virtualinvoke r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (android.os.Parcelable$Creator) $r15;

     label06:
        if r6 != null goto label27;

        if r1 != null goto label14;

     label07:
        r13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r2);

     label08:
        $r18 = virtualinvoke r13.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("CREATOR");

        $r17 = virtualinvoke $r18.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        r6 = (android.os.Parcelable$Creator) $r17;

     label09:
        if r6 != null goto label26;

     label10:
        $r19 = new android.os.BadParcelableException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<android.os.BadParcelableException: void <init>(java.lang.String)>($r23);

        throw $r19;

     label11:
        $r30 := @caughtexception;

        r4 = $r30;

     label12:
        exitmonitor r3;

     label13:
        throw r4;

     label14:
        r12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r2, 1, r1);

     label15:
        r13 = r12;

        goto label08;

     label16:
        $r47 := @caughtexception;

        r11 = $r47;

     label17:
        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal access when unmarshalling: ");

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Parcel", $r49, r11);

        $r48 = new android.os.BadParcelableException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IllegalAccessException when unmarshalling: ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<android.os.BadParcelableException: void <init>(java.lang.String)>($r58);

        throw $r48;

     label18:
        $r28 := @caughtexception;

        r10 = $r28;

     label19:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class not found when unmarshalling: ");

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Parcel", $r32, r10);

        $r36 = new android.os.BadParcelableException;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClassNotFoundException when unmarshalling: ");

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<android.os.BadParcelableException: void <init>(java.lang.String)>($r39);

        throw $r36;

     label20:
        $r65 := @caughtexception;

     label21:
        $r66 = new android.os.BadParcelableException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r66.<android.os.BadParcelableException: void <init>(java.lang.String)>($r62);

        throw $r66;

     label22:
        $r38 := @caughtexception;

     label23:
        $r37 = new android.os.BadParcelableException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires a Parcelable.Creator object called  CREATOR on class ");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<android.os.BadParcelableException: void <init>(java.lang.String)>($r41);

        throw $r37;

     label24:
        $r51 := @caughtexception;

     label25:
        $r52 = new android.os.BadParcelableException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable protocol requires the CREATOR object to be static on class ");

        $r63 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<android.os.BadParcelableException: void <init>(java.lang.String)>($r64);

        throw $r52;

     label26:
        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r6);

     label27:
        exitmonitor r3;

     label28:
        return r6;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label16;
        catch java.lang.ClassNotFoundException from label07 to label08 with label18;
        catch java.lang.ClassCastException from label07 to label08 with label20;
        catch java.lang.NoSuchFieldException from label07 to label08 with label22;
        catch java.lang.NullPointerException from label07 to label08 with label24;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label08 to label09 with label16;
        catch java.lang.ClassNotFoundException from label08 to label09 with label18;
        catch java.lang.ClassCastException from label08 to label09 with label20;
        catch java.lang.NoSuchFieldException from label08 to label09 with label22;
        catch java.lang.NullPointerException from label08 to label09 with label24;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.IllegalAccessException from label14 to label15 with label16;
        catch java.lang.ClassNotFoundException from label14 to label15 with label18;
        catch java.lang.ClassCastException from label14 to label15 with label20;
        catch java.lang.NoSuchFieldException from label14 to label15 with label22;
        catch java.lang.NullPointerException from label14 to label15 with label24;
        catch java.lang.Throwable from label14 to label15 with label11;
        catch java.lang.Throwable from label17 to label18 with label11;
        catch java.lang.Throwable from label19 to label20 with label11;
        catch java.lang.Throwable from label21 to label22 with label11;
        catch java.lang.Throwable from label23 to label24 with label11;
        catch java.lang.Throwable from label25 to label26 with label11;
        catch java.lang.Throwable from label26 to label27 with label11;
        catch java.lang.Throwable from label27 to label28 with label11;
    }

    public final java.io.FileDescriptor readRawFileDescriptor()
    {
        android.os.Parcel r0;
        int $i0;
        java.io.FileDescriptor $r1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: java.io.FileDescriptor nativeReadFileDescriptor(int)>($i0);

        return $r1;
    }

    public final java.io.Serializable readSerializable()
    {
        android.os.Parcel r0;
        java.lang.String r1, $r15, $r23;
        java.io.ByteArrayInputStream r2, $r6;
        java.lang.ClassNotFoundException r3, $r18;
        java.io.IOException r4, $r10;
        java.io.Serializable r5;
        byte[] $r7;
        java.io.ObjectInputStream $r8;
        java.lang.Object $r9;
        java.lang.RuntimeException $r11, $r17;
        java.lang.StringBuilder $r12, $r13, $r14, $r16, $r19, $r20, $r21, $r22;

        r0 := @this: android.os.Parcel;

        r1 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r6 = new java.io.ByteArrayInputStream;

        $r7 = virtualinvoke r0.<android.os.Parcel: byte[] createByteArray()>();

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7);

        r2 = $r6;

     label2:
        $r8 = new java.io.ObjectInputStream;

        specialinvoke $r8.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r2);

        $r9 = virtualinvoke $r8.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r5 = (java.io.Serializable) $r9;

     label3:
        return r5;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable encountered IOException reading a Serializable object (name = ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, r4);

        throw $r11;

     label5:
        $r18 := @caughtexception;

        r3 = $r18;

        $r17 = new java.lang.RuntimeException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable encounteredClassNotFoundException reading a Serializable object (name = ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, r3);

        throw $r17;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.ClassNotFoundException from label2 to label3 with label5;
    }

    public final android.util.SparseArray readSparseArray(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        int i0;
        android.util.SparseArray r2, $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>(int)>(i0);

        r2 = $r3;

        specialinvoke r0.<android.os.Parcel: void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader)>(r2, i0, r1);

        return r2;
    }

    public final android.util.SparseBooleanArray readSparseBooleanArray()
    {
        android.os.Parcel r0;
        int i0;
        android.util.SparseBooleanArray r1, $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = new android.util.SparseBooleanArray;

        specialinvoke $r2.<android.util.SparseBooleanArray: void <init>(int)>(i0);

        r1 = $r2;

        specialinvoke r0.<android.os.Parcel: void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int)>(r1, i0);

        return r1;
    }

    public final java.lang.String readString()
    {
        android.os.Parcel r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: java.lang.String nativeReadString(int)>($i0);

        return $r1;
    }

    public final void readStringArray(java.lang.String[])
    {
        android.os.Parcel r0;
        java.lang.String[] r1;
        int i0, i1, $i2;
        java.lang.RuntimeException $r2;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String[];

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i2 = lengthof r1;

        if i0 != $i2 goto label2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        r1[i1] = $r3;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r2;

     label3:
        return;
    }

    public final java.lang.String[] readStringArray()
    {
        android.os.Parcel r0;
        int i0, i1;
        java.lang.String[] r1;
        java.lang.String $r2;

        r0 := @this: android.os.Parcel;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        r1 = null;

        if i0 < 0 goto label2;

        r1 = newarray (java.lang.String)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        r1[i1] = $r2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public final void readStringList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1, i2;
        java.lang.String $r3, $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        if i2 >= i1 goto label2;

        $r4 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r4);

        i2 = i2 + 1;

        goto label1;

     label2:
        if i2 >= i1 goto label3;

        $r3 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        i2 = i2 + 1;

        goto label2;

     label3:
        if i2 >= i0 goto label4;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    public final android.os.IBinder readStrongBinder()
    {
        android.os.Parcel r0;
        int $i0;
        android.os.IBinder $r1;

        r0 := @this: android.os.Parcel;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        $r1 = staticinvoke <android.os.Parcel: android.os.IBinder nativeReadStrongBinder(int)>($i0);

        return $r1;
    }

    public final void readTypedArray(java.lang.Object[], android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        java.lang.Object[] r1;
        android.os.Parcelable$Creator r2;
        int i0, i1, $i2, $i3;
        java.lang.RuntimeException $r3;
        java.lang.Object $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Object[];

        r2 := @parameter1: android.os.Parcelable$Creator;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $i2 = lengthof r1;

        if i0 != $i2 goto label4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label3;

        $r4 = interfaceinvoke r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        r1[i1] = $r4;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        r1[i1] = null;

        goto label2;

     label4:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("bad array lengths");

        throw $r3;

     label5:
        return;
    }

    public final java.lang.Object[] readTypedArray(android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator r1;
        java.lang.Object[] $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable$Creator;

        $r2 = virtualinvoke r0.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>(r1);

        return $r2;
    }

    public final void readTypedList(java.util.List, android.os.Parcelable$Creator)
    {
        android.os.Parcel r0;
        java.util.List r1;
        android.os.Parcelable$Creator r2;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object $r4, $r6;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.os.Parcelable$Creator;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        if i2 >= i1 goto label4;

        $i4 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i4 == 0 goto label3;

        $r6 = interfaceinvoke r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r6);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        interfaceinvoke r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, null);

        goto label2;

     label4:
        if i2 >= i1 goto label7;

        $i3 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        if $i3 == 0 goto label6;

        $r4 = interfaceinvoke r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

     label5:
        i2 = i2 + 1;

        goto label4;

     label6:
        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label5;

     label7:
        if i2 >= i0 goto label8;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

        i2 = i2 + 1;

        goto label7;

     label8:
        return;
    }

    public final java.lang.Object readValue(java.lang.ClassLoader)
    {
        android.os.Parcel r0;
        java.lang.ClassLoader r1;
        boolean z0;
        int i0, i1, $i2, $i4, $i7, $i8, i9;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.CharSequence[] $r10;
        java.lang.String $r11, $r34;
        android.util.SparseBooleanArray $r12;
        boolean[] $r13;
        byte $b3;
        java.io.Serializable $r14;
        long[] $r15;
        java.lang.Byte $r16;
        java.lang.Object[] $r17;
        int[] $r18;
        android.os.IBinder $r19;
        android.os.Parcelable[] $r20;
        byte[] $r21;
        java.lang.String[] $r22;
        java.util.ArrayList $r23;
        android.util.SparseArray $r24;
        java.lang.Boolean $r25;
        double $d0;
        java.lang.CharSequence $r26;
        java.lang.Float $r27;
        long $l5;
        java.lang.Double $r28;
        float $f0;
        short $s6;
        java.lang.Short $r29;
        java.lang.Long $r30;
        java.util.HashMap $r31;
        android.os.Parcelable $r32;
        android.os.Bundle $r33;
        java.lang.Integer $r35;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.ClassLoader;

        z0 = 1;

        i0 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        tableswitch(i0)
        {
            case -1: goto label02;
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label29;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            case 10: goto label14;
            case 11: goto label15;
            case 12: goto label27;
            case 13: goto label17;
            case 14: goto label18;
            case 15: goto label20;
            case 16: goto label26;
            case 17: goto label21;
            case 18: goto label22;
            case 19: goto label23;
            case 20: goto label24;
            case 21: goto label25;
            case 22: goto label28;
            case 23: goto label16;
            case 24: goto label19;
            default: goto label01;
        };

     label01:
        $i2 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        i1 = -4 + $i2;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcel ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Unmarshalling unknown type code ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at offset ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r2;

     label02:
        return null;

     label03:
        $r34 = virtualinvoke r0.<android.os.Parcel: java.lang.String readString()>();

        return $r34;

     label04:
        $i8 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        return $r35;

     label05:
        $r31 = virtualinvoke r0.<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>(r1);

        return $r31;

     label06:
        $r32 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(r1);

        return $r32;

     label07:
        $i7 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        $s6 = (short) $i7;

        $r29 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s6);

        return $r29;

     label08:
        $l5 = virtualinvoke r0.<android.os.Parcel: long readLong()>();

        $r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        return $r30;

     label09:
        $f0 = virtualinvoke r0.<android.os.Parcel: float readFloat()>();

        $r27 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r27;

     label10:
        $d0 = virtualinvoke r0.<android.os.Parcel: double readDouble()>();

        $r28 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r28;

     label11:
        $i4 = virtualinvoke r0.<android.os.Parcel: int readInt()>();

        i9 = (int) 1;

        if $i4 != i9 goto label13;

     label12:
        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        return $r25;

     label13:
        z0 = 0;

        goto label12;

     label14:
        $r26 = virtualinvoke r0.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        return $r26;

     label15:
        $r23 = virtualinvoke r0.<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>(r1);

        return $r23;

     label16:
        $r13 = virtualinvoke r0.<android.os.Parcel: boolean[] createBooleanArray()>();

        return $r13;

     label17:
        $r21 = virtualinvoke r0.<android.os.Parcel: byte[] createByteArray()>();

        return $r21;

     label18:
        $r22 = virtualinvoke r0.<android.os.Parcel: java.lang.String[] readStringArray()>();

        return $r22;

     label19:
        $r10 = virtualinvoke r0.<android.os.Parcel: java.lang.CharSequence[] readCharSequenceArray()>();

        return $r10;

     label20:
        $r19 = virtualinvoke r0.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        return $r19;

     label21:
        $r17 = virtualinvoke r0.<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>(r1);

        return $r17;

     label22:
        $r18 = virtualinvoke r0.<android.os.Parcel: int[] createIntArray()>();

        return $r18;

     label23:
        $r15 = virtualinvoke r0.<android.os.Parcel: long[] createLongArray()>();

        return $r15;

     label24:
        $b3 = virtualinvoke r0.<android.os.Parcel: byte readByte()>();

        $r16 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b3);

        return $r16;

     label25:
        $r14 = virtualinvoke r0.<android.os.Parcel: java.io.Serializable readSerializable()>();

        return $r14;

     label26:
        $r20 = virtualinvoke r0.<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>(r1);

        return $r20;

     label27:
        $r24 = virtualinvoke r0.<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>(r1);

        return $r24;

     label28:
        $r12 = virtualinvoke r0.<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>();

        return $r12;

     label29:
        $r33 = virtualinvoke r0.<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>(r1);

        return $r33;
    }

    public final void recycle()
    {
        android.os.Parcel r0, $r3;
        android.os.Parcel[] r1;
        int i0;
        java.lang.Throwable r2, $r4;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        specialinvoke r0.<android.os.Parcel: void freeBuffer()>();

        $z0 = r0.<android.os.Parcel: boolean mOwnsNativeParcelObject>;

        if $z0 == 0 goto label05;

        r1 = <android.os.Parcel: android.os.Parcel[] sOwnedPool>;

     label01:
        entermonitor r1;

        i0 = 0;

     label02:
        if i0 >= 6 goto label07;

     label03:
        $r3 = r1[i0];

        if $r3 != null goto label06;

        r1[i0] = r0;

        exitmonitor r1;

     label04:
        return;

     label05:
        r0.<android.os.Parcel: int mNativePtr> = 0;

        r1 = <android.os.Parcel: android.os.Parcel[] sHolderPool>;

        goto label01;

     label06:
        i0 = i0 + 1;

        goto label02;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r4 := @caughtexception;

        r2 = $r4;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public final void restoreAllowFds(boolean)
    {
        android.os.Parcel r0;
        boolean z0;
        int $i0;

        r0 := @this: android.os.Parcel;

        z0 := @parameter0: boolean;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeRestoreAllowFds(int,boolean)>($i0, z0);

        return;
    }

    public final void setDataCapacity(int)
    {
        android.os.Parcel r0;
        int i0, $i1;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        $i1 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeSetDataCapacity(int,int)>($i1, i0);

        return;
    }

    public final void setDataPosition(int)
    {
        android.os.Parcel r0;
        int i0, $i1;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        $i1 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeSetDataPosition(int,int)>($i1, i0);

        return;
    }

    public final void setDataSize(int)
    {
        android.os.Parcel r0;
        int i0, $i1;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        $i1 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeSetDataSize(int,int)>($i1, i0);

        return;
    }

    public final void unmarshall(byte[], int, int)
    {
        android.os.Parcel r0;
        byte[] r1;
        int i0, i1, $i2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeUnmarshall(int,byte[],int,int)>($i2, r1, i0, i1);

        return;
    }

    public final void writeArray(java.lang.Object[])
    {
        android.os.Parcel r0;
        java.lang.Object[] r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Object[];

        if r1 != null goto label2;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label1:
        return;

     label2:
        i0 = lengthof r1;

        i1 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

     label3:
        if i1 >= i0 goto label1;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label3;
    }

    void writeArrayMapInternal(android.util.ArrayMap)
    {
        android.os.Parcel r0;
        android.util.ArrayMap r1;
        int i0, i1;
        java.lang.Object $r2, $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.ArrayMap;

        if r1 != null goto label2;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label1:
        return;

     label2:
        i0 = virtualinvoke r1.<android.util.ArrayMap: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r2 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        $r3 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label3;
    }

    public final void writeBinderArray(android.os.IBinder[])
    {
        android.os.Parcel r0;
        android.os.IBinder[] r1;
        int i0, i1;
        android.os.IBinder $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.IBinder[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label3:
        return;
    }

    public final void writeBinderList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1;
        java.lang.Object $r2;
        android.os.IBinder $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label2;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label1:
        return;

     label2:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

     label3:
        if i1 >= i0 goto label1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (android.os.IBinder) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r3);

        i1 = i1 + 1;

        goto label3;
    }

    public final void writeBooleanArray(boolean[])
    {
        android.os.Parcel r0;
        boolean[] r1;
        int i0, i1;
        byte b2;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: boolean[];

        if r1 == null goto label4;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        $z0 = r1[i1];

        if $z0 == 0 goto label3;

        b2 = 1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(b2);

        i1 = i1 + 1;

        goto label1;

     label3:
        b2 = 0;

        goto label2;

     label4:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label5:
        return;
    }

    public final void writeBundle(android.os.Bundle)
    {
        android.os.Parcel r0;
        android.os.Bundle r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r0, 0);

        return;
    }

    public final void writeByte(byte)
    {
        android.os.Parcel r0;
        byte b0;

        r0 := @this: android.os.Parcel;

        b0 := @parameter0: byte;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(b0);

        return;
    }

    public final void writeByteArray(byte[])
    {
        android.os.Parcel r0;
        byte[] r1;
        int i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        if r1 == null goto label2;

        i0 = lengthof r1;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeByteArray(byte[],int,int)>(r1, 0, i0);

        return;

     label2:
        i0 = 0;

        goto label1;
    }

    public final void writeByteArray(byte[], int, int)
    {
        android.os.Parcel r0;
        byte[] r1;
        int i0, i1, $i2, $i3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label1:
        $i2 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i2, i0, i1);

        $i3 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteByteArray(int,byte[],int,int)>($i3, r1, i0, i1);

        return;
    }

    public final void writeCharArray(char[])
    {
        android.os.Parcel r0;
        char[] r1;
        int i0, i1;
        char $c2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: char[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $c2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($c2);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label3:
        return;
    }

    public final void writeCharSequence(java.lang.CharSequence)
    {
        android.os.Parcel r0;
        java.lang.CharSequence r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r0, 0);

        return;
    }

    public final void writeCharSequenceArray(java.lang.CharSequence[])
    {
        android.os.Parcel r0;
        java.lang.CharSequence[] r1;
        int i0, i1;
        java.lang.CharSequence $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.CharSequence[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label3:
        return;
    }

    public final void writeDouble(double)
    {
        android.os.Parcel r0;
        double d0;
        int $i0;

        r0 := @this: android.os.Parcel;

        d0 := @parameter0: double;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteDouble(int,double)>($i0, d0);

        return;
    }

    public final void writeDoubleArray(double[])
    {
        android.os.Parcel r0;
        double[] r1;
        int i0, i1;
        double $d0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: double[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $d0 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeDouble(double)>($d0);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label3:
        return;
    }

    public final void writeException(java.lang.Exception)
    {
        android.os.Parcel r0;
        java.lang.Exception r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        byte b0;
        java.lang.String $r2;
        java.lang.RuntimeException $r3, $r4;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Exception;

        $z1 = r1 instanceof java.lang.SecurityException;

        if $z1 == 0 goto label2;

        b0 = -1;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(b0);

        staticinvoke <android.os.StrictMode: void clearGatheredViolations()>();

        if b0 != 0 goto label8;

        $z6 = r1 instanceof java.lang.RuntimeException;

        if $z6 == 0 goto label7;

        $r4 = (java.lang.RuntimeException) r1;

        throw $r4;

     label2:
        $z2 = r1 instanceof android.os.BadParcelableException;

        if $z2 == 0 goto label3;

        b0 = -2;

        goto label1;

     label3:
        $z3 = r1 instanceof java.lang.IllegalArgumentException;

        if $z3 == 0 goto label4;

        b0 = -3;

        goto label1;

     label4:
        $z4 = r1 instanceof java.lang.NullPointerException;

        if $z4 == 0 goto label5;

        b0 = -4;

        goto label1;

     label5:
        $z5 = r1 instanceof java.lang.IllegalStateException;

        if $z5 == 0 goto label6;

        b0 = -5;

        goto label1;

     label6:
        z0 = r1 instanceof android.os.NetworkOnMainThreadException;

        b0 = 0;

        if z0 == 0 goto label1;

        b0 = -6;

        goto label1;

     label7:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r3;

     label8:
        $r2 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        return;
    }

    public final void writeFileDescriptor(java.io.FileDescriptor)
    {
        android.os.Parcel r0;
        java.io.FileDescriptor r1;
        int $i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.io.FileDescriptor;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteFileDescriptor(int,java.io.FileDescriptor)>($i0, r1);

        return;
    }

    public final void writeFloat(float)
    {
        android.os.Parcel r0;
        float f0;
        int $i0;

        r0 := @this: android.os.Parcel;

        f0 := @parameter0: float;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteFloat(int,float)>($i0, f0);

        return;
    }

    public final void writeFloatArray(float[])
    {
        android.os.Parcel r0;
        float[] r1;
        int i0, i1;
        float $f0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: float[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $f0 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeFloat(float)>($f0);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label3:
        return;
    }

    public final void writeInt(int)
    {
        android.os.Parcel r0;
        int i0, $i1;

        r0 := @this: android.os.Parcel;

        i0 := @parameter0: int;

        $i1 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteInt(int,int)>($i1, i0);

        return;
    }

    public final void writeIntArray(int[])
    {
        android.os.Parcel r0;
        int[] r1;
        int i0, i1, $i2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: int[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i2);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label3:
        return;
    }

    public final void writeInterfaceToken(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteInterfaceToken(int,java.lang.String)>($i0, r1);

        return;
    }

    public final void writeList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1;
        java.lang.Object $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label2;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label1:
        return;

     label2:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

     label3:
        if i1 >= i0 goto label1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label3;
    }

    public final void writeLong(long)
    {
        android.os.Parcel r0;
        long l0;
        int $i1;

        r0 := @this: android.os.Parcel;

        l0 := @parameter0: long;

        $i1 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteLong(int,long)>($i1, l0);

        return;
    }

    public final void writeLongArray(long[])
    {
        android.os.Parcel r0;
        long[] r1;
        int i0, i1;
        long $l2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: long[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $l2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeLong(long)>($l2);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label3:
        return;
    }

    public final void writeMap(java.util.Map)
    {
        android.os.Parcel r0;
        java.util.Map r1;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.Map;

        virtualinvoke r0.<android.os.Parcel: void writeMapInternal(java.util.Map)>(r1);

        return;
    }

    void writeMapInternal(java.util.Map)
    {
        android.os.Parcel r0;
        java.util.Map r1;
        java.util.Set r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        int $i0;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.Map;

        if r1 != null goto label2;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label1:
        return;

     label2:
        r2 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $i0 = interfaceinvoke r2.<java.util.Set: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i0);

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r6);

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r7);

        goto label3;
    }

    public final void writeNoException()
    {
        android.os.Parcel r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: android.os.Parcel;

        $z0 = staticinvoke <android.os.StrictMode: boolean hasGatheredViolations()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-128);

        i0 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        staticinvoke <android.os.StrictMode: void writeGatheredViolationsToParcel(android.os.Parcel)>(r0);

        i1 = virtualinvoke r0.<android.os.Parcel: int dataPosition()>();

        virtualinvoke r0.<android.os.Parcel: void setDataPosition(int)>(i0);

        $i2 = i1 - i0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i2);

        virtualinvoke r0.<android.os.Parcel: void setDataPosition(int)>(i1);

        return;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        return;
    }

    public final void writeParcelable(android.os.Parcelable, int)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        int i0;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>(null);

        return;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        interfaceinvoke r1.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, i0);

        return;
    }

    public final void writeParcelableArray(android.os.Parcelable[], int)
    {
        android.os.Parcel r0;
        android.os.Parcelable[] r1;
        int i0, i1, i2;
        android.os.Parcelable $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable[];

        i0 := @parameter1: int;

        if r1 == null goto label2;

        i1 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r2 = r1[i2];

        virtualinvoke r0.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r2, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label3:
        return;
    }

    public final void writeParcelableCreator(android.os.Parcelable)
    {
        android.os.Parcel r0;
        android.os.Parcelable r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        return;
    }

    public final void writeSerializable(java.io.Serializable)
    {
        android.os.Parcel r0;
        java.io.Serializable r1;
        java.lang.String r2, $r15;
        java.io.ByteArrayOutputStream r3, $r7;
        java.io.ObjectOutputStream r4, $r8;
        java.io.IOException r5, $r10;
        java.lang.Class $r6;
        byte[] $r9;
        java.lang.RuntimeException $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r16;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.io.Serializable;

        if r1 != null goto label1;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>(null);

        return;

     label1:
        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r3 = $r7;

     label2:
        $r8 = new java.io.ObjectOutputStream;

        specialinvoke $r8.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r3);

        r4 = $r8;

        virtualinvoke r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        virtualinvoke r4.<java.io.ObjectOutputStream: void close()>();

        $r9 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r0.<android.os.Parcel: void writeByteArray(byte[])>($r9);

     label3:
        return;

     label4:
        $r10 := @caughtexception;

        r5 = $r10;

        $r11 = new java.lang.RuntimeException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcelable encountered IOException writing serializable object (name = ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, r5);

        throw $r11;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public final void writeSparseArray(android.util.SparseArray)
    {
        android.os.Parcel r0;
        android.util.SparseArray r1;
        int i0, i1, $i2;
        java.lang.Object $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseArray;

        if r1 != null goto label2;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label1:
        return;

     label2:
        i0 = virtualinvoke r1.<android.util.SparseArray: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $i2 = virtualinvoke r1.<android.util.SparseArray: int keyAt(int)>(i1);

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i2);

        $r2 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        virtualinvoke r0.<android.os.Parcel: void writeValue(java.lang.Object)>($r2);

        i1 = i1 + 1;

        goto label3;
    }

    public final void writeSparseBooleanArray(android.util.SparseBooleanArray)
    {
        android.os.Parcel r0;
        android.util.SparseBooleanArray r1;
        int i0, i1, $i2;
        boolean z0, $z1;
        byte $b3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.util.SparseBooleanArray;

        if r1 != null goto label2;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label1:
        return;

     label2:
        i0 = virtualinvoke r1.<android.util.SparseBooleanArray: int size()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $i2 = virtualinvoke r1.<android.util.SparseBooleanArray: int keyAt(int)>(i1);

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i2);

        $z1 = virtualinvoke r1.<android.util.SparseBooleanArray: boolean valueAt(int)>(i1);

        if $z1 == 0 goto label5;

        z0 = 1;

     label4:
        $b3 = (byte) z0;

        virtualinvoke r0.<android.os.Parcel: void writeByte(byte)>($b3);

        i1 = i1 + 1;

        goto label3;

     label5:
        z0 = 0;

        goto label4;
    }

    public final void writeString(java.lang.String)
    {
        android.os.Parcel r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteString(int,java.lang.String)>($i0, r1);

        return;
    }

    public final void writeStringArray(java.lang.String[])
    {
        android.os.Parcel r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String $r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.String[];

        if r1 == null goto label2;

        i0 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r1[i1];

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label3:
        return;
    }

    public final void writeStringList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label2;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label1:
        return;

     label2:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

     label3:
        if i1 >= i0 goto label1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r3 = (java.lang.String) $r2;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        i1 = i1 + 1;

        goto label3;
    }

    public final void writeStrongBinder(android.os.IBinder)
    {
        android.os.Parcel r0;
        android.os.IBinder r1;
        int $i0;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.IBinder;

        $i0 = r0.<android.os.Parcel: int mNativePtr>;

        staticinvoke <android.os.Parcel: void nativeWriteStrongBinder(int,android.os.IBinder)>($i0, r1);

        return;
    }

    public final void writeStrongInterface(android.os.IInterface)
    {
        android.os.Parcel r0;
        android.os.IInterface r1;
        android.os.IBinder r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.IInterface;

        if r1 != null goto label2;

        r2 = null;

     label1:
        virtualinvoke r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

        return;

     label2:
        r2 = interfaceinvoke r1.<android.os.IInterface: android.os.IBinder asBinder()>();

        goto label1;
    }

    public final void writeTypedArray(android.os.Parcelable[], int)
    {
        android.os.Parcel r0;
        android.os.Parcelable[] r1;
        int i0, i1, i2;
        android.os.Parcelable r2;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: android.os.Parcelable[];

        i0 := @parameter1: int;

        if r1 == null goto label4;

        i1 = lengthof r1;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i1);

        i2 = 0;

     label1:
        if i2 >= i1 goto label5;

        r2 = r1[i2];

        if r2 == null goto label3;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke r2.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, i0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        goto label2;

     label4:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label5:
        return;
    }

    public final void writeTypedList(java.util.List)
    {
        android.os.Parcel r0;
        java.util.List r1;
        int i0, i1;
        android.os.Parcelable r2;
        java.lang.Object $r3;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.util.List;

        if r1 != null goto label2;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

     label1:
        return;

     label2:
        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(i0);

     label3:
        if i1 >= i0 goto label1;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (android.os.Parcelable) $r3;

        if r2 == null goto label5;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        interfaceinvoke r2.<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>(r0, 0);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        goto label4;
    }

    public final void writeValue(java.lang.Object)
    {
        android.os.Parcel r0;
        java.lang.Object r1;
        byte b0, $b1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r35;
        long[] $r7, $r12;
        java.io.Serializable $r8;
        java.lang.Byte $r9;
        int[] $r10, $r13;
        java.lang.Object[] $r11, $r16;
        android.os.Parcelable[] $r14, $r17;
        android.os.IBinder $r15;
        java.lang.String[] $r18, $r19;
        java.lang.CharSequence[] $r20, $r21;
        boolean[] $r22, $r23;
        byte[] $r24, $r25;
        java.lang.Boolean $r26;
        java.lang.CharSequence $r27;
        java.util.List $r28;
        android.util.SparseArray $r29;
        java.lang.Float $r30;
        double $d0;
        java.lang.Double $r31;
        java.lang.Short $r32;
        long $l2;
        java.lang.Long $r33;
        float $f0;
        java.lang.Integer $r34;
        int $i3, $i4;
        android.os.Parcelable $r36;
        android.os.Bundle $r37;
        java.util.Map $r38;

        r0 := @this: android.os.Parcel;

        r1 := @parameter0: java.lang.Object;

        b0 = 1;

        if r1 != null goto label01;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(-1);

        return;

     label01:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label02;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(0);

        $r35 = (java.lang.String) r1;

        virtualinvoke r0.<android.os.Parcel: void writeString(java.lang.String)>($r35);

        return;

     label02:
        $z1 = r1 instanceof java.lang.Integer;

        if $z1 == 0 goto label03;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(1);

        $r34 = (java.lang.Integer) r1;

        $i3 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i3);

        return;

     label03:
        $z2 = r1 instanceof java.util.Map;

        if $z2 == 0 goto label04;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(2);

        $r38 = (java.util.Map) r1;

        virtualinvoke r0.<android.os.Parcel: void writeMap(java.util.Map)>($r38);

        return;

     label04:
        $z3 = r1 instanceof android.os.Bundle;

        if $z3 == 0 goto label05;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(3);

        $r37 = (android.os.Bundle) r1;

        virtualinvoke r0.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r37);

        return;

     label05:
        $z4 = r1 instanceof android.os.Parcelable;

        if $z4 == 0 goto label06;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(4);

        $r36 = (android.os.Parcelable) r1;

        virtualinvoke r0.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r36, 0);

        return;

     label06:
        $z5 = r1 instanceof java.lang.Short;

        if $z5 == 0 goto label07;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(5);

        $r32 = (java.lang.Short) r1;

        $i4 = virtualinvoke $r32.<java.lang.Short: int intValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($i4);

        return;

     label07:
        $z6 = r1 instanceof java.lang.Long;

        if $z6 == 0 goto label08;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(6);

        $r33 = (java.lang.Long) r1;

        $l2 = virtualinvoke $r33.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeLong(long)>($l2);

        return;

     label08:
        $z7 = r1 instanceof java.lang.Float;

        if $z7 == 0 goto label09;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(7);

        $r30 = (java.lang.Float) r1;

        $f0 = virtualinvoke $r30.<java.lang.Float: float floatValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeFloat(float)>($f0);

        return;

     label09:
        $z8 = r1 instanceof java.lang.Double;

        if $z8 == 0 goto label10;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(8);

        $r31 = (java.lang.Double) r1;

        $d0 = virtualinvoke $r31.<java.lang.Double: double doubleValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeDouble(double)>($d0);

        return;

     label10:
        $z9 = r1 instanceof java.lang.Boolean;

        if $z9 == 0 goto label13;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(9);

        $r26 = (java.lang.Boolean) r1;

        $z24 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();

        if $z24 == 0 goto label12;

     label11:
        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(b0);

        return;

     label12:
        b0 = 0;

        goto label11;

     label13:
        $z10 = r1 instanceof java.lang.CharSequence;

        if $z10 == 0 goto label14;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(10);

        $r27 = (java.lang.CharSequence) r1;

        virtualinvoke r0.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r27);

        return;

     label14:
        $z11 = r1 instanceof java.util.List;

        if $z11 == 0 goto label15;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(11);

        $r28 = (java.util.List) r1;

        virtualinvoke r0.<android.os.Parcel: void writeList(java.util.List)>($r28);

        return;

     label15:
        $z12 = r1 instanceof android.util.SparseArray;

        if $z12 == 0 goto label16;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(12);

        $r29 = (android.util.SparseArray) r1;

        virtualinvoke r0.<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>($r29);

        return;

     label16:
        $z14 = r1 instanceof boolean[];

        if $z14 == 0 goto label17;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(23);

        $r23 = (boolean[]) r1;

        $r22 = (boolean[]) $r23;

        virtualinvoke r0.<android.os.Parcel: void writeBooleanArray(boolean[])>($r22);

        return;

     label17:
        $z13 = r1 instanceof byte[];

        if $z13 == 0 goto label18;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(13);

        $r25 = (byte[]) r1;

        $r24 = (byte[]) $r25;

        virtualinvoke r0.<android.os.Parcel: void writeByteArray(byte[])>($r24);

        return;

     label18:
        $z16 = r1 instanceof java.lang.String[];

        if $z16 == 0 goto label19;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(14);

        $r18 = (java.lang.String[]) r1;

        $r19 = (java.lang.String[]) $r18;

        virtualinvoke r0.<android.os.Parcel: void writeStringArray(java.lang.String[])>($r19);

        return;

     label19:
        $z15 = r1 instanceof java.lang.CharSequence[];

        if $z15 == 0 goto label20;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(24);

        $r20 = (java.lang.CharSequence[]) r1;

        $r21 = (java.lang.CharSequence[]) $r20;

        virtualinvoke r0.<android.os.Parcel: void writeCharSequenceArray(java.lang.CharSequence[])>($r21);

        return;

     label20:
        $z18 = r1 instanceof android.os.IBinder;

        if $z18 == 0 goto label21;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(15);

        $r15 = (android.os.IBinder) r1;

        virtualinvoke r0.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r15);

        return;

     label21:
        $z17 = r1 instanceof android.os.Parcelable[];

        if $z17 == 0 goto label22;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(16);

        $r17 = (android.os.Parcelable[]) r1;

        $r14 = (android.os.Parcelable[]) $r17;

        virtualinvoke r0.<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>($r14, 0);

        return;

     label22:
        $z20 = r1 instanceof java.lang.Object[];

        if $z20 == 0 goto label23;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(17);

        $r11 = (java.lang.Object[]) r1;

        $r16 = (java.lang.Object[]) $r11;

        virtualinvoke r0.<android.os.Parcel: void writeArray(java.lang.Object[])>($r16);

        return;

     label23:
        $z19 = r1 instanceof int[];

        if $z19 == 0 goto label24;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(18);

        $r13 = (int[]) r1;

        $r10 = (int[]) $r13;

        virtualinvoke r0.<android.os.Parcel: void writeIntArray(int[])>($r10);

        return;

     label24:
        $z22 = r1 instanceof long[];

        if $z22 == 0 goto label25;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(19);

        $r7 = (long[]) r1;

        $r12 = (long[]) $r7;

        virtualinvoke r0.<android.os.Parcel: void writeLongArray(long[])>($r12);

        return;

     label25:
        $z21 = r1 instanceof java.lang.Byte;

        if $z21 == 0 goto label26;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(20);

        $r9 = (java.lang.Byte) r1;

        $b1 = virtualinvoke $r9.<java.lang.Byte: byte byteValue()>();

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>($b1);

        return;

     label26:
        $z23 = r1 instanceof java.io.Serializable;

        if $z23 == 0 goto label27;

        virtualinvoke r0.<android.os.Parcel: void writeInt(int)>(21);

        $r8 = (java.io.Serializable) r1;

        virtualinvoke r0.<android.os.Parcel: void writeSerializable(java.io.Serializable)>($r8);

        return;

     label27:
        $r2 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parcel: unable to marshal value ");

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r2;
    }
}
