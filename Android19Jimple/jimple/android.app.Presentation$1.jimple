final class android.app.Presentation$1 extends android.view.ContextThemeWrapper
{
    final android.view.WindowManagerImpl val$displayWindowManager;

    void <init>(android.content.Context, int, android.view.WindowManagerImpl)
    {
        android.app.Presentation$1 r0;
        android.content.Context r1;
        int i0;
        android.view.WindowManagerImpl r2;

        r0 := @this: android.app.Presentation$1;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.WindowManagerImpl;

        r0.<android.app.Presentation$1: android.view.WindowManagerImpl val$displayWindowManager> = r2;

        specialinvoke r0.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r1, i0);

        return;
    }

    public java.lang.Object getSystemService(java.lang.String)
    {
        android.app.Presentation$1 r0;
        java.lang.String r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.view.WindowManagerImpl $r4;

        r0 := @this: android.app.Presentation$1;

        r1 := @parameter0: java.lang.String;

        $r2 = "window";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.app.Presentation$1: android.view.WindowManagerImpl val$displayWindowManager>;

        return $r4;

     label1:
        $r3 = specialinvoke r0.<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>(r1);

        return $r3;
    }
}
