public class com.android.org.conscrypt.Logger$Stream extends java.io.PrintStream
{
    private static int indent;
    private final java.lang.String prefix;

    static void <clinit>()
    {
        <com.android.org.conscrypt.Logger$Stream: int indent> = 0;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.android.org.conscrypt.Logger$Stream r0;
        java.lang.String r1, $r7, $r10;
        java.io.PrintStream $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9;
        java.lang.Thread $r6;

        r0 := @this: com.android.org.conscrypt.Logger$Stream;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke r0.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r7 = virtualinvoke $r6.<java.lang.Thread: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.org.conscrypt.Logger$Stream: java.lang.String prefix> = $r10;

        return;
    }

    public void endIndent()
    {
        com.android.org.conscrypt.Logger$Stream r0;
        int $i0, $i1;

        r0 := @this: com.android.org.conscrypt.Logger$Stream;

        $i0 = <com.android.org.conscrypt.Logger$Stream: int indent>;

        $i1 = -1 + $i0;

        <com.android.org.conscrypt.Logger$Stream: int indent> = $i1;

        return;
    }

    public void newIndent()
    {
        com.android.org.conscrypt.Logger$Stream r0;
        int $i0, $i1;

        r0 := @this: com.android.org.conscrypt.Logger$Stream;

        $i0 = <com.android.org.conscrypt.Logger$Stream: int indent>;

        $i1 = 1 + $i0;

        <com.android.org.conscrypt.Logger$Stream: int indent> = $i1;

        return;
    }

    public void print(java.lang.String)
    {
        com.android.org.conscrypt.Logger$Stream r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @this: com.android.org.conscrypt.Logger$Stream;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $i1 = <com.android.org.conscrypt.Logger$Stream: int indent>;

        if i0 >= $i1 goto label2;

        specialinvoke r0.<java.io.PrintStream: void print(java.lang.String)>("  ");

        i0 = i0 + 1;

        goto label1;

     label2:
        specialinvoke r0.<java.io.PrintStream: void print(java.lang.String)>(r1);

        return;
    }

    public void print(byte[])
    {
        com.android.org.conscrypt.Logger$Stream r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.org.conscrypt.Logger$Stream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[],int,int)>(16, " ", "", r1, 0, $i0);

        return;
    }

    public void print(byte[], int, int)
    {
        com.android.org.conscrypt.Logger$Stream r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: com.android.org.conscrypt.Logger$Stream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[],int,int)>(16, " ", "", r1, i0, i1);

        return;
    }

    public void printAsHex(int, java.lang.String, java.lang.String, byte[])
    {
        com.android.org.conscrypt.Logger$Stream r0;
        int i0, $i1;
        java.lang.String r1, r2;
        byte[] r3;

        r0 := @this: com.android.org.conscrypt.Logger$Stream;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: byte[];

        $i1 = lengthof r3;

        virtualinvoke r0.<com.android.org.conscrypt.Logger$Stream: void printAsHex(int,java.lang.String,java.lang.String,byte[],int,int)>(i0, r1, r2, r3, 0, $i1);

        return;
    }

    public void printAsHex(int, java.lang.String, java.lang.String, byte[], int, int)
    {
        com.android.org.conscrypt.Logger$Stream r0;
        int i0, i1, i2, i3, $i4, $i6, $i7;
        java.lang.String r1, r2, $r6, $r8, $r11;
        byte[] r3;
        java.lang.StringBuilder r4, $r5, $r12;
        byte $b5;

        r0 := @this: com.android.org.conscrypt.Logger$Stream;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: byte[];

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r4 = $r5;

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $i4 = i3 + i1;

        $b5 = r3[$i4];

        $r8 = staticinvoke <java.lang.Byte: java.lang.String toHexString(byte,boolean)>($b5, 0);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $i6 = i3 + 1;

        $i7 = $i6 % i0;

        if $i7 != 0 goto label2;

        $r11 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r4 = $r12;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r6 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }

    public void println(java.lang.String)
    {
        com.android.org.conscrypt.Logger$Stream r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.org.conscrypt.Logger$Stream;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.org.conscrypt.Logger$Stream: java.lang.String prefix>;

        virtualinvoke r0.<com.android.org.conscrypt.Logger$Stream: void print(java.lang.String)>($r2);

        specialinvoke r0.<java.io.PrintStream: void println(java.lang.String)>(r1);

        return;
    }
}
