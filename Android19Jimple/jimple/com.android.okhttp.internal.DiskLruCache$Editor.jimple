public final class com.android.okhttp.internal.DiskLruCache$Editor extends java.lang.Object
{
    private boolean committed;
    private final com.android.okhttp.internal.DiskLruCache$Entry entry;
    private boolean hasErrors;
    final com.android.okhttp.internal.DiskLruCache this$0;
    private final boolean[] written;

    private void <init>(com.android.okhttp.internal.DiskLruCache, com.android.okhttp.internal.DiskLruCache$Entry)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        com.android.okhttp.internal.DiskLruCache r1;
        com.android.okhttp.internal.DiskLruCache$Entry r2;
        boolean[] r3;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        r1 := @parameter0: com.android.okhttp.internal.DiskLruCache;

        r2 := @parameter1: com.android.okhttp.internal.DiskLruCache$Entry;

        r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry> = r2;

        $z0 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: boolean access$600(com.android.okhttp.internal.DiskLruCache$Entry)>(r2);

        if $z0 == 0 goto label2;

        r3 = null;

     label1:
        r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean[] written> = r3;

        return;

     label2:
        $i0 = staticinvoke <com.android.okhttp.internal.DiskLruCache: int access$1800(com.android.okhttp.internal.DiskLruCache)>(r1);

        r3 = newarray (boolean)[$i0];

        goto label1;
    }

    void <init>(com.android.okhttp.internal.DiskLruCache, com.android.okhttp.internal.DiskLruCache$Entry, com.android.okhttp.internal.DiskLruCache$1)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        com.android.okhttp.internal.DiskLruCache r1;
        com.android.okhttp.internal.DiskLruCache$Entry r2;
        com.android.okhttp.internal.DiskLruCache$1 r3;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        r1 := @parameter0: com.android.okhttp.internal.DiskLruCache;

        r2 := @parameter1: com.android.okhttp.internal.DiskLruCache$Entry;

        r3 := @parameter2: com.android.okhttp.internal.DiskLruCache$1;

        specialinvoke r0.<com.android.okhttp.internal.DiskLruCache$Editor: void <init>(com.android.okhttp.internal.DiskLruCache,com.android.okhttp.internal.DiskLruCache$Entry)>(r1, r2);

        return;
    }

    static com.android.okhttp.internal.DiskLruCache$Entry access$1400(com.android.okhttp.internal.DiskLruCache$Editor)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        com.android.okhttp.internal.DiskLruCache$Entry $r1;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Editor;

        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        return $r1;
    }

    static boolean[] access$1500(com.android.okhttp.internal.DiskLruCache$Editor)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        boolean[] $r1;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Editor;

        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean[] written>;

        return $r1;
    }

    static boolean access$2302(com.android.okhttp.internal.DiskLruCache$Editor, boolean)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        boolean z0;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Editor;

        z0 := @parameter1: boolean;

        r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean hasErrors> = z0;

        return z0;
    }

    public void abort() throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        com.android.okhttp.internal.DiskLruCache $r1;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        staticinvoke <com.android.okhttp.internal.DiskLruCache: void access$2200(com.android.okhttp.internal.DiskLruCache,com.android.okhttp.internal.DiskLruCache$Editor,boolean)>($r1, r0, 0);

        return;
    }

    public void abortUnlessCommitted()
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        boolean $z0;
        java.io.IOException $r2;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        $z0 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean committed>;

        if $z0 != 0 goto label2;

     label1:
        virtualinvoke r0.<com.android.okhttp.internal.DiskLruCache$Editor: void abort()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void commit() throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        boolean $z0;
        com.android.okhttp.internal.DiskLruCache $r1, $r2, $r4;
        com.android.okhttp.internal.DiskLruCache$Entry $r3;
        java.lang.String $r5;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        $z0 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean hasErrors>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        staticinvoke <com.android.okhttp.internal.DiskLruCache: void access$2200(com.android.okhttp.internal.DiskLruCache,com.android.okhttp.internal.DiskLruCache$Editor,boolean)>($r2, r0, 0);

        $r4 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        $r3 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $r5 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: java.lang.String access$1100(com.android.okhttp.internal.DiskLruCache$Entry)>($r3);

        virtualinvoke $r4.<com.android.okhttp.internal.DiskLruCache: boolean remove(java.lang.String)>($r5);

     label1:
        r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean committed> = 1;

        return;

     label2:
        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        staticinvoke <com.android.okhttp.internal.DiskLruCache: void access$2200(com.android.okhttp.internal.DiskLruCache,com.android.okhttp.internal.DiskLruCache$Editor,boolean)>($r1, r0, 1);

        goto label1;
    }

    public java.lang.String getString(int) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        int i0;
        java.io.InputStream r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.okhttp.internal.DiskLruCache$Editor: java.io.InputStream newInputStream(int)>(i0);

        if r1 == null goto label1;

        $r2 = staticinvoke <com.android.okhttp.internal.DiskLruCache: java.lang.String access$1700(java.io.InputStream)>(r1);

        return $r2;

     label1:
        return null;
    }

    public java.io.InputStream newInputStream(int) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0, $r6;
        int i0;
        com.android.okhttp.internal.DiskLruCache r1;
        java.lang.Throwable r2, $r11;
        java.io.FileInputStream r3, $r8;
        com.android.okhttp.internal.DiskLruCache$Entry $r5, $r7, $r9;
        boolean $z0;
        java.io.File $r10;
        java.lang.IllegalStateException $r12;
        java.io.FileNotFoundException $r13;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        i0 := @parameter0: int;

        r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        entermonitor r1;

     label01:
        $r5 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $r6 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache$Editor access$700(com.android.okhttp.internal.DiskLruCache$Entry)>($r5);

        if $r6 == r0 goto label05;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>()>();

        throw $r12;

     label02:
        $r11 := @caughtexception;

        r2 = $r11;

     label03:
        exitmonitor r1;

     label04:
        throw r2;

     label05:
        $r7 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $z0 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: boolean access$600(com.android.okhttp.internal.DiskLruCache$Entry)>($r7);

        if $z0 != 0 goto label07;

        exitmonitor r1;

     label06:
        return null;

     label07:
        $r8 = new java.io.FileInputStream;

        $r9 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $r10 = virtualinvoke $r9.<com.android.okhttp.internal.DiskLruCache$Entry: java.io.File getCleanFile(int)>(i0);

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r10);

        r3 = $r8;

     label08:
        exitmonitor r1;

     label09:
        return r3;

     label10:
        $r13 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        return null;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.io.FileNotFoundException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label08 to label09 with label02;
        catch java.lang.Throwable from label11 to label12 with label02;
    }

    public java.io.OutputStream newOutputStream(int) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0, $r10;
        int i0;
        com.android.okhttp.internal.DiskLruCache r1, $r19;
        java.lang.Throwable r2, $r21;
        java.io.File r3, $r18;
        java.io.FileOutputStream r4, $r14, $r20;
        com.android.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream r5, $r13;
        java.io.OutputStream r8;
        com.android.okhttp.internal.DiskLruCache$Entry $r9, $r11, $r12;
        boolean $z0;
        boolean[] $r15;
        java.io.FileNotFoundException $r16, $r22;
        java.lang.IllegalStateException $r17;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        i0 := @parameter0: int;

        r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        entermonitor r1;

     label01:
        $r9 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $r10 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache$Editor access$700(com.android.okhttp.internal.DiskLruCache$Entry)>($r9);

        if $r10 == r0 goto label05;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>()>();

        throw $r17;

     label02:
        $r21 := @caughtexception;

        r2 = $r21;

     label03:
        exitmonitor r1;

     label04:
        throw r2;

     label05:
        $r11 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $z0 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: boolean access$600(com.android.okhttp.internal.DiskLruCache$Entry)>($r11);

        if $z0 != 0 goto label06;

        $r15 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean[] written>;

        $r15[i0] = 1;

     label06:
        $r12 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        r3 = virtualinvoke $r12.<com.android.okhttp.internal.DiskLruCache$Entry: java.io.File getDirtyFile(int)>(i0);

     label07:
        $r14 = new java.io.FileOutputStream;

        specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        r4 = $r14;

     label08:
        $r13 = new com.android.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream;

        specialinvoke $r13.<com.android.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream: void <init>(com.android.okhttp.internal.DiskLruCache$Editor,java.io.OutputStream,com.android.okhttp.internal.DiskLruCache$1)>(r0, r4, null);

        r5 = $r13;

        exitmonitor r1;

     label09:
        return r5;

     label10:
        $r16 := @caughtexception;

     label11:
        $r19 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        $r18 = staticinvoke <com.android.okhttp.internal.DiskLruCache: java.io.File access$1900(com.android.okhttp.internal.DiskLruCache)>($r19);

        virtualinvoke $r18.<java.io.File: boolean mkdirs()>();

     label12:
        $r20 = new java.io.FileOutputStream;

        specialinvoke $r20.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        r4 = $r20;

     label13:
        goto label08;

     label14:
        $r22 := @caughtexception;

     label15:
        r8 = staticinvoke <com.android.okhttp.internal.DiskLruCache: java.io.OutputStream access$2000()>();

        exitmonitor r1;

     label16:
        return r8;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label06 to label07 with label02;
        catch java.io.FileNotFoundException from label07 to label08 with label10;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label08 to label09 with label02;
        catch java.lang.Throwable from label11 to label12 with label02;
        catch java.io.FileNotFoundException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label02;
        catch java.lang.Throwable from label15 to label16 with label02;
    }

    public void set(int, java.lang.String) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        int i0;
        java.lang.String r1;
        java.io.OutputStreamWriter r2, r3, $r5;
        java.lang.Throwable r4, $r8, $r9;
        java.io.OutputStream $r6;
        java.nio.charset.Charset $r7;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 = null;

     label1:
        $r5 = new java.io.OutputStreamWriter;

        $r6 = virtualinvoke r0.<com.android.okhttp.internal.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>(i0);

        $r7 = <com.android.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r6, $r7);

        r3 = $r5;

     label2:
        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>(r1);

     label3:
        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>(r3);

        return;

     label4:
        $r8 := @caughtexception;

        r4 = $r8;

     label5:
        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>(r2);

        throw r4;

     label6:
        $r9 := @caughtexception;

        r4 = $r9;

        r2 = r3;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
    }
}
