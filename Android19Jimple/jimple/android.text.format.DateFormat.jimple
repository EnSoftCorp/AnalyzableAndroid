public class android.text.format.DateFormat extends java.lang.Object
{
    public static final char AM_PM;
    public static final char CAPITAL_AM_PM;
    public static final char DATE;
    public static final char DAY;
    public static final char HOUR;
    public static final char HOUR_OF_DAY;
    public static final char MINUTE;
    public static final char MONTH;
    public static final char QUOTE;
    public static final char SECONDS;
    public static final char STANDALONE_MONTH;
    public static final char TIME_ZONE;
    public static final char YEAR;
    private static boolean sIs24Hour;
    private static java.util.Locale sIs24HourLocale;
    private static final java.lang.Object sLocaleLock;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.text.format.DateFormat: char YEAR> = 121;

        <android.text.format.DateFormat: char TIME_ZONE> = 122;

        <android.text.format.DateFormat: char STANDALONE_MONTH> = 76;

        <android.text.format.DateFormat: char SECONDS> = 115;

        <android.text.format.DateFormat: char QUOTE> = 39;

        <android.text.format.DateFormat: char MONTH> = 77;

        <android.text.format.DateFormat: char MINUTE> = 109;

        <android.text.format.DateFormat: char HOUR_OF_DAY> = 107;

        <android.text.format.DateFormat: char HOUR> = 104;

        <android.text.format.DateFormat: char DAY> = 69;

        <android.text.format.DateFormat: char DATE> = 100;

        <android.text.format.DateFormat: char CAPITAL_AM_PM> = 65;

        <android.text.format.DateFormat: char AM_PM> = 97;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.text.format.DateFormat: java.lang.Object sLocaleLock> = $r0;

        return;
    }

    public void <init>()
    {
        android.text.format.DateFormat r0;

        r0 := @this: android.text.format.DateFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int appendQuotedText(android.text.SpannableStringBuilder, int, int)
    {
        android.text.SpannableStringBuilder r0;
        int i0, i1, i2, i3, $i4, $i5, $i7, $i8, $i9, $i11, $i12, $i13;
        char $c6, $c10, $c14;

        r0 := @parameter0: android.text.SpannableStringBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = i0 + 1;

        if $i4 >= i1 goto label2;

        $i12 = i0 + 1;

        $c14 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i12);

        if $c14 != 39 goto label2;

        $i13 = i0 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, $i13);

        i2 = 1;

     label1:
        return i2;

     label2:
        i2 = 0;

        $i5 = i0 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, $i5);

        i3 = i1 - 1;

     label3:
        if i0 >= i3 goto label1;

        $c6 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>(i0);

        if $c6 != 39 goto label5;

        $i7 = i0 + 1;

        if $i7 >= i3 goto label4;

        $i9 = i0 + 1;

        $c10 = virtualinvoke r0.<android.text.SpannableStringBuilder: char charAt(int)>($i9);

        if $c10 != 39 goto label4;

        $i11 = i0 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, $i11);

        i3 = i3 + -1;

        i2 = i2 + 1;

        i0 = i0 + 1;

        goto label3;

     label4:
        $i8 = i0 + 1;

        virtualinvoke r0.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>(i0, $i8);

        return i2;

     label5:
        i0 = i0 + 1;

        i2 = i2 + 1;

        goto label3;
    }

    public static java.lang.CharSequence format(java.lang.CharSequence, long)
    {
        java.lang.CharSequence r0, $r2;
        long l0;
        java.util.Date $r1;

        r0 := @parameter0: java.lang.CharSequence;

        l0 := @parameter1: long;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>(l0);

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>(r0, $r1);

        return $r2;
    }

    public static java.lang.CharSequence format(java.lang.CharSequence, java.util.Calendar)
    {
        java.lang.CharSequence r0;
        java.util.Calendar r1;
        android.text.SpannableStringBuilder r2, $r5;
        libcore.icu.LocaleData r3;
        int i0, i1, i2, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17;
        char c3, $c15;
        java.lang.String r4, $r8;
        java.util.Locale $r6;
        boolean $z0;
        android.text.SpannedString $r7;
        java.lang.String[] $r10;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Calendar;

        $r5 = new android.text.SpannableStringBuilder;

        specialinvoke $r5.<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>(r0);

        r2 = $r5;

        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r3 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r6);

        i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label18;

        i2 = 1;

        c3 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>(i1);

        if c3 != 39 goto label03;

        i2 = staticinvoke <android.text.format.DateFormat: int appendQuotedText(android.text.SpannableStringBuilder,int,int)>(r2, i1, i0);

        i0 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();

     label02:
        i1 = i1 + i2;

        goto label01;

     label03:
        $i5 = i1 + i2;

        if $i5 >= i0 goto label04;

        $i17 = i1 + i2;

        $c15 = virtualinvoke r2.<android.text.SpannableStringBuilder: char charAt(int)>($i17);

        if $c15 != c3 goto label04;

        i2 = i2 + 1;

        goto label03;

     label04:
        lookupswitch(c3)
        {
            case 65: goto label07;
            case 69: goto label09;
            case 72: goto label12;
            case 75: goto label10;
            case 76: goto label13;
            case 77: goto label13;
            case 97: goto label07;
            case 99: goto label09;
            case 100: goto label08;
            case 104: goto label10;
            case 107: goto label12;
            case 109: goto label14;
            case 115: goto label15;
            case 121: goto label16;
            case 122: goto label17;
            default: goto label05;
        };

     label05:
        r4 = null;

     label06:
        if r4 == null goto label02;

        $i6 = i1 + i2;

        virtualinvoke r2.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>(i1, $i6, r4);

        i2 = virtualinvoke r4.<java.lang.String: int length()>();

        i0 = virtualinvoke r2.<android.text.SpannableStringBuilder: int length()>();

        goto label02;

     label07:
        $r10 = r3.<libcore.icu.LocaleData: java.lang.String[] amPm>;

        $i14 = virtualinvoke r1.<java.util.Calendar: int get(int)>(9);

        $i16 = 0 + $i14;

        r4 = $r10[$i16];

        goto label06;

     label08:
        $i10 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i10, i2);

        goto label06;

     label09:
        $i12 = virtualinvoke r1.<java.util.Calendar: int get(int)>(7);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String getDayOfWeekString(libcore.icu.LocaleData,int,int,int)>(r3, $i12, i2, c3);

        goto label06;

     label10:
        i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(10);

        if c3 != 104 goto label11;

        if i4 != 0 goto label11;

        i4 = 12;

     label11:
        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i4, i2);

        goto label06;

     label12:
        $i13 = virtualinvoke r1.<java.util.Calendar: int get(int)>(11);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i13, i2);

        goto label06;

     label13:
        $i11 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String getMonthString(libcore.icu.LocaleData,int,int,int)>(r3, $i11, i2, c3);

        goto label06;

     label14:
        $i9 = virtualinvoke r1.<java.util.Calendar: int get(int)>(12);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i9, i2);

        goto label06;

     label15:
        $i8 = virtualinvoke r1.<java.util.Calendar: int get(int)>(13);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i8, i2);

        goto label06;

     label16:
        $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String getYearString(int,int)>($i7, i2);

        goto label06;

     label17:
        r4 = staticinvoke <android.text.format.DateFormat: java.lang.String getTimeZoneString(java.util.Calendar,int)>(r1, i2);

        goto label06;

     label18:
        $z0 = r0 instanceof android.text.Spanned;

        if $z0 == 0 goto label19;

        $r7 = new android.text.SpannedString;

        specialinvoke $r7.<android.text.SpannedString: void <init>(java.lang.CharSequence)>(r2);

        return $r7;

     label19:
        $r8 = virtualinvoke r2.<android.text.SpannableStringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.CharSequence format(java.lang.CharSequence, java.util.Date)
    {
        java.lang.CharSequence r0, $r4;
        java.util.Date r1;
        java.util.GregorianCalendar r2, $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.util.Date;

        $r3 = new java.util.GregorianCalendar;

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>(r1);

        $r4 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>(r0, r2);

        return $r4;
    }

    private static java.lang.String formatZoneOffset(int, int)
    {
        int i0, i1, i2, i3, i4, $i5;
        java.lang.StringBuilder r0, $r1;
        java.lang.String $r3, $r5, $r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0 / 1000;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0 = $r1;

        if i2 >= 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "-");

        i2 = neg i2;

     label1:
        i3 = i2 / 3600;

        $i5 = i2 % 3600;

        i4 = $i5 / 60;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i3, 2);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>(i4, 2);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "+");

        goto label1;
    }

    public static java.lang.String getBestDateTimePattern(java.util.Locale, java.lang.String)
    {
        java.util.Locale r0;
        java.lang.String r1, $r2, $r3;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String toString()>();

        $r3 = staticinvoke <libcore.icu.ICU: java.lang.String getBestDateTimePattern(java.lang.String,java.lang.String)>(r1, $r2);

        return $r3;
    }

    public static java.text.DateFormat getDateFormat(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver $r1;
        java.lang.String $r2;
        java.text.DateFormat $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "date_format");

        $r3 = staticinvoke <android.text.format.DateFormat: java.text.DateFormat getDateFormatForSetting(android.content.Context,java.lang.String)>(r0, $r2);

        return $r3;
    }

    public static java.text.DateFormat getDateFormatForSetting(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r3;
        java.text.SimpleDateFormat $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.text.SimpleDateFormat;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatStringForSetting(android.content.Context,java.lang.String)>(r0, r1);

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r3);

        return $r2;
    }

    public static char[] getDateFormatOrder(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)>(r0);

        $r2 = staticinvoke <libcore.icu.ICU: char[] getDateFormatOrder(java.lang.String)>($r1);

        return $r2;
    }

    private static java.lang.String getDateFormatString(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver $r1;
        java.lang.String $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, "date_format");

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String getDateFormatStringForSetting(android.content.Context,java.lang.String)>(r0, $r2);

        return $r3;
    }

    private static java.lang.String getDateFormatStringForSetting(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, $r8;
        int i0, i1, i2;
        android.content.res.Resources $r4;
        android.content.res.Configuration $r5;
        java.util.Locale $r6;
        libcore.icu.LocaleData $r7;
        java.lang.Object[] $r9, $r10, $r11, $r12, $r13, $r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label7;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(77);

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(100);

        i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(121);

        if i0 < 0 goto label7;

        if i1 < 0 goto label7;

        if i2 < 0 goto label7;

        r2 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(17039419);

        if i2 >= i0 goto label3;

        if i2 >= i1 goto label3;

        if i0 >= i1 goto label2;

        $r14 = newarray (java.lang.Object)[3];

        $r14[0] = "yyyy";

        $r14[1] = "MM";

        $r14[2] = "dd";

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r14);

     label1:
        return r3;

     label2:
        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = "yyyy";

        $r13[1] = "dd";

        $r13[2] = "MM";

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r13);

        goto label1;

     label3:
        if i0 >= i1 goto label5;

        if i1 >= i2 goto label4;

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = "MM";

        $r12[1] = "dd";

        $r12[2] = "yyyy";

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r12);

        goto label1;

     label4:
        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = "MM";

        $r11[1] = "yyyy";

        $r11[2] = "dd";

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r11);

        goto label1;

     label5:
        if i0 >= i2 goto label6;

        $r10 = newarray (java.lang.Object)[3];

        $r10[0] = "dd";

        $r10[1] = "MM";

        $r10[2] = "yyyy";

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r10);

        goto label1;

     label6:
        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = "dd";

        $r9[1] = "yyyy";

        $r9[2] = "MM";

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r9);

        goto label1;

     label7:
        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r6 = $r5.<android.content.res.Configuration: java.util.Locale locale>;

        $r7 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r6);

        $r8 = $r7.<libcore.icu.LocaleData: java.lang.String shortDateFormat4>;

        return $r8;
    }

    private static java.lang.String getDayOfWeekString(libcore.icu.LocaleData, int, int, int)
    {
        libcore.icu.LocaleData r0;
        int i0, i1, i2;
        boolean z0;
        java.lang.String[] $r1, $r3, $r5, $r7, $r9, $r11;
        java.lang.String $r2, $r4, $r6, $r8, $r10, $r12;

        r0 := @parameter0: libcore.icu.LocaleData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 != 99 goto label2;

        z0 = 1;

     label1:
        if i1 != 5 goto label4;

        if z0 == 0 goto label3;

        $r11 = r0.<libcore.icu.LocaleData: java.lang.String[] tinyStandAloneWeekdayNames>;

        $r12 = $r11[i0];

        return $r12;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r9 = r0.<libcore.icu.LocaleData: java.lang.String[] tinyWeekdayNames>;

        $r10 = $r9[i0];

        return $r10;

     label4:
        if i1 != 4 goto label6;

        if z0 == 0 goto label5;

        $r7 = r0.<libcore.icu.LocaleData: java.lang.String[] longStandAloneWeekdayNames>;

        $r8 = $r7[i0];

        return $r8;

     label5:
        $r5 = r0.<libcore.icu.LocaleData: java.lang.String[] longWeekdayNames>;

        $r6 = $r5[i0];

        return $r6;

     label6:
        if z0 == 0 goto label7;

        $r3 = r0.<libcore.icu.LocaleData: java.lang.String[] shortStandAloneWeekdayNames>;

        $r4 = $r3[i0];

        return $r4;

     label7:
        $r1 = r0.<libcore.icu.LocaleData: java.lang.String[] shortWeekdayNames>;

        $r2 = $r1[i0];

        return $r2;
    }

    public static java.text.DateFormat getLongDateFormat(android.content.Context)
    {
        android.content.Context r0;
        java.text.DateFormat $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(1);

        return $r1;
    }

    public static java.text.DateFormat getMediumDateFormat(android.content.Context)
    {
        android.content.Context r0;
        java.text.DateFormat $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(2);

        return $r1;
    }

    private static java.lang.String getMonthString(libcore.icu.LocaleData, int, int, int)
    {
        libcore.icu.LocaleData r0;
        int i0, i1, i2, $i3;
        boolean z0;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r12, $r13;
        java.lang.String[] $r2, $r4, $r6, $r8, $r10, $r11;

        r0 := @parameter0: libcore.icu.LocaleData;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i2 != 76 goto label2;

        z0 = 1;

     label1:
        if i1 != 5 goto label4;

        if z0 == 0 goto label3;

        $r11 = r0.<libcore.icu.LocaleData: java.lang.String[] tinyStandAloneMonthNames>;

        $r13 = $r11[i0];

        return $r13;

     label2:
        z0 = 0;

        goto label1;

     label3:
        $r10 = r0.<libcore.icu.LocaleData: java.lang.String[] tinyMonthNames>;

        $r12 = $r10[i0];

        return $r12;

     label4:
        if i1 != 4 goto label6;

        if z0 == 0 goto label5;

        $r8 = r0.<libcore.icu.LocaleData: java.lang.String[] longStandAloneMonthNames>;

        $r9 = $r8[i0];

        return $r9;

     label5:
        $r6 = r0.<libcore.icu.LocaleData: java.lang.String[] longMonthNames>;

        $r7 = $r6[i0];

        return $r7;

     label6:
        if i1 != 3 goto label8;

        if z0 == 0 goto label7;

        $r4 = r0.<libcore.icu.LocaleData: java.lang.String[] shortStandAloneMonthNames>;

        $r5 = $r4[i0];

        return $r5;

     label7:
        $r2 = r0.<libcore.icu.LocaleData: java.lang.String[] shortMonthNames>;

        $r3 = $r2[i0];

        return $r3;

     label8:
        $i3 = i0 + 1;

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i3, i1);

        return $r1;
    }

    public static java.text.DateFormat getTimeFormat(android.content.Context)
    {
        android.content.Context r0;
        java.text.SimpleDateFormat $r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = new java.text.SimpleDateFormat;

        $r2 = staticinvoke <android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context)>(r0);

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r2);

        return $r1;
    }

    public static java.lang.String getTimeFormatString(android.content.Context)
    {
        android.content.Context r0;
        libcore.icu.LocaleData r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        java.util.Locale $r4;
        boolean $z0;
        java.lang.String $r5, $r6;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r4 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        r1 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>($r4);

        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>(r0);

        if $z0 == 0 goto label1;

        $r6 = r1.<libcore.icu.LocaleData: java.lang.String timeFormat24>;

        return $r6;

     label1:
        $r5 = r1.<libcore.icu.LocaleData: java.lang.String timeFormat12>;

        return $r5;
    }

    private static java.lang.String getTimeZoneString(java.util.Calendar, int)
    {
        java.util.Calendar r0;
        int i0, $i1, $i2, $i3, $i4;
        java.util.TimeZone r1;
        boolean z0;
        java.lang.String $r2, $r3;

        r0 := @parameter0: java.util.Calendar;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        if i0 >= 2 goto label1;

        $i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16);

        $i3 = virtualinvoke r0.<java.util.Calendar: int get(int)>(15);

        $i4 = $i2 + $i3;

        $r3 = staticinvoke <android.text.format.DateFormat: java.lang.String formatZoneOffset(int,int)>($i4, i0);

        return $r3;

     label1:
        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(16);

        if $i1 == 0 goto label3;

        z0 = 1;

     label2:
        $r2 = virtualinvoke r1.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>(z0, 0);

        return $r2;

     label3:
        z0 = 0;

        goto label2;
    }

    private static java.lang.String getYearString(int, int)
    {
        int i0, i1, $i2;
        java.util.Locale r0;
        java.lang.Object[] r1;
        java.lang.Integer $r2;
        java.lang.String $r3, $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 > 2 goto label1;

        $i2 = i0 % 100;

        $r4 = staticinvoke <android.text.format.DateFormat: java.lang.String zeroPad(int,int)>($i2, 2);

        return $r4;

     label1:
        r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r0, "%d", r1);

        return $r3;
    }

    public static boolean hasDesignator(java.lang.CharSequence, char)
    {
        java.lang.CharSequence r0;
        char c0, c4;
        int i1, i2, i3;

        r0 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        if r0 != null goto label2;

     label1:
        return 0;

     label2:
        i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i2 = 0;

     label3:
        if i2 >= i1 goto label1;

        i3 = 1;

        c4 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i2);

        if c4 != 39 goto label5;

        i3 = staticinvoke <android.text.format.DateFormat: int skipQuotedText(java.lang.CharSequence,int,int)>(r0, i2, i1);

     label4:
        i2 = i2 + i3;

        goto label3;

     label5:
        if c4 != c0 goto label4;

        return 1;
    }

    public static boolean hasSeconds(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        $z0 = staticinvoke <android.text.format.DateFormat: boolean hasDesignator(java.lang.CharSequence,char)>(r0, 115);

        return $z0;
    }

    public static boolean is24HourFormat(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, r6, $r13;
        java.util.Locale r2, $r12, $r15;
        java.lang.Object r3, r7;
        java.lang.Throwable r4, r8, $r16, $r17;
        java.text.DateFormat r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.content.ContentResolver $r9;
        android.content.res.Resources $r10;
        android.content.res.Configuration $r11;
        java.text.SimpleDateFormat $r14;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r9 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r9, "time_12_24");

        if r1 != null goto label16;

        $r10 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r10.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        r2 = $r11.<android.content.res.Configuration: java.util.Locale locale>;

        r3 = <android.text.format.DateFormat: java.lang.Object sLocaleLock>;

        entermonitor r3;

     label01:
        $r12 = <android.text.format.DateFormat: java.util.Locale sIs24HourLocale>;

        if $r12 == null goto label03;

        $r15 = <android.text.format.DateFormat: java.util.Locale sIs24HourLocale>;

        $z5 = virtualinvoke $r15.<java.util.Locale: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label03;

        z0 = <android.text.format.DateFormat: boolean sIs24Hour>;

        exitmonitor r3;

     label02:
        return z0;

     label03:
        exitmonitor r3;

     label04:
        r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>(1, r2);

        $z2 = r5 instanceof java.text.SimpleDateFormat;

        if $z2 == 0 goto label12;

        $r14 = (java.text.SimpleDateFormat) r5;

        $r13 = virtualinvoke $r14.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        $i0 = virtualinvoke $r13.<java.lang.String: int indexOf(int)>(72);

        if $i0 < 0 goto label11;

        r6 = "24";

     label05:
        r7 = <android.text.format.DateFormat: java.lang.Object sLocaleLock>;

        entermonitor r7;

     label06:
        <android.text.format.DateFormat: java.util.Locale sIs24HourLocale> = r2;

        $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("24");

        <android.text.format.DateFormat: boolean sIs24Hour> = $z3;

        exitmonitor r7;

     label07:
        $z4 = <android.text.format.DateFormat: boolean sIs24Hour>;

        return $z4;

     label08:
        $r16 := @caughtexception;

        r4 = $r16;

     label09:
        exitmonitor r3;

     label10:
        throw r4;

     label11:
        r6 = "12";

        goto label05;

     label12:
        r6 = "12";

        goto label05;

     label13:
        $r17 := @caughtexception;

        r8 = $r17;

     label14:
        exitmonitor r7;

     label15:
        throw r8;

     label16:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("24");

        return $z1;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private static int skipQuotedText(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i9;
        char $c5, $c8, $c10;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = i0 + 1;

        if $i4 >= i1 goto label2;

        $i9 = i0 + 1;

        $c10 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i9);

        if $c10 != 39 goto label2;

        i2 = 2;

     label1:
        return i2;

     label2:
        i2 = 1;

        i3 = i0 + 1;

     label3:
        if i3 >= i1 goto label1;

        $c5 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i3);

        if $c5 != 39 goto label4;

        i2 = i2 + 1;

        $i6 = i3 + 1;

        if $i6 >= i1 goto label1;

        $i7 = i3 + 1;

        $c8 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i7);

        if $c8 != 39 goto label1;

        i3 = i3 + 1;

        goto label3;

     label4:
        i3 = i3 + 1;

        i2 = i2 + 1;

        goto label3;
    }

    private static java.lang.String zeroPad(int, int)
    {
        int i0, i1;
        java.util.Locale r0;
        java.lang.String r1, $r8;
        java.lang.Object[] r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.Integer $r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%0");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r2[0] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r0, r1, r2);

        return $r8;
    }
}
