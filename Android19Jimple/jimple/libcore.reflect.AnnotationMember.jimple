public final class libcore.reflect.AnnotationMember extends java.lang.Object implements java.io.Serializable
{
    protected static final char ARRAY;
    protected static final char ERROR;
    protected static final java.lang.Object NO_VALUE;
    protected static final char OTHER;
    protected transient java.lang.reflect.Method definingMethod;
    protected transient java.lang.Class elementType;
    protected final java.lang.String name;
    protected final char tag;
    protected final java.lang.Object value;

    static void <clinit>()
    {
        libcore.reflect.AnnotationMember$DefaultValues $r0;

        <libcore.reflect.AnnotationMember: char OTHER> = 42;

        <libcore.reflect.AnnotationMember: char ERROR> = 33;

        <libcore.reflect.AnnotationMember: char ARRAY> = 91;

        $r0 = <libcore.reflect.AnnotationMember$DefaultValues: libcore.reflect.AnnotationMember$DefaultValues NO_VALUE>;

        <libcore.reflect.AnnotationMember: java.lang.Object NO_VALUE> = $r0;

        return;
    }

    public void <init>(java.lang.String, java.lang.Object)
    {
        libcore.reflect.AnnotationMember r0;
        java.lang.String r1;
        java.lang.Object r2, $r3, $r4;
        boolean $z0, $z1;
        java.lang.Class $r5;

        r0 := @this: libcore.reflect.AnnotationMember;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<libcore.reflect.AnnotationMember: java.lang.String name> = r1;

        if r2 != null goto label1;

        r2 = <libcore.reflect.AnnotationMember: java.lang.Object NO_VALUE>;

     label1:
        r0.<libcore.reflect.AnnotationMember: java.lang.Object value> = r2;

        $r3 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $z0 = $r3 instanceof java.lang.Throwable;

        if $z0 == 0 goto label2;

        r0.<libcore.reflect.AnnotationMember: char tag> = 33;

        return;

     label2:
        $r4 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r5.<java.lang.Class: boolean isArray()>();

        if $z1 == 0 goto label3;

        r0.<libcore.reflect.AnnotationMember: char tag> = 91;

        return;

     label3:
        r0.<libcore.reflect.AnnotationMember: char tag> = 42;

        return;
    }

    public void <init>(java.lang.String, java.lang.Object, java.lang.Class, java.lang.reflect.Method)
    {
        libcore.reflect.AnnotationMember r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Class r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.reflect.Method r4;

        r0 := @this: libcore.reflect.AnnotationMember;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.reflect.Method;

        specialinvoke r0.<libcore.reflect.AnnotationMember: void <init>(java.lang.String,java.lang.Object)>(r1, r2);

        r0.<libcore.reflect.AnnotationMember: java.lang.reflect.Method definingMethod> = r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        if r3 != $r5 goto label1;

        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = class "java/lang/Integer";

        return;

     label1:
        $r6 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r3 != $r6 goto label2;

        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = class "java/lang/Boolean";

        return;

     label2:
        $r7 = <java.lang.Character: java.lang.Class TYPE>;

        if r3 != $r7 goto label3;

        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = class "java/lang/Character";

        return;

     label3:
        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        if r3 != $r8 goto label4;

        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = class "java/lang/Float";

        return;

     label4:
        $r9 = <java.lang.Double: java.lang.Class TYPE>;

        if r3 != $r9 goto label5;

        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = class "java/lang/Double";

        return;

     label5:
        $r10 = <java.lang.Long: java.lang.Class TYPE>;

        if r3 != $r10 goto label6;

        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = class "java/lang/Long";

        return;

     label6:
        $r11 = <java.lang.Short: java.lang.Class TYPE>;

        if r3 != $r11 goto label7;

        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = class "java/lang/Short";

        return;

     label7:
        $r12 = <java.lang.Byte: java.lang.Class TYPE>;

        if r3 != $r12 goto label8;

        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = class "java/lang/Byte";

        return;

     label8:
        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = r3;

        return;
    }

    public java.lang.Object copyValue() throws java.lang.Throwable
    {
        libcore.reflect.AnnotationMember r0;
        java.lang.Class r1;
        char $c0;
        java.lang.Object $r2, $r3, $r4, $r5, $r8, $r9, $r12, $r14, $r15, $r18, $r19, $r22, $r23, $r26, $r27, $r30, $r31, $r34, $r35, $r38, $r39;
        int $i1;
        java.lang.Object[] $r6, $r7;
        double[] $r10, $r11;
        float[] $r13, $r16;
        boolean[] $r17, $r20;
        char[] $r21, $r24;
        long[] $r25, $r28;
        short[] $r29, $r32;
        byte[] $r33, $r36;
        int[] $r37, $r40;

        r0 := @this: libcore.reflect.AnnotationMember;

        $c0 = r0.<libcore.reflect.AnnotationMember: char tag>;

        if $c0 != 91 goto label01;

        $r3 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $i1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r3);

        if $i1 != 0 goto label02;

     label01:
        $r2 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        return $r2;

     label02:
        $r4 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        r1 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        if r1 != class "[I" goto label03;

        $r39 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r40 = (int[]) $r39;

        $r37 = (int[]) $r40;

        $r38 = virtualinvoke $r37.<java.lang.Object: java.lang.Object clone()>();

        return $r38;

     label03:
        if r1 != class "[B" goto label04;

        $r35 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r36 = (byte[]) $r35;

        $r33 = (byte[]) $r36;

        $r34 = virtualinvoke $r33.<java.lang.Object: java.lang.Object clone()>();

        return $r34;

     label04:
        if r1 != class "[S" goto label05;

        $r31 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r32 = (short[]) $r31;

        $r29 = (short[]) $r32;

        $r30 = virtualinvoke $r29.<java.lang.Object: java.lang.Object clone()>();

        return $r30;

     label05:
        if r1 != class "[J" goto label06;

        $r26 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r25 = (long[]) $r26;

        $r28 = (long[]) $r25;

        $r27 = virtualinvoke $r28.<java.lang.Object: java.lang.Object clone()>();

        return $r27;

     label06:
        if r1 != class "[C" goto label07;

        $r22 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r21 = (char[]) $r22;

        $r24 = (char[]) $r21;

        $r23 = virtualinvoke $r24.<java.lang.Object: java.lang.Object clone()>();

        return $r23;

     label07:
        if r1 != class "[Z" goto label08;

        $r18 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r17 = (boolean[]) $r18;

        $r20 = (boolean[]) $r17;

        $r19 = virtualinvoke $r20.<java.lang.Object: java.lang.Object clone()>();

        return $r19;

     label08:
        if r1 != class "[F" goto label09;

        $r14 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r13 = (float[]) $r14;

        $r16 = (float[]) $r13;

        $r15 = virtualinvoke $r16.<java.lang.Object: java.lang.Object clone()>();

        return $r15;

     label09:
        if r1 != class "[D" goto label10;

        $r9 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r10 = (double[]) $r9;

        $r11 = (double[]) $r10;

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Object clone()>();

        return $r12;

     label10:
        $r5 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r6 = (java.lang.Object[]) $r5;

        $r7 = (java.lang.Object[]) $r6;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        return $r8;
    }

    public boolean equalArrayValue(java.lang.Object)
    {
        libcore.reflect.AnnotationMember r0;
        java.lang.Object r1, $r4, $r5, $r6, $r12, $r17, $r22, $r25, $r33, $r35, $r44, $r45;
        java.lang.Class r2, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        double[] $r7, $r8, $r9, $r10;
        float[] $r11, $r13, $r14, $r15;
        boolean[] $r16, $r18, $r19, $r20;
        char[] $r21, $r23, $r24, $r27;
        long[] $r26, $r28, $r29, $r30;
        short[] $r31, $r32, $r34, $r37;
        byte[] $r36, $r38, $r39, $r40;
        int[] $r41, $r42, $r43, $r46;
        java.lang.Object[] $r47, $r48, $r49, $r50;

        r0 := @this: libcore.reflect.AnnotationMember;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $z1 = $r4 instanceof java.lang.Object[];

        if $z1 == 0 goto label2;

        $z9 = r1 instanceof java.lang.Object[];

        if $z9 == 0 goto label2;

        $r45 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r50 = (java.lang.Object[]) $r45;

        $r47 = (java.lang.Object[]) $r50;

        $r49 = (java.lang.Object[]) r1;

        $r48 = (java.lang.Object[]) $r49;

        z0 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r47, $r48);

     label1:
        return z0;

     label2:
        $r5 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        r2 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        z0 = 0;

        if r2 != r3 goto label1;

        if r2 != class "[I" goto label3;

        $r44 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r43 = (int[]) $r44;

        $r46 = (int[]) $r43;

        $r42 = (int[]) r1;

        $r41 = (int[]) $r42;

        $z10 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r46, $r41);

        return $z10;

     label3:
        if r2 != class "[B" goto label4;

        $r35 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r36 = (byte[]) $r35;

        $r38 = (byte[]) $r36;

        $r40 = (byte[]) r1;

        $r39 = (byte[]) $r40;

        $z8 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r38, $r39);

        return $z8;

     label4:
        if r2 != class "[S" goto label5;

        $r33 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r34 = (short[]) $r33;

        $r37 = (short[]) $r34;

        $r31 = (short[]) r1;

        $r32 = (short[]) $r31;

        $z7 = staticinvoke <java.util.Arrays: boolean equals(short[],short[])>($r37, $r32);

        return $z7;

     label5:
        if r2 != class "[J" goto label6;

        $r25 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r26 = (long[]) $r25;

        $r28 = (long[]) $r26;

        $r29 = (long[]) r1;

        $r30 = (long[]) $r29;

        $z6 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>($r28, $r30);

        return $z6;

     label6:
        if r2 != class "[C" goto label7;

        $r22 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r21 = (char[]) $r22;

        $r27 = (char[]) $r21;

        $r24 = (char[]) r1;

        $r23 = (char[]) $r24;

        $z5 = staticinvoke <java.util.Arrays: boolean equals(char[],char[])>($r27, $r23);

        return $z5;

     label7:
        if r2 != class "[Z" goto label8;

        $r17 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r16 = (boolean[]) $r17;

        $r20 = (boolean[]) $r16;

        $r19 = (boolean[]) r1;

        $r18 = (boolean[]) $r19;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(boolean[],boolean[])>($r20, $r18);

        return $z4;

     label8:
        if r2 != class "[F" goto label9;

        $r12 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r11 = (float[]) $r12;

        $r15 = (float[]) $r11;

        $r14 = (float[]) r1;

        $r13 = (float[]) $r14;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>($r15, $r13);

        return $z3;

     label9:
        z0 = 0;

        if r2 != class "[D" goto label1;

        $r6 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r7 = (double[]) $r6;

        $r10 = (double[]) $r7;

        $r8 = (double[]) r1;

        $r9 = (double[]) $r8;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>($r10, $r9);

        return $z2;
    }

    public boolean equals(java.lang.Object)
    {
        libcore.reflect.AnnotationMember r0, r2;
        java.lang.Object r1, $r5, $r6, $r7;
        boolean z0, z1, z2, $z3, $z4;
        char c0, c1, c2, $c3;
        java.lang.String $r3, $r4;

        r0 := @this: libcore.reflect.AnnotationMember;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

        z1 = 1;

     label1:
        return z1;

     label2:
        z0 = r1 instanceof libcore.reflect.AnnotationMember;

        z1 = 0;

        if z0 == 0 goto label1;

        r2 = (libcore.reflect.AnnotationMember) r1;

        $r4 = r0.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $r3 = r2.<libcore.reflect.AnnotationMember: java.lang.String name>;

        z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        z1 = 0;

        if z2 == 0 goto label1;

        c0 = r0.<libcore.reflect.AnnotationMember: char tag>;

        c1 = r2.<libcore.reflect.AnnotationMember: char tag>;

        z1 = 0;

        if c0 != c1 goto label1;

        $c3 = r0.<libcore.reflect.AnnotationMember: char tag>;

        if $c3 != 91 goto label3;

        $r7 = r2.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $z4 = virtualinvoke r0.<libcore.reflect.AnnotationMember: boolean equalArrayValue(java.lang.Object)>($r7);

        return $z4;

     label3:
        c2 = r0.<libcore.reflect.AnnotationMember: char tag>;

        z1 = 0;

        if c2 == 33 goto label1;

        $r6 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r5 = r2.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $z3 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z3;
    }

    public int hashCode()
    {
        libcore.reflect.AnnotationMember r0;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.Class r1;
        java.lang.String $r2;
        char $c2;
        java.lang.Object $r3, $r4, $r5, $r8, $r12, $r14, $r18, $r22, $r23, $r25, $r31;
        java.lang.Object[] $r6, $r7;
        double[] $r9, $r10;
        float[] $r11, $r13;
        boolean[] $r15, $r16;
        char[] $r17, $r19;
        long[] $r20, $r21;
        short[] $r24, $r26;
        byte[] $r27, $r28;
        int[] $r29, $r30;

        r0 := @this: libcore.reflect.AnnotationMember;

        $r2 = r0.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        i0 = 127 * $i1;

        $c2 = r0.<libcore.reflect.AnnotationMember: char tag>;

        if $c2 != 91 goto label9;

        $r4 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        r1 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        if r1 != class "[I" goto label1;

        $r31 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r30 = (int[]) $r31;

        $r29 = (int[]) $r30;

        $i21 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r29);

        $i22 = i0 ^ $i21;

        return $i22;

     label1:
        if r1 != class "[B" goto label2;

        $r25 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r28 = (byte[]) $r25;

        $r27 = (byte[]) $r28;

        $i20 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r27);

        $i19 = i0 ^ $i20;

        return $i19;

     label2:
        if r1 != class "[S" goto label3;

        $r23 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r24 = (short[]) $r23;

        $r26 = (short[]) $r24;

        $i18 = staticinvoke <java.util.Arrays: int hashCode(short[])>($r26);

        $i17 = i0 ^ $i18;

        return $i17;

     label3:
        if r1 != class "[J" goto label4;

        $r22 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r20 = (long[]) $r22;

        $r21 = (long[]) $r20;

        $i15 = staticinvoke <java.util.Arrays: int hashCode(long[])>($r21);

        $i16 = i0 ^ $i15;

        return $i16;

     label4:
        if r1 != class "[C" goto label5;

        $r18 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r19 = (char[]) $r18;

        $r17 = (char[]) $r19;

        $i13 = staticinvoke <java.util.Arrays: int hashCode(char[])>($r17);

        $i14 = i0 ^ $i13;

        return $i14;

     label5:
        if r1 != class "[Z" goto label6;

        $r14 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r16 = (boolean[]) $r14;

        $r15 = (boolean[]) $r16;

        $i12 = staticinvoke <java.util.Arrays: int hashCode(boolean[])>($r15);

        $i11 = i0 ^ $i12;

        return $i11;

     label6:
        if r1 != class "[F" goto label7;

        $r12 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r11 = (float[]) $r12;

        $r13 = (float[]) $r11;

        $i9 = staticinvoke <java.util.Arrays: int hashCode(float[])>($r13);

        $i10 = i0 ^ $i9;

        return $i10;

     label7:
        if r1 != class "[D" goto label8;

        $r8 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r10 = (double[]) $r8;

        $r9 = (double[]) $r10;

        $i8 = staticinvoke <java.util.Arrays: int hashCode(double[])>($r9);

        $i7 = i0 ^ $i8;

        return $i7;

     label8:
        $r5 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r6 = (java.lang.Object[]) $r5;

        $r7 = (java.lang.Object[]) $r6;

        $i5 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r7);

        $i6 = i0 ^ $i5;

        return $i6;

     label9:
        $r3 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $i3 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        $i4 = i0 ^ $i3;

        return $i4;
    }

    public void rethrowError() throws java.lang.Throwable
    {
        libcore.reflect.AnnotationMember r0;
        java.lang.Throwable r1, r6, $r28;
        java.lang.StackTraceElement[] r2;
        int i0, $i2, $i3;
        java.io.ByteArrayOutputStream r3, $r13;
        java.io.ObjectOutputStream r4, $r15;
        java.io.ObjectInputStream r5, $r14;
        java.lang.EnumConstantNotPresentException r7, $r26;
        java.lang.TypeNotPresentException r8, $r29;
        char $c1;
        java.lang.Object $r9, $r10, $r11, $r12, $r19, $r21, $r22, $r25;
        boolean $z0, $z1, $z2;
        byte[] $r16;
        java.io.ByteArrayInputStream $r17;
        java.lang.ArrayStoreException $r18, $r20;
        java.lang.String $r23, $r24, $r30;
        java.lang.Class $r27;

        r0 := @this: libcore.reflect.AnnotationMember;

        $c1 = r0.<libcore.reflect.AnnotationMember: char tag>;

        if $c1 != 33 goto label6;

        $r9 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $z0 = $r9 instanceof java.lang.TypeNotPresentException;

        if $z0 == 0 goto label1;

        $r25 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        r8 = (java.lang.TypeNotPresentException) $r25;

        $r29 = new java.lang.TypeNotPresentException;

        $r30 = virtualinvoke r8.<java.lang.TypeNotPresentException: java.lang.String typeName()>();

        $r28 = virtualinvoke r8.<java.lang.TypeNotPresentException: java.lang.Throwable getCause()>();

        specialinvoke $r29.<java.lang.TypeNotPresentException: void <init>(java.lang.String,java.lang.Throwable)>($r30, $r28);

        throw $r29;

     label1:
        $r10 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $z1 = $r10 instanceof java.lang.EnumConstantNotPresentException;

        if $z1 == 0 goto label2;

        $r22 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        r7 = (java.lang.EnumConstantNotPresentException) $r22;

        $r26 = new java.lang.EnumConstantNotPresentException;

        $r27 = virtualinvoke r7.<java.lang.EnumConstantNotPresentException: java.lang.Class enumType()>();

        $r24 = virtualinvoke r7.<java.lang.EnumConstantNotPresentException: java.lang.String constantName()>();

        specialinvoke $r26.<java.lang.EnumConstantNotPresentException: void <init>(java.lang.Class,java.lang.String)>($r27, $r24);

        throw $r26;

     label2:
        $r11 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $z2 = $r11 instanceof java.lang.ArrayStoreException;

        if $z2 == 0 goto label3;

        $r18 = new java.lang.ArrayStoreException;

        $r21 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r20 = (java.lang.ArrayStoreException) $r21;

        $r23 = virtualinvoke $r20.<java.lang.ArrayStoreException: java.lang.String getMessage()>();

        specialinvoke $r18.<java.lang.ArrayStoreException: void <init>(java.lang.String)>($r23);

        throw $r18;

     label3:
        $r12 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        r1 = (java.lang.Throwable) $r12;

        r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        if r2 != null goto label5;

        i0 = 512;

     label4:
        $r13 = new java.io.ByteArrayOutputStream;

        specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>(int)>(i0);

        r3 = $r13;

        $r15 = new java.io.ObjectOutputStream;

        specialinvoke $r15.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r3);

        r4 = $r15;

        virtualinvoke r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r1);

        virtualinvoke r4.<java.io.ObjectOutputStream: void flush()>();

        virtualinvoke r4.<java.io.ObjectOutputStream: void close()>();

        $r14 = new java.io.ObjectInputStream;

        $r17 = new java.io.ByteArrayInputStream;

        $r16 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r17.<java.io.ByteArrayInputStream: void <init>(byte[])>($r16);

        specialinvoke $r14.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r17);

        r5 = $r14;

        $r19 = virtualinvoke r5.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r6 = (java.lang.Throwable) $r19;

        virtualinvoke r5.<java.io.ObjectInputStream: void close()>();

        throw r6;

     label5:
        $i2 = lengthof r2;

        $i3 = 1 + $i2;

        i0 = 80 * $i3;

        goto label4;

     label6:
        return;
    }

    protected libcore.reflect.AnnotationMember setDefinition(libcore.reflect.AnnotationMember)
    {
        libcore.reflect.AnnotationMember r0, r1;
        java.lang.reflect.Method $r2;
        java.lang.Class $r3;

        r0 := @this: libcore.reflect.AnnotationMember;

        r1 := @parameter0: libcore.reflect.AnnotationMember;

        $r2 = r1.<libcore.reflect.AnnotationMember: java.lang.reflect.Method definingMethod>;

        r0.<libcore.reflect.AnnotationMember: java.lang.reflect.Method definingMethod> = $r2;

        $r3 = r1.<libcore.reflect.AnnotationMember: java.lang.Class elementType>;

        r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType> = $r3;

        return r0;
    }

    public java.lang.String toString()
    {
        libcore.reflect.AnnotationMember r0;
        java.lang.StringBuilder r1, $r2, $r4, $r5, $r7, $r9, $r11, $r14;
        int i0, i1;
        char $c2;
        java.lang.String $r3, $r8, $r10, $r16;
        java.lang.Object $r6, $r12, $r15, $r18;

        r0 := @this: libcore.reflect.AnnotationMember;

        $c2 = r0.<libcore.reflect.AnnotationMember: char tag>;

        if $c2 != 91 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>(80);

        r1 = $r9;

        $r10 = r0.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=[");

        $r12 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>($r12);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        if i1 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r15 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r18 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r15, i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        i1 = i1 + 1;

        goto label1;

     label3:
        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<libcore.reflect.AnnotationMember: java.lang.String name>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r6 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.Object validateValue() throws java.lang.Throwable
    {
        libcore.reflect.AnnotationMember r0;
        char $c0;
        java.lang.Object $r1, $r2, $r3, $r6, $r7, $r10;
        java.lang.Class $r4, $r5, $r8, $r12;
        boolean $z0;
        java.lang.annotation.AnnotationTypeMismatchException $r9;
        java.lang.reflect.Method $r11;
        java.lang.String $r13;

        r0 := @this: libcore.reflect.AnnotationMember;

        $c0 = r0.<libcore.reflect.AnnotationMember: char tag>;

        if $c0 != 33 goto label1;

        virtualinvoke r0.<libcore.reflect.AnnotationMember: void rethrowError()>();

     label1:
        $r2 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r1 = <libcore.reflect.AnnotationMember: java.lang.Object NO_VALUE>;

        if $r2 != $r1 goto label2;

        return null;

     label2:
        $r4 = r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType>;

        $r3 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r5 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 == $r5 goto label3;

        $r8 = r0.<libcore.reflect.AnnotationMember: java.lang.Class elementType>;

        $r7 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $z0 = virtualinvoke $r8.<java.lang.Class: boolean isInstance(java.lang.Object)>($r7);

        if $z0 == 0 goto label4;

     label3:
        $r6 = virtualinvoke r0.<libcore.reflect.AnnotationMember: java.lang.Object copyValue()>();

        return $r6;

     label4:
        $r9 = new java.lang.annotation.AnnotationTypeMismatchException;

        $r11 = r0.<libcore.reflect.AnnotationMember: java.lang.reflect.Method definingMethod>;

        $r10 = r0.<libcore.reflect.AnnotationMember: java.lang.Object value>;

        $r12 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r9.<java.lang.annotation.AnnotationTypeMismatchException: void <init>(java.lang.reflect.Method,java.lang.String)>($r11, $r13);

        throw $r9;
    }
}
