public class android.widget.QuickContactBadge extends android.widget.ImageView implements android.view.View$OnClickListener
{
    static final int EMAIL_ID_COLUMN_INDEX;
    static final java.lang.String[] EMAIL_LOOKUP_PROJECTION;
    static final int EMAIL_LOOKUP_STRING_COLUMN_INDEX;
    private static final java.lang.String EXTRA_URI_CONTENT;
    static final int PHONE_ID_COLUMN_INDEX;
    static final java.lang.String[] PHONE_LOOKUP_PROJECTION;
    static final int PHONE_LOOKUP_STRING_COLUMN_INDEX;
    private static final int TOKEN_EMAIL_LOOKUP;
    private static final int TOKEN_EMAIL_LOOKUP_AND_TRIGGER;
    private static final int TOKEN_PHONE_LOOKUP;
    private static final int TOKEN_PHONE_LOOKUP_AND_TRIGGER;
    private java.lang.String mContactEmail;
    private java.lang.String mContactPhone;
    private android.net.Uri mContactUri;
    private android.graphics.drawable.Drawable mDefaultAvatar;
    protected java.lang.String[] mExcludeMimes;
    private android.os.Bundle mExtras;
    private android.graphics.drawable.Drawable mOverlay;
    private android.widget.QuickContactBadge$QueryHandler mQueryHandler;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;

        <android.widget.QuickContactBadge: int TOKEN_PHONE_LOOKUP_AND_TRIGGER> = 3;

        <android.widget.QuickContactBadge: int TOKEN_PHONE_LOOKUP> = 1;

        <android.widget.QuickContactBadge: int TOKEN_EMAIL_LOOKUP_AND_TRIGGER> = 2;

        <android.widget.QuickContactBadge: int TOKEN_EMAIL_LOOKUP> = 0;

        <android.widget.QuickContactBadge: int PHONE_LOOKUP_STRING_COLUMN_INDEX> = 1;

        <android.widget.QuickContactBadge: int PHONE_ID_COLUMN_INDEX> = 0;

        <android.widget.QuickContactBadge: java.lang.String EXTRA_URI_CONTENT> = "uri_content";

        <android.widget.QuickContactBadge: int EMAIL_LOOKUP_STRING_COLUMN_INDEX> = 1;

        <android.widget.QuickContactBadge: int EMAIL_ID_COLUMN_INDEX> = 0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "contact_id";

        $r0[1] = "lookup";

        <android.widget.QuickContactBadge: java.lang.String[] EMAIL_LOOKUP_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "_id";

        $r1[1] = "lookup";

        <android.widget.QuickContactBadge: java.lang.String[] PHONE_LOOKUP_PROJECTION> = $r1;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.QuickContactBadge r0;
        android.content.Context r1;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.QuickContactBadge r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.QuickContactBadge r0;
        android.content.Context r1, $r5, $r8;
        android.util.AttributeSet r2;
        int i0;
        android.content.res.TypedArray r3;
        int[] $r4;
        android.graphics.drawable.Drawable $r6;
        boolean $z0;
        android.widget.QuickContactBadge$QueryHandler $r7;
        android.content.ContentResolver $r9;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.widget.QuickContactBadge: android.os.Bundle mExtras> = null;

        r0.<android.widget.QuickContactBadge: java.lang.String[] mExcludeMimes> = null;

        $r5 = r0.<android.widget.QuickContactBadge: android.content.Context mContext>;

        $r4 = <com.android.internal.R$styleable: int[] Theme>;

        r3 = virtualinvoke $r5.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r4);

        $r6 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(236);

        r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay> = $r6;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $z0 = virtualinvoke r0.<android.widget.QuickContactBadge: boolean isInEditMode()>();

        if $z0 != 0 goto label1;

        $r7 = new android.widget.QuickContactBadge$QueryHandler;

        $r8 = r0.<android.widget.QuickContactBadge: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        specialinvoke $r7.<android.widget.QuickContactBadge$QueryHandler: void <init>(android.widget.QuickContactBadge,android.content.ContentResolver)>(r0, $r9);

        r0.<android.widget.QuickContactBadge: android.widget.QuickContactBadge$QueryHandler mQueryHandler> = $r7;

     label1:
        virtualinvoke r0.<android.widget.QuickContactBadge: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        return;
    }

    static android.net.Uri access$002(android.widget.QuickContactBadge, android.net.Uri)
    {
        android.widget.QuickContactBadge r0;
        android.net.Uri r1;

        r0 := @parameter0: android.widget.QuickContactBadge;

        r1 := @parameter1: android.net.Uri;

        r0.<android.widget.QuickContactBadge: android.net.Uri mContactUri> = r1;

        return r1;
    }

    static void access$100(android.widget.QuickContactBadge)
    {
        android.widget.QuickContactBadge r0;

        r0 := @parameter0: android.widget.QuickContactBadge;

        specialinvoke r0.<android.widget.QuickContactBadge: void onContactUriChanged()>();

        return;
    }

    private boolean isAssigned()
    {
        android.widget.QuickContactBadge r0;
        android.net.Uri $r1;
        java.lang.String $r2, $r3;

        r0 := @this: android.widget.QuickContactBadge;

        $r1 = r0.<android.widget.QuickContactBadge: android.net.Uri mContactUri>;

        if $r1 != null goto label1;

        $r2 = r0.<android.widget.QuickContactBadge: java.lang.String mContactEmail>;

        if $r2 != null goto label1;

        $r3 = r0.<android.widget.QuickContactBadge: java.lang.String mContactPhone>;

        if $r3 == null goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void onContactUriChanged()
    {
        android.widget.QuickContactBadge r0;
        boolean $z0;

        r0 := @this: android.widget.QuickContactBadge;

        $z0 = specialinvoke r0.<android.widget.QuickContactBadge: boolean isAssigned()>();

        virtualinvoke r0.<android.widget.QuickContactBadge: void setEnabled(boolean)>($z0);

        return;
    }

    public void assignContactFromEmail(java.lang.String, boolean)
    {
        android.widget.QuickContactBadge r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean,android.os.Bundle)>(r1, z0, null);

        return;
    }

    public void assignContactFromEmail(java.lang.String, boolean, android.os.Bundle)
    {
        android.widget.QuickContactBadge r0;
        java.lang.String r1, $r4, $r7;
        boolean z0;
        android.os.Bundle r2;
        android.widget.QuickContactBadge$QueryHandler $r3, $r5;
        android.net.Uri $r6, $r8;
        java.lang.String[] $r9;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.Bundle;

        r0.<android.widget.QuickContactBadge: java.lang.String mContactEmail> = r1;

        r0.<android.widget.QuickContactBadge: android.os.Bundle mExtras> = r2;

        if z0 != 0 goto label1;

        $r3 = r0.<android.widget.QuickContactBadge: android.widget.QuickContactBadge$QueryHandler mQueryHandler>;

        if $r3 == null goto label1;

        $r5 = r0.<android.widget.QuickContactBadge: android.widget.QuickContactBadge$QueryHandler mQueryHandler>;

        $r6 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_LOOKUP_URI>;

        $r4 = r0.<android.widget.QuickContactBadge: java.lang.String mContactEmail>;

        $r7 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r4);

        $r8 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r6, $r7);

        $r9 = <android.widget.QuickContactBadge: java.lang.String[] EMAIL_LOOKUP_PROJECTION>;

        virtualinvoke $r5.<android.widget.QuickContactBadge$QueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(0, null, $r8, $r9, null, null, null);

        return;

     label1:
        r0.<android.widget.QuickContactBadge: android.net.Uri mContactUri> = null;

        specialinvoke r0.<android.widget.QuickContactBadge: void onContactUriChanged()>();

        return;
    }

    public void assignContactFromPhone(java.lang.String, boolean)
    {
        android.widget.QuickContactBadge r0;
        java.lang.String r1;
        boolean z0;
        android.os.Bundle $r2;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        virtualinvoke r0.<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean,android.os.Bundle)>(r1, z0, $r2);

        return;
    }

    public void assignContactFromPhone(java.lang.String, boolean, android.os.Bundle)
    {
        android.widget.QuickContactBadge r0;
        java.lang.String r1, $r4;
        boolean z0;
        android.os.Bundle r2;
        android.widget.QuickContactBadge$QueryHandler $r3, $r6;
        android.net.Uri $r5, $r7;
        java.lang.String[] $r8;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.Bundle;

        r0.<android.widget.QuickContactBadge: java.lang.String mContactPhone> = r1;

        r0.<android.widget.QuickContactBadge: android.os.Bundle mExtras> = r2;

        if z0 != 0 goto label1;

        $r3 = r0.<android.widget.QuickContactBadge: android.widget.QuickContactBadge$QueryHandler mQueryHandler>;

        if $r3 == null goto label1;

        $r6 = r0.<android.widget.QuickContactBadge: android.widget.QuickContactBadge$QueryHandler mQueryHandler>;

        $r5 = <android.provider.ContactsContract$PhoneLookup: android.net.Uri CONTENT_FILTER_URI>;

        $r4 = r0.<android.widget.QuickContactBadge: java.lang.String mContactPhone>;

        $r7 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r5, $r4);

        $r8 = <android.widget.QuickContactBadge: java.lang.String[] PHONE_LOOKUP_PROJECTION>;

        virtualinvoke $r6.<android.widget.QuickContactBadge$QueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(1, null, $r7, $r8, null, null, null);

        return;

     label1:
        r0.<android.widget.QuickContactBadge: android.net.Uri mContactUri> = null;

        specialinvoke r0.<android.widget.QuickContactBadge: void onContactUriChanged()>();

        return;
    }

    public void assignContactUri(android.net.Uri)
    {
        android.widget.QuickContactBadge r0;
        android.net.Uri r1;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: android.net.Uri;

        r0.<android.widget.QuickContactBadge: android.net.Uri mContactUri> = r1;

        r0.<android.widget.QuickContactBadge: java.lang.String mContactEmail> = null;

        r0.<android.widget.QuickContactBadge: java.lang.String mContactPhone> = null;

        specialinvoke r0.<android.widget.QuickContactBadge: void onContactUriChanged()>();

        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.QuickContactBadge r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;
        boolean $z0;
        int[] $r4;

        r0 := @this: android.widget.QuickContactBadge;

        specialinvoke r0.<android.widget.ImageView: void drawableStateChanged()>();

        $r1 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay>;

        $r4 = virtualinvoke r0.<android.widget.QuickContactBadge: int[] getDrawableState()>();

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

        virtualinvoke r0.<android.widget.QuickContactBadge: void invalidate()>();

     label1:
        return;
    }

    public void onClick(android.view.View)
    {
        android.widget.QuickContactBadge r0;
        android.view.View r1;
        android.os.Bundle r2, $r3, $r24;
        android.net.Uri $r4, $r10, $r12, $r19, $r21, $r25;
        java.lang.String $r5, $r6, $r8, $r9, $r15, $r16, $r18;
        android.widget.QuickContactBadge$QueryHandler $r7, $r11, $r14, $r17;
        java.lang.String[] $r13, $r20, $r22;
        android.content.Context $r23;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<android.widget.QuickContactBadge: android.os.Bundle mExtras>;

        if $r3 != null goto label3;

        $r24 = new android.os.Bundle;

        specialinvoke $r24.<android.os.Bundle: void <init>()>();

        r2 = $r24;

     label1:
        $r4 = r0.<android.widget.QuickContactBadge: android.net.Uri mContactUri>;

        if $r4 == null goto label4;

        $r23 = virtualinvoke r0.<android.widget.QuickContactBadge: android.content.Context getContext()>();

        $r25 = r0.<android.widget.QuickContactBadge: android.net.Uri mContactUri>;

        $r22 = r0.<android.widget.QuickContactBadge: java.lang.String[] mExcludeMimes>;

        staticinvoke <android.provider.ContactsContract$QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])>($r23, r0, $r25, 3, $r22);

     label2:
        return;

     label3:
        r2 = r0.<android.widget.QuickContactBadge: android.os.Bundle mExtras>;

        goto label1;

     label4:
        $r5 = r0.<android.widget.QuickContactBadge: java.lang.String mContactEmail>;

        if $r5 == null goto label5;

        $r14 = r0.<android.widget.QuickContactBadge: android.widget.QuickContactBadge$QueryHandler mQueryHandler>;

        if $r14 == null goto label5;

        $r16 = r0.<android.widget.QuickContactBadge: java.lang.String mContactEmail>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("uri_content", $r16);

        $r17 = r0.<android.widget.QuickContactBadge: android.widget.QuickContactBadge$QueryHandler mQueryHandler>;

        $r19 = <android.provider.ContactsContract$CommonDataKinds$Email: android.net.Uri CONTENT_LOOKUP_URI>;

        $r15 = r0.<android.widget.QuickContactBadge: java.lang.String mContactEmail>;

        $r18 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r15);

        $r21 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r19, $r18);

        $r20 = <android.widget.QuickContactBadge: java.lang.String[] EMAIL_LOOKUP_PROJECTION>;

        virtualinvoke $r17.<android.widget.QuickContactBadge$QueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(2, r2, $r21, $r20, null, null, null);

        return;

     label5:
        $r6 = r0.<android.widget.QuickContactBadge: java.lang.String mContactPhone>;

        if $r6 == null goto label2;

        $r7 = r0.<android.widget.QuickContactBadge: android.widget.QuickContactBadge$QueryHandler mQueryHandler>;

        if $r7 == null goto label2;

        $r8 = r0.<android.widget.QuickContactBadge: java.lang.String mContactPhone>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("uri_content", $r8);

        $r11 = r0.<android.widget.QuickContactBadge: android.widget.QuickContactBadge$QueryHandler mQueryHandler>;

        $r10 = <android.provider.ContactsContract$PhoneLookup: android.net.Uri CONTENT_FILTER_URI>;

        $r9 = r0.<android.widget.QuickContactBadge: java.lang.String mContactPhone>;

        $r12 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r10, $r9);

        $r13 = <android.widget.QuickContactBadge: java.lang.String[] PHONE_LOOKUP_PROJECTION>;

        virtualinvoke $r11.<android.widget.QuickContactBadge$QueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(3, r2, $r12, $r13, null, null, null);

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.QuickContactBadge r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5, $r6, $r7;
        float $f0, $f1;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.ImageView: void onDraw(android.graphics.Canvas)>(r1);

        $z0 = virtualinvoke r0.<android.widget.QuickContactBadge: boolean isEnabled()>();

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay>;

        $i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        if $i1 == 0 goto label1;

        $r4 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay>;

        $i2 = virtualinvoke $r4.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if $i2 == 0 goto label1;

        $r5 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay>;

        $i3 = virtualinvoke r0.<android.widget.QuickContactBadge: int getWidth()>();

        $i4 = virtualinvoke r0.<android.widget.QuickContactBadge: int getHeight()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i3, $i4);

        $i5 = r0.<android.widget.QuickContactBadge: int mPaddingTop>;

        if $i5 != 0 goto label3;

        $i9 = r0.<android.widget.QuickContactBadge: int mPaddingLeft>;

        if $i9 != 0 goto label3;

        $r7 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;

     label3:
        i0 = virtualinvoke r1.<android.graphics.Canvas: int getSaveCount()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i6 = r0.<android.widget.QuickContactBadge: int mPaddingLeft>;

        $f1 = (float) $i6;

        $i8 = r0.<android.widget.QuickContactBadge: int mPaddingTop>;

        $f0 = (float) $i8;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f0);

        $r6 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mOverlay>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.QuickContactBadge r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.ImageView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/QuickContactBadge";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.QuickContactBadge r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.ImageView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/QuickContactBadge";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void setExcludeMimes(java.lang.String[])
    {
        android.widget.QuickContactBadge r0;
        java.lang.String[] r1;

        r0 := @this: android.widget.QuickContactBadge;

        r1 := @parameter0: java.lang.String[];

        r0.<android.widget.QuickContactBadge: java.lang.String[] mExcludeMimes> = r1;

        return;
    }

    public void setImageToDefault()
    {
        android.widget.QuickContactBadge r0;
        android.graphics.drawable.Drawable $r1, $r2, $r4;
        android.content.res.Resources $r3;

        r0 := @this: android.widget.QuickContactBadge;

        $r1 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mDefaultAvatar>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.QuickContactBadge: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17302218);

        r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mDefaultAvatar> = $r4;

     label1:
        $r2 = r0.<android.widget.QuickContactBadge: android.graphics.drawable.Drawable mDefaultAvatar>;

        virtualinvoke r0.<android.widget.QuickContactBadge: void setImageDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setMode(int)
    {
        android.widget.QuickContactBadge r0;
        int i0;

        r0 := @this: android.widget.QuickContactBadge;

        i0 := @parameter0: int;

        return;
    }
}
