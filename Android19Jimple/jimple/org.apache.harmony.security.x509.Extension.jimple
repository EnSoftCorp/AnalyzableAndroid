public final class org.apache.harmony.security.x509.Extension extends java.lang.Object
{
    public static final org.apache.harmony.security.asn1.ASN1Sequence ASN1;
    static final int[] AUTHORITY_INFO_ACCESS;
    static final int[] AUTH_KEY_ID;
    static final int[] BASIC_CONSTRAINTS;
    static final int[] CERTIFICATE_ISSUER;
    static final int[] CERTIFICATE_POLICIES;
    public static final boolean CRITICAL;
    static final int[] CRL_DISTR_POINTS;
    static final int[] CRL_NUMBER;
    static final int[] EXTENDED_KEY_USAGE;
    static final int[] FRESHEST_CRL;
    static final int[] INHIBIT_ANY_POLICY;
    static final int[] INVALIDITY_DATE;
    static final int[] ISSUER_ALTERNATIVE_NAME;
    static final int[] ISSUING_DISTR_POINT;
    static final int[] ISSUING_DISTR_POINTS;
    static final int[] KEY_USAGE;
    static final int[] NAME_CONSTRAINTS;
    public static final boolean NON_CRITICAL;
    static final int[] POLICY_CONSTRAINTS;
    static final int[] POLICY_MAPPINGS;
    static final int[] PRIVATE_KEY_USAGE_PERIOD;
    static final int[] REASON_CODE;
    static final int[] SUBJECT_ALT_NAME;
    static final int[] SUBJECT_INFO_ACCESS;
    static final int[] SUBJ_DIRECTORY_ATTRS;
    static final int[] SUBJ_KEY_ID;
    private final boolean critical;
    private byte[] encoding;
    private final int[] extnID;
    private java.lang.String extnID_str;
    private final byte[] extnValue;
    protected org.apache.harmony.security.x509.ExtensionValue extnValueObject;
    private byte[] rawExtnValue;
    private volatile boolean valueDecoded;

    static void <clinit>()
    {
        org.apache.harmony.security.asn1.ASN1Type[] r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        org.apache.harmony.security.asn1.ASN1Oid $r25;
        org.apache.harmony.security.x509.Extension$1 $r26;
        org.apache.harmony.security.asn1.ASN1Boolean $r27;
        org.apache.harmony.security.x509.Extension$2 $r28;

        <org.apache.harmony.security.x509.Extension: boolean CRITICAL> = 1;

        $r1 = newarray (int)[4];

        $r1[0] = 2;

        $r1[1] = 5;

        $r1[2] = 29;

        $r1[3] = 9;

        <org.apache.harmony.security.x509.Extension: int[] SUBJ_DIRECTORY_ATTRS> = $r1;

        $r2 = newarray (int)[4];

        $r2[0] = 2;

        $r2[1] = 5;

        $r2[2] = 29;

        $r2[3] = 14;

        <org.apache.harmony.security.x509.Extension: int[] SUBJ_KEY_ID> = $r2;

        $r3 = newarray (int)[4];

        $r3[0] = 2;

        $r3[1] = 5;

        $r3[2] = 29;

        $r3[3] = 15;

        <org.apache.harmony.security.x509.Extension: int[] KEY_USAGE> = $r3;

        $r4 = newarray (int)[4];

        $r4[0] = 2;

        $r4[1] = 5;

        $r4[2] = 29;

        $r4[3] = 16;

        <org.apache.harmony.security.x509.Extension: int[] PRIVATE_KEY_USAGE_PERIOD> = $r4;

        $r5 = newarray (int)[4];

        $r5[0] = 2;

        $r5[1] = 5;

        $r5[2] = 29;

        $r5[3] = 17;

        <org.apache.harmony.security.x509.Extension: int[] SUBJECT_ALT_NAME> = $r5;

        $r6 = newarray (int)[4];

        $r6[0] = 2;

        $r6[1] = 5;

        $r6[2] = 29;

        $r6[3] = 18;

        <org.apache.harmony.security.x509.Extension: int[] ISSUER_ALTERNATIVE_NAME> = $r6;

        $r7 = newarray (int)[4];

        $r7[0] = 2;

        $r7[1] = 5;

        $r7[2] = 29;

        $r7[3] = 19;

        <org.apache.harmony.security.x509.Extension: int[] BASIC_CONSTRAINTS> = $r7;

        $r8 = newarray (int)[4];

        $r8[0] = 2;

        $r8[1] = 5;

        $r8[2] = 29;

        $r8[3] = 30;

        <org.apache.harmony.security.x509.Extension: int[] NAME_CONSTRAINTS> = $r8;

        $r9 = newarray (int)[4];

        $r9[0] = 2;

        $r9[1] = 5;

        $r9[2] = 29;

        $r9[3] = 31;

        <org.apache.harmony.security.x509.Extension: int[] CRL_DISTR_POINTS> = $r9;

        $r10 = newarray (int)[4];

        $r10[0] = 2;

        $r10[1] = 5;

        $r10[2] = 29;

        $r10[3] = 32;

        <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_POLICIES> = $r10;

        $r11 = newarray (int)[4];

        $r11[0] = 2;

        $r11[1] = 5;

        $r11[2] = 29;

        $r11[3] = 33;

        <org.apache.harmony.security.x509.Extension: int[] POLICY_MAPPINGS> = $r11;

        $r12 = newarray (int)[4];

        $r12[0] = 2;

        $r12[1] = 5;

        $r12[2] = 29;

        $r12[3] = 35;

        <org.apache.harmony.security.x509.Extension: int[] AUTH_KEY_ID> = $r12;

        $r13 = newarray (int)[4];

        $r13[0] = 2;

        $r13[1] = 5;

        $r13[2] = 29;

        $r13[3] = 36;

        <org.apache.harmony.security.x509.Extension: int[] POLICY_CONSTRAINTS> = $r13;

        $r14 = newarray (int)[4];

        $r14[0] = 2;

        $r14[1] = 5;

        $r14[2] = 29;

        $r14[3] = 37;

        <org.apache.harmony.security.x509.Extension: int[] EXTENDED_KEY_USAGE> = $r14;

        $r15 = newarray (int)[4];

        $r15[0] = 2;

        $r15[1] = 5;

        $r15[2] = 29;

        $r15[3] = 46;

        <org.apache.harmony.security.x509.Extension: int[] FRESHEST_CRL> = $r15;

        $r17 = newarray (int)[4];

        $r17[0] = 2;

        $r17[1] = 5;

        $r17[2] = 29;

        $r17[3] = 54;

        <org.apache.harmony.security.x509.Extension: int[] INHIBIT_ANY_POLICY> = $r17;

        $r16 = newarray (int)[9];

        $r16[0] = 1;

        $r16[1] = 3;

        $r16[2] = 6;

        $r16[3] = 1;

        $r16[4] = 5;

        $r16[5] = 5;

        $r16[6] = 7;

        $r16[7] = 1;

        $r16[8] = 1;

        <org.apache.harmony.security.x509.Extension: int[] AUTHORITY_INFO_ACCESS> = $r16;

        $r19 = newarray (int)[9];

        $r19[0] = 1;

        $r19[1] = 3;

        $r19[2] = 6;

        $r19[3] = 1;

        $r19[4] = 5;

        $r19[5] = 5;

        $r19[6] = 7;

        $r19[7] = 1;

        $r19[8] = 11;

        <org.apache.harmony.security.x509.Extension: int[] SUBJECT_INFO_ACCESS> = $r19;

        $r18 = newarray (int)[4];

        $r18[0] = 2;

        $r18[1] = 5;

        $r18[2] = 29;

        $r18[3] = 28;

        <org.apache.harmony.security.x509.Extension: int[] ISSUING_DISTR_POINT> = $r18;

        $r21 = newarray (int)[4];

        $r21[0] = 2;

        $r21[1] = 5;

        $r21[2] = 29;

        $r21[3] = 20;

        <org.apache.harmony.security.x509.Extension: int[] CRL_NUMBER> = $r21;

        $r20 = newarray (int)[4];

        $r20[0] = 2;

        $r20[1] = 5;

        $r20[2] = 29;

        $r20[3] = 29;

        <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_ISSUER> = $r20;

        $r23 = newarray (int)[4];

        $r23[0] = 2;

        $r23[1] = 5;

        $r23[2] = 29;

        $r23[3] = 24;

        <org.apache.harmony.security.x509.Extension: int[] INVALIDITY_DATE> = $r23;

        $r22 = newarray (int)[4];

        $r22[0] = 2;

        $r22[1] = 5;

        $r22[2] = 29;

        $r22[3] = 21;

        <org.apache.harmony.security.x509.Extension: int[] REASON_CODE> = $r22;

        $r24 = newarray (int)[4];

        $r24[0] = 2;

        $r24[1] = 5;

        $r24[2] = 29;

        $r24[3] = 28;

        <org.apache.harmony.security.x509.Extension: int[] ISSUING_DISTR_POINTS> = $r24;

        r0 = newarray (org.apache.harmony.security.asn1.ASN1Type)[3];

        $r25 = staticinvoke <org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()>();

        r0[0] = $r25;

        $r27 = staticinvoke <org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()>();

        r0[1] = $r27;

        $r26 = new org.apache.harmony.security.x509.Extension$1;

        specialinvoke $r26.<org.apache.harmony.security.x509.Extension$1: void <init>()>();

        r0[2] = $r26;

        $r28 = new org.apache.harmony.security.x509.Extension$2;

        specialinvoke $r28.<org.apache.harmony.security.x509.Extension$2: void <init>(org.apache.harmony.security.asn1.ASN1Type[])>(r0);

        <org.apache.harmony.security.x509.Extension: org.apache.harmony.security.asn1.ASN1Sequence ASN1> = $r28;

        return;
    }

    public void <init>(java.lang.String, boolean, org.apache.harmony.security.x509.ExtensionValue)
    {
        org.apache.harmony.security.x509.Extension r0;
        java.lang.String r1;
        boolean z0;
        org.apache.harmony.security.x509.ExtensionValue r2;
        int[] $r3;
        byte[] $r4;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.harmony.security.x509.ExtensionValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 0;

        r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str> = r1;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: int[] toIntArray(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.Extension: int[] extnID> = $r3;

        r0.<org.apache.harmony.security.x509.Extension: boolean critical> = z0;

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = r2;

        r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 1;

        $r4 = virtualinvoke r2.<org.apache.harmony.security.x509.ExtensionValue: byte[] getEncoded()>();

        r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue> = $r4;

        return;
    }

    public void <init>(java.lang.String, boolean, byte[])
    {
        org.apache.harmony.security.x509.Extension r0;
        java.lang.String r1;
        boolean z0;
        byte[] r2;
        int[] $r3;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 0;

        r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str> = r1;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: int[] toIntArray(java.lang.String)>(r1);

        r0.<org.apache.harmony.security.x509.Extension: int[] extnID> = $r3;

        r0.<org.apache.harmony.security.x509.Extension: boolean critical> = z0;

        r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue> = r2;

        return;
    }

    public void <init>(java.lang.String, byte[])
    {
        org.apache.harmony.security.x509.Extension r0;
        java.lang.String r1;
        byte[] r2;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        specialinvoke r0.<org.apache.harmony.security.x509.Extension: void <init>(java.lang.String,boolean,byte[])>(r1, 0, r2);

        return;
    }

    public void <init>(int[], boolean, byte[])
    {
        org.apache.harmony.security.x509.Extension r0;
        int[] r1;
        boolean z0;
        byte[] r2;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 := @parameter0: int[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 0;

        r0.<org.apache.harmony.security.x509.Extension: int[] extnID> = r1;

        r0.<org.apache.harmony.security.x509.Extension: boolean critical> = z0;

        r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue> = r2;

        return;
    }

    private void <init>(int[], boolean, byte[], byte[], byte[], org.apache.harmony.security.x509.ExtensionValue)
    {
        org.apache.harmony.security.x509.Extension r0;
        int[] r1;
        boolean z0, z1;
        byte[] r2, r3, r4;
        org.apache.harmony.security.x509.ExtensionValue r5;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 := @parameter0: int[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: byte[];

        r3 := @parameter3: byte[];

        r4 := @parameter4: byte[];

        r5 := @parameter5: org.apache.harmony.security.x509.ExtensionValue;

        specialinvoke r0.<org.apache.harmony.security.x509.Extension: void <init>(int[],boolean,byte[])>(r1, z0, r2);

        r0.<org.apache.harmony.security.x509.Extension: byte[] rawExtnValue> = r3;

        r0.<org.apache.harmony.security.x509.Extension: byte[] encoding> = r4;

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = r5;

        if r5 == null goto label2;

        z1 = 1;

     label1:
        r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = z1;

        return;

     label2:
        z1 = 0;

        goto label1;
    }

    void <init>(int[], boolean, byte[], byte[], byte[], org.apache.harmony.security.x509.ExtensionValue, org.apache.harmony.security.x509.Extension$1)
    {
        org.apache.harmony.security.x509.Extension r0;
        int[] r1;
        boolean z0;
        byte[] r2, r3, r4;
        org.apache.harmony.security.x509.ExtensionValue r5;
        org.apache.harmony.security.x509.Extension$1 r6;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 := @parameter0: int[];

        z0 := @parameter1: boolean;

        r2 := @parameter2: byte[];

        r3 := @parameter3: byte[];

        r4 := @parameter4: byte[];

        r5 := @parameter5: org.apache.harmony.security.x509.ExtensionValue;

        r6 := @parameter6: org.apache.harmony.security.x509.Extension$1;

        specialinvoke r0.<org.apache.harmony.security.x509.Extension: void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue)>(r1, z0, r2, r3, r4, r5);

        return;
    }

    public void <init>(int[], byte[])
    {
        org.apache.harmony.security.x509.Extension r0;
        int[] r1;
        byte[] r2;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 := @parameter0: int[];

        r2 := @parameter1: byte[];

        specialinvoke r0.<org.apache.harmony.security.x509.Extension: void <init>(int[],boolean,byte[])>(r1, 0, r2);

        return;
    }

    static int[] access$100(org.apache.harmony.security.x509.Extension)
    {
        org.apache.harmony.security.x509.Extension r0;
        int[] $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.Extension;

        $r1 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        return $r1;
    }

    static boolean access$200(org.apache.harmony.security.x509.Extension)
    {
        org.apache.harmony.security.x509.Extension r0;
        boolean $z0;

        r0 := @parameter0: org.apache.harmony.security.x509.Extension;

        $z0 = r0.<org.apache.harmony.security.x509.Extension: boolean critical>;

        return $z0;
    }

    static byte[] access$300(org.apache.harmony.security.x509.Extension)
    {
        org.apache.harmony.security.x509.Extension r0;
        byte[] $r1;

        r0 := @parameter0: org.apache.harmony.security.x509.Extension;

        $r1 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        return $r1;
    }

    private void decodeExtensionValue() throws java.io.IOException
    {
        org.apache.harmony.security.x509.Extension r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r42;
        org.apache.harmony.security.x509.InfoAccessSyntax $r40, $r48;
        byte[] $r41, $r44, $r46, $r47, $r49, $r51, $r54, $r56, $r58, $r59, $r62, $r63, $r65, $r67, $r69, $r72, $r74, $r75, $r78, $r80;
        org.apache.harmony.security.x509.CRLNumber $r43;
        org.apache.harmony.security.x509.ReasonCode $r45, $r57;
        org.apache.harmony.security.x509.IssuingDistributionPoint $r50;
        org.apache.harmony.security.x509.CRLDistributionPoints $r52;
        org.apache.harmony.security.x509.CertificateIssuer $r53;
        org.apache.harmony.security.x509.InvalidityDate $r55;
        org.apache.harmony.security.x509.PolicyConstraints $r60;
        org.apache.harmony.security.x509.AuthorityKeyIdentifier $r61;
        org.apache.harmony.security.x509.InhibitAnyPolicy $r64;
        org.apache.harmony.security.x509.ExtendedKeyUsage $r66;
        org.apache.harmony.security.x509.BasicConstraints $r68;
        org.apache.harmony.security.x509.AlternativeName $r70, $r79;
        org.apache.harmony.security.x509.CertificatePolicies $r71;
        org.apache.harmony.security.x509.NameConstraints $r73;
        org.apache.harmony.security.x509.SubjectKeyIdentifier $r76;
        org.apache.harmony.security.x509.KeyUsage $r77;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $z0 = r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r2 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r1 = <org.apache.harmony.security.x509.Extension: int[] SUBJ_KEY_ID>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r2, $r1);

        if $z1 == 0 goto label03;

        $r75 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r76 = staticinvoke <org.apache.harmony.security.x509.SubjectKeyIdentifier: org.apache.harmony.security.x509.SubjectKeyIdentifier decode(byte[])>($r75);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r76;

     label02:
        r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded> = 1;

        return;

     label03:
        $r4 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r3 = <org.apache.harmony.security.x509.Extension: int[] KEY_USAGE>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r4, $r3);

        if $z2 == 0 goto label04;

        $r77 = new org.apache.harmony.security.x509.KeyUsage;

        $r78 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r77.<org.apache.harmony.security.x509.KeyUsage: void <init>(byte[])>($r78);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r77;

        goto label02;

     label04:
        $r6 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r5 = <org.apache.harmony.security.x509.Extension: int[] SUBJECT_ALT_NAME>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r6, $r5);

        if $z3 == 0 goto label05;

        $r79 = new org.apache.harmony.security.x509.AlternativeName;

        $r80 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r79.<org.apache.harmony.security.x509.AlternativeName: void <init>(boolean,byte[])>(1, $r80);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r79;

        goto label02;

     label05:
        $r8 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r7 = <org.apache.harmony.security.x509.Extension: int[] ISSUER_ALTERNATIVE_NAME>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r8, $r7);

        if $z4 == 0 goto label06;

        $r70 = new org.apache.harmony.security.x509.AlternativeName;

        $r69 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r70.<org.apache.harmony.security.x509.AlternativeName: void <init>(boolean,byte[])>(1, $r69);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r70;

        goto label02;

     label06:
        $r10 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r9 = <org.apache.harmony.security.x509.Extension: int[] BASIC_CONSTRAINTS>;

        $z5 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r10, $r9);

        if $z5 == 0 goto label07;

        $r68 = new org.apache.harmony.security.x509.BasicConstraints;

        $r67 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r68.<org.apache.harmony.security.x509.BasicConstraints: void <init>(byte[])>($r67);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r68;

        goto label02;

     label07:
        $r12 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r11 = <org.apache.harmony.security.x509.Extension: int[] NAME_CONSTRAINTS>;

        $z6 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r12, $r11);

        if $z6 == 0 goto label08;

        $r74 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r73 = staticinvoke <org.apache.harmony.security.x509.NameConstraints: org.apache.harmony.security.x509.NameConstraints decode(byte[])>($r74);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r73;

        goto label02;

     label08:
        $r13 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r14 = <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_POLICIES>;

        $z7 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r13, $r14);

        if $z7 == 0 goto label09;

        $r72 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r71 = staticinvoke <org.apache.harmony.security.x509.CertificatePolicies: org.apache.harmony.security.x509.CertificatePolicies decode(byte[])>($r72);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r71;

        goto label02;

     label09:
        $r16 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r15 = <org.apache.harmony.security.x509.Extension: int[] AUTH_KEY_ID>;

        $z8 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r16, $r15);

        if $z8 == 0 goto label10;

        $r62 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r61 = staticinvoke <org.apache.harmony.security.x509.AuthorityKeyIdentifier: org.apache.harmony.security.x509.AuthorityKeyIdentifier decode(byte[])>($r62);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r61;

        goto label02;

     label10:
        $r17 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r18 = <org.apache.harmony.security.x509.Extension: int[] POLICY_CONSTRAINTS>;

        $z9 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r17, $r18);

        if $z9 == 0 goto label11;

        $r60 = new org.apache.harmony.security.x509.PolicyConstraints;

        $r59 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r60.<org.apache.harmony.security.x509.PolicyConstraints: void <init>(byte[])>($r59);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r60;

        goto label02;

     label11:
        $r20 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r19 = <org.apache.harmony.security.x509.Extension: int[] EXTENDED_KEY_USAGE>;

        $z10 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r20, $r19);

        if $z10 == 0 goto label12;

        $r66 = new org.apache.harmony.security.x509.ExtendedKeyUsage;

        $r65 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r66.<org.apache.harmony.security.x509.ExtendedKeyUsage: void <init>(byte[])>($r65);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r66;

        goto label02;

     label12:
        $r23 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r22 = <org.apache.harmony.security.x509.Extension: int[] INHIBIT_ANY_POLICY>;

        $z11 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r23, $r22);

        if $z11 == 0 goto label13;

        $r64 = new org.apache.harmony.security.x509.InhibitAnyPolicy;

        $r63 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r64.<org.apache.harmony.security.x509.InhibitAnyPolicy: void <init>(byte[])>($r63);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r64;

        goto label02;

     label13:
        $r26 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r21 = <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_ISSUER>;

        $z12 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r26, $r21);

        if $z12 == 0 goto label14;

        $r53 = new org.apache.harmony.security.x509.CertificateIssuer;

        $r54 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r53.<org.apache.harmony.security.x509.CertificateIssuer: void <init>(byte[])>($r54);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r53;

        goto label02;

     label14:
        $r25 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r24 = <org.apache.harmony.security.x509.Extension: int[] CRL_DISTR_POINTS>;

        $z14 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r25, $r24);

        if $z14 == 0 goto label15;

        $r51 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r52 = staticinvoke <org.apache.harmony.security.x509.CRLDistributionPoints: org.apache.harmony.security.x509.CRLDistributionPoints decode(byte[])>($r51);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r52;

        goto label02;

     label15:
        $r27 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r28 = <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_ISSUER>;

        $z13 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r27, $r28);

        if $z13 == 0 goto label16;

        $r57 = new org.apache.harmony.security.x509.ReasonCode;

        $r58 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r57.<org.apache.harmony.security.x509.ReasonCode: void <init>(byte[])>($r58);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r57;

        goto label02;

     label16:
        $r31 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r30 = <org.apache.harmony.security.x509.Extension: int[] INVALIDITY_DATE>;

        $z15 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r31, $r30);

        if $z15 == 0 goto label17;

        $r55 = new org.apache.harmony.security.x509.InvalidityDate;

        $r56 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r55.<org.apache.harmony.security.x509.InvalidityDate: void <init>(byte[])>($r56);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r55;

        goto label02;

     label17:
        $r34 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r29 = <org.apache.harmony.security.x509.Extension: int[] REASON_CODE>;

        $z16 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r34, $r29);

        if $z16 == 0 goto label18;

        $r45 = new org.apache.harmony.security.x509.ReasonCode;

        $r46 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r45.<org.apache.harmony.security.x509.ReasonCode: void <init>(byte[])>($r46);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r45;

        goto label02;

     label18:
        $r32 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r33 = <org.apache.harmony.security.x509.Extension: int[] CRL_NUMBER>;

        $z18 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r32, $r33);

        if $z18 == 0 goto label19;

        $r43 = new org.apache.harmony.security.x509.CRLNumber;

        $r44 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        specialinvoke $r43.<org.apache.harmony.security.x509.CRLNumber: void <init>(byte[])>($r44);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r43;

        goto label02;

     label19:
        $r35 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r36 = <org.apache.harmony.security.x509.Extension: int[] ISSUING_DISTR_POINTS>;

        $z17 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r35, $r36);

        if $z17 == 0 goto label20;

        $r49 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r50 = staticinvoke <org.apache.harmony.security.x509.IssuingDistributionPoint: org.apache.harmony.security.x509.IssuingDistributionPoint decode(byte[])>($r49);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r50;

        goto label02;

     label20:
        $r38 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r39 = <org.apache.harmony.security.x509.Extension: int[] AUTHORITY_INFO_ACCESS>;

        $z19 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r38, $r39);

        if $z19 == 0 goto label21;

        $r47 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r48 = staticinvoke <org.apache.harmony.security.x509.InfoAccessSyntax: org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[])>($r47);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r48;

        goto label02;

     label21:
        $r42 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r37 = <org.apache.harmony.security.x509.Extension: int[] SUBJECT_INFO_ACCESS>;

        $z20 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r42, $r37);

        if $z20 == 0 goto label02;

        $r41 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r40 = staticinvoke <org.apache.harmony.security.x509.InfoAccessSyntax: org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[])>($r41);

        r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject> = $r40;

        goto label02;
    }

    public void dumpValue(java.lang.StringBuilder, java.lang.String)
    {
        org.apache.harmony.security.x509.Extension r0;
        java.lang.StringBuilder r1, $r3, $r5, $r7, $r9, $r52, $r53;
        java.lang.String r2, $r6, $r63;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21;
        int[] $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r55, $r56;
        org.apache.harmony.security.x509.ExtensionValue $r12, $r74;
        byte[] $r51;
        java.io.IOException $r73;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OID: ");

        $r6 = virtualinvoke r0.<org.apache.harmony.security.x509.Extension: java.lang.String getExtnID()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Critical: ");

        $z0 = r0.<org.apache.harmony.security.x509.Extension: boolean critical>;

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $z1 = r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z1 != 0 goto label02;

     label01:
        specialinvoke r0.<org.apache.harmony.security.x509.Extension: void decodeExtensionValue()>();

     label02:
        $r12 = r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        if $r12 == null goto label03;

        $r74 = r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        virtualinvoke $r74.<org.apache.harmony.security.x509.ExtensionValue: void dumpValue(java.lang.StringBuilder,java.lang.String)>(r1, r2);

        return;

     label03:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r11 = <org.apache.harmony.security.x509.Extension: int[] SUBJ_DIRECTORY_ATTRS>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r15, $r11);

        if $z2 == 0 goto label05;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subject Directory Attributes Extension");

     label04:
        $r52 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unparsed Extension Value:\n");

        $r51 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r63 = staticinvoke <org.apache.harmony.security.utils.Array: java.lang.String toString(byte[],java.lang.String)>($r51, r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        return;

     label05:
        $r14 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r13 = <org.apache.harmony.security.x509.Extension: int[] SUBJ_KEY_ID>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r14, $r13);

        if $z4 == 0 goto label06;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subject Key Identifier Extension");

        goto label04;

     label06:
        $r16 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r17 = <org.apache.harmony.security.x509.Extension: int[] KEY_USAGE>;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r16, $r17);

        if $z3 == 0 goto label07;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key Usage Extension");

        goto label04;

     label07:
        $r19 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r20 = <org.apache.harmony.security.x509.Extension: int[] PRIVATE_KEY_USAGE_PERIOD>;

        $z5 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r19, $r20);

        if $z5 == 0 goto label08;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Private Key Usage Period Extension");

        goto label04;

     label08:
        $r23 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r18 = <org.apache.harmony.security.x509.Extension: int[] SUBJECT_ALT_NAME>;

        $z6 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r23, $r18);

        if $z6 == 0 goto label09;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subject Alternative Name Extension");

        goto label04;

     label09:
        $r21 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r22 = <org.apache.harmony.security.x509.Extension: int[] ISSUER_ALTERNATIVE_NAME>;

        $z8 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r21, $r22);

        if $z8 == 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Issuer Alternative Name Extension");

        goto label04;

     label10:
        $r24 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r25 = <org.apache.harmony.security.x509.Extension: int[] BASIC_CONSTRAINTS>;

        $z7 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r24, $r25);

        if $z7 == 0 goto label11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic Constraints Extension");

        goto label04;

     label11:
        $r27 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r28 = <org.apache.harmony.security.x509.Extension: int[] NAME_CONSTRAINTS>;

        $z9 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r27, $r28);

        if $z9 == 0 goto label12;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Name Constraints Extension");

        goto label04;

     label12:
        $r31 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r26 = <org.apache.harmony.security.x509.Extension: int[] CRL_DISTR_POINTS>;

        $z12 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r31, $r26);

        if $z12 == 0 goto label13;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CRL Distribution Points Extension");

        goto label04;

     label13:
        $r33 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r32 = <org.apache.harmony.security.x509.Extension: int[] CERTIFICATE_POLICIES>;

        $z10 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r33, $r32);

        if $z10 == 0 goto label14;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate Policies Extension");

        goto label04;

     label14:
        $r30 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r29 = <org.apache.harmony.security.x509.Extension: int[] POLICY_MAPPINGS>;

        $z11 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r30, $r29);

        if $z11 == 0 goto label15;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Policy Mappings Extension");

        goto label04;

     label15:
        $r38 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r37 = <org.apache.harmony.security.x509.Extension: int[] AUTH_KEY_ID>;

        $z14 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r38, $r37);

        if $z14 == 0 goto label16;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authority Key Identifier Extension");

        goto label04;

     label16:
        $r34 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r39 = <org.apache.harmony.security.x509.Extension: int[] POLICY_CONSTRAINTS>;

        $z13 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r34, $r39);

        if $z13 == 0 goto label17;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Policy Constraints Extension");

        goto label04;

     label17:
        $r36 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r35 = <org.apache.harmony.security.x509.Extension: int[] EXTENDED_KEY_USAGE>;

        $z16 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r36, $r35);

        if $z16 == 0 goto label18;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extended Key Usage Extension");

        goto label04;

     label18:
        $r44 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r43 = <org.apache.harmony.security.x509.Extension: int[] INHIBIT_ANY_POLICY>;

        $z17 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r44, $r43);

        if $z17 == 0 goto label19;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inhibit Any-Policy Extension");

        goto label04;

     label19:
        $r40 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r41 = <org.apache.harmony.security.x509.Extension: int[] AUTHORITY_INFO_ACCESS>;

        $z15 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r40, $r41);

        if $z15 == 0 goto label20;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authority Information Access Extension");

        goto label04;

     label20:
        $r47 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r42 = <org.apache.harmony.security.x509.Extension: int[] SUBJECT_INFO_ACCESS>;

        $z20 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r47, $r42);

        if $z20 == 0 goto label21;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subject Information Access Extension");

        goto label04;

     label21:
        $r48 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r49 = <org.apache.harmony.security.x509.Extension: int[] INVALIDITY_DATE>;

        $z18 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r48, $r49);

        if $z18 == 0 goto label22;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalidity Date Extension");

        goto label04;

     label22:
        $r46 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r45 = <org.apache.harmony.security.x509.Extension: int[] CRL_NUMBER>;

        $z19 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r46, $r45);

        if $z19 == 0 goto label23;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CRL Number Extension");

        goto label04;

     label23:
        $r56 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r55 = <org.apache.harmony.security.x509.Extension: int[] REASON_CODE>;

        $z21 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r56, $r55);

        if $z21 == 0 goto label24;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reason Code Extension");

        goto label04;

     label24:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown Extension");

        goto label04;

     label25:
        $r73 := @caughtexception;

        goto label02;

        catch java.io.IOException from label01 to label02 with label25;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.harmony.security.x509.Extension r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        int[] $r3, $r4;
        byte[] $r5, $r6;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.harmony.security.x509.Extension;

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        r2 = (org.apache.harmony.security.x509.Extension) r1;

        $r4 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r3 = r2.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r4, $r3);

        if $z1 == 0 goto label1;

        $z3 = r0.<org.apache.harmony.security.x509.Extension: boolean critical>;

        $z2 = r2.<org.apache.harmony.security.x509.Extension: boolean critical>;

        if $z3 != $z2 goto label1;

        $r6 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r5 = r2.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $z4 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r6, $r5);

        if $z4 == 0 goto label1;

        return 1;
    }

    public org.apache.harmony.security.x509.BasicConstraints getBasicConstraintsValue()
    {
        org.apache.harmony.security.x509.Extension r0;
        boolean $z0, $z1;
        org.apache.harmony.security.x509.ExtensionValue $r2, $r3;
        org.apache.harmony.security.x509.BasicConstraints $r4;
        java.io.IOException $r5;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $z0 = r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z0 != 0 goto label2;

     label1:
        specialinvoke r0.<org.apache.harmony.security.x509.Extension: void decodeExtensionValue()>();

     label2:
        $r2 = r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        $z1 = $r2 instanceof org.apache.harmony.security.x509.BasicConstraints;

        if $z1 == 0 goto label3;

        $r3 = r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        $r4 = (org.apache.harmony.security.x509.BasicConstraints) $r3;

        return $r4;

     label3:
        return null;

     label4:
        $r5 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public boolean getCritical()
    {
        org.apache.harmony.security.x509.Extension r0;
        boolean $z0;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $z0 = r0.<org.apache.harmony.security.x509.Extension: boolean critical>;

        return $z0;
    }

    public org.apache.harmony.security.x509.ExtensionValue getDecodedExtensionValue() throws java.io.IOException
    {
        org.apache.harmony.security.x509.Extension r0;
        boolean $z0;
        org.apache.harmony.security.x509.ExtensionValue $r1;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $z0 = r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.harmony.security.x509.Extension: void decodeExtensionValue()>();

     label1:
        $r1 = r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        return $r1;
    }

    public byte[] getEncoded()
    {
        org.apache.harmony.security.x509.Extension r0;
        byte[] $r1, $r2, $r4;
        org.apache.harmony.security.asn1.ASN1Sequence $r3;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 = r0.<org.apache.harmony.security.x509.Extension: byte[] encoding>;

        if $r1 != null goto label1;

        $r3 = <org.apache.harmony.security.x509.Extension: org.apache.harmony.security.asn1.ASN1Sequence ASN1>;

        $r4 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1Sequence: byte[] encode(java.lang.Object)>(r0);

        r0.<org.apache.harmony.security.x509.Extension: byte[] encoding> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.Extension: byte[] encoding>;

        return $r2;
    }

    public java.lang.String getExtnID()
    {
        org.apache.harmony.security.x509.Extension r0;
        java.lang.String $r1, $r2, $r4;
        int[] $r3;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 = r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $r4 = staticinvoke <org.apache.harmony.security.asn1.ObjectIdentifier: java.lang.String toString(int[])>($r3);

        r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str> = $r4;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.Extension: java.lang.String extnID_str>;

        return $r2;
    }

    public byte[] getExtnValue()
    {
        org.apache.harmony.security.x509.Extension r0;
        byte[] $r1;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        return $r1;
    }

    public org.apache.harmony.security.x509.KeyUsage getKeyUsageValue()
    {
        org.apache.harmony.security.x509.Extension r0;
        boolean $z0, $z1;
        org.apache.harmony.security.x509.ExtensionValue $r2, $r3;
        org.apache.harmony.security.x509.KeyUsage $r4;
        java.io.IOException $r5;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $z0 = r0.<org.apache.harmony.security.x509.Extension: boolean valueDecoded>;

        if $z0 != 0 goto label2;

     label1:
        specialinvoke r0.<org.apache.harmony.security.x509.Extension: void decodeExtensionValue()>();

     label2:
        $r2 = r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        $z1 = $r2 instanceof org.apache.harmony.security.x509.KeyUsage;

        if $z1 == 0 goto label3;

        $r3 = r0.<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue extnValueObject>;

        $r4 = (org.apache.harmony.security.x509.KeyUsage) $r3;

        return $r4;

     label3:
        return null;

     label4:
        $r5 := @caughtexception;

        goto label2;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public byte[] getRawExtnValue()
    {
        org.apache.harmony.security.x509.Extension r0;
        byte[] $r1, $r2, $r4, $r5;
        org.apache.harmony.security.asn1.ASN1OctetString $r3;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 = r0.<org.apache.harmony.security.x509.Extension: byte[] rawExtnValue>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()>();

        $r4 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $r5 = virtualinvoke $r3.<org.apache.harmony.security.asn1.ASN1OctetString: byte[] encode(java.lang.Object)>($r4);

        r0.<org.apache.harmony.security.x509.Extension: byte[] rawExtnValue> = $r5;

     label1:
        $r2 = r0.<org.apache.harmony.security.x509.Extension: byte[] rawExtnValue>;

        return $r2;
    }

    public int hashCode()
    {
        org.apache.harmony.security.x509.Extension r0;
        int i0, $i2, $i3, $i4, $i5, $i6;
        byte b1;
        int[] $r1;
        boolean $z0;
        byte[] $r2;

        r0 := @this: org.apache.harmony.security.x509.Extension;

        $r1 = r0.<org.apache.harmony.security.x509.Extension: int[] extnID>;

        $i2 = staticinvoke <java.util.Arrays: int hashCode(int[])>($r1);

        i0 = 37 * $i2;

        $z0 = r0.<org.apache.harmony.security.x509.Extension: boolean critical>;

        if $z0 == 0 goto label2;

        b1 = 1;

     label1:
        $i3 = b1 + i0;

        $i4 = 37 * $i3;

        $r2 = r0.<org.apache.harmony.security.x509.Extension: byte[] extnValue>;

        $i5 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r2);

        $i6 = $i4 + $i5;

        return $i6;

     label2:
        b1 = 0;

        goto label1;
    }
}
