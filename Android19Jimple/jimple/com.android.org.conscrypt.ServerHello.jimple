public class com.android.org.conscrypt.ServerHello extends com.android.org.conscrypt.Message
{
    com.android.org.conscrypt.CipherSuite cipher_suite;
    byte compression_method;
    byte[] random;
    byte[] server_version;
    byte[] session_id;

    public void <init>(com.android.org.conscrypt.HandshakeIODataStream, int) throws java.io.IOException
    {
        com.android.org.conscrypt.ServerHello r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        int i0, i1, $i2, $i4, $i6, $i8, $i12, $i13, $i14, $i15;
        byte[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        byte $b3, $b5, $b9, $b10, $b11;
        com.android.org.conscrypt.CipherSuite $r9;

        r0 := @this: com.android.org.conscrypt.ServerHello;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        $r2 = newarray (byte)[2];

        r0.<com.android.org.conscrypt.ServerHello: byte[] server_version> = $r2;

        $r3 = newarray (byte)[32];

        r0.<com.android.org.conscrypt.ServerHello: byte[] random> = $r3;

        $r4 = r0.<com.android.org.conscrypt.ServerHello: byte[] server_version>;

        $i2 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        $b3 = (byte) $i2;

        $r4[0] = $b3;

        $r5 = r0.<com.android.org.conscrypt.ServerHello: byte[] server_version>;

        $i4 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        $b5 = (byte) $i4;

        $r5[1] = $b5;

        $r6 = r0.<com.android.org.conscrypt.ServerHello: byte[] random>;

        staticinvoke <libcore.io.Streams: void readFully(java.io.InputStream,byte[])>(r1, $r6);

        i1 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int readUint8()>();

        $r8 = newarray (byte)[i1];

        r0.<com.android.org.conscrypt.ServerHello: byte[] session_id> = $r8;

        $r7 = r0.<com.android.org.conscrypt.ServerHello: byte[] session_id>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read(byte[],int,int)>($r7, 0, i1);

        $i6 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        $b9 = (byte) $i6;

        $i8 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        $b10 = (byte) $i8;

        $r9 = staticinvoke <com.android.org.conscrypt.CipherSuite: com.android.org.conscrypt.CipherSuite getByCode(byte,byte)>($b9, $b10);

        r0.<com.android.org.conscrypt.ServerHello: com.android.org.conscrypt.CipherSuite cipher_suite> = $r9;

        $i12 = virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: int read()>();

        $b11 = (byte) $i12;

        r0.<com.android.org.conscrypt.ServerHello: byte compression_method> = $b11;

        $r10 = r0.<com.android.org.conscrypt.ServerHello: byte[] session_id>;

        $i13 = lengthof $r10;

        $i15 = 38 + $i13;

        r0.<com.android.org.conscrypt.ServerHello: int length> = $i15;

        $i14 = r0.<com.android.org.conscrypt.ServerHello: int length>;

        if $i14 == i0 goto label1;

        virtualinvoke r0.<com.android.org.conscrypt.ServerHello: void fatalAlert(byte,java.lang.String)>(50, "DECODE ERROR: incorrect ServerHello");

     label1:
        return;
    }

    public void <init>(java.security.SecureRandom, byte[], byte[], com.android.org.conscrypt.CipherSuite, byte)
    {
        com.android.org.conscrypt.ServerHello r0;
        java.security.SecureRandom r1;
        byte[] r2, r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12;
        com.android.org.conscrypt.CipherSuite r4;
        byte b0, $b6, $b9, $b14, $b17;
        long l1, $l2, $l3, $l4, $l7, $l8, $l11, $l13, $l16;
        java.util.Date $r7;
        int $i5, $i10, $i12, $i15, $i18, $i19;

        r0 := @this: com.android.org.conscrypt.ServerHello;

        r1 := @parameter0: java.security.SecureRandom;

        r2 := @parameter1: byte[];

        r3 := @parameter2: byte[];

        r4 := @parameter3: com.android.org.conscrypt.CipherSuite;

        b0 := @parameter4: byte;

        specialinvoke r0.<com.android.org.conscrypt.Message: void <init>()>();

        $r5 = newarray (byte)[2];

        r0.<com.android.org.conscrypt.ServerHello: byte[] server_version> = $r5;

        $r6 = newarray (byte)[32];

        r0.<com.android.org.conscrypt.ServerHello: byte[] random> = $r6;

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>()>();

        $l2 = virtualinvoke $r7.<java.util.Date: long getTime()>();

        l1 = $l2 / 1000L;

        $r8 = r0.<com.android.org.conscrypt.ServerHello: byte[] random>;

        virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>($r8);

        $r9 = r0.<com.android.org.conscrypt.ServerHello: byte[] random>;

        $l3 = -16777216L & l1;

        $l4 = $l3 >>> 24;

        $i5 = (int) $l4;

        $b6 = (byte) $i5;

        $r9[0] = $b6;

        $r10 = r0.<com.android.org.conscrypt.ServerHello: byte[] random>;

        $l8 = 16711680L & l1;

        $l7 = $l8 >>> 16;

        $i10 = (int) $l7;

        $b9 = (byte) $i10;

        $r10[1] = $b9;

        $r11 = r0.<com.android.org.conscrypt.ServerHello: byte[] random>;

        $l11 = 65280L & l1;

        $l13 = $l11 >>> 8;

        $i12 = (int) $l13;

        $b14 = (byte) $i12;

        $r11[2] = $b14;

        $r12 = r0.<com.android.org.conscrypt.ServerHello: byte[] random>;

        $l16 = 255L & l1;

        $i15 = (int) $l16;

        $b17 = (byte) $i15;

        $r12[3] = $b17;

        r0.<com.android.org.conscrypt.ServerHello: byte[] session_id> = r3;

        r0.<com.android.org.conscrypt.ServerHello: com.android.org.conscrypt.CipherSuite cipher_suite> = r4;

        r0.<com.android.org.conscrypt.ServerHello: byte compression_method> = b0;

        r0.<com.android.org.conscrypt.ServerHello: byte[] server_version> = r2;

        $i18 = lengthof r3;

        $i19 = 38 + $i18;

        r0.<com.android.org.conscrypt.ServerHello: int length> = $i19;

        return;
    }

    public byte[] getRandom()
    {
        com.android.org.conscrypt.ServerHello r0;
        byte[] $r1;

        r0 := @this: com.android.org.conscrypt.ServerHello;

        $r1 = r0.<com.android.org.conscrypt.ServerHello: byte[] random>;

        return $r1;
    }

    public int getType()
    {
        com.android.org.conscrypt.ServerHello r0;

        r0 := @this: com.android.org.conscrypt.ServerHello;

        return 2;
    }

    public void send(com.android.org.conscrypt.HandshakeIODataStream)
    {
        com.android.org.conscrypt.ServerHello r0;
        com.android.org.conscrypt.HandshakeIODataStream r1;
        byte[] $r2, $r3, $r4, $r5, $r7, $r8;
        int $i0, $i3, $i4;
        long $l1;
        com.android.org.conscrypt.CipherSuite $r6;
        byte $b2;

        r0 := @this: com.android.org.conscrypt.ServerHello;

        r1 := @parameter0: com.android.org.conscrypt.HandshakeIODataStream;

        $r2 = r0.<com.android.org.conscrypt.ServerHello: byte[] server_version>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r2);

        $r3 = r0.<com.android.org.conscrypt.ServerHello: byte[] random>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r3);

        $r4 = r0.<com.android.org.conscrypt.ServerHello: byte[] session_id>;

        $i0 = lengthof $r4;

        $l1 = (long) $i0;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void writeUint8(long)>($l1);

        $r5 = r0.<com.android.org.conscrypt.ServerHello: byte[] session_id>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r5);

        $r6 = r0.<com.android.org.conscrypt.ServerHello: com.android.org.conscrypt.CipherSuite cipher_suite>;

        $r7 = virtualinvoke $r6.<com.android.org.conscrypt.CipherSuite: byte[] toBytes()>();

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte[])>($r7);

        $b2 = r0.<com.android.org.conscrypt.ServerHello: byte compression_method>;

        virtualinvoke r1.<com.android.org.conscrypt.HandshakeIODataStream: void write(byte)>($b2);

        $r8 = r0.<com.android.org.conscrypt.ServerHello: byte[] session_id>;

        $i3 = lengthof $r8;

        $i4 = 38 + $i3;

        r0.<com.android.org.conscrypt.ServerHello: int length> = $i4;

        return;
    }
}
