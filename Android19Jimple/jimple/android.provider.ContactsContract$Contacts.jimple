public class android.provider.ContactsContract$Contacts extends java.lang.Object implements android.provider.BaseColumns, android.provider.ContactsContract$ContactsColumns, android.provider.ContactsContract$ContactOptionsColumns, android.provider.ContactsContract$ContactNameColumns, android.provider.ContactsContract$ContactStatusColumns
{
    public static final android.net.Uri CONTENT_FILTER_URI;
    public static final android.net.Uri CONTENT_FREQUENT_URI;
    public static final android.net.Uri CONTENT_GROUP_URI;
    public static final java.lang.String CONTENT_ITEM_TYPE;
    public static final android.net.Uri CONTENT_LOOKUP_URI;
    public static final android.net.Uri CONTENT_MULTI_VCARD_URI;
    public static final android.net.Uri CONTENT_STREQUENT_FILTER_URI;
    public static final android.net.Uri CONTENT_STREQUENT_URI;
    public static final java.lang.String CONTENT_TYPE;
    public static final android.net.Uri CONTENT_URI;
    public static final java.lang.String CONTENT_VCARD_TYPE;
    public static final android.net.Uri CONTENT_VCARD_URI;
    public static final java.lang.String QUERY_PARAMETER_VCARD_NO_PHOTO;

    static void <clinit>()
    {
        android.net.Uri $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        <android.provider.ContactsContract$Contacts: java.lang.String QUERY_PARAMETER_VCARD_NO_PHOTO> = "nophoto";

        <android.provider.ContactsContract$Contacts: java.lang.String CONTENT_VCARD_TYPE> = "text/x-vcard";

        <android.provider.ContactsContract$Contacts: java.lang.String CONTENT_TYPE> = "vnd.android.cursor.dir/contact";

        <android.provider.ContactsContract$Contacts: java.lang.String CONTENT_ITEM_TYPE> = "vnd.android.cursor.item/contact";

        $r0 = <android.provider.ContactsContract: android.net.Uri AUTHORITY_URI>;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r0, "contacts");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI> = $r1;

        $r2 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r2, "lookup");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_LOOKUP_URI> = $r3;

        $r4 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r5 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r4, "as_vcard");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_VCARD_URI> = $r5;

        $r6 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r7 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r6, "as_multi_vcard");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_MULTI_VCARD_URI> = $r7;

        $r8 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r9 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r8, "filter");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_FILTER_URI> = $r9;

        $r10 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r11 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r10, "strequent");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_URI> = $r11;

        $r12 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r13 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r12, "frequent");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_FREQUENT_URI> = $r13;

        $r14 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_URI>;

        $r15 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r14, "filter");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_STREQUENT_FILTER_URI> = $r15;

        $r17 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $r16 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r17, "group");

        <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_GROUP_URI> = $r16;

        return;
    }

    private void <init>()
    {
        android.provider.ContactsContract$Contacts r0;

        r0 := @this: android.provider.ContactsContract$Contacts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri getLookupUri(long, java.lang.String)
    {
        long l0;
        java.lang.String r0;
        android.net.Uri $r1, $r2, $r3;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        $r1 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_LOOKUP_URI>;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r1, r0);

        $r3 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r2, l0);

        return $r3;
    }

    public static android.net.Uri getLookupUri(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r5;
        android.database.Cursor r2;
        java.lang.Throwable r3, $r7;
        java.lang.String r4;
        java.lang.String[] $r6;
        boolean $z0;
        long $l0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = "lookup";

        $r6[1] = "_id";

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r6, null, null, null);

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(0);

        $l0 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(1);

        r5 = staticinvoke <android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>($l0, r4);

     label2:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return r5;

     label3:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return null;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public static android.net.Uri lookupContact(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r4, $r6;
        android.database.Cursor r2;
        java.lang.Throwable r3, $r7;
        long l0;
        java.lang.String[] $r5;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "_id";

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r5, null, null, null);

        if r2 == null goto label1;

     label3:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label5;

        l0 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        $r6 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        r4 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r6, l0);

     label4:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return r4;

     label5:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return null;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r3;

        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public static void markAsContacted(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0, $l1;
        android.net.Uri r1, $r3;
        android.content.ContentValues r2, $r4;
        java.lang.Long $r5;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        $r3 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r3, l0);

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        r2 = $r4;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("last_time_contacted", $r5);

        virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r1, r2, null, null);

        return;
    }

    public static java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.io.InputStream $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        $r2 = staticinvoke <android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver, android.net.Uri, boolean)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r2, r7;
        boolean z0, z1;
        java.io.InputStream r3;
        android.database.Cursor r4;
        java.lang.Throwable r5, $r14;
        byte[] r6;
        java.io.FileInputStream r9;
        java.lang.String[] $r10;
        java.io.ByteArrayInputStream $r11;
        android.content.res.AssetFileDescriptor $r12;
        java.io.IOException $r13;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label05;

        r7 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r1, "display_photo");

     label01:
        $r12 = virtualinvoke r0.<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>(r7, "r");

        r9 = virtualinvoke $r12.<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>();

     label02:
        r3 = r9;

     label03:
        return r3;

     label04:
        $r13 := @caughtexception;

     label05:
        r2 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>(r1, "photo");

        r3 = null;

        if r2 == null goto label03;

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = "data15";

        r4 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, $r10, null, null, null);

        if r4 == null goto label08;

     label06:
        z1 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

     label07:
        if z1 != 0 goto label09;

     label08:
        r3 = null;

        if r4 == null goto label03;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return null;

     label09:
        r6 = interfaceinvoke r4.<android.database.Cursor: byte[] getBlob(int)>(0);

     label10:
        if r6 != null goto label11;

        r3 = null;

        if r4 == null goto label03;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return null;

     label11:
        $r11 = new java.io.ByteArrayInputStream;

        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>(r6);

        r3 = $r11;

     label12:
        if r4 == null goto label03;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return r3;

     label13:
        $r14 := @caughtexception;

        r5 = $r14;

        if r4 == null goto label14;

        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label14:
        throw r5;

        catch java.io.IOException from label01 to label02 with label04;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }
}
