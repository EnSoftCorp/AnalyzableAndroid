final class com.android.server.power.DisplayPowerState$PhotonicModulator extends java.lang.Object
{
    private static final int INITIAL_BACKLIGHT;
    private static final boolean INITIAL_SCREEN_ON;
    private int mActualBacklight;
    private boolean mActualOn;
    private boolean mChangeInProgress;
    private final java.lang.Object mLock;
    private int mPendingBacklight;
    private boolean mPendingOn;
    private final java.lang.Runnable mTask;
    final com.android.server.power.DisplayPowerState this$0;

    private void <init>(com.android.server.power.DisplayPowerState)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        com.android.server.power.DisplayPowerState r1;
        java.lang.Object $r2;
        com.android.server.power.DisplayPowerState$PhotonicModulator$1 $r3;

        r0 := @this: com.android.server.power.DisplayPowerState$PhotonicModulator;

        r1 := @parameter0: com.android.server.power.DisplayPowerState;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: com.android.server.power.DisplayPowerState this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: java.lang.Object mLock> = $r2;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mPendingOn> = 0;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: int mPendingBacklight> = -1;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mActualOn> = 0;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: int mActualBacklight> = -1;

        $r3 = new com.android.server.power.DisplayPowerState$PhotonicModulator$1;

        specialinvoke $r3.<com.android.server.power.DisplayPowerState$PhotonicModulator$1: void <init>(com.android.server.power.DisplayPowerState$PhotonicModulator)>(r0);

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: java.lang.Runnable mTask> = $r3;

        return;
    }

    void <init>(com.android.server.power.DisplayPowerState, com.android.server.power.DisplayPowerState$1)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        com.android.server.power.DisplayPowerState r1;
        com.android.server.power.DisplayPowerState$1 r2;

        r0 := @this: com.android.server.power.DisplayPowerState$PhotonicModulator;

        r1 := @parameter0: com.android.server.power.DisplayPowerState;

        r2 := @parameter1: com.android.server.power.DisplayPowerState$1;

        specialinvoke r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: void <init>(com.android.server.power.DisplayPowerState)>(r1);

        return;
    }

    static java.lang.Object access$1300(com.android.server.power.DisplayPowerState$PhotonicModulator)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.power.DisplayPowerState$PhotonicModulator;

        $r1 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: java.lang.Object mLock>;

        return $r1;
    }

    static boolean access$1400(com.android.server.power.DisplayPowerState$PhotonicModulator)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.power.DisplayPowerState$PhotonicModulator;

        $z0 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mPendingOn>;

        return $z0;
    }

    static boolean access$1500(com.android.server.power.DisplayPowerState$PhotonicModulator)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.power.DisplayPowerState$PhotonicModulator;

        $z0 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mActualOn>;

        return $z0;
    }

    static boolean access$1502(com.android.server.power.DisplayPowerState$PhotonicModulator, boolean)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        boolean z0;

        r0 := @parameter0: com.android.server.power.DisplayPowerState$PhotonicModulator;

        z0 := @parameter1: boolean;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mActualOn> = z0;

        return z0;
    }

    static int access$1600(com.android.server.power.DisplayPowerState$PhotonicModulator)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        int $i0;

        r0 := @parameter0: com.android.server.power.DisplayPowerState$PhotonicModulator;

        $i0 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: int mPendingBacklight>;

        return $i0;
    }

    static int access$1700(com.android.server.power.DisplayPowerState$PhotonicModulator)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        int $i0;

        r0 := @parameter0: com.android.server.power.DisplayPowerState$PhotonicModulator;

        $i0 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: int mActualBacklight>;

        return $i0;
    }

    static int access$1702(com.android.server.power.DisplayPowerState$PhotonicModulator, int)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        int i0;

        r0 := @parameter0: com.android.server.power.DisplayPowerState$PhotonicModulator;

        i0 := @parameter1: int;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: int mActualBacklight> = i0;

        return i0;
    }

    static boolean access$1802(com.android.server.power.DisplayPowerState$PhotonicModulator, boolean)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        boolean z0;

        r0 := @parameter0: com.android.server.power.DisplayPowerState$PhotonicModulator;

        z0 := @parameter1: boolean;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mChangeInProgress> = z0;

        return z0;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        java.io.PrintWriter r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20;
        boolean $z0, $z1, $z2;
        java.lang.String $r5, $r9, $r14, $r16, $r21;
        int $i0, $i1;

        r0 := @this: com.android.server.power.DisplayPowerState$PhotonicModulator;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Photonic Modulator State:");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPendingOn=");

        $z0 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mPendingOn>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mPendingBacklight=");

        $i0 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: int mPendingBacklight>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mActualOn=");

        $z1 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mActualOn>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mActualBacklight=");

        $i1 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: int mActualBacklight>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mChangeInProgress=");

        $z2 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mChangeInProgress>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

        return;
    }

    public boolean setState(boolean, int)
    {
        com.android.server.power.DisplayPowerState$PhotonicModulator r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, $i2;
        java.lang.Object r1;
        java.lang.Throwable r2, $r11;
        java.lang.Runnable $r3;
        java.util.concurrent.Executor $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.power.DisplayPowerState$PhotonicModulator;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        z1 = 1;

        r1 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $z2 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mPendingOn>;

        if z0 != $z2 goto label02;

        $i2 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: int mPendingBacklight>;

        if i0 == $i2 goto label04;

     label02:
        $z3 = staticinvoke <com.android.server.power.DisplayPowerState: boolean access$600()>();

        if $z3 == 0 goto label03;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requesting new screen state: on=");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", backlight=");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("DisplayPowerState", $r10);

     label03:
        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mPendingOn> = z0;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: int mPendingBacklight> = i0;

        $z4 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mChangeInProgress>;

        if $z4 != 0 goto label04;

        r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mChangeInProgress> = 1;

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r3 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: java.lang.Runnable mTask>;

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

     label04:
        $z5 = r0.<com.android.server.power.DisplayPowerState$PhotonicModulator: boolean mChangeInProgress>;

        if $z5 != 0 goto label10;

     label05:
        exitmonitor r1;

     label06:
        return z1;

     label07:
        $r11 := @caughtexception;

        r2 = $r11;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        z1 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    public static void <clinit>()
    {
        <com.android.server.power.DisplayPowerState$PhotonicModulator: int INITIAL_BACKLIGHT> = -1;

        return;
    }
}
