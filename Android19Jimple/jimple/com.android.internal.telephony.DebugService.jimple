public class com.android.internal.telephony.DebugService extends java.lang.Object
{
    private static java.lang.String TAG;

    static void <clinit>()
    {
        <com.android.internal.telephony.DebugService: java.lang.String TAG> = "DebugService";

        return;
    }

    public void <init>()
    {
        com.android.internal.telephony.DebugService r0;

        r0 := @this: com.android.internal.telephony.DebugService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.android.internal.telephony.DebugService: void log(java.lang.String)>("DebugService:");

        return;
    }

    private static void log(java.lang.String)
    {
        java.lang.String r0, $r2, $r5;
        java.lang.StringBuilder $r1, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.internal.telephony.DebugService: java.lang.String TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DebugService ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>($r2, $r5);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.internal.telephony.DebugService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.Exception r4, r6, r8, r9, r10, r11, r12, r13, r14, $r24, $r26, $r27, $r28, $r29, $r31, $r33, $r40, $r41;
        com.android.internal.telephony.PhoneProxy r5;
        com.android.internal.telephony.PhoneBase r7;
        com.android.internal.telephony.Phone $r15, $r17;
        com.android.internal.telephony.dataconnection.DcTrackerBase $r16;
        com.android.internal.telephony.CallTracker $r18;
        com.android.internal.telephony.ServiceStateTracker $r19;
        com.android.internal.telephony.RIL $r20;
        com.android.internal.telephony.CommandsInterface $r21;
        com.android.internal.telephony.IccCard $r22;
        com.android.internal.telephony.uicc.UiccController $r23;
        com.android.internal.telephony.uicc.IccCardProxy $r25;
        java.lang.StringBuilder $r30, $r34, $r35, $r36, $r38, $r39;
        java.lang.String $r32, $r37;

        r0 := @this: com.android.internal.telephony.DebugService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        staticinvoke <com.android.internal.telephony.DebugService: void log(java.lang.String)>("dump: +");

     label01:
        $r15 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getDefaultPhone()>();

        r5 = (com.android.internal.telephony.PhoneProxy) $r15;

     label02:
        $r17 = virtualinvoke r5.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone getActivePhone()>();

        r7 = (com.android.internal.telephony.PhoneBase) $r17;

     label03:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

     label04:
        virtualinvoke r7.<com.android.internal.telephony.PhoneBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

     label05:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

     label06:
        $r16 = r7.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.dataconnection.DcTrackerBase mDcTracker>;

        virtualinvoke $r16.<com.android.internal.telephony.dataconnection.DcTrackerBase: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

     label07:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

     label08:
        $r19 = virtualinvoke r7.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.ServiceStateTracker getServiceStateTracker()>();

        virtualinvoke $r19.<com.android.internal.telephony.ServiceStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

     label09:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

     label10:
        $r18 = virtualinvoke r7.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CallTracker getCallTracker()>();

        virtualinvoke $r18.<com.android.internal.telephony.CallTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

     label11:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

     label12:
        $r21 = r7.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        $r20 = (com.android.internal.telephony.RIL) $r21;

        virtualinvoke $r20.<com.android.internal.telephony.RIL: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

     label13:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

     label14:
        $r23 = staticinvoke <com.android.internal.telephony.uicc.UiccController: com.android.internal.telephony.uicc.UiccController getInstance()>();

        virtualinvoke $r23.<com.android.internal.telephony.uicc.UiccController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

     label15:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

     label16:
        $r22 = virtualinvoke r5.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccCard getIccCard()>();

        $r25 = (com.android.internal.telephony.uicc.IccCardProxy) $r22;

        virtualinvoke $r25.<com.android.internal.telephony.uicc.IccCardProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

     label17:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("++++++++++++++++++++++++++++++++");

        staticinvoke <com.android.internal.telephony.DebugService: void log(java.lang.String)>("dump: -");

        return;

     label18:
        $r31 := @caughtexception;

        r4 = $r31;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Telephony DebugService: Could not getDefaultPhone e=");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        return;

     label19:
        $r33 := @caughtexception;

        r6 = $r33;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Telephony DebugService: Could not PhoneBase e=");

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37);

        return;

     label20:
        $r40 := @caughtexception;

        r8 = $r40;

        virtualinvoke r8.<java.lang.Exception: void printStackTrace()>();

        goto label05;

     label21:
        $r27 := @caughtexception;

        r9 = $r27;

        virtualinvoke r9.<java.lang.Exception: void printStackTrace()>();

        goto label07;

     label22:
        $r26 := @caughtexception;

        r10 = $r26;

        virtualinvoke r10.<java.lang.Exception: void printStackTrace()>();

        goto label09;

     label23:
        $r41 := @caughtexception;

        r11 = $r41;

        virtualinvoke r11.<java.lang.Exception: void printStackTrace()>();

        goto label11;

     label24:
        $r29 := @caughtexception;

        r12 = $r29;

        virtualinvoke r12.<java.lang.Exception: void printStackTrace()>();

        goto label13;

     label25:
        $r28 := @caughtexception;

        r13 = $r28;

        virtualinvoke r13.<java.lang.Exception: void printStackTrace()>();

        goto label15;

     label26:
        $r24 := @caughtexception;

        r14 = $r24;

        virtualinvoke r14.<java.lang.Exception: void printStackTrace()>();

        goto label17;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label02 to label03 with label19;
        catch java.lang.Exception from label04 to label05 with label20;
        catch java.lang.Exception from label06 to label07 with label21;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.lang.Exception from label10 to label11 with label23;
        catch java.lang.Exception from label12 to label13 with label24;
        catch java.lang.Exception from label14 to label15 with label25;
        catch java.lang.Exception from label16 to label17 with label26;
    }
}
