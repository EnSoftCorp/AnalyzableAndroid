public class org.apache.xalan.templates.ElemElement extends org.apache.xalan.templates.ElemUse
{
    static final long serialVersionUID;
    protected org.apache.xalan.templates.AVT m_name_avt;
    protected org.apache.xalan.templates.AVT m_namespace_avt;

    public void <init>()
    {
        org.apache.xalan.templates.ElemElement r0;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void <init>()>();

        r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt> = null;

        r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt> = null;

        return;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean z0;
        org.apache.xalan.templates.AVT $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label2;

        $r2 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        if $r2 == null goto label1;

        $r5 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        virtualinvoke $r5.<org.apache.xalan.templates.AVT: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label1:
        $r3 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        if $r3 == null goto label2;

        $r4 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        virtualinvoke $r4.<org.apache.xalan.templates.AVT: void callVisitors(org.apache.xalan.templates.XSLTVisitor)>(r1);

     label2:
        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, z0);

        return;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        org.apache.xalan.templates.StylesheetRoot$ComposeState r2;
        java.util.Vector r3;
        org.apache.xalan.templates.AVT $r4, $r5, $r6, $r7;
        int $i0, $i1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        r2 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        r3 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r4 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        if $r4 == null goto label1;

        $r7 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        $i1 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r7.<org.apache.xalan.templates.AVT: void fixupVariables(java.util.Vector,int)>(r3, $i1);

     label1:
        $r5 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        if $r5 == null goto label2;

        $r6 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        $i0 = virtualinvoke r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r6.<org.apache.xalan.templates.AVT: void fixupVariables(java.util.Vector,int)>(r3, $i0);

     label2:
        return;
    }

    void constructNode(java.lang.String, java.lang.String, java.lang.String, org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemElement r0;
        java.lang.String r1, r2, r3, $r7, $r8;
        org.apache.xalan.transformer.TransformerImpl r4;
        org.xml.sax.SAXException r5, $r9;
        org.apache.xml.serializer.SerializationHandler r6;
        boolean z0;
        javax.xml.transform.TransformerException $r10;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.xalan.transformer.TransformerImpl;

     label01:
        r6 = virtualinvoke r4.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

     label02:
        if r1 != null goto label09;

        z0 = 0;

     label03:
        virtualinvoke r4.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r0, z0);

     label04:
        if r1 == null goto label14;

     label05:
        $r8 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r1);

        interfaceinvoke r6.<org.apache.xml.serializer.SerializationHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r3, $r8, r1);

     label06:
        if r2 == null goto label14;

     label07:
        interfaceinvoke r6.<org.apache.xml.serializer.SerializationHandler: void endPrefixMapping(java.lang.String)>(r2);

     label08:
        return;

     label09:
        if r2 == null goto label11;

     label10:
        interfaceinvoke r6.<org.apache.xml.serializer.SerializationHandler: boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)>(r2, r3, 1);

     label11:
        $r7 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r1);

        interfaceinvoke r6.<org.apache.xml.serializer.SerializationHandler: void startElement(java.lang.String,java.lang.String,java.lang.String)>(r3, $r7, r1);

        specialinvoke r0.<org.apache.xalan.templates.ElemUse: void execute(org.apache.xalan.transformer.TransformerImpl)>(r4);

     label12:
        z0 = 1;

        goto label03;

     label13:
        $r9 := @caughtexception;

        r5 = $r9;

        $r10 = new javax.xml.transform.TransformerException;

        specialinvoke $r10.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r5);

        throw $r10;

     label14:
        return;

        catch org.xml.sax.SAXException from label01 to label02 with label13;
        catch org.xml.sax.SAXException from label03 to label04 with label13;
        catch org.xml.sax.SAXException from label05 to label06 with label13;
        catch org.xml.sax.SAXException from label07 to label08 with label13;
        catch org.xml.sax.SAXException from label10 to label11 with label13;
        catch org.xml.sax.SAXException from label11 to label12 with label13;
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xml.serializer.SerializationHandler r2;
        org.apache.xpath.XPathContext r3;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r4, r5, r6, $r19;
        org.apache.xalan.templates.AVT $r8, $r9, $r10, $r13, $r20;
        java.lang.Object[] $r11, $r22, $r23;
        org.apache.xalan.transformer.MsgMgr $r12, $r14, $r21, $r25;
        java.lang.StringBuilder $r15, $r16, $r17, $r18;
        boolean $z0, $z1;
        java.lang.Exception $r24;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

        r3 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        i0 = virtualinvoke r3.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        $r8 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        if $r8 != null goto label03;

        r4 = null;

     label01:
        r5 = null;

        r6 = "";

        if r4 == null goto label04;

        $r20 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        $z0 = virtualinvoke $r20.<org.apache.xalan.templates.AVT: boolean isSimple()>();

        if $z0 != 0 goto label04;

        $z1 = staticinvoke <org.apache.xml.utils.XML11Char: boolean isXML11ValidQName(java.lang.String)>(r4);

        if $z1 != 0 goto label04;

        $r21 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r22 = newarray (java.lang.Object)[2];

        $r22[0] = "name";

        $r22[1] = r4;

        virtualinvoke $r21.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r0, "WG_ILLEGAL_ATTRIBUTE_VALUE", $r22);

        r4 = null;

     label02:
        virtualinvoke r0.<org.apache.xalan.templates.ElemElement: void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)>(r4, r5, r6, r1);

        return;

     label03:
        $r9 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        r4 = virtualinvoke $r9.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r3, i0, r0);

        goto label01;

     label04:
        r5 = null;

        if r4 == null goto label02;

        r5 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getPrefixPart(java.lang.String)>(r4);

        $r10 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        if $r10 == null goto label09;

        $r13 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        r6 = virtualinvoke $r13.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r3, i0, r0);

        if r6 == null goto label05;

        if r5 == null goto label06;

        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i4 <= 0 goto label06;

        $i3 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i3 != 0 goto label06;

     label05:
        $r14 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        virtualinvoke $r14.<org.apache.xalan.transformer.MsgMgr: void error(javax.xml.transform.SourceLocator,java.lang.String)>(r0, "ER_NULL_URI_NAMESPACE");

        goto label02;

     label06:
        r5 = virtualinvoke r0.<org.apache.xalan.templates.ElemElement: java.lang.String resolvePrefix(org.apache.xml.serializer.SerializationHandler,java.lang.String,java.lang.String)>(r2, r5, r6);

        if r5 != null goto label07;

        r5 = "";

     label07:
        $i2 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i2 <= 0 goto label08;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r19 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r4);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label08:
        r4 = staticinvoke <org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)>(r4);

        goto label02;

     label09:
        r6 = virtualinvoke r0.<org.apache.xalan.templates.ElemElement: java.lang.String getNamespaceForPrefix(java.lang.String)>(r5);

     label10:
        if r6 != null goto label13;

     label11:
        $i1 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i1 != 0 goto label13;

     label12:
        r6 = "";

        goto label02;

     label13:
        if r6 != null goto label02;

     label14:
        $r12 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r5;

        virtualinvoke $r12.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r0, "WG_COULD_NOT_RESOLVE_PREFIX", $r11);

     label15:
        r4 = null;

        goto label02;

     label16:
        $r24 := @caughtexception;

        $r25 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()>();

        $r23 = newarray (java.lang.Object)[1];

        $r23[0] = r5;

        virtualinvoke $r25.<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])>(r0, "WG_COULD_NOT_RESOLVE_PREFIX", $r23);

        r4 = null;

        goto label02;

        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.Exception from label11 to label12 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    public org.apache.xalan.templates.AVT getName()
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.AVT $r1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        $r1 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt>;

        return $r1;
    }

    public org.apache.xalan.templates.AVT getNamespace()
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.AVT $r1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        $r1 = r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt>;

        return $r1;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemElement r0;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        return "element";
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemElement r0;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        return 46;
    }

    protected java.lang.String resolvePrefix(org.apache.xml.serializer.SerializationHandler, java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xml.serializer.SerializationHandler r1;
        java.lang.String r2, r3;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return r2;
    }

    public void setName(org.apache.xalan.templates.AVT)
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.AVT r1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xalan.templates.AVT;

        r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_name_avt> = r1;

        return;
    }

    public void setNamespace(org.apache.xalan.templates.AVT)
    {
        org.apache.xalan.templates.ElemElement r0;
        org.apache.xalan.templates.AVT r1;

        r0 := @this: org.apache.xalan.templates.ElemElement;

        r1 := @parameter0: org.apache.xalan.templates.AVT;

        r0.<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT m_namespace_avt> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemElement: long serialVersionUID> = -324619535592435183L;

        return;
    }
}
