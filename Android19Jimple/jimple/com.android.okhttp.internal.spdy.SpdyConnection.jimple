public final class com.android.okhttp.internal.spdy.SpdyConnection extends java.lang.Object implements java.io.Closeable
{
    static final boolean $assertionsDisabled;
    static final int FLAG_FIN;
    static final int FLAG_UNIDIRECTIONAL;
    static final int GOAWAY_INTERNAL_ERROR;
    static final int GOAWAY_OK;
    static final int GOAWAY_PROTOCOL_ERROR;
    static final int TYPE_CREDENTIAL;
    static final int TYPE_DATA;
    static final int TYPE_GOAWAY;
    static final int TYPE_HEADERS;
    static final int TYPE_NOOP;
    static final int TYPE_PING;
    static final int TYPE_RST_STREAM;
    static final int TYPE_SETTINGS;
    static final int TYPE_SYN_REPLY;
    static final int TYPE_SYN_STREAM;
    static final int TYPE_WINDOW_UPDATE;
    static final int VERSION;
    private static final java.util.concurrent.ExecutorService executor;
    final boolean client;
    private final com.android.okhttp.internal.spdy.IncomingStreamHandler handler;
    private final java.lang.String hostName;
    private long idleStartTimeNs;
    private int lastGoodStreamId;
    private int nextPingId;
    private int nextStreamId;
    private java.util.Map pings;
    com.android.okhttp.internal.spdy.Settings settings;
    private boolean shutdown;
    private final com.android.okhttp.internal.spdy.SpdyReader spdyReader;
    private final com.android.okhttp.internal.spdy.SpdyWriter spdyWriter;
    private final java.util.Map streams;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;
        java.util.concurrent.ThreadPoolExecutor $r1;
        java.util.concurrent.SynchronousQueue $r2;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.ThreadFactory $r4;

        <com.android.okhttp.internal.spdy.SpdyConnection: int VERSION> = 3;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_WINDOW_UPDATE> = 9;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_SYN_STREAM> = 1;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_SYN_REPLY> = 2;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_SETTINGS> = 4;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_RST_STREAM> = 3;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_PING> = 6;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_NOOP> = 5;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_HEADERS> = 8;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_GOAWAY> = 7;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_DATA> = 0;

        <com.android.okhttp.internal.spdy.SpdyConnection: int TYPE_CREDENTIAL> = 16;

        <com.android.okhttp.internal.spdy.SpdyConnection: int GOAWAY_PROTOCOL_ERROR> = 1;

        <com.android.okhttp.internal.spdy.SpdyConnection: int GOAWAY_OK> = 0;

        <com.android.okhttp.internal.spdy.SpdyConnection: int GOAWAY_INTERNAL_ERROR> = 2;

        <com.android.okhttp.internal.spdy.SpdyConnection: int FLAG_UNIDIRECTIONAL> = 2;

        <com.android.okhttp.internal.spdy.SpdyConnection: int FLAG_FIN> = 1;

        $r0 = class "com/android/okhttp/internal/spdy/SpdyConnection";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.okhttp.internal.spdy.SpdyConnection: boolean $assertionsDisabled> = z0;

        $r1 = new java.util.concurrent.ThreadPoolExecutor;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r2 = new java.util.concurrent.SynchronousQueue;

        specialinvoke $r2.<java.util.concurrent.SynchronousQueue: void <init>()>();

        $r4 = staticinvoke <com.android.okhttp.internal.Util: java.util.concurrent.ThreadFactory daemonThreadFactory(java.lang.String)>("OkHttp SpdyConnection");

        specialinvoke $r1.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)>(0, 2147483647, 60L, $r3, $r2, $r4);

        <com.android.okhttp.internal.spdy.SpdyConnection: java.util.concurrent.ExecutorService executor> = $r1;

        return;

     label2:
        z0 = 0;

        goto label1;

        return;
    }

    private void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Builder)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        com.android.okhttp.internal.spdy.SpdyConnection$Builder r1;
        byte b0, b1;
        java.util.HashMap $r2;
        long $l2;
        boolean $z0, $z1, $z2;
        com.android.okhttp.internal.spdy.IncomingStreamHandler $r3;
        com.android.okhttp.internal.spdy.SpdyReader $r4;
        java.io.InputStream $r5;
        com.android.okhttp.internal.spdy.SpdyWriter $r6;
        java.io.OutputStream $r7;
        java.lang.String $r8, $r12, $r14;
        java.lang.Thread $r9;
        java.lang.StringBuilder $r10, $r13, $r15;
        com.android.okhttp.internal.spdy.SpdyConnection$Reader $r11;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection$Builder;

        b0 = 1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams> = $r2;

        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: long idleStartTimeNs> = $l2;

        $z0 = r1.<com.android.okhttp.internal.spdy.SpdyConnection$Builder: boolean client>;

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: boolean client> = $z0;

        $r3 = staticinvoke <com.android.okhttp.internal.spdy.SpdyConnection$Builder: com.android.okhttp.internal.spdy.IncomingStreamHandler access$000(com.android.okhttp.internal.spdy.SpdyConnection$Builder)>(r1);

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.IncomingStreamHandler handler> = $r3;

        $r4 = new com.android.okhttp.internal.spdy.SpdyReader;

        $r5 = staticinvoke <com.android.okhttp.internal.spdy.SpdyConnection$Builder: java.io.InputStream access$100(com.android.okhttp.internal.spdy.SpdyConnection$Builder)>(r1);

        specialinvoke $r4.<com.android.okhttp.internal.spdy.SpdyReader: void <init>(java.io.InputStream)>($r5);

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyReader spdyReader> = $r4;

        $r6 = new com.android.okhttp.internal.spdy.SpdyWriter;

        $r7 = staticinvoke <com.android.okhttp.internal.spdy.SpdyConnection$Builder: java.io.OutputStream access$200(com.android.okhttp.internal.spdy.SpdyConnection$Builder)>(r1);

        specialinvoke $r6.<com.android.okhttp.internal.spdy.SpdyWriter: void <init>(java.io.OutputStream)>($r7);

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter> = $r6;

        $z1 = r1.<com.android.okhttp.internal.spdy.SpdyConnection$Builder: boolean client>;

        if $z1 == 0 goto label3;

        b1 = 1;

     label1:
        r0.<com.android.okhttp.internal.spdy.SpdyConnection: int nextStreamId> = b1;

        $z2 = r1.<com.android.okhttp.internal.spdy.SpdyConnection$Builder: boolean client>;

        if $z2 == 0 goto label4;

     label2:
        r0.<com.android.okhttp.internal.spdy.SpdyConnection: int nextPingId> = b0;

        $r8 = staticinvoke <com.android.okhttp.internal.spdy.SpdyConnection$Builder: java.lang.String access$300(com.android.okhttp.internal.spdy.SpdyConnection$Builder)>(r1);

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.lang.String hostName> = $r8;

        $r9 = new java.lang.Thread;

        $r11 = new com.android.okhttp.internal.spdy.SpdyConnection$Reader;

        specialinvoke $r11.<com.android.okhttp.internal.spdy.SpdyConnection$Reader: void <init>(com.android.okhttp.internal.spdy.SpdyConnection,com.android.okhttp.internal.spdy.SpdyConnection$1)>(r0, null);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Spdy Reader ");

        $r12 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.lang.String hostName>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r11, $r14);

        virtualinvoke $r9.<java.lang.Thread: void start()>();

        return;

     label3:
        b1 = 2;

        goto label1;

     label4:
        b0 = 2;

        goto label2;
    }

    void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Builder, com.android.okhttp.internal.spdy.SpdyConnection$1)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        com.android.okhttp.internal.spdy.SpdyConnection$Builder r1;
        com.android.okhttp.internal.spdy.SpdyConnection$1 r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection$Builder;

        r2 := @parameter1: com.android.okhttp.internal.spdy.SpdyConnection$1;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Builder)>(r1);

        return;
    }

    static boolean access$1000(com.android.okhttp.internal.spdy.SpdyConnection)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        boolean $z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: boolean shutdown>;

        return $z0;
    }

    static boolean access$1002(com.android.okhttp.internal.spdy.SpdyConnection, boolean)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        boolean z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        z0 := @parameter1: boolean;

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: boolean shutdown> = z0;

        return z0;
    }

    static int access$1102(com.android.okhttp.internal.spdy.SpdyConnection, int)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter1: int;

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: int lastGoodStreamId> = i0;

        return i0;
    }

    static java.util.Map access$1200(com.android.okhttp.internal.spdy.SpdyConnection)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        return $r1;
    }

    static java.lang.String access$1300(com.android.okhttp.internal.spdy.SpdyConnection)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.lang.String hostName>;

        return $r1;
    }

    static com.android.okhttp.internal.spdy.IncomingStreamHandler access$1400(com.android.okhttp.internal.spdy.SpdyConnection)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        com.android.okhttp.internal.spdy.IncomingStreamHandler $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.IncomingStreamHandler handler>;

        return $r1;
    }

    static java.util.concurrent.ExecutorService access$1500()
    {
        java.util.concurrent.ExecutorService $r0;

        $r0 = <com.android.okhttp.internal.spdy.SpdyConnection: java.util.concurrent.ExecutorService executor>;

        return $r0;
    }

    static void access$1600(com.android.okhttp.internal.spdy.SpdyConnection, int, com.android.okhttp.internal.spdy.Ping)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;
        com.android.okhttp.internal.spdy.Ping r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.okhttp.internal.spdy.Ping;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void writePingLater(int,com.android.okhttp.internal.spdy.Ping)>(i0, r1);

        return;
    }

    static com.android.okhttp.internal.spdy.Ping access$1700(com.android.okhttp.internal.spdy.SpdyConnection, int)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;
        com.android.okhttp.internal.spdy.Ping $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.Ping removePing(int)>(i0);

        return $r1;
    }

    static void access$500(com.android.okhttp.internal.spdy.SpdyConnection, int, com.android.okhttp.internal.spdy.Ping) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;
        com.android.okhttp.internal.spdy.Ping r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.okhttp.internal.spdy.Ping;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void writePing(int,com.android.okhttp.internal.spdy.Ping)>(i0, r1);

        return;
    }

    static com.android.okhttp.internal.spdy.SpdyReader access$700(com.android.okhttp.internal.spdy.SpdyConnection)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        com.android.okhttp.internal.spdy.SpdyReader $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyReader spdyReader>;

        return $r1;
    }

    static void access$800(com.android.okhttp.internal.spdy.SpdyConnection, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0, i1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void close(int,int)>(i0, i1);

        return;
    }

    static com.android.okhttp.internal.spdy.SpdyStream access$900(com.android.okhttp.internal.spdy.SpdyConnection, int)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;
        com.android.okhttp.internal.spdy.SpdyStream $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream getStream(int)>(i0);

        return $r1;
    }

    private void close(int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        java.io.IOException r1, r2, r7, r8, r11, $r28, $r30, $r31, $r33;
        java.lang.Throwable r3, $r32;
        boolean z0, $z1, $z2;
        com.android.okhttp.internal.spdy.SpdyStream[] r4, r10, $r24;
        java.util.Map r5, $r13, $r18, $r19, $r20, $r26, $r29;
        com.android.okhttp.internal.spdy.Ping[] r6, r9, $r22;
        com.android.okhttp.internal.spdy.SpdyStream r12;
        com.android.okhttp.internal.spdy.SpdyReader $r14;
        com.android.okhttp.internal.spdy.Ping $r15;
        com.android.okhttp.internal.spdy.SpdyWriter $r16;
        java.util.Collection $r17, $r21;
        java.lang.Object[] $r23, $r25;
        java.lang.AssertionError $r27;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z1 = <com.android.okhttp.internal.spdy.SpdyConnection: boolean $assertionsDisabled>;

        if $z1 != 0 goto label01;

        $z2 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z2 == 0 goto label01;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label01:
        r1 = null;

     label02:
        virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void shutdown(int)>(i0);

     label03:
        entermonitor r0;

     label04:
        $r13 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        z0 = interfaceinvoke $r13.<java.util.Map: boolean isEmpty()>();

     label05:
        r4 = null;

        if z0 != 0 goto label07;

     label06:
        $r20 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        $r21 = interfaceinvoke $r20.<java.util.Map: java.util.Collection values()>();

        $r26 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        $i7 = interfaceinvoke $r26.<java.util.Map: int size()>();

        $r24 = newarray (com.android.okhttp.internal.spdy.SpdyStream)[$i7];

        $r25 = interfaceinvoke $r21.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r24);

        r4 = (com.android.okhttp.internal.spdy.SpdyStream[]) $r25;

        $r29 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        interfaceinvoke $r29.<java.util.Map: void clear()>();

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void setIdle(boolean)>(0);

     label07:
        r5 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map pings>;

     label08:
        r6 = null;

        if r5 == null goto label10;

     label09:
        $r18 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map pings>;

        $r17 = interfaceinvoke $r18.<java.util.Map: java.util.Collection values()>();

        $r19 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map pings>;

        $i6 = interfaceinvoke $r19.<java.util.Map: int size()>();

        $r22 = newarray (com.android.okhttp.internal.spdy.Ping)[$i6];

        $r23 = interfaceinvoke $r17.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r22);

        r6 = (com.android.okhttp.internal.spdy.Ping[]) $r23;

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map pings> = null;

     label10:
        exitmonitor r0;

     label11:
        if r4 == null goto label20;

        r10 = r4;

        i5 = lengthof r10;

        i4 = 0;

     label12:
        if i4 >= i5 goto label20;

        r12 = r10[i4];

     label13:
        virtualinvoke r12.<com.android.okhttp.internal.spdy.SpdyStream: void close(int)>(i1);

     label14:
        i4 = i4 + 1;

        goto label12;

     label15:
        $r31 := @caughtexception;

        r2 = $r31;

        r1 = r2;

        goto label03;

     label16:
        $r32 := @caughtexception;

        r3 = $r32;

     label17:
        exitmonitor r0;

     label18:
        throw r3;

     label19:
        $r33 := @caughtexception;

        r11 = $r33;

        if r1 == null goto label14;

        r1 = r11;

        goto label14;

     label20:
        if r6 == null goto label22;

        r9 = r6;

        i2 = lengthof r9;

        i3 = 0;

     label21:
        if i3 >= i2 goto label22;

        $r15 = r9[i3];

        virtualinvoke $r15.<com.android.okhttp.internal.spdy.Ping: void cancel()>();

        i3 = i3 + 1;

        goto label21;

     label22:
        $r14 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyReader spdyReader>;

        virtualinvoke $r14.<com.android.okhttp.internal.spdy.SpdyReader: void close()>();

     label23:
        $r16 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        virtualinvoke $r16.<com.android.okhttp.internal.spdy.SpdyWriter: void close()>();

     label24:
        if r1 == null goto label27;

        throw r1;

     label25:
        $r28 := @caughtexception;

        r7 = $r28;

        r1 = r7;

        goto label23;

     label26:
        $r30 := @caughtexception;

        r8 = $r30;

        if r1 != null goto label24;

        r1 = r8;

        goto label24;

     label27:
        return;

        catch java.io.IOException from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label16;
        catch java.lang.Throwable from label06 to label07 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.io.IOException from label13 to label14 with label19;
        catch java.lang.Throwable from label17 to label18 with label16;
        catch java.io.IOException from label22 to label23 with label25;
        catch java.io.IOException from label23 to label24 with label26;
    }

    private com.android.okhttp.internal.spdy.SpdyStream getStream(int)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;
        java.lang.Throwable r1, $r6;
        com.android.okhttp.internal.spdy.SpdyStream r2;
        java.util.Map $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (com.android.okhttp.internal.spdy.SpdyStream) $r5;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private com.android.okhttp.internal.spdy.Ping removePing(int)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;
        java.lang.Throwable r1, $r7;
        com.android.okhttp.internal.spdy.Ping r2;
        java.util.Map $r3, $r4;
        java.lang.Integer $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map pings>;

        if $r3 == null goto label3;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map pings>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

        r2 = (com.android.okhttp.internal.spdy.Ping) $r6;

     label2:
        exitmonitor r0;

        return r2;

     label3:
        r2 = null;

        goto label2;

     label4:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    private void setIdle(boolean)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        boolean z0;
        long l0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        z0 := @parameter0: boolean;

        entermonitor r0;

        if z0 == 0 goto label4;

     label1:
        l0 = staticinvoke <java.lang.System: long nanoTime()>();

     label2:
        r0.<com.android.okhttp.internal.spdy.SpdyConnection: long idleStartTimeNs> = l0;

     label3:
        exitmonitor r0;

        return;

     label4:
        l0 = 0L;

        goto label2;

     label5:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    private void writePing(int, com.android.okhttp.internal.spdy.Ping) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;
        com.android.okhttp.internal.spdy.Ping r1;
        com.android.okhttp.internal.spdy.SpdyWriter r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.okhttp.internal.spdy.Ping;

        r2 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        entermonitor r2;

        if r1 == null goto label2;

     label1:
        virtualinvoke r1.<com.android.okhttp.internal.spdy.Ping: void send()>();

     label2:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        virtualinvoke $r4.<com.android.okhttp.internal.spdy.SpdyWriter: void ping(int,int)>(0, i0);

        exitmonitor r2;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void writePingLater(int, com.android.okhttp.internal.spdy.Ping)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;
        com.android.okhttp.internal.spdy.Ping r1;
        java.util.concurrent.ExecutorService r2;
        java.lang.Object[] r3;
        java.lang.String $r4;
        java.lang.Integer $r5;
        com.android.okhttp.internal.spdy.SpdyConnection$3 $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.okhttp.internal.spdy.Ping;

        r2 = <com.android.okhttp.internal.spdy.SpdyConnection: java.util.concurrent.ExecutorService executor>;

        r3 = newarray (java.lang.Object)[2];

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.lang.String hostName>;

        r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r3[1] = $r5;

        $r6 = new com.android.okhttp.internal.spdy.SpdyConnection$3;

        specialinvoke $r6.<com.android.okhttp.internal.spdy.SpdyConnection$3: void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.android.okhttp.internal.spdy.Ping)>(r0, "OkHttp SPDY Writer %s ping %d", r3, i0, r1);

        interfaceinvoke r2.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r6);

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void close(int,int)>(0, 5);

        return;
    }

    public void flush() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        com.android.okhttp.internal.spdy.SpdyWriter r1, $r3;
        java.lang.Throwable r2, $r5;
        java.io.DataOutputStream $r4;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        r1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        $r4 = $r3.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r4.<java.io.DataOutputStream: void flush()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public long getIdleStartTimeNs()
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        java.lang.Throwable r1, $r2;
        long l0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        entermonitor r0;

     label1:
        l0 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: long idleStartTimeNs>;

     label2:
        exitmonitor r0;

        return l0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isIdle()
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        java.lang.Throwable r1, $r2;
        long l0;
        boolean z0;
        byte $b1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        entermonitor r0;

     label1:
        l0 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: long idleStartTimeNs>;

     label2:
        $b1 = l0 cmp 0L;

        if $b1 == 0 goto label4;

        z0 = 1;

     label3:
        exitmonitor r0;

        return z0;

     label4:
        z0 = 0;

        goto label3;

     label5:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public com.android.okhttp.internal.spdy.SpdyStream newStream(java.util.List, boolean, boolean) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        java.util.List r1;
        boolean z0, z1, $z2, $z3;
        byte b0, b1, b2;
        com.android.okhttp.internal.spdy.SpdyWriter r2, $r8;
        java.lang.Throwable r3, r4, $r12, $r14;
        int i3, $i4, $i5;
        com.android.okhttp.internal.spdy.SpdyStream r5, $r6;
        com.android.okhttp.internal.spdy.Settings $r7;
        java.util.Map $r9;
        java.lang.Integer $r11;
        java.io.IOException $r13;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label11;

        b0 = 0;

     label01:
        if z1 == 0 goto label12;

        b1 = 0;

     label02:
        b2 = b0 | b1;

        r2 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        entermonitor r2;

     label03:
        entermonitor r0;

     label04:
        $z2 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: boolean shutdown>;

        if $z2 == 0 goto label13;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("shutdown");

        throw $r13;

     label05:
        $r14 := @caughtexception;

        r4 = $r14;

     label06:
        exitmonitor r0;

     label07:
        throw r4;

     label08:
        $r12 := @caughtexception;

        r3 = $r12;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        b0 = 1;

        goto label01;

     label12:
        b1 = 2;

        goto label02;

     label13:
        i3 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: int nextStreamId>;

        $i4 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: int nextStreamId>;

        $i5 = 2 + $i4;

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: int nextStreamId> = $i5;

        $r6 = new com.android.okhttp.internal.spdy.SpdyStream;

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.Settings settings>;

        specialinvoke $r6.<com.android.okhttp.internal.spdy.SpdyStream: void <init>(int,com.android.okhttp.internal.spdy.SpdyConnection,int,int,int,java.util.List,com.android.okhttp.internal.spdy.Settings)>(i3, r0, b2, 0, 0, r1, $r7);

        r5 = $r6;

        $z3 = virtualinvoke r5.<com.android.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        if $z3 == 0 goto label14;

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r5);

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void setIdle(boolean)>(0);

     label14:
        exitmonitor r0;

     label15:
        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        virtualinvoke $r8.<com.android.okhttp.internal.spdy.SpdyWriter: void synStream(int,int,int,int,int,java.util.List)>(b2, i3, 0, 0, 0, r1);

        exitmonitor r2;

     label16:
        return r5;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label13 to label14 with label05;
        catch java.lang.Throwable from label14 to label15 with label05;
        catch java.lang.Throwable from label15 to label16 with label08;
    }

    public void noop() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        com.android.okhttp.internal.spdy.SpdyWriter $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        virtualinvoke $r1.<com.android.okhttp.internal.spdy.SpdyWriter: void noop()>();

        return;
    }

    public int openStreamCount()
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        java.lang.Throwable r1, $r3;
        int i0;
        java.util.Map $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        i0 = interfaceinvoke $r2.<java.util.Map: int size()>();

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.android.okhttp.internal.spdy.Ping ping() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        com.android.okhttp.internal.spdy.Ping r1, $r3;
        java.lang.Throwable r2, $r10;
        int i0, $i1, $i2;
        boolean $z0;
        java.util.Map $r4, $r5;
        java.lang.Integer $r6;
        java.util.HashMap $r8;
        java.io.IOException $r9;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        $r3 = new com.android.okhttp.internal.spdy.Ping;

        specialinvoke $r3.<com.android.okhttp.internal.spdy.Ping: void <init>()>();

        r1 = $r3;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: boolean shutdown>;

        if $z0 == 0 goto label5;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("shutdown");

        throw $r9;

     label2:
        $r10 := @caughtexception;

        r2 = $r10;

     label3:
        exitmonitor r0;

     label4:
        throw r2;

     label5:
        i0 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: int nextPingId>;

        $i1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: int nextPingId>;

        $i2 = 2 + $i1;

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: int nextPingId> = $i2;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map pings>;

        if $r4 != null goto label6;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map pings> = $r8;

     label6:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map pings>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1);

        exitmonitor r0;

     label7:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void writePing(int,com.android.okhttp.internal.spdy.Ping)>(i0, r1);

        return r1;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
        catch java.lang.Throwable from label6 to label7 with label2;
    }

    com.android.okhttp.internal.spdy.SpdyStream removeStream(int)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0;
        java.lang.Throwable r1, $r7;
        com.android.okhttp.internal.spdy.SpdyStream r2;
        java.util.Map $r3, $r6;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        r2 = (com.android.okhttp.internal.spdy.SpdyStream) $r5;

     label2:
        if r2 == null goto label4;

     label3:
        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.util.Map streams>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyConnection: void setIdle(boolean)>(1);

     label4:
        exitmonitor r0;

        return r2;

     label5:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void shutdown(int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0, i1;
        com.android.okhttp.internal.spdy.SpdyWriter r1, $r4;
        java.lang.Throwable r2, r3, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        r1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        entermonitor r1;

     label01:
        entermonitor r0;

     label02:
        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: boolean shutdown>;

        if $z0 == 0 goto label05;

        exitmonitor r0;

     label03:
        exitmonitor r1;

     label04:
        return;

     label05:
        r0.<com.android.okhttp.internal.spdy.SpdyConnection: boolean shutdown> = 1;

        i1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: int lastGoodStreamId>;

        exitmonitor r0;

     label06:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        virtualinvoke $r4.<com.android.okhttp.internal.spdy.SpdyWriter: void goAway(int,int,int)>(0, i1, i0);

        exitmonitor r1;

     label07:
        return;

     label08:
        $r6 := @caughtexception;

        r2 = $r6;

     label09:
        exitmonitor r1;

     label10:
        throw r2;

     label11:
        $r5 := @caughtexception;

        r3 = $r5;

     label12:
        exitmonitor r0;

     label13:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    void writeFrame(byte[], int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        byte[] r1;
        int i0, i1;
        com.android.okhttp.internal.spdy.SpdyWriter r2, $r4;
        java.lang.Throwable r3, $r6;
        java.io.DataOutputStream $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        $r5 = $r4.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r5.<java.io.DataOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void writeSynReply(int, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0, i1;
        java.util.List r1;
        com.android.okhttp.internal.spdy.SpdyWriter $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyWriter: void synReply(int,int,java.util.List)>(i1, i0, r1);

        return;
    }

    void writeSynReset(int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0, i1;
        com.android.okhttp.internal.spdy.SpdyWriter $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        virtualinvoke $r1.<com.android.okhttp.internal.spdy.SpdyWriter: void rstStream(int,int)>(i0, i1);

        return;
    }

    void writeSynResetLater(int, int)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0, i1;
        java.util.concurrent.ExecutorService r1;
        java.lang.Object[] r2;
        java.lang.String $r3;
        java.lang.Integer $r4;
        com.android.okhttp.internal.spdy.SpdyConnection$1 $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = <com.android.okhttp.internal.spdy.SpdyConnection: java.util.concurrent.ExecutorService executor>;

        r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.lang.String hostName>;

        r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r2[1] = $r4;

        $r5 = new com.android.okhttp.internal.spdy.SpdyConnection$1;

        specialinvoke $r5.<com.android.okhttp.internal.spdy.SpdyConnection$1: void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,int)>(r0, "OkHttp SPDY Writer %s stream %d", r2, i0, i1);

        interfaceinvoke r1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

        return;
    }

    void writeWindowUpdate(int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0, i1;
        com.android.okhttp.internal.spdy.SpdyWriter $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyWriter spdyWriter>;

        virtualinvoke $r1.<com.android.okhttp.internal.spdy.SpdyWriter: void windowUpdate(int,int)>(i0, i1);

        return;
    }

    void writeWindowUpdateLater(int, int)
    {
        com.android.okhttp.internal.spdy.SpdyConnection r0;
        int i0, i1;
        java.util.concurrent.ExecutorService r1;
        java.lang.Object[] r2;
        java.lang.String $r3;
        java.lang.Integer $r4;
        com.android.okhttp.internal.spdy.SpdyConnection$2 $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyConnection;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = <com.android.okhttp.internal.spdy.SpdyConnection: java.util.concurrent.ExecutorService executor>;

        r2 = newarray (java.lang.Object)[2];

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyConnection: java.lang.String hostName>;

        r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r2[1] = $r4;

        $r5 = new com.android.okhttp.internal.spdy.SpdyConnection$2;

        specialinvoke $r5.<com.android.okhttp.internal.spdy.SpdyConnection$2: void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,int)>(r0, "OkHttp SPDY Writer %s stream %d", r2, i0, i1);

        interfaceinvoke r1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r5);

        return;
    }
}
