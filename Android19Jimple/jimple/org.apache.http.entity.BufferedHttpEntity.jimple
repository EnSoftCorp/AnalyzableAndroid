public class org.apache.http.entity.BufferedHttpEntity extends org.apache.http.entity.HttpEntityWrapper
{
    private final byte[] buffer;

    public void <init>(org.apache.http.HttpEntity) throws java.io.IOException
    {
        org.apache.http.entity.BufferedHttpEntity r0;
        org.apache.http.HttpEntity r1;
        boolean $z0;
        byte[] $r2;
        long $l0;
        byte $b1;

        r0 := @this: org.apache.http.entity.BufferedHttpEntity;

        r1 := @parameter0: org.apache.http.HttpEntity;

        specialinvoke r0.<org.apache.http.entity.HttpEntityWrapper: void <init>(org.apache.http.HttpEntity)>(r1);

        $z0 = interfaceinvoke r1.<org.apache.http.HttpEntity: boolean isRepeatable()>();

        if $z0 == 0 goto label1;

        $l0 = interfaceinvoke r1.<org.apache.http.HttpEntity: long getContentLength()>();

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label2;

     label1:
        $r2 = staticinvoke <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>(r1);

        r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer> = $r2;

        return;

     label2:
        r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer> = null;

        return;
    }

    public java.io.InputStream getContent() throws java.io.IOException
    {
        org.apache.http.entity.BufferedHttpEntity r0;
        byte[] $r1, $r5;
        org.apache.http.HttpEntity $r2;
        java.io.InputStream $r3;
        java.io.ByteArrayInputStream $r4;

        r0 := @this: org.apache.http.entity.BufferedHttpEntity;

        $r1 = r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer>;

        if $r1 == null goto label1;

        $r4 = new java.io.ByteArrayInputStream;

        $r5 = r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer>;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        return $r4;

     label1:
        $r2 = r0.<org.apache.http.entity.BufferedHttpEntity: org.apache.http.HttpEntity wrappedEntity>;

        $r3 = interfaceinvoke $r2.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        return $r3;
    }

    public long getContentLength()
    {
        org.apache.http.entity.BufferedHttpEntity r0;
        byte[] $r1, $r3;
        org.apache.http.HttpEntity $r2;
        long $l0, $l2;
        int $i1;

        r0 := @this: org.apache.http.entity.BufferedHttpEntity;

        $r1 = r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer>;

        $i1 = lengthof $r3;

        $l2 = (long) $i1;

        return $l2;

     label1:
        $r2 = r0.<org.apache.http.entity.BufferedHttpEntity: org.apache.http.HttpEntity wrappedEntity>;

        $l0 = interfaceinvoke $r2.<org.apache.http.HttpEntity: long getContentLength()>();

        return $l0;
    }

    public boolean isChunked()
    {
        org.apache.http.entity.BufferedHttpEntity r0;
        byte[] $r1;
        org.apache.http.HttpEntity $r2;
        boolean $z0;

        r0 := @this: org.apache.http.entity.BufferedHttpEntity;

        $r1 = r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer>;

        if $r1 != null goto label1;

        $r2 = r0.<org.apache.http.entity.BufferedHttpEntity: org.apache.http.HttpEntity wrappedEntity>;

        $z0 = interfaceinvoke $r2.<org.apache.http.HttpEntity: boolean isChunked()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRepeatable()
    {
        org.apache.http.entity.BufferedHttpEntity r0;

        r0 := @this: org.apache.http.entity.BufferedHttpEntity;

        return 1;
    }

    public boolean isStreaming()
    {
        org.apache.http.entity.BufferedHttpEntity r0;
        byte[] $r1;
        org.apache.http.HttpEntity $r2;
        boolean $z0;

        r0 := @this: org.apache.http.entity.BufferedHttpEntity;

        $r1 = r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer>;

        if $r1 != null goto label1;

        $r2 = r0.<org.apache.http.entity.BufferedHttpEntity: org.apache.http.HttpEntity wrappedEntity>;

        $z0 = interfaceinvoke $r2.<org.apache.http.HttpEntity: boolean isStreaming()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.http.entity.BufferedHttpEntity r0;
        java.io.OutputStream r1;
        byte[] $r2, $r4;
        org.apache.http.HttpEntity $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.http.entity.BufferedHttpEntity;

        r1 := @parameter0: java.io.OutputStream;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output stream may not be null");

        throw $r5;

     label1:
        $r2 = r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer>;

        if $r2 == null goto label2;

        $r4 = r0.<org.apache.http.entity.BufferedHttpEntity: byte[] buffer>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r4);

        return;

     label2:
        $r3 = r0.<org.apache.http.entity.BufferedHttpEntity: org.apache.http.HttpEntity wrappedEntity>;

        interfaceinvoke $r3.<org.apache.http.HttpEntity: void writeTo(java.io.OutputStream)>(r1);

        return;
    }
}
