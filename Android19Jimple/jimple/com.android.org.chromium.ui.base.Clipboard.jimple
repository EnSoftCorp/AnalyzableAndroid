public class com.android.org.chromium.ui.base.Clipboard extends java.lang.Object
{
    private final android.content.ClipboardManager mClipboardManager;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        com.android.org.chromium.ui.base.Clipboard r0;
        android.content.Context r1;
        java.lang.Object $r2;
        android.content.ClipboardManager $r3;

        r0 := @this: com.android.org.chromium.ui.base.Clipboard;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.ui.base.Clipboard: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r3 = (android.content.ClipboardManager) $r2;

        r0.<com.android.org.chromium.ui.base.Clipboard: android.content.ClipboardManager mClipboardManager> = $r3;

        return;
    }

    private static com.android.org.chromium.ui.base.Clipboard create(android.content.Context)
    {
        android.content.Context r0;
        com.android.org.chromium.ui.base.Clipboard $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new com.android.org.chromium.ui.base.Clipboard;

        specialinvoke $r1.<com.android.org.chromium.ui.base.Clipboard: void <init>(android.content.Context)>(r0);

        return $r1;
    }

    private java.lang.String getCoercedText()
    {
        com.android.org.chromium.ui.base.Clipboard r0;
        android.content.ClipData r1;
        java.lang.CharSequence r2;
        android.content.ClipboardManager $r3;
        int $i0;
        android.content.ClipData$Item $r4;
        android.content.Context $r5;
        java.lang.String $r6;

        r0 := @this: com.android.org.chromium.ui.base.Clipboard;

        $r3 = r0.<com.android.org.chromium.ui.base.Clipboard: android.content.ClipboardManager mClipboardManager>;

        r1 = virtualinvoke $r3.<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.content.ClipData: int getItemCount()>();

        if $i0 <= 0 goto label1;

        $r4 = virtualinvoke r1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(0);

        $r5 = r0.<com.android.org.chromium.ui.base.Clipboard: android.content.Context mContext>;

        r2 = virtualinvoke $r4.<android.content.ClipData$Item: java.lang.CharSequence coerceToText(android.content.Context)>($r5);

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        return $r6;

     label1:
        return null;
    }

    private java.lang.String getHTMLText()
    {
        com.android.org.chromium.ui.base.Clipboard r0;
        android.content.ClipData r1;
        boolean $z0;
        android.content.ClipboardManager $r2;
        int $i0;
        android.content.ClipData$Item $r3;
        java.lang.String $r4;

        r0 := @this: com.android.org.chromium.ui.base.Clipboard;

        $z0 = staticinvoke <com.android.org.chromium.ui.base.Clipboard: boolean isHTMLClipboardSupported()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.org.chromium.ui.base.Clipboard: android.content.ClipboardManager mClipboardManager>;

        r1 = virtualinvoke $r2.<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.content.ClipData: int getItemCount()>();

        if $i0 <= 0 goto label1;

        $r3 = virtualinvoke r1.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(0);

        $r4 = virtualinvoke $r3.<android.content.ClipData$Item: java.lang.String getHtmlText()>();

        return $r4;

     label1:
        return null;
    }

    private static boolean isHTMLClipboardSupported()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.org.chromium.base.ApiCompatibilityUtils: boolean isHTMLClipboardSupported()>();

        return $z0;
    }

    private void setPrimaryClipNoException(android.content.ClipData)
    {
        com.android.org.chromium.ui.base.Clipboard r0;
        android.content.ClipData r1;
        java.lang.String r3;
        android.content.ClipboardManager $r4;
        java.lang.Exception $r5;
        int $i0;
        android.content.Context $r6, $r7;
        android.widget.Toast $r8;

        r0 := @this: com.android.org.chromium.ui.base.Clipboard;

        r1 := @parameter0: android.content.ClipData;

     label1:
        $r4 = r0.<com.android.org.chromium.ui.base.Clipboard: android.content.ClipboardManager mClipboardManager>;

        virtualinvoke $r4.<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>(r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<com.android.org.chromium.ui.base.Clipboard: android.content.Context mContext>;

        $i0 = <com.android.org.chromium.ui.R$string: int copy_to_clipboard_failure_message>;

        r3 = virtualinvoke $r6.<android.content.Context: java.lang.String getString(int)>($i0);

        $r7 = r0.<com.android.org.chromium.ui.base.Clipboard: android.content.Context mContext>;

        $r8 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r7, r3, 0);

        virtualinvoke $r8.<android.widget.Toast: void show()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setHTMLText(java.lang.String, java.lang.String)
    {
        com.android.org.chromium.ui.base.Clipboard r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.org.chromium.ui.base.Clipboard;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.org.chromium.ui.base.Clipboard: void setHTMLText(java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2);

        return;
    }

    public void setHTMLText(java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.org.chromium.ui.base.Clipboard r0;
        java.lang.String r1, r2, r3;
        boolean $z0;
        android.content.ClipData $r4;

        r0 := @this: com.android.org.chromium.ui.base.Clipboard;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.android.org.chromium.ui.base.Clipboard: boolean isHTMLClipboardSupported()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <android.content.ClipData: android.content.ClipData newHtmlText(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)>(r2, r3, r1);

        specialinvoke r0.<com.android.org.chromium.ui.base.Clipboard: void setPrimaryClipNoException(android.content.ClipData)>($r4);

     label1:
        return;
    }

    public void setText(java.lang.String)
    {
        com.android.org.chromium.ui.base.Clipboard r0;
        java.lang.String r1;

        r0 := @this: com.android.org.chromium.ui.base.Clipboard;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.org.chromium.ui.base.Clipboard: void setText(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public void setText(java.lang.String, java.lang.String)
    {
        com.android.org.chromium.ui.base.Clipboard r0;
        java.lang.String r1, r2;
        android.content.ClipData $r3;

        r0 := @this: com.android.org.chromium.ui.base.Clipboard;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(r1, r2);

        specialinvoke r0.<com.android.org.chromium.ui.base.Clipboard: void setPrimaryClipNoException(android.content.ClipData)>($r3);

        return;
    }
}
