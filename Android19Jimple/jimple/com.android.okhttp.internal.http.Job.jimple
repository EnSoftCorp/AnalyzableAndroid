public final class com.android.okhttp.internal.http.Job extends java.lang.Object implements java.lang.Runnable
{
    final java.net.HttpURLConnection connection;
    final com.android.okhttp.internal.http.Dispatcher dispatcher;
    final com.android.okhttp.Request request;
    final com.android.okhttp.Response$Receiver responseReceiver;

    public void <init>(com.android.okhttp.internal.http.Dispatcher, java.net.HttpURLConnection, com.android.okhttp.Request, com.android.okhttp.Response$Receiver)
    {
        com.android.okhttp.internal.http.Job r0;
        com.android.okhttp.internal.http.Dispatcher r1;
        java.net.HttpURLConnection r2;
        com.android.okhttp.Request r3;
        com.android.okhttp.Response$Receiver r4;

        r0 := @this: com.android.okhttp.internal.http.Job;

        r1 := @parameter0: com.android.okhttp.internal.http.Dispatcher;

        r2 := @parameter1: java.net.HttpURLConnection;

        r3 := @parameter2: com.android.okhttp.Request;

        r4 := @parameter3: com.android.okhttp.Response$Receiver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.internal.http.Dispatcher dispatcher> = r1;

        r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection> = r2;

        r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Request request> = r3;

        r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Response$Receiver responseReceiver> = r4;

        return;
    }

    private com.android.okhttp.Response readResponse() throws java.io.IOException
    {
        com.android.okhttp.internal.http.Job r0;
        int i0, i1;
        com.android.okhttp.Response$Builder r1, $r4;
        java.lang.String r2, $r8;
        java.net.HttpURLConnection $r3, $r6, $r7, $r11, $r13;
        com.android.okhttp.Request $r5;
        com.android.okhttp.internal.http.Dispatcher$RealResponseBody $r10;
        java.io.InputStream $r12;
        com.android.okhttp.Response $r14;

        r0 := @this: com.android.okhttp.internal.http.Job;

        $r3 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>();

        $r4 = new com.android.okhttp.Response$Builder;

        $r5 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Request request>;

        specialinvoke $r4.<com.android.okhttp.Response$Builder: void <init>(com.android.okhttp.Request,int)>($r5, i0);

        r1 = $r4;

        i1 = 0;

     label1:
        $r6 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        r2 = virtualinvoke $r6.<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)>(i1);

        if r2 != null goto label2;

        $r10 = new com.android.okhttp.internal.http.Dispatcher$RealResponseBody;

        $r13 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        $r11 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        $r12 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r10.<com.android.okhttp.internal.http.Dispatcher$RealResponseBody: void <init>(java.net.HttpURLConnection,java.io.InputStream)>($r13, $r12);

        virtualinvoke r1.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder body(com.android.okhttp.Response$Body)>($r10);

        $r14 = virtualinvoke r1.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        return $r14;

     label2:
        $r7 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        $r8 = virtualinvoke $r7.<java.net.HttpURLConnection: java.lang.String getHeaderField(int)>(i1);

        virtualinvoke r1.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder addHeader(java.lang.String,java.lang.String)>(r2, $r8);

        i1 = i1 + 1;

        goto label1;
    }

    private java.net.HttpURLConnection sendRequest() throws java.io.IOException
    {
        com.android.okhttp.internal.http.Job r0;
        int i0, $i2, $i4;
        com.android.okhttp.Request$Body r1;
        long l1;
        com.android.okhttp.Request $r2, $r3, $r9, $r14;
        java.net.HttpURLConnection $r4, $r5, $r6, $r7, $r10, $r12;
        byte $b3, $b5;
        java.io.OutputStream $r8;
        java.lang.String $r11, $r13;

        r0 := @this: com.android.okhttp.internal.http.Job;

        i0 = 0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Request request>;

        $i2 = virtualinvoke $r2.<com.android.okhttp.Request: int headerCount()>();

        if i0 >= $i2 goto label2;

        $r12 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        $r9 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Request request>;

        $r11 = virtualinvoke $r9.<com.android.okhttp.Request: java.lang.String headerName(int)>(i0);

        $r14 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Request request>;

        $r13 = virtualinvoke $r14.<com.android.okhttp.Request: java.lang.String headerValue(int)>(i0);

        virtualinvoke $r12.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r11, $r13);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Request request>;

        r1 = virtualinvoke $r3.<com.android.okhttp.Request: com.android.okhttp.Request$Body body()>();

        if r1 == null goto label5;

        $r5 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        virtualinvoke $r5.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        l1 = virtualinvoke r1.<com.android.okhttp.Request$Body: long contentLength()>();

        $b3 = l1 cmp -1L;

        if $b3 == 0 goto label3;

        $b5 = l1 cmp 2147483647L;

        if $b5 <= 0 goto label6;

     label3:
        $r6 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        virtualinvoke $r6.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0);

     label4:
        $r7 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        $r8 = virtualinvoke $r7.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke r1.<com.android.okhttp.Request$Body: void writeTo(java.io.OutputStream)>($r8);

     label5:
        $r4 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        return $r4;

     label6:
        $r10 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        $i4 = (int) l1;

        virtualinvoke $r10.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i4);

        goto label4;
    }

    public void run()
    {
        com.android.okhttp.internal.http.Job r0;
        java.lang.Throwable r1, $r8;
        java.io.IOException r2, $r11;
        com.android.okhttp.Response r3;
        com.android.okhttp.Response$Receiver $r5, $r13;
        java.net.HttpURLConnection $r6, $r9, $r19;
        com.android.okhttp.internal.http.Dispatcher $r7, $r10, $r18;
        com.android.okhttp.Failure$Builder $r12, $r14, $r17;
        com.android.okhttp.Request $r15;
        com.android.okhttp.Failure $r16;

        r0 := @this: com.android.okhttp.internal.http.Job;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection sendRequest()>();

        r3 = specialinvoke r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Response readResponse()>();

        $r5 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Response$Receiver responseReceiver>;

        interfaceinvoke $r5.<com.android.okhttp.Response$Receiver: void onResponse(com.android.okhttp.Response)>(r3);

     label2:
        $r6 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        virtualinvoke $r6.<java.net.HttpURLConnection: void disconnect()>();

        $r7 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.internal.http.Dispatcher dispatcher>;

        virtualinvoke $r7.<com.android.okhttp.internal.http.Dispatcher: void finished(com.android.okhttp.internal.http.Job)>(r0);

        return;

     label3:
        $r11 := @caughtexception;

        r2 = $r11;

     label4:
        $r13 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Response$Receiver responseReceiver>;

        $r12 = new com.android.okhttp.Failure$Builder;

        specialinvoke $r12.<com.android.okhttp.Failure$Builder: void <init>()>();

        $r15 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.Request request>;

        $r14 = virtualinvoke $r12.<com.android.okhttp.Failure$Builder: com.android.okhttp.Failure$Builder request(com.android.okhttp.Request)>($r15);

        $r17 = virtualinvoke $r14.<com.android.okhttp.Failure$Builder: com.android.okhttp.Failure$Builder exception(java.lang.Throwable)>(r2);

        $r16 = virtualinvoke $r17.<com.android.okhttp.Failure$Builder: com.android.okhttp.Failure build()>();

        interfaceinvoke $r13.<com.android.okhttp.Response$Receiver: void onFailure(com.android.okhttp.Failure)>($r16);

     label5:
        $r19 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        virtualinvoke $r19.<java.net.HttpURLConnection: void disconnect()>();

        $r18 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.internal.http.Dispatcher dispatcher>;

        virtualinvoke $r18.<com.android.okhttp.internal.http.Dispatcher: void finished(com.android.okhttp.internal.http.Job)>(r0);

        return;

     label6:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = r0.<com.android.okhttp.internal.http.Job: java.net.HttpURLConnection connection>;

        virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>();

        $r10 = r0.<com.android.okhttp.internal.http.Job: com.android.okhttp.internal.http.Dispatcher dispatcher>;

        virtualinvoke $r10.<com.android.okhttp.internal.http.Dispatcher: void finished(com.android.okhttp.internal.http.Job)>(r0);

        throw r1;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
