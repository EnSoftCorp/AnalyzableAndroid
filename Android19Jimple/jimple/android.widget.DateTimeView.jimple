public class android.widget.DateTimeView extends android.widget.TextView
{
    private static final int SHOW_MONTH_DAY_YEAR;
    private static final int SHOW_TIME;
    private static final java.lang.String TAG;
    private static final long TWELVE_HOURS_IN_MINUTES;
    private static final long TWENTY_FOUR_HOURS_IN_MILLIS;
    private boolean mAttachedToWindow;
    private android.content.BroadcastReceiver mBroadcastReceiver;
    private android.database.ContentObserver mContentObserver;
    int mLastDisplay;
    java.text.DateFormat mLastFormat;
    java.util.Date mTime;
    long mTimeMillis;
    private long mUpdateTimeMillis;

    public void <init>(android.content.Context)
    {
        android.widget.DateTimeView r0;
        android.content.Context r1;
        android.widget.DateTimeView$1 $r2;
        android.widget.DateTimeView$2 $r3;
        android.os.Handler $r4;

        r0 := @this: android.widget.DateTimeView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context)>(r1);

        r0.<android.widget.DateTimeView: int mLastDisplay> = -1;

        $r2 = new android.widget.DateTimeView$1;

        specialinvoke $r2.<android.widget.DateTimeView$1: void <init>(android.widget.DateTimeView)>(r0);

        r0.<android.widget.DateTimeView: android.content.BroadcastReceiver mBroadcastReceiver> = $r2;

        $r3 = new android.widget.DateTimeView$2;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        specialinvoke $r3.<android.widget.DateTimeView$2: void <init>(android.widget.DateTimeView,android.os.Handler)>(r0, $r4);

        r0.<android.widget.DateTimeView: android.database.ContentObserver mContentObserver> = $r3;

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.DateTimeView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.widget.DateTimeView$1 $r3;
        android.widget.DateTimeView$2 $r4;
        android.os.Handler $r5;

        r0 := @this: android.widget.DateTimeView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<android.widget.DateTimeView: int mLastDisplay> = -1;

        $r3 = new android.widget.DateTimeView$1;

        specialinvoke $r3.<android.widget.DateTimeView$1: void <init>(android.widget.DateTimeView)>(r0);

        r0.<android.widget.DateTimeView: android.content.BroadcastReceiver mBroadcastReceiver> = $r3;

        $r4 = new android.widget.DateTimeView$2;

        $r5 = new android.os.Handler;

        specialinvoke $r5.<android.os.Handler: void <init>()>();

        specialinvoke $r4.<android.widget.DateTimeView$2: void <init>(android.widget.DateTimeView,android.os.Handler)>(r0, $r5);

        r0.<android.widget.DateTimeView: android.database.ContentObserver mContentObserver> = $r4;

        return;
    }

    static long access$000(android.widget.DateTimeView)
    {
        android.widget.DateTimeView r0;
        long $l0;

        r0 := @parameter0: android.widget.DateTimeView;

        $l0 = r0.<android.widget.DateTimeView: long mUpdateTimeMillis>;

        return $l0;
    }

    private java.text.DateFormat getDateFormat()
    {
        android.widget.DateTimeView r0;
        java.lang.String r1, $r7;
        java.text.SimpleDateFormat r2, $r8;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        java.text.DateFormat $r6, $r10;
        boolean $z0;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: android.widget.DateTimeView;

        $r4 = virtualinvoke r0.<android.widget.DateTimeView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r5, "date_format");

        if r1 == null goto label1;

        $r7 = "";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $r6 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(3);

        return $r6;

     label2:
        $r8 = new java.text.SimpleDateFormat;

        specialinvoke $r8.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r1);

        r2 = $r8;

     label3:
        return r2;

     label4:
        $r9 := @caughtexception;

        $r10 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(3);

        return $r10;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    private java.text.DateFormat getTimeFormat()
    {
        android.widget.DateTimeView r0;
        android.content.Context $r1;
        java.text.DateFormat $r2;

        r0 := @this: android.widget.DateTimeView;

        $r1 = virtualinvoke r0.<android.widget.DateTimeView: android.content.Context getContext()>();

        $r2 = staticinvoke <android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>($r1);

        return $r2;
    }

    private void registerReceivers()
    {
        android.widget.DateTimeView r0;
        android.content.Context r1;
        android.content.IntentFilter r2, $r4;
        android.net.Uri r3;
        android.content.BroadcastReceiver $r5;
        android.content.ContentResolver $r7;
        android.database.ContentObserver $r8;

        r0 := @this: android.widget.DateTimeView;

        r1 = virtualinvoke r0.<android.widget.DateTimeView: android.content.Context getContext()>();

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>()>();

        r2 = $r4;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_TICK");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.CONFIGURATION_CHANGED");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        $r5 = r0.<android.widget.DateTimeView: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r5, r2);

        r3 = staticinvoke <android.provider.Settings$System: android.net.Uri getUriFor(java.lang.String)>("date_format");

        $r7 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = r0.<android.widget.DateTimeView: android.database.ContentObserver mContentObserver>;

        virtualinvoke $r7.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r3, 1, $r8);

        return;
    }

    private void unregisterReceivers()
    {
        android.widget.DateTimeView r0;
        android.content.Context r1;
        android.content.BroadcastReceiver $r2;
        android.content.ContentResolver $r3;
        android.database.ContentObserver $r4;

        r0 := @this: android.widget.DateTimeView;

        r1 = virtualinvoke r0.<android.widget.DateTimeView: android.content.Context getContext()>();

        $r2 = r0.<android.widget.DateTimeView: android.content.BroadcastReceiver mBroadcastReceiver>;

        virtualinvoke r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        $r3 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = r0.<android.widget.DateTimeView: android.database.ContentObserver mContentObserver>;

        virtualinvoke $r3.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r4);

        return;
    }

    protected void onAttachedToWindow()
    {
        android.widget.DateTimeView r0;

        r0 := @this: android.widget.DateTimeView;

        specialinvoke r0.<android.widget.TextView: void onAttachedToWindow()>();

        specialinvoke r0.<android.widget.DateTimeView: void registerReceivers()>();

        r0.<android.widget.DateTimeView: boolean mAttachedToWindow> = 1;

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.DateTimeView r0;

        r0 := @this: android.widget.DateTimeView;

        specialinvoke r0.<android.widget.TextView: void onDetachedFromWindow()>();

        specialinvoke r0.<android.widget.DateTimeView: void unregisterReceivers()>();

        r0.<android.widget.DateTimeView: boolean mAttachedToWindow> = 0;

        return;
    }

    public void setTime(long)
    {
        android.widget.DateTimeView r0;
        long l0, $l1;
        android.text.format.Time r1, $r2;
        java.util.Date $r3;
        int $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: android.widget.DateTimeView;

        l0 := @parameter0: long;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.text.format.Time: void set(long)>(l0);

        r1.<android.text.format.Time: int second> = 0;

        $l1 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(0);

        r0.<android.widget.DateTimeView: long mTimeMillis> = $l1;

        $r3 = new java.util.Date;

        $i2 = r1.<android.text.format.Time: int year>;

        $i7 = -1900 + $i2;

        $i6 = r1.<android.text.format.Time: int month>;

        $i5 = r1.<android.text.format.Time: int monthDay>;

        $i4 = r1.<android.text.format.Time: int hour>;

        $i3 = r1.<android.text.format.Time: int minute>;

        specialinvoke $r3.<java.util.Date: void <init>(int,int,int,int,int,int)>($i7, $i6, $i5, $i4, $i3, 0);

        r0.<android.widget.DateTimeView: java.util.Date mTime> = $r3;

        virtualinvoke r0.<android.widget.DateTimeView: void update()>();

        return;
    }

    void update()
    {
        android.widget.DateTimeView r0;
        android.text.format.Time r1, $r5;
        long l0, l1, l2, l3, l4, $l7, $l16, $l20;
        byte b5, $b14, $b15, $b18, $b19, $b21, $b23, $b24;
        java.util.Date $r2, $r9;
        java.text.DateFormat r3, $r13;
        int $i8, $i9, $i10, $i11, $i12, $i13, $i17;
        java.lang.StringBuilder $r6, $r7, $r10;
        java.lang.RuntimeException $r8;
        java.lang.String $r11, $r12;

        r0 := @this: android.widget.DateTimeView;

        $r2 = r0.<android.widget.DateTimeView: java.util.Date mTime>;

        if $r2 != null goto label01;

        return;

     label01:
        staticinvoke <java.lang.System: long nanoTime()>();

        $r5 = new android.text.format.Time;

        specialinvoke $r5.<android.text.format.Time: void <init>()>();

        r1 = $r5;

        $l7 = r0.<android.widget.DateTimeView: long mTimeMillis>;

        virtualinvoke r1.<android.text.format.Time: void set(long)>($l7);

        r1.<android.text.format.Time: int second> = 0;

        $i9 = r1.<android.text.format.Time: int hour>;

        $i8 = -12 + $i9;

        r1.<android.text.format.Time: int hour> = $i8;

        l0 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(0);

        $i10 = r1.<android.text.format.Time: int hour>;

        $i11 = 12 + $i10;

        r1.<android.text.format.Time: int hour> = $i11;

        l1 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(0);

        r1.<android.text.format.Time: int hour> = 0;

        r1.<android.text.format.Time: int minute> = 0;

        l2 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(0);

        $i12 = r1.<android.text.format.Time: int monthDay>;

        $i13 = 1 + $i12;

        r1.<android.text.format.Time: int monthDay> = $i13;

        l3 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(0);

        $l16 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r1.<android.text.format.Time: void set(long)>($l16);

        r1.<android.text.format.Time: int second> = 0;

        l4 = virtualinvoke r1.<android.text.format.Time: long normalize(boolean)>(0);

        $b14 = l4 cmp l2;

        if $b14 < 0 goto label02;

        $b23 = l4 cmp l3;

        if $b23 < 0 goto label03;

     label02:
        $b15 = l4 cmp l0;

        if $b15 < 0 goto label08;

        $b24 = l4 cmp l1;

        if $b24 >= 0 goto label08;

     label03:
        b5 = 0;

     label04:
        $i17 = r0.<android.widget.DateTimeView: int mLastDisplay>;

        if b5 != $i17 goto label09;

        $r13 = r0.<android.widget.DateTimeView: java.text.DateFormat mLastFormat>;

        if $r13 == null goto label09;

        r3 = r0.<android.widget.DateTimeView: java.text.DateFormat mLastFormat>;

     label05:
        $r9 = r0.<android.widget.DateTimeView: java.util.Date mTime>;

        $r12 = virtualinvoke r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r9);

        virtualinvoke r0.<android.widget.DateTimeView: void setText(java.lang.CharSequence)>($r12);

        if b5 != 0 goto label15;

        $b21 = l1 cmp l3;

        if $b21 <= 0 goto label14;

     label06:
        r0.<android.widget.DateTimeView: long mUpdateTimeMillis> = l1;

     label07:
        staticinvoke <java.lang.System: long nanoTime()>();

        return;

     label08:
        b5 = 1;

        goto label04;

     label09:
        tableswitch(b5)
        {
            case 0: goto label11;
            case 1: goto label13;
            default: goto label10;
        };

     label10:
        $r8 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown display value: ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label11:
        r3 = specialinvoke r0.<android.widget.DateTimeView: java.text.DateFormat getTimeFormat()>();

     label12:
        r0.<android.widget.DateTimeView: java.text.DateFormat mLastFormat> = r3;

        goto label05;

     label13:
        r3 = specialinvoke r0.<android.widget.DateTimeView: java.text.DateFormat getDateFormat()>();

        goto label12;

     label14:
        l1 = l3;

        goto label06;

     label15:
        $l20 = r0.<android.widget.DateTimeView: long mTimeMillis>;

        $b18 = $l20 cmp l4;

        if $b18 >= 0 goto label16;

        r0.<android.widget.DateTimeView: long mUpdateTimeMillis> = 0L;

        goto label07;

     label16:
        $b19 = l0 cmp l2;

        if $b19 >= 0 goto label18;

     label17:
        r0.<android.widget.DateTimeView: long mUpdateTimeMillis> = l0;

        goto label07;

     label18:
        l0 = l2;

        goto label17;
    }

    public static void <clinit>()
    {
        <android.widget.DateTimeView: long TWENTY_FOUR_HOURS_IN_MILLIS> = 86400000L;

        <android.widget.DateTimeView: long TWELVE_HOURS_IN_MINUTES> = 720L;

        <android.widget.DateTimeView: java.lang.String TAG> = "DateTimeView";

        <android.widget.DateTimeView: int SHOW_TIME> = 0;

        <android.widget.DateTimeView: int SHOW_MONTH_DAY_YEAR> = 1;

        return;
    }
}
