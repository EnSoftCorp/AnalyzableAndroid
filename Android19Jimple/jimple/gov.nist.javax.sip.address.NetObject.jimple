public abstract class gov.nist.javax.sip.address.NetObject extends gov.nist.core.GenericObject
{
    protected static final java.lang.String CORE_PACKAGE;
    protected static final java.lang.String GRUU;
    protected static final java.lang.String LR;
    protected static final java.lang.String MADDR;
    protected static final java.lang.String METHOD;
    protected static final java.lang.String NET_PACKAGE;
    protected static final java.lang.String PARSER_PACKAGE;
    protected static final java.lang.String PHONE;
    protected static final java.lang.String SIP;
    protected static final java.lang.String SIPS;
    protected static final java.lang.String TCP;
    protected static final java.lang.String TLS;
    protected static final java.lang.String TRANSPORT;
    protected static final java.lang.String TTL;
    protected static final java.lang.String UDP;
    protected static final java.lang.String USER;

    public void <init>()
    {
        gov.nist.javax.sip.address.NetObject r0;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        specialinvoke r0.<gov.nist.core.GenericObject: void <init>()>();

        return;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.Class r1, r4, $r14, $r15, $r29;
        java.lang.reflect.Field[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.reflect.Field r3;
        java.lang.String r5, r7, $r8, $r9, $r13, $r19, $r20, $r22, $r26, $r33, $r34, $r39, $r41;
        java.lang.StringBuilder $r10, $r11, $r12, $r16, $r18, $r21, $r23, $r27, $r32, $r38, $r42, $r43;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r17, $r24, $r25, $r28, $r30, $r31, $r36, $r37;
        gov.nist.core.GenericObjectList $r35;
        gov.nist.core.GenericObject $r40;
        float $f0;
        double $d0;
        java.lang.IllegalAccessException $r44;
        long $l18;
        char $c19;
        short $s20;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        r0.<gov.nist.javax.sip.address.NetObject: java.lang.String stringRepresentation> = "";

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r8);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("{");

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label01:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label34;

        r3 = r2[i0];

        $i2 = virtualinvoke r3.<java.lang.reflect.Field: int getModifiers()>();

        $i3 = 2 & $i2;

        if $i3 != 2 goto label03;

     label02:
        i0 = i0 + 1;

        goto label01;

     label03:
        r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        r5 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        $i4 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i4 == 0 goto label02;

        $i5 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i5 == 0 goto label02;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r13);

     label04:
        $z0 = virtualinvoke r4.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label18;

        r7 = virtualinvoke r4.<java.lang.Class: java.lang.String toString()>();

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r41);

        $i10 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i10 != 0 goto label06;

        $i17 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(int)>($i17);

     label05:
        goto label02;

     label06:
        $i13 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i13 != 0 goto label08;

        $s20 = virtualinvoke r3.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(short)>($s20);

     label07:
        goto label02;

     label08:
        $i14 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i14 != 0 goto label10;

        $c19 = virtualinvoke r3.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(char)>($c19);

     label09:
        goto label02;

     label10:
        $i15 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i15 != 0 goto label12;

        $l18 = virtualinvoke r3.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(long)>($l18);

     label11:
        goto label02;

     label12:
        $i16 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i16 != 0 goto label14;

        $z3 = virtualinvoke r3.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(boolean)>($z3);

     label13:
        goto label02;

     label14:
        $i11 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i11 != 0 goto label16;

        $d0 = virtualinvoke r3.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(double)>($d0);

     label15:
        goto label02;

     label16:
        $i12 = virtualinvoke r7.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i12 != 0 goto label02;

        $f0 = virtualinvoke r3.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(float)>($f0);

     label17:
        goto label02;

     label18:
        $r14 = class "gov/nist/core/GenericObject";

        $z1 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z1 == 0 goto label22;

        $r37 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r37 == null goto label20;

        $r36 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r40 = (gov.nist.core.GenericObject) $r36;

        $i9 = r0.<gov.nist.javax.sip.address.NetObject: int indentation>;

        $i8 = 1 + $i9;

        $r39 = virtualinvoke $r40.<gov.nist.core.GenericObject: java.lang.String debugDump(int)>($i8);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r39);

     label19:
        goto label02;

     label20:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("<null>");

     label21:
        goto label02;

     label22:
        $r15 = class "gov/nist/core/GenericObjectList";

        $z2 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z2 == 0 goto label26;

        $r30 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r30 == null goto label24;

        $r31 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r35 = (gov.nist.core.GenericObjectList) $r31;

        $i7 = r0.<gov.nist.javax.sip.address.NetObject: int indentation>;

        $i6 = 1 + $i7;

        $r34 = virtualinvoke $r35.<gov.nist.core.GenericObjectList: java.lang.String debugDump(int)>($i6);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r34);

     label23:
        goto label02;

     label24:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("<null>");

     label25:
        goto label02;

     label26:
        $r17 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r17 == null goto label30;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r29 = virtualinvoke $r28.<java.lang.Object: java.lang.Class getClass()>();

        $r26 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r33);

     label27:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("{");

        $r24 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r24 == null goto label32;

        $r25 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r22);

     label28:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("}");

     label29:
        goto label02;

     label30:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r19);

     label31:
        goto label27;

     label32:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("<null>");

     label33:
        goto label28;

     label34:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("}");

        $r9 = r0.<gov.nist.javax.sip.address.NetObject: java.lang.String stringRepresentation>;

        return $r9;

     label35:
        $r44 := @caughtexception;

        goto label02;

        catch java.lang.IllegalAccessException from label04 to label05 with label35;
        catch java.lang.IllegalAccessException from label06 to label07 with label35;
        catch java.lang.IllegalAccessException from label08 to label09 with label35;
        catch java.lang.IllegalAccessException from label10 to label11 with label35;
        catch java.lang.IllegalAccessException from label12 to label13 with label35;
        catch java.lang.IllegalAccessException from label14 to label15 with label35;
        catch java.lang.IllegalAccessException from label16 to label17 with label35;
        catch java.lang.IllegalAccessException from label18 to label19 with label35;
        catch java.lang.IllegalAccessException from label20 to label21 with label35;
        catch java.lang.IllegalAccessException from label22 to label23 with label35;
        catch java.lang.IllegalAccessException from label24 to label25 with label35;
        catch java.lang.IllegalAccessException from label26 to label27 with label35;
        catch java.lang.IllegalAccessException from label27 to label28 with label35;
        catch java.lang.IllegalAccessException from label28 to label29 with label35;
        catch java.lang.IllegalAccessException from label30 to label31 with label35;
        catch java.lang.IllegalAccessException from label32 to label33 with label35;
    }

    public java.lang.String debugDump(int)
    {
        gov.nist.javax.sip.address.NetObject r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        i0 := @parameter0: int;

        i1 = r0.<gov.nist.javax.sip.address.NetObject: int indentation>;

        r0.<gov.nist.javax.sip.address.NetObject: int indentation> = i0;

        r1 = virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: java.lang.String debugDump()>();

        r0.<gov.nist.javax.sip.address.NetObject: int indentation> = i1;

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.Object r1, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.Class r2, r3, r8, $r12, $r13;
        java.lang.reflect.Field[] r4, r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i22, $i23;
        java.lang.reflect.Field r6, r7;
        java.lang.String r9, r11;
        java.lang.IllegalAccessException r10, $r22;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        float $f0, $f1;
        byte $b13, $b14, $b20;
        double $d0, $d1;
        long $l15, $l16;
        short $s17, $s21;
        char $c18, $c19;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        r1 := @parameter0: java.lang.Object;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label01;

        return 0;

     label01:
        r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        r4 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label03:
        $i1 = lengthof r4;

        if i0 >= $i1 goto label27;

        r6 = r4[i0];

        r7 = r5[i0];

        $i3 = virtualinvoke r6.<java.lang.reflect.Field: int getModifiers()>();

        $i2 = 2 & $i3;

        if $i2 != 2 goto label05;

     label04:
        i0 = i0 + 1;

        goto label03;

     label05:
        r8 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Class getType()>();

        r9 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.String getName()>();

        $i5 = virtualinvoke r9.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i5 == 0 goto label04;

        $i4 = virtualinvoke r9.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i4 == 0 goto label04;

     label06:
        $z3 = virtualinvoke r8.<java.lang.Class: boolean isPrimitive()>();

        if $z3 == 0 goto label20;

        r11 = virtualinvoke r8.<java.lang.Class: java.lang.String toString()>();

        $i6 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i6 != 0 goto label08;

        $i22 = virtualinvoke r6.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        $i23 = virtualinvoke r7.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r1);

        if $i22 == $i23 goto label04;

     label07:
        return 0;

     label08:
        $i9 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i9 != 0 goto label10;

        $s17 = virtualinvoke r6.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        $s21 = virtualinvoke r7.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r1);

        if $s17 == $s21 goto label04;

     label09:
        return 0;

     label10:
        $i10 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i10 != 0 goto label12;

        $c19 = virtualinvoke r6.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        $c18 = virtualinvoke r7.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r1);

        if $c19 == $c18 goto label04;

     label11:
        return 0;

     label12:
        $i7 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i7 != 0 goto label14;

        $l16 = virtualinvoke r6.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        $l15 = virtualinvoke r7.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r1);

        $b20 = $l16 cmp $l15;

        if $b20 == 0 goto label04;

     label13:
        return 0;

     label14:
        $i8 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i8 != 0 goto label16;

        $z5 = virtualinvoke r6.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        $z4 = virtualinvoke r7.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r1);

        if $z5 == $z4 goto label04;

     label15:
        return 0;

     label16:
        $i12 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i12 != 0 goto label18;

        $d1 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        $d0 = virtualinvoke r7.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r1);

        $b13 = $d1 cmpl $d0;

        if $b13 == 0 goto label04;

     label17:
        return 0;

     label18:
        $i11 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i11 != 0 goto label04;

        $f1 = virtualinvoke r6.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        $f0 = virtualinvoke r7.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r1);

        $b14 = $f1 cmpl $f0;

        if $b14 == 0 goto label04;

     label19:
        return 0;

     label20:
        $r16 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        $r14 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r16 == $r14 goto label04;

        $r15 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r15 != null goto label22;

        $r21 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        if $r21 == null goto label22;

     label21:
        return 0;

     label22:
        $r18 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        if $r18 != null goto label24;

        $r20 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        if $r20 == null goto label24;

     label23:
        return 0;

     label24:
        $r19 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r17 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        z0 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r17);

     label25:
        if z0 != 0 goto label04;

        return 0;

     label26:
        $r22 := @caughtexception;

        r10 = $r22;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r10);

        goto label04;

     label27:
        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/address/NetObject");

        if $z2 == 0 goto label28;

        return 1;

     label28:
        r2 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label02;

        catch java.lang.IllegalAccessException from label06 to label07 with label26;
        catch java.lang.IllegalAccessException from label08 to label09 with label26;
        catch java.lang.IllegalAccessException from label10 to label11 with label26;
        catch java.lang.IllegalAccessException from label12 to label13 with label26;
        catch java.lang.IllegalAccessException from label14 to label15 with label26;
        catch java.lang.IllegalAccessException from label16 to label17 with label26;
        catch java.lang.IllegalAccessException from label18 to label19 with label26;
        catch java.lang.IllegalAccessException from label20 to label21 with label26;
        catch java.lang.IllegalAccessException from label22 to label23 with label26;
        catch java.lang.IllegalAccessException from label24 to label25 with label26;
    }

    public boolean match(java.lang.Object)
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.Object r1, r12, r13;
        gov.nist.core.GenericObject r2, $r23, $r24, $r27, $r28;
        java.lang.Class r3, r4, r9, $r16, $r17, $r18, $r19, $r21, $r22, $r25, $r26;
        java.lang.reflect.Field[] r5, r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i20, $i23;
        java.lang.reflect.Field r7, r8;
        java.lang.String r10, r14, r15, $r30, $r32, $r33;
        java.lang.IllegalAccessException r11, $r34;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        gov.nist.core.GenericObjectList $r20;
        gov.nist.core.Match $r29, $r31;
        float $f0, $f1;
        byte $b10, $b18, $b19;
        double $d0, $d1;
        long $l15, $l16;
        char $c17, $c22;
        short $s21, $s24;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        return 1;

     label01:
        $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r17.<java.lang.Object: boolean equals(java.lang.Object)>($r16);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        r2 = (gov.nist.core.GenericObject) r1;

        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label03:
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        r6 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label04:
        $i1 = lengthof r5;

        if i0 >= $i1 goto label32;

        r7 = r5[i0];

        r8 = r6[i0];

        $i3 = virtualinvoke r7.<java.lang.reflect.Field: int getModifiers()>();

        $i2 = 2 & $i3;

        if $i2 != 2 goto label06;

     label05:
        i0 = i0 + 1;

        goto label04;

     label06:
        r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Class getType()>();

        r10 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.String getName()>();

        $i4 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i4 == 0 goto label05;

        $i5 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i5 == 0 goto label05;

     label07:
        $z4 = virtualinvoke r9.<java.lang.Class: boolean isPrimitive()>();

        if $z4 == 0 goto label21;

        r14 = virtualinvoke r9.<java.lang.Class: java.lang.String toString()>();

        $i6 = virtualinvoke r14.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i6 != 0 goto label09;

        $i23 = virtualinvoke r7.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        $i20 = virtualinvoke r8.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r2);

        if $i23 == $i20 goto label05;

     label08:
        return 0;

     label09:
        $i7 = virtualinvoke r14.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i7 != 0 goto label11;

        $s21 = virtualinvoke r7.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        $s24 = virtualinvoke r8.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r2);

        if $s21 == $s24 goto label05;

     label10:
        return 0;

     label11:
        $i8 = virtualinvoke r14.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i8 != 0 goto label13;

        $c17 = virtualinvoke r7.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        $c22 = virtualinvoke r8.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r2);

        if $c17 == $c22 goto label05;

     label12:
        return 0;

     label13:
        $i11 = virtualinvoke r14.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i11 != 0 goto label15;

        $l16 = virtualinvoke r7.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        $l15 = virtualinvoke r8.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r2);

        $b18 = $l16 cmp $l15;

        if $b18 == 0 goto label05;

     label14:
        return 0;

     label15:
        $i12 = virtualinvoke r14.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i12 != 0 goto label17;

        $z15 = virtualinvoke r7.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        $z14 = virtualinvoke r8.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r2);

        if $z15 == $z14 goto label05;

     label16:
        return 0;

     label17:
        $i13 = virtualinvoke r14.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i13 != 0 goto label19;

        $d0 = virtualinvoke r7.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        $d1 = virtualinvoke r8.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r2);

        $b19 = $d0 cmpl $d1;

        if $b19 == 0 goto label05;

     label18:
        return 0;

     label19:
        $i14 = virtualinvoke r14.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i14 != 0 goto label05;

        $f0 = virtualinvoke r7.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        $f1 = virtualinvoke r8.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r2);

        $b10 = $f0 cmpl $f1;

        if $b10 == 0 goto label05;

     label20:
        return 0;

     label21:
        r12 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        r13 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

     label22:
        if r13 == null goto label34;

        if r12 != null goto label34;

        return 0;

     label23:
        $z3 = r13 instanceof java.lang.String;

        if $z3 == 0 goto label25;

        $z11 = r12 instanceof java.lang.String;

        if $z11 == 0 goto label25;

        $r30 = (java.lang.String) r13;

        $z13 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z13 != 0 goto label05;

        $r33 = (java.lang.String) r12;

        $r32 = (java.lang.String) r13;

        $i9 = virtualinvoke $r33.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r32);

        if $i9 == 0 goto label05;

     label24:
        return 0;

     label25:
        $r19 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $z6 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r19);

        if $z6 == 0 goto label27;

        $r22 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        $z8 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r22);

        if $z8 == 0 goto label27;

        $r26 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = virtualinvoke r13.<java.lang.Object: java.lang.Class getClass()>();

        $z10 = virtualinvoke $r26.<java.lang.Object: boolean equals(java.lang.Object)>($r25);

        if $z10 == 0 goto label27;

        $r24 = (gov.nist.core.GenericObject) r13;

        $r29 = virtualinvoke $r24.<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()>();

        if $r29 == null goto label27;

        $r28 = (gov.nist.core.GenericObject) r12;

        r15 = virtualinvoke $r28.<gov.nist.core.GenericObject: java.lang.String encode()>();

        $r27 = (gov.nist.core.GenericObject) r13;

        $r31 = virtualinvoke $r27.<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()>();

        $z12 = interfaceinvoke $r31.<gov.nist.core.Match: boolean match(java.lang.String)>(r15);

        if $z12 != 0 goto label05;

     label26:
        return 0;

     label27:
        $r18 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $z5 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r18);

        if $z5 == 0 goto label29;

        $r23 = (gov.nist.core.GenericObject) r12;

        $z9 = virtualinvoke $r23.<gov.nist.core.GenericObject: boolean match(java.lang.Object)>(r13);

        if $z9 != 0 goto label29;

     label28:
        return 0;

     label29:
        $r21 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $z7 = staticinvoke <gov.nist.core.GenericObjectList: boolean isMySubclass(java.lang.Class)>($r21);

        if $z7 == 0 goto label05;

        $r20 = (gov.nist.core.GenericObjectList) r12;

        z0 = virtualinvoke $r20.<gov.nist.core.GenericObjectList: boolean match(java.lang.Object)>(r13);

     label30:
        if z0 != 0 goto label05;

        return 0;

     label31:
        $r34 := @caughtexception;

        r11 = $r34;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r11);

        goto label05;

     label32:
        $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/address/NetObject");

        if $z2 == 0 goto label33;

        return 1;

     label33:
        r4 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>();

        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label03;

     label34:
        if r13 != null goto label35;

        if r12 != null goto label05;

     label35:
        if r13 != null goto label23;

        if r12 == null goto label05;

        goto label23;

        catch java.lang.IllegalAccessException from label07 to label08 with label31;
        catch java.lang.IllegalAccessException from label09 to label10 with label31;
        catch java.lang.IllegalAccessException from label11 to label12 with label31;
        catch java.lang.IllegalAccessException from label13 to label14 with label31;
        catch java.lang.IllegalAccessException from label15 to label16 with label31;
        catch java.lang.IllegalAccessException from label17 to label18 with label31;
        catch java.lang.IllegalAccessException from label19 to label20 with label31;
        catch java.lang.IllegalAccessException from label21 to label22 with label31;
        catch java.lang.IllegalAccessException from label23 to label24 with label31;
        catch java.lang.IllegalAccessException from label25 to label26 with label31;
        catch java.lang.IllegalAccessException from label27 to label28 with label31;
        catch java.lang.IllegalAccessException from label29 to label30 with label31;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: java.lang.String encode()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.address.NetObject: java.lang.String USER> = "user";

        <gov.nist.javax.sip.address.NetObject: java.lang.String UDP> = "udp";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TTL> = "ttl";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TRANSPORT> = "transport";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TLS> = "tls";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TCP> = "tcp";

        <gov.nist.javax.sip.address.NetObject: java.lang.String SIPS> = "sips";

        <gov.nist.javax.sip.address.NetObject: java.lang.String SIP> = "sip";

        <gov.nist.javax.sip.address.NetObject: java.lang.String PHONE> = "phone";

        <gov.nist.javax.sip.address.NetObject: java.lang.String PARSER_PACKAGE> = "gov.nist.javax.sip.parser";

        <gov.nist.javax.sip.address.NetObject: java.lang.String NET_PACKAGE> = "gov.nist.javax.sip.address";

        <gov.nist.javax.sip.address.NetObject: java.lang.String METHOD> = "method";

        <gov.nist.javax.sip.address.NetObject: java.lang.String MADDR> = "maddr";

        <gov.nist.javax.sip.address.NetObject: java.lang.String LR> = "lr";

        <gov.nist.javax.sip.address.NetObject: java.lang.String GRUU> = "gr";

        <gov.nist.javax.sip.address.NetObject: java.lang.String CORE_PACKAGE> = "gov.nist.core";

        return;
    }
}
