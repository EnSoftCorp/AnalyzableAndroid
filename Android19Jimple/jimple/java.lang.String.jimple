public final class java.lang.String extends java.lang.Object implements java.io.Serializable, java.lang.Comparable, java.lang.CharSequence
{
    private static final char[] ASCII;
    public static final java.util.Comparator CASE_INSENSITIVE_ORDER;
    private static final char REPLACEMENT_CHAR;
    private static final long serialVersionUID;
    private final int count;
    private int hashCode;
    private final int offset;
    private final char[] value;

    static void <clinit>()
    {
        int i0, $i1;
        java.lang.String$CaseInsensitiveComparator $r0;
        char[] $r1, $r2, $r3;
        char $c2;

        <java.lang.String: long serialVersionUID> = -6849794470754667710L;

        <java.lang.String: char REPLACEMENT_CHAR> = 65533;

        $r0 = new java.lang.String$CaseInsensitiveComparator;

        specialinvoke $r0.<java.lang.String$CaseInsensitiveComparator: void <init>(java.lang.String$1)>(null);

        <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> = $r0;

        $r1 = newarray (char)[128];

        <java.lang.String: char[] ASCII> = $r1;

        i0 = 0;

     label1:
        $r2 = <java.lang.String: char[] ASCII>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label2;

        $r3 = <java.lang.String: char[] ASCII>;

        $c2 = (char) i0;

        $r3[i0] = $c2;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void <init>()
    {
        java.lang.String r0;
        char[] $r1;

        r0 := @this: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <libcore.util.EmptyArray: char[] CHAR>;

        r0.<java.lang.String: char[] value> = $r1;

        r0.<java.lang.String: int offset> = 0;

        r0.<java.lang.String: int count> = 0;

        return;
    }

    void <init>(int, int, char[])
    {
        java.lang.String r0;
        int i0, i1;
        char[] r1;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.lang.String: char[] value> = r1;

        r0.<java.lang.String: int offset> = i0;

        r0.<java.lang.String: int count> = i1;

        return;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r0, r1;
        char[] r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = r1.<java.lang.String: char[] value>;

        $i1 = lengthof $r3;

        $i0 = r1.<java.lang.String: int count>;

        if $i1 != $i0 goto label2;

        r2 = r1.<java.lang.String: char[] value>;

     label1:
        r0.<java.lang.String: char[] value> = r2;

        r0.<java.lang.String: int offset> = 0;

        $r5 = r0.<java.lang.String: char[] value>;

        $i6 = lengthof $r5;

        r0.<java.lang.String: int count> = $i6;

        return;

     label2:
        $r4 = r1.<java.lang.String: char[] value>;

        $i2 = r1.<java.lang.String: int offset>;

        $i3 = r1.<java.lang.String: int offset>;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        r2 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($r4, $i2, $i5);

        goto label1;
    }

    public void <init>(java.lang.StringBuffer)
    {
        java.lang.String r0;
        java.lang.StringBuffer r1;
        java.lang.Throwable r2, $r4;
        char[] $r3;
        int $i0;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.StringBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.lang.String: int offset> = 0;

        entermonitor r1;

     label1:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: char[] shareValue()>();

        r0.<java.lang.String: char[] value> = $r3;

        $i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        r0.<java.lang.String: int count> = $i0;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void <init>(java.lang.StringBuilder)
    {
        java.lang.String r0;
        java.lang.StringBuilder r1;
        int $i0, $i1, $i2;
        char[] $r2, $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.StringBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("stringBuilder == null");

        throw $r4;

     label1:
        r0.<java.lang.String: int offset> = 0;

        $i0 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        r0.<java.lang.String: int count> = $i0;

        $i1 = r0.<java.lang.String: int count>;

        $r2 = newarray (char)[$i1];

        r0.<java.lang.String: char[] value> = $r2;

        $i2 = r0.<java.lang.String: int count>;

        $r3 = r0.<java.lang.String: char[] value>;

        virtualinvoke r1.<java.lang.StringBuilder: void getChars(int,int,char[],int)>(0, $i2, $r3, 0);

        return;
    }

    public void <init>(byte[])
    {
        java.lang.String r0;
        byte[] r1;
        int $i0;

        r0 := @this: java.lang.String;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void <init>(byte[], int)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, $i1;

        r0 := @this: java.lang.String;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = lengthof r1;

        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int,int)>(r1, i0, 0, $i1);

        return;
    }

    public void <init>(byte[], int, int)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, i1;
        java.nio.charset.Charset $r2;

        r0 := @this: java.lang.String;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, i0, i1, $r2);

        return;
    }

    public void <init>(byte[], int, int, int)
    {
        java.lang.String r0;
        byte[] r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i14;
        char[] r2, $r4;
        java.lang.StringIndexOutOfBoundsException $r3;
        short $s11;
        byte $b12;
        char $c13;

        r0 := @this: java.lang.String;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i6 = i1 | i2;

        if $i6 < 0 goto label1;

        $i8 = lengthof r1;

        $i9 = $i8 - i1;

        if i2 <= $i9 goto label2;

     label1:
        $i7 = lengthof r1;

        $r3 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int)>($i7, i1, i2);

        throw $r3;

     label2:
        r0.<java.lang.String: int offset> = 0;

        $r4 = newarray (char)[i2];

        r0.<java.lang.String: char[] value> = $r4;

        r0.<java.lang.String: int count> = i2;

        i3 = i0 << 8;

        i4 = 0;

     label3:
        $i10 = r0.<java.lang.String: int count>;

        if i4 >= $i10 goto label4;

        r2 = r0.<java.lang.String: char[] value>;

        i5 = i1 + 1;

        $b12 = r1[i1];

        $s11 = 255 & $b12;

        $i14 = i3 + $s11;

        $c13 = (char) $i14;

        r2[i4] = $c13;

        i4 = i4 + 1;

        i1 = i5;

        goto label3;

     label4:
        return;
    }

    public void <init>(byte[], int, int, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r2;
        byte[] r1;
        int i0, i1;
        java.nio.charset.Charset $r3;

        r0 := @this: java.lang.String;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forNameUEE(java.lang.String)>(r2);

        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, i0, i1, $r3);

        return;
    }

    public void <init>(byte[], int, int, java.nio.charset.Charset)
    {
        java.lang.String r0, r3;
        byte[] r1;
        int i0, i1, i2, i3, i4, i5, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i19, i20, i21, i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i38, $i39, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i50;
        java.nio.charset.Charset r2;
        java.nio.CharBuffer r4;
        char[] r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        byte b6, b7, b18, $b37, $b49;
        short s22, $s32, $s33, $s34, $s35, $s36, $s40, $s51, $s52, $s56, $s57, $s58;
        java.lang.StringIndexOutOfBoundsException $r6;
        boolean $z0, $z1, $z2;
        java.nio.ByteBuffer $r7;
        char $c53, $c54, $c55, $c59;

        r0 := @this: java.lang.String;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.nio.charset.Charset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i25 = i0 | i1;

        if $i25 < 0 goto label01;

        $i27 = lengthof r1;

        $i26 = $i27 - i0;

        if i1 <= $i26 goto label02;

     label01:
        $i24 = lengthof r1;

        $r6 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int)>($i24, i0, i1);

        throw $r6;

     label02:
        r3 = virtualinvoke r2.<java.nio.charset.Charset: java.lang.String name()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z1 == 0 goto label22;

        r5 = newarray (char)[i1];

        i2 = i0 + i1;

        i3 = 0;

        i4 = i0;

     label03:
        if i4 >= i2 goto label20;

        i5 = i4 + 1;

        b6 = r1[i4];

        $s32 = b6 & 128;

        if $s32 != 0 goto label05;

        s22 = b6 & 255;

        i14 = i3 + 1;

        $c59 = (char) s22;

        r5[i3] = $c59;

     label04:
        i3 = i14;

        i4 = i5;

        goto label03;

     label05:
        $s36 = b6 & 224;

        if $s36 == 192 goto label06;

        $s51 = b6 & 240;

        if $s51 == 224 goto label06;

        $s52 = b6 & 248;

        if $s52 == 240 goto label06;

        $s58 = b6 & 252;

        if $s58 == 248 goto label06;

        $s57 = b6 & 254;

        if $s57 != 252 goto label19;

     label06:
        b7 = 1;

        $s35 = b6 & 240;

        if $s35 != 224 goto label08;

        b7 = 2;

     label07:
        $i39 = i5 + b7;

        if $i39 <= i2 goto label11;

        i23 = i3 + 1;

        r5[i3] = 65533;

        i3 = i23;

        i4 = i5;

        goto label03;

     label08:
        $s34 = b6 & 248;

        if $s34 != 240 goto label09;

        b7 = 3;

        goto label07;

     label09:
        $s33 = b6 & 252;

        if $s33 != 248 goto label10;

        b7 = 4;

        goto label07;

     label10:
        $s40 = b6 & 254;

        if $s40 != 252 goto label07;

        b7 = 5;

        goto label07;

     label11:
        $i38 = b7 - 1;

        $b37 = 31 >> $i38;

        i8 = b6 & $b37;

        i9 = 0;

        i4 = i5;

     label12:
        if i9 >= b7 goto label14;

        i19 = i4 + 1;

        b18 = r1[i4];

        $s56 = b18 & 192;

        if $s56 == 128 goto label13;

        i21 = i3 + 1;

        r5[i3] = 65533;

        i20 = i19 - 1;

        i3 = i21;

        i4 = i20;

        goto label03;

     label13:
        $i50 = i8 << 6;

        $b49 = b18 & 63;

        i8 = $i50 | $b49;

        i9 = i9 + 1;

        i4 = i19;

        goto label12;

     label14:
        if b7 == 2 goto label15;

        if i8 < 55296 goto label15;

        if i8 > 57343 goto label15;

        i16 = i3 + 1;

        r5[i3] = 65533;

        i3 = i16;

        goto label03;

     label15:
        if i8 <= 1114111 goto label16;

        i17 = i3 + 1;

        r5[i3] = 65533;

        i3 = i17;

        goto label03;

     label16:
        if i8 >= 65536 goto label18;

        i14 = i3 + 1;

        $c55 = (char) i8;

        r5[i3] = $c55;

     label17:
        i5 = i4;

        goto label04;

     label18:
        i11 = i8 & 65535;

        $i45 = i8 >> 16;

        $i46 = 31 & $i45;

        $i47 = -1 + $i46;

        $i48 = 65535 & $i47;

        $i41 = $i48 << 6;

        $i43 = 55296 | $i41;

        $i42 = i11 >> 10;

        i10 = $i43 | $i42;

        $i44 = i11 & 1023;

        i13 = 56320 | $i44;

        i12 = i3 + 1;

        $c53 = (char) i10;

        r5[i3] = $c53;

        i15 = i12 + 1;

        $c54 = (char) i13;

        r5[i12] = $c54;

        i14 = i15;

        goto label17;

     label19:
        i14 = i3 + 1;

        r5[i3] = 65533;

        goto label04;

     label20:
        if i3 != i1 goto label21;

        r0.<java.lang.String: int offset> = 0;

        r0.<java.lang.String: char[] value> = r5;

        r0.<java.lang.String: int count> = i3;

        return;

     label21:
        r0.<java.lang.String: int offset> = 0;

        $r16 = newarray (char)[i3];

        r0.<java.lang.String: char[] value> = $r16;

        r0.<java.lang.String: int count> = i3;

        $r15 = r0.<java.lang.String: char[] value>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, $r15, 0, i3);

        return;

     label22:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-1");

        if $z2 == 0 goto label23;

        r0.<java.lang.String: int offset> = 0;

        $r11 = newarray (char)[i1];

        r0.<java.lang.String: char[] value> = $r11;

        r0.<java.lang.String: int count> = i1;

        $r17 = r0.<java.lang.String: char[] value>;

        staticinvoke <java.nio.charset.Charsets: void isoLatin1BytesToChars(byte[],int,int,char[])>(r1, i0, i1, $r17);

        return;

     label23:
        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("US-ASCII");

        if $z0 == 0 goto label24;

        r0.<java.lang.String: int offset> = 0;

        $r13 = newarray (char)[i1];

        r0.<java.lang.String: char[] value> = $r13;

        r0.<java.lang.String: int count> = i1;

        $r12 = r0.<java.lang.String: char[] value>;

        staticinvoke <java.nio.charset.Charsets: void asciiBytesToChars(byte[],int,int,char[])>(r1, i0, i1, $r12);

        return;

     label24:
        $r7 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>(r1, i0, i1);

        r4 = virtualinvoke r2.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r7);

        r0.<java.lang.String: int offset> = 0;

        $i29 = virtualinvoke r4.<java.nio.CharBuffer: int length()>();

        r0.<java.lang.String: int count> = $i29;

        $i28 = r0.<java.lang.String: int count>;

        if $i28 <= 0 goto label25;

        $i31 = r0.<java.lang.String: int count>;

        $r10 = newarray (char)[$i31];

        r0.<java.lang.String: char[] value> = $r10;

        $r9 = virtualinvoke r4.<java.nio.CharBuffer: char[] array()>();

        $r14 = r0.<java.lang.String: char[] value>;

        $i30 = r0.<java.lang.String: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r14, 0, $i30);

        return;

     label25:
        $r8 = <libcore.util.EmptyArray: char[] CHAR>;

        r0.<java.lang.String: char[] value> = $r8;

        return;
    }

    public void <init>(byte[], java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r2;
        byte[] r1;
        int $i0;
        java.nio.charset.Charset $r3;

        r0 := @this: java.lang.String;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        $i0 = lengthof r1;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forNameUEE(java.lang.String)>(r2);

        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, 0, $i0, $r3);

        return;
    }

    public void <init>(byte[], java.nio.charset.Charset)
    {
        java.lang.String r0;
        byte[] r1;
        java.nio.charset.Charset r2;
        int $i0;

        r0 := @this: java.lang.String;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.nio.charset.Charset;

        $i0 = lengthof r1;

        specialinvoke r0.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(r1, 0, $i0, r2);

        return;
    }

    public void <init>(char[])
    {
        java.lang.String r0;
        char[] r1;
        int $i0;

        r0 := @this: java.lang.String;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        specialinvoke r0.<java.lang.String: void <init>(char[],int,int)>(r1, 0, $i0);

        return;
    }

    public void <init>(char[], int, int)
    {
        java.lang.String r0;
        char[] r1, $r3, $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringIndexOutOfBoundsException $r2;

        r0 := @this: java.lang.String;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = i0 | i1;

        if $i2 < 0 goto label1;

        $i4 = lengthof r1;

        $i5 = $i4 - i0;

        if i1 <= $i5 goto label2;

     label1:
        $i3 = lengthof r1;

        $r2 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int)>($i3, i0, i1);

        throw $r2;

     label2:
        r0.<java.lang.String: int offset> = 0;

        $r3 = newarray (char)[i1];

        r0.<java.lang.String: char[] value> = $r3;

        r0.<java.lang.String: int count> = i1;

        $r4 = r0.<java.lang.String: char[] value>;

        $i6 = r0.<java.lang.String: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r4, 0, $i6);

        return;
    }

    public void <init>(int[], int, int)
    {
        java.lang.String r0;
        int[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.StringIndexOutOfBoundsException $r2;
        char[] $r3, $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: java.lang.String;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("codePoints == null");

        throw $r5;

     label1:
        $i5 = i0 | i1;

        if $i5 < 0 goto label2;

        $i7 = lengthof r1;

        $i8 = $i7 - i0;

        if i1 <= $i8 goto label3;

     label2:
        $i6 = lengthof r1;

        $r2 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int)>($i6, i0, i1);

        throw $r2;

     label3:
        r0.<java.lang.String: int offset> = 0;

        $i9 = i1 * 2;

        $r3 = newarray (char)[$i9];

        r0.<java.lang.String: char[] value> = $r3;

        i2 = i0 + i1;

        i3 = 0;

        i4 = i0;

     label4:
        if i4 >= i2 goto label5;

        $i10 = r1[i4];

        $r4 = r0.<java.lang.String: char[] value>;

        $i11 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>($i10, $r4, i3);

        i3 = i3 + $i11;

        i4 = i4 + 1;

        goto label4;

     label5:
        r0.<java.lang.String: int count> = i3;

        return;
    }

    public static java.lang.String copyValueOf(char[])
    {
        char[] r0;
        java.lang.String $r1;
        int $i0;

        r0 := @parameter0: char[];

        $r1 = new java.lang.String;

        $i0 = lengthof r0;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static java.lang.String copyValueOf(char[], int, int)
    {
        char[] r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r0, i0, i1);

        return $r1;
    }

    private java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int, int, int)
    {
        java.lang.String r0;
        int i0, i1, i2;
        java.lang.StringIndexOutOfBoundsException $r1;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int,int,int)>(i0, i1, i2);

        throw $r1;
    }

    private native int fastIndexOf(int, int);

    private char foldCase(char)
    {
        java.lang.String r0;
        char c0, $c1, $c2;
        int $i3;

        r0 := @this: java.lang.String;

        c0 := @parameter0: char;

        if c0 >= 128 goto label2;

        if 65 > c0 goto label1;

        if c0 > 90 goto label1;

        $i3 = c0 + 32;

        c0 = (char) $i3;

     label1:
        return c0;

     label2:
        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c0);

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        return $c2;
    }

    public static transient java.lang.String format(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        java.util.Locale $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, r0, r1);

        return $r3;
    }

    public static transient java.lang.String format(java.util.Locale, java.lang.String, java.lang.Object[])
    {
        java.util.Locale r0;
        java.lang.String r1, $r6;
        java.lang.Object[] r2;
        int i0, i1, $i2, $i3;
        java.util.Formatter $r3, $r5;
        java.lang.StringBuilder $r4;
        java.lang.NullPointerException $r7;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("format == null");

        throw $r7;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if r2 != null goto label3;

        i1 = 0;

     label2:
        $r3 = new java.util.Formatter;

        $r4 = new java.lang.StringBuilder;

        $i3 = i0 + i1;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i3);

        specialinvoke $r3.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r4, r0);

        $r5 = virtualinvoke $r3.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(r1, r2);

        $r6 = virtualinvoke $r5.<java.util.Formatter: java.lang.String toString()>();

        return $r6;

     label3:
        $i2 = lengthof r2;

        i1 = 10 * $i2;

        goto label2;
    }

    private java.lang.StringIndexOutOfBoundsException indexAndLength(int)
    {
        java.lang.String r0;
        int i0;
        java.lang.StringIndexOutOfBoundsException $r1;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String,int)>(r0, i0);

        throw $r1;
    }

    private static int indexOf(java.lang.String, java.lang.String, int, int, char)
    {
        java.lang.String r0, r1;
        int i0, i1, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i24, $i25, $i26;
        char c2, $c12, $c13, $c20, $c22, $c23;
        char[] r2, r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        c2 := @parameter4: char;

        r2 = r0.<java.lang.String: char[] value>;

        i3 = r0.<java.lang.String: int offset>;

        i4 = r0.<java.lang.String: int count>;

        r3 = r1.<java.lang.String: char[] value>;

        i5 = r1.<java.lang.String: int offset>;

        $i11 = r1.<java.lang.String: int count>;

        i6 = -1 + $i11;

        i7 = i3 + i4;

        i8 = i3 + i6;

     label1:
        if i8 >= i7 goto label8;

        $c13 = r2[i8];

        if c2 != $c13 goto label6;

        i9 = 0;

     label2:
        if i9 >= i6 goto label5;

        $i19 = i9 + i5;

        $c23 = r3[$i19];

        $i18 = i8 + i9;

        $i21 = $i18 - i6;

        $c20 = r2[$i21];

        if $c23 == $c20 goto label4;

        i10 = 1;

        $c22 = r2[i8];

        $i25 = 1 << $c22;

        $i24 = i0 & $i25;

        if $i24 != 0 goto label3;

        i10 = 1 + i9;

     label3:
        $i26 = staticinvoke <java.lang.Math: int max(int,int)>(i1, i10);

        i8 = i8 + $i26;

        goto label1;

     label4:
        i9 = i9 + 1;

        goto label2;

     label5:
        $i17 = i8 - i6;

        $i16 = $i17 - i3;

        return $i16;

     label6:
        $c12 = r2[i8];

        $i15 = 1 << $c12;

        $i14 = i0 & $i15;

        if $i14 != 0 goto label7;

        i8 = i8 + i6;

     label7:
        i8 = i8 + 1;

        goto label1;

     label8:
        return -1;
    }

    private int indexOfSupplementary(int, int)
    {
        java.lang.String r0, $r2;
        int i0, i1, $i2, $i3;
        char[] r1;
        boolean $z0;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i0);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        r1 = staticinvoke <java.lang.Character: char[] toChars(int)>(i0);

        $r2 = new java.lang.String;

        $i2 = lengthof r1;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(0, $i2, r1);

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>($r2, i1);

        return $i3;
    }

    private int lastIndexOfSupplementary(int, int)
    {
        java.lang.String r0, $r2;
        int i0, i1, $i2, $i3;
        char[] r1;
        boolean $z0;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i0);

        if $z0 != 0 goto label1;

        return -1;

     label1:
        r1 = staticinvoke <java.lang.Character: char[] toChars(int)>(i0);

        $r2 = new java.lang.String;

        $i2 = lengthof r1;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>(0, $i2, r1);

        $i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>($r2, i1);

        return $i3;
    }

    private java.lang.StringIndexOutOfBoundsException startEndAndLength(int, int)
    {
        java.lang.String r0;
        int i0, i1, $i2;
        java.lang.StringIndexOutOfBoundsException $r1;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringIndexOutOfBoundsException;

        $i2 = i1 - i0;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String,int,int)>(r0, i0, $i2);

        throw $r1;
    }

    public static java.lang.String valueOf(char)
    {
        char c0;
        java.lang.String r0, $r1, $r3;
        char[] $r2, $r4;

        c0 := @parameter0: char;

        if c0 >= 128 goto label2;

        $r3 = new java.lang.String;

        $r4 = <java.lang.String: char[] ASCII>;

        specialinvoke $r3.<java.lang.String: void <init>(int,int,char[])>(c0, 1, $r4);

        r0 = $r3;

     label1:
        r0.<java.lang.String: int hashCode> = c0;

        return r0;

     label2:
        $r1 = new java.lang.String;

        $r2 = newarray (char)[1];

        $r2[0] = c0;

        specialinvoke $r1.<java.lang.String: void <init>(int,int,char[])>(0, 1, $r2);

        r0 = $r1;

        goto label1;
    }

    public static java.lang.String valueOf(double)
    {
        double d0;
        java.lang.String $r0;

        d0 := @parameter0: double;

        $r0 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        return $r0;
    }

    public static java.lang.String valueOf(float)
    {
        float f0;
        java.lang.String $r0;

        f0 := @parameter0: float;

        $r0 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(f0);

        return $r0;
    }

    public static java.lang.String valueOf(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;
    }

    public static java.lang.String valueOf(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        return $r0;
    }

    public static java.lang.String valueOf(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;

     label1:
        return "null";
    }

    public static java.lang.String valueOf(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        return "true";

     label1:
        return "false";
    }

    public static java.lang.String valueOf(char[])
    {
        char[] r0;
        java.lang.String $r1;
        int $i0;

        r0 := @parameter0: char[];

        $r1 = new java.lang.String;

        $i0 = lengthof r0;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static java.lang.String valueOf(char[], int, int)
    {
        char[] r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r0, i0, i1);

        return $r1;
    }

    void _getChars(int, int, char[], int)
    {
        java.lang.String r0;
        int i0, i1, i2, $i3, $i4, $i5;
        char[] r1, $r2;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        $r2 = r0.<java.lang.String: char[] value>;

        $i3 = r0.<java.lang.String: int offset>;

        $i5 = i0 + $i3;

        $i4 = i1 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i5, r1, i2, $i4);

        return;
    }

    public char charAt(int)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3;
        java.lang.StringIndexOutOfBoundsException $r1;
        char[] $r2;
        char $c4;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<java.lang.String: int count>;

        if i0 < $i1 goto label2;

     label1:
        $r1 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException indexAndLength(int)>(i0);

        throw $r1;

     label2:
        $r2 = r0.<java.lang.String: char[] value>;

        $i2 = r0.<java.lang.String: int offset>;

        $i3 = i0 + $i2;

        $c4 = $r2[$i3];

        return $c4;
    }

    public int codePointAt(int)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringIndexOutOfBoundsException $r1;
        char[] $r2;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<java.lang.String: int count>;

        if i0 < $i1 goto label2;

     label1:
        $r1 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException indexAndLength(int)>(i0);

        throw $r1;

     label2:
        $r2 = r0.<java.lang.String: char[] value>;

        $i2 = r0.<java.lang.String: int offset>;

        $i6 = i0 + $i2;

        $i4 = r0.<java.lang.String: int offset>;

        $i3 = r0.<java.lang.String: int count>;

        $i5 = $i4 + $i3;

        $i7 = staticinvoke <java.lang.Character: int codePointAt(char[],int,int)>($r2, $i6, $i5);

        return $i7;
    }

    public int codePointBefore(int)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringIndexOutOfBoundsException $r1;
        char[] $r2;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        $i1 = r0.<java.lang.String: int count>;

        if i0 <= $i1 goto label2;

     label1:
        $r1 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException indexAndLength(int)>(i0);

        throw $r1;

     label2:
        $r2 = r0.<java.lang.String: char[] value>;

        $i2 = r0.<java.lang.String: int offset>;

        $i4 = i0 + $i2;

        $i3 = r0.<java.lang.String: int offset>;

        $i5 = staticinvoke <java.lang.Character: int codePointBefore(char[],int,int)>($r2, $i4, $i3);

        return $i5;
    }

    public int codePointCount(int, int)
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringIndexOutOfBoundsException $r1;
        char[] $r2;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < 0 goto label1;

        $i2 = r0.<java.lang.String: int count>;

        if i1 > $i2 goto label1;

        if i0 <= i1 goto label2;

     label1:
        $r1 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int)>(i0, i1);

        throw $r1;

     label2:
        $r2 = r0.<java.lang.String: char[] value>;

        $i3 = r0.<java.lang.String: int offset>;

        $i5 = i0 + $i3;

        $i4 = i1 - i0;

        $i6 = staticinvoke <java.lang.Character: int codePointCount(char[],int,int)>($r2, $i5, $i4);

        return $i6;
    }

    public volatile int compareTo(java.lang.Object)
    {
        java.lang.String r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $i0 = virtualinvoke r0.<java.lang.String: int compareTo(java.lang.String)>($r2);

        return $i0;
    }

    public native int compareTo(java.lang.String);

    public int compareToIgnoreCase(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i11, $i12, i13, $i14, $i15, $i17;
        char[] r2, r3;
        char c9, c10, $c16, $c18;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        i0 = r0.<java.lang.String: int offset>;

        i1 = r1.<java.lang.String: int offset>;

        i2 = r0.<java.lang.String: int offset>;

        $i15 = r0.<java.lang.String: int count>;

        $i12 = r1.<java.lang.String: int count>;

        if $i15 >= $i12 goto label3;

        i3 = r0.<java.lang.String: int count>;

     label1:
        i4 = i2 + i3;

        r2 = r1.<java.lang.String: char[] value>;

        i5 = i1;

        i6 = i0;

     label2:
        if i6 >= i4 goto label5;

        r3 = r0.<java.lang.String: char[] value>;

        i8 = i6 + 1;

        c9 = r3[i6];

        i11 = i5 + 1;

        c10 = r2[i5];

        if c9 != c10 goto label4;

        i5 = i11;

        i6 = i8;

        goto label2;

     label3:
        i3 = r1.<java.lang.String: int count>;

        goto label1;

     label4:
        $c16 = specialinvoke r0.<java.lang.String: char foldCase(char)>(c9);

        $c18 = specialinvoke r0.<java.lang.String: char foldCase(char)>(c10);

        i13 = $c16 - $c18;

        if i13 == 0 goto label6;

        return i13;

     label5:
        $i17 = r0.<java.lang.String: int count>;

        $i14 = r1.<java.lang.String: int count>;

        i7 = $i17 - $i14;

        return i7;

     label6:
        i5 = i11;

        i6 = i8;

        goto label2;
    }

    public java.lang.String concat(java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        char[] r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        $i0 = r1.<java.lang.String: int count>;

        if $i0 <= 0 goto label2;

        $i2 = r0.<java.lang.String: int count>;

        if $i2 <= 0 goto label2;

        $i4 = r0.<java.lang.String: int count>;

        $i3 = r1.<java.lang.String: int count>;

        $i5 = $i4 + $i3;

        r2 = newarray (char)[$i5];

        $r3 = r0.<java.lang.String: char[] value>;

        $i7 = r0.<java.lang.String: int offset>;

        $i6 = r0.<java.lang.String: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i7, r2, 0, $i6);

        $r4 = r1.<java.lang.String: char[] value>;

        $i10 = r1.<java.lang.String: int offset>;

        $i9 = r0.<java.lang.String: int count>;

        $i8 = r1.<java.lang.String: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i10, r2, $i9, $i8);

        $r5 = new java.lang.String;

        $i11 = lengthof r2;

        specialinvoke $r5.<java.lang.String: void <init>(int,int,char[])>(0, $i11, r2);

        r1 = $r5;

     label1:
        return r1;

     label2:
        $i1 = r0.<java.lang.String: int count>;

        if $i1 == 0 goto label1;

        return r0;
    }

    public boolean contains(java.lang.CharSequence)
    {
        java.lang.String r0, $r2;
        java.lang.CharSequence r1;
        int $i0;
        java.lang.NullPointerException $r3;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("cs == null");

        throw $r3;

     label1:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>($r2);

        if $i0 < 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean contentEquals(java.lang.CharSequence)
    {
        java.lang.String r0, $r2;
        java.lang.CharSequence r1;
        int i0, $i1, $i2;
        boolean $z0;
        java.lang.NullPointerException $r3;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("cs == null");

        throw $r3;

     label1:
        i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $i1 = r0.<java.lang.String: int count>;

        if i0 == $i1 goto label2;

        return 0;

     label2:
        if i0 != 0 goto label3;

        $i2 = r0.<java.lang.String: int count>;

        if $i2 != 0 goto label3;

        return 1;

     label3:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, $r2, 0, i0);

        return $z0;
    }

    public boolean contentEquals(java.lang.StringBuffer)
    {
        java.lang.String r0, $r3;
        java.lang.StringBuffer r1;
        java.lang.Throwable r2, $r5;
        int i0, $i1;
        boolean z0;
        char[] $r4;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.StringBuffer;

        entermonitor r1;

     label1:
        i0 = virtualinvoke r1.<java.lang.StringBuffer: int length()>();

        $i1 = r0.<java.lang.String: int count>;

        if $i1 == i0 goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        $r3 = new java.lang.String;

        $r4 = virtualinvoke r1.<java.lang.StringBuffer: char[] getValue()>();

        specialinvoke $r3.<java.lang.String: void <init>(int,int,char[])>(0, i0, $r4);

        z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, $r3, 0, i0);

        exitmonitor r1;

     label4:
        return z0;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

     label6:
        exitmonitor r1;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public boolean endsWith(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        $i1 = r0.<java.lang.String: int count>;

        $i0 = r1.<java.lang.String: int count>;

        $i3 = $i1 - $i0;

        $i2 = r1.<java.lang.String: int count>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>($i3, r1, 0, $i2);

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.String r0, r2;
        java.lang.Object r1;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        char[] r3, r4;
        boolean $z0;
        char $c7, $c8;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label7;

        r2 = (java.lang.String) r1;

        i0 = r0.<java.lang.String: int count>;

        $i4 = r2.<java.lang.String: int count>;

        if $i4 == i0 goto label3;

        return 0;

     label3:
        $i5 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        $i6 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        if $i5 == $i6 goto label4;

        return 0;

     label4:
        r3 = r0.<java.lang.String: char[] value>;

        i1 = r0.<java.lang.String: int offset>;

        r4 = r2.<java.lang.String: char[] value>;

        i2 = r2.<java.lang.String: int offset>;

        i3 = i1 + i0;

     label5:
        if i1 >= i3 goto label1;

        $c8 = r3[i1];

        $c7 = r4[i2];

        if $c8 == $c7 goto label6;

        return 0;

     label6:
        i1 = i1 + 1;

        i2 = i2 + 1;

        goto label5;

     label7:
        return 0;
    }

    public boolean equalsIgnoreCase(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, i4, i5, i7, $i9, $i10, $i11, $i13;
        char[] r2, r3;
        char c6, c8, $c12, $c14;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        if r1 != r0 goto label2;

     label1:
        return 1;

     label2:
        if r1 == null goto label3;

        $i10 = r0.<java.lang.String: int count>;

        $i9 = r1.<java.lang.String: int count>;

        if $i10 == $i9 goto label4;

     label3:
        return 0;

     label4:
        i0 = r0.<java.lang.String: int offset>;

        i1 = r1.<java.lang.String: int offset>;

        $i13 = r0.<java.lang.String: int offset>;

        $i11 = r0.<java.lang.String: int count>;

        i2 = $i13 + $i11;

        r2 = r1.<java.lang.String: char[] value>;

        i3 = i1;

        i4 = i0;

     label5:
        if i4 >= i2 goto label1;

        r3 = r0.<java.lang.String: char[] value>;

        i5 = i4 + 1;

        c6 = r3[i4];

        i7 = i3 + 1;

        c8 = r2[i3];

        if c6 == c8 goto label6;

        $c12 = specialinvoke r0.<java.lang.String: char foldCase(char)>(c6);

        $c14 = specialinvoke r0.<java.lang.String: char foldCase(char)>(c8);

        if $c12 == $c14 goto label6;

        return 0;

     label6:
        i3 = i7;

        i4 = i5;

        goto label5;
    }

    public void getBytes(int, int, byte[], int)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i11, $i12, i13;
        byte[] r1;
        java.lang.StringIndexOutOfBoundsException $r3, $r6;
        char[] $r4;
        char $c9;
        byte $b10;
        java.lang.ArrayIndexOutOfBoundsException $r5;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        i2 := @parameter3: int;

        if i0 < 0 goto label7;

        if i0 > i1 goto label7;

        $i6 = r0.<java.lang.String: int count>;

        if i1 > $i6 goto label7;

        $i7 = r0.<java.lang.String: int offset>;

        i3 = i1 + $i7;

     label1:
        $i8 = r0.<java.lang.String: int offset>;

        i4 = i0 + $i8;

     label2:
        i5 = i2;

     label3:
        if i4 >= i3 goto label8;

        i13 = i5 + 1;

     label4:
        $r4 = r0.<java.lang.String: char[] value>;

        $c9 = $r4[i4];

        $b10 = (byte) $c9;

        r1[i5] = $b10;

     label5:
        i4 = i4 + 1;

        i5 = i13;

        goto label3;

     label6:
        $r5 := @caughtexception;

        $i12 = lengthof r1;

        $i11 = i3 - i0;

        $r6 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int)>($i12, i13, $i11);

        throw $r6;

     label7:
        $r3 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int)>(i0, i1);

        throw $r3;

     label8:
        return;

        catch java.lang.ArrayIndexOutOfBoundsException from label1 to label2 with label6;
        catch java.lang.ArrayIndexOutOfBoundsException from label4 to label5 with label6;
    }

    public byte[] getBytes()
    {
        java.lang.String r0;
        java.nio.charset.Charset $r1;
        byte[] $r2;

        r0 := @this: java.lang.String;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        return $r2;
    }

    public byte[] getBytes(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forNameUEE(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        return $r3;
    }

    public byte[] getBytes(java.nio.charset.Charset)
    {
        java.lang.String r0, r2;
        java.nio.charset.Charset r1;
        java.nio.ByteBuffer r3;
        byte[] r4, $r9, $r11, $r13, $r16;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        char[] $r5, $r10, $r12, $r14, $r15;
        java.nio.CharBuffer $r6, $r7;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.nio.charset.Charset;

        r2 = virtualinvoke r1.<java.nio.charset.Charset: java.lang.String name()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z0 == 0 goto label1;

        $r15 = r0.<java.lang.String: char[] value>;

        $i9 = r0.<java.lang.String: int offset>;

        $i10 = r0.<java.lang.String: int count>;

        $r16 = staticinvoke <java.nio.charset.Charsets: byte[] toUtf8Bytes(char[],int,int)>($r15, $i9, $i10);

        return $r16;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-1");

        if $z1 == 0 goto label2;

        $r14 = r0.<java.lang.String: char[] value>;

        $i7 = r0.<java.lang.String: int offset>;

        $i8 = r0.<java.lang.String: int count>;

        $r13 = staticinvoke <java.nio.charset.Charsets: byte[] toIsoLatin1Bytes(char[],int,int)>($r14, $i7, $i8);

        return $r13;

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("US-ASCII");

        if $z2 == 0 goto label3;

        $r12 = r0.<java.lang.String: char[] value>;

        $i5 = r0.<java.lang.String: int offset>;

        $i6 = r0.<java.lang.String: int count>;

        $r11 = staticinvoke <java.nio.charset.Charsets: byte[] toAsciiBytes(char[],int,int)>($r12, $i5, $i6);

        return $r11;

     label3:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16BE");

        if $z3 == 0 goto label4;

        $r10 = r0.<java.lang.String: char[] value>;

        $i3 = r0.<java.lang.String: int offset>;

        $i4 = r0.<java.lang.String: int count>;

        $r9 = staticinvoke <java.nio.charset.Charsets: byte[] toBigEndianUtf16Bytes(char[],int,int)>($r10, $i3, $i4);

        return $r9;

     label4:
        $r5 = r0.<java.lang.String: char[] value>;

        $i1 = r0.<java.lang.String: int offset>;

        $i0 = r0.<java.lang.String: int count>;

        $r6 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(char[],int,int)>($r5, $i1, $i0);

        $r7 = virtualinvoke $r6.<java.nio.CharBuffer: java.nio.CharBuffer asReadOnlyBuffer()>();

        r3 = virtualinvoke r1.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.nio.CharBuffer)>($r7);

        $i2 = virtualinvoke r3.<java.nio.ByteBuffer: int limit()>();

        r4 = newarray (byte)[$i2];

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r4);

        return r4;
    }

    public void getChars(int, int, char[], int)
    {
        java.lang.String r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        char[] r1, $r3;
        java.lang.StringIndexOutOfBoundsException $r2;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: char[];

        i2 := @parameter3: int;

        if i0 < 0 goto label1;

        if i0 > i1 goto label1;

        $i3 = r0.<java.lang.String: int count>;

        if i1 > $i3 goto label1;

        $r3 = r0.<java.lang.String: char[] value>;

        $i4 = r0.<java.lang.String: int offset>;

        $i6 = i0 + $i4;

        $i5 = i1 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i6, r1, i2, $i5);

        return;

     label1:
        $r2 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int)>(i0, i1);

        throw $r2;
    }

    public int hashCode()
    {
        java.lang.String r0;
        int i0, i1, i2, $i3, $i4, $i5, $i7;
        char[] r1;
        char $c6;

        r0 := @this: java.lang.String;

        i0 = r0.<java.lang.String: int hashCode>;

        if i0 != 0 goto label4;

        $i3 = r0.<java.lang.String: int count>;

        if $i3 != 0 goto label1;

        return 0;

     label1:
        $i5 = r0.<java.lang.String: int count>;

        $i4 = r0.<java.lang.String: int offset>;

        i1 = $i5 + $i4;

        r1 = r0.<java.lang.String: char[] value>;

        i2 = r0.<java.lang.String: int offset>;

     label2:
        if i2 >= i1 goto label3;

        $i7 = i0 * 31;

        $c6 = r1[i2];

        i0 = $i7 + $c6;

        i2 = i2 + 1;

        goto label2;

     label3:
        r0.<java.lang.String: int hashCode> = i0;

     label4:
        return i0;
    }

    public int indexOf(int)
    {
        java.lang.String r0;
        int i0, $i1, $i2;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        if i0 <= 65535 goto label1;

        $i2 = specialinvoke r0.<java.lang.String: int indexOfSupplementary(int,int)>(i0, 0);

        return $i2;

     label1:
        $i1 = specialinvoke r0.<java.lang.String: int fastIndexOf(int,int)>(i0, 0);

        return $i1;
    }

    public int indexOf(int, int)
    {
        java.lang.String r0;
        int i0, i1, $i2, $i3;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 <= 65535 goto label1;

        $i3 = specialinvoke r0.<java.lang.String: int indexOfSupplementary(int,int)>(i0, i1);

        return $i3;

     label1:
        $i2 = specialinvoke r0.<java.lang.String: int fastIndexOf(int,int)>(i0, i1);

        return $i2;
    }

    public int indexOf(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, i5, i6, i7, i8, $i9, $i10;
        char[] r2, r3;
        char c4, $c11, $c12;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = r1.<java.lang.String: int count>;

        i2 = r0.<java.lang.String: int count>;

        if i1 <= 0 goto label8;

        if i1 <= i2 goto label2;

        i6 = -1;

     label1:
        return i6;

     label2:
        r2 = r1.<java.lang.String: char[] value>;

        i3 = r1.<java.lang.String: int offset>;

        c4 = r2[i3];

        i5 = i3 + i1;

     label3:
        i6 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(c4, i0);

        if i6 == -1 goto label4;

        $i9 = i1 + i6;

        if $i9 <= i2 goto label5;

     label4:
        return -1;

     label5:
        $i10 = r0.<java.lang.String: int offset>;

        i7 = i6 + $i10;

        i8 = i3;

        r3 = r0.<java.lang.String: char[] value>;

     label6:
        i8 = i8 + 1;

        if i8 >= i5 goto label7;

        i7 = i7 + 1;

        $c11 = r3[i7];

        $c12 = r2[i8];

        if $c11 == $c12 goto label6;

     label7:
        if i8 == i5 goto label1;

        i0 = i6 + 1;

        goto label3;

     label8:
        if i2 >= 0 goto label9;

        i2 = 0;

     label9:
        return i2;
    }

    public int indexOf(java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, i5, i6, i7, i8, $i9, $i10, $i12;
        char[] r2, r3;
        char c4, $c11, $c13;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 >= 0 goto label01;

        i0 = 0;

     label01:
        i1 = r1.<java.lang.String: int count>;

        i2 = r0.<java.lang.String: int count>;

        if i1 <= 0 goto label09;

        $i9 = i1 + i0;

        if $i9 <= i2 goto label03;

        i6 = -1;

     label02:
        return i6;

     label03:
        r2 = r1.<java.lang.String: char[] value>;

        i3 = r1.<java.lang.String: int offset>;

        c4 = r2[i3];

        i5 = i3 + i1;

     label04:
        i6 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(c4, i0);

        if i6 == -1 goto label05;

        $i10 = i1 + i6;

        if $i10 <= i2 goto label06;

     label05:
        return -1;

     label06:
        $i12 = r0.<java.lang.String: int offset>;

        i7 = i6 + $i12;

        i8 = i3;

        r3 = r0.<java.lang.String: char[] value>;

     label07:
        i8 = i8 + 1;

        if i8 >= i5 goto label08;

        i7 = i7 + 1;

        $c13 = r3[i7];

        $c11 = r2[i8];

        if $c13 == $c11 goto label07;

     label08:
        if i8 == i5 goto label02;

        i0 = i6 + 1;

        goto label04;

     label09:
        if i0 >= i2 goto label10;

        i2 = i0;

     label10:
        return i2;
    }

    public native java.lang.String intern();

    public boolean isEmpty()
    {
        java.lang.String r0;
        int $i0;

        r0 := @this: java.lang.String;

        $i0 = r0.<java.lang.String: int count>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int lastIndexOf(int)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, $i4, $i6, $i7;
        char[] r1;
        char $c5;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        if i0 <= 65535 goto label1;

        $i7 = specialinvoke r0.<java.lang.String: int lastIndexOfSupplementary(int,int)>(i0, 2147483647);

        return $i7;

     label1:
        i1 = r0.<java.lang.String: int count>;

        i2 = r0.<java.lang.String: int offset>;

        r1 = r0.<java.lang.String: char[] value>;

        $i4 = i2 + i1;

        i3 = -1 + $i4;

     label2:
        if i3 < i2 goto label4;

        $c5 = r1[i3];

        if $c5 != i0 goto label3;

        $i6 = i3 - i2;

        return $i6;

     label3:
        i3 = i3 + -1;

        goto label2;

     label4:
        return -1;
    }

    public int lastIndexOf(int, int)
    {
        java.lang.String r0;
        int i0, i1, i2, i3, i4, $i6, $i7;
        char[] r1;
        char $c5;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 <= 65535 goto label1;

        $i7 = specialinvoke r0.<java.lang.String: int lastIndexOfSupplementary(int,int)>(i0, i1);

        return $i7;

     label1:
        i2 = r0.<java.lang.String: int count>;

        i3 = r0.<java.lang.String: int offset>;

        r1 = r0.<java.lang.String: char[] value>;

        if i1 < 0 goto label5;

        if i1 < i2 goto label2;

        i1 = i2 - 1;

     label2:
        i4 = i3 + i1;

     label3:
        if i4 < i3 goto label5;

        $c5 = r1[i4];

        if $c5 != i0 goto label4;

        $i6 = i4 - i3;

        return $i6;

     label4:
        i4 = i4 + -1;

        goto label3;

     label5:
        return -1;
    }

    public int lastIndexOf(java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0, $i1;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<java.lang.String: int count>;

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String,int)>(r1, $i0);

        return $i1;
    }

    public int lastIndexOf(java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i14, $i15;
        char[] r2, r3;
        char c4, $c13, $c16;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = r1.<java.lang.String: int count>;

        $i9 = r0.<java.lang.String: int count>;

        if i1 > $i9 goto label10;

        if i0 < 0 goto label10;

        if i1 <= 0 goto label07;

        $i11 = r0.<java.lang.String: int count>;

        $i12 = $i11 - i1;

        if i0 <= $i12 goto label01;

        $i15 = r0.<java.lang.String: int count>;

        i0 = $i15 - i1;

     label01:
        r2 = r1.<java.lang.String: char[] value>;

        i3 = r1.<java.lang.String: int offset>;

        c4 = r2[i3];

        i5 = i3 + i1;

     label02:
        i6 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(c4, i0);

        if i6 != -1 goto label04;

        i6 = -1;

     label03:
        return i6;

     label04:
        $i14 = r0.<java.lang.String: int offset>;

        i7 = i6 + $i14;

        i8 = i3;

     label05:
        i8 = i8 + 1;

        if i8 >= i5 goto label06;

        r3 = r0.<java.lang.String: char[] value>;

        i7 = i7 + 1;

        $c16 = r3[i7];

        $c13 = r2[i8];

        if $c16 == $c13 goto label05;

     label06:
        if i8 == i5 goto label03;

        i0 = i6 - 1;

        goto label02;

     label07:
        $i10 = r0.<java.lang.String: int count>;

        if i0 >= $i10 goto label09;

        i2 = i0;

     label08:
        return i2;

     label09:
        i2 = r0.<java.lang.String: int count>;

        goto label08;

     label10:
        return -1;
    }

    public int length()
    {
        java.lang.String r0;
        int $i0;

        r0 := @this: java.lang.String;

        $i0 = r0.<java.lang.String: int count>;

        return $i0;
    }

    public boolean matches(java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>(r1, r0);

        return $z0;
    }

    public int offsetByCodePoints(int, int)
    {
        java.lang.String r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] $r1;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = r0.<java.lang.String: int offset>;

        i2 = i0 + $i3;

        $r1 = r0.<java.lang.String: char[] value>;

        $i5 = r0.<java.lang.String: int offset>;

        $i4 = r0.<java.lang.String: int count>;

        $i6 = staticinvoke <java.lang.Character: int offsetByCodePoints(char[],int,int,int,int)>($r1, $i5, $i4, i2, i1);

        $i7 = r0.<java.lang.String: int offset>;

        $i8 = $i6 - $i7;

        return $i8;
    }

    public boolean regionMatches(int, java.lang.String, int, int)
    {
        java.lang.String r0, r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        boolean z0;
        char[] r2, r3;
        char $c13, $c15;
        java.lang.NullPointerException $r4;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 = 1;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("string == null");

        throw $r4;

     label1:
        if i1 < 0 goto label2;

        $i6 = r1.<java.lang.String: int count>;

        $i7 = $i6 - i1;

        if $i7 >= i2 goto label4;

     label2:
        z0 = 0;

     label3:
        return z0;

     label4:
        if i0 < 0 goto label5;

        $i8 = r0.<java.lang.String: int count>;

        $i9 = $i8 - i0;

        if $i9 >= i2 goto label6;

     label5:
        return 0;

     label6:
        if i2 <= 0 goto label3;

        $i10 = r0.<java.lang.String: int offset>;

        i3 = i0 + $i10;

        $i12 = r1.<java.lang.String: int offset>;

        i4 = i1 + $i12;

        r2 = r0.<java.lang.String: char[] value>;

        r3 = r1.<java.lang.String: char[] value>;

        i5 = 0;

     label7:
        if i5 >= i2 goto label3;

        $i11 = i3 + i5;

        $c15 = r2[$i11];

        $i14 = i4 + i5;

        $c13 = r3[$i14];

        if $c15 == $c13 goto label8;

        return 0;

     label8:
        i5 = i5 + 1;

        goto label7;
    }

    public boolean regionMatches(boolean, int, java.lang.String, int, int)
    {
        java.lang.String r0, r1;
        boolean z0, z1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i11, i13, $i16, $i17, $i18, $i19;
        char[] r2, r3;
        char c10, c12, c14, c15;
        java.lang.NullPointerException $r4;

        r0 := @this: java.lang.String;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if z0 != 0 goto label2;

        z1 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i0, r1, i1, i2);

     label1:
        return z1;

     label2:
        if r1 != null goto label3;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("string == null");

        throw $r4;

     label3:
        z1 = 0;

        if i0 < 0 goto label1;

        $i17 = r0.<java.lang.String: int count>;

        i3 = $i17 - i0;

        z1 = 0;

        if i2 > i3 goto label1;

        z1 = 0;

        if i1 < 0 goto label1;

        $i16 = r1.<java.lang.String: int count>;

        i4 = $i16 - i1;

        z1 = 0;

        if i2 > i4 goto label1;

        $i19 = r0.<java.lang.String: int offset>;

        i5 = i0 + $i19;

        $i18 = r1.<java.lang.String: int offset>;

        i6 = i1 + $i18;

        i7 = i5 + i2;

        r2 = r1.<java.lang.String: char[] value>;

        i8 = i6;

        i9 = i5;

     label4:
        if i9 >= i7 goto label6;

        r3 = r0.<java.lang.String: char[] value>;

        i11 = i9 + 1;

        c10 = r3[i9];

        i13 = i8 + 1;

        c12 = r2[i8];

        if c10 == c12 goto label5;

        c15 = specialinvoke r0.<java.lang.String: char foldCase(char)>(c10);

        c14 = specialinvoke r0.<java.lang.String: char foldCase(char)>(c12);

        z1 = 0;

        if c15 != c14 goto label1;

     label5:
        i8 = i13;

        i9 = i11;

        goto label4;

     label6:
        return 1;
    }

    public java.lang.String replace(char, char)
    {
        java.lang.String r0, $r3;
        char c0, c1, $c7;
        char[] r1, r2;
        int i2, i3, i4, i5, $i6;
        boolean z0;

        r0 := @this: java.lang.String;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        r1 = r0.<java.lang.String: char[] value>;

        i2 = r0.<java.lang.String: int offset>;

        i3 = r0.<java.lang.String: int count>;

        i4 = i2;

        i5 = i2 + i3;

        z0 = 0;

     label1:
        if i4 >= i5 goto label4;

        $c7 = r1[i4];

        if $c7 != c0 goto label3;

        if z0 != 0 goto label2;

        r2 = newarray (char)[i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, r2, 0, i3);

        r1 = r2;

        i4 = i4 - i2;

        i5 = i5 - i2;

        z0 = 1;

     label2:
        r1[i4] = c1;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        if z0 == 0 goto label5;

        $r3 = new java.lang.String;

        $i6 = r0.<java.lang.String: int count>;

        specialinvoke $r3.<java.lang.String: void <init>(int,int,char[])>(0, $i6, r1);

        r0 = $r3;

     label5:
        return r0;
    }

    public java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.String r0, r3, r4, $r11, $r17;
        java.lang.CharSequence r1, r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21;
        java.lang.StringBuilder r5, r6, $r7, $r12;
        char[] $r9, $r13, $r16;
        char $c20;
        java.lang.NullPointerException $r18, $r19;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        if r1 != null goto label1;

        $r18 = new java.lang.NullPointerException;

        specialinvoke $r18.<java.lang.NullPointerException: void <init>(java.lang.String)>("target == null");

        throw $r18;

     label1:
        if r2 != null goto label2;

        $r19 = new java.lang.NullPointerException;

        specialinvoke $r19.<java.lang.NullPointerException: void <init>(java.lang.String)>("replacement == null");

        throw $r19;

     label2:
        r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r3, 0);

        if i0 != -1 goto label3;

        return r0;

     label3:
        r4 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if i1 != 0 goto label6;

        $r12 = new java.lang.StringBuilder;

        $i16 = r0.<java.lang.String: int count>;

        $i15 = r0.<java.lang.String: int count>;

        $i13 = 1 + $i15;

        $i14 = virtualinvoke r4.<java.lang.String: int length()>();

        $i18 = $i13 * $i14;

        $i19 = $i16 + $i18;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(int)>($i19);

        r5 = $r12;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $i21 = r0.<java.lang.String: int offset>;

        $i17 = r0.<java.lang.String: int count>;

        i2 = $i21 + $i17;

        i3 = r0.<java.lang.String: int offset>;

     label4:
        if i3 == i2 goto label5;

        $r16 = r0.<java.lang.String: char[] value>;

        $c20 = $r16[i3];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c20);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        i3 = i3 + 1;

        goto label4;

     label5:
        $r17 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;

     label6:
        $r7 = new java.lang.StringBuilder;

        $i6 = r0.<java.lang.String: int count>;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(int)>($i6);

        r6 = $r7;

        i4 = 0;

     label7:
        $r9 = r0.<java.lang.String: char[] value>;

        $i5 = r0.<java.lang.String: int offset>;

        $i7 = i4 + $i5;

        $i8 = i0 - i4;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r9, $i7, $i8);

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        i4 = i0 + i1;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r3, i4);

        if i0 != -1 goto label7;

        $r13 = r0.<java.lang.String: char[] value>;

        $i10 = r0.<java.lang.String: int offset>;

        $i11 = i4 + $i10;

        $i9 = r0.<java.lang.String: int count>;

        $i12 = $i9 - i4;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r13, $i11, $i12);

        $r11 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String replaceAll(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r5;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r5 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(r2);

        return $r5;
    }

    public java.lang.String replaceFirst(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r5;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r5 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>(r2);

        return $r5;
    }

    public java.lang.String[] split(java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] $r2;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(r1, 0);

        return $r2;
    }

    public java.lang.String[] split(java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0;
        java.lang.String[] r2, $r4;
        java.util.regex.Pattern $r3;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <java.util.regex.Splitter: java.lang.String[] fastSplit(java.lang.String,java.lang.String,int)>(r1, r0, i0);

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence,int)>(r0, i0);

        return $r4;
    }

    public boolean startsWith(java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String,int)>(r1, 0);

        return $z0;
    }

    public boolean startsWith(java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, $i1;
        boolean $z0;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = r1.<java.lang.String: int count>;

        $z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i0, r1, 0, $i1);

        return $z0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        java.lang.String r0, $r1;
        int i0, i1;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        return $r1;
    }

    public java.lang.String substring(int)
    {
        java.lang.String r0, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringIndexOutOfBoundsException $r1;
        char[] $r3;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        return r0;

     label1:
        if i0 < 0 goto label2;

        $i1 = r0.<java.lang.String: int count>;

        if i0 > $i1 goto label2;

        $r2 = new java.lang.String;

        $i2 = r0.<java.lang.String: int offset>;

        $i5 = i0 + $i2;

        $i3 = r0.<java.lang.String: int count>;

        $i4 = $i3 - i0;

        $r3 = r0.<java.lang.String: char[] value>;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>($i5, $i4, $r3);

        return $r2;

     label2:
        $r1 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException indexAndLength(int)>(i0);

        throw $r1;
    }

    public java.lang.String substring(int, int)
    {
        java.lang.String r0, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringIndexOutOfBoundsException $r1;
        char[] $r3;

        r0 := @this: java.lang.String;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        $i6 = r0.<java.lang.String: int count>;

        if i1 != $i6 goto label1;

        return r0;

     label1:
        if i0 < 0 goto label2;

        if i0 > i1 goto label2;

        $i2 = r0.<java.lang.String: int count>;

        if i1 > $i2 goto label2;

        $r2 = new java.lang.String;

        $i3 = r0.<java.lang.String: int offset>;

        $i5 = i0 + $i3;

        $i4 = i1 - i0;

        $r3 = r0.<java.lang.String: char[] value>;

        specialinvoke $r2.<java.lang.String: void <init>(int,int,char[])>($i5, $i4, $r3);

        return $r2;

     label2:
        $r1 = specialinvoke r0.<java.lang.String: java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int)>(i0, i1);

        throw $r1;
    }

    public char[] toCharArray()
    {
        java.lang.String r0;
        char[] r1, $r2;
        int $i0, $i1, $i2;

        r0 := @this: java.lang.String;

        $i0 = r0.<java.lang.String: int count>;

        r1 = newarray (char)[$i0];

        $r2 = r0.<java.lang.String: char[] value>;

        $i2 = r0.<java.lang.String: int offset>;

        $i1 = r0.<java.lang.String: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, r1, 0, $i1);

        return r1;
    }

    public java.lang.String toLowerCase()
    {
        java.lang.String r0, $r3;
        java.util.Locale $r1;
        int $i0, $i1;
        char[] $r2;

        r0 := @this: java.lang.String;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = r0.<java.lang.String: char[] value>;

        $i1 = r0.<java.lang.String: int offset>;

        $i0 = r0.<java.lang.String: int count>;

        $r3 = staticinvoke <java.lang.CaseMapper: java.lang.String toLowerCase(java.util.Locale,java.lang.String,char[],int,int)>($r1, r0, $r2, $i1, $i0);

        return $r3;
    }

    public java.lang.String toLowerCase(java.util.Locale)
    {
        java.lang.String r0, $r3;
        java.util.Locale r1;
        int $i0, $i1;
        char[] $r2;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<java.lang.String: char[] value>;

        $i1 = r0.<java.lang.String: int offset>;

        $i0 = r0.<java.lang.String: int count>;

        $r3 = staticinvoke <java.lang.CaseMapper: java.lang.String toLowerCase(java.util.Locale,java.lang.String,char[],int,int)>(r1, r0, $r2, $i1, $i0);

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.String r0;

        r0 := @this: java.lang.String;

        return r0;
    }

    public java.lang.String toUpperCase()
    {
        java.lang.String r0, $r3;
        java.util.Locale $r1;
        int $i0, $i1;
        char[] $r2;

        r0 := @this: java.lang.String;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = r0.<java.lang.String: char[] value>;

        $i1 = r0.<java.lang.String: int offset>;

        $i0 = r0.<java.lang.String: int count>;

        $r3 = staticinvoke <java.lang.CaseMapper: java.lang.String toUpperCase(java.util.Locale,java.lang.String,char[],int,int)>($r1, r0, $r2, $i1, $i0);

        return $r3;
    }

    public java.lang.String toUpperCase(java.util.Locale)
    {
        java.lang.String r0, $r3;
        java.util.Locale r1;
        int $i0, $i1;
        char[] $r2;

        r0 := @this: java.lang.String;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<java.lang.String: char[] value>;

        $i1 = r0.<java.lang.String: int offset>;

        $i0 = r0.<java.lang.String: int count>;

        $r3 = staticinvoke <java.lang.CaseMapper: java.lang.String toUpperCase(java.util.Locale,java.lang.String,char[],int,int)>(r1, r0, $r2, $i1, $i0);

        return $r3;
    }

    public java.lang.String trim()
    {
        java.lang.String r0, $r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char[] $r2, $r3, $r4;
        char $c9, $c10;

        r0 := @this: java.lang.String;

        i0 = r0.<java.lang.String: int offset>;

        $i4 = r0.<java.lang.String: int offset>;

        $i3 = r0.<java.lang.String: int count>;

        $i5 = $i4 + $i3;

        i1 = -1 + $i5;

        i2 = i1;

     label1:
        if i0 > i2 goto label2;

        $r4 = r0.<java.lang.String: char[] value>;

        $c10 = $r4[i0];

        if $c10 > 32 goto label2;

        i0 = i0 + 1;

        goto label1;

     label2:
        if i2 < i0 goto label3;

        $r3 = r0.<java.lang.String: char[] value>;

        $c9 = $r3[i2];

        if $c9 > 32 goto label3;

        i2 = i2 + -1;

        goto label2;

     label3:
        $i6 = r0.<java.lang.String: int offset>;

        if i0 != $i6 goto label4;

        if i2 != i1 goto label4;

        return r0;

     label4:
        $r1 = new java.lang.String;

        $i7 = i2 - i0;

        $i8 = 1 + $i7;

        $r2 = r0.<java.lang.String: char[] value>;

        specialinvoke $r1.<java.lang.String: void <init>(int,int,char[])>(i0, $i8, $r2);

        return $r1;
    }
}
