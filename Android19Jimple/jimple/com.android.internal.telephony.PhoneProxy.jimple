public class com.android.internal.telephony.PhoneProxy extends android.os.Handler implements com.android.internal.telephony.Phone
{
    private static final int EVENT_RADIO_ON;
    private static final int EVENT_REQUEST_VOICE_RADIO_TECH_DONE;
    private static final int EVENT_RIL_CONNECTED;
    private static final int EVENT_UPDATE_PHONE_OBJECT;
    private static final int EVENT_VOICE_RADIO_TECH_CHANGED;
    private static final java.lang.String LOG_TAG;
    public static final java.lang.Object lockForRadioTechnologyChange;
    private com.android.internal.telephony.Phone mActivePhone;
    private com.android.internal.telephony.CommandsInterface mCommandsInterface;
    private com.android.internal.telephony.uicc.IccCardProxy mIccCardProxy;
    private com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy mIccPhoneBookInterfaceManagerProxy;
    private com.android.internal.telephony.IccSmsInterfaceManager mIccSmsInterfaceManager;
    private com.android.internal.telephony.PhoneSubInfoProxy mPhoneSubInfoProxy;
    private boolean mResetModemOnRadioTechnologyChange;
    private int mRilVersion;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.android.internal.telephony.PhoneProxy: java.lang.String LOG_TAG> = "PhoneProxy";

        <com.android.internal.telephony.PhoneProxy: int EVENT_VOICE_RADIO_TECH_CHANGED> = 1;

        <com.android.internal.telephony.PhoneProxy: int EVENT_UPDATE_PHONE_OBJECT> = 5;

        <com.android.internal.telephony.PhoneProxy: int EVENT_RIL_CONNECTED> = 4;

        <com.android.internal.telephony.PhoneProxy: int EVENT_REQUEST_VOICE_RADIO_TECH_DONE> = 3;

        <com.android.internal.telephony.PhoneProxy: int EVENT_RADIO_ON> = 2;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.internal.telephony.PhoneProxy: java.lang.Object lockForRadioTechnologyChange> = $r0;

        return;
    }

    public void <init>(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.PhoneBase r1, $r4, $r10;
        boolean $z0;
        com.android.internal.telephony.IccSmsInterfaceManager $r2;
        com.android.internal.telephony.Phone $r3, $r9;
        com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy $r5;
        com.android.internal.telephony.IccPhoneBookInterfaceManager $r6;
        com.android.internal.telephony.PhoneSubInfoProxy $r7;
        com.android.internal.telephony.PhoneSubInfo $r8;
        com.android.internal.telephony.CommandsInterface $r11, $r12, $r13, $r14, $r17;
        android.content.Context $r15;
        com.android.internal.telephony.uicc.IccCardProxy $r16, $r18, $r19;
        int $i0, $i1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        r0.<com.android.internal.telephony.PhoneProxy: boolean mResetModemOnRadioTechnologyChange> = 0;

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone> = r1;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("persist.radio.reset_on_switch", 0);

        r0.<com.android.internal.telephony.PhoneProxy: boolean mResetModemOnRadioTechnologyChange> = $z0;

        $r2 = new com.android.internal.telephony.IccSmsInterfaceManager;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r4 = (com.android.internal.telephony.PhoneBase) $r3;

        specialinvoke $r2.<com.android.internal.telephony.IccSmsInterfaceManager: void <init>(com.android.internal.telephony.PhoneBase)>($r4);

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccSmsInterfaceManager mIccSmsInterfaceManager> = $r2;

        $r5 = new com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>();

        specialinvoke $r5.<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: void <init>(com.android.internal.telephony.IccPhoneBookInterfaceManager)>($r6);

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy mIccPhoneBookInterfaceManagerProxy> = $r5;

        $r7 = new com.android.internal.telephony.PhoneSubInfoProxy;

        $r8 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>();

        specialinvoke $r7.<com.android.internal.telephony.PhoneSubInfoProxy: void <init>(com.android.internal.telephony.PhoneSubInfo)>($r8);

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneSubInfoProxy mPhoneSubInfoProxy> = $r7;

        $r9 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r10 = (com.android.internal.telephony.PhoneBase) $r9;

        $r11 = $r10.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface> = $r11;

        $r12 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        interfaceinvoke $r12.<com.android.internal.telephony.CommandsInterface: void registerForRilConnected(android.os.Handler,int,java.lang.Object)>(r0, 4, null);

        $r13 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        interfaceinvoke $r13.<com.android.internal.telephony.CommandsInterface: void registerForOn(android.os.Handler,int,java.lang.Object)>(r0, 2, null);

        $r14 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void registerForVoiceRadioTechChanged(android.os.Handler,int,java.lang.Object)>(r0, 1, null);

        $r16 = new com.android.internal.telephony.uicc.IccCardProxy;

        $r15 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        $r17 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        specialinvoke $r16.<com.android.internal.telephony.uicc.IccCardProxy: void <init>(android.content.Context,com.android.internal.telephony.CommandsInterface)>($r15, $r17);

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.uicc.IccCardProxy mIccCardProxy> = $r16;

        $i0 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if $i0 != 1 goto label2;

        $r19 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.uicc.IccCardProxy mIccCardProxy>;

        virtualinvoke $r19.<com.android.internal.telephony.uicc.IccCardProxy: void setVoiceRadioTech(int)>(3);

     label1:
        return;

     label2:
        $i1 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: int getPhoneType()>();

        if $i1 != 2 goto label1;

        $r18 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.uicc.IccCardProxy mIccCardProxy>;

        virtualinvoke $r18.<com.android.internal.telephony.uicc.IccCardProxy: void setVoiceRadioTech(int)>(6);

        return;
    }

    private void deleteAndCreatePhone(int)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        java.lang.String r1, r4, $r9;
        com.android.internal.telephony.Phone r2, $r10, $r11, $r13, $r15;
        java.lang.StringBuilder r3, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        com.android.internal.telephony.CallManager $r12, $r14;
        com.android.internal.telephony.PhoneBase $r16;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        r1 = "Unknown";

        r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        if r2 == null goto label1;

        $r16 = (com.android.internal.telephony.PhoneBase) r2;

        r1 = virtualinvoke $r16.<com.android.internal.telephony.PhoneBase: java.lang.String getPhoneName()>();

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Switching Voice Phone : ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >>> ");

        $z0 = staticinvoke <android.telephony.ServiceState: boolean isGsm(int)>(i0);

        if $z0 == 0 goto label7;

        r4 = "GSM";

     label2:
        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>($r9);

        if r2 == null goto label3;

        $r14 = staticinvoke <com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager getInstance()>();

        virtualinvoke $r14.<com.android.internal.telephony.CallManager: void unregisterPhone(com.android.internal.telephony.Phone)>(r2);

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>("Disposing old phone..");

        interfaceinvoke r2.<com.android.internal.telephony.Phone: void dispose()>();

     label3:
        $z1 = staticinvoke <android.telephony.ServiceState: boolean isCdma(int)>(i0);

        if $z1 == 0 goto label8;

        $r15 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getCdmaPhone()>();

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone> = $r15;

     label4:
        if r2 == null goto label5;

        interfaceinvoke r2.<com.android.internal.telephony.Phone: void removeReferences()>();

     label5:
        $r10 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        if $r10 == null goto label6;

        $r12 = staticinvoke <com.android.internal.telephony.CallManager: com.android.internal.telephony.CallManager getInstance()>();

        $r11 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        virtualinvoke $r12.<com.android.internal.telephony.CallManager: boolean registerPhone(com.android.internal.telephony.Phone)>($r11);

     label6:
        return;

     label7:
        r4 = "CDMA";

        goto label2;

     label8:
        $z2 = staticinvoke <android.telephony.ServiceState: boolean isGsm(int)>(i0);

        if $z2 == 0 goto label4;

        $r13 = staticinvoke <com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getGsmPhone()>();

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone> = $r13;

        goto label4;
    }

    private static void logd(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.lang.StringBuilder $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[PhoneProxy] ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("PhoneProxy", $r4);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[PhoneProxy] ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("PhoneProxy", $r5);

        return;
    }

    private void phoneObjectUpdater(int)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0, z1, z2, $z3, $z4, $z5;
        android.content.Intent r1, $r21;
        java.lang.StringBuilder $r2, $r3, $r4, $r28, $r31, $r32, $r35, $r36, $r40, $r41, $r44, $r45, $r48, $r50, $r51, $r52, $r53, $r56, $r59, $r60, $r61, $r63, $r64, $r68;
        java.lang.String $r5, $r25, $r30, $r34, $r38, $r43, $r47, $r49, $r55, $r57, $r65;
        com.android.internal.telephony.Phone $r6, $r7, $r11, $r12, $r17, $r22, $r33, $r37, $r39, $r42, $r46, $r54, $r58, $r62;
        com.android.internal.telephony.IccSmsInterfaceManager $r8;
        com.android.internal.telephony.PhoneBase $r9, $r16;
        com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy $r10;
        com.android.internal.telephony.IccPhoneBookInterfaceManager $r13;
        com.android.internal.telephony.PhoneSubInfo $r14;
        com.android.internal.telephony.PhoneSubInfoProxy $r15;
        com.android.internal.telephony.uicc.IccCardProxy $r18;
        com.android.internal.telephony.CommandsInterface $r19, $r23, $r24, $r27;
        com.android.internal.telephony.CommandsInterface$RadioState $r29;
        android.content.res.Resources $r66;
        android.content.Context $r67;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: newVoiceRadioTech=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>($r5);

        $r6 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        if $r6 == null goto label3;

        if i0 != 14 goto label1;

        $r58 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r67 = interfaceinvoke $r58.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        $r66 = virtualinvoke $r67.<android.content.Context: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r66.<android.content.res.Resources: int getInteger(int)>(17694772);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: volteReplacementRat=");

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>($r65);

        if i1 == 0 goto label1;

        i0 = i1;

     label1:
        $i2 = r0.<com.android.internal.telephony.PhoneProxy: int mRilVersion>;

        if $i2 != 6 goto label4;

        $i6 = virtualinvoke r0.<com.android.internal.telephony.PhoneProxy: int getLteOnCdmaMode()>();

        if $i6 != 1 goto label4;

        $r46 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i5 = interfaceinvoke $r46.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i5 != 2 goto label2;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: LTE ON CDMA property is set. Use CDMA Phone newVoiceRadioTech=");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mActivePhone=");

        $r62 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r55 = interfaceinvoke $r62.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        $r56 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>($r57);

        return;

     label2:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: LTE ON CDMA property is set. Switch to CDMALTEPhone newVoiceRadioTech=");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mActivePhone=");

        $r54 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r47 = interfaceinvoke $r54.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        $r48 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>($r49);

        i0 = 6;

     label3:
        if i0 != 0 goto label7;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: Unknown rat ignore,  newVoiceRadioTech=Unknown. mActivePhone=");

        $r33 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r30 = interfaceinvoke $r33.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>($r34);

        return;

     label4:
        $z4 = staticinvoke <android.telephony.ServiceState: boolean isCdma(int)>(i0);

        if $z4 == 0 goto label5;

        $r42 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i4 = interfaceinvoke $r42.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i4 == 2 goto label6;

     label5:
        $z5 = staticinvoke <android.telephony.ServiceState: boolean isGsm(int)>(i0);

        if $z5 == 0 goto label3;

        $r37 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i3 = interfaceinvoke $r37.<com.android.internal.telephony.Phone: int getPhoneType()>();

        if $i3 != 1 goto label3;

     label6:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phoneObjectUpdater: No change ignore, newVoiceRadioTech=");

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mActivePhone=");

        $r39 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r38 = interfaceinvoke $r39.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>($r43);

        return;

     label7:
        z0 = r0.<com.android.internal.telephony.PhoneProxy: boolean mResetModemOnRadioTechnologyChange>;

        z1 = 0;

        if z0 == 0 goto label8;

        $r24 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        $r29 = interfaceinvoke $r24.<com.android.internal.telephony.CommandsInterface: com.android.internal.telephony.CommandsInterface$RadioState getRadioState()>();

        z2 = virtualinvoke $r29.<com.android.internal.telephony.CommandsInterface$RadioState: boolean isOn()>();

        z1 = 0;

        if z2 == 0 goto label8;

        z1 = 1;

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>("phoneObjectUpdater: Setting Radio Power to Off");

        $r27 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        interfaceinvoke $r27.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(0, null);

     label8:
        specialinvoke r0.<com.android.internal.telephony.PhoneProxy: void deleteAndCreatePhone(int)>(i0);

        $z3 = r0.<com.android.internal.telephony.PhoneProxy: boolean mResetModemOnRadioTechnologyChange>;

        if $z3 == 0 goto label9;

        if z1 == 0 goto label9;

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>("phoneObjectUpdater: Resetting Radio");

        $r23 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        interfaceinvoke $r23.<com.android.internal.telephony.CommandsInterface: void setRadioPower(boolean,android.os.Message)>(z1, null);

     label9:
        $r8 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccSmsInterfaceManager mIccSmsInterfaceManager>;

        $r7 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r9 = (com.android.internal.telephony.PhoneBase) $r7;

        virtualinvoke $r8.<com.android.internal.telephony.IccSmsInterfaceManager: void updatePhoneObject(com.android.internal.telephony.PhoneBase)>($r9);

        $r10 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy mIccPhoneBookInterfaceManagerProxy>;

        $r11 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r13 = interfaceinvoke $r11.<com.android.internal.telephony.Phone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>();

        virtualinvoke $r10.<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: void setmIccPhoneBookInterfaceManager(com.android.internal.telephony.IccPhoneBookInterfaceManager)>($r13);

        $r15 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.PhoneSubInfoProxy mPhoneSubInfoProxy>;

        $r12 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r14 = interfaceinvoke $r12.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>();

        virtualinvoke $r15.<com.android.internal.telephony.PhoneSubInfoProxy: void setmPhoneSubInfo(com.android.internal.telephony.PhoneSubInfo)>($r14);

        $r17 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r16 = (com.android.internal.telephony.PhoneBase) $r17;

        $r19 = $r16.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface> = $r19;

        $r18 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.uicc.IccCardProxy mIccCardProxy>;

        virtualinvoke $r18.<com.android.internal.telephony.uicc.IccCardProxy: void setVoiceRadioTech(int)>(i0);

        $r21 = new android.content.Intent;

        specialinvoke $r21.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.RADIO_TECHNOLOGY");

        r1 = $r21;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $r22 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r25 = interfaceinvoke $r22.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("phoneName", $r25);

        staticinvoke <android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String,int)>(r1, null, -1);

        return;
    }

    public void acceptCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void acceptCall()>();

        return;
    }

    public void activateCellBroadcastSms(int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void activateCellBroadcastSms(int,android.os.Message)>(i0, r1);

        return;
    }

    public boolean canConference()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean canConference()>();

        return $z0;
    }

    public boolean canTransfer()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean canTransfer()>();

        return $z0;
    }

    public void clearDisconnected()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void clearDisconnected()>();

        return;
    }

    public void conference() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void conference()>();

        return;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        com.android.internal.telephony.Connection $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection dial(java.lang.String)>(r1);

        return $r3;
    }

    public com.android.internal.telephony.Connection dial(java.lang.String, com.android.internal.telephony.UUSInfo) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.UUSInfo r2;
        com.android.internal.telephony.Phone $r3;
        com.android.internal.telephony.Connection $r4;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.internal.telephony.UUSInfo;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r4 = interfaceinvoke $r3.<com.android.internal.telephony.Phone: com.android.internal.telephony.Connection dial(java.lang.String,com.android.internal.telephony.UUSInfo)>(r1, r2);

        return $r4;
    }

    public int disableApnType(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i0 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: int disableApnType(java.lang.String)>(r1);

        return $i0;
    }

    public void disableDnsCheck(boolean)
    {
        com.android.internal.telephony.PhoneProxy r0;
        boolean z0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void disableDnsCheck(boolean)>(z0);

        return;
    }

    public void disableLocationUpdates()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void disableLocationUpdates()>();

        return;
    }

    public void dispose()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.CommandsInterface $r1, $r2, $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        interfaceinvoke $r1.<com.android.internal.telephony.CommandsInterface: void unregisterForOn(android.os.Handler)>(r0);

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        interfaceinvoke $r2.<com.android.internal.telephony.CommandsInterface: void unregisterForVoiceRadioTechChanged(android.os.Handler)>(r0);

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        interfaceinvoke $r3.<com.android.internal.telephony.CommandsInterface: void unregisterForRilConnected(android.os.Handler)>(r0);

        return;
    }

    public int enableApnType(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i0 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: int enableApnType(java.lang.String)>(r1);

        return $i0;
    }

    public void enableEnhancedVoicePrivacy(boolean, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void enableEnhancedVoicePrivacy(boolean,android.os.Message)>(z0, r1);

        return;
    }

    public void enableLocationUpdates()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void enableLocationUpdates()>();

        return;
    }

    public void exitEmergencyCallbackMode()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void exitEmergencyCallbackMode()>();

        return;
    }

    public void explicitCallTransfer() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void explicitCallTransfer()>();

        return;
    }

    public java.lang.String getActiveApnHost(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1, $r3;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: java.lang.String getActiveApnHost(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String[] getActiveApnTypes()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String[] getActiveApnTypes()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone getActivePhone()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        return $r1;
    }

    public java.util.List getAllCellInfo()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.util.List getAllCellInfo()>();

        return $r2;
    }

    public void getAvailableNetworks(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getAvailableNetworks(android.os.Message)>(r1);

        return;
    }

    public com.android.internal.telephony.Call getBackgroundCall()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.Call $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getBackgroundCall()>();

        return $r2;
    }

    public boolean getCallForwardingIndicator()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean getCallForwardingIndicator()>();

        return $z0;
    }

    public void getCallForwardingOption(int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getCallForwardingOption(int,android.os.Message)>(i0, r1);

        return;
    }

    public void getCallWaiting(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getCallWaiting(android.os.Message)>(r1);

        return;
    }

    public int getCdmaEriIconIndex()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: int getCdmaEriIconIndex()>();

        return $i0;
    }

    public int getCdmaEriIconMode()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: int getCdmaEriIconMode()>();

        return $i0;
    }

    public java.lang.String getCdmaEriText()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getCdmaEriText()>();

        return $r2;
    }

    public java.lang.String getCdmaMin()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getCdmaMin()>();

        return $r2;
    }

    public java.lang.String getCdmaPrlVersion()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getCdmaPrlVersion()>();

        return $r2;
    }

    public void getCellBroadcastSmsConfig(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getCellBroadcastSmsConfig(android.os.Message)>(r1);

        return;
    }

    public android.telephony.CellLocation getCellLocation()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        android.telephony.CellLocation $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: android.telephony.CellLocation getCellLocation()>();

        return $r2;
    }

    public android.content.Context getContext()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        android.content.Context $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: android.content.Context getContext()>();

        return $r2;
    }

    public com.android.internal.telephony.Phone$DataActivityState getDataActivityState()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.Phone$DataActivityState $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Phone$DataActivityState getDataActivityState()>();

        return $r2;
    }

    public void getDataCallList(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getDataCallList(android.os.Message)>(r1);

        return;
    }

    public com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.PhoneConstants$DataState $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>("default");

        return $r2;
    }

    public com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        com.android.internal.telephony.PhoneConstants$DataState $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$DataState getDataConnectionState(java.lang.String)>(r1);

        return $r3;
    }

    public boolean getDataRoamingEnabled()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean getDataRoamingEnabled()>();

        return $z0;
    }

    public java.lang.String getDeviceId()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getDeviceId()>();

        return $r2;
    }

    public java.lang.String getDeviceSvn()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getDeviceSvn()>();

        return $r2;
    }

    public void getEnhancedVoicePrivacy(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getEnhancedVoicePrivacy(android.os.Message)>(r1);

        return;
    }

    public java.lang.String getEsn()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getEsn()>();

        return $r2;
    }

    public com.android.internal.telephony.Call getForegroundCall()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.Call $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getForegroundCall()>();

        return $r2;
    }

    public java.lang.String getGroupIdLevel1()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getGroupIdLevel1()>();

        return $r2;
    }

    public com.android.internal.telephony.IccCard getIccCard()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.uicc.IccCardProxy $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.uicc.IccCardProxy mIccCardProxy>;

        return $r1;
    }

    public com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.IccPhoneBookInterfaceManager $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.IccPhoneBookInterfaceManager getIccPhoneBookInterfaceManager()>();

        return $r2;
    }

    public boolean getIccRecordsLoaded()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.uicc.IccCardProxy $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.uicc.IccCardProxy mIccCardProxy>;

        $z0 = virtualinvoke $r1.<com.android.internal.telephony.uicc.IccCardProxy: boolean getIccRecordsLoaded()>();

        return $z0;
    }

    public java.lang.String getIccSerialNumber()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getIccSerialNumber()>();

        return $r2;
    }

    public java.lang.String getImei()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getImei()>();

        return $r2;
    }

    public com.android.internal.telephony.uicc.IsimRecords getIsimRecords()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.uicc.IsimRecords $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.uicc.IsimRecords getIsimRecords()>();

        return $r2;
    }

    public java.lang.String getLine1AlphaTag()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getLine1AlphaTag()>();

        return $r2;
    }

    public java.lang.String getLine1Number()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getLine1Number()>();

        return $r2;
    }

    public android.net.LinkCapabilities getLinkCapabilities(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        android.net.LinkCapabilities $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: android.net.LinkCapabilities getLinkCapabilities(java.lang.String)>(r1);

        return $r3;
    }

    public android.net.LinkProperties getLinkProperties(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        android.net.LinkProperties $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r3 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: android.net.LinkProperties getLinkProperties(java.lang.String)>(r1);

        return $r3;
    }

    public int getLteOnCdmaMode()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: int getLteOnCdmaMode()>();

        return $i0;
    }

    public java.lang.String getMeid()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getMeid()>();

        return $r2;
    }

    public boolean getMessageWaitingIndicator()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean getMessageWaitingIndicator()>();

        return $z0;
    }

    public java.lang.String getMsisdn()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getMsisdn()>();

        return $r2;
    }

    public boolean getMute()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean getMute()>();

        return $z0;
    }

    public void getNeighboringCids(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getNeighboringCids(android.os.Message)>(r1);

        return;
    }

    public void getOutgoingCallerIdDisplay(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getOutgoingCallerIdDisplay(android.os.Message)>(r1);

        return;
    }

    public java.util.List getPendingMmiCodes()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.util.List $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.util.List getPendingMmiCodes()>();

        return $r2;
    }

    public java.lang.String getPhoneName()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getPhoneName()>();

        return $r2;
    }

    public com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.PhoneSubInfo $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneSubInfo getPhoneSubInfo()>();

        return $r2;
    }

    public int getPhoneType()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: int getPhoneType()>();

        return $i0;
    }

    public void getPreferredNetworkType(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getPreferredNetworkType(android.os.Message)>(r1);

        return;
    }

    public com.android.internal.telephony.Call getRingingCall()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.Call $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.Call getRingingCall()>();

        return $r2;
    }

    public android.telephony.ServiceState getServiceState()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        android.telephony.ServiceState $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: android.telephony.ServiceState getServiceState()>();

        return $r2;
    }

    public android.telephony.SignalStrength getSignalStrength()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        android.telephony.SignalStrength $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: android.telephony.SignalStrength getSignalStrength()>();

        return $r2;
    }

    public com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.test.SimulatedRadioControl $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.test.SimulatedRadioControl getSimulatedRadioControl()>();

        return $r2;
    }

    public void getSmscAddress(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void getSmscAddress(android.os.Message)>(r1);

        return;
    }

    public com.android.internal.telephony.PhoneConstants$State getState()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.PhoneConstants$State $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.PhoneConstants$State getState()>();

        return $r2;
    }

    public java.lang.String getSubscriberId()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getSubscriberId()>();

        return $r2;
    }

    public boolean getUnitTestMode()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean getUnitTestMode()>();

        return $z0;
    }

    public com.android.internal.telephony.uicc.UsimServiceTable getUsimServiceTable()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        com.android.internal.telephony.uicc.UsimServiceTable $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: com.android.internal.telephony.uicc.UsimServiceTable getUsimServiceTable()>();

        return $r2;
    }

    public java.lang.String getVoiceMailAlphaTag()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getVoiceMailAlphaTag()>();

        return $r2;
    }

    public java.lang.String getVoiceMailNumber()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        java.lang.String $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $r2 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: java.lang.String getVoiceMailNumber()>();

        return $r2;
    }

    public int getVoiceMessageCount()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        int $i0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $i0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: int getVoiceMessageCount()>();

        return $i0;
    }

    public boolean handleInCallMmiCommands(java.lang.String) throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: boolean handleInCallMmiCommands(java.lang.String)>(r1);

        return $z0;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1, $r13;
        android.os.AsyncResult r2;
        java.lang.String r3, $r8, $r20, $r28, $r37;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r4, $r10, $r11, $r23, $r29, $r32;
        java.lang.StringBuilder $r5, $r6, $r7, $r16, $r17, $r19, $r21, $r22, $r24, $r25, $r33, $r34, $r35, $r36;
        java.lang.Throwable $r9, $r15, $r18;
        java.lang.Integer $r12;
        com.android.internal.telephony.CommandsInterface $r14;
        int[] $r26, $r27, $r30, $r31;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.AsyncResult) $r4;

        $i1 = r1.<android.os.Message: int what>;

        tableswitch($i1)
        {
            case 1: goto label06;
            case 2: goto label03;
            case 3: goto label06;
            case 4: goto label04;
            case 5: goto label11;
            default: goto label01;
        };

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error! This handler was not registered for this message type. Message: ");

        $i2 = r1.<android.os.Message: int what>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.PhoneProxy: void loge(java.lang.String)>($r8);

     label02:
        specialinvoke r0.<android.os.Handler: void handleMessage(android.os.Message)>(r1);

        return;

     label03:
        $r14 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface>;

        $r13 = virtualinvoke r0.<com.android.internal.telephony.PhoneProxy: android.os.Message obtainMessage(int)>(3);

        interfaceinvoke $r14.<com.android.internal.telephony.CommandsInterface: void getVoiceRadioTechnology(android.os.Message)>($r13);

        goto label02;

     label04:
        $r9 = r2.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r9 != null goto label05;

        $r10 = r2.<android.os.AsyncResult: java.lang.Object result>;

        if $r10 == null goto label05;

        $r11 = r2.<android.os.AsyncResult: java.lang.Object result>;

        $r12 = (java.lang.Integer) $r11;

        $i4 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        r0.<com.android.internal.telephony.PhoneProxy: int mRilVersion> = $i4;

        goto label02;

     label05:
        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>("Unexpected exception on EVENT_RIL_CONNECTED");

        r0.<com.android.internal.telephony.PhoneProxy: int mRilVersion> = -1;

        goto label02;

     label06:
        $i5 = r1.<android.os.Message: int what>;

        if $i5 != 1 goto label08;

        r3 = "EVENT_VOICE_RADIO_TECH_CHANGED";

     label07:
        $r15 = r2.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r15 != null goto label10;

        $r23 = r2.<android.os.AsyncResult: java.lang.Object result>;

        if $r23 == null goto label09;

        $r29 = r2.<android.os.AsyncResult: java.lang.Object result>;

        $r26 = (int[]) $r29;

        $r27 = (int[]) $r26;

        $i6 = lengthof $r27;

        if $i6 == 0 goto label09;

        $r32 = r2.<android.os.AsyncResult: java.lang.Object result>;

        $r30 = (int[]) $r32;

        $r31 = (int[]) $r30;

        i0 = $r31[0];

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": newVoiceTech=");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>($r37);

        specialinvoke r0.<com.android.internal.telephony.PhoneProxy: void phoneObjectUpdater(int)>(i0);

        goto label02;

     label08:
        r3 = "EVENT_REQUEST_VOICE_RADIO_TECH_DONE";

        goto label07;

     label09:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": has no tech!");

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.PhoneProxy: void loge(java.lang.String)>($r28);

        goto label02;

     label10:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": exception=");

        $r18 = r2.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.internal.telephony.PhoneProxy: void loge(java.lang.String)>($r20);

        goto label02;

     label11:
        $i3 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.internal.telephony.PhoneProxy: void phoneObjectUpdater(int)>($i3);

        goto label02;
    }

    public boolean handlePinMmi(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: boolean handlePinMmi(java.lang.String)>(r1);

        return $z0;
    }

    public void invokeOemRilRequestRaw(byte[], android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        byte[] r1;
        android.os.Message r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: byte[];

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void invokeOemRilRequestRaw(byte[],android.os.Message)>(r1, r2);

        return;
    }

    public void invokeOemRilRequestStrings(java.lang.String[], android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String[] r1;
        android.os.Message r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void invokeOemRilRequestStrings(java.lang.String[],android.os.Message)>(r1, r2);

        return;
    }

    public boolean isCspPlmnEnabled()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean isCspPlmnEnabled()>();

        return $z0;
    }

    public boolean isDataConnectivityPossible()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean isDataConnectivityPossible(java.lang.String)>("default");

        return $z0;
    }

    public boolean isDataConnectivityPossible(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: boolean isDataConnectivityPossible(java.lang.String)>(r1);

        return $z0;
    }

    public boolean isDnsCheckDisabled()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean isDnsCheckDisabled()>();

        return $z0;
    }

    public boolean isMinInfoReady()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean isMinInfoReady()>();

        return $z0;
    }

    public boolean isOtaSpNumber(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r2.<com.android.internal.telephony.Phone: boolean isOtaSpNumber(java.lang.String)>(r1);

        return $z0;
    }

    public boolean needsOtaServiceProvisioning()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        $z0 = interfaceinvoke $r1.<com.android.internal.telephony.Phone: boolean needsOtaServiceProvisioning()>();

        return $z0;
    }

    public void notifyDataActivity()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void notifyDataActivity()>();

        return;
    }

    public void queryAvailableBandMode(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void queryAvailableBandMode(android.os.Message)>(r1);

        return;
    }

    public void queryCdmaRoamingPreference(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void queryCdmaRoamingPreference(android.os.Message)>(r1);

        return;
    }

    public void queryTTYMode(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void queryTTYMode(android.os.Message)>(r1);

        return;
    }

    public void registerFoT53ClirlInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerFoT53ClirlInfo(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCallWaiting(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForCallWaiting(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForCdmaOtaStatusChange(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForCdmaOtaStatusChange(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForDisconnect(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForDisconnect(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForDisplayInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForDisplayInfo(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForEcmTimerReset(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForEcmTimerReset(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForInCallVoicePrivacyOff(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForInCallVoicePrivacyOff(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForInCallVoicePrivacyOn(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForInCallVoicePrivacyOn(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForIncomingRing(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForIncomingRing(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForLineControlInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForLineControlInfo(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForMmiComplete(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForMmiComplete(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForMmiInitiate(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForMmiInitiate(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForNewRingingConnection(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForNewRingingConnection(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForNumberInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForNumberInfo(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForPreciseCallStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForPreciseCallStateChanged(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForRedirectedNumberInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForRedirectedNumberInfo(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForResendIncallMute(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForResendIncallMute(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForRingbackTone(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForRingbackTone(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForServiceStateChanged(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForServiceStateChanged(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSignalInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForSignalInfo(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSubscriptionInfoReady(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForSubscriptionInfoReady(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSuppServiceFailed(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForSuppServiceFailed(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForSuppServiceNotification(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForSuppServiceNotification(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForT53AudioControlInfo(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForT53AudioControlInfo(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void registerForUnknownConnection(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void registerForUnknownConnection(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void rejectCall() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void rejectCall()>();

        return;
    }

    public void removeReferences()
    {
        com.android.internal.telephony.PhoneProxy r0;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone> = null;

        r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.CommandsInterface mCommandsInterface> = null;

        return;
    }

    public void requestIsimAuthentication(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        android.os.Message r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void requestIsimAuthentication(java.lang.String,android.os.Message)>(r1, r2);

        return;
    }

    public void selectNetworkManually(com.android.internal.telephony.OperatorInfo, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.OperatorInfo r1;
        android.os.Message r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: com.android.internal.telephony.OperatorInfo;

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void selectNetworkManually(com.android.internal.telephony.OperatorInfo,android.os.Message)>(r1, r2);

        return;
    }

    public void sendBurstDtmf(java.lang.String, int, int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        int i0, i1;
        android.os.Message r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void sendBurstDtmf(java.lang.String,int,int,android.os.Message)>(r1, i0, i1, r2);

        return;
    }

    public void sendDtmf(char)
    {
        com.android.internal.telephony.PhoneProxy r0;
        char c0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        c0 := @parameter0: char;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void sendDtmf(char)>(c0);

        return;
    }

    public void sendUssdResponse(java.lang.String)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void sendUssdResponse(java.lang.String)>(r1);

        return;
    }

    public void setBandMode(int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setBandMode(int,android.os.Message)>(i0, r1);

        return;
    }

    public void setCallForwardingOption(int, int, java.lang.String, int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.os.Message r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void setCallForwardingOption(int,int,java.lang.String,int,android.os.Message)>(i0, i1, r1, i2, r2);

        return;
    }

    public void setCallWaiting(boolean, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        boolean z0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setCallWaiting(boolean,android.os.Message)>(z0, r1);

        return;
    }

    public void setCdmaRoamingPreference(int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setCdmaRoamingPreference(int,android.os.Message)>(i0, r1);

        return;
    }

    public void setCdmaSubscription(int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setCdmaSubscription(int,android.os.Message)>(i0, r1);

        return;
    }

    public void setCellBroadcastSmsConfig(int[], android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int[] r1;
        android.os.Message r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void setCellBroadcastSmsConfig(int[],android.os.Message)>(r1, r2);

        return;
    }

    public void setCellInfoListRate(int)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void setCellInfoListRate(int)>(i0);

        return;
    }

    public void setDataRoamingEnabled(boolean)
    {
        com.android.internal.telephony.PhoneProxy r0;
        boolean z0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void setDataRoamingEnabled(boolean)>(z0);

        return;
    }

    public void setEchoSuppressionEnabled(boolean)
    {
        com.android.internal.telephony.PhoneProxy r0;
        boolean z0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void setEchoSuppressionEnabled(boolean)>(z0);

        return;
    }

    public void setLine1Number(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1, r2;
        android.os.Message r3;
        com.android.internal.telephony.Phone $r4;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        $r4 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r4.<com.android.internal.telephony.Phone: void setLine1Number(java.lang.String,java.lang.String,android.os.Message)>(r1, r2, r3);

        return;
    }

    public void setMute(boolean)
    {
        com.android.internal.telephony.PhoneProxy r0;
        boolean z0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void setMute(boolean)>(z0);

        return;
    }

    public void setNetworkSelectionModeAutomatic(android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setNetworkSelectionModeAutomatic(android.os.Message)>(r1);

        return;
    }

    public void setOnEcbModeExitResponse(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void setOnEcbModeExitResponse(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void setOnPostDialCharacter(android.os.Handler, int, java.lang.Object)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        int i0;
        java.lang.Object r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void setOnPostDialCharacter(android.os.Handler,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    public void setOutgoingCallerIdDisplay(int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setOutgoingCallerIdDisplay(int,android.os.Message)>(i0, r1);

        return;
    }

    public void setPreferredNetworkType(int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setPreferredNetworkType(int,android.os.Message)>(i0, r1);

        return;
    }

    public void setRadioPower(boolean)
    {
        com.android.internal.telephony.PhoneProxy r0;
        boolean z0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void setRadioPower(boolean)>(z0);

        return;
    }

    public void setSmscAddress(java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1;
        android.os.Message r2;
        com.android.internal.telephony.Phone $r3;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Message;

        $r3 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r3.<com.android.internal.telephony.Phone: void setSmscAddress(java.lang.String,android.os.Message)>(r1, r2);

        return;
    }

    public void setTTYMode(int, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        android.os.Message r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void setTTYMode(int,android.os.Message)>(i0, r1);

        return;
    }

    public void setUnitTestMode(boolean)
    {
        com.android.internal.telephony.PhoneProxy r0;
        boolean z0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void setUnitTestMode(boolean)>(z0);

        return;
    }

    public void setVoiceMailNumber(java.lang.String, java.lang.String, android.os.Message)
    {
        com.android.internal.telephony.PhoneProxy r0;
        java.lang.String r1, r2;
        android.os.Message r3;
        com.android.internal.telephony.Phone $r4;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Message;

        $r4 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r4.<com.android.internal.telephony.Phone: void setVoiceMailNumber(java.lang.String,java.lang.String,android.os.Message)>(r1, r2, r3);

        return;
    }

    public void setVoiceMessageWaiting(int, int)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0, i1;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void setVoiceMessageWaiting(int,int)>(i0, i1);

        return;
    }

    public void startDtmf(char)
    {
        com.android.internal.telephony.PhoneProxy r0;
        char c0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        c0 := @parameter0: char;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void startDtmf(char)>(c0);

        return;
    }

    public void stopDtmf()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void stopDtmf()>();

        return;
    }

    public void switchHoldingAndActive() throws com.android.internal.telephony.CallStateException
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void switchHoldingAndActive()>();

        return;
    }

    public void unregisterForCallWaiting(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForCallWaiting(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForCdmaOtaStatusChange(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForCdmaOtaStatusChange(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForDisconnect(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForDisconnect(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForDisplayInfo(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForDisplayInfo(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForEcmTimerReset(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForEcmTimerReset(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForInCallVoicePrivacyOff(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForInCallVoicePrivacyOff(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForInCallVoicePrivacyOn(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForInCallVoicePrivacyOn(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForIncomingRing(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForIncomingRing(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForLineControlInfo(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForLineControlInfo(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForMmiComplete(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForMmiComplete(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForMmiInitiate(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForMmiInitiate(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNewRingingConnection(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForNewRingingConnection(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForNumberInfo(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForNumberInfo(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForPreciseCallStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForPreciseCallStateChanged(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRedirectedNumberInfo(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForRedirectedNumberInfo(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForResendIncallMute(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForResendIncallMute(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForRingbackTone(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForRingbackTone(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForServiceStateChanged(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForServiceStateChanged(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSignalInfo(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForSignalInfo(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSubscriptionInfoReady(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForSubscriptionInfoReady(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSuppServiceFailed(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForSuppServiceFailed(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForSuppServiceNotification(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForSuppServiceNotification(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForT53AudioControlInfo(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForT53AudioControlInfo(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForT53ClirInfo(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForT53ClirInfo(android.os.Handler)>(r1);

        return;
    }

    public void unregisterForUnknownConnection(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unregisterForUnknownConnection(android.os.Handler)>(r1);

        return;
    }

    public void unsetOnEcbModeExitResponse(android.os.Handler)
    {
        com.android.internal.telephony.PhoneProxy r0;
        android.os.Handler r1;
        com.android.internal.telephony.Phone $r2;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r2.<com.android.internal.telephony.Phone: void unsetOnEcbModeExitResponse(android.os.Handler)>(r1);

        return;
    }

    public void updatePhoneObject(int)
    {
        com.android.internal.telephony.PhoneProxy r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        android.os.Message $r5;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updatePhoneObject: radioTechnology=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.internal.telephony.PhoneProxy: void logd(java.lang.String)>($r4);

        $r5 = virtualinvoke r0.<com.android.internal.telephony.PhoneProxy: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(5, i0, 0, null);

        virtualinvoke r0.<com.android.internal.telephony.PhoneProxy: boolean sendMessage(android.os.Message)>($r5);

        return;
    }

    public void updateServiceLocation()
    {
        com.android.internal.telephony.PhoneProxy r0;
        com.android.internal.telephony.Phone $r1;

        r0 := @this: com.android.internal.telephony.PhoneProxy;

        $r1 = r0.<com.android.internal.telephony.PhoneProxy: com.android.internal.telephony.Phone mActivePhone>;

        interfaceinvoke $r1.<com.android.internal.telephony.Phone: void updateServiceLocation()>();

        return;
    }
}
