class java.util.ListResourceBundle$2 extends java.lang.Object implements java.util.Enumeration
{
    java.util.Iterator it;
    final java.util.ListResourceBundle this$0;

    void <init>(java.util.ListResourceBundle)
    {
        java.util.ListResourceBundle$2 r0;
        java.util.ListResourceBundle r1, $r2;
        java.util.HashMap $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;

        r0 := @this: java.util.ListResourceBundle$2;

        r1 := @parameter0: java.util.ListResourceBundle;

        r0.<java.util.ListResourceBundle$2: java.util.ListResourceBundle this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<java.util.ListResourceBundle$2: java.util.ListResourceBundle this$0>;

        $r3 = $r2.<java.util.ListResourceBundle: java.util.HashMap table>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        r0.<java.util.ListResourceBundle$2: java.util.Iterator it> = $r5;

        return;
    }

    public boolean hasMoreElements()
    {
        java.util.ListResourceBundle$2 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: java.util.ListResourceBundle$2;

        $r1 = r0.<java.util.ListResourceBundle$2: java.util.Iterator it>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public volatile java.lang.Object nextElement()
    {
        java.util.ListResourceBundle$2 r0;
        java.lang.String $r1;

        r0 := @this: java.util.ListResourceBundle$2;

        $r1 = virtualinvoke r0.<java.util.ListResourceBundle$2: java.lang.String nextElement()>();

        return $r1;
    }

    public java.lang.String nextElement()
    {
        java.util.ListResourceBundle$2 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: java.util.ListResourceBundle$2;

        $r1 = r0.<java.util.ListResourceBundle$2: java.util.Iterator it>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.String) $r2;

        return $r3;
    }
}
