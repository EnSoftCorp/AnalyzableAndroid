public class android.text.StaticLayout extends android.text.Layout
{
    private static final char CHAR_FIRST_CJK;
    private static final int CHAR_FIRST_HIGH_SURROGATE;
    private static final char CHAR_HYPHEN;
    private static final int CHAR_LAST_LOW_SURROGATE;
    private static final char CHAR_NEW_LINE;
    private static final char CHAR_SLASH;
    private static final char CHAR_SPACE;
    private static final char CHAR_TAB;
    private static final char CHAR_ZWSP;
    private static final int COLUMNS_ELLIPSIZE;
    private static final int COLUMNS_NORMAL;
    private static final int DESCENT;
    private static final int DIR;
    private static final int DIR_SHIFT;
    private static final int ELLIPSIS_COUNT;
    private static final int ELLIPSIS_START;
    private static final double EXTRA_ROUNDING;
    private static final int START;
    private static final int START_MASK;
    private static final int TAB;
    private static final int TAB_INCREMENT;
    private static final int TAB_MASK;
    static final java.lang.String TAG;
    private static final int TOP;
    private int mBottomPadding;
    private int mColumns;
    private int mEllipsizedWidth;
    private android.graphics.Paint$FontMetricsInt mFontMetricsInt;
    private int mLineCount;
    private android.text.Layout$Directions[] mLineDirections;
    private int[] mLines;
    private int mMaximumVisibleLineCount;
    private android.text.MeasuredText mMeasured;
    private int mTopPadding;

    void <init>(java.lang.CharSequence)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        android.graphics.Paint$FontMetricsInt $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r3;
        android.text.Layout$Directions[] $r4;
        android.text.MeasuredText $r5;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)>(r1, null, 0, null, 0.0F, 0.0F);

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = 2147483647;

        $r2 = new android.graphics.Paint$FontMetricsInt;

        specialinvoke $r2.<android.graphics.Paint$FontMetricsInt: void <init>()>();

        r0.<android.text.StaticLayout: android.graphics.Paint$FontMetricsInt mFontMetricsInt> = $r2;

        r0.<android.text.StaticLayout: int mColumns> = 5;

        $i0 = r0.<android.text.StaticLayout: int mColumns>;

        $i1 = 2 * $i0;

        $i2 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i1);

        $r3 = newarray (int)[$i2];

        r0.<android.text.StaticLayout: int[] mLines> = $r3;

        $i3 = r0.<android.text.StaticLayout: int mColumns>;

        $i4 = 2 * $i3;

        $i5 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i4);

        $r4 = newarray (android.text.Layout$Directions)[$i5];

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = $r4;

        $r5 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText obtain()>();

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r5;

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r1, i0, i1, r2, i2, r3, f0, f1, z0, null, 0);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean, android.text.TextUtils$TruncateAt, int)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;
        android.text.TextUtils$TruncateAt r4;
        android.text.TextDirectionHeuristic $r5;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        r4 := @parameter9: android.text.TextUtils$TruncateAt;

        i3 := @parameter10: int;

        $r5 = <android.text.TextDirectionHeuristics: android.text.TextDirectionHeuristic FIRSTSTRONG_LTR>;

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>(r1, i0, i1, r2, i2, r3, $r5, f0, f1, z0, r4, i3, 2147483647);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        android.text.TextDirectionHeuristic r4;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        r4 := @parameter6: android.text.TextDirectionHeuristic;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        z0 := @parameter9: boolean;

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int)>(r1, i0, i1, r2, i2, r3, r4, f0, f1, z0, null, 0, 2147483647);

        return;
    }

    public void <init>(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean, android.text.TextUtils$TruncateAt, int, int)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1, r6, $r14;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.text.TextPaint r2;
        android.text.Layout$Alignment r3;
        android.text.TextDirectionHeuristic r4;
        float f0, f1, $f2;
        boolean z0, $z1;
        android.text.TextUtils$TruncateAt r5;
        android.text.Layout$Ellipsizer r7, $r8;
        android.graphics.Paint$FontMetricsInt $r9;
        int[] $r10;
        android.text.MeasuredText $r11, $r13, $r15;
        android.text.Layout$Directions[] $r12;
        android.text.Layout$SpannedEllipsizer $r16;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.Layout$Alignment;

        r4 := @parameter6: android.text.TextDirectionHeuristic;

        f0 := @parameter7: float;

        f1 := @parameter8: float;

        z0 := @parameter9: boolean;

        r5 := @parameter10: android.text.TextUtils$TruncateAt;

        i3 := @parameter11: int;

        i4 := @parameter12: int;

        if r5 != null goto label3;

        r6 = r1;

     label1:
        specialinvoke r0.<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float)>(r6, r2, i2, r3, r4, f0, f1);

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = 2147483647;

        $r9 = new android.graphics.Paint$FontMetricsInt;

        specialinvoke $r9.<android.graphics.Paint$FontMetricsInt: void <init>()>();

        r0.<android.text.StaticLayout: android.graphics.Paint$FontMetricsInt mFontMetricsInt> = $r9;

        if r5 == null goto label5;

        $r14 = virtualinvoke r0.<android.text.StaticLayout: java.lang.CharSequence getText()>();

        r7 = (android.text.Layout$Ellipsizer) $r14;

        r7.<android.text.Layout$Ellipsizer: android.text.Layout mLayout> = r0;

        r7.<android.text.Layout$Ellipsizer: int mWidth> = i3;

        r7.<android.text.Layout$Ellipsizer: android.text.TextUtils$TruncateAt mMethod> = r5;

        r0.<android.text.StaticLayout: int mEllipsizedWidth> = i3;

        r0.<android.text.StaticLayout: int mColumns> = 5;

     label2:
        $i5 = r0.<android.text.StaticLayout: int mColumns>;

        $i7 = 2 * $i5;

        $i6 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i7);

        $r10 = newarray (int)[$i6];

        r0.<android.text.StaticLayout: int[] mLines> = $r10;

        $i8 = r0.<android.text.StaticLayout: int mColumns>;

        $i10 = 2 * $i8;

        $i9 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i10);

        $r12 = newarray (android.text.Layout$Directions)[$i9];

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = $r12;

        r0.<android.text.StaticLayout: int mMaximumVisibleLineCount> = i4;

        $r11 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText obtain()>();

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r11;

        $f2 = (float) i3;

        virtualinvoke r0.<android.text.StaticLayout: void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt)>(r1, i0, i1, r2, i2, r4, f0, f1, z0, z0, $f2, r5);

        $r13 = r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured>;

        $r15 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText recycle(android.text.MeasuredText)>($r13);

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r15;

        r0.<android.text.StaticLayout: android.graphics.Paint$FontMetricsInt mFontMetricsInt> = null;

        return;

     label3:
        $z1 = r1 instanceof android.text.Spanned;

        if $z1 == 0 goto label4;

        $r16 = new android.text.Layout$SpannedEllipsizer;

        specialinvoke $r16.<android.text.Layout$SpannedEllipsizer: void <init>(java.lang.CharSequence)>(r1);

        r6 = $r16;

        goto label1;

     label4:
        $r8 = new android.text.Layout$Ellipsizer;

        specialinvoke $r8.<android.text.Layout$Ellipsizer: void <init>(java.lang.CharSequence)>(r1);

        r6 = $r8;

        goto label1;

     label5:
        r0.<android.text.StaticLayout: int mColumns> = 3;

        r0.<android.text.StaticLayout: int mEllipsizedWidth> = i2;

        goto label2;
    }

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0, $i1;
        android.text.Layout$Alignment r3;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.Layout$Alignment;

        f0 := @parameter4: float;

        f1 := @parameter5: float;

        z0 := @parameter6: boolean;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)>(r1, 0, $i1, r2, i0, r3, f0, f1, z0);

        return;
    }

    public void <init>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, android.text.TextDirectionHeuristic, float, float, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        android.text.TextPaint r2;
        int i0, $i1;
        android.text.Layout$Alignment r3;
        android.text.TextDirectionHeuristic r4;
        float f0, f1;
        boolean z0;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.text.TextPaint;

        i0 := @parameter2: int;

        r3 := @parameter3: android.text.Layout$Alignment;

        r4 := @parameter4: android.text.TextDirectionHeuristic;

        f0 := @parameter5: float;

        f1 := @parameter6: float;

        z0 := @parameter7: boolean;

        $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        specialinvoke r0.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>(r1, 0, $i1, r2, i0, r3, r4, f0, f1, z0);

        return;
    }

    private void calculateEllipsis(int, int, float[], int, float, android.text.TextUtils$TruncateAt, int, float, android.text.TextPaint, boolean)
    {
        android.text.StaticLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i24, $i26, $i27, $i29, $i30, $i31, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        float[] r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        android.text.TextUtils$TruncateAt r2, $r5, $r6, $r7, $r10, $r11;
        android.text.TextPaint r3;
        boolean z0, z1, z2;
        char[] r4;
        byte $b10, $b19, $b25, $b32, $b33;
        int[] $r8, $r9, $r12, $r13;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        i2 := @parameter3: int;

        f0 := @parameter4: float;

        r2 := @parameter5: android.text.TextUtils$TruncateAt;

        i3 := @parameter6: int;

        f1 := @parameter7: float;

        r3 := @parameter8: android.text.TextPaint;

        z0 := @parameter9: boolean;

        $b10 = f1 cmpg f0;

        if $b10 > 0 goto label01;

        if z0 != 0 goto label01;

        $r13 = r0.<android.text.StaticLayout: int[] mLines>;

        $i34 = r0.<android.text.StaticLayout: int mColumns>;

        $i35 = i3 * $i34;

        $i36 = 3 + $i35;

        $r13[$i36] = 0;

        $r12 = r0.<android.text.StaticLayout: int[] mLines>;

        $i39 = r0.<android.text.StaticLayout: int mColumns>;

        $i41 = i3 * $i39;

        $i40 = 4 + $i41;

        $r12[$i40] = 0;

        return;

     label01:
        $r5 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END_SMALL>;

        if r2 != $r5 goto label06;

        r4 = <android.text.StaticLayout: char[] ELLIPSIS_TWO_DOTS>;

     label02:
        f2 = virtualinvoke r3.<android.text.TextPaint: float measureText(char[],int,int)>(r4, 0, 1);

        i4 = i1 - i0;

        $r7 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt START>;

        if r2 != $r7 goto label09;

        $i27 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i27 != 1 goto label08;

        f11 = 0.0F;

        i11 = i4;

     label03:
        if i11 < 0 goto label04;

        $i29 = i11 - 1;

        $i37 = i0 + $i29;

        $i38 = $i37 - i2;

        f12 = r1[$i38];

        $f19 = f12 + f11;

        $f20 = f2 + $f19;

        $b33 = $f20 cmpl f0;

        if $b33 <= 0 goto label07;

     label04:
        i7 = 0;

        i6 = i11;

     label05:
        $r8 = r0.<android.text.StaticLayout: int[] mLines>;

        $i12 = r0.<android.text.StaticLayout: int mColumns>;

        $i14 = i3 * $i12;

        $i15 = 3 + $i14;

        $r8[$i15] = i7;

        $r9 = r0.<android.text.StaticLayout: int[] mLines>;

        $i13 = r0.<android.text.StaticLayout: int mColumns>;

        $i17 = i3 * $i13;

        $i18 = 4 + $i17;

        $r9[$i18] = i6;

        return;

     label06:
        r4 = <android.text.StaticLayout: char[] ELLIPSIS_NORMAL>;

        goto label02;

     label07:
        f11 = f11 + f12;

        i11 = i11 + -1;

        goto label03;

     label08:
        z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("StaticLayout", 5);

        i6 = 0;

        i7 = 0;

        if z2 == 0 goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("StaticLayout", "Start Ellipsis only supported with one line");

        i6 = 0;

        i7 = 0;

        goto label05;

     label09:
        $r6 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        if r2 == $r6 goto label10;

        $r11 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r2 == $r11 goto label10;

        $r10 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END_SMALL>;

        if r2 != $r10 goto label14;

     label10:
        f3 = 0.0F;

        i5 = 0;

     label11:
        if i5 >= i4 goto label12;

        $i16 = i5 + i0;

        $i20 = $i16 - i2;

        f4 = r1[$i20];

        $f14 = f4 + f3;

        $f13 = f2 + $f14;

        $b19 = $f13 cmpl f0;

        if $b19 <= 0 goto label13;

     label12:
        i7 = i5;

        i6 = i4 - i5;

        if z0 == 0 goto label05;

        if i6 != 0 goto label05;

        if i4 <= 0 goto label05;

        i7 = i4 - 1;

        i6 = 1;

        goto label05;

     label13:
        f3 = f3 + f4;

        i5 = i5 + 1;

        goto label11;

     label14:
        $i21 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i21 != 1 goto label21;

        f5 = 0.0F;

        f7 = 0.0F;

        $f16 = f0 - f2;

        f6 = $f16 / 2.0F;

        i8 = i4;

     label15:
        if i8 < 0 goto label16;

        $i24 = i8 - 1;

        $i30 = i0 + $i24;

        $i31 = $i30 - i2;

        f10 = r1[$i31];

        $f18 = f10 + f7;

        $b32 = $f18 cmpl f6;

        if $b32 <= 0 goto label19;

     label16:
        $f15 = f0 - f2;

        f8 = $f15 - f7;

        i9 = 0;

     label17:
        if i9 >= i8 goto label18;

        $i22 = i9 + i0;

        $i26 = $i22 - i2;

        f9 = r1[$i26];

        $f17 = f9 + f5;

        $b25 = $f17 cmpl f8;

        if $b25 <= 0 goto label20;

     label18:
        i7 = i9;

        i6 = i8 - i9;

        goto label05;

     label19:
        f7 = f7 + f10;

        i8 = i8 + -1;

        goto label15;

     label20:
        f5 = f5 + f9;

        i9 = i9 + 1;

        goto label17;

     label21:
        z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("StaticLayout", 5);

        i6 = 0;

        i7 = 0;

        if z1 == 0 goto label05;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("StaticLayout", "Middle Ellipsis only supported with one line");

        i6 = 0;

        i7 = 0;

        goto label05;
    }

    private static final boolean isIdeographic(char, boolean)
    {
        char c0;
        boolean z0;

        c0 := @parameter0: char;

        z0 := @parameter1: boolean;

        if c0 < 11904 goto label02;

        if c0 > 12287 goto label02;

     label01:
        return 1;

     label02:
        if c0 == 12288 goto label01;

        if c0 < 12352 goto label05;

        if c0 > 12447 goto label05;

        if z0 != 0 goto label01;

        lookupswitch(c0)
        {
            case 12353: goto label04;
            case 12355: goto label04;
            case 12357: goto label04;
            case 12359: goto label04;
            case 12361: goto label04;
            case 12387: goto label04;
            case 12419: goto label04;
            case 12421: goto label04;
            case 12423: goto label04;
            case 12430: goto label04;
            case 12437: goto label04;
            case 12438: goto label04;
            case 12443: goto label04;
            case 12444: goto label04;
            case 12445: goto label04;
            case 12446: goto label04;
            default: goto label03;
        };

     label03:
        return 1;

     label04:
        return 0;

     label05:
        if c0 < 12448 goto label08;

        if c0 > 12543 goto label08;

        if z0 != 0 goto label01;

        lookupswitch(c0)
        {
            case 12448: goto label07;
            case 12449: goto label07;
            case 12451: goto label07;
            case 12453: goto label07;
            case 12455: goto label07;
            case 12457: goto label07;
            case 12483: goto label07;
            case 12515: goto label07;
            case 12517: goto label07;
            case 12519: goto label07;
            case 12526: goto label07;
            case 12533: goto label07;
            case 12534: goto label07;
            case 12539: goto label07;
            case 12540: goto label07;
            case 12541: goto label07;
            case 12542: goto label07;
            default: goto label06;
        };

     label06:
        return 1;

     label07:
        return 0;

     label08:
        if c0 < 13312 goto label09;

        if c0 <= 19893 goto label01;

     label09:
        if c0 < 19968 goto label10;

        if c0 <= 40891 goto label01;

     label10:
        if c0 < 63744 goto label11;

        if c0 <= 64217 goto label01;

     label11:
        if c0 < 40960 goto label12;

        if c0 <= 42127 goto label01;

     label12:
        if c0 < 42128 goto label13;

        if c0 <= 42191 goto label01;

     label13:
        if c0 < 65122 goto label14;

        if c0 <= 65126 goto label01;

     label14:
        if c0 < 65296 goto label15;

        if c0 <= 65305 goto label01;

     label15:
        return 0;
    }

    private int out(java.lang.CharSequence, int, int, int, int, int, int, int, float, float, android.text.style.LineHeightSpan[], int[], android.graphics.Paint$FontMetricsInt, boolean, boolean, byte[], int, boolean, int, boolean, boolean, char[], float[], int, android.text.TextUtils$TruncateAt, float, float, android.text.TextPaint, boolean)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, $i20, i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        android.text.style.LineHeightSpan[] r2;
        int[] r3, r10, r13;
        android.graphics.Paint$FontMetricsInt r4;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, $z10;
        byte[] r5;
        float[] r6;
        char[] r7;
        android.text.TextUtils$TruncateAt r8, $r17, $r18;
        android.text.TextPaint r9;
        android.text.Layout$Directions r11, $r15;
        double d0, $d1, $d2, $d3;
        android.text.Layout$Directions[] r12, $r14, $r16, $r21, $r22;
        byte $b53;
        android.text.style.LineHeightSpan $r19, $r20, $r24;
        android.text.style.LineHeightSpan$WithDensity $r23;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        f0 := @parameter8: float;

        f1 := @parameter9: float;

        r2 := @parameter10: android.text.style.LineHeightSpan[];

        r3 := @parameter11: int[];

        r4 := @parameter12: android.graphics.Paint$FontMetricsInt;

        z0 := @parameter13: boolean;

        z1 := @parameter14: boolean;

        r5 := @parameter15: byte[];

        i7 := @parameter16: int;

        z2 := @parameter17: boolean;

        i8 := @parameter18: int;

        z4 := @parameter19: boolean;

        z3 := @parameter20: boolean;

        r7 := @parameter21: char[];

        r6 := @parameter22: float[];

        i9 := @parameter23: int;

        r8 := @parameter24: android.text.TextUtils$TruncateAt;

        f3 := @parameter25: float;

        f2 := @parameter26: float;

        r9 := @parameter27: android.text.TextPaint;

        z5 := @parameter28: boolean;

        i11 = r0.<android.text.StaticLayout: int mLineCount>;

        $i20 = r0.<android.text.StaticLayout: int mColumns>;

        i10 = i11 * $i20;

        $i25 = r0.<android.text.StaticLayout: int mColumns>;

        $i24 = i10 + $i25;

        i14 = 1 + $i24;

        r10 = r0.<android.text.StaticLayout: int[] mLines>;

        $i23 = lengthof r10;

        if i14 < $i23 goto label01;

        $i60 = i14 + 1;

        i18 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i60);

        r13 = newarray (int)[i18];

        i21 = lengthof r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 0, r13, 0, i21);

        r0.<android.text.StaticLayout: int[] mLines> = r13;

        r10 = r13;

        r12 = newarray (android.text.Layout$Directions)[i18];

        $r21 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $r22 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $i59 = lengthof $r22;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r21, 0, r12, 0, $i59);

        r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections> = r12;

     label01:
        if r2 == null goto label06;

        r4.<android.graphics.Paint$FontMetricsInt: int ascent> = i2;

        r4.<android.graphics.Paint$FontMetricsInt: int descent> = i3;

        r4.<android.graphics.Paint$FontMetricsInt: int top> = i4;

        r4.<android.graphics.Paint$FontMetricsInt: int bottom> = i5;

        i19 = 0;

     label02:
        i17 = lengthof r2;

        if i19 >= i17 goto label05;

        $r20 = r2[i19];

        $z10 = $r20 instanceof android.text.style.LineHeightSpan$WithDensity;

        if $z10 == 0 goto label04;

        $r24 = r2[i19];

        $r23 = (android.text.style.LineHeightSpan$WithDensity) $r24;

        $i61 = r3[i19];

        interfaceinvoke $r23.<android.text.style.LineHeightSpan$WithDensity: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt,android.text.TextPaint)>(r1, i0, i1, $i61, i6, r4, r9);

     label03:
        i19 = i19 + 1;

        goto label02;

     label04:
        $r19 = r2[i19];

        $i55 = r3[i19];

        interfaceinvoke $r19.<android.text.style.LineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt)>(r1, i0, i1, $i55, i6, r4);

        goto label03;

     label05:
        i2 = r4.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i3 = r4.<android.graphics.Paint$FontMetricsInt: int descent>;

        i4 = r4.<android.graphics.Paint$FontMetricsInt: int top>;

        i5 = r4.<android.graphics.Paint$FontMetricsInt: int bottom>;

     label06:
        if i11 != 0 goto label08;

        if z3 == 0 goto label07;

        $i57 = i4 - i2;

        r0.<android.text.StaticLayout: int mTopPadding> = $i57;

     label07:
        if z4 == 0 goto label08;

        i2 = i4;

     label08:
        if i1 != i8 goto label10;

        if z3 == 0 goto label09;

        $i56 = i5 - i3;

        r0.<android.text.StaticLayout: int mBottomPadding> = $i56;

     label09:
        if z4 == 0 goto label10;

        i3 = i5;

     label10:
        if z1 == 0 goto label25;

        $i54 = i3 - i2;

        $f7 = (float) $i54;

        $f5 = f0 - 1.0F;

        $f6 = $f7 * $f5;

        $f4 = f1 + $f6;

        d0 = (double) $f4;

        $b53 = d0 cmpl 0.0;

        if $b53 < 0 goto label24;

        $d3 = 0.5 + d0;

        i12 = (int) $d3;

     label11:
        $i22 = i10 + 0;

        r10[$i22] = i0;

        $i29 = i10 + 1;

        r10[$i29] = i6;

        $i27 = i10 + 2;

        $i28 = i3 + i12;

        r10[$i27] = $i28;

        $i26 = i3 - i2;

        $i33 = i12 + $i26;

        i13 = i6 + $i33;

        $i32 = r0.<android.text.StaticLayout: int mColumns>;

        $i31 = i10 + $i32;

        $i30 = 0 + $i31;

        r10[$i30] = i1;

        $i38 = r0.<android.text.StaticLayout: int mColumns>;

        $i39 = i10 + $i38;

        $i40 = 1 + $i39;

        r10[$i40] = i13;

        if z0 == 0 goto label12;

        i16 = i10 + 0;

        $i50 = r10[i16];

        $i49 = 536870912 | $i50;

        r10[i16] = $i49;

     label12:
        i15 = i10 + 0;

        $i34 = r10[i15];

        $i41 = i7 << 30;

        $i35 = $i34 | $i41;

        r10[i15] = $i35;

        r11 = <android.text.StaticLayout: android.text.Layout$Directions DIRS_ALL_LEFT_TO_RIGHT>;

        if z2 == 0 goto label26;

        $r16 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $r16[i11] = r11;

     label13:
        if r8 == null goto label23;

        if i11 != 0 goto label27;

        z6 = 1;

     label14:
        $i44 = i11 + 1;

        $i43 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i44 != $i43 goto label28;

        z7 = 1;

     label15:
        if z5 == 0 goto label29;

        $i52 = r0.<android.text.StaticLayout: int mLineCount>;

        $i48 = 1 + $i52;

        $i51 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i48 != $i51 goto label29;

        z8 = 1;

     label16:
        $i45 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i45 != 1 goto label17;

        if z5 != 0 goto label18;

     label17:
        if z6 == 0 goto label19;

        if z5 != 0 goto label19;

     label18:
        $r17 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt MARQUEE>;

        if r8 != $r17 goto label21;

     label19:
        if z6 != 0 goto label30;

        if z7 != 0 goto label20;

        if z5 != 0 goto label30;

     label20:
        $r18 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        if r8 != $r18 goto label30;

     label21:
        z9 = 1;

     label22:
        if z9 == 0 goto label23;

        specialinvoke r0.<android.text.StaticLayout: void calculateEllipsis(int,int,float[],int,float,android.text.TextUtils$TruncateAt,int,float,android.text.TextPaint,boolean)>(i0, i1, r6, i9, f3, r8, i11, f2, r9, z8);

     label23:
        $i47 = r0.<android.text.StaticLayout: int mLineCount>;

        $i42 = 1 + $i47;

        r0.<android.text.StaticLayout: int mLineCount> = $i42;

        return i13;

     label24:
        $d2 = neg d0;

        $d1 = 0.5 + $d2;

        $i58 = (int) $d1;

        i12 = neg $i58;

        goto label11;

     label25:
        i12 = 0;

        goto label11;

     label26:
        $r14 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $i46 = i0 - i9;

        $i37 = i0 - i9;

        $i36 = i1 - i0;

        $r15 = staticinvoke <android.text.AndroidBidi: android.text.Layout$Directions directions(int,byte[],int,char[],int,int)>(i7, r5, $i46, r7, $i37, $i36);

        $r14[i11] = $r15;

        goto label13;

     label27:
        z6 = 0;

        goto label14;

     label28:
        z7 = 0;

        goto label15;

     label29:
        z8 = 0;

        goto label16;

     label30:
        z9 = 0;

        goto label22;
    }

    void finish()
    {
        android.text.StaticLayout r0;
        android.text.MeasuredText $r1, $r2;

        r0 := @this: android.text.StaticLayout;

        $r1 = r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured>;

        $r2 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText recycle(android.text.MeasuredText)>($r1);

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r2;

        return;
    }

    void generate(java.lang.CharSequence, int, int, android.text.TextPaint, int, android.text.TextDirectionHeuristic, float, float, boolean, boolean, float, android.text.TextUtils$TruncateAt)
    {
        android.text.StaticLayout r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i34, i35, i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49, $i50, $i54, $i55, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i66, $i67, $i68, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i98, $i99;
        android.text.TextPaint r2, r15;
        android.text.TextDirectionHeuristic r3;
        float f0, f1, f2, f3, f4, f5, f6, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, $z12, $z13, $z14, $z15;
        android.text.TextUtils$TruncateAt r4;
        android.graphics.Paint$FontMetricsInt r5;
        android.text.MeasuredText r6;
        int[] r7;
        android.text.Spanned r8;
        byte[] r9, r11;
        android.text.style.LineHeightSpan[] r10;
        char[] r12;
        float[] r13;
        android.text.Layout$TabStops r14, $r29;
        char c33, $c51, $c65, $c78;
        android.graphics.Bitmap r16;
        android.text.style.TabStopSpan[] r17;
        android.text.style.LineHeightSpan r18;
        android.text.style.LeadingMarginSpan r19, $r28, $r32;
        android.text.style.LeadingMarginSpan[] r20;
        android.text.style.LeadingMarginSpan$LeadingMarginSpan2 r21;
        byte $b56, $b69, $b97;
        android.text.style.MetricAffectingSpan[] $r22, $r24;
        java.lang.Object[] $r23, $r25, $r26, $r30, $r31;
        android.emoji.EmojiFactory $r27;

        r0 := @this: android.text.StaticLayout;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.TextPaint;

        i2 := @parameter4: int;

        r3 := @parameter5: android.text.TextDirectionHeuristic;

        f0 := @parameter6: float;

        f1 := @parameter7: float;

        z0 := @parameter8: boolean;

        z1 := @parameter9: boolean;

        f2 := @parameter10: float;

        r4 := @parameter11: android.text.TextUtils$TruncateAt;

        r0.<android.text.StaticLayout: int mLineCount> = 0;

        i3 = 0;

        $b56 = f0 cmpl 1.0F;

        if $b56 != 0 goto label01;

        $b97 = f1 cmpl 0.0F;

        if $b97 == 0 goto label08;

     label01:
        z2 = 1;

     label02:
        r5 = r0.<android.text.StaticLayout: android.graphics.Paint$FontMetricsInt mFontMetricsInt>;

        r7 = null;

        r6 = r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured>;

        z3 = r1 instanceof android.text.Spanned;

        r8 = null;

        if z3 == 0 goto label03;

        r8 = (android.text.Spanned) r1;

     label03:
        i4 = i0;

     label04:
        if i4 > i1 goto label61;

        i11 = staticinvoke <android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)>(r1, 10, i4, i1);

        if i11 >= 0 goto label09;

        i10 = i1;

     label05:
        $i62 = r0.<android.text.StaticLayout: int mLineCount>;

        i13 = 1 + $i62;

        i14 = i2;

        i12 = i2;

        r10 = null;

        if r8 == null goto label16;

        $r31 = staticinvoke <android.text.StaticLayout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>(r8, i4, i10, class "android/text/style/LeadingMarginSpan");

        r20 = (android.text.style.LeadingMarginSpan[]) $r31;

        i47 = 0;

     label06:
        i49 = lengthof r20;

        if i47 >= i49 goto label10;

        r19 = r20[i47];

        $r28 = r20[i47];

        $i88 = interfaceinvoke $r28.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>(1);

        i14 = i14 - $i88;

        $r32 = r20[i47];

        $i96 = interfaceinvoke $r32.<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>(0);

        i12 = i12 - $i96;

        $z15 = r19 instanceof android.text.style.LeadingMarginSpan$LeadingMarginSpan2;

        if $z15 == 0 goto label07;

        r21 = (android.text.style.LeadingMarginSpan$LeadingMarginSpan2) r19;

        $i95 = interfaceinvoke r8.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r21);

        $i98 = virtualinvoke r0.<android.text.StaticLayout: int getLineForOffset(int)>($i95);

        $i99 = interfaceinvoke r21.<android.text.style.LeadingMarginSpan$LeadingMarginSpan2: int getLeadingMarginLineCount()>();

        i13 = $i98 + $i99;

     label07:
        i47 = i47 + 1;

        goto label06;

     label08:
        z2 = 0;

        goto label02;

     label09:
        i10 = i11 + 1;

        goto label05;

     label10:
        $r30 = staticinvoke <android.text.StaticLayout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>(r8, i4, i10, class "android/text/style/LineHeightSpan");

        r10 = (android.text.style.LineHeightSpan[]) $r30;

        $i94 = lengthof r10;

        if $i94 == 0 goto label16;

        if r7 == null goto label11;

        $i89 = lengthof r7;

        $i90 = lengthof r10;

        if $i89 >= $i90 goto label12;

     label11:
        $i93 = lengthof r10;

        $i87 = staticinvoke <com.android.internal.util.ArrayUtils: int idealIntArraySize(int)>($i93);

        r7 = newarray (int)[$i87];

     label12:
        i48 = 0;

     label13:
        i45 = lengthof r10;

        if i48 >= i45 goto label16;

        r18 = r10[i48];

        i46 = interfaceinvoke r8.<android.text.Spanned: int getSpanStart(java.lang.Object)>(r18);

        if i46 >= i4 goto label15;

        $i86 = virtualinvoke r0.<android.text.StaticLayout: int getLineForOffset(int)>(i46);

        $i85 = virtualinvoke r0.<android.text.StaticLayout: int getLineTop(int)>($i86);

        r7[i48] = $i85;

     label14:
        i48 = i48 + 1;

        goto label13;

     label15:
        r7[i48] = i3;

        goto label14;

     label16:
        virtualinvoke r6.<android.text.MeasuredText: void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)>(r1, i4, i10, r3);

        r12 = r6.<android.text.MeasuredText: char[] mChars>;

        r13 = r6.<android.text.MeasuredText: float[] mWidths>;

        r11 = r6.<android.text.MeasuredText: byte[] mLevels>;

        i15 = r6.<android.text.MeasuredText: int mDir>;

        z5 = r6.<android.text.MeasuredText: boolean mEasy>;

        i17 = i14;

        f3 = 0.0F;

        i16 = i4;

        i20 = i4;

        f4 = 0.0F;

        i18 = 0;

        i19 = 0;

        i23 = 0;

        i22 = 0;

        i21 = i4;

        f5 = 0.0F;

        i27 = 0;

        i26 = 0;

        i25 = 0;

        i24 = 0;

        z7 = 0;

        z6 = 0;

        r14 = null;

        i28 = i4;

     label17:
        if i28 >= i10 goto label57;

        if r8 != null goto label36;

        i29 = i10;

        $i91 = i29 - i28;

        virtualinvoke r6.<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt)>(r2, $i91, r5);

     label18:
        i35 = r5.<android.graphics.Paint$FontMetricsInt: int top>;

        i36 = r5.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i30 = r5.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i31 = r5.<android.graphics.Paint$FontMetricsInt: int descent>;

        i32 = i28;

     label19:
        if i32 >= i29 goto label52;

        $i63 = i32 - i4;

        c33 = r12[$i63];

        if c33 != 10 goto label37;

     label20:
        if c33 == 32 goto label21;

        if c33 == 9 goto label21;

        if c33 != 8203 goto label46;

     label21:
        z9 = 1;

     label22:
        $f8 = (float) i17;

        $b69 = f3 cmpg $f8;

        if $b69 <= 0 goto label23;

        if z9 == 0 goto label48;

     label23:
        f5 = f3;

        i21 = i32 + 1;

        if i35 >= i25 goto label24;

        i25 = i35;

     label24:
        if i30 >= i27 goto label25;

        i27 = i30;

     label25:
        if i31 <= i26 goto label26;

        i26 = i31;

     label26:
        if i36 <= i24 goto label27;

        i24 = i36;

     label27:
        if z9 != 0 goto label30;

        if c33 == 47 goto label28;

        if c33 != 45 goto label29;

     label28:
        $i68 = i32 + 1;

        if $i68 >= i29 goto label30;

        $i67 = i32 + 1;

        $i66 = $i67 - i4;

        $c65 = r12[$i66];

        $z13 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c65);

        if $z13 == 0 goto label30;

     label29:
        if c33 < 11904 goto label47;

        $z12 = staticinvoke <android.text.StaticLayout: boolean isIdeographic(char,boolean)>(c33, 1);

        if $z12 == 0 goto label47;

        $i77 = i32 + 1;

        if $i77 >= i29 goto label47;

        $i76 = i32 + 1;

        $i79 = $i76 - i4;

        $c78 = r12[$i79];

        $z14 = staticinvoke <android.text.StaticLayout: boolean isIdeographic(char,boolean)>($c78, 0);

        if $z14 == 0 goto label47;

     label30:
        z10 = 1;

     label31:
        if z10 == 0 goto label35;

        f4 = f3;

        i20 = i32 + 1;

        if i25 >= i23 goto label32;

        i23 = i25;

     label32:
        if i27 >= i18 goto label33;

        i18 = i27;

     label33:
        if i26 <= i19 goto label34;

        i19 = i26;

     label34:
        if i24 <= i22 goto label35;

        i22 = i24;

     label35:
        i32 = i32 + 1;

        goto label19;

     label36:
        i29 = interfaceinvoke r8.<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>(i28, i10, class "android/text/style/MetricAffectingSpan");

        i34 = i29 - i28;

        $r25 = interfaceinvoke r8.<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>(i28, i29, class "android/text/style/MetricAffectingSpan");

        $r24 = (android.text.style.MetricAffectingSpan[]) $r25;

        $r23 = staticinvoke <android.text.TextUtils: java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class)>($r24, r8, class "android/text/style/MetricAffectingSpan");

        $r22 = (android.text.style.MetricAffectingSpan[]) $r23;

        virtualinvoke r6.<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt)>(r2, $r22, i34, r5);

        goto label18;

     label37:
        if c33 != 9 goto label40;

        if z6 != 0 goto label38;

        z6 = 1;

        z7 = 1;

        if r8 == null goto label38;

        $r26 = staticinvoke <android.text.StaticLayout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)>(r8, i4, i10, class "android/text/style/TabStopSpan");

        r17 = (android.text.style.TabStopSpan[]) $r26;

        $i92 = lengthof r17;

        if $i92 <= 0 goto label38;

        $r29 = new android.text.Layout$TabStops;

        specialinvoke $r29.<android.text.Layout$TabStops: void <init>(int,java.lang.Object[])>(20, r17);

        r14 = $r29;

     label38:
        if r14 == null goto label39;

        f3 = virtualinvoke r14.<android.text.Layout$TabStops: float nextTab(float)>(f3);

        goto label20;

     label39:
        f3 = staticinvoke <android.text.Layout$TabStops: float nextDefaultStop(float,int)>(f3, 20);

        goto label20;

     label40:
        if c33 < 55296 goto label45;

        if c33 > 57343 goto label45;

        $i73 = i32 + 1;

        if $i73 >= i29 goto label45;

        $i72 = i32 - i4;

        i43 = staticinvoke <java.lang.Character: int codePointAt(char[],int)>(r12, $i72);

        $i74 = <android.text.StaticLayout: int MIN_EMOJI>;

        if i43 < $i74 goto label44;

        $i82 = <android.text.StaticLayout: int MAX_EMOJI>;

        if i43 > $i82 goto label44;

        $r27 = <android.text.StaticLayout: android.emoji.EmojiFactory EMOJI_FACTORY>;

        r16 = virtualinvoke $r27.<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>(i43);

        if r16 == null goto label43;

        if r8 != null goto label42;

        r15 = r2;

     label41:
        $i84 = virtualinvoke r16.<android.graphics.Bitmap: int getWidth()>();

        $f16 = (float) $i84;

        $f17 = virtualinvoke r15.<android.graphics.Paint: float ascent()>();

        $f11 = neg $f17;

        $f12 = $f16 * $f11;

        $i81 = virtualinvoke r16.<android.graphics.Bitmap: int getHeight()>();

        $f13 = (float) $i81;

        $f14 = $f12 / $f13;

        f3 = f3 + $f14;

        z7 = 1;

        i32 = i32 + 1;

        goto label20;

     label42:
        r15 = r0.<android.text.StaticLayout: android.text.TextPaint mWorkPaint>;

        goto label41;

     label43:
        $i83 = i32 - i4;

        $f15 = r13[$i83];

        f3 = f3 + $f15;

        goto label20;

     label44:
        $i75 = i32 - i4;

        $f10 = r13[$i75];

        f3 = f3 + $f10;

        goto label20;

     label45:
        $i70 = i32 - i4;

        $f9 = r13[$i70];

        f3 = f3 + $f9;

        goto label20;

     label46:
        z9 = 0;

        goto label22;

     label47:
        z10 = 0;

        goto label31;

     label48:
        $i80 = i32 + 1;

        if $i80 >= i29 goto label53;

        z11 = 1;

     label49:
        if i20 == i16 goto label54;

        i41 = i20;

        i37 = i18;

        i38 = i19;

        i39 = i23;

        i40 = i22;

        f6 = f4;

     label50:
        i3 = specialinvoke r0.<android.text.StaticLayout: int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean)>(r1, i16, i41, i37, i38, i39, i40, i3, f0, f1, r10, r7, r5, z7, z2, r11, i15, z5, i1, z0, z1, r12, r13, i4, r4, f2, f6, r2, z11);

        i16 = i41;

        i32 = i16 - 1;

        i21 = i16;

        i20 = i16;

        f3 = 0.0F;

        i24 = 0;

        i25 = 0;

        i26 = 0;

        i27 = 0;

        i22 = 0;

        i23 = 0;

        i19 = 0;

        i18 = 0;

        i13 = i13 + -1;

        if i13 > 0 goto label51;

        i17 = i12;

     label51:
        if i16 >= i28 goto label56;

        virtualinvoke r6.<android.text.MeasuredText: void setPos(int)>(i16);

        i29 = i16;

     label52:
        i28 = i29;

        goto label17;

     label53:
        z11 = 0;

        goto label49;

     label54:
        if i21 == i16 goto label55;

        i41 = i21;

        i37 = i27;

        i38 = i26;

        i39 = i25;

        i40 = i24;

        f6 = f5;

        goto label50;

     label55:
        i41 = i16 + 1;

        i37 = r5.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i38 = r5.<android.graphics.Paint$FontMetricsInt: int descent>;

        i39 = r5.<android.graphics.Paint$FontMetricsInt: int top>;

        i40 = r5.<android.graphics.Paint$FontMetricsInt: int bottom>;

        $i71 = i16 - i4;

        f6 = r13[$i71];

        goto label50;

     label56:
        i42 = r0.<android.text.StaticLayout: int mLineCount>;

        i44 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        i27 = 0;

        i26 = 0;

        i25 = 0;

        i24 = 0;

        f3 = 0.0F;

        i18 = 0;

        i22 = 0;

        i19 = 0;

        i23 = 0;

        if i42 < i44 goto label35;

        i27 = 0;

        i26 = 0;

        i25 = 0;

        i24 = 0;

        f3 = 0.0F;

        i18 = 0;

        i22 = 0;

        i19 = 0;

        i23 = 0;

        goto label52;

     label57:
        if i10 == i16 goto label60;

        $i61 = r0.<android.text.StaticLayout: int mLineCount>;

        $i60 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i61 >= $i60 goto label60;

        $i58 = i25 | i24;

        $i59 = i26 | $i58;

        $i57 = i27 | $i59;

        if $i57 != 0 goto label58;

        virtualinvoke r2.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r5);

        i25 = r5.<android.graphics.Paint$FontMetricsInt: int top>;

        i24 = r5.<android.graphics.Paint$FontMetricsInt: int bottom>;

        i27 = r5.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i26 = r5.<android.graphics.Paint$FontMetricsInt: int descent>;

     label58:
        if i10 == i1 goto label64;

        z8 = 1;

     label59:
        i3 = specialinvoke r0.<android.text.StaticLayout: int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean)>(r1, i16, i10, i27, i26, i25, i24, i3, f0, f1, r10, r7, r5, z7, z2, r11, i15, z5, i1, z0, z1, r12, r13, i4, r4, f2, f3, r2, z8);

     label60:
        if i10 != i1 goto label65;

     label61:
        if i1 == i0 goto label62;

        $i50 = i1 - 1;

        $c51 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i50);

        if $c51 != 10 goto label63;

     label62:
        $i55 = r0.<android.text.StaticLayout: int mLineCount>;

        $i54 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i55 >= $i54 goto label63;

        virtualinvoke r6.<android.text.MeasuredText: void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)>(r1, i0, i1, r3);

        virtualinvoke r2.<android.text.TextPaint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(r5);

        i6 = r5.<android.graphics.Paint$FontMetricsInt: int ascent>;

        i5 = r5.<android.graphics.Paint$FontMetricsInt: int descent>;

        i8 = r5.<android.graphics.Paint$FontMetricsInt: int top>;

        i7 = r5.<android.graphics.Paint$FontMetricsInt: int bottom>;

        r9 = r6.<android.text.MeasuredText: byte[] mLevels>;

        i9 = r6.<android.text.MeasuredText: int mDir>;

        z4 = r6.<android.text.MeasuredText: boolean mEasy>;

        specialinvoke r0.<android.text.StaticLayout: int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean)>(r1, i1, i1, i6, i5, i8, i7, i3, f0, f1, null, null, r5, 0, z2, r9, i9, z4, i1, z0, z1, null, null, i0, r4, f2, 0.0F, r2, 0);

     label63:
        return;

     label64:
        z8 = 0;

        goto label59;

     label65:
        i4 = i10;

        goto label04;
    }

    public int getBottomPadding()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mBottomPadding>;

        return $i0;
    }

    public int getEllipsisCount(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        if $i1 >= 5 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = r0.<android.text.StaticLayout: int mColumns>;

        $i3 = i0 * $i2;

        $i4 = 4 + $i3;

        $i5 = $r1[$i4];

        return $i5;
    }

    public int getEllipsisStart(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        if $i1 >= 5 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = r0.<android.text.StaticLayout: int mColumns>;

        $i3 = i0 * $i2;

        $i4 = 3 + $i3;

        $i5 = $r1[$i4];

        return $i5;
    }

    public int getEllipsizedWidth()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mEllipsizedWidth>;

        return $i0;
    }

    public boolean getLineContainsTab(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = i0 * $i1;

        $i3 = 0 + $i2;

        $i4 = $r1[$i3];

        $i5 = 536870912 & $i4;

        if $i5 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getLineCount()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mLineCount>;

        return $i0;
    }

    public int getLineDescent(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = r0.<android.text.StaticLayout: int mColumns>;

        $i3 = i0 * $i2;

        $i4 = 2 + $i3;

        i1 = $r1[$i4];

        $i5 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i5 <= 0 goto label1;

        $i6 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        $i7 = -1 + $i6;

        if i0 < $i7 goto label1;

        $i8 = r0.<android.text.StaticLayout: int mLineCount>;

        if i0 == $i8 goto label1;

        $i9 = virtualinvoke r0.<android.text.StaticLayout: int getBottomPadding()>();

        i1 = i1 + $i9;

     label1:
        return i1;
    }

    public final android.text.Layout$Directions getLineDirections(int)
    {
        android.text.StaticLayout r0;
        int i0;
        android.text.Layout$Directions[] $r1;
        android.text.Layout$Directions $r2;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: android.text.Layout$Directions[] mLineDirections>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int getLineForVertical(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        i1 = r0.<android.text.StaticLayout: int mLineCount>;

        i2 = -1;

        r1 = r0.<android.text.StaticLayout: int[] mLines>;

     label1:
        $i4 = i1 - i2;

        if $i4 <= 1 goto label3;

        $i5 = i1 + i2;

        i3 = $i5 >> 1;

        $i6 = r0.<android.text.StaticLayout: int mColumns>;

        $i7 = i3 * $i6;

        $i8 = 1 + $i7;

        $i9 = r1[$i8];

        if $i9 <= i0 goto label2;

        i1 = i3;

        goto label1;

     label2:
        i2 = i3;

        goto label1;

     label3:
        if i2 >= 0 goto label4;

        i2 = 0;

     label4:
        return i2;
    }

    public int getLineStart(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = i0 * $i1;

        $i3 = 0 + $i2;

        $i4 = $r1[$i3];

        $i5 = 536870911 & $i4;

        return $i5;
    }

    public int getLineTop(int)
    {
        android.text.StaticLayout r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i2 = r0.<android.text.StaticLayout: int mColumns>;

        $i3 = i0 * $i2;

        $i4 = 1 + $i3;

        i1 = $r1[$i4];

        $i5 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if $i5 <= 0 goto label1;

        $i6 = r0.<android.text.StaticLayout: int mMaximumVisibleLineCount>;

        if i0 < $i6 goto label1;

        $i7 = r0.<android.text.StaticLayout: int mLineCount>;

        if i0 == $i7 goto label1;

        $i8 = virtualinvoke r0.<android.text.StaticLayout: int getBottomPadding()>();

        i1 = i1 + $i8;

     label1:
        return i1;
    }

    public int getParagraphDirection(int)
    {
        android.text.StaticLayout r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;

        r0 := @this: android.text.StaticLayout;

        i0 := @parameter0: int;

        $r1 = r0.<android.text.StaticLayout: int[] mLines>;

        $i1 = r0.<android.text.StaticLayout: int mColumns>;

        $i2 = i0 * $i1;

        $i3 = 0 + $i2;

        $i4 = $r1[$i3];

        $i5 = $i4 >> 30;

        return $i5;
    }

    public int getTopPadding()
    {
        android.text.StaticLayout r0;
        int $i0;

        r0 := @this: android.text.StaticLayout;

        $i0 = r0.<android.text.StaticLayout: int mTopPadding>;

        return $i0;
    }

    void prepare()
    {
        android.text.StaticLayout r0;
        android.text.MeasuredText $r1;

        r0 := @this: android.text.StaticLayout;

        $r1 = staticinvoke <android.text.MeasuredText: android.text.MeasuredText obtain()>();

        r0.<android.text.StaticLayout: android.text.MeasuredText mMeasured> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <android.text.StaticLayout: int TOP> = 1;

        <android.text.StaticLayout: java.lang.String TAG> = "StaticLayout";

        <android.text.StaticLayout: int TAB_MASK> = 536870912;

        <android.text.StaticLayout: int TAB_INCREMENT> = 20;

        <android.text.StaticLayout: int TAB> = 0;

        <android.text.StaticLayout: int START_MASK> = 536870911;

        <android.text.StaticLayout: int START> = 0;

        <android.text.StaticLayout: double EXTRA_ROUNDING> = 0.5;

        <android.text.StaticLayout: int ELLIPSIS_START> = 3;

        <android.text.StaticLayout: int ELLIPSIS_COUNT> = 4;

        <android.text.StaticLayout: int DIR_SHIFT> = 30;

        <android.text.StaticLayout: int DIR> = 0;

        <android.text.StaticLayout: int DESCENT> = 2;

        <android.text.StaticLayout: int COLUMNS_NORMAL> = 3;

        <android.text.StaticLayout: int COLUMNS_ELLIPSIZE> = 5;

        <android.text.StaticLayout: char CHAR_ZWSP> = 8203;

        <android.text.StaticLayout: char CHAR_TAB> = 9;

        <android.text.StaticLayout: char CHAR_SPACE> = 32;

        <android.text.StaticLayout: char CHAR_SLASH> = 47;

        <android.text.StaticLayout: char CHAR_NEW_LINE> = 10;

        <android.text.StaticLayout: int CHAR_LAST_LOW_SURROGATE> = 57343;

        <android.text.StaticLayout: char CHAR_HYPHEN> = 45;

        <android.text.StaticLayout: int CHAR_FIRST_HIGH_SURROGATE> = 55296;

        <android.text.StaticLayout: char CHAR_FIRST_CJK> = 11904;

        return;
    }
}
