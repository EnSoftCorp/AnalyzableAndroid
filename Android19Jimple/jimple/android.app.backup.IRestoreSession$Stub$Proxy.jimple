class android.app.backup.IRestoreSession$Stub$Proxy extends java.lang.Object implements android.app.backup.IRestoreSession
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.backup.IRestoreSession$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.backup.IRestoreSession$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.backup.IRestoreSession$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.backup.IRestoreSession$Stub$Proxy;

        $r1 = r0.<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void endRestoreSession() throws android.os.RemoteException
    {
        android.app.backup.IRestoreSession$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.app.backup.IRestoreSession$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IRestoreSession");

        $r4 = r0.<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getAvailableRestoreSets(android.app.backup.IRestoreObserver) throws android.os.RemoteException
    {
        android.app.backup.IRestoreSession$Stub$Proxy r0;
        android.app.backup.IRestoreObserver r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;
        int i0;

        r0 := @this: android.app.backup.IRestoreSession$Stub$Proxy;

        r1 := @parameter0: android.app.backup.IRestoreObserver;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IRestoreSession");

     label2:
        if r1 == null goto label6;

     label3:
        r5 = interfaceinvoke r1.<android.app.backup.IRestoreObserver: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label6:
        r5 = null;

        goto label4;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.backup.IRestoreSession$Stub$Proxy r0;

        r0 := @this: android.app.backup.IRestoreSession$Stub$Proxy;

        return "android.app.backup.IRestoreSession";
    }

    public int restoreAll(long, android.app.backup.IRestoreObserver) throws android.os.RemoteException
    {
        android.app.backup.IRestoreSession$Stub$Proxy r0;
        long l0;
        android.app.backup.IRestoreObserver r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;
        int i1;

        r0 := @this: android.app.backup.IRestoreSession$Stub$Proxy;

        l0 := @parameter0: long;

        r1 := @parameter1: android.app.backup.IRestoreObserver;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IRestoreSession");

        virtualinvoke r2.<android.os.Parcel: void writeLong(long)>(l0);

     label2:
        if r1 == null goto label6;

     label3:
        r5 = interfaceinvoke r1.<android.app.backup.IRestoreObserver: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label6:
        r5 = null;

        goto label4;

     label7:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public int restorePackage(java.lang.String, android.app.backup.IRestoreObserver) throws android.os.RemoteException
    {
        android.app.backup.IRestoreSession$Stub$Proxy r0;
        java.lang.String r1;
        android.app.backup.IRestoreObserver r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder r6, $r7;
        int i0;

        r0 := @this: android.app.backup.IRestoreSession$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.app.backup.IRestoreObserver;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IRestoreSession");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if r2 == null goto label6;

     label3:
        r6 = interfaceinvoke r2.<android.app.backup.IRestoreObserver: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        $r7 = r0.<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i0;

     label6:
        r6 = null;

        goto label4;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public int restoreSome(long, android.app.backup.IRestoreObserver, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.backup.IRestoreSession$Stub$Proxy r0;
        long l0;
        android.app.backup.IRestoreObserver r1;
        java.lang.String[] r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder r6, $r7;
        int i1;

        r0 := @this: android.app.backup.IRestoreSession$Stub$Proxy;

        l0 := @parameter0: long;

        r1 := @parameter1: android.app.backup.IRestoreObserver;

        r2 := @parameter2: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IRestoreSession");

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l0);

     label2:
        if r1 == null goto label6;

     label3:
        r6 = interfaceinvoke r1.<android.app.backup.IRestoreObserver: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r6);

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

        $r7 = r0.<android.app.backup.IRestoreSession$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

     label5:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return i1;

     label6:
        r6 = null;

        goto label4;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }
}
