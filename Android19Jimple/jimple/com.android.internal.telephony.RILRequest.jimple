class com.android.internal.telephony.RILRequest extends java.lang.Object
{
    static final java.lang.String LOG_TAG;
    private static final int MAX_POOL_SIZE;
    static java.util.concurrent.atomic.AtomicInteger sNextSerial;
    private static com.android.internal.telephony.RILRequest sPool;
    private static int sPoolSize;
    private static java.lang.Object sPoolSync;
    static java.util.Random sRandom;
    com.android.internal.telephony.RILRequest mNext;
    android.os.Parcel mParcel;
    int mRequest;
    android.os.Message mResult;
    int mSerial;

    static void <clinit>()
    {
        java.util.Random $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        java.lang.Object $r2;

        <com.android.internal.telephony.RILRequest: int MAX_POOL_SIZE> = 4;

        <com.android.internal.telephony.RILRequest: java.lang.String LOG_TAG> = "RilRequest";

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <com.android.internal.telephony.RILRequest: java.util.Random sRandom> = $r0;

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        <com.android.internal.telephony.RILRequest: java.util.concurrent.atomic.AtomicInteger sNextSerial> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.android.internal.telephony.RILRequest: java.lang.Object sPoolSync> = $r2;

        <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool> = null;

        <com.android.internal.telephony.RILRequest: int sPoolSize> = 0;

        return;
    }

    private void <init>()
    {
        com.android.internal.telephony.RILRequest r0;

        r0 := @this: com.android.internal.telephony.RILRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static com.android.internal.telephony.RILRequest obtain(int, android.os.Message)
    {
        int i0, $i1, $i2, $i3, $i4;
        android.os.Message r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r13;
        com.android.internal.telephony.RILRequest r3, r4, $r11, $r12;
        java.util.concurrent.atomic.AtomicInteger $r5;
        android.os.Parcel $r6, $r7, $r8;
        android.os.Handler $r9;
        java.lang.NullPointerException $r10;

        i0 := @parameter0: int;

        r0 := @parameter1: android.os.Message;

        r1 = <com.android.internal.telephony.RILRequest: java.lang.Object sPoolSync>;

        entermonitor r1;

     label01:
        r3 = <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool>;

     label02:
        r4 = null;

        if r3 == null goto label04;

     label03:
        r4 = <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool>;

        $r11 = r4.<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest mNext>;

        <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool> = $r11;

        r4.<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest mNext> = null;

        $i4 = <com.android.internal.telephony.RILRequest: int sPoolSize>;

        $i3 = -1 + $i4;

        <com.android.internal.telephony.RILRequest: int sPoolSize> = $i3;

     label04:
        exitmonitor r1;

     label05:
        if r4 != null goto label06;

        $r12 = new com.android.internal.telephony.RILRequest;

        specialinvoke $r12.<com.android.internal.telephony.RILRequest: void <init>()>();

        r4 = $r12;

     label06:
        $r5 = <com.android.internal.telephony.RILRequest: java.util.concurrent.atomic.AtomicInteger sNextSerial>;

        $i1 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        r4.<com.android.internal.telephony.RILRequest: int mSerial> = $i1;

        r4.<com.android.internal.telephony.RILRequest: int mRequest> = i0;

        r4.<com.android.internal.telephony.RILRequest: android.os.Message mResult> = r0;

        $r6 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel> = $r6;

        if r0 == null goto label10;

        $r9 = virtualinvoke r0.<android.os.Message: android.os.Handler getTarget()>();

        if $r9 != null goto label10;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Message target must not be null");

        throw $r10;

     label07:
        $r13 := @caughtexception;

        r2 = $r13;

     label08:
        exitmonitor r1;

     label09:
        throw r2;

     label10:
        $r7 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r7.<android.os.Parcel: void writeInt(int)>(i0);

        $r8 = r4.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        $i2 = r4.<com.android.internal.telephony.RILRequest: int mSerial>;

        virtualinvoke $r8.<android.os.Parcel: void writeInt(int)>($i2);

        return r4;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    static void resetSerial()
    {
        java.util.Random $r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        $r1 = <com.android.internal.telephony.RILRequest: java.util.concurrent.atomic.AtomicInteger sNextSerial>;

        $r0 = <com.android.internal.telephony.RILRequest: java.util.Random sRandom>;

        $i0 = virtualinvoke $r0.<java.util.Random: int nextInt()>();

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i0);

        return;
    }

    void onError(int, java.lang.Object)
    {
        com.android.internal.telephony.RILRequest r0;
        int i0, $i1, $i2;
        java.lang.Object r1;
        com.android.internal.telephony.CommandException r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r14;
        java.lang.String $r4, $r7, $r12, $r13;
        android.os.Message $r15, $r19, $r20;
        android.os.Parcel $r16, $r17;

        r0 := @this: com.android.internal.telephony.RILRequest;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 = staticinvoke <com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException fromRilErrno(int)>(i0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<com.android.internal.telephony.RILRequest: java.lang.String serialString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("< ");

        $i1 = r0.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r7 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String requestToString(int)>($i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ret=");

        $i2 = r0.<com.android.internal.telephony.RILRequest: int mRequest>;

        $r12 = staticinvoke <com.android.internal.telephony.RIL: java.lang.String retToString(int,java.lang.Object)>($i2, r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("RilRequest", $r13);

        $r15 = r0.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        if $r15 == null goto label1;

        $r19 = r0.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        staticinvoke <android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>($r19, r1, r2);

        $r20 = r0.<com.android.internal.telephony.RILRequest: android.os.Message mResult>;

        virtualinvoke $r20.<android.os.Message: void sendToTarget()>();

     label1:
        $r17 = r0.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        if $r17 == null goto label2;

        $r16 = r0.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel>;

        virtualinvoke $r16.<android.os.Parcel: void recycle()>();

        r0.<com.android.internal.telephony.RILRequest: android.os.Parcel mParcel> = null;

     label2:
        return;
    }

    void release()
    {
        com.android.internal.telephony.RILRequest r0, $r3;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.telephony.RILRequest;

        r1 = <com.android.internal.telephony.RILRequest: java.lang.Object sPoolSync>;

        entermonitor r1;

     label1:
        $i0 = <com.android.internal.telephony.RILRequest: int sPoolSize>;

        if $i0 >= 4 goto label2;

        $r3 = <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool>;

        r0.<com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest mNext> = $r3;

        <com.android.internal.telephony.RILRequest: com.android.internal.telephony.RILRequest sPool> = r0;

        $i1 = <com.android.internal.telephony.RILRequest: int sPoolSize>;

        $i2 = 1 + $i1;

        <com.android.internal.telephony.RILRequest: int sPoolSize> = $i2;

        r0.<com.android.internal.telephony.RILRequest: android.os.Message mResult> = null;

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    java.lang.String serialString()
    {
        com.android.internal.telephony.RILRequest r0;
        java.lang.StringBuilder r1, $r3;
        java.lang.String r2, $r6;
        int i0, i1, $i2, $i6;
        long $l3, $l4, $l5;

        r0 := @this: com.android.internal.telephony.RILRequest;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(8);

        r1 = $r3;

        $i2 = r0.<com.android.internal.telephony.RILRequest: int mSerial>;

        $l3 = (long) $i2;

        $l4 = $l3 + 2147483648L;

        $l5 = $l4 % 10000L;

        r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        i0 = 0;

        i1 = virtualinvoke r2.<java.lang.String: int length()>();

     label1:
        $i6 = 4 - i1;

        if i0 >= $i6 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
