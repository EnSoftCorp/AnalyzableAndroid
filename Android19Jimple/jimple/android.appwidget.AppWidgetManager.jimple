public class android.appwidget.AppWidgetManager extends java.lang.Object
{
    public static final java.lang.String ACTION_APPWIDGET_BIND;
    public static final java.lang.String ACTION_APPWIDGET_CONFIGURE;
    public static final java.lang.String ACTION_APPWIDGET_DELETED;
    public static final java.lang.String ACTION_APPWIDGET_DISABLED;
    public static final java.lang.String ACTION_APPWIDGET_ENABLED;
    public static final java.lang.String ACTION_APPWIDGET_OPTIONS_CHANGED;
    public static final java.lang.String ACTION_APPWIDGET_PICK;
    public static final java.lang.String ACTION_APPWIDGET_UPDATE;
    public static final java.lang.String ACTION_KEYGUARD_APPWIDGET_PICK;
    public static final java.lang.String EXTRA_APPWIDGET_ID;
    public static final java.lang.String EXTRA_APPWIDGET_IDS;
    public static final java.lang.String EXTRA_APPWIDGET_OPTIONS;
    public static final java.lang.String EXTRA_APPWIDGET_PROVIDER;
    public static final java.lang.String EXTRA_CATEGORY_FILTER;
    public static final java.lang.String EXTRA_CUSTOM_EXTRAS;
    public static final java.lang.String EXTRA_CUSTOM_INFO;
    public static final java.lang.String EXTRA_CUSTOM_SORT;
    public static final int INVALID_APPWIDGET_ID;
    public static final java.lang.String META_DATA_APPWIDGET_PROVIDER;
    public static final java.lang.String OPTION_APPWIDGET_HOST_CATEGORY;
    public static final java.lang.String OPTION_APPWIDGET_MAX_HEIGHT;
    public static final java.lang.String OPTION_APPWIDGET_MAX_WIDTH;
    public static final java.lang.String OPTION_APPWIDGET_MIN_HEIGHT;
    public static final java.lang.String OPTION_APPWIDGET_MIN_WIDTH;
    static final java.lang.String TAG;
    static java.util.WeakHashMap sManagerCache;
    static com.android.internal.appwidget.IAppWidgetService sService;
    android.content.Context mContext;
    private android.util.DisplayMetrics mDisplayMetrics;

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;

        <android.appwidget.AppWidgetManager: java.lang.String TAG> = "AppWidgetManager";

        <android.appwidget.AppWidgetManager: java.lang.String OPTION_APPWIDGET_MIN_WIDTH> = "appWidgetMinWidth";

        <android.appwidget.AppWidgetManager: java.lang.String OPTION_APPWIDGET_MIN_HEIGHT> = "appWidgetMinHeight";

        <android.appwidget.AppWidgetManager: java.lang.String OPTION_APPWIDGET_MAX_WIDTH> = "appWidgetMaxWidth";

        <android.appwidget.AppWidgetManager: java.lang.String OPTION_APPWIDGET_MAX_HEIGHT> = "appWidgetMaxHeight";

        <android.appwidget.AppWidgetManager: java.lang.String OPTION_APPWIDGET_HOST_CATEGORY> = "appWidgetCategory";

        <android.appwidget.AppWidgetManager: java.lang.String META_DATA_APPWIDGET_PROVIDER> = "android.appwidget.provider";

        <android.appwidget.AppWidgetManager: int INVALID_APPWIDGET_ID> = 0;

        <android.appwidget.AppWidgetManager: java.lang.String EXTRA_CUSTOM_SORT> = "customSort";

        <android.appwidget.AppWidgetManager: java.lang.String EXTRA_CUSTOM_INFO> = "customInfo";

        <android.appwidget.AppWidgetManager: java.lang.String EXTRA_CUSTOM_EXTRAS> = "customExtras";

        <android.appwidget.AppWidgetManager: java.lang.String EXTRA_CATEGORY_FILTER> = "categoryFilter";

        <android.appwidget.AppWidgetManager: java.lang.String EXTRA_APPWIDGET_PROVIDER> = "appWidgetProvider";

        <android.appwidget.AppWidgetManager: java.lang.String EXTRA_APPWIDGET_OPTIONS> = "appWidgetOptions";

        <android.appwidget.AppWidgetManager: java.lang.String EXTRA_APPWIDGET_IDS> = "appWidgetIds";

        <android.appwidget.AppWidgetManager: java.lang.String EXTRA_APPWIDGET_ID> = "appWidgetId";

        <android.appwidget.AppWidgetManager: java.lang.String ACTION_KEYGUARD_APPWIDGET_PICK> = "android.appwidget.action.KEYGUARD_APPWIDGET_PICK";

        <android.appwidget.AppWidgetManager: java.lang.String ACTION_APPWIDGET_UPDATE> = "android.appwidget.action.APPWIDGET_UPDATE";

        <android.appwidget.AppWidgetManager: java.lang.String ACTION_APPWIDGET_PICK> = "android.appwidget.action.APPWIDGET_PICK";

        <android.appwidget.AppWidgetManager: java.lang.String ACTION_APPWIDGET_OPTIONS_CHANGED> = "android.appwidget.action.APPWIDGET_UPDATE_OPTIONS";

        <android.appwidget.AppWidgetManager: java.lang.String ACTION_APPWIDGET_ENABLED> = "android.appwidget.action.APPWIDGET_ENABLED";

        <android.appwidget.AppWidgetManager: java.lang.String ACTION_APPWIDGET_DISABLED> = "android.appwidget.action.APPWIDGET_DISABLED";

        <android.appwidget.AppWidgetManager: java.lang.String ACTION_APPWIDGET_DELETED> = "android.appwidget.action.APPWIDGET_DELETED";

        <android.appwidget.AppWidgetManager: java.lang.String ACTION_APPWIDGET_CONFIGURE> = "android.appwidget.action.APPWIDGET_CONFIGURE";

        <android.appwidget.AppWidgetManager: java.lang.String ACTION_APPWIDGET_BIND> = "android.appwidget.action.APPWIDGET_BIND";

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <android.appwidget.AppWidgetManager: java.util.WeakHashMap sManagerCache> = $r0;

        return;
    }

    private void <init>(android.content.Context)
    {
        android.appwidget.AppWidgetManager r0;
        android.content.Context r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;

        r0 := @this: android.appwidget.AppWidgetManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.appwidget.AppWidgetManager: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r0.<android.appwidget.AppWidgetManager: android.util.DisplayMetrics mDisplayMetrics> = $r3;

        return;
    }

    public static android.appwidget.AppWidgetManager getInstance(android.content.Context)
    {
        android.content.Context r0;
        java.util.WeakHashMap r1, $r6, $r10;
        java.lang.Throwable r2, $r14;
        java.lang.ref.WeakReference r3, $r9;
        android.appwidget.AppWidgetManager r4, $r8;
        com.android.internal.appwidget.IAppWidgetService $r5, $r15;
        java.lang.Object $r7, $r12;
        android.os.IBinder $r13;

        r0 := @parameter0: android.content.Context;

        r1 = <android.appwidget.AppWidgetManager: java.util.WeakHashMap sManagerCache>;

        entermonitor r1;

     label01:
        $r5 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        if $r5 != null goto label02;

        $r13 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("appwidget");

        $r15 = staticinvoke <com.android.internal.appwidget.IAppWidgetService$Stub: com.android.internal.appwidget.IAppWidgetService asInterface(android.os.IBinder)>($r13);

        <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService> = $r15;

     label02:
        $r6 = <android.appwidget.AppWidgetManager: java.util.WeakHashMap sManagerCache>;

        $r7 = virtualinvoke $r6.<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.ref.WeakReference) $r7;

     label03:
        r4 = null;

        if r3 == null goto label05;

     label04:
        $r12 = virtualinvoke r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r4 = (android.appwidget.AppWidgetManager) $r12;

     label05:
        if r4 != null goto label07;

     label06:
        $r8 = new android.appwidget.AppWidgetManager;

        specialinvoke $r8.<android.appwidget.AppWidgetManager: void <init>(android.content.Context)>(r0);

        r4 = $r8;

        $r10 = <android.appwidget.AppWidgetManager: java.util.WeakHashMap sManagerCache>;

        $r9 = new java.lang.ref.WeakReference;

        specialinvoke $r9.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r4);

        virtualinvoke $r10.<java.util.WeakHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r9);

     label07:
        exitmonitor r1;

     label08:
        return r4;

     label09:
        $r14 := @caughtexception;

        r2 = $r14;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void bindAppWidgetId(int, android.content.ComponentName)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1;
        android.content.ComponentName r1;
        android.os.RemoteException r2, $r5;
        android.content.Context $r3;
        com.android.internal.appwidget.IAppWidgetService $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ComponentName;

     label1:
        $r4 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r3 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle,int)>(i0, r1, null, $i1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void bindAppWidgetId(int, android.content.ComponentName, android.os.Bundle)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1;
        android.content.ComponentName r1;
        android.os.Bundle r2;
        android.os.RemoteException r3, $r6;
        android.content.Context $r4;
        com.android.internal.appwidget.IAppWidgetService $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: android.os.Bundle;

     label1:
        $r5 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r4 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle,int)>(i0, r1, r2, $i1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r3);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean bindAppWidgetIdIfAllowed(int, android.content.ComponentName)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1;
        android.content.ComponentName r1;
        android.os.RemoteException r2, $r8;
        boolean z0;
        android.content.Context $r3, $r4, $r7;
        com.android.internal.appwidget.IAppWidgetService $r5;
        java.lang.String $r6;
        java.lang.RuntimeException $r9;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ComponentName;

        $r3 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        if $r3 != null goto label1;

        return 0;

     label1:
        $r5 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r4 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $r6 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        $r7 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r7.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName,android.os.Bundle,int)>($r6, i0, r1, null, $i1);

     label2:
        return z0;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean bindAppWidgetIdIfAllowed(int, android.content.ComponentName, android.os.Bundle)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1;
        android.content.ComponentName r1;
        android.os.Bundle r2;
        android.os.RemoteException r3, $r9;
        boolean z0;
        android.content.Context $r4, $r5, $r8;
        com.android.internal.appwidget.IAppWidgetService $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r10;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.ComponentName;

        r2 := @parameter2: android.os.Bundle;

        $r4 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        if $r4 != null goto label1;

        return 0;

     label1:
        $r6 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r5 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $r7 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        $r8 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r8.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r6.<com.android.internal.appwidget.IAppWidgetService: boolean bindAppWidgetIdIfAllowed(java.lang.String,int,android.content.ComponentName,android.os.Bundle,int)>($r7, i0, r1, r2, $i1);

     label2:
        return z0;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r3);

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void bindRemoteViewsService(int, android.content.Intent, android.os.IBinder, android.os.UserHandle)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1;
        android.content.Intent r1;
        android.os.IBinder r2;
        android.os.UserHandle r3;
        android.os.RemoteException r4, $r6;
        com.android.internal.appwidget.IAppWidgetService $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: android.os.IBinder;

        r3 := @parameter3: android.os.UserHandle;

     label1:
        $r5 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $i1 = virtualinvoke r3.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: void bindRemoteViewsService(int,android.content.Intent,android.os.IBinder,int)>(i0, r1, r2, $i1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r4);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getAppWidgetIds(android.content.ComponentName)
    {
        android.appwidget.AppWidgetManager r0;
        android.content.ComponentName r1;
        android.os.RemoteException r2, $r6;
        int[] r3;
        android.content.Context $r4;
        com.android.internal.appwidget.IAppWidgetService $r5;
        int $i0;
        java.lang.RuntimeException $r7;

        r0 := @this: android.appwidget.AppWidgetManager;

        r1 := @parameter0: android.content.ComponentName;

     label1:
        $r5 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r4 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        r3 = interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: int[] getAppWidgetIds(android.content.ComponentName,int)>(r1, $i0);

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r2);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.os.RemoteException r1, $r10;
        android.appwidget.AppWidgetProviderInfo r2;
        android.content.Context $r3;
        com.android.internal.appwidget.IAppWidgetService $r4;
        android.util.DisplayMetrics $r5, $r6, $r7, $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

     label1:
        $r4 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r3 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        r2 = interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int,int)>(i0, $i1);

     label2:
        if r2 == null goto label4;

     label3:
        $i2 = r2.<android.appwidget.AppWidgetProviderInfo: int minWidth>;

        $r5 = r0.<android.appwidget.AppWidgetManager: android.util.DisplayMetrics mDisplayMetrics>;

        $i3 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i2, $r5);

        r2.<android.appwidget.AppWidgetProviderInfo: int minWidth> = $i3;

        $i4 = r2.<android.appwidget.AppWidgetProviderInfo: int minHeight>;

        $r6 = r0.<android.appwidget.AppWidgetManager: android.util.DisplayMetrics mDisplayMetrics>;

        $i5 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i4, $r6);

        r2.<android.appwidget.AppWidgetProviderInfo: int minHeight> = $i5;

        $i6 = r2.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth>;

        $r7 = r0.<android.appwidget.AppWidgetManager: android.util.DisplayMetrics mDisplayMetrics>;

        $i7 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i6, $r7);

        r2.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth> = $i7;

        $i9 = r2.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight>;

        $r8 = r0.<android.appwidget.AppWidgetManager: android.util.DisplayMetrics mDisplayMetrics>;

        $i8 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i9, $r8);

        r2.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight> = $i8;

     label4:
        return r2;

     label5:
        $r10 := @caughtexception;

        r1 = $r10;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.os.Bundle getAppWidgetOptions(int)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1;
        android.os.RemoteException r1, $r5;
        android.os.Bundle r2;
        android.content.Context $r3;
        com.android.internal.appwidget.IAppWidgetService $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

     label1:
        $r4 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r3 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        r2 = interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: android.os.Bundle getAppWidgetOptions(int,int)>(i0, $i1);

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getInstalledProviders()
    {
        android.appwidget.AppWidgetManager r0;
        java.util.List $r1;

        r0 := @this: android.appwidget.AppWidgetManager;

        $r1 = virtualinvoke r0.<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders(int)>(1);

        return $r1;
    }

    public java.util.List getInstalledProviders(int)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.os.RemoteException r1, $r12;
        java.util.List r2;
        java.util.Iterator r3;
        android.appwidget.AppWidgetProviderInfo r4;
        android.content.Context $r5;
        com.android.internal.appwidget.IAppWidgetService $r6;
        boolean $z0;
        java.lang.Object $r7;
        android.util.DisplayMetrics $r8, $r9, $r10, $r11;
        java.lang.RuntimeException $r13;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

     label1:
        $r6 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r5 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r5.<android.content.Context: int getUserId()>();

        r2 = interfaceinvoke $r6.<com.android.internal.appwidget.IAppWidgetService: java.util.List getInstalledProviders(int,int)>(i0, $i1);

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.appwidget.AppWidgetProviderInfo) $r7;

        $i2 = r4.<android.appwidget.AppWidgetProviderInfo: int minWidth>;

        $r8 = r0.<android.appwidget.AppWidgetManager: android.util.DisplayMetrics mDisplayMetrics>;

        $i3 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i2, $r8);

        r4.<android.appwidget.AppWidgetProviderInfo: int minWidth> = $i3;

        $i4 = r4.<android.appwidget.AppWidgetProviderInfo: int minHeight>;

        $r9 = r0.<android.appwidget.AppWidgetManager: android.util.DisplayMetrics mDisplayMetrics>;

        $i5 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i4, $r9);

        r4.<android.appwidget.AppWidgetProviderInfo: int minHeight> = $i5;

        $i7 = r4.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth>;

        $r10 = r0.<android.appwidget.AppWidgetManager: android.util.DisplayMetrics mDisplayMetrics>;

        $i6 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i7, $r10);

        r4.<android.appwidget.AppWidgetProviderInfo: int minResizeWidth> = $i6;

        $i8 = r4.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight>;

        $r11 = r0.<android.appwidget.AppWidgetManager: android.util.DisplayMetrics mDisplayMetrics>;

        $i9 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i8, $r11);

        r4.<android.appwidget.AppWidgetProviderInfo: int minResizeHeight> = $i9;

     label3:
        goto label2;

     label4:
        $r12 := @caughtexception;

        r1 = $r12;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r1);

        throw $r13;

     label5:
        return r2;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public boolean hasBindAppWidgetPermission(java.lang.String)
    {
        android.appwidget.AppWidgetManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r5;
        boolean z0;
        android.content.Context $r3;
        com.android.internal.appwidget.IAppWidgetService $r4;
        int $i0;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r3 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        z0 = interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: boolean hasBindAppWidgetPermission(java.lang.String,int)>(r1, $i0);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void notifyAppWidgetViewDataChanged(int, int)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, i1;
        int[] $r1;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = newarray (int)[1];

        $r1[0] = i0;

        virtualinvoke r0.<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>($r1, i1);

        return;
    }

    public void notifyAppWidgetViewDataChanged(int[], int)
    {
        android.appwidget.AppWidgetManager r0;
        int[] r1;
        int i0, $i1;
        android.os.RemoteException r2, $r5;
        android.content.Context $r3;
        com.android.internal.appwidget.IAppWidgetService $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetManager;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

     label1:
        $r4 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r3 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: void notifyAppWidgetViewDataChanged(int[],int,int)>(r1, i0, $i1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void partiallyUpdateAppWidget(int, android.widget.RemoteViews)
    {
        android.appwidget.AppWidgetManager r0;
        int i0;
        android.widget.RemoteViews r1;
        int[] $r2;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.RemoteViews;

        $r2 = newarray (int)[1];

        $r2[0] = i0;

        virtualinvoke r0.<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int[],android.widget.RemoteViews)>($r2, r1);

        return;
    }

    public void partiallyUpdateAppWidget(int[], android.widget.RemoteViews)
    {
        android.appwidget.AppWidgetManager r0;
        int[] r1;
        android.widget.RemoteViews r2;
        android.os.RemoteException r3, $r6;
        android.content.Context $r4;
        com.android.internal.appwidget.IAppWidgetService $r5;
        int $i0;
        java.lang.RuntimeException $r7;

        r0 := @this: android.appwidget.AppWidgetManager;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.widget.RemoteViews;

     label1:
        $r5 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r4 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: void partiallyUpdateAppWidgetIds(int[],android.widget.RemoteViews,int)>(r1, r2, $i0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r3);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setBindAppWidgetPermission(java.lang.String, boolean)
    {
        android.appwidget.AppWidgetManager r0;
        java.lang.String r1;
        boolean z0;
        android.os.RemoteException r2, $r5;
        android.content.Context $r3;
        com.android.internal.appwidget.IAppWidgetService $r4;
        int $i0;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

     label1:
        $r4 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r3 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: void setBindAppWidgetPermission(java.lang.String,boolean,int)>(r1, z0, $i0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void unbindRemoteViewsService(int, android.content.Intent, android.os.UserHandle)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1;
        android.content.Intent r1;
        android.os.UserHandle r2;
        android.os.RemoteException r3, $r5;
        com.android.internal.appwidget.IAppWidgetService $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: android.os.UserHandle;

     label1:
        $r4 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $i1 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: void unbindRemoteViewsService(int,android.content.Intent,int)>(i0, r1, $i1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r3);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateAppWidget(int, android.widget.RemoteViews)
    {
        android.appwidget.AppWidgetManager r0;
        int i0;
        android.widget.RemoteViews r1;
        int[] $r2;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.widget.RemoteViews;

        $r2 = newarray (int)[1];

        $r2[0] = i0;

        virtualinvoke r0.<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>($r2, r1);

        return;
    }

    public void updateAppWidget(android.content.ComponentName, android.widget.RemoteViews)
    {
        android.appwidget.AppWidgetManager r0;
        android.content.ComponentName r1;
        android.widget.RemoteViews r2;
        android.os.RemoteException r3, $r6;
        android.content.Context $r4;
        com.android.internal.appwidget.IAppWidgetService $r5;
        int $i0;
        java.lang.RuntimeException $r7;

        r0 := @this: android.appwidget.AppWidgetManager;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.widget.RemoteViews;

     label1:
        $r5 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r4 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews,int)>(r1, r2, $i0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r3);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateAppWidget(int[], android.widget.RemoteViews)
    {
        android.appwidget.AppWidgetManager r0;
        int[] r1;
        android.widget.RemoteViews r2;
        android.os.RemoteException r3, $r6;
        android.content.Context $r4;
        com.android.internal.appwidget.IAppWidgetService $r5;
        int $i0;
        java.lang.RuntimeException $r7;

        r0 := @this: android.appwidget.AppWidgetManager;

        r1 := @parameter0: int[];

        r2 := @parameter1: android.widget.RemoteViews;

     label1:
        $r5 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r4 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i0 = virtualinvoke $r4.<android.content.Context: int getUserId()>();

        interfaceinvoke $r5.<com.android.internal.appwidget.IAppWidgetService: void updateAppWidgetIds(int[],android.widget.RemoteViews,int)>(r1, r2, $i0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r3);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void updateAppWidgetOptions(int, android.os.Bundle)
    {
        android.appwidget.AppWidgetManager r0;
        int i0, $i1;
        android.os.Bundle r1;
        android.os.RemoteException r2, $r5;
        android.content.Context $r3;
        com.android.internal.appwidget.IAppWidgetService $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.appwidget.AppWidgetManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

     label1:
        $r4 = <android.appwidget.AppWidgetManager: com.android.internal.appwidget.IAppWidgetService sService>;

        $r3 = r0.<android.appwidget.AppWidgetManager: android.content.Context mContext>;

        $i1 = virtualinvoke $r3.<android.content.Context: int getUserId()>();

        interfaceinvoke $r4.<com.android.internal.appwidget.IAppWidgetService: void updateAppWidgetOptions(int,android.os.Bundle,int)>(i0, r1, $i1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("system server dead?", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
