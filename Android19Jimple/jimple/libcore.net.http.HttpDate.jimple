public final class libcore.net.http.HttpDate extends java.lang.Object
{
    private static final java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMATS;
    private static final java.lang.ThreadLocal STANDARD_DATE_FORMAT;

    static void <clinit>()
    {
        libcore.net.http.HttpDate$1 $r0;
        java.lang.String[] $r1;

        $r0 = new libcore.net.http.HttpDate$1;

        specialinvoke $r0.<libcore.net.http.HttpDate$1: void <init>()>();

        <libcore.net.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT> = $r0;

        $r1 = newarray (java.lang.String)[14];

        $r1[0] = "EEEE, dd-MMM-yy HH:mm:ss zzz";

        $r1[1] = "EEE MMM d HH:mm:ss yyyy";

        $r1[2] = "EEE, dd-MMM-yyyy HH:mm:ss z";

        $r1[3] = "EEE, dd-MMM-yyyy HH-mm-ss z";

        $r1[4] = "EEE, dd MMM yy HH:mm:ss z";

        $r1[5] = "EEE dd-MMM-yyyy HH:mm:ss z";

        $r1[6] = "EEE dd MMM yyyy HH:mm:ss z";

        $r1[7] = "EEE dd-MMM-yyyy HH-mm-ss z";

        $r1[8] = "EEE dd-MMM-yy HH:mm:ss z";

        $r1[9] = "EEE dd MMM yy HH:mm:ss z";

        $r1[10] = "EEE,dd-MMM-yy HH:mm:ss z";

        $r1[11] = "EEE,dd-MMM-yyyy HH:mm:ss z";

        $r1[12] = "EEE, dd-MM-yyyy HH:mm:ss z";

        $r1[13] = "EEE MMM d yyyy HH:mm:ss z";

        <libcore.net.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMATS> = $r1;

        return;
    }

    public void <init>()
    {
        libcore.net.http.HttpDate r0;

        r0 := @this: libcore.net.http.HttpDate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String format(java.util.Date)
    {
        java.util.Date r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        java.text.DateFormat $r3;
        java.lang.String $r4;

        r0 := @parameter0: java.util.Date;

        $r1 = <libcore.net.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.text.DateFormat) $r2;

        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r0);

        return $r4;
    }

    public static java.util.Date parse(java.lang.String)
    {
        java.lang.String r0, r3;
        java.lang.String[] r2;
        int i0, i1;
        java.util.Date r5, r6;
        java.lang.ThreadLocal $r7;
        java.lang.Object $r8;
        java.text.DateFormat $r9;
        java.text.ParseException $r10, $r13;
        java.text.SimpleDateFormat $r11;
        java.util.Locale $r12;

        r0 := @parameter0: java.lang.String;

     label1:
        $r7 = <libcore.net.http.HttpDate: java.lang.ThreadLocal STANDARD_DATE_FORMAT>;

        $r8 = virtualinvoke $r7.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r9 = (java.text.DateFormat) $r8;

        r6 = virtualinvoke $r9.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r0);

     label2:
        return r6;

     label3:
        $r13 := @caughtexception;

        r2 = <libcore.net.http.HttpDate: java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMATS>;

        i0 = lengthof r2;

        i1 = 0;

     label4:
        if i1 >= i0 goto label8;

        r3 = r2[i1];

     label5:
        $r11 = new java.text.SimpleDateFormat;

        $r12 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r11.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r3, $r12);

        r5 = virtualinvoke $r11.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r0);

     label6:
        return r5;

     label7:
        $r10 := @caughtexception;

        i1 = i1 + 1;

        goto label4;

     label8:
        return null;

        catch java.text.ParseException from label1 to label2 with label3;
        catch java.text.ParseException from label5 to label6 with label7;
    }
}
