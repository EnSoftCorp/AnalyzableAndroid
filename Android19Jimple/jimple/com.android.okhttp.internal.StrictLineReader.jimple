public class com.android.okhttp.internal.StrictLineReader extends java.lang.Object implements java.io.Closeable
{
    private static final byte CR;
    private static final byte LF;
    private byte[] buf;
    private final java.nio.charset.Charset charset;
    private int end;
    private final java.io.InputStream in;
    private int pos;

    public void <init>(java.io.InputStream, int, java.nio.charset.Charset)
    {
        com.android.okhttp.internal.StrictLineReader r0;
        java.io.InputStream r1;
        int i0;
        java.nio.charset.Charset r2, $r4;
        java.lang.NullPointerException $r3;
        boolean $z0;
        byte[] $r5;
        java.lang.IllegalArgumentException $r6, $r7;

        r0 := @this: com.android.okhttp.internal.StrictLineReader;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r2 := @parameter2: java.nio.charset.Charset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label2:
        if i0 >= 0 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("capacity <= 0");

        throw $r7;

     label3:
        $r4 = <com.android.okhttp.internal.Util: java.nio.charset.Charset US_ASCII>;

        $z0 = virtualinvoke r2.<java.nio.charset.Charset: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label4;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unsupported encoding");

        throw $r6;

     label4:
        r0.<com.android.okhttp.internal.StrictLineReader: java.io.InputStream in> = r1;

        r0.<com.android.okhttp.internal.StrictLineReader: java.nio.charset.Charset charset> = r2;

        $r5 = newarray (byte)[i0];

        r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf> = $r5;

        return;
    }

    public void <init>(java.io.InputStream, java.nio.charset.Charset)
    {
        com.android.okhttp.internal.StrictLineReader r0;
        java.io.InputStream r1;
        java.nio.charset.Charset r2;

        r0 := @this: com.android.okhttp.internal.StrictLineReader;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.nio.charset.Charset;

        specialinvoke r0.<com.android.okhttp.internal.StrictLineReader: void <init>(java.io.InputStream,int,java.nio.charset.Charset)>(r1, 8192, r2);

        return;
    }

    static java.nio.charset.Charset access$000(com.android.okhttp.internal.StrictLineReader)
    {
        com.android.okhttp.internal.StrictLineReader r0;
        java.nio.charset.Charset $r1;

        r0 := @parameter0: com.android.okhttp.internal.StrictLineReader;

        $r1 = r0.<com.android.okhttp.internal.StrictLineReader: java.nio.charset.Charset charset>;

        return $r1;
    }

    private void fillBuf() throws java.io.IOException
    {
        com.android.okhttp.internal.StrictLineReader r0;
        int i0, $i1;
        byte[] $r1, $r2;
        java.io.InputStream $r3;
        java.io.EOFException $r4;

        r0 := @this: com.android.okhttp.internal.StrictLineReader;

        $r3 = r0.<com.android.okhttp.internal.StrictLineReader: java.io.InputStream in>;

        $r2 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        $r1 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        $i1 = lengthof $r1;

        i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, $i1);

        if i0 != -1 goto label1;

        $r4 = new java.io.EOFException;

        specialinvoke $r4.<java.io.EOFException: void <init>()>();

        throw $r4;

     label1:
        r0.<com.android.okhttp.internal.StrictLineReader: int pos> = 0;

        r0.<com.android.okhttp.internal.StrictLineReader: int end> = i0;

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.StrictLineReader r0;
        java.io.InputStream r1, $r4;
        java.lang.Throwable r2, $r5;
        byte[] $r3;

        r0 := @this: com.android.okhttp.internal.StrictLineReader;

        r1 = r0.<com.android.okhttp.internal.StrictLineReader: java.io.InputStream in>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        if $r3 == null goto label2;

        r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf> = null;

        $r4 = r0.<com.android.okhttp.internal.StrictLineReader: java.io.InputStream in>;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public int readInt() throws java.io.IOException
    {
        com.android.okhttp.internal.StrictLineReader r0;
        java.lang.String r1, $r9;
        int i0;
        java.lang.NumberFormatException $r3;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: com.android.okhttp.internal.StrictLineReader;

        r1 = virtualinvoke r0.<com.android.okhttp.internal.StrictLineReader: java.lang.String readLine()>();

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected an int but was \"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r4;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.String readLine() throws java.io.IOException
    {
        com.android.okhttp.internal.StrictLineReader r0;
        java.io.InputStream r1;
        java.lang.Throwable r2, $r16;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27;
        com.android.okhttp.internal.StrictLineReader$1 r3, $r7;
        java.lang.String r4, r5, $r12, $r15;
        byte[] $r6, $r8, $r9, $r10, $r11, $r14, $r18;
        byte $b16, $b22, $b28;
        java.nio.charset.Charset $r13;
        java.io.IOException $r17;

        r0 := @this: com.android.okhttp.internal.StrictLineReader;

        r1 = r0.<com.android.okhttp.internal.StrictLineReader: java.io.InputStream in>;

        entermonitor r1;

     label01:
        $r6 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        if $r6 != null goto label05;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("LineReader is closed");

        throw $r17;

     label02:
        $r16 := @caughtexception;

        r2 = $r16;

     label03:
        exitmonitor r1;

     label04:
        throw r2;

     label05:
        $i4 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        $i3 = r0.<com.android.okhttp.internal.StrictLineReader: int end>;

        if $i4 < $i3 goto label06;

        specialinvoke r0.<com.android.okhttp.internal.StrictLineReader: void fillBuf()>();

     label06:
        i0 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

     label07:
        $i5 = r0.<com.android.okhttp.internal.StrictLineReader: int end>;

        if i0 == $i5 goto label11;

        $r11 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        $b22 = $r11[i0];

        if $b22 != 10 goto label18;

        $i23 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        if i0 == $i23 goto label17;

        $r18 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        $i26 = i0 - 1;

        $b28 = $r18[$i26];

        if $b28 != 13 goto label17;

     label08:
        i2 = i0 - 1;

     label09:
        $r12 = new java.lang.String;

        $r14 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        $i24 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        $i21 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        $i25 = i2 - $i21;

        $r13 = r0.<com.android.okhttp.internal.StrictLineReader: java.nio.charset.Charset charset>;

        $r15 = virtualinvoke $r13.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r12.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r14, $i24, $i25, $r15);

        r5 = $r12;

        $i27 = i0 + 1;

        r0.<com.android.okhttp.internal.StrictLineReader: int pos> = $i27;

        exitmonitor r1;

     label10:
        return r5;

     label11:
        $r7 = new com.android.okhttp.internal.StrictLineReader$1;

        $i8 = r0.<com.android.okhttp.internal.StrictLineReader: int end>;

        $i6 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        $i7 = $i8 - $i6;

        $i10 = 80 + $i7;

        specialinvoke $r7.<com.android.okhttp.internal.StrictLineReader$1: void <init>(com.android.okhttp.internal.StrictLineReader,int)>(r0, $i10);

        r3 = $r7;

     label12:
        $r8 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        $i13 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        $i12 = r0.<com.android.okhttp.internal.StrictLineReader: int end>;

        $i9 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        $i11 = $i12 - $i9;

        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r8, $i13, $i11);

        r0.<com.android.okhttp.internal.StrictLineReader: int end> = -1;

        specialinvoke r0.<com.android.okhttp.internal.StrictLineReader: void fillBuf()>();

        i1 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

     label13:
        $i14 = r0.<com.android.okhttp.internal.StrictLineReader: int end>;

        if i1 == $i14 goto label12;

        $r9 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        $b16 = $r9[i1];

        if $b16 != 10 goto label16;

        $i15 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        if i1 == $i15 goto label14;

        $r10 = r0.<com.android.okhttp.internal.StrictLineReader: byte[] buf>;

        $i20 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        $i18 = r0.<com.android.okhttp.internal.StrictLineReader: int pos>;

        $i19 = i1 - $i18;

        virtualinvoke r3.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r10, $i20, $i19);

     label14:
        $i17 = i1 + 1;

        r0.<com.android.okhttp.internal.StrictLineReader: int pos> = $i17;

        r4 = virtualinvoke r3.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        exitmonitor r1;

     label15:
        return r4;

     label16:
        i1 = i1 + 1;

        goto label13;

     label17:
        i2 = i0;

        goto label09;

     label18:
        i0 = i0 + 1;

        goto label07;

        catch java.lang.Throwable from label01 to label02 with label02;
        catch java.lang.Throwable from label03 to label04 with label02;
        catch java.lang.Throwable from label05 to label06 with label02;
        catch java.lang.Throwable from label06 to label07 with label02;
        catch java.lang.Throwable from label07 to label08 with label02;
        catch java.lang.Throwable from label09 to label10 with label02;
        catch java.lang.Throwable from label11 to label12 with label02;
        catch java.lang.Throwable from label12 to label13 with label02;
        catch java.lang.Throwable from label13 to label14 with label02;
        catch java.lang.Throwable from label14 to label15 with label02;
    }

    public static void <clinit>()
    {
        <com.android.okhttp.internal.StrictLineReader: byte LF> = 10;

        <com.android.okhttp.internal.StrictLineReader: byte CR> = 13;

        return;
    }
}
