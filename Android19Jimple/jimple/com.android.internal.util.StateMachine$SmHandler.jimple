class com.android.internal.util.StateMachine$SmHandler extends android.os.Handler
{
    private static final java.lang.Object mSmHandlerObj;
    private boolean mDbg;
    private java.util.ArrayList mDeferredMessages;
    private com.android.internal.util.State mDestState;
    private com.android.internal.util.StateMachine$SmHandler$HaltingState mHaltingState;
    private boolean mHasQuit;
    private com.android.internal.util.State mInitialState;
    private boolean mIsConstructionCompleted;
    private com.android.internal.util.StateMachine$LogRecords mLogRecords;
    private android.os.Message mMsg;
    private com.android.internal.util.StateMachine$SmHandler$QuittingState mQuittingState;
    private com.android.internal.util.StateMachine mSm;
    private java.util.HashMap mStateInfo;
    private com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack;
    private int mStateStackTopIndex;
    private com.android.internal.util.StateMachine$SmHandler$StateInfo[] mTempStateStack;
    private int mTempStateStackCount;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.internal.util.StateMachine$SmHandler: java.lang.Object mSmHandlerObj> = $r0;

        return;
    }

    private void <init>(android.os.Looper, com.android.internal.util.StateMachine)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Looper r1;
        com.android.internal.util.StateMachine r2;
        com.android.internal.util.StateMachine$LogRecords $r3;
        com.android.internal.util.StateMachine$SmHandler$HaltingState $r4, $r8;
        com.android.internal.util.StateMachine$SmHandler$QuittingState $r5, $r10;
        java.util.HashMap $r6;
        java.util.ArrayList $r7;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: com.android.internal.util.StateMachine;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        r0.<com.android.internal.util.StateMachine$SmHandler: boolean mHasQuit> = 0;

        r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg> = 0;

        $r3 = new com.android.internal.util.StateMachine$LogRecords;

        specialinvoke $r3.<com.android.internal.util.StateMachine$LogRecords: void <init>(com.android.internal.util.StateMachine$1)>(null);

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$LogRecords mLogRecords> = $r3;

        r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex> = -1;

        $r4 = new com.android.internal.util.StateMachine$SmHandler$HaltingState;

        specialinvoke $r4.<com.android.internal.util.StateMachine$SmHandler$HaltingState: void <init>(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.StateMachine$1)>(r0, null);

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$HaltingState mHaltingState> = $r4;

        $r5 = new com.android.internal.util.StateMachine$SmHandler$QuittingState;

        specialinvoke $r5.<com.android.internal.util.StateMachine$SmHandler$QuittingState: void <init>(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.StateMachine$1)>(r0, null);

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$QuittingState mQuittingState> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<com.android.internal.util.StateMachine$SmHandler: java.util.HashMap mStateInfo> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.util.StateMachine$SmHandler: java.util.ArrayList mDeferredMessages> = $r7;

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm> = r2;

        $r8 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$HaltingState mHaltingState>;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo addState(com.android.internal.util.State,com.android.internal.util.State)>($r8, null);

        $r10 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$QuittingState mQuittingState>;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo addState(com.android.internal.util.State,com.android.internal.util.State)>($r10, null);

        return;
    }

    void <init>(android.os.Looper, com.android.internal.util.StateMachine, com.android.internal.util.StateMachine$1)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Looper r1;
        com.android.internal.util.StateMachine r2;
        com.android.internal.util.StateMachine$1 r3;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: android.os.Looper;

        r2 := @parameter1: com.android.internal.util.StateMachine;

        r3 := @parameter2: com.android.internal.util.StateMachine$1;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void <init>(android.os.Looper,com.android.internal.util.StateMachine)>(r1, r2);

        return;
    }

    static android.os.Message access$1000(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Message $r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $r1 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message getCurrentMessage()>();

        return $r1;
    }

    static com.android.internal.util.IState access$1100(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $r1 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static void access$1200(com.android.internal.util.StateMachine$SmHandler, com.android.internal.util.IState)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter1: com.android.internal.util.IState;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.StateMachine$SmHandler$HaltingState access$1300(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.StateMachine$SmHandler$HaltingState $r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $r1 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$HaltingState mHaltingState>;

        return $r1;
    }

    static void access$1400(com.android.internal.util.StateMachine$SmHandler, android.os.Message)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static boolean access$1500(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        return $z0;
    }

    static com.android.internal.util.StateMachine$LogRecords access$1600(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.StateMachine$LogRecords $r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $r1 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$LogRecords mLogRecords>;

        return $r1;
    }

    static com.android.internal.util.StateMachine$SmHandler$StateInfo[] access$1800(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] $r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $r1 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        return $r1;
    }

    static int access$1900(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        int $i0;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $i0 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        return $i0;
    }

    static com.android.internal.util.State access$2000(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $r1 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState>;

        return $r1;
    }

    static boolean access$2100(com.android.internal.util.StateMachine$SmHandler, android.os.Message)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Message r1;
        boolean $z0;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter1: android.os.Message;

        $z0 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: boolean isQuit(android.os.Message)>(r1);

        return $z0;
    }

    static void access$2200(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void quit()>();

        return;
    }

    static void access$2300(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void quitNow()>();

        return;
    }

    static boolean access$2400(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $z0 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: boolean isDbg()>();

        return $z0;
    }

    static void access$2500(com.android.internal.util.StateMachine$SmHandler, boolean)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void setDbg(boolean)>(z0);

        return;
    }

    static void access$2600(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void completeConstruction()>();

        return;
    }

    static com.android.internal.util.StateMachine access$300(com.android.internal.util.StateMachine$SmHandler)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.StateMachine $r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        $r1 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        return $r1;
    }

    static com.android.internal.util.StateMachine$SmHandler$StateInfo access$800(com.android.internal.util.StateMachine$SmHandler, com.android.internal.util.State, com.android.internal.util.State)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.State r1, r2;
        com.android.internal.util.StateMachine$SmHandler$StateInfo $r3;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter1: com.android.internal.util.State;

        r2 := @parameter2: com.android.internal.util.State;

        $r3 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo addState(com.android.internal.util.State,com.android.internal.util.State)>(r1, r2);

        return $r3;
    }

    static void access$900(com.android.internal.util.StateMachine$SmHandler, com.android.internal.util.State)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.State r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter1: com.android.internal.util.State;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void setInitialState(com.android.internal.util.State)>(r1);

        return;
    }

    private final com.android.internal.util.StateMachine$SmHandler$StateInfo addState(com.android.internal.util.State, com.android.internal.util.State)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.State r1, r2;
        com.android.internal.util.StateMachine$SmHandler$StateInfo r3, r4, $r10, $r15, $r17;
        com.android.internal.util.StateMachine r5, $r12;
        java.lang.StringBuilder r6, $r11, $r13, $r14, $r23, $r25, $r26, $r28;
        java.lang.String r7, $r16, $r24, $r27;
        boolean $z0, $z1;
        java.util.HashMap $r8, $r20, $r22;
        java.lang.Object $r9, $r21;
        java.lang.RuntimeException $r18;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: com.android.internal.util.State;

        r2 := @parameter1: com.android.internal.util.State;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label2;

        r5 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addStateInternal: E state=");

        $r24 = virtualinvoke r1.<com.android.internal.util.State: java.lang.String getName()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        r6 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",parent=");

        if r2 != null goto label5;

        r7 = "";

     label1:
        $r28 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r27);

     label2:
        r3 = null;

        if r2 == null goto label3;

        $r22 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.HashMap mStateInfo>;

        $r21 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.android.internal.util.StateMachine$SmHandler$StateInfo) $r21;

        if r3 != null goto label3;

        r3 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo addState(com.android.internal.util.State,com.android.internal.util.State)>(r2, null);

     label3:
        $r8 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.HashMap mStateInfo>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.internal.util.StateMachine$SmHandler$StateInfo) $r9;

        if r4 != null goto label4;

        $r17 = new com.android.internal.util.StateMachine$SmHandler$StateInfo;

        specialinvoke $r17.<com.android.internal.util.StateMachine$SmHandler$StateInfo: void <init>(com.android.internal.util.StateMachine$SmHandler,com.android.internal.util.StateMachine$1)>(r0, null);

        r4 = $r17;

        $r20 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.HashMap mStateInfo>;

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label4:
        $r10 = r4.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.StateMachine$SmHandler$StateInfo parentStateInfo>;

        if $r10 == null goto label6;

        $r15 = r4.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.StateMachine$SmHandler$StateInfo parentStateInfo>;

        if $r15 == r3 goto label6;

        $r18 = new java.lang.RuntimeException;

        specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>("state already added");

        throw $r18;

     label5:
        r7 = virtualinvoke r2.<com.android.internal.util.State: java.lang.String getName()>();

        goto label1;

     label6:
        r4.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state> = r1;

        r4.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.StateMachine$SmHandler$StateInfo parentStateInfo> = r3;

        r4.<com.android.internal.util.StateMachine$SmHandler$StateInfo: boolean active> = 0;

        $z1 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z1 == 0 goto label7;

        $r12 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addStateInternal: X stateInfo: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r16);

     label7:
        return r4;
    }

    private final void cleanupAfterQuitting()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.StateMachine $r1, $r3, $r9;
        android.os.HandlerThread $r2;
        com.android.internal.util.StateMachine$LogRecords $r5;
        java.util.HashMap $r6;
        java.util.ArrayList $r7;
        android.os.Looper $r8;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $r1 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r2 = staticinvoke <com.android.internal.util.StateMachine: android.os.HandlerThread access$400(com.android.internal.util.StateMachine)>($r1);

        if $r2 == null goto label1;

        $r8 = virtualinvoke r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Looper getLooper()>();

        virtualinvoke $r8.<android.os.Looper: void quit()>();

        $r9 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        staticinvoke <com.android.internal.util.StateMachine: android.os.HandlerThread access$402(com.android.internal.util.StateMachine,android.os.HandlerThread)>($r9, null);

     label1:
        $r3 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        staticinvoke <com.android.internal.util.StateMachine: com.android.internal.util.StateMachine$SmHandler access$502(com.android.internal.util.StateMachine,com.android.internal.util.StateMachine$SmHandler)>($r3, null);

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm> = null;

        r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg> = null;

        $r5 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$LogRecords mLogRecords>;

        virtualinvoke $r5.<com.android.internal.util.StateMachine$LogRecords: void cleanup()>();

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack> = null;

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mTempStateStack> = null;

        $r6 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.HashMap mStateInfo>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mInitialState> = null;

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState> = null;

        $r7 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.ArrayList mDeferredMessages>;

        virtualinvoke $r7.<java.util.ArrayList: void clear()>();

        r0.<com.android.internal.util.StateMachine$SmHandler: boolean mHasQuit> = 1;

        return;
    }

    private final void completeConstruction()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        int i0, i1;
        java.util.Iterator r1;
        com.android.internal.util.StateMachine$SmHandler$StateInfo r2, r3;
        boolean $z0, $z1, $z2, $z4;
        java.util.HashMap $r4;
        java.util.Collection $r5;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] $r6, $r7;
        java.lang.Object $r8, $r15;
        android.os.Message $r9;
        com.android.internal.util.StateMachine $r10, $r11, $r17;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r16;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label1;

        $r17 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        virtualinvoke $r17.<com.android.internal.util.StateMachine: void log(java.lang.String)>("completeConstruction: E");

     label1:
        i0 = 0;

        $r4 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.HashMap mStateInfo>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r15 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.internal.util.StateMachine$SmHandler$StateInfo) $r15;

        i1 = 0;

        r3 = r2;

     label3:
        if r3 == null goto label4;

        r3 = r3.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.StateMachine$SmHandler$StateInfo parentStateInfo>;

        i1 = i1 + 1;

        goto label3;

     label4:
        if i0 >= i1 goto label2;

        i0 = i1;

        goto label2;

     label5:
        $z2 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z2 == 0 goto label6;

        $r11 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("completeConstruction: maxDepth=");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r16);

     label6:
        $r6 = newarray (com.android.internal.util.StateMachine$SmHandler$StateInfo)[i0];

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack> = $r6;

        $r7 = newarray (com.android.internal.util.StateMachine$SmHandler$StateInfo)[i0];

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mTempStateStack> = $r7;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void setupInitialStateStack()>();

        $r8 = <com.android.internal.util.StateMachine$SmHandler: java.lang.Object mSmHandlerObj>;

        $r9 = virtualinvoke r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message obtainMessage(int,java.lang.Object)>(-2, $r8);

        virtualinvoke r0.<com.android.internal.util.StateMachine$SmHandler: boolean sendMessageAtFrontOfQueue(android.os.Message)>($r9);

        $z4 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z4 == 0 goto label7;

        $r10 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        virtualinvoke $r10.<com.android.internal.util.StateMachine: void log(java.lang.String)>("completeConstruction: X");

     label7:
        return;
    }

    private final void deferMessage(android.os.Message)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Message r1, r2;
        boolean $z0;
        java.util.ArrayList $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        com.android.internal.util.StateMachine $r5;
        int $i0;
        java.lang.String $r8;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: android.os.Message;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deferMessage: msg=");

        $i0 = r1.<android.os.Message: int what>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r8);

     label1:
        r2 = virtualinvoke r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message obtainMessage()>();

        virtualinvoke r2.<android.os.Message: void copyFrom(android.os.Message)>(r1);

        $r3 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.ArrayList mDeferredMessages>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    private final android.os.Message getCurrentMessage()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Message $r1;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $r1 = r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg>;

        return $r1;
    }

    private final com.android.internal.util.IState getCurrentState()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        int $i0;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] $r1;
        com.android.internal.util.StateMachine$SmHandler$StateInfo $r2;
        com.android.internal.util.State $r3;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $r1 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $i0 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        $r2 = $r1[$i0];

        $r3 = $r2.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        return $r3;
    }

    private final void invokeEnterMethods(int)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        int i0, i1, $i2;
        boolean $z0;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] $r1, $r4, $r9;
        com.android.internal.util.StateMachine$SmHandler$StateInfo $r2, $r5, $r10;
        com.android.internal.util.State $r3, $r11;
        java.lang.StringBuilder $r6, $r8, $r12;
        com.android.internal.util.StateMachine $r7;
        java.lang.String $r13, $r14;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        i0 := @parameter0: int;

        i1 = i0;

     label1:
        $i2 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        if i1 > $i2 goto label3;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label2;

        $r7 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invokeEnterMethods: ");

        $r9 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $r10 = $r9[i1];

        $r11 = $r10.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        $r13 = virtualinvoke $r11.<com.android.internal.util.State: java.lang.String getName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r14);

     label2:
        $r1 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $r2 = $r1[i1];

        $r3 = $r2.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        virtualinvoke $r3.<com.android.internal.util.State: void enter()>();

        $r4 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $r5 = $r4[i1];

        $r5.<com.android.internal.util.StateMachine$SmHandler$StateInfo: boolean active> = 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private final void invokeExitMethods(com.android.internal.util.StateMachine$SmHandler$StateInfo)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.StateMachine$SmHandler$StateInfo r1, $r4, $r6, $r8;
        com.android.internal.util.State r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] $r3, $r5, $r7;
        boolean $z0;
        com.android.internal.util.StateMachine $r9;
        java.lang.StringBuilder $r10, $r12, $r14;
        java.lang.String $r11, $r13;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: com.android.internal.util.StateMachine$SmHandler$StateInfo;

     label1:
        $i0 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        if $i0 < 0 goto label3;

        $r3 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $i1 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        $r4 = $r3[$i1];

        if $r4 == r1 goto label3;

        $r5 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $i2 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        $r6 = $r5[$i2];

        r2 = $r6.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label2;

        $r9 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invokeExitMethods: ");

        $r11 = virtualinvoke r2.<com.android.internal.util.State: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r13);

     label2:
        virtualinvoke r2.<com.android.internal.util.State: void exit()>();

        $r7 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $i3 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        $r8 = $r7[$i3];

        $r8.<com.android.internal.util.StateMachine$SmHandler$StateInfo: boolean active> = 0;

        $i4 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        $i5 = -1 + $i4;

        r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex> = $i5;

        goto label1;

     label3:
        return;
    }

    private final boolean isDbg()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        boolean $z0;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        return $z0;
    }

    private final boolean isQuit(android.os.Message)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Message r1;
        int $i0;
        java.lang.Object $r2, $r3;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        if $i0 != -1 goto label1;

        $r3 = r1.<android.os.Message: java.lang.Object obj>;

        $r2 = <com.android.internal.util.StateMachine$SmHandler: java.lang.Object mSmHandlerObj>;

        if $r3 != $r2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final void moveDeferredMessageAtFrontOfQueue()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        int i0, $i1, $i2;
        android.os.Message r1;
        java.util.ArrayList $r2, $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.StringBuilder $r6, $r8, $r9;
        com.android.internal.util.StateMachine $r7;
        java.lang.String $r10;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $r2 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.ArrayList mDeferredMessages>;

        $i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.ArrayList mDeferredMessages>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (android.os.Message) $r5;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label2;

        $r7 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveDeferredMessageAtFrontOfQueue; what=");

        $i2 = r1.<android.os.Message: int what>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r10);

     label2:
        virtualinvoke r0.<com.android.internal.util.StateMachine$SmHandler: boolean sendMessageAtFrontOfQueue(android.os.Message)>(r1);

        i0 = i0 + -1;

        goto label1;

     label3:
        $r3 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.ArrayList mDeferredMessages>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        return;
    }

    private final int moveTempStateStackToStateStack()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r11, $r16, $r18, $r20, $r21, $r22;
        com.android.internal.util.StateMachine $r2, $r19;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] $r8, $r15, $r17;
        com.android.internal.util.State $r9;
        com.android.internal.util.StateMachine$SmHandler$StateInfo $r10, $r14;
        java.lang.String $r12, $r13, $r23;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $i3 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        i0 = 1 + $i3;

        $i4 = r0.<com.android.internal.util.StateMachine$SmHandler: int mTempStateStackCount>;

        i1 = -1 + $i4;

        i2 = i0;

     label1:
        if i1 < 0 goto label3;

        $z1 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z1 == 0 goto label2;

        $r19 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveTempStackToStateStack: i=");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",j=");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r23);

     label2:
        $r17 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $r15 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mTempStateStack>;

        $r14 = $r15[i1];

        $r17[i2] = $r14;

        i2 = i2 + 1;

        i1 = i1 + -1;

        goto label1;

     label3:
        $i5 = i2 - 1;

        r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex> = $i5;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label4;

        $r2 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("moveTempStackToStateStack: X mStateStackTop=");

        $i6 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",startingIndex=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",Top=");

        $r8 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $i7 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        $r10 = $r8[$i7];

        $r9 = $r10.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        $r12 = virtualinvoke $r9.<com.android.internal.util.State: java.lang.String getName()>();

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r13);

     label4:
        return i0;
    }

    private void performTransitions(com.android.internal.util.State, android.os.Message)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.State r1, r3, r4, $r15, $r22, $r25, $r33;
        android.os.Message r2, $r7, $r16, $r20, $r24, $r27;
        boolean z0, $z1, $z2, $z3;
        int $i0, $i1;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] $r5;
        com.android.internal.util.StateMachine$SmHandler$StateInfo $r6, $r14;
        com.android.internal.util.StateMachine $r8, $r12, $r13, $r17, $r19, $r21, $r26, $r28;
        com.android.internal.util.StateMachine$LogRecords $r9, $r18, $r29;
        com.android.internal.util.StateMachine$SmHandler$QuittingState $r10;
        com.android.internal.util.StateMachine$SmHandler$HaltingState $r11;
        java.lang.String $r23, $r32;
        java.lang.Object $r30, $r31;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: com.android.internal.util.State;

        r2 := @parameter1: android.os.Message;

        $r5 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $i0 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        $r6 = $r5[$i0];

        r3 = $r6.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        $r8 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r7 = r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg>;

        $z1 = virtualinvoke $r8.<com.android.internal.util.StateMachine: boolean recordLogRec(android.os.Message)>($r7);

        if $z1 == 0 goto label05;

        $r31 = r2.<android.os.Message: java.lang.Object obj>;

        $r30 = <com.android.internal.util.StateMachine$SmHandler: java.lang.Object mSmHandlerObj>;

        if $r31 == $r30 goto label05;

        z0 = 1;

     label01:
        $r9 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$LogRecords mLogRecords>;

        $z2 = virtualinvoke $r9.<com.android.internal.util.StateMachine$LogRecords: boolean logOnlyTransitions()>();

        if $z2 == 0 goto label06;

        $r25 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState>;

        if $r25 == null goto label02;

        $r29 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$LogRecords mLogRecords>;

        $r26 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r27 = r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg>;

        $r28 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r24 = r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg>;

        $r32 = virtualinvoke $r28.<com.android.internal.util.StateMachine: java.lang.String getLogRecString(android.os.Message)>($r24);

        $r33 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState>;

        virtualinvoke $r29.<com.android.internal.util.StateMachine$LogRecords: void add(com.android.internal.util.StateMachine,android.os.Message,java.lang.String,com.android.internal.util.IState,com.android.internal.util.IState,com.android.internal.util.IState)>($r26, $r27, $r32, r1, r3, $r33);

     label02:
        r4 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState>;

        if r4 == null goto label08;

     label03:
        $z3 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z3 == 0 goto label04;

        $r17 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        virtualinvoke $r17.<com.android.internal.util.StateMachine: void log(java.lang.String)>("handleMessage: new destination call exit/enter");

     label04:
        $r14 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo setupTempStateStackWithStatesToEnter(com.android.internal.util.State)>(r4);

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void invokeExitMethods(com.android.internal.util.StateMachine$SmHandler$StateInfo)>($r14);

        $i1 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: int moveTempStateStackToStateStack()>();

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void invokeEnterMethods(int)>($i1);

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void moveDeferredMessageAtFrontOfQueue()>();

        $r15 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState>;

        if r4 == $r15 goto label07;

        r4 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState>;

        goto label03;

     label05:
        z0 = 0;

        goto label01;

     label06:
        if z0 == 0 goto label02;

        $r18 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$LogRecords mLogRecords>;

        $r21 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r20 = r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg>;

        $r19 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r16 = r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg>;

        $r23 = virtualinvoke $r19.<com.android.internal.util.StateMachine: java.lang.String getLogRecString(android.os.Message)>($r16);

        $r22 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState>;

        virtualinvoke $r18.<com.android.internal.util.StateMachine$LogRecords: void add(com.android.internal.util.StateMachine,android.os.Message,java.lang.String,com.android.internal.util.IState,com.android.internal.util.IState,com.android.internal.util.IState)>($r21, $r20, $r23, r1, r3, $r22);

        goto label02;

     label07:
        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState> = null;

     label08:
        if r4 == null goto label09;

        $r10 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$QuittingState mQuittingState>;

        if r4 != $r10 goto label10;

        $r12 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        virtualinvoke $r12.<com.android.internal.util.StateMachine: void onQuitting()>();

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void cleanupAfterQuitting()>();

     label09:
        return;

     label10:
        $r11 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$HaltingState mHaltingState>;

        if r4 != $r11 goto label09;

        $r13 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        virtualinvoke $r13.<com.android.internal.util.StateMachine: void onHalting()>();

        return;
    }

    private final com.android.internal.util.State processMsg(android.os.Message)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Message r1;
        com.android.internal.util.StateMachine$SmHandler$StateInfo r2;
        int $i0;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] $r3;
        boolean $z0, $z1, $z2, $z3;
        com.android.internal.util.State $r4, $r5, $r9, $r17;
        java.lang.StringBuilder $r6, $r8, $r12, $r16, $r18, $r19;
        com.android.internal.util.StateMachine $r7, $r14, $r15;
        java.lang.String $r10, $r11, $r20, $r21;
        com.android.internal.util.StateMachine$SmHandler$QuittingState $r13;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: android.os.Message;

        $r3 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mStateStack>;

        $i0 = r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex>;

        r2 = $r3[$i0];

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label1;

        $r15 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processMsg: ");

        $r17 = r2.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        $r20 = virtualinvoke $r17.<com.android.internal.util.State: java.lang.String getName()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r21);

     label1:
        $z1 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: boolean isQuit(android.os.Message)>(r1);

        if $z1 == 0 goto label4;

        $r13 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$QuittingState mQuittingState>;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void transitionTo(com.android.internal.util.IState)>($r13);

     label2:
        if r2 == null goto label5;

        $r5 = r2.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        return $r5;

     label3:
        $z3 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z3 == 0 goto label4;

        $r7 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processMsg: ");

        $r9 = r2.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        $r10 = virtualinvoke $r9.<com.android.internal.util.State: java.lang.String getName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r11);

     label4:
        $r4 = r2.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.State state>;

        $z2 = virtualinvoke $r4.<com.android.internal.util.State: boolean processMessage(android.os.Message)>(r1);

        if $z2 != 0 goto label2;

        r2 = r2.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.StateMachine$SmHandler$StateInfo parentStateInfo>;

        if r2 != null goto label3;

        $r14 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        virtualinvoke $r14.<com.android.internal.util.StateMachine: void unhandledMessage(android.os.Message)>(r1);

        goto label2;

     label5:
        return null;
    }

    private final void quit()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        boolean $z0;
        java.lang.Object $r1;
        android.os.Message $r2;
        com.android.internal.util.StateMachine $r3;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        virtualinvoke $r3.<com.android.internal.util.StateMachine: void log(java.lang.String)>("quit:");

     label1:
        $r1 = <com.android.internal.util.StateMachine$SmHandler: java.lang.Object mSmHandlerObj>;

        $r2 = virtualinvoke r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message obtainMessage(int,java.lang.Object)>(-1, $r1);

        virtualinvoke r0.<com.android.internal.util.StateMachine$SmHandler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    private final void quitNow()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        boolean $z0;
        java.lang.Object $r1;
        android.os.Message $r2;
        com.android.internal.util.StateMachine $r3;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        virtualinvoke $r3.<com.android.internal.util.StateMachine: void log(java.lang.String)>("quitNow:");

     label1:
        $r1 = <com.android.internal.util.StateMachine$SmHandler: java.lang.Object mSmHandlerObj>;

        $r2 = virtualinvoke r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message obtainMessage(int,java.lang.Object)>(-1, $r1);

        virtualinvoke r0.<com.android.internal.util.StateMachine$SmHandler: boolean sendMessageAtFrontOfQueue(android.os.Message)>($r2);

        return;
    }

    private final void setDbg(boolean)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        boolean z0;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg> = z0;

        return;
    }

    private final void setInitialState(com.android.internal.util.State)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.State r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r4, $r6;
        com.android.internal.util.StateMachine $r3;
        java.lang.String $r5, $r7;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: com.android.internal.util.State;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setInitialState: initialState=");

        $r5 = virtualinvoke r1.<com.android.internal.util.State: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r7);

     label1:
        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mInitialState> = r1;

        return;
    }

    private final void setupInitialStateStack()
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.StateMachine$SmHandler$StateInfo r1;
        boolean $z0;
        com.android.internal.util.State $r2, $r9;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        int $i1, $i2, $i3;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] $r5;
        java.lang.StringBuilder $r6, $r8, $r12;
        com.android.internal.util.StateMachine $r7;
        java.lang.String $r10, $r11;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label1;

        $r7 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setupInitialStateStack: E mInitialState=");

        $r9 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mInitialState>;

        $r10 = virtualinvoke $r9.<com.android.internal.util.State: java.lang.String getName()>();

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r11);

     label1:
        $r3 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.HashMap mStateInfo>;

        $r2 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mInitialState>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r1 = (com.android.internal.util.StateMachine$SmHandler$StateInfo) $r4;

        r0.<com.android.internal.util.StateMachine$SmHandler: int mTempStateStackCount> = 0;

     label2:
        if r1 == null goto label3;

        $r5 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mTempStateStack>;

        $i1 = r0.<com.android.internal.util.StateMachine$SmHandler: int mTempStateStackCount>;

        $r5[$i1] = r1;

        r1 = r1.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.StateMachine$SmHandler$StateInfo parentStateInfo>;

        $i2 = r0.<com.android.internal.util.StateMachine$SmHandler: int mTempStateStackCount>;

        $i3 = 1 + $i2;

        r0.<com.android.internal.util.StateMachine$SmHandler: int mTempStateStackCount> = $i3;

        goto label2;

     label3:
        r0.<com.android.internal.util.StateMachine$SmHandler: int mStateStackTopIndex> = -1;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: int moveTempStateStackToStateStack()>();

        return;
    }

    private final com.android.internal.util.StateMachine$SmHandler$StateInfo setupTempStateStackWithStatesToEnter(com.android.internal.util.State)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.State r1;
        com.android.internal.util.StateMachine$SmHandler$StateInfo r2;
        com.android.internal.util.StateMachine$SmHandler$StateInfo[] r3;
        int i0, $i1, $i2;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11;
        com.android.internal.util.StateMachine $r7;
        java.lang.String $r12;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: com.android.internal.util.State;

        r0.<com.android.internal.util.StateMachine$SmHandler: int mTempStateStackCount> = 0;

        $r4 = r0.<com.android.internal.util.StateMachine$SmHandler: java.util.HashMap mStateInfo>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.internal.util.StateMachine$SmHandler$StateInfo) $r5;

     label1:
        r3 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine$SmHandler$StateInfo[] mTempStateStack>;

        i0 = r0.<com.android.internal.util.StateMachine$SmHandler: int mTempStateStackCount>;

        $i1 = i0 + 1;

        r0.<com.android.internal.util.StateMachine$SmHandler: int mTempStateStackCount> = $i1;

        r3[i0] = r2;

        r2 = r2.<com.android.internal.util.StateMachine$SmHandler$StateInfo: com.android.internal.util.StateMachine$SmHandler$StateInfo parentStateInfo>;

        if r2 == null goto label2;

        $z1 = r2.<com.android.internal.util.StateMachine$SmHandler$StateInfo: boolean active>;

        if $z1 == 0 goto label1;

     label2:
        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label3;

        $r7 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setupTempStateStackWithStatesToEnter: X mTempStateStackCount=");

        $i2 = r0.<com.android.internal.util.StateMachine$SmHandler: int mTempStateStackCount>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",curStateInfo: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r12);

     label3:
        return r2;
    }

    private final void transitionTo(com.android.internal.util.IState)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        com.android.internal.util.IState r1;
        com.android.internal.util.State $r2, $r6;
        boolean $z0;
        java.lang.StringBuilder $r3, $r5, $r8;
        com.android.internal.util.StateMachine $r4;
        java.lang.String $r7, $r9;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: com.android.internal.util.IState;

        $r2 = (com.android.internal.util.State) r1;

        r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState> = $r2;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transitionTo: destState=");

        $r6 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State mDestState>;

        $r7 = virtualinvoke $r6.<com.android.internal.util.State: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r9);

     label1:
        return;
    }

    public final void handleMessage(android.os.Message)
    {
        com.android.internal.util.StateMachine$SmHandler r0;
        android.os.Message r1, $r8, $r9;
        com.android.internal.util.State r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r14, $r15, $r17;
        java.lang.String $r7, $r18;
        int $i0, $i1;
        java.lang.Object $r10, $r11;
        com.android.internal.util.StateMachine $r12, $r13, $r16;

        r0 := @this: com.android.internal.util.StateMachine$SmHandler;

        r1 := @parameter0: android.os.Message;

        $z0 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mHasQuit>;

        if $z0 != 0 goto label3;

        $z1 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z1 == 0 goto label1;

        $r16 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage: E msg.what=");

        $i1 = r1.<android.os.Message: int what>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<com.android.internal.util.StateMachine: void log(java.lang.String)>($r18);

     label1:
        r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg> = r1;

        $z2 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mIsConstructionCompleted>;

        if $z2 == 0 goto label4;

        r2 = specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.State processMsg(android.os.Message)>(r1);

     label2:
        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void performTransitions(com.android.internal.util.State,android.os.Message)>(r2, r1);

        $z4 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mDbg>;

        if $z4 == 0 goto label3;

        $r13 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        if $r13 == null goto label3;

        $r12 = r0.<com.android.internal.util.StateMachine$SmHandler: com.android.internal.util.StateMachine mSm>;

        virtualinvoke $r12.<com.android.internal.util.StateMachine: void log(java.lang.String)>("handleMessage: X");

     label3:
        return;

     label4:
        $z3 = r0.<com.android.internal.util.StateMachine$SmHandler: boolean mIsConstructionCompleted>;

        if $z3 != 0 goto label5;

        $r8 = r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg>;

        $i0 = $r8.<android.os.Message: int what>;

        if $i0 != -2 goto label5;

        $r9 = r0.<com.android.internal.util.StateMachine$SmHandler: android.os.Message mMsg>;

        $r11 = $r9.<android.os.Message: java.lang.Object obj>;

        $r10 = <com.android.internal.util.StateMachine$SmHandler: java.lang.Object mSmHandlerObj>;

        if $r11 != $r10 goto label5;

        r0.<com.android.internal.util.StateMachine$SmHandler: boolean mIsConstructionCompleted> = 1;

        specialinvoke r0.<com.android.internal.util.StateMachine$SmHandler: void invokeEnterMethods(int)>(0);

        r2 = null;

        goto label2;

     label5:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StateMachine.handleMessage: The start method not called, received msg: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }
}
