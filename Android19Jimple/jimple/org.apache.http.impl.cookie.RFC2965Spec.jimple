public class org.apache.http.impl.cookie.RFC2965Spec extends org.apache.http.impl.cookie.RFC2109Spec
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void <init>(java.lang.String[],boolean)>(null, 0);

        return;
    }

    public void <init>(java.lang.String[], boolean)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        java.lang.String[] r1;
        boolean z0;
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler $r2;
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler $r3;
        org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler $r4;
        org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler $r5;
        org.apache.http.impl.cookie.RFC2965VersionAttributeHandler $r6;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: void <init>(java.lang.String[],boolean)>(r1, z0);

        $r2 = new org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        specialinvoke $r2.<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("domain", $r2);

        $r3 = new org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        specialinvoke $r3.<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("port", $r3);

        $r4 = new org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler;

        specialinvoke $r4.<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("commenturl", $r4);

        $r5 = new org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler;

        specialinvoke $r5.<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("discard", $r5);

        $r6 = new org.apache.http.impl.cookie.RFC2965VersionAttributeHandler;

        specialinvoke $r6.<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("version", $r6);

        return;
    }

    private static org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin r0, $r2;
        java.lang.String r1, $r6, $r7;
        boolean z0, $z1;
        int i0, $i2, $i3;
        char c1;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        r1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        z0 = 1;

        i0 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i2 goto label3;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if c1 == 46 goto label2;

        if c1 != 58 goto label5;

     label2:
        z0 = 0;

     label3:
        if z0 == 0 goto label4;

        $r2 = new org.apache.http.cookie.CookieOrigin;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $r7 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>();

        $z1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: boolean isSecure()>();

        specialinvoke $r2.<org.apache.http.cookie.CookieOrigin: void <init>(java.lang.String,int,java.lang.String,boolean)>($r6, $i3, $r7, $z1);

        r0 = $r2;

     label4:
        return r0;

     label5:
        i0 = i0 + 1;

        goto label1;
    }

    private org.apache.http.impl.cookie.BasicClientCookie createCookie(java.lang.String, java.lang.String, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        java.lang.String r1, r2, $r6, $r7;
        org.apache.http.cookie.CookieOrigin r3;
        org.apache.http.impl.cookie.BasicClientCookie r4, $r5;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.http.cookie.CookieOrigin;

        $r5 = new org.apache.http.impl.cookie.BasicClientCookie;

        specialinvoke $r5.<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r4 = $r5;

        $r6 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>(r3);

        virtualinvoke r4.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>($r6);

        $r7 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>(r3);

        virtualinvoke r4.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>($r7);

        return r4;
    }

    private org.apache.http.impl.cookie.BasicClientCookie createCookie2(java.lang.String, java.lang.String, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        java.lang.String r1, r2, $r7, $r8;
        org.apache.http.cookie.CookieOrigin r3;
        org.apache.http.impl.cookie.BasicClientCookie2 r4, $r6;
        int[] r5;
        int $i0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.http.cookie.CookieOrigin;

        $r6 = new org.apache.http.impl.cookie.BasicClientCookie2;

        specialinvoke $r6.<org.apache.http.impl.cookie.BasicClientCookie2: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r4 = $r6;

        $r7 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>(r3);

        virtualinvoke r4.<org.apache.http.impl.cookie.BasicClientCookie2: void setPath(java.lang.String)>($r7);

        $r8 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>(r3);

        virtualinvoke r4.<org.apache.http.impl.cookie.BasicClientCookie2: void setDomain(java.lang.String)>($r8);

        r5 = newarray (int)[1];

        $i0 = virtualinvoke r3.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        r5[0] = $i0;

        virtualinvoke r4.<org.apache.http.impl.cookie.BasicClientCookie2: void setPorts(int[])>(r5);

        return r4;
    }

    protected void formatCookieAsVer(org.apache.http.util.CharArrayBuffer, org.apache.http.cookie.Cookie, int)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.util.CharArrayBuffer r1;
        org.apache.http.cookie.Cookie r2;
        int i0, i1, i2, $i3, $i4;
        java.lang.String r3, $r6, $r7;
        int[] r4;
        boolean $z0;
        org.apache.http.cookie.ClientCookie $r5;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        r2 := @parameter1: org.apache.http.cookie.Cookie;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int)>(r1, r2, i0);

        $z0 = r2 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label4;

        $r5 = (org.apache.http.cookie.ClientCookie) r2;

        r3 = interfaceinvoke $r5.<org.apache.http.cookie.ClientCookie: java.lang.String getAttribute(java.lang.String)>("port");

        if r3 == null goto label4;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("; $Port");

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("=\"");

        $r6 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i3 <= 0 goto label3;

        r4 = interfaceinvoke r2.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        if r4 == null goto label3;

        i1 = 0;

        i2 = lengthof r4;

     label1:
        if i1 >= i2 goto label3;

        if i1 <= 0 goto label2;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(",");

     label2:
        $i4 = r4[i1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("\"");

     label4:
        return;
    }

    public int getVersion()
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        return 1;
    }

    public org.apache.http.Header getVersionHeader()
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.util.CharArrayBuffer r1, $r2;
        int $i0;
        java.lang.String $r3;
        org.apache.http.message.BufferedHeader $r4;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r2 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r2.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(40);

        r1 = $r2;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Cookie2");

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": ");

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("$Version=");

        $i0 = virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r3);

        $r4 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r4.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>(r1);

        return $r4;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2, $r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r4;

     label2:
        $r3 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r2);

        $z0 = specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r1, $r3);

        return $z0;
    }

    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.Header r1;
        org.apache.http.cookie.CookieOrigin r2, r3;
        org.apache.http.HeaderElement[] r4;
        java.util.ArrayList r5, $r17;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        org.apache.http.HeaderElement r6;
        java.lang.String r7, r8, r15, $r19, $r23, $r26, $r28, $r30, $r31;
        org.apache.http.impl.cookie.BasicClientCookie r9;
        org.apache.http.NameValuePair[] r10;
        java.util.HashMap r11, $r20;
        java.util.Iterator r12;
        org.apache.http.NameValuePair r13, r16;
        org.apache.http.cookie.CookieAttributeHandler r14;
        org.apache.http.cookie.MalformedCookieException $r18;
        boolean $z0, $z1;
        java.util.Set $r21;
        java.lang.Object $r22, $r24;
        java.util.Map$Entry $r25;
        java.util.Locale $r27, $r29;
        java.lang.IllegalArgumentException $r32, $r33;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.Header;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 != null goto label01;

        $r32 = new java.lang.IllegalArgumentException;

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null");

        throw $r32;

     label01:
        if r2 != null goto label02;

        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r33;

     label02:
        r3 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r2);

        r4 = interfaceinvoke r1.<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>();

        $r17 = new java.util.ArrayList;

        $i3 = lengthof r4;

        specialinvoke $r17.<java.util.ArrayList: void <init>(int)>($i3);

        r5 = $r17;

        i0 = lengthof r4;

        i1 = 0;

     label03:
        if i1 >= i0 goto label12;

        r6 = r4[i1];

        r7 = interfaceinvoke r6.<org.apache.http.HeaderElement: java.lang.String getName()>();

        r8 = interfaceinvoke r6.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if r7 == null goto label04;

        $i4 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i4 != 0 goto label05;

     label04:
        $r18 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r18.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not be empty");

        throw $r18;

     label05:
        $r19 = interfaceinvoke r1.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("Set-Cookie2");

        if $z0 == 0 goto label08;

        r9 = specialinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.impl.cookie.BasicClientCookie createCookie2(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin)>(r7, r8, r3);

     label06:
        r10 = interfaceinvoke r6.<org.apache.http.HeaderElement: org.apache.http.NameValuePair[] getParameters()>();

        $r20 = new java.util.HashMap;

        $i5 = lengthof r10;

        specialinvoke $r20.<java.util.HashMap: void <init>(int)>($i5);

        r11 = $r20;

        $i6 = lengthof r10;

        i2 = -1 + $i6;

     label07:
        if i2 < 0 goto label09;

        r16 = r10[i2];

        $r30 = interfaceinvoke r16.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r29 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r28 = virtualinvoke $r30.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r29);

        interfaceinvoke r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r16);

        i2 = i2 + -1;

        goto label07;

     label08:
        r9 = specialinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.impl.cookie.BasicClientCookie createCookie(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin)>(r7, r8, r3);

        goto label06;

     label09:
        $r21 = interfaceinvoke r11.<java.util.Map: java.util.Set entrySet()>();

        r12 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r24 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (java.util.Map$Entry) $r24;

        $r22 = interfaceinvoke $r25.<java.util.Map$Entry: java.lang.Object getValue()>();

        r13 = (org.apache.http.NameValuePair) $r22;

        $r23 = interfaceinvoke r13.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r27 = <java.util.Locale: java.util.Locale ENGLISH>;

        r15 = virtualinvoke $r23.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r27);

        $r26 = interfaceinvoke r13.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke r9.<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>(r15, $r26);

        r14 = virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>(r15);

        if r14 == null goto label10;

        $r31 = interfaceinvoke r13.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke r14.<org.apache.http.cookie.CookieAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>(r9, $r31);

        goto label10;

     label11:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r9);

        i1 = i1 + 1;

        goto label03;

     label12:
        return r5;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2, $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r4;

     label2:
        $r3 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r2);

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r1, $r3);

        return;
    }
}
