public class java.security.spec.ECFieldF2m extends java.lang.Object implements java.security.spec.ECField
{
    private static final int PPB_LEN;
    private static final int PPB_MID_LEN;
    private static final int TPB_LEN;
    private static final int TPB_MID_LEN;
    private final int[] ks;
    private final int m;
    private final java.math.BigInteger rp;

    public void <init>(int)
    {
        java.security.spec.ECFieldF2m r0;
        int i0, $i1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: java.security.spec.ECFieldF2m;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.spec.ECFieldF2m: int m> = i0;

        $i1 = r0.<java.security.spec.ECFieldF2m: int m>;

        if $i1 > 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("m <= 0");

        throw $r1;

     label1:
        r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp> = null;

        r0.<java.security.spec.ECFieldF2m: int[] ks> = null;

        return;
    }

    public void <init>(int, java.math.BigInteger)
    {
        java.security.spec.ECFieldF2m r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.math.BigInteger r1, r2, $r3, $r4, $r5, $r7, $r8;
        java.lang.IllegalArgumentException $r6, $r13;
        boolean $z0, $z1;
        int[] $r9, $r10, $r11, $r12;
        java.lang.NullPointerException $r14;

        r0 := @this: java.security.spec.ECFieldF2m;

        i0 := @parameter0: int;

        r1 := @parameter1: java.math.BigInteger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.spec.ECFieldF2m: int m> = i0;

        $i3 = r0.<java.security.spec.ECFieldF2m: int m>;

        if $i3 > 0 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("m <= 0");

        throw $r13;

     label1:
        r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp> = r1;

        $r3 = r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        if $r3 != null goto label2;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("rp == null");

        throw $r14;

     label2:
        $r4 = r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        i1 = virtualinvoke $r4.<java.math.BigInteger: int bitCount()>();

        $r5 = r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        $i4 = virtualinvoke $r5.<java.math.BigInteger: int bitLength()>();

        $i5 = i0 + 1;

        if $i4 != $i5 goto label4;

        if i1 == 3 goto label3;

        if i1 != 5 goto label4;

     label3:
        $r7 = r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        $z0 = virtualinvoke $r7.<java.math.BigInteger: boolean testBit(int)>(0);

        if $z0 == 0 goto label4;

        $r8 = r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        $z1 = virtualinvoke $r8.<java.math.BigInteger: boolean testBit(int)>(i0);

        if $z1 != 0 goto label5;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rp is invalid");

        throw $r6;

     label5:
        $i6 = i1 - 2;

        $r9 = newarray (int)[$i6];

        r0.<java.security.spec.ECFieldF2m: int[] ks> = $r9;

        r2 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger clearBit(int)>(0);

        $r10 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i7 = lengthof $r10;

        i2 = -1 + $i7;

     label6:
        if i2 < 0 goto label7;

        $r11 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i8 = virtualinvoke r2.<java.math.BigInteger: int getLowestSetBit()>();

        $r11[i2] = $i8;

        $r12 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i9 = $r12[i2];

        r2 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger clearBit(int)>($i9);

        i2 = i2 + -1;

        goto label6;

     label7:
        return;
    }

    public void <init>(int, int[])
    {
        java.security.spec.ECFieldF2m r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        int[] r1, $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14;
        boolean z0;
        java.math.BigInteger r2, $r9;
        java.lang.IllegalArgumentException $r8, $r15, $r16;

        r0 := @this: java.security.spec.ECFieldF2m;

        i0 := @parameter0: int;

        r1 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.security.spec.ECFieldF2m: int m> = i0;

        $i5 = r0.<java.security.spec.ECFieldF2m: int m>;

        if $i5 > 0 goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("m <= 0");

        throw $r16;

     label1:
        $i6 = lengthof r1;

        $r3 = newarray (int)[$i6];

        r0.<java.security.spec.ECFieldF2m: int[] ks> = $r3;

        $r5 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $r4 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i7 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r5, 0, $i7);

        $r6 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i8 = lengthof $r6;

        if $i8 == 1 goto label2;

        $r14 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i13 = lengthof $r14;

        if $i13 == 3 goto label2;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("the length of ks is invalid");

        throw $r15;

     label2:
        i1 = r0.<java.security.spec.ECFieldF2m: int m>;

        i2 = 0;

     label3:
        $r7 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        i3 = lengthof $r7;

        z0 = 0;

        if i2 >= i3 goto label5;

        $r12 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i12 = $r12[i2];

        if $i12 >= i1 goto label4;

        $r13 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        i1 = $r13[i2];

        i2 = i2 + 1;

        goto label3;

     label4:
        z0 = 1;

     label5:
        if z0 != 0 goto label6;

        if i1 >= 1 goto label7;

     label6:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ks is invalid");

        throw $r8;

     label7:
        $r9 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $i9 = r0.<java.security.spec.ECFieldF2m: int m>;

        r2 = virtualinvoke $r9.<java.math.BigInteger: java.math.BigInteger setBit(int)>($i9);

        i4 = 0;

     label8:
        $r10 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i10 = lengthof $r10;

        if i4 >= $i10 goto label9;

        $r11 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i11 = $r11[i4];

        r2 = virtualinvoke r2.<java.math.BigInteger: java.math.BigInteger setBit(int)>($i11);

        i4 = i4 + 1;

        goto label8;

     label9:
        r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp> = r2;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.security.spec.ECFieldF2m r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;
        java.math.BigInteger $r3, $r6;
        int[] $r4, $r5;

        r0 := @this: java.security.spec.ECFieldF2m;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof java.security.spec.ECFieldF2m;

        if $z0 == 0 goto label3;

        r2 = (java.security.spec.ECFieldF2m) r1;

        $i1 = r0.<java.security.spec.ECFieldF2m: int m>;

        $i0 = r2.<java.security.spec.ECFieldF2m: int m>;

        if $i1 != $i0 goto label3;

        $r3 = r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        if $r3 != null goto label4;

        $r6 = r2.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        if $r6 == null goto label1;

     label3:
        return 0;

     label4:
        $r5 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $r4 = r2.<java.security.spec.ECFieldF2m: int[] ks>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>($r5, $r4);

        return $z1;
    }

    public int getFieldSize()
    {
        java.security.spec.ECFieldF2m r0;
        int $i0;

        r0 := @this: java.security.spec.ECFieldF2m;

        $i0 = r0.<java.security.spec.ECFieldF2m: int m>;

        return $i0;
    }

    public int getM()
    {
        java.security.spec.ECFieldF2m r0;
        int $i0;

        r0 := @this: java.security.spec.ECFieldF2m;

        $i0 = r0.<java.security.spec.ECFieldF2m: int m>;

        return $i0;
    }

    public int[] getMidTermsOfReductionPolynomial()
    {
        java.security.spec.ECFieldF2m r0;
        int[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: java.security.spec.ECFieldF2m;

        $r2 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i0 = lengthof $r3;

        r1 = newarray (int)[$i0];

        $r4 = r0.<java.security.spec.ECFieldF2m: int[] ks>;

        $i1 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i1);

        return r1;
    }

    public java.math.BigInteger getReductionPolynomial()
    {
        java.security.spec.ECFieldF2m r0;
        java.math.BigInteger $r1;

        r0 := @this: java.security.spec.ECFieldF2m;

        $r1 = r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        return $r1;
    }

    public int hashCode()
    {
        java.security.spec.ECFieldF2m r0;
        java.math.BigInteger $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: java.security.spec.ECFieldF2m;

        $r1 = r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        if $r1 != null goto label1;

        $i3 = r0.<java.security.spec.ECFieldF2m: int m>;

        return $i3;

     label1:
        $i0 = r0.<java.security.spec.ECFieldF2m: int m>;

        $r2 = r0.<java.security.spec.ECFieldF2m: java.math.BigInteger rp>;

        $i1 = virtualinvoke $r2.<java.math.BigInteger: int hashCode()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public static void <clinit>()
    {
        <java.security.spec.ECFieldF2m: int TPB_MID_LEN> = 1;

        <java.security.spec.ECFieldF2m: int TPB_LEN> = 3;

        <java.security.spec.ECFieldF2m: int PPB_MID_LEN> = 3;

        <java.security.spec.ECFieldF2m: int PPB_LEN> = 5;

        return;
    }
}
