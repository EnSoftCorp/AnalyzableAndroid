public class com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities extends java.lang.Object
{
    public static final java.lang.String ANY_POLICY;
    public static final java.lang.String AUTHORITY_KEY_IDENTIFIER;
    public static final java.lang.String BASIC_CONSTRAINTS;
    public static final java.lang.String CERTIFICATE_POLICIES;
    public static final java.lang.String CRL_DISTRIBUTION_POINTS;
    public static final java.lang.String CRL_NUMBER;
    protected static final int CRL_SIGN;
    private static final com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL;
    public static final java.lang.String DELTA_CRL_INDICATOR;
    public static final java.lang.String FRESHEST_CRL;
    public static final java.lang.String INHIBIT_ANY_POLICY;
    public static final java.lang.String ISSUING_DISTRIBUTION_POINT;
    protected static final int KEY_CERT_SIGN;
    public static final java.lang.String KEY_USAGE;
    public static final java.lang.String NAME_CONSTRAINTS;
    public static final java.lang.String POLICY_CONSTRAINTS;
    public static final java.lang.String POLICY_MAPPINGS;
    public static final java.lang.String SUBJECT_ALTERNATIVE_NAME;
    protected static final java.lang.String[] crlReasons;

    static void <clinit>()
    {
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r0;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r16, $r18, $r20, $r22, $r24, $r26;
        java.lang.String $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r19, $r21, $r23, $r25, $r27, $r29;
        java.lang.String[] $r28;

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int KEY_CERT_SIGN> = 5;

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: int CRL_SIGN> = 6;

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ANY_POLICY> = "2.5.29.32.0";

        $r0 = new com.android.org.bouncycastle.jce.provider.PKIXCRLUtil;

        specialinvoke $r0.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: void <init>()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL> = $r0;

        $r1 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier CertificatePolicies>;

        $r2 = virtualinvoke $r1.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES> = $r2;

        $r3 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier PolicyMappings>;

        $r4 = virtualinvoke $r3.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS> = $r4;

        $r5 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier InhibitAnyPolicy>;

        $r6 = virtualinvoke $r5.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY> = $r6;

        $r7 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier IssuingDistributionPoint>;

        $r8 = virtualinvoke $r7.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT> = $r8;

        $r9 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier FreshestCRL>;

        $r10 = virtualinvoke $r9.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String FRESHEST_CRL> = $r10;

        $r11 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier DeltaCRLIndicator>;

        $r12 = virtualinvoke $r11.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String DELTA_CRL_INDICATOR> = $r12;

        $r13 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier PolicyConstraints>;

        $r14 = virtualinvoke $r13.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS> = $r14;

        $r15 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier BasicConstraints>;

        $r17 = virtualinvoke $r15.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS> = $r17;

        $r16 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier CRLDistributionPoints>;

        $r19 = virtualinvoke $r16.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS> = $r19;

        $r18 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier SubjectAlternativeName>;

        $r21 = virtualinvoke $r18.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME> = $r21;

        $r20 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier NameConstraints>;

        $r23 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS> = $r23;

        $r22 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier AuthorityKeyIdentifier>;

        $r25 = virtualinvoke $r22.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String AUTHORITY_KEY_IDENTIFIER> = $r25;

        $r24 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier KeyUsage>;

        $r27 = virtualinvoke $r24.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String KEY_USAGE> = $r27;

        $r26 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier CRLNumber>;

        $r29 = virtualinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_NUMBER> = $r29;

        $r28 = newarray (java.lang.String)[11];

        $r28[0] = "unspecified";

        $r28[1] = "keyCompromise";

        $r28[2] = "cACompromise";

        $r28[3] = "affiliationChanged";

        $r28[4] = "superseded";

        $r28[5] = "cessationOfOperation";

        $r28[6] = "certificateHold";

        $r28[7] = "unknown";

        $r28[8] = "removeFromCRL";

        $r28[9] = "privilegeWithdrawn";

        $r28[10] = "aACompromise";

        <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String[] crlReasons> = $r28;

        return;
    }

    public void <init>()
    {
        com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities r0;

        r0 := @this: com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void checkCRL(com.android.org.bouncycastle.asn1.x509.DistributionPoint, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509Certificate, java.util.Date, java.security.cert.X509Certificate, java.security.PublicKey, com.android.org.bouncycastle.jce.provider.CertStatus, com.android.org.bouncycastle.jce.provider.ReasonsMask, java.util.List) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.X509Certificate r2, r4;
        java.util.Date r3, r9, $r22, $r39, $r40;
        java.security.PublicKey r5, r15;
        com.android.org.bouncycastle.jce.provider.CertStatus r6;
        com.android.org.bouncycastle.jce.provider.ReasonsMask r7, r16;
        java.util.List r8;
        java.util.Set r10, r19, r21, $r23, $r38;
        boolean z0, z1, $z2, $z3, $z4, $z6, $z9;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r11, r13, $r31, $r35, $r37, $r41, $r42;
        java.util.Iterator r12;
        java.security.cert.X509CRL r14, r17;
        java.util.HashSet r18, r20, $r25, $r30;
        long $l0, $l1, $l2, $l8, $l9;
        byte $b3, $b7;
        int $i4, $i5, $i6;
        java.lang.Object $r24;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r26, $r28, $r32, $r34;
        java.lang.String $r27, $r29, $r33, $r36;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.security.cert.X509Certificate;

        r3 := @parameter3: java.util.Date;

        r4 := @parameter4: java.security.cert.X509Certificate;

        r5 := @parameter5: java.security.PublicKey;

        r6 := @parameter6: com.android.org.bouncycastle.jce.provider.CertStatus;

        r7 := @parameter7: com.android.org.bouncycastle.jce.provider.ReasonsMask;

        r8 := @parameter8: java.util.List;

        $r22 = new java.util.Date;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r22.<java.util.Date: void <init>(long)>($l0);

        r9 = $r22;

        $l2 = virtualinvoke r3.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r9.<java.util.Date: long getTime()>();

        $b3 = $l2 cmp $l1;

        if $b3 <= 0 goto label01;

        $r41 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r41.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Validation time is in future.");

        throw $r41;

     label01:
        r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getCompleteCRLs(com.android.org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r0, r2, r9, r1);

        z0 = 0;

        r11 = null;

        r12 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label16;

        $i4 = virtualinvoke r6.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i4 != 11 goto label16;

        $z2 = virtualinvoke r7.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z2 != 0 goto label16;

     label03:
        $r24 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.security.cert.X509CRL) $r24;

        r16 = staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: com.android.org.bouncycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL,com.android.org.bouncycastle.asn1.x509.DistributionPoint)>(r14, r0);

        $z4 = virtualinvoke r16.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean hasNewReasons(com.android.org.bouncycastle.jce.provider.ReasonsMask)>(r7);

        if $z4 == 0 goto label02;

        $r23 = staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)>(r14, r2, r4, r5, r1, r8);

        r15 = staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.security.PublicKey processCRLG(java.security.cert.X509CRL,java.util.Set)>(r14, $r23);

        z1 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

     label04:
        r17 = null;

        if z1 == 0 goto label06;

     label05:
        $r38 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getDeltaCRLs(java.util.Date,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)>(r9, r1, r14);

        r17 = staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.security.cert.X509CRL processCRLH(java.util.Set,java.security.PublicKey)>($r38, r15);

     label06:
        $i5 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: int getValidityModel()>();

        if $i5 == 1 goto label07;

        $r39 = virtualinvoke r2.<java.security.cert.X509Certificate: java.util.Date getNotAfter()>();

        $l8 = virtualinvoke $r39.<java.util.Date: long getTime()>();

        $r40 = virtualinvoke r14.<java.security.cert.X509CRL: java.util.Date getThisUpdate()>();

        $l9 = virtualinvoke $r40.<java.util.Date: long getTime()>();

        $b7 = $l8 cmp $l9;

        if $b7 >= 0 goto label07;

        $r37 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r37.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No valid CRL for current time found.");

        throw $r37;

     label07:
        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLB1(com.android.org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)>(r0, r2, r14);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLB2(com.android.org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)>(r0, r2, r14);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r17, r14, r1);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLI(java.util.Date,java.security.cert.X509CRL,java.lang.Object,com.android.org.bouncycastle.jce.provider.CertStatus,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r3, r17, r2, r6, r1);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void processCRLJ(java.util.Date,java.security.cert.X509CRL,java.lang.Object,com.android.org.bouncycastle.jce.provider.CertStatus)>(r3, r14, r2, r6);

        $i6 = virtualinvoke r6.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i6 != 8 goto label08;

        virtualinvoke r6.<com.android.org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>(11);

     label08:
        virtualinvoke r7.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void addReasons(com.android.org.bouncycastle.jce.provider.ReasonsMask)>(r16);

        r19 = virtualinvoke r14.<java.security.cert.X509CRL: java.util.Set getCriticalExtensionOIDs()>();

     label09:
        if r19 == null goto label11;

     label10:
        $r30 = new java.util.HashSet;

        specialinvoke $r30.<java.util.HashSet: void <init>(java.util.Collection)>(r19);

        r18 = $r30;

        $r34 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier IssuingDistributionPoint>;

        $r33 = virtualinvoke $r34.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r18.<java.util.Set: boolean remove(java.lang.Object)>($r33);

        $r32 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier DeltaCRLIndicator>;

        $r36 = virtualinvoke $r32.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r18.<java.util.Set: boolean remove(java.lang.Object)>($r36);

        $z9 = interfaceinvoke r18.<java.util.Set: boolean isEmpty()>();

        if $z9 != 0 goto label19;

        $r35 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r35.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CRL contains unsupported critical extensions.");

        throw $r35;

     label11:
        if r17 == null goto label15;

     label12:
        r21 = virtualinvoke r17.<java.security.cert.X509CRL: java.util.Set getCriticalExtensionOIDs()>();

     label13:
        if r21 == null goto label15;

     label14:
        $r25 = new java.util.HashSet;

        specialinvoke $r25.<java.util.HashSet: void <init>(java.util.Collection)>(r21);

        r20 = $r25;

        $r26 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier IssuingDistributionPoint>;

        $r29 = virtualinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r20.<java.util.Set: boolean remove(java.lang.Object)>($r29);

        $r28 = <com.android.org.bouncycastle.asn1.x509.X509Extensions: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier DeltaCRLIndicator>;

        $r27 = virtualinvoke $r28.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r20.<java.util.Set: boolean remove(java.lang.Object)>($r27);

        $z6 = interfaceinvoke r20.<java.util.Set: boolean isEmpty()>();

        if $z6 != 0 goto label15;

        $r31 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r31.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Delta CRL contains unsupported critical extension.");

        throw $r31;

     label15:
        z0 = 1;

        goto label02;

     label16:
        if z0 != 0 goto label17;

        throw r11;

     label17:
        return;

     label18:
        $r42 := @caughtexception;

        r13 = $r42;

        r11 = r13;

        goto label02;

     label19:
        goto label11;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label03 to label04 with label18;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label05 to label06 with label18;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label06 to label07 with label18;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label07 to label08 with label18;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label08 to label09 with label18;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label10 to label11 with label18;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label12 to label13 with label18;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label14 to label15 with label18;
    }

    protected static void checkCRLs(com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509Certificate, java.util.Date, java.security.cert.X509Certificate, java.security.PublicKey, java.util.List) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r0, r19, $r46;
        java.security.cert.X509Certificate r1, r3;
        java.util.Date r2, $r26;
        java.security.PublicKey r4;
        java.util.List r5;
        java.lang.Exception r6, r14, r15, $r49, $r55, $r57;
        com.android.org.bouncycastle.asn1.x509.CRLDistPoint r7;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r8, r11, r13, r18, $r24, $r28, $r39, $r47, $r48, $r50, $r53, $r54, $r56, $r58;
        com.android.org.bouncycastle.jce.provider.CertStatus r9, $r22;
        com.android.org.bouncycastle.jce.provider.ReasonsMask r10, $r23;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.String r12, $r21, $r34, $r35;
        com.android.org.bouncycastle.asn1.ASN1Primitive r16, $r20;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint[] r17;
        java.lang.StringBuilder $r25, $r27, $r29, $r30, $r32, $r33, $r36;
        java.lang.String[] $r31;
        javax.security.auth.x500.X500Principal $r37;
        com.android.org.bouncycastle.asn1.ASN1InputStream $r38;
        com.android.org.bouncycastle.asn1.x509.DistributionPointName $r40;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint $r41, $r52;
        byte[] $r42;
        java.lang.Object $r43, $r51;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r44;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r45;

        r0 := @parameter0: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r1 := @parameter1: java.security.cert.X509Certificate;

        r2 := @parameter2: java.util.Date;

        r3 := @parameter3: java.security.cert.X509Certificate;

        r4 := @parameter4: java.security.PublicKey;

        r5 := @parameter5: java.util.List;

     label01:
        $r21 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CRL_DISTRIBUTION_POINTS>;

        $r20 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r21);

        r7 = staticinvoke <com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r20);

     label02:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoresFromCRLDistributionPoint(com.android.org.bouncycastle.asn1.x509.CRLDistPoint,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r7, r0);

     label03:
        $r22 = new com.android.org.bouncycastle.jce.provider.CertStatus;

        specialinvoke $r22.<com.android.org.bouncycastle.jce.provider.CertStatus: void <init>()>();

        r9 = $r22;

        $r23 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        specialinvoke $r23.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>()>();

        r10 = $r23;

        r11 = null;

        z0 = 0;

        if r7 == null goto label14;

     label04:
        r17 = virtualinvoke r7.<com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()>();

     label05:
        r11 = null;

        z0 = 0;

        if r17 == null goto label14;

        i0 = 0;

     label06:
        $i7 = lengthof r17;

        if i0 >= $i7 goto label14;

        $i6 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i6 != 11 goto label14;

        $z4 = virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z4 != 0 goto label14;

        $r51 = virtualinvoke r0.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.Object clone()>();

        r19 = (com.android.org.bouncycastle.x509.ExtendedPKIXParameters) $r51;

     label07:
        $r52 = r17[i0];

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void checkCRL(com.android.org.bouncycastle.asn1.x509.DistributionPoint,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,com.android.org.bouncycastle.jce.provider.CertStatus,com.android.org.bouncycastle.jce.provider.ReasonsMask,java.util.List)>($r52, r19, r1, r2, r3, r4, r9, r10, r5);

     label08:
        z0 = 1;

     label09:
        i0 = i0 + 1;

        goto label06;

     label10:
        $r49 := @caughtexception;

        r6 = $r49;

        $r50 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r50.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL distribution point extension could not be read.", r6);

        throw $r50;

     label11:
        $r47 := @caughtexception;

        r8 = $r47;

        $r48 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r48.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No additional CRL locations could be decoded from CRL distribution point extension.", r8);

        throw $r48;

     label12:
        $r55 := @caughtexception;

        r15 = $r55;

        $r56 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r56.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Distribution points could not be read.", r15);

        throw $r56;

     label13:
        $r54 := @caughtexception;

        r18 = $r54;

        r11 = r18;

        goto label09;

     label14:
        $i1 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i1 != 11 goto label18;

        $z3 = virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z3 != 0 goto label18;

     label15:
        $r38 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r37 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r1);

        $r42 = virtualinvoke $r37.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r38.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r42);

        r16 = virtualinvoke $r38.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

     label16:
        $r41 = new com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        $r40 = new com.android.org.bouncycastle.asn1.x509.DistributionPointName;

        $r45 = new com.android.org.bouncycastle.asn1.x509.GeneralNames;

        $r44 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        specialinvoke $r44.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(int,com.android.org.bouncycastle.asn1.ASN1Encodable)>(4, r16);

        specialinvoke $r45.<com.android.org.bouncycastle.asn1.x509.GeneralNames: void <init>(com.android.org.bouncycastle.asn1.x509.GeneralName)>($r44);

        specialinvoke $r40.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: void <init>(int,com.android.org.bouncycastle.asn1.ASN1Encodable)>(0, $r45);

        specialinvoke $r41.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: void <init>(com.android.org.bouncycastle.asn1.x509.DistributionPointName,com.android.org.bouncycastle.asn1.x509.ReasonFlags,com.android.org.bouncycastle.asn1.x509.GeneralNames)>($r40, null, null);

        $r43 = virtualinvoke r0.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.Object clone()>();

        $r46 = (com.android.org.bouncycastle.x509.ExtendedPKIXParameters) $r43;

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void checkCRL(com.android.org.bouncycastle.asn1.x509.DistributionPoint,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,com.android.org.bouncycastle.jce.provider.CertStatus,com.android.org.bouncycastle.jce.provider.ReasonsMask,java.util.List)>($r41, $r46, r1, r2, r3, r4, r9, r10, r5);

     label17:
        z0 = 1;

     label18:
        if z0 != 0 goto label23;

        $z2 = r11 instanceof com.android.org.bouncycastle.jce.provider.AnnotatedException;

        if $z2 == 0 goto label22;

        throw r11;

     label19:
        $r57 := @caughtexception;

        r14 = $r57;

     label20:
        $r58 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r58.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuer from certificate for CRL could not be reencoded.", r14);

        throw $r58;

     label21:
        $r53 := @caughtexception;

        r13 = $r53;

        r11 = r13;

        goto label18;

     label22:
        $r39 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r39.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No valid CRL found.", r11);

        throw $r39;

     label23:
        $i2 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i2 == 11 goto label24;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate revocation after ");

        $r26 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.CertStatus: java.util.Date getRevocationDate()>();

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        r12 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", reason: ");

        $r31 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String[] crlReasons>;

        $i5 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        $r35 = $r31[$i5];

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>($r34);

        throw $r28;

     label24:
        $z1 = virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.ReasonsMask: boolean isAllReasons()>();

        if $z1 != 0 goto label25;

        $i4 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i4 != 11 goto label25;

        virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.CertStatus: void setCertStatus(int)>(12);

     label25:
        $i3 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i3 != 12 goto label26;

        $r24 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r24.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Certificate status could not be determined.");

        throw $r24;

     label26:
        return;

        catch java.lang.Exception from label01 to label02 with label10;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label12;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label07 to label08 with label13;
        catch java.lang.Exception from label15 to label16 with label19;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label15 to label16 with label21;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label16 to label17 with label21;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label20 to label21 with label21;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath, int, java.util.List[], com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8;
        java.util.List[] r1;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r2, r7, r13, r15, r19, r25, r26, r28, $r46, $r61;
        java.util.List r3, r14, $r42, $r49, $r50, $r57;
        java.security.cert.X509Certificate r4;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r5, r18, $r87, $r89;
        com.android.org.bouncycastle.asn1.ASN1Sequence r6, r21, r33, $r70;
        java.util.HashMap r8, $r38;
        java.util.HashSet r9, r32, $r37, $r79;
        java.util.Iterator r10, r11, r16, r17;
        java.lang.String r12, r31, r34, $r35, $r44, $r48, $r52, $r54, $r59, $r60, $r62, $r65, $r69, $r71;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12, $z13, $z17;
        java.util.Enumeration r20;
        java.util.Set r22, r23, r27, $r58, $r66, $r77, $r80;
        java.lang.Exception r24, $r83;
        com.android.org.bouncycastle.asn1.x509.PolicyInformation r29;
        java.security.cert.CertPathValidatorException r30, $r82, $r85;
        java.lang.Object $r36, $r40, $r41, $r43, $r47, $r55, $r64, $r67, $r68, $r81;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r39, $r53;
        java.security.cert.PolicyNode $r45, $r51;
        java.util.ArrayList $r56;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r63;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier $r72, $r74;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r73, $r75, $r76;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r84, $r86, $r88;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List[];

        r2 := @parameter3: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        i1 := @parameter4: int;

        r3 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r36 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (java.security.cert.X509Certificate) $r36;

        $i8 = interfaceinvoke r3.<java.util.List: int size()>();

        i2 = $i8 - i0;

     label01:
        $r35 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        $r39 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r4, $r35);

        r6 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r39);

     label02:
        r7 = r2;

        if r6 == null goto label30;

        $r38 = new java.util.HashMap;

        specialinvoke $r38.<java.util.HashMap: void <init>()>();

        r8 = $r38;

        $r37 = new java.util.HashSet;

        specialinvoke $r37.<java.util.HashSet: void <init>()>();

        r9 = $r37;

        i3 = 0;

     label03:
        i4 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.ASN1Sequence: int size()>();

        if i3 >= i4 goto label07;

        $r76 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(i3);

        r33 = (com.android.org.bouncycastle.asn1.ASN1Sequence) $r76;

        $r75 = virtualinvoke r33.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        $r74 = (com.android.org.bouncycastle.asn1.DERObjectIdentifier) $r75;

        r34 = virtualinvoke $r74.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $r73 = virtualinvoke r33.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        $r72 = (com.android.org.bouncycastle.asn1.DERObjectIdentifier) $r73;

        r31 = virtualinvoke $r72.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z17 = interfaceinvoke r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r34);

        if $z17 != 0 goto label06;

        $r79 = new java.util.HashSet;

        specialinvoke $r79.<java.util.HashSet: void <init>()>();

        r32 = $r79;

        interfaceinvoke r32.<java.util.Set: boolean add(java.lang.Object)>(r31);

        interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r34, r32);

        interfaceinvoke r9.<java.util.Set: boolean add(java.lang.Object)>(r34);

     label04:
        i3 = i3 + 1;

        goto label03;

     label05:
        $r87 := @caughtexception;

        r5 = $r87;

        $r86 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r86.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy mappings extension could not be decoded.", r5, r0, i0);

        throw $r86;

     label06:
        $r81 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);

        $r80 = (java.util.Set) $r81;

        interfaceinvoke $r80.<java.util.Set: boolean add(java.lang.Object)>(r31);

        goto label04;

     label07:
        r10 = interfaceinvoke r9.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z4 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label30;

        $r40 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r40;

        if i1 <= 0 goto label24;

        $r49 = r1[i2];

        r16 = interfaceinvoke $r49.<java.util.List: java.util.Iterator iterator()>();

     label09:
        z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        z1 = 0;

        if z0 == 0 goto label10;

        $r68 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r28 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r68;

        $r69 = virtualinvoke r28.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z12 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z12 == 0 goto label09;

        z1 = 1;

        $r67 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12);

        $r77 = (java.util.Set) $r67;

        r28.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set expectedPolicies> = $r77;

     label10:
        if z1 != 0 goto label08;

        $r50 = r1[i2];

        r17 = interfaceinvoke $r50.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z8 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label08;

        $r47 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r47;

        $r48 = "2.5.29.32.0";

        $r52 = virtualinvoke r19.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z9 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>($r52);

        if $z9 == 0 goto label11;

     label12:
        $r54 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r53 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r4, $r54);

        r21 = (com.android.org.bouncycastle.asn1.ASN1Sequence) $r53;

     label13:
        r20 = virtualinvoke r21.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label14:
        z3 = interfaceinvoke r20.<java.util.Enumeration: boolean hasMoreElements()>();

        r23 = null;

        if z3 == 0 goto label19;

     label15:
        $r64 = interfaceinvoke r20.<java.util.Enumeration: java.lang.Object nextElement()>();

        r29 = staticinvoke <com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r64);

     label16:
        $r62 = "2.5.29.32.0";

        $r63 = virtualinvoke r29.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r71 = virtualinvoke $r63.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z13 = virtualinvoke $r62.<java.lang.String: boolean equals(java.lang.Object)>($r71);

        if $z13 == 0 goto label14;

     label17:
        $r70 = virtualinvoke r29.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        r27 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r70);

     label18:
        r23 = r27;

     label19:
        r22 = virtualinvoke r4.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        z2 = 0;

        if r22 == null goto label20;

        $r66 = virtualinvoke r4.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        $r65 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        z2 = interfaceinvoke $r66.<java.util.Set: boolean contains(java.lang.Object)>($r65);

     label20:
        $r51 = virtualinvoke r19.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        r25 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r51;

        $r60 = "2.5.29.32.0";

        $r59 = virtualinvoke r25.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z10 = virtualinvoke $r60.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z10 == 0 goto label08;

        $r61 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r56 = new java.util.ArrayList;

        specialinvoke $r56.<java.util.ArrayList: void <init>()>();

        $r55 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12);

        $r58 = (java.util.Set) $r55;

        specialinvoke $r61.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r56, i2, $r58, r25, r23, r12, z2);

        r26 = $r61;

        virtualinvoke r25.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r26);

        $r57 = r1[i2];

        interfaceinvoke $r57.<java.util.List: boolean add(java.lang.Object)>(r26);

        goto label08;

     label21:
        $r89 := @caughtexception;

        r18 = $r89;

        $r88 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r88.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Certificate policies extension could not be decoded.", r18, r0, i0);

        throw $r88;

     label22:
        $r83 := @caughtexception;

        r24 = $r83;

        $r82 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r82.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy information could not be decoded.", r24, r0, i0);

        throw $r82;

     label23:
        $r85 := @caughtexception;

        r30 = $r85;

        $r84 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r84.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy qualifier info set could not be decoded.", r30, r0, i0);

        throw $r84;

     label24:
        if i1 > 0 goto label08;

        $r42 = r1[i2];

        r11 = interfaceinvoke $r42.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label08;

        $r41 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r41;

        $r44 = virtualinvoke r13.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z7 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>(r12);

        if $z7 == 0 goto label25;

        $r45 = virtualinvoke r13.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.security.cert.PolicyNode getParent()>();

        $r46 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r45;

        virtualinvoke $r46.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void removeChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r13);

        interfaceinvoke r11.<java.util.Iterator: void remove()>();

        i5 = i2 - 1;

     label26:
        if i5 < 0 goto label25;

        r14 = r1[i5];

        i6 = 0;

     label27:
        i7 = interfaceinvoke r14.<java.util.List: int size()>();

        if i6 >= i7 goto label28;

        $r43 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>(i6);

        r15 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r43;

        $z6 = virtualinvoke r15.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z6 != 0 goto label29;

        r7 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r7, r1, r15);

        if r7 != null goto label29;

     label28:
        i5 = i5 + -1;

        goto label26;

     label29:
        i6 = i6 + 1;

        goto label27;

     label30:
        return r7;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label05;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label12 to label13 with label21;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.security.cert.CertPathValidatorException from label17 to label18 with label23;
    }

    protected static void prepareNextCertA(java.security.cert.CertPath, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2;
        java.security.cert.X509Certificate r1;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r2, $r22;
        com.android.org.bouncycastle.asn1.ASN1Sequence r3, r5;
        java.lang.Exception r4, $r23;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier r6, r7;
        java.util.List $r8;
        java.lang.Object $r9;
        java.lang.String $r10, $r15, $r16, $r17, $r18;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r11;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r12, $r13, $r14;
        boolean $z0, $z1;
        java.security.cert.CertPathValidatorException $r19, $r20;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r21, $r24;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        $r8 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (java.security.cert.X509Certificate) $r9;

     label01:
        $r10 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_MAPPINGS>;

        $r11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r10);

        r3 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r11);

     label02:
        if r3 == null goto label10;

        i1 = 0;

     label03:
        $i2 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1Sequence: int size()>();

        if i1 >= $i2 goto label10;

     label04:
        $r12 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(i1);

        r5 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r12);

        $r13 = virtualinvoke r5.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(0);

        r6 = staticinvoke <com.android.org.bouncycastle.asn1.DERObjectIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r13);

        $r14 = virtualinvoke r5.<com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)>(1);

        r7 = staticinvoke <com.android.org.bouncycastle.asn1.DERObjectIdentifier: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)>($r14);

     label05:
        $r16 = "2.5.29.32.0";

        $r15 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z0 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z0 == 0 goto label08;

        $r19 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r19.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("IssuerDomainPolicy is anyPolicy", null, r0, i0);

        throw $r19;

     label06:
        $r22 := @caughtexception;

        r2 = $r22;

        $r21 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r21.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy mappings extension could not be decoded.", r2, r0, i0);

        throw $r21;

     label07:
        $r23 := @caughtexception;

        r4 = $r23;

        $r24 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r24.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy mappings extension contents could not be decoded.", r4, r0, i0);

        throw $r24;

     label08:
        $r17 = "2.5.29.32.0";

        $r18 = virtualinvoke r7.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z1 == 0 goto label09;

        $r20 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r20.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("SubjectDomainPolicy is anyPolicy,", null, r0, i0);

        throw $r20;

     label09:
        i1 = i1 + 1;

        goto label03;

     label10:
        return;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label06;
        catch java.lang.Exception from label04 to label05 with label07;
    }

    protected static void prepareNextCertG(java.security.cert.CertPath, int, com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, $i2;
        com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator r1;
        java.security.cert.X509Certificate r2;
        java.lang.Exception r3, r9, r10, $r16, $r17, $r19;
        com.android.org.bouncycastle.asn1.ASN1Sequence r4;
        com.android.org.bouncycastle.asn1.x509.NameConstraints r5, r6;
        com.android.org.bouncycastle.asn1.x509.GeneralSubtree[] r7, r8;
        java.util.List $r11;
        java.lang.Object $r12;
        java.lang.String $r13;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r14;
        com.android.org.bouncycastle.asn1.x509.GeneralSubtree $r15;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r18, $r20, $r21;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator;

        $r11 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r12;

     label01:
        $r13 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String NAME_CONSTRAINTS>;

        $r14 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r13);

        r4 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r14);

     label02:
        r5 = null;

        if r4 == null goto label05;

     label03:
        r6 = staticinvoke <com.android.org.bouncycastle.asn1.x509.NameConstraints: com.android.org.bouncycastle.asn1.x509.NameConstraints getInstance(java.lang.Object)>(r4);

     label04:
        r5 = r6;

     label05:
        if r5 == null goto label14;

        r7 = virtualinvoke r5.<com.android.org.bouncycastle.asn1.x509.NameConstraints: com.android.org.bouncycastle.asn1.x509.GeneralSubtree[] getPermittedSubtrees()>();

        if r7 == null goto label07;

     label06:
        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void intersectPermittedSubtree(com.android.org.bouncycastle.asn1.x509.GeneralSubtree[])>(r7);

     label07:
        r8 = virtualinvoke r5.<com.android.org.bouncycastle.asn1.x509.NameConstraints: com.android.org.bouncycastle.asn1.x509.GeneralSubtree[] getExcludedSubtrees()>();

        if r8 == null goto label14;

        i1 = 0;

     label08:
        $i2 = lengthof r8;

        if i1 == $i2 goto label14;

     label09:
        $r15 = r8[i1];

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void addExcludedSubtree(com.android.org.bouncycastle.asn1.x509.GeneralSubtree)>($r15);

     label10:
        i1 = i1 + 1;

        goto label08;

     label11:
        $r17 := @caughtexception;

        r3 = $r17;

        $r20 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r20.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Name constraints extension could not be decoded.", r3, r0, i0);

        throw $r20;

     label12:
        $r16 := @caughtexception;

        r10 = $r16;

        $r18 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r18.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Permitted subtrees cannot be build from name constraints extension.", r10, r0, i0);

        throw $r18;

     label13:
        $r19 := @caughtexception;

        r9 = $r19;

        $r21 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r21.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Excluded subtrees cannot be build from name constraints extension.", r9, r0, i0);

        throw $r21;

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label09 to label10 with label13;
    }

    protected static int prepareNextCertH1(java.security.cert.CertPath, int, int)
    {
        java.security.cert.CertPath r0;
        int i0, i1;
        java.util.List $r1;
        java.lang.Object $r2;
        java.security.cert.X509Certificate $r3;
        boolean $z0;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.security.cert.X509Certificate) $r2;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>($r3);

        if $z0 != 0 goto label1;

        if i1 == 0 goto label1;

        i1 = i1 + -1;

     label1:
        return i1;
    }

    protected static int prepareNextCertH2(java.security.cert.CertPath, int, int)
    {
        java.security.cert.CertPath r0;
        int i0, i1;
        java.util.List $r1;
        java.lang.Object $r2;
        java.security.cert.X509Certificate $r3;
        boolean $z0;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.security.cert.X509Certificate) $r2;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>($r3);

        if $z0 != 0 goto label1;

        if i1 == 0 goto label1;

        i1 = i1 + -1;

     label1:
        return i1;
    }

    protected static int prepareNextCertH3(java.security.cert.CertPath, int, int)
    {
        java.security.cert.CertPath r0;
        int i0, i1;
        java.util.List $r1;
        java.lang.Object $r2;
        java.security.cert.X509Certificate $r3;
        boolean $z0;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.security.cert.X509Certificate) $r2;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>($r3);

        if $z0 != 0 goto label1;

        if i1 == 0 goto label1;

        i1 = i1 + -1;

     label1:
        return i1;
    }

    protected static int prepareNextCertI1(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, $i3;
        java.security.cert.X509Certificate r1;
        java.lang.Exception r2, $r14;
        com.android.org.bouncycastle.asn1.ASN1Sequence r3;
        java.util.Enumeration r4;
        java.lang.IllegalArgumentException r5, $r15;
        com.android.org.bouncycastle.asn1.ASN1TaggedObject r6;
        java.util.List $r7;
        java.lang.Object $r8, $r11;
        java.lang.String $r9;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r10;
        boolean $z0;
        java.math.BigInteger $r12;
        com.android.org.bouncycastle.asn1.ASN1Integer $r13;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r16, $r17;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r7 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (java.security.cert.X509Certificate) $r8;

     label1:
        $r9 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        $r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r9);

        r3 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r10);

     label2:
        if r3 == null goto label8;

        r4 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label8;

     label4:
        $r11 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r11);

        $i3 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i3 != 0 goto label3;

        $r13 = staticinvoke <com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>(r6, 0);

        $r12 = virtualinvoke $r13.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        i2 = virtualinvoke $r12.<java.math.BigInteger: int intValue()>();

     label5:
        if i2 >= i1 goto label8;

        return i2;

     label6:
        $r14 := @caughtexception;

        r2 = $r14;

        $r16 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints extension cannot be decoded.", r2, r0, i0);

        throw $r16;

     label7:
        $r15 := @caughtexception;

        r5 = $r15;

        $r17 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints extension contents cannot be decoded.", r5, r0, i0);

        throw $r17;

     label8:
        return i1;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.IllegalArgumentException from label4 to label5 with label7;
    }

    protected static int prepareNextCertI2(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, $i3;
        java.security.cert.X509Certificate r1;
        java.lang.Exception r2, $r14;
        com.android.org.bouncycastle.asn1.ASN1Sequence r3;
        java.util.Enumeration r4;
        java.lang.IllegalArgumentException r5, $r15;
        com.android.org.bouncycastle.asn1.ASN1TaggedObject r6;
        java.util.List $r7;
        java.lang.Object $r8, $r11;
        java.lang.String $r9;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r10;
        boolean $z0;
        java.math.BigInteger $r12;
        com.android.org.bouncycastle.asn1.ASN1Integer $r13;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r16, $r17;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r7 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (java.security.cert.X509Certificate) $r8;

     label1:
        $r9 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        $r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r9);

        r3 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r10);

     label2:
        if r3 == null goto label8;

        r4 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label8;

     label4:
        $r11 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1TaggedObject: com.android.org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)>($r11);

        $i3 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        if $i3 != 1 goto label3;

        $r13 = staticinvoke <com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>(r6, 0);

        $r12 = virtualinvoke $r13.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        i2 = virtualinvoke $r12.<java.math.BigInteger: int intValue()>();

     label5:
        if i2 >= i1 goto label8;

        return i2;

     label6:
        $r14 := @caughtexception;

        r2 = $r14;

        $r16 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints extension cannot be decoded.", r2, r0, i0);

        throw $r16;

     label7:
        $r15 := @caughtexception;

        r5 = $r15;

        $r17 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r17.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints extension contents cannot be decoded.", r5, r0, i0);

        throw $r17;

     label8:
        return i1;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.IllegalArgumentException from label4 to label5 with label7;
    }

    protected static int prepareNextCertJ(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2;
        java.security.cert.X509Certificate r1;
        java.lang.Exception r2, $r9;
        com.android.org.bouncycastle.asn1.ASN1Integer r3;
        java.util.List $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r7;
        java.math.BigInteger $r8;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r10;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (java.security.cert.X509Certificate) $r5;

     label1:
        $r6 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String INHIBIT_ANY_POLICY>;

        $r7 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r6);

        r3 = staticinvoke <com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)>($r7);

     label2:
        if r3 == null goto label4;

        $r8 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        i2 = virtualinvoke $r8.<java.math.BigInteger: int intValue()>();

        if i2 >= i1 goto label4;

        return i2;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r10.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Inhibit any-policy extension cannot be decoded.", r2, r0, i0);

        throw $r10;

     label4:
        return i1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static void prepareNextCertK(java.security.cert.CertPath, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        java.security.cert.X509Certificate r1;
        java.lang.Exception r2, $r10;
        com.android.org.bouncycastle.asn1.x509.BasicConstraints r3;
        java.util.List $r4;
        java.lang.Object $r5;
        java.lang.String $r6;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r7;
        java.security.cert.CertPathValidatorException $r8, $r9;
        boolean $z0;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r11;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        $r4 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (java.security.cert.X509Certificate) $r5;

     label1:
        $r6 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        $r7 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r6);

        r3 = staticinvoke <com.android.org.bouncycastle.asn1.x509.BasicConstraints: com.android.org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r7);

     label2:
        if r3 == null goto label4;

        $z0 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z0 != 0 goto label5;

        $r9 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r9.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Not a CA certificate");

        throw $r9;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        $r11 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r11.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Basic constraints extension cannot be decoded.", r2, r0, i0);

        throw $r11;

     label4:
        $r8 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r8.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("Intermediate certificate lacks BasicConstraints");

        throw $r8;

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static int prepareNextCertL(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1;
        java.util.List $r1;
        java.lang.Object $r2;
        java.security.cert.X509Certificate $r3;
        boolean $z0;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r4;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.security.cert.X509Certificate) $r2;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>($r3);

        if $z0 != 0 goto label2;

        if i1 > 0 goto label1;

        $r4 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r4.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Max path length not greater than zero", null, r0, i0);

        throw $r4;

     label1:
        i1 = i1 + -1;

     label2:
        return i1;
    }

    protected static int prepareNextCertM(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2;
        java.security.cert.X509Certificate r1;
        java.lang.Exception r2, $r9;
        com.android.org.bouncycastle.asn1.x509.BasicConstraints r3;
        java.math.BigInteger r4;
        java.util.List $r5;
        java.lang.Object $r6;
        java.lang.String $r7;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r8;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r10;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r5 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (java.security.cert.X509Certificate) $r6;

     label1:
        $r7 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r7);

        r3 = staticinvoke <com.android.org.bouncycastle.asn1.x509.BasicConstraints: com.android.org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r8);

     label2:
        if r3 == null goto label4;

        r4 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.x509.BasicConstraints: java.math.BigInteger getPathLenConstraint()>();

        if r4 == null goto label4;

        i2 = virtualinvoke r4.<java.math.BigInteger: int intValue()>();

        if i2 >= i1 goto label4;

        return i2;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r10.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Basic constraints extension cannot be decoded.", r2, r0, i0);

        throw $r10;

     label4:
        return i1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static void prepareNextCertN(java.security.cert.CertPath, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        boolean[] r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.security.cert.X509Certificate $r4;
        boolean $z0;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r5;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (java.security.cert.X509Certificate) $r3;

        r1 = virtualinvoke $r4.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if r1 == null goto label1;

        $z0 = r1[5];

        if $z0 != 0 goto label1;

        $r5 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r5.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Issuer certificate keyusage extension is critical and does not permit key signing.", null, r0, i0);

        throw $r5;

     label1:
        return;
    }

    protected static void prepareNextCertO(java.security.cert.CertPath, int, java.util.Set, java.util.List) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        java.util.Set r1;
        java.util.List r2, $r6;
        java.security.cert.X509Certificate r3;
        java.util.Iterator r4;
        java.security.cert.CertPathValidatorException r5, $r14, $r17;
        java.lang.Object $r7, $r12;
        boolean $z0, $z1;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r13, $r16;
        java.security.cert.PKIXCertPathChecker $r15;
        java.lang.Throwable $r18;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.Set;

        r2 := @parameter3: java.util.List;

        $r6 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.security.cert.X509Certificate) $r7;

        r4 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

     label2:
        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.security.cert.PKIXCertPathChecker) $r12;

        virtualinvoke $r15.<java.security.cert.PKIXCertPathChecker: void check(java.security.cert.Certificate,java.util.Collection)>(r3, r1);

     label3:
        goto label1;

     label4:
        $r14 := @caughtexception;

        r5 = $r14;

        $r17 = new java.security.cert.CertPathValidatorException;

        $r16 = virtualinvoke r5.<java.security.cert.CertPathValidatorException: java.lang.String getMessage()>();

        $r18 = virtualinvoke r5.<java.security.cert.CertPathValidatorException: java.lang.Throwable getCause()>();

        specialinvoke $r17.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r16, $r18, r0, i0);

        throw $r17;

     label5:
        $z1 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r8 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate has unsupported critical extension: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r13, null, r0, i0);

        throw $r8;

     label6:
        return;

        catch java.security.cert.CertPathValidatorException from label2 to label3 with label4;
    }

    protected static java.util.Set processCRLA1i(java.util.Date, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509Certificate, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.X509Certificate r2;
        java.security.cert.X509CRL r3;
        java.util.HashSet r4, $r12;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r5, r8, r9, r10, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25;
        com.android.org.bouncycastle.asn1.x509.CRLDistPoint r6, r7, r11;
        boolean $z0;
        java.lang.String $r13, $r17;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r14, $r16;
        java.util.Set $r15;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.security.cert.X509Certificate;

        r3 := @parameter3: java.security.cert.X509CRL;

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        r4 = $r12;

        $z0 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z0 == 0 goto label08;

     label01:
        $r13 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String FRESHEST_CRL>;

        $r14 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r13);

        r6 = staticinvoke <com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r14);

     label02:
        r7 = r6;

        if r7 != null goto label05;

     label03:
        $r17 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String FRESHEST_CRL>;

        $r16 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r3, $r17);

        r11 = staticinvoke <com.android.org.bouncycastle.asn1.x509.CRLDistPoint: com.android.org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)>($r16);

     label04:
        r7 = r11;

     label05:
        if r7 == null goto label08;

     label06:
        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoresFromCRLDistributionPoint(com.android.org.bouncycastle.asn1.x509.CRLDistPoint,com.android.org.bouncycastle.x509.ExtendedPKIXParameters)>(r7, r1);

     label07:
        $r15 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getDeltaCRLs(java.util.Date,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)>(r0, r1, r3);

        interfaceinvoke r4.<java.util.Set: boolean addAll(java.util.Collection)>($r15);

     label08:
        return r4;

     label09:
        $r21 := @caughtexception;

        r5 = $r21;

        $r24 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r24.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Freshest CRL extension could not be decoded from certificate.", r5);

        throw $r24;

     label10:
        $r18 := @caughtexception;

        r10 = $r18;

        $r20 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r20.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Freshest CRL extension could not be decoded from CRL.", r10);

        throw $r20;

     label11:
        $r23 := @caughtexception;

        r8 = $r23;

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No new delta CRL locations could be added from Freshest CRL extension.", r8);

        throw $r25;

     label12:
        $r19 := @caughtexception;

        r9 = $r19;

        $r22 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r22.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Exception obtaining delta CRLs.", r9);

        throw $r22;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label09;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label03 to label04 with label10;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label06 to label07 with label11;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label07 to label08 with label12;
    }

    protected static java.util.Set[] processCRLA1ii(java.util.Date, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.security.cert.X509Certificate, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.security.cert.X509Certificate r2;
        java.security.cert.X509CRL r3;
        java.util.HashSet r4, $r9;
        com.android.org.bouncycastle.x509.X509CRLStoreSelector r5, $r10;
        java.io.IOException r6, $r16;
        java.util.Set r7, $r14;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r8, $r18, $r21, $r23;
        javax.security.auth.x500.X500Principal $r11;
        byte[] $r12;
        com.android.org.bouncycastle.jce.provider.PKIXCRLUtil $r13;
        boolean $z0;
        java.util.Set[] $r15;
        java.lang.StringBuilder $r17, $r19, $r20;
        java.lang.String $r22;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.security.cert.X509Certificate;

        r3 := @parameter3: java.security.cert.X509CRL;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r4 = $r9;

        $r10 = new com.android.org.bouncycastle.x509.X509CRLStoreSelector;

        specialinvoke $r10.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void <init>()>();

        r5 = $r10;

        virtualinvoke r5.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setCertificateChecking(java.security.cert.X509Certificate)>(r2);

     label1:
        $r11 = virtualinvoke r3.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r12 = virtualinvoke $r11.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r5.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void addIssuerName(byte[])>($r12);

     label2:
        virtualinvoke r5.<com.android.org.bouncycastle.x509.X509CRLStoreSelector: void setCompleteCRLEnabled(boolean)>(1);

        $r13 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: com.android.org.bouncycastle.jce.provider.PKIXCRLUtil CRL_UTIL>;

        r7 = virtualinvoke $r13.<com.android.org.bouncycastle.jce.provider.PKIXCRLUtil: java.util.Set findCRLs(com.android.org.bouncycastle.x509.X509CRLStoreSelector,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date)>(r5, r1, r0);

        $z0 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z0 == 0 goto label4;

     label3:
        $r14 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getDeltaCRLs(java.util.Date,com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)>(r0, r1, r3);

        interfaceinvoke r4.<java.util.Set: boolean addAll(java.util.Collection)>($r14);

     label4:
        $r15 = newarray (java.util.Set)[2];

        $r15[0] = r7;

        $r15[1] = r4;

        return $r15;

     label5:
        $r16 := @caughtexception;

        r6 = $r16;

        $r18 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot extract issuer from CRL.");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>($r22, r6);

        throw $r18;

     label6:
        $r21 := @caughtexception;

        r8 = $r21;

        $r23 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Exception obtaining delta CRLs.", r8);

        throw $r23;

        catch java.io.IOException from label1 to label2 with label5;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label3 to label4 with label6;
    }

    protected static void processCRLB1(com.android.org.bouncycastle.asn1.x509.DistributionPoint, java.lang.Object, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        java.lang.Object r1;
        java.security.cert.X509CRL r2;
        com.android.org.bouncycastle.asn1.ASN1Primitive r3, $r18;
        boolean z0, z1, z2, z3, z4;
        byte[] r4, $r21;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r5;
        int i0, $i1, $i2;
        java.io.IOException r6, $r22;
        java.lang.String $r7;
        javax.security.auth.x500.X500Principal $r8, $r10, $r11;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r9, $r13;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r12, $r14, $r16, $r23;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r15, $r17;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r19;
        com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint $r20;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.security.cert.X509CRL;

        $r7 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        r3 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r7);

        z0 = 0;

        if r3 == null goto label01;

        $r20 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>(r3);

        z4 = virtualinvoke $r20.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean isIndirectCRL()>();

        z0 = 0;

        if z4 == 0 goto label01;

        z0 = 1;

     label01:
        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r2);

        r4 = virtualinvoke $r8.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        z1 = 0;

        $r9 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        if $r9 == null goto label09;

        $r13 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        r5 = virtualinvoke $r13.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i0 = 0;

     label02:
        $i1 = lengthof r5;

        if i0 >= $i1 goto label07;

        $r15 = r5[i0];

        $i2 = virtualinvoke $r15.<com.android.org.bouncycastle.asn1.x509.GeneralName: int getTagNo()>();

        if $i2 != 4 goto label05;

     label03:
        $r17 = r5[i0];

        $r19 = virtualinvoke $r17.<com.android.org.bouncycastle.asn1.x509.GeneralName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r18 = interfaceinvoke $r19.<com.android.org.bouncycastle.asn1.ASN1Encodable: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r21 = virtualinvoke $r18.<com.android.org.bouncycastle.asn1.ASN1Primitive: byte[] getEncoded()>();

        z3 = staticinvoke <com.android.org.bouncycastle.util.Arrays: boolean areEqual(byte[],byte[])>($r21, r4);

     label04:
        if z3 == 0 goto label05;

        z1 = 1;

     label05:
        i0 = i0 + 1;

        goto label02;

     label06:
        $r22 := @caughtexception;

        r6 = $r22;

        $r23 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("CRL issuer information from distribution point cannot be decoded.", r6);

        throw $r23;

     label07:
        if z1 == 0 goto label08;

        if z0 != 0 goto label08;

        $r16 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Distribution point contains cRLIssuer field but CRL is not indirect.");

        throw $r16;

     label08:
        if z1 != 0 goto label10;

        $r14 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CRL issuer of CRL does not match CRL issuer of distribution point.");

        throw $r14;

     label09:
        $r11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r2);

        $r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r1);

        z2 = virtualinvoke $r11.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r10);

        z1 = 0;

        if z2 == 0 goto label10;

        z1 = 1;

     label10:
        if z1 != 0 goto label11;

        $r12 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r12.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Cannot find matching CRL issuer for certificate.");

        throw $r12;

     label11:
        return;

        catch java.io.IOException from label03 to label04 with label06;
    }

    protected static void processCRLB2(com.android.org.bouncycastle.asn1.x509.DistributionPoint, java.lang.Object, java.security.cert.X509CRL) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r0;
        java.lang.Object r1, $r50, $r71;
        java.security.cert.X509CRL r2;
        java.lang.Exception r3, r5, $r74, $r78;
        com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint r4, $r27;
        com.android.org.bouncycastle.asn1.x509.BasicConstraints r6;
        com.android.org.bouncycastle.asn1.x509.DistributionPointName r7, r13, $r23, $r29;
        java.util.ArrayList r8, $r30;
        com.android.org.bouncycastle.asn1.ASN1EncodableVector r9, r18, $r46, $r58;
        java.io.IOException r10, r15, $r76, $r80;
        java.util.Enumeration r11, r16;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r12, r14, r17;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12;
        java.lang.String $r19, $r24;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r20, $r22, $r40, $r44, $r59;
        java.security.cert.X509Extension $r21;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r25, $r26, $r28, $r31, $r34, $r37, $r73, $r75, $r77, $r79;
        com.android.org.bouncycastle.asn1.x509.GeneralNames $r32, $r33, $r41, $r52, $r62, $r70;
        com.android.org.bouncycastle.asn1.x509.GeneralName $r35, $r36, $r42, $r48, $r56, $r64, $r68;
        javax.security.auth.x500.X500Principal $r38, $r57;
        byte[] $r39, $r60;
        com.android.org.bouncycastle.asn1.x509.X509Name $r43, $r55, $r63;
        com.android.org.bouncycastle.asn1.ASN1Sequence $r45, $r47, $r67;
        com.android.org.bouncycastle.asn1.ASN1Encodable $r49, $r53, $r54, $r61, $r66, $r69, $r72;
        com.android.org.bouncycastle.asn1.DERSequence $r51, $r65;

        r0 := @parameter0: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.security.cert.X509CRL;

     label01:
        $r19 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r20 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r19);

        r4 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r20);

     label02:
        if r4 == null goto label36;

        $r23 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if $r23 == null goto label30;

        $r27 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>(r4);

        r7 = virtualinvoke $r27.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r8 = $r30;

        $i8 = virtualinvoke r7.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i8 != 0 goto label05;

        $r69 = virtualinvoke r7.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r70 = staticinvoke <com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r69);

        r17 = virtualinvoke $r70.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i6 = 0;

     label03:
        $i11 = lengthof r17;

        if i6 >= $i11 goto label05;

        $r68 = r17[i6];

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r68);

        i6 = i6 + 1;

        goto label03;

     label04:
        $r78 := @caughtexception;

        r3 = $r78;

        $r77 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r77.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension could not be decoded.", r3);

        throw $r77;

     label05:
        $i7 = virtualinvoke r7.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i7 != 1 goto label11;

        $r58 = new com.android.org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r58.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        r9 = $r58;

     label06:
        $r57 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r2);

        $r60 = virtualinvoke $r57.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        $r59 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r60);

        $r67 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r59);

        r11 = virtualinvoke $r67.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label07:
        $z12 = interfaceinvoke r11.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z12 == 0 goto label10;

        $r71 = interfaceinvoke r11.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r72 = (com.android.org.bouncycastle.asn1.ASN1Encodable) $r71;

        virtualinvoke r9.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r72);

     label08:
        goto label07;

     label09:
        $r76 := @caughtexception;

        r10 = $r76;

        $r75 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r75.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read CRL issuer.", r10);

        throw $r75;

     label10:
        $r66 = virtualinvoke r7.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        virtualinvoke r9.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r66);

        $r64 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        $r65 = new com.android.org.bouncycastle.asn1.DERSequence;

        specialinvoke $r65.<com.android.org.bouncycastle.asn1.DERSequence: void <init>(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>(r9);

        $r63 = staticinvoke <com.android.org.bouncycastle.asn1.x509.X509Name: com.android.org.bouncycastle.asn1.x509.X509Name getInstance(java.lang.Object)>($r65);

        specialinvoke $r64.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(com.android.org.bouncycastle.asn1.x509.X509Name)>($r63);

        interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r64);

     label11:
        $r29 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        if $r29 == null goto label25;

        r13 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.DistributionPointName getDistributionPoint()>();

        i2 = virtualinvoke r13.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        r14 = null;

        if i2 != 0 goto label12;

        $r61 = virtualinvoke r13.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r62 = staticinvoke <com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r61);

        r14 = virtualinvoke $r62.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

     label12:
        $i9 = virtualinvoke r13.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: int getType()>();

        if $i9 != 1 goto label21;

        $r41 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        if $r41 == null goto label16;

        $r52 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        r14 = virtualinvoke $r52.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

     label13:
        i5 = 0;

     label14:
        $i10 = lengthof r14;

        if i5 >= $i10 goto label21;

        $r48 = r14[i5];

        $r49 = virtualinvoke $r48.<com.android.org.bouncycastle.asn1.x509.GeneralName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        $r44 = interfaceinvoke $r49.<com.android.org.bouncycastle.asn1.ASN1Encodable: com.android.org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()>();

        $r45 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r44);

        r16 = virtualinvoke $r45.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r46 = new com.android.org.bouncycastle.asn1.ASN1EncodableVector;

        specialinvoke $r46.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void <init>()>();

        r18 = $r46;

     label15:
        $z10 = interfaceinvoke r16.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z10 == 0 goto label20;

        $r50 = interfaceinvoke r16.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r53 = (com.android.org.bouncycastle.asn1.ASN1Encodable) $r50;

        virtualinvoke r18.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r53);

        goto label15;

     label16:
        r14 = newarray (com.android.org.bouncycastle.asn1.x509.GeneralName)[1];

     label17:
        $r42 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        $r43 = new com.android.org.bouncycastle.asn1.x509.X509Name;

        $r38 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r1);

        $r39 = virtualinvoke $r38.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        $r40 = staticinvoke <com.android.org.bouncycastle.asn1.ASN1Sequence: com.android.org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])>($r39);

        $r47 = (com.android.org.bouncycastle.asn1.ASN1Sequence) $r40;

        specialinvoke $r43.<com.android.org.bouncycastle.asn1.x509.X509Name: void <init>(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r47);

        specialinvoke $r42.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(com.android.org.bouncycastle.asn1.x509.X509Name)>($r43);

        r14[0] = $r42;

     label18:
        goto label13;

     label19:
        $r80 := @caughtexception;

        r15 = $r80;

        $r79 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r79.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not read certificate issuer.", r15);

        throw $r79;

     label20:
        $r54 = virtualinvoke r13.<com.android.org.bouncycastle.asn1.x509.DistributionPointName: com.android.org.bouncycastle.asn1.ASN1Encodable getName()>();

        virtualinvoke r18.<com.android.org.bouncycastle.asn1.ASN1EncodableVector: void add(com.android.org.bouncycastle.asn1.ASN1Encodable)>($r54);

        $r56 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        $r55 = new com.android.org.bouncycastle.asn1.x509.X509Name;

        $r51 = new com.android.org.bouncycastle.asn1.DERSequence;

        specialinvoke $r51.<com.android.org.bouncycastle.asn1.DERSequence: void <init>(com.android.org.bouncycastle.asn1.ASN1EncodableVector)>(r18);

        specialinvoke $r55.<com.android.org.bouncycastle.asn1.x509.X509Name: void <init>(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r51);

        specialinvoke $r56.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(com.android.org.bouncycastle.asn1.x509.X509Name)>($r55);

        r14[i5] = $r56;

        i5 = i5 + 1;

        goto label14;

     label21:
        z1 = 0;

        if r14 == null goto label23;

        i3 = 0;

     label22:
        i4 = lengthof r14;

        z1 = 0;

        if i3 >= i4 goto label23;

        $r36 = r14[i3];

        $z9 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>($r36);

        if $z9 == 0 goto label24;

        z1 = 1;

     label23:
        if z1 != 0 goto label30;

        $r37 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r37.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No match for certificate CRL issuing distribution point name to cRLIssuer CRL distribution point.");

        throw $r37;

     label24:
        i3 = i3 + 1;

        goto label22;

     label25:
        $r33 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        if $r33 != null goto label26;

        $r34 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r34.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Either the cRLIssuer or the distributionPoint field must be contained in DistributionPoint.");

        throw $r34;

     label26:
        $r32 = virtualinvoke r0.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.GeneralNames getCRLIssuer()>();

        r12 = virtualinvoke $r32.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

        i0 = 0;

     label27:
        i1 = lengthof r12;

        z0 = 0;

        if i0 >= i1 goto label28;

        $r35 = r12[i0];

        $z8 = interfaceinvoke r8.<java.util.List: boolean contains(java.lang.Object)>($r35);

        if $z8 == 0 goto label29;

        z0 = 1;

     label28:
        if z0 != 0 goto label30;

        $r31 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r31.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No match for certificate CRL issuing distribution point name to cRLIssuer CRL distribution point.");

        throw $r31;

     label29:
        i0 = i0 + 1;

        goto label27;

     label30:
        $r21 = (java.security.cert.X509Extension) r1;

        $r24 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String BASIC_CONSTRAINTS>;

        $r22 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>($r21, $r24);

        r6 = staticinvoke <com.android.org.bouncycastle.asn1.x509.BasicConstraints: com.android.org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)>($r22);

     label31:
        $z3 = r1 instanceof java.security.cert.X509Certificate;

        if $z3 == 0 goto label35;

        $z5 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsUserCerts()>();

        if $z5 == 0 goto label33;

        if r6 == null goto label33;

        $z7 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z7 == 0 goto label33;

        $r28 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r28.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CA Cert CRL only contains user certificates.");

        throw $r28;

     label32:
        $r74 := @caughtexception;

        r5 = $r74;

        $r73 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r73.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Basic constraints extension could not be decoded.", r5);

        throw $r73;

     label33:
        $z6 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsCACerts()>();

        if $z6 == 0 goto label35;

        if r6 == null goto label34;

        $z4 = virtualinvoke r6.<com.android.org.bouncycastle.asn1.x509.BasicConstraints: boolean isCA()>();

        if $z4 != 0 goto label35;

     label34:
        $r26 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r26.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("End CRL only contains CA certificates.");

        throw $r26;

     label35:
        $z2 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean onlyContainsAttributeCerts()>();

        if $z2 == 0 goto label36;

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("onlyContainsAttributeCerts boolean is asserted.");

        throw $r25;

     label36:
        return;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.io.IOException from label06 to label07 with label09;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Exception from label30 to label31 with label32;
    }

    protected static void processCRLC(java.security.cert.X509CRL, java.security.cert.X509CRL, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509CRL r0, r1;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r2;
        java.lang.Exception r3, r5, $r26, $r30;
        com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint r4, r6;
        boolean z0, z1, $z2, $z3, $z4;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r7, r9, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r31;
        com.android.org.bouncycastle.asn1.ASN1Primitive r8, r10, $r12, $r15;
        java.lang.String $r11, $r16, $r17, $r18;
        javax.security.auth.x500.X500Principal $r13, $r14;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 := @parameter1: java.security.cert.X509CRL;

        r2 := @parameter2: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        if r0 != null goto label02;

     label01:
        return;

     label02:
        $r11 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r12 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r11);

        r4 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r12);

     label03:
        $z2 = virtualinvoke r2.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z2 == 0 goto label01;

        $r13 = virtualinvoke r0.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r14 = virtualinvoke r1.<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z3 = virtualinvoke $r13.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r14);

        if $z3 != 0 goto label05;

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Complete CRL issuer does not match delta CRL issuer.");

        throw $r25;

     label04:
        $r30 := @caughtexception;

        r3 = $r30;

        $r31 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r31.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension could not be decoded.", r3);

        throw $r31;

     label05:
        $r16 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r15 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r0, $r16);

        r6 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r15);

     label06:
        if r4 != null goto label09;

        z0 = 0;

        if r6 != null goto label07;

        z0 = 1;

     label07:
        if z0 != 0 goto label10;

        $r24 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r24.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Issuing distribution point extension from delta CRL and complete CRL does not match.");

        throw $r24;

     label08:
        $r26 := @caughtexception;

        r5 = $r26;

        $r27 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r27.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension from delta CRL could not be decoded.", r5);

        throw $r27;

     label09:
        z1 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: boolean equals(java.lang.Object)>(r6);

        z0 = 0;

        if z1 == 0 goto label07;

        z0 = 1;

        goto label07;

     label10:
        $r17 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String AUTHORITY_KEY_IDENTIFIER>;

        r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r17);

     label11:
        $r18 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String AUTHORITY_KEY_IDENTIFIER>;

        r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r0, $r18);

     label12:
        if r8 != null goto label15;

        $r20 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r20.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("CRL authority key identifier is null.");

        throw $r20;

     label13:
        $r22 := @caughtexception;

        r7 = $r22;

        $r23 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r23.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Authority key identifier extension could not be extracted from complete CRL.", r7);

        throw $r23;

     label14:
        $r28 := @caughtexception;

        r9 = $r28;

        $r29 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r29.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Authority key identifier extension could not be extracted from delta CRL.", r9);

        throw $r29;

     label15:
        if r10 != null goto label16;

        $r21 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r21.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Delta CRL authority key identifier is null.");

        throw $r21;

     label16:
        $z4 = virtualinvoke r8.<com.android.org.bouncycastle.asn1.ASN1Primitive: boolean equals(java.lang.Object)>(r10);

        if $z4 != 0 goto label01;

        $r19 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r19.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Delta CRL authority key identifier does not match complete CRL authority key identifier.");

        throw $r19;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label05 to label06 with label08;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label10 to label11 with label13;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label11 to label12 with label14;
    }

    protected static com.android.org.bouncycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL, com.android.org.bouncycastle.asn1.x509.DistributionPoint) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509CRL r0;
        com.android.org.bouncycastle.asn1.x509.DistributionPoint r1;
        java.lang.Exception r2, $r23;
        com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint r3;
        com.android.org.bouncycastle.jce.provider.ReasonsMask r4, r5, $r10, $r12, $r14, $r16, $r20, $r22, $r24;
        java.lang.String $r6;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r7;
        com.android.org.bouncycastle.asn1.x509.ReasonFlags $r8, $r9, $r11, $r13, $r15, $r17, $r18, $r19, $r21;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r25;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 := @parameter1: com.android.org.bouncycastle.asn1.x509.DistributionPoint;

     label01:
        $r6 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String ISSUING_DISTRIBUTION_POINT>;

        $r7 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r0, $r6);

        r3 = staticinvoke <com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)>($r7);

     label02:
        if r3 == null goto label04;

        $r18 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons()>();

        if $r18 == null goto label04;

        $r17 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        if $r17 == null goto label04;

        $r20 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        $r19 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        specialinvoke $r20.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>(com.android.org.bouncycastle.asn1.x509.ReasonFlags)>($r19);

        $r22 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        $r21 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons()>();

        specialinvoke $r22.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>(com.android.org.bouncycastle.asn1.x509.ReasonFlags)>($r21);

        $r24 = virtualinvoke $r20.<com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask intersect(com.android.org.bouncycastle.jce.provider.ReasonsMask)>($r22);

        return $r24;

     label03:
        $r23 := @caughtexception;

        r2 = $r23;

        $r25 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r25.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuing distribution point extension could not be decoded.", r2);

        throw $r25;

     label04:
        if r3 == null goto label05;

        $r15 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons()>();

        if $r15 != null goto label06;

     label05:
        $r8 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        if $r8 != null goto label06;

        $r16 = <com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask allReasons>;

        return $r16;

     label06:
        $r9 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        if $r9 != null goto label09;

        r4 = <com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask allReasons>;

     label07:
        if r3 != null goto label10;

        r5 = <com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask allReasons>;

     label08:
        $r14 = virtualinvoke r4.<com.android.org.bouncycastle.jce.provider.ReasonsMask: com.android.org.bouncycastle.jce.provider.ReasonsMask intersect(com.android.org.bouncycastle.jce.provider.ReasonsMask)>(r5);

        return $r14;

     label09:
        $r10 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        $r11 = virtualinvoke r1.<com.android.org.bouncycastle.asn1.x509.DistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getReasons()>();

        specialinvoke $r10.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>(com.android.org.bouncycastle.asn1.x509.ReasonFlags)>($r11);

        r4 = $r10;

        goto label07;

     label10:
        $r12 = new com.android.org.bouncycastle.jce.provider.ReasonsMask;

        $r13 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.x509.IssuingDistributionPoint: com.android.org.bouncycastle.asn1.x509.ReasonFlags getOnlySomeReasons()>();

        specialinvoke $r12.<com.android.org.bouncycastle.jce.provider.ReasonsMask: void <init>(com.android.org.bouncycastle.asn1.x509.ReasonFlags)>($r13);

        r5 = $r12;

        goto label08;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    protected static java.util.Set processCRLF(java.security.cert.X509CRL, java.lang.Object, java.security.cert.X509Certificate, java.security.PublicKey, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.util.List) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509CRL r0;
        java.lang.Object r1, $r40, $r42, $r44, $r50;
        java.security.cert.X509Certificate r2, r18, $r43;
        java.security.PublicKey r3, $r53;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r4, r25, $r46;
        java.util.List r5, r30, $r31, $r33, $r34;
        com.android.org.bouncycastle.x509.X509CertStoreSelector r6, r26, $r27, $r49;
        java.io.IOException r7, $r59;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r8, r9, r10, r15, r19, r24, $r41, $r45, $r52, $r58, $r60, $r61, $r65;
        java.util.Collection r11, $r35, $r36;
        java.util.Iterator r12;
        java.util.ArrayList r13, r14, $r37, $r39;
        java.util.HashSet r16, $r38;
        boolean[] r17;
        int i0, $i1, $i2;
        java.security.cert.CertPathBuilderException r20, $r62, $r64;
        java.security.cert.CertPathValidatorException r21, $r51, $r63;
        java.lang.Exception r22, $r55, $r56;
        java.security.cert.CertPathBuilder r23;
        javax.security.auth.x500.X500Principal $r28;
        com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters r29;
        byte[] $r32;
        boolean $z3, $z4, $z5, $z7, $z8, $z9;
        java.security.cert.CertPathBuilderResult $r47;
        java.security.cert.CertPath $r48;
        java.lang.RuntimeException $r54;
        java.lang.String $r57;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.security.cert.X509Certificate;

        r3 := @parameter3: java.security.PublicKey;

        r4 := @parameter4: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r5 := @parameter5: java.util.List;

        $r27 = new com.android.org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r27.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        r6 = $r27;

     label01:
        $r28 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)>(r0);

        $r32 = virtualinvoke $r28.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke r6.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void setSubject(byte[])>($r32);

     label02:
        $r33 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getStores()>();

        r11 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r6, $r33);

        $r31 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getAdditionalStores()>();

        $r36 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r6, $r31);

        interfaceinvoke r11.<java.util.Collection: boolean addAll(java.util.Collection)>($r36);

        $r34 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.util.List getCertStores()>();

        $r35 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(com.android.org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>(r6, $r34);

        interfaceinvoke r11.<java.util.Collection: boolean addAll(java.util.Collection)>($r35);

     label03:
        interfaceinvoke r11.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        r12 = interfaceinvoke r11.<java.util.Collection: java.util.Iterator iterator()>();

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        r14 = $r37;

        $r39 = new java.util.ArrayList;

        specialinvoke $r39.<java.util.ArrayList: void <init>()>();

        r13 = $r39;

     label04:
        $z3 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label19;

        $r44 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.security.cert.X509Certificate) $r44;

        $z9 = virtualinvoke r18.<java.security.cert.X509Certificate: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label07;

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>(r18);

        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label04;

     label05:
        $r59 := @caughtexception;

        r7 = $r59;

        $r58 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r58.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Subject criteria for certificate selector to find issuer certificate for CRL could not be set.", r7);

        r8 = $r58;

        throw r8;

     label06:
        $r61 := @caughtexception;

        r9 = $r61;

        $r60 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r60.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Issuer certificate for CRL cannot be searched.", r9);

        r10 = $r60;

        throw r10;

     label07:
        r23 = staticinvoke <java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.lang.String)>("PKIX", "BC");

        $r49 = new com.android.org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r49.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        r26 = $r49;

     label08:
        virtualinvoke r26.<com.android.org.bouncycastle.x509.X509CertStoreSelector: void setCertificate(java.security.cert.X509Certificate)>(r18);

        $r50 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.Object clone()>();

        r25 = (com.android.org.bouncycastle.x509.ExtendedPKIXParameters) $r50;

        virtualinvoke r25.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: void setTargetCertConstraints(java.security.cert.CertSelector)>(r26);

        $r46 = staticinvoke <com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: com.android.org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)>(r25);

        r29 = (com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters) $r46;

        $z8 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>(r18);

        if $z8 == 0 goto label11;

        virtualinvoke r29.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: void setRevocationEnabled(boolean)>(0);

     label09:
        $r47 = virtualinvoke r23.<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilderResult build(java.security.cert.CertPathParameters)>(r29);

        $r48 = interfaceinvoke $r47.<java.security.cert.CertPathBuilderResult: java.security.cert.CertPath getCertPath()>();

        r30 = virtualinvoke $r48.<java.security.cert.CertPath: java.util.List getCertificates()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>(r18);

        $r53 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.PublicKey getNextWorkingKey(java.util.List,int)>(r30, 0);

        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>($r53);

     label10:
        goto label04;

     label11:
        virtualinvoke r29.<com.android.org.bouncycastle.x509.ExtendedPKIXBuilderParameters: void setRevocationEnabled(boolean)>(1);

     label12:
        goto label09;

     label13:
        $r62 := @caughtexception;

        r20 = $r62;

     label14:
        $r65 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r65.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Internal error.", r20);

        r19 = $r65;

        throw r19;

     label15:
        $r63 := @caughtexception;

        r21 = $r63;

     label16:
        $r52 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r52.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Public key of issuer certificate of CRL could not be retrieved.", r21);

        r24 = $r52;

        throw r24;

     label17:
        $r55 := @caughtexception;

        r22 = $r55;

     label18:
        $r54 = new java.lang.RuntimeException;

        $r57 = virtualinvoke r22.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r54.<java.lang.RuntimeException: void <init>(java.lang.String)>($r57);

        throw $r54;

     label19:
        $r38 = new java.util.HashSet;

        specialinvoke $r38.<java.util.HashSet: void <init>()>();

        r16 = $r38;

        r15 = null;

        i0 = 0;

     label20:
        $i1 = interfaceinvoke r14.<java.util.List: int size()>();

        if i0 >= $i1 goto label24;

        $r40 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>(i0);

        $r43 = (java.security.cert.X509Certificate) $r40;

        r17 = virtualinvoke $r43.<java.security.cert.X509Certificate: boolean[] getKeyUsage()>();

        if r17 == null goto label23;

        $i2 = lengthof r17;

        if $i2 < 7 goto label21;

        $z7 = r17[6];

        if $z7 != 0 goto label23;

     label21:
        $r45 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r45.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Issuer certificate key usage extension does not permit CRL signing.");

        r15 = $r45;

     label22:
        i0 = i0 + 1;

        goto label20;

     label23:
        $r42 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i0);

        interfaceinvoke r16.<java.util.Set: boolean add(java.lang.Object)>($r42);

        goto label22;

     label24:
        $z5 = interfaceinvoke r16.<java.util.Set: boolean isEmpty()>();

        if $z5 == 0 goto label25;

        if r15 != null goto label25;

        $r41 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r41.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("Cannot find a valid issuer certificate.");

        throw $r41;

     label25:
        $z4 = interfaceinvoke r16.<java.util.Set: boolean isEmpty()>();

        if $z4 == 0 goto label26;

        if r15 == null goto label26;

        throw r15;

     label26:
        return r16;

     label27:
        $r56 := @caughtexception;

        r22 = $r56;

        goto label18;

     label28:
        $r51 := @caughtexception;

        r21 = $r51;

        goto label16;

     label29:
        $r64 := @caughtexception;

        r20 = $r64;

        goto label14;

        catch java.io.IOException from label01 to label02 with label05;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label02 to label03 with label06;
        catch java.security.cert.CertPathBuilderException from label07 to label08 with label29;
        catch java.security.cert.CertPathValidatorException from label07 to label08 with label15;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.security.cert.CertPathBuilderException from label08 to label09 with label13;
        catch java.security.cert.CertPathValidatorException from label08 to label09 with label28;
        catch java.lang.Exception from label08 to label09 with label27;
        catch java.security.cert.CertPathBuilderException from label09 to label10 with label13;
        catch java.security.cert.CertPathValidatorException from label09 to label10 with label28;
        catch java.lang.Exception from label09 to label10 with label27;
        catch java.security.cert.CertPathBuilderException from label11 to label12 with label13;
        catch java.security.cert.CertPathValidatorException from label11 to label12 with label28;
        catch java.lang.Exception from label11 to label12 with label27;
    }

    protected static java.security.PublicKey processCRLG(java.security.cert.X509CRL, java.util.Set) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.security.cert.X509CRL r0;
        java.util.Set r1;
        java.lang.Exception r2, r5, $r8;
        java.util.Iterator r3;
        java.security.PublicKey r4;
        boolean $z0;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r6;
        java.lang.Object $r7;

        r0 := @parameter0: java.security.cert.X509CRL;

        r1 := @parameter1: java.util.Set;

        r2 = null;

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.PublicKey) $r7;

     label2:
        virtualinvoke r0.<java.security.cert.X509CRL: void verify(java.security.PublicKey)>(r4);

     label3:
        return r4;

     label4:
        $r8 := @caughtexception;

        r5 = $r8;

        r2 = r5;

        goto label1;

     label5:
        $r6 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r6.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot verify CRL.", r2);

        throw $r6;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected static java.security.cert.X509CRL processCRLH(java.util.Set, java.security.PublicKey) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Set r0;
        java.security.PublicKey r1;
        java.lang.Exception r2, r5, $r8;
        java.util.Iterator r3;
        java.security.cert.X509CRL r4;
        boolean $z0;
        com.android.org.bouncycastle.jce.provider.AnnotatedException $r6;
        java.lang.Object $r7;

        r0 := @parameter0: java.util.Set;

        r1 := @parameter1: java.security.PublicKey;

        r2 = null;

        r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.cert.X509CRL) $r7;

     label2:
        virtualinvoke r4.<java.security.cert.X509CRL: void verify(java.security.PublicKey)>(r1);

     label3:
        return r4;

     label4:
        $r8 := @caughtexception;

        r5 = $r8;

        r2 = r5;

        goto label1;

     label5:
        if r2 == null goto label6;

        $r6 = new com.android.org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r6.<com.android.org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot verify delta CRL.", r2);

        throw $r6;

     label6:
        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected static void processCRLI(java.util.Date, java.security.cert.X509CRL, java.lang.Object, com.android.org.bouncycastle.jce.provider.CertStatus, com.android.org.bouncycastle.x509.ExtendedPKIXParameters) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        java.security.cert.X509CRL r1;
        java.lang.Object r2;
        com.android.org.bouncycastle.jce.provider.CertStatus r3;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r4;
        boolean $z0;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.security.cert.X509CRL;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.android.org.bouncycastle.jce.provider.CertStatus;

        r4 := @parameter4: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        $z0 = virtualinvoke r4.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isUseDeltasEnabled()>();

        if $z0 == 0 goto label1;

        if r1 == null goto label1;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,com.android.org.bouncycastle.jce.provider.CertStatus)>(r0, r1, r2, r3);

     label1:
        return;
    }

    protected static void processCRLJ(java.util.Date, java.security.cert.X509CRL, java.lang.Object, com.android.org.bouncycastle.jce.provider.CertStatus) throws com.android.org.bouncycastle.jce.provider.AnnotatedException
    {
        java.util.Date r0;
        java.security.cert.X509CRL r1;
        java.lang.Object r2;
        com.android.org.bouncycastle.jce.provider.CertStatus r3;
        int $i0;

        r0 := @parameter0: java.util.Date;

        r1 := @parameter1: java.security.cert.X509CRL;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.android.org.bouncycastle.jce.provider.CertStatus;

        $i0 = virtualinvoke r3.<com.android.org.bouncycastle.jce.provider.CertStatus: int getCertStatus()>();

        if $i0 != 11 goto label1;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,com.android.org.bouncycastle.jce.provider.CertStatus)>(r0, r1, r2, r3);

     label1:
        return;
    }

    protected static void processCertA(java.security.cert.CertPath, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, int, java.security.PublicKey, boolean, javax.security.auth.x500.X500Principal, java.security.cert.X509Certificate) throws com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException
    {
        java.security.cert.CertPath r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        int i0;
        java.security.PublicKey r2;
        boolean z0, $z1, $z2;
        javax.security.auth.x500.X500Principal r3, $r15, $r20;
        java.security.cert.X509Certificate r4, r6;
        java.util.List r5;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r7, r10, $r32, $r40;
        java.security.cert.CertificateNotYetValidException r8, $r29;
        java.security.cert.CertificateExpiredException r9, $r38;
        java.lang.Throwable r11, $r36;
        java.security.GeneralSecurityException r12, $r47;
        java.util.Date $r13, $r26;
        java.lang.Object $r14;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r16, $r30, $r37, $r39, $r41, $r46;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r22, $r24, $r27, $r28, $r34, $r42, $r44, $r45;
        java.lang.String $r23, $r25, $r31, $r33, $r35, $r43, $r48;

        r0 := @parameter0: java.security.cert.CertPath;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        i0 := @parameter2: int;

        r2 := @parameter3: java.security.PublicKey;

        z0 := @parameter4: boolean;

        r3 := @parameter5: javax.security.auth.x500.X500Principal;

        r4 := @parameter6: java.security.cert.X509Certificate;

        r5 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r14 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i0);

        r6 = (java.security.cert.X509Certificate) $r14;

        if z0 != 0 goto label02;

     label01:
        $r25 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: java.lang.String getSigProvider()>();

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)>(r6, r2, $r25);

     label02:
        $r13 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidCertDateFromValidityModel(com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.CertPath,int)>(r1, r0, i0);

        virtualinvoke r6.<java.security.cert.X509Certificate: void checkValidity(java.util.Date)>($r13);

     label03:
        $z1 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isRevocationEnabled()>();

        if $z1 == 0 goto label05;

     label04:
        $r26 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Date getValidCertDateFromValidityModel(com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.CertPath,int)>(r1, r0, i0);

        staticinvoke <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: void checkCRLs(com.android.org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)>(r1, r6, $r26, r4, r2, r5);

     label05:
        $r15 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r6);

        $z2 = virtualinvoke $r15.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>(r3);

        if $z2 != 0 goto label12;

        $r16 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IssuerName(");

        $r20 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)>(r6);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") does not match SubjectName(");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") of signing certificate.");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r23, null, r0, i0);

        throw $r16;

     label06:
        $r47 := @caughtexception;

        r12 = $r47;

        $r46 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r46.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Could not validate certificate signature.", r12, r0, i0);

        throw $r46;

     label07:
        $r38 := @caughtexception;

        r9 = $r38;

        $r39 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not validate certificate: ");

        $r43 = virtualinvoke r9.<java.security.cert.CertificateExpiredException: java.lang.String getMessage()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r48 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r48, r9, r0, i0);

        throw $r39;

     label08:
        $r29 := @caughtexception;

        r8 = $r29;

        $r30 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not validate certificate: ");

        $r33 = virtualinvoke r8.<java.security.cert.CertificateNotYetValidException: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r31, r8, r0, i0);

        throw $r30;

     label09:
        $r40 := @caughtexception;

        r7 = $r40;

        $r41 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r41.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Could not validate time of certificate.", r7, r0, i0);

        throw $r41;

     label10:
        $r32 := @caughtexception;

        r10 = $r32;

        r11 = r10;

        $r36 = virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.AnnotatedException: java.lang.Throwable getCause()>();

        if $r36 == null goto label11;

        r11 = virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.AnnotatedException: java.lang.Throwable getCause()>();

     label11:
        $r37 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r35 = virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.AnnotatedException: java.lang.String getMessage()>();

        specialinvoke $r37.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r35, r11, r0, i0);

        throw $r37;

     label12:
        return;

        catch java.security.GeneralSecurityException from label01 to label02 with label06;
        catch java.security.cert.CertificateExpiredException from label02 to label03 with label07;
        catch java.security.cert.CertificateNotYetValidException from label02 to label03 with label08;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label02 to label03 with label09;
        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label04 to label05 with label10;
    }

    protected static void processCertBC(java.security.cert.CertPath, int, com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, i3, i4;
        com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator r1;
        java.util.List r2;
        java.security.cert.X509Certificate r3;
        com.android.org.bouncycastle.asn1.ASN1InputStream r4, $r26;
        java.lang.Exception r5, r10, r17, $r41, $r45, $r47;
        java.security.cert.CertPathValidatorException r6, r9, r11, r18, r20, r21, $r38, $r40, $r42, $r44, $r46, $r48;
        com.android.org.bouncycastle.asn1.ASN1Sequence r7;
        com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException r8, r15, r22, $r39, $r43, $r49;
        com.android.org.bouncycastle.asn1.x509.GeneralNames r12;
        java.util.Enumeration r13;
        com.android.org.bouncycastle.asn1.x509.X509Name r14, $r31;
        com.android.org.bouncycastle.asn1.x509.GeneralName r16, $r33, $r34, $r37;
        com.android.org.bouncycastle.asn1.x509.GeneralName[] r19;
        java.lang.Object $r23, $r36;
        boolean $z0, $z1;
        byte[] $r24;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r25, $r28;
        javax.security.auth.x500.X500Principal $r27;
        java.lang.String $r29, $r35;
        java.util.Vector $r30;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier $r32;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator;

        r2 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r23 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.security.cert.X509Certificate) $r23;

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

        i2 = i1 - i0;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r3);

        if $z0 == 0 goto label01;

        if i2 < i1 goto label21;

     label01:
        $r26 = new com.android.org.bouncycastle.asn1.ASN1InputStream;

        $r27 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)>(r3);

        $r24 = virtualinvoke $r27.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        specialinvoke $r26.<com.android.org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>($r24);

        r4 = $r26;

     label02:
        $r25 = virtualinvoke r4.<com.android.org.bouncycastle.asn1.ASN1InputStream: com.android.org.bouncycastle.asn1.ASN1Primitive readObject()>();

        r7 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r25);

     label03:
        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkPermittedDN(com.android.org.bouncycastle.asn1.ASN1Sequence)>(r7);

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkExcludedDN(com.android.org.bouncycastle.asn1.ASN1Sequence)>(r7);

     label04:
        $r29 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String SUBJECT_ALTERNATIVE_NAME>;

        $r28 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r3, $r29);

        r12 = staticinvoke <com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)>($r28);

     label05:
        $r31 = new com.android.org.bouncycastle.asn1.x509.X509Name;

        specialinvoke $r31.<com.android.org.bouncycastle.asn1.x509.X509Name: void <init>(com.android.org.bouncycastle.asn1.ASN1Sequence)>(r7);

        r14 = $r31;

        $r32 = <com.android.org.bouncycastle.asn1.x509.X509Name: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier EmailAddress>;

        $r30 = virtualinvoke r14.<com.android.org.bouncycastle.asn1.x509.X509Name: java.util.Vector getValues(com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier)>($r32);

        r13 = virtualinvoke $r30.<java.util.Vector: java.util.Enumeration elements()>();

     label06:
        $z1 = interfaceinvoke r13.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label13;

        $r37 = new com.android.org.bouncycastle.asn1.x509.GeneralName;

        $r36 = interfaceinvoke r13.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r35 = (java.lang.String) $r36;

        specialinvoke $r37.<com.android.org.bouncycastle.asn1.x509.GeneralName: void <init>(int,java.lang.String)>(1, $r35);

        r16 = $r37;

     label07:
        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkPermitted(com.android.org.bouncycastle.asn1.x509.GeneralName)>(r16);

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkExcluded(com.android.org.bouncycastle.asn1.x509.GeneralName)>(r16);

     label08:
        goto label06;

     label09:
        $r39 := @caughtexception;

        r15 = $r39;

        $r38 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r38.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subtree check for certificate subject alternative email failed.", r15, r0, i0);

        r18 = $r38;

        throw r18;

     label10:
        $r41 := @caughtexception;

        r5 = $r41;

        $r40 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r40.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Exception extracting subject name when checking subtrees.", r5, r0, i0);

        r6 = $r40;

        throw r6;

     label11:
        $r49 := @caughtexception;

        r8 = $r49;

        $r48 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r48.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subtree check for certificate subject failed.", r8, r0, i0);

        r9 = $r48;

        throw r9;

     label12:
        $r47 := @caughtexception;

        r10 = $r47;

        $r46 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r46.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subject alternative name extension could not be decoded.", r10, r0, i0);

        r11 = $r46;

        throw r11;

     label13:
        if r12 == null goto label21;

     label14:
        r19 = virtualinvoke r12.<com.android.org.bouncycastle.asn1.x509.GeneralNames: com.android.org.bouncycastle.asn1.x509.GeneralName[] getNames()>();

     label15:
        i4 = 0;

     label16:
        i3 = lengthof r19;

        if i4 >= i3 goto label21;

     label17:
        $r33 = r19[i4];

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkPermitted(com.android.org.bouncycastle.asn1.x509.GeneralName)>($r33);

        $r34 = r19[i4];

        virtualinvoke r1.<com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidator: void checkExcluded(com.android.org.bouncycastle.asn1.x509.GeneralName)>($r34);

     label18:
        i4 = i4 + 1;

        goto label16;

     label19:
        $r45 := @caughtexception;

        r17 = $r45;

        $r44 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r44.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subject alternative name contents could not be decoded.", r17, r0, i0);

        r20 = $r44;

        throw r20;

     label20:
        $r43 := @caughtexception;

        r22 = $r43;

        $r42 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r42.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Subtree check for certificate subject alternative name failed.", r22, r0, i0);

        r21 = $r42;

        throw r21;

     label21:
        return;

        catch java.lang.Exception from label02 to label03 with label10;
        catch com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException from label03 to label04 with label11;
        catch java.lang.Exception from label04 to label05 with label12;
        catch com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException from label07 to label08 with label09;
        catch java.lang.Exception from label14 to label15 with label19;
        catch com.android.org.bouncycastle.jce.provider.PKIXNameConstraintValidatorException from label17 to label18 with label20;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath, int, java.util.Set, com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, java.util.List[], int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11;
        java.util.Set r1, r12, r18, r30, $r46;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r2, r8, r16, r21, r27, $r38, $r50, $r52;
        java.util.List[] r3;
        java.util.List r4, r13, r14, r17, $r51;
        java.security.cert.X509Certificate r5;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r6, $r60;
        com.android.org.bouncycastle.asn1.ASN1Sequence r7, $r47, $r61;
        java.util.Enumeration r9, r11;
        java.util.HashSet r10, r23, r26, $r35, $r54, $r55;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z14, $z16, $z17, $z18, $z21, $z22, $z23;
        com.android.org.bouncycastle.asn1.x509.PolicyInformation r15, r28;
        java.lang.Object r19, r29, $r34, $r37, $r43, $r44, $r45, $r49, $r58;
        java.lang.String r20, $r33, $r39, $r40, $r42, $r56, $r57, $r62, $r63;
        java.util.Iterator r22, r24, r25;
        java.security.cert.CertPathValidatorException r31, $r65;
        com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier r32, $r41;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r36;
        com.android.org.bouncycastle.asn1.DERObjectIdentifier $r48;
        java.util.ArrayList $r53;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r59, $r64;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.Set;

        r2 := @parameter3: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        r3 := @parameter4: java.util.List[];

        i1 := @parameter5: int;

        r4 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r34 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0);

        r5 = (java.security.cert.X509Certificate) $r34;

        i2 = interfaceinvoke r4.<java.util.List: int size()>();

        i3 = i2 - i0;

     label01:
        $r33 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r36 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r5, $r33);

        r7 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r36);

     label02:
        if r7 == null goto label30;

        if r2 == null goto label30;

        r9 = virtualinvoke r7.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

        $r35 = new java.util.HashSet;

        specialinvoke $r35.<java.util.HashSet: void <init>()>();

        r10 = $r35;

     label03:
        $z4 = interfaceinvoke r9.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z4 == 0 goto label08;

        $r58 = interfaceinvoke r9.<java.util.Enumeration: java.lang.Object nextElement()>();

        r28 = staticinvoke <com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r58);

        r32 = virtualinvoke r28.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r57 = virtualinvoke r32.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke r10.<java.util.Set: boolean add(java.lang.Object)>($r57);

        $r63 = "2.5.29.32.0";

        $r62 = virtualinvoke r32.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        $z23 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>($r62);

        if $z23 != 0 goto label03;

     label04:
        $r61 = virtualinvoke r28.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        r30 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r61);

     label05:
        $z22 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean processCertD1i(int,java.util.List[],com.android.org.bouncycastle.asn1.DERObjectIdentifier,java.util.Set)>(i3, r3, r32, r30);

        if $z22 != 0 goto label03;

        staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: void processCertD1ii(int,java.util.List[],com.android.org.bouncycastle.asn1.DERObjectIdentifier,java.util.Set)>(i3, r3, r32, r30);

        goto label03;

     label06:
        $r60 := @caughtexception;

        r6 = $r60;

        $r59 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r59.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Could not read certificate policies extension from certificate.", r6, r0, i0);

        throw $r59;

     label07:
        $r65 := @caughtexception;

        r31 = $r65;

        $r64 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r64.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy qualifier info set could not be build.", r31, r0, i0);

        throw $r64;

     label08:
        $z3 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z3 != 0 goto label09;

        $z17 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>("2.5.29.32.0");

        if $z17 == 0 goto label17;

     label09:
        interfaceinvoke r1.<java.util.Set: void clear()>();

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>(r10);

     label10:
        if i1 > 0 goto label11;

        if i3 >= i2 goto label23;

        $z16 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r5);

        if $z16 == 0 goto label23;

     label11:
        r11 = virtualinvoke r7.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label12:
        $z5 = interfaceinvoke r11.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z5 == 0 goto label23;

        $r44 = interfaceinvoke r11.<java.util.Enumeration: java.lang.Object nextElement()>();

        r15 = staticinvoke <com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)>($r44);

        $r40 = "2.5.29.32.0";

        $r41 = virtualinvoke r15.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier getPolicyIdentifier()>();

        $r42 = virtualinvoke $r41.<com.android.org.bouncycastle.asn1.ASN1ObjectIdentifier: java.lang.String getId()>();

        $z7 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z7 == 0 goto label12;

        $r47 = virtualinvoke r15.<com.android.org.bouncycastle.asn1.x509.PolicyInformation: com.android.org.bouncycastle.asn1.ASN1Sequence getPolicyQualifiers()>();

        r18 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Set getQualifierSet(com.android.org.bouncycastle.asn1.ASN1Sequence)>($r47);

        $i11 = i3 - 1;

        r17 = r3[$i11];

        i10 = 0;

     label13:
        i9 = interfaceinvoke r17.<java.util.List: int size()>();

        if i10 >= i9 goto label23;

        $r45 = interfaceinvoke r17.<java.util.List: java.lang.Object get(int)>(i10);

        r21 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r45;

        $r46 = virtualinvoke r21.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Set getExpectedPolicies()>();

        r22 = interfaceinvoke $r46.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z9 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label22;

        r19 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        $z11 = r19 instanceof java.lang.String;

        if $z11 == 0 goto label20;

        r20 = (java.lang.String) r19;

     label15:
        z1 = 0;

        r24 = virtualinvoke r21.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label16:
        $z8 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label21;

        $r49 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        $r50 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r49;

        $r56 = virtualinvoke $r50.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z18 = virtualinvoke r20.<java.lang.String: boolean equals(java.lang.Object)>($r56);

        if $z18 == 0 goto label16;

        z1 = 1;

        goto label16;

     label17:
        r25 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

        $r55 = new java.util.HashSet;

        specialinvoke $r55.<java.util.HashSet: void <init>()>();

        r26 = $r55;

     label18:
        $z14 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label19;

        r29 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        $z21 = interfaceinvoke r10.<java.util.Set: boolean contains(java.lang.Object)>(r29);

        if $z21 == 0 goto label18;

        interfaceinvoke r26.<java.util.Set: boolean add(java.lang.Object)>(r29);

        goto label18;

     label19:
        interfaceinvoke r1.<java.util.Set: void clear()>();

        interfaceinvoke r1.<java.util.Set: boolean addAll(java.util.Collection)>(r26);

        goto label10;

     label20:
        $z10 = r19 instanceof com.android.org.bouncycastle.asn1.DERObjectIdentifier;

        if $z10 == 0 goto label14;

        $r48 = (com.android.org.bouncycastle.asn1.DERObjectIdentifier) r19;

        r20 = virtualinvoke $r48.<com.android.org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        goto label15;

     label21:
        if z1 != 0 goto label14;

        $r54 = new java.util.HashSet;

        specialinvoke $r54.<java.util.HashSet: void <init>()>();

        r23 = $r54;

        interfaceinvoke r23.<java.util.Set: boolean add(java.lang.Object)>(r20);

        $r52 = new com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r53 = new java.util.ArrayList;

        specialinvoke $r53.<java.util.ArrayList: void <init>()>();

        specialinvoke $r52.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void <init>(java.util.List,int,java.util.Set,java.security.cert.PolicyNode,java.util.Set,java.lang.String,boolean)>($r53, i3, r23, r21, r18, r20, 0);

        r27 = $r52;

        virtualinvoke r21.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void addChild(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r27);

        $r51 = r3[i3];

        interfaceinvoke $r51.<java.util.List: boolean add(java.lang.Object)>(r27);

        goto label14;

     label22:
        i10 = i10 + 1;

        goto label13;

     label23:
        r8 = r2;

        i4 = i3 - 1;

     label24:
        if i4 < 0 goto label28;

        r14 = r3[i4];

        i8 = 0;

     label25:
        i7 = interfaceinvoke r14.<java.util.List: int size()>();

        if i8 >= i7 goto label26;

        $r43 = interfaceinvoke r14.<java.util.List: java.lang.Object get(int)>(i8);

        r16 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r43;

        $z6 = virtualinvoke r16.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z6 != 0 goto label27;

        r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r8, r3, r16);

        if r8 != null goto label27;

     label26:
        i4 = i4 + -1;

        goto label24;

     label27:
        i8 = i8 + 1;

        goto label25;

     label28:
        r12 = virtualinvoke r5.<java.security.cert.X509Certificate: java.util.Set getCriticalExtensionOIDs()>();

        if r12 == null goto label31;

        $r39 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        z0 = interfaceinvoke r12.<java.util.Set: boolean contains(java.lang.Object)>($r39);

        r13 = r3[i3];

        i5 = 0;

     label29:
        i6 = interfaceinvoke r13.<java.util.List: int size()>();

        if i5 >= i6 goto label31;

        $r37 = interfaceinvoke r13.<java.util.List: java.lang.Object get(int)>(i5);

        $r38 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r37;

        virtualinvoke $r38.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: void setCritical(boolean)>(z0);

        i5 = i5 + 1;

        goto label29;

     label30:
        r8 = null;

     label31:
        return r8;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label01 to label02 with label06;
        catch java.security.cert.CertPathValidatorException from label04 to label05 with label07;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode processCertE(java.security.cert.CertPath, int, com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r1;
        java.security.cert.X509Certificate r2;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r3, $r9;
        com.android.org.bouncycastle.asn1.ASN1Sequence r4;
        java.util.List $r5;
        java.lang.Object $r6;
        java.lang.String $r7;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r8;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r10;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        $r5 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.security.cert.X509Certificate) $r6;

     label1:
        $r7 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String CERTIFICATE_POLICIES>;

        $r8 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r2, $r7);

        r4 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r8);

     label2:
        if r4 != null goto label3;

        r1 = null;

     label3:
        return r1;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r10.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Could not read certificate policies extension from certificate.", r3, r0, i0);

        throw $r10;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label1 to label2 with label4;
    }

    protected static void processCertF(java.security.cert.CertPath, int, com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r1;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r2;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        i1 := @parameter3: int;

        if i1 > 0 goto label1;

        if r1 != null goto label1;

        $r2 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r2.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("No valid policy tree found when one expected.", null, r0, i0);

        throw $r2;

     label1:
        return;
    }

    protected static int wrapupCertA(int, java.security.cert.X509Certificate)
    {
        int i0;
        java.security.cert.X509Certificate r0;
        boolean $z0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.security.cert.X509Certificate;

        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isSelfIssued(java.security.cert.X509Certificate)>(r0);

        if $z0 != 0 goto label1;

        if i0 == 0 goto label1;

        i0 = i0 + -1;

     label1:
        return i0;
    }

    protected static int wrapupCertB(java.security.cert.CertPath, int, int) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0, i1, i2, $i3;
        java.security.cert.X509Certificate r1;
        com.android.org.bouncycastle.jce.provider.AnnotatedException r2, $r15;
        com.android.org.bouncycastle.asn1.ASN1Sequence r3;
        java.util.Enumeration r4;
        com.android.org.bouncycastle.asn1.ASN1TaggedObject r5;
        java.lang.Exception r6, $r17;
        java.util.List $r7;
        java.lang.Object $r8, $r11;
        java.lang.String $r9;
        com.android.org.bouncycastle.asn1.ASN1Primitive $r10;
        boolean $z0;
        com.android.org.bouncycastle.asn1.ASN1Integer $r12;
        java.math.BigInteger $r13;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r14, $r16;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r7 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (java.security.cert.X509Certificate) $r8;

     label1:
        $r9 = <com.android.org.bouncycastle.jce.provider.RFC3280CertPathUtilities: java.lang.String POLICY_CONSTRAINTS>;

        $r10 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)>(r1, $r9);

        r3 = staticinvoke <com.android.org.bouncycastle.asn1.DERSequence: com.android.org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)>($r10);

     label2:
        if r3 == null goto label7;

        r4 = virtualinvoke r3.<com.android.org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        $r11 = interfaceinvoke r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (com.android.org.bouncycastle.asn1.ASN1TaggedObject) $r11;

        $i3 = virtualinvoke r5.<com.android.org.bouncycastle.asn1.ASN1TaggedObject: int getTagNo()>();

        tableswitch($i3)
        {
            case 0: goto label5;
            default: goto label4;
        };

     label4:
        goto label3;

     label5:
        $r12 = staticinvoke <com.android.org.bouncycastle.asn1.DERInteger: com.android.org.bouncycastle.asn1.ASN1Integer getInstance(com.android.org.bouncycastle.asn1.ASN1TaggedObject,boolean)>(r5, 0);

        $r13 = virtualinvoke $r12.<com.android.org.bouncycastle.asn1.ASN1Integer: java.math.BigInteger getValue()>();

        i2 = virtualinvoke $r13.<java.math.BigInteger: int intValue()>();

     label6:
        if i2 != 0 goto label3;

        i1 = 0;

     label7:
        return i1;

     label8:
        $r15 := @caughtexception;

        r2 = $r15;

        $r14 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r14.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints could not be decoded.", r2, r0, i0);

        throw $r14;

     label9:
        $r17 := @caughtexception;

        r6 = $r17;

        $r16 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Policy constraints requireExplicitPolicy field could not be decoded.", r6, r0, i0);

        throw $r16;

        catch com.android.org.bouncycastle.jce.provider.AnnotatedException from label1 to label2 with label8;
        catch java.lang.Exception from label5 to label6 with label9;
    }

    protected static void wrapupCertF(java.security.cert.CertPath, int, java.util.List, java.util.Set) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        int i0;
        java.util.List r1, $r6;
        java.util.Set r2;
        java.security.cert.X509Certificate r3;
        java.util.Iterator r4;
        java.security.cert.CertPathValidatorException r5, $r14;
        java.lang.Object $r7, $r12;
        boolean $z0, $z1;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException $r8, $r16;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r13;
        java.security.cert.PKIXCertPathChecker $r15;

        r0 := @parameter0: java.security.cert.CertPath;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        r2 := @parameter3: java.util.Set;

        $r6 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.security.cert.X509Certificate) $r7;

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

     label2:
        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.security.cert.PKIXCertPathChecker) $r12;

        virtualinvoke $r15.<java.security.cert.PKIXCertPathChecker: void check(java.security.cert.Certificate,java.util.Collection)>(r3, r2);

     label3:
        goto label1;

     label4:
        $r14 := @caughtexception;

        r5 = $r14;

        $r16 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r16.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Additional certificate path checker failed.", r5, r0, i0);

        throw $r16;

     label5:
        $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label6;

        $r8 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificate has unsupported critical extension: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>($r13, null, r0, i0);

        throw $r8;

     label6:
        return;

        catch java.security.cert.CertPathValidatorException from label2 to label3 with label4;
    }

    protected static com.android.org.bouncycastle.jce.provider.PKIXPolicyNode wrapupCertG(java.security.cert.CertPath, com.android.org.bouncycastle.x509.ExtendedPKIXParameters, java.util.Set, int, java.util.List[], com.android.org.bouncycastle.jce.provider.PKIXPolicyNode, java.util.Set) throws java.security.cert.CertPathValidatorException
    {
        java.security.cert.CertPath r0;
        com.android.org.bouncycastle.x509.ExtendedPKIXParameters r1;
        java.util.Set r2, r5;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.util.List[] r3;
        com.android.org.bouncycastle.jce.provider.PKIXPolicyNode r4, r9, r10, r13, r14, r19, r22, $r40;
        java.util.HashSet r6, r15, $r24, $r36;
        java.util.Iterator r7, r12, r17, r23;
        java.util.List r8, r11, r18, r20, $r25;
        com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException r16, r21, $r43, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z9, $z10, $z11, $z12, $z14, $z15, $z16;
        java.lang.Object $r26, $r27, $r31, $r33, $r35, $r37, $r39, $r42;
        java.lang.String $r28, $r29, $r30, $r32, $r34, $r38, $r41, $r44;

        r0 := @parameter0: java.security.cert.CertPath;

        r1 := @parameter1: com.android.org.bouncycastle.x509.ExtendedPKIXParameters;

        r2 := @parameter2: java.util.Set;

        i0 := @parameter3: int;

        r3 := @parameter4: java.util.List[];

        r4 := @parameter5: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode;

        r5 := @parameter6: java.util.Set;

        $r25 = virtualinvoke r0.<java.security.cert.CertPath: java.util.List getCertificates()>();

        i1 = interfaceinvoke $r25.<java.util.List: int size()>();

        if r4 != null goto label02;

        $z14 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isExplicitPolicyRequired()>();

        if $z14 == 0 goto label01;

        $r45 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r45.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Explicit policy requested but none available.", null, r0, i0);

        r21 = $r45;

        throw r21;

     label01:
        return null;

     label02:
        $z0 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: boolean isAnyPolicy(java.util.Set)>(r2);

        if $z0 == 0 goto label17;

        $z6 = virtualinvoke r1.<com.android.org.bouncycastle.x509.ExtendedPKIXParameters: boolean isExplicitPolicyRequired()>();

        if $z6 == 0 goto label16;

        $z11 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>();

        if $z11 == 0 goto label03;

        $r43 = new com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException;

        specialinvoke $r43.<com.android.org.bouncycastle.jce.exception.ExtCertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Explicit policy requested but none available.", null, r0, i0);

        r16 = $r43;

        throw r16;

     label03:
        $r36 = new java.util.HashSet;

        specialinvoke $r36.<java.util.HashSet: void <init>()>();

        r15 = $r36;

        i6 = 0;

     label04:
        $i14 = lengthof r3;

        if i6 >= $i14 goto label09;

        r20 = r3[i6];

        i9 = 0;

     label05:
        $i15 = interfaceinvoke r20.<java.util.List: int size()>();

        if i9 >= $i15 goto label08;

        $r37 = interfaceinvoke r20.<java.util.List: java.lang.Object get(int)>(i9);

        r22 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r37;

        $r38 = "2.5.29.32.0";

        $r44 = virtualinvoke r22.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z15 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r44);

        if $z15 == 0 goto label07;

        r23 = virtualinvoke r22.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label06:
        $z16 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z16 == 0 goto label07;

        $r42 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r15.<java.util.Set: boolean add(java.lang.Object)>($r42);

        goto label06;

     label07:
        i9 = i9 + 1;

        goto label05;

     label08:
        i6 = i6 + 1;

        goto label04;

     label09:
        r17 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z9 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label11;

        $r39 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        $r40 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r39;

        $r41 = virtualinvoke $r40.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z12 = interfaceinvoke r5.<java.util.Set: boolean contains(java.lang.Object)>($r41);

        if $z12 != 0 goto label10;

        goto label10;

     label11:
        if r4 == null goto label16;

        i7 = i1 - 1;

     label12:
        if i7 < 0 goto label16;

        r18 = r3[i7];

        i8 = 0;

     label13:
        $i13 = interfaceinvoke r18.<java.util.List: int size()>();

        if i8 >= $i13 goto label15;

        $r35 = interfaceinvoke r18.<java.util.List: java.lang.Object get(int)>(i8);

        r19 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r35;

        $z10 = virtualinvoke r19.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z10 != 0 goto label14;

        r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4, r3, r19);

     label14:
        i8 = i8 + 1;

        goto label13;

     label15:
        i7 = i7 + -1;

        goto label12;

     label16:
        return r4;

     label17:
        $r24 = new java.util.HashSet;

        specialinvoke $r24.<java.util.HashSet: void <init>()>();

        r6 = $r24;

        i2 = 0;

     label18:
        $i11 = lengthof r3;

        if i2 >= $i11 goto label23;

        r11 = r3[i2];

        i5 = 0;

     label19:
        $i12 = interfaceinvoke r11.<java.util.List: int size()>();

        if i5 >= $i12 goto label22;

        $r31 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i5);

        r13 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r31;

        $r30 = "2.5.29.32.0";

        $r29 = virtualinvoke r13.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z4 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z4 == 0 goto label21;

        r12 = virtualinvoke r13.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.util.Iterator getChildren()>();

     label20:
        $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label21;

        $r33 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r33;

        $r32 = "2.5.29.32.0";

        $r34 = virtualinvoke r14.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z8 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z8 != 0 goto label20;

        interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r14);

        goto label20;

     label21:
        i5 = i5 + 1;

        goto label19;

     label22:
        i2 = i2 + 1;

        goto label18;

     label23:
        r7 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label25;

        $r26 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r26;

        $r28 = virtualinvoke r10.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: java.lang.String getValidPolicy()>();

        $z3 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r28);

        if $z3 != 0 goto label24;

        r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4, r3, r10);

        goto label24;

     label25:
        if r4 == null goto label30;

        i3 = i1 - 1;

     label26:
        if i3 < 0 goto label30;

        r8 = r3[i3];

        i4 = 0;

     label27:
        $i10 = interfaceinvoke r8.<java.util.List: int size()>();

        if i4 >= $i10 goto label29;

        $r27 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i4);

        r9 = (com.android.org.bouncycastle.jce.provider.PKIXPolicyNode) $r27;

        $z2 = virtualinvoke r9.<com.android.org.bouncycastle.jce.provider.PKIXPolicyNode: boolean hasChildren()>();

        if $z2 != 0 goto label28;

        r4 = staticinvoke <com.android.org.bouncycastle.jce.provider.CertPathValidatorUtilities: com.android.org.bouncycastle.jce.provider.PKIXPolicyNode removePolicyNode(com.android.org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],com.android.org.bouncycastle.jce.provider.PKIXPolicyNode)>(r4, r3, r9);

     label28:
        i4 = i4 + 1;

        goto label27;

     label29:
        i3 = i3 + -1;

        goto label26;

     label30:
        return r4;
    }
}
