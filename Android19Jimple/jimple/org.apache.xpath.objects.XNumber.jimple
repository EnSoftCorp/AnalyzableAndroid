public class org.apache.xpath.objects.XNumber extends org.apache.xpath.objects.XObject
{
    static final long serialVersionUID;
    double m_val;

    public void <init>(double)
    {
        org.apache.xpath.objects.XNumber r0;
        double d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        d0 := @parameter0: double;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>()>();

        r0.<org.apache.xpath.objects.XNumber: double m_val> = d0;

        return;
    }

    public void <init>(java.lang.Number)
    {
        org.apache.xpath.objects.XNumber r0;
        java.lang.Number r1;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        r1 := @parameter0: java.lang.Number;

        specialinvoke r0.<org.apache.xpath.objects.XObject: void <init>()>();

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        r0.<org.apache.xpath.objects.XNumber: double m_val> = $d0;

        virtualinvoke r0.<org.apache.xpath.objects.XNumber: void setObject(java.lang.Object)>(r1);

        return;
    }

    private static java.lang.String zeros(int)
    {
        int i0, i1;
        char[] r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        return "";

     label1:
        r0 = newarray (char)[i0];

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r0[i1] = 48;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);

        return $r1;
    }

    public boolean bool()
    {
        org.apache.xpath.objects.XNumber r0;
        double $d0, $d1;
        boolean $z0;
        byte $b0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $d1 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $b0 = $d1 cmpl 0.0;

        if $b0 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public void callVisitors(org.apache.xpath.ExpressionOwner, org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.objects.XNumber r0;
        org.apache.xpath.ExpressionOwner r1;
        org.apache.xpath.XPathVisitor r2;

        r0 := @this: org.apache.xpath.objects.XNumber;

        r1 := @parameter0: org.apache.xpath.ExpressionOwner;

        r2 := @parameter1: org.apache.xpath.XPathVisitor;

        virtualinvoke r2.<org.apache.xpath.XPathVisitor: boolean visitNumberLiteral(org.apache.xpath.ExpressionOwner,org.apache.xpath.objects.XNumber)>(r1, r0);

        return;
    }

    public boolean equals(org.apache.xpath.objects.XObject)
    {
        org.apache.xpath.objects.XNumber r0;
        org.apache.xpath.objects.XObject r1;
        int i0;
        javax.xml.transform.TransformerException r2, $r3;
        double d0, d1;
        byte $b1;
        boolean $z0, $z1, $z2;
        org.apache.xml.utils.WrappedRuntimeException $r4;

        r0 := @this: org.apache.xpath.objects.XNumber;

        r1 := @parameter0: org.apache.xpath.objects.XObject;

        i0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: int getType()>();

        if i0 != 4 goto label2;

     label1:
        $z2 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean equals(org.apache.xpath.objects.XObject)>(r0);

        return $z2;

     label2:
        if i0 != 1 goto label5;

     label3:
        $z0 = virtualinvoke r1.<org.apache.xpath.objects.XObject: boolean bool()>();

        $z1 = virtualinvoke r0.<org.apache.xpath.objects.XNumber: boolean bool()>();

        if $z0 == $z1 goto label8;

     label4:
        return 0;

     label5:
        d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        d1 = virtualinvoke r1.<org.apache.xpath.objects.XObject: double num()>();

     label6:
        $b1 = d0 cmpl d1;

        if $b1 == 0 goto label8;

        return 0;

     label7:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r4.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r2);

        throw $r4;

     label8:
        return 1;

        catch javax.xml.transform.TransformerException from label1 to label2 with label7;
        catch javax.xml.transform.TransformerException from label3 to label4 with label7;
        catch javax.xml.transform.TransformerException from label5 to label6 with label7;
    }

    public int getType()
    {
        org.apache.xpath.objects.XNumber r0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        return 2;
    }

    public java.lang.String getTypeString()
    {
        org.apache.xpath.objects.XNumber r0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        return "#NUMBER";
    }

    public boolean isStableNumber()
    {
        org.apache.xpath.objects.XNumber r0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        return 1;
    }

    public double num()
    {
        org.apache.xpath.objects.XNumber r0;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        return $d0;
    }

    public double num(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XNumber r0;
        org.apache.xpath.XPathContext r1;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        return $d0;
    }

    public java.lang.Object object()
    {
        org.apache.xpath.objects.XNumber r0;
        java.lang.Object $r1, $r2;
        java.lang.Double $r3;
        double $d0;

        r0 := @this: org.apache.xpath.objects.XNumber;

        $r1 = r0.<org.apache.xpath.objects.XNumber: java.lang.Object m_obj>;

        if $r1 != null goto label1;

        $r3 = new java.lang.Double;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        specialinvoke $r3.<java.lang.Double: void <init>(double)>($d0);

        virtualinvoke r0.<org.apache.xpath.objects.XNumber: void setObject(java.lang.Object)>($r3);

     label1:
        $r2 = r0.<org.apache.xpath.objects.XNumber: java.lang.Object m_obj>;

        return $r2;
    }

    public java.lang.String str()
    {
        org.apache.xpath.objects.XNumber r0;
        java.lang.String r1, r2, $r3, $r7, $r8, $r10, $r15, $r16, $r17, $r19, $r25, $r27, $r29, $r30, $r32, $r33;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i19;
        double $d0, $d1, $d2, $d3;
        boolean $z0, $z1, $z2;
        char $c5, $c8, $c9, $c15, $c18;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r11, $r12, $r13, $r14, $r18, $r20, $r21, $r22, $r23, $r24, $r26, $r28, $r31;
        byte $b20;

        r0 := @this: org.apache.xpath.objects.XNumber;

        $d0 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label02;

        r1 = "NaN";

     label01:
        return r1;

     label02:
        $d1 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d1);

        if $z1 == 0 goto label04;

        $d3 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        $b20 = $d3 cmpl 0.0;

        if $b20 <= 0 goto label03;

        return "Infinity";

     label03:
        return "-Infinity";

     label04:
        $d2 = r0.<org.apache.xpath.objects.XNumber: double m_val>;

        r1 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d2);

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = i0 - 2;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        if $c5 != 46 goto label05;

        $i19 = i0 - 1;

        $c18 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i19);

        if $c18 != 48 goto label05;

        $i17 = i0 - 2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i17);

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-0");

        if $z2 == 0 goto label01;

        return "0";

     label05:
        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(69);

        if i1 >= 0 goto label06;

        $i16 = i0 - 1;

        $c15 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i16);

        if $c15 != 48 goto label01;

        $i14 = i0 - 1;

        $r33 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i14);

        return $r33;

     label06:
        $i6 = i1 + 1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i6);

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c8 != 45 goto label08;

        r2 = "-";

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        i1 = i1 + -1;

     label07:
        i3 = i1 - 2;

        if i2 < i3 goto label09;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r29 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(2, i1);

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $i13 = i2 - i3;

        $r32 = staticinvoke <org.apache.xpath.objects.XNumber: java.lang.String zeros(int)>($i13);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r30;

     label08:
        r2 = "";

        goto label07;

     label09:
        $i7 = i1 - 1;

        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i7);

        if $c9 != 48 goto label10;

        i1 = i1 + -1;

        goto label09;

     label10:
        if i2 <= 0 goto label11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $i11 = i2 + 2;

        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(2, $i11);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i12 = i2 + 2;

        $r19 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i12, i1);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;

     label11:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0.");

        $i10 = -1 - i2;

        $r7 = staticinvoke <org.apache.xpath.objects.XNumber: java.lang.String zeros(int)>($i10);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(2, i1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.objects.XNumber: long serialVersionUID> = -2720400709619020193L;

        return;
    }
}
