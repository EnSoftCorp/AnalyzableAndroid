public class org.apache.xalan.transformer.CountersTable extends java.util.Hashtable
{
    static final long serialVersionUID;
    transient int m_countersMade;
    private transient org.apache.xpath.NodeSetDTM m_newFound;

    public void <init>()
    {
        org.apache.xalan.transformer.CountersTable r0;

        r0 := @this: org.apache.xalan.transformer.CountersTable;

        specialinvoke r0.<java.util.Hashtable: void <init>()>();

        r0.<org.apache.xalan.transformer.CountersTable: int m_countersMade> = 0;

        return;
    }

    void appendBtoFList(org.apache.xpath.NodeSetDTM, org.apache.xpath.NodeSetDTM)
    {
        org.apache.xalan.transformer.CountersTable r0;
        org.apache.xpath.NodeSetDTM r1, r2;
        int i0, $i1, $i2;

        r0 := @this: org.apache.xalan.transformer.CountersTable;

        r1 := @parameter0: org.apache.xpath.NodeSetDTM;

        r2 := @parameter1: org.apache.xpath.NodeSetDTM;

        $i1 = virtualinvoke r2.<org.apache.xpath.NodeSetDTM: int size()>();

        i0 = -1 + $i1;

     label1:
        if i0 < 0 goto label2;

        $i2 = virtualinvoke r2.<org.apache.xpath.NodeSetDTM: int item(int)>(i0);

        virtualinvoke r1.<org.apache.xpath.NodeSetDTM: void addElement(int)>($i2);

        i0 = i0 + -1;

        goto label1;

     label2:
        return;
    }

    public int countNode(org.apache.xpath.XPathContext, org.apache.xalan.templates.ElemNumber, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.transformer.CountersTable r0;
        org.apache.xpath.XPathContext r1;
        org.apache.xalan.templates.ElemNumber r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.util.Vector r3;
        org.apache.xpath.NodeSetDTM r4, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r22;
        org.apache.xalan.transformer.Counter r5, r6, $r7, $r21;
        org.apache.xml.dtm.DTMManager $r8, $r23;
        java.lang.Object $r14, $r20;

        r0 := @this: org.apache.xalan.transformer.CountersTable;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r2 := @parameter1: org.apache.xalan.templates.ElemNumber;

        i0 := @parameter2: int;

        r3 = virtualinvoke r0.<org.apache.xalan.transformer.CountersTable: java.util.Vector getCounters(org.apache.xalan.templates.ElemNumber)>(r2);

        i1 = virtualinvoke r3.<java.util.Vector: int size()>();

        i2 = virtualinvoke r2.<org.apache.xalan.templates.ElemNumber: int getTargetNode(org.apache.xpath.XPathContext,int)>(r1, i0);

        i3 = 0;

        if -1 == i2 goto label10;

        i4 = 0;

     label01:
        if i4 >= i1 goto label03;

        $r20 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i4);

        $r21 = (org.apache.xalan.transformer.Counter) $r20;

        i8 = virtualinvoke $r21.<org.apache.xalan.transformer.Counter: int getPreviouslyCounted(org.apache.xpath.XPathContext,int)>(r1, i2);

        if i8 <= 0 goto label02;

        return i8;

     label02:
        i4 = i4 + 1;

        goto label01;

     label03:
        r4 = r0.<org.apache.xalan.transformer.CountersTable: org.apache.xpath.NodeSetDTM m_newFound>;

        i3 = 0;

        if r4 != null goto label04;

        $r22 = new org.apache.xpath.NodeSetDTM;

        $r23 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r22.<org.apache.xpath.NodeSetDTM: void <init>(org.apache.xml.dtm.DTMManager)>($r23);

        r0.<org.apache.xalan.transformer.CountersTable: org.apache.xpath.NodeSetDTM m_newFound> = $r22;

     label04:
        if -1 == i2 goto label09;

        if i3 == 0 goto label08;

        i5 = 0;

     label05:
        if i5 >= i1 goto label08;

        $r14 = virtualinvoke r3.<java.util.Vector: java.lang.Object elementAt(int)>(i5);

        r6 = (org.apache.xalan.transformer.Counter) $r14;

        $r15 = r6.<org.apache.xalan.transformer.Counter: org.apache.xpath.NodeSetDTM m_countNodes>;

        i6 = virtualinvoke $r15.<org.apache.xpath.NodeSetDTM: int size()>();

        if i6 <= 0 goto label07;

        $r16 = r6.<org.apache.xalan.transformer.Counter: org.apache.xpath.NodeSetDTM m_countNodes>;

        $i13 = i6 - 1;

        $i11 = virtualinvoke $r16.<org.apache.xpath.NodeSetDTM: int elementAt(int)>($i13);

        if $i11 != i2 goto label07;

        $i12 = r6.<org.apache.xalan.transformer.Counter: int m_countNodesStartCount>;

        $i14 = i6 + $i12;

        i7 = i3 + $i14;

        if i6 <= 0 goto label06;

        $r18 = r6.<org.apache.xalan.transformer.Counter: org.apache.xpath.NodeSetDTM m_countNodes>;

        $r17 = r0.<org.apache.xalan.transformer.CountersTable: org.apache.xpath.NodeSetDTM m_newFound>;

        virtualinvoke r0.<org.apache.xalan.transformer.CountersTable: void appendBtoFList(org.apache.xpath.NodeSetDTM,org.apache.xpath.NodeSetDTM)>($r18, $r17);

     label06:
        $r19 = r0.<org.apache.xalan.transformer.CountersTable: org.apache.xpath.NodeSetDTM m_newFound>;

        virtualinvoke $r19.<org.apache.xpath.NodeSetDTM: void removeAllElements()>();

        return i7;

     label07:
        i5 = i5 + 1;

        goto label05;

     label08:
        $r12 = r0.<org.apache.xalan.transformer.CountersTable: org.apache.xpath.NodeSetDTM m_newFound>;

        virtualinvoke $r12.<org.apache.xpath.NodeSetDTM: void addElement(int)>(i2);

        i3 = i3 + 1;

        i2 = virtualinvoke r2.<org.apache.xalan.templates.ElemNumber: int getPreviousNode(org.apache.xpath.XPathContext,int)>(r1, i2);

        goto label04;

     label09:
        $r7 = new org.apache.xalan.transformer.Counter;

        $r9 = new org.apache.xpath.NodeSetDTM;

        $r8 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r9.<org.apache.xpath.NodeSetDTM: void <init>(org.apache.xml.dtm.DTMManager)>($r8);

        specialinvoke $r7.<org.apache.xalan.transformer.Counter: void <init>(org.apache.xalan.templates.ElemNumber,org.apache.xpath.NodeSetDTM)>(r2, $r9);

        r5 = $r7;

        $i10 = r0.<org.apache.xalan.transformer.CountersTable: int m_countersMade>;

        $i9 = 1 + $i10;

        r0.<org.apache.xalan.transformer.CountersTable: int m_countersMade> = $i9;

        $r10 = r5.<org.apache.xalan.transformer.Counter: org.apache.xpath.NodeSetDTM m_countNodes>;

        $r11 = r0.<org.apache.xalan.transformer.CountersTable: org.apache.xpath.NodeSetDTM m_newFound>;

        virtualinvoke r0.<org.apache.xalan.transformer.CountersTable: void appendBtoFList(org.apache.xpath.NodeSetDTM,org.apache.xpath.NodeSetDTM)>($r10, $r11);

        $r13 = r0.<org.apache.xalan.transformer.CountersTable: org.apache.xpath.NodeSetDTM m_newFound>;

        virtualinvoke $r13.<org.apache.xpath.NodeSetDTM: void removeAllElements()>();

        virtualinvoke r3.<java.util.Vector: void addElement(java.lang.Object)>(r5);

     label10:
        return i3;
    }

    java.util.Vector getCounters(org.apache.xalan.templates.ElemNumber)
    {
        org.apache.xalan.transformer.CountersTable r0;
        org.apache.xalan.templates.ElemNumber r1;
        java.util.Vector r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.xalan.transformer.CountersTable;

        r1 := @parameter0: org.apache.xalan.templates.ElemNumber;

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.CountersTable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.util.Vector) $r3;

        if r2 != null goto label1;

        r2 = virtualinvoke r0.<org.apache.xalan.transformer.CountersTable: java.util.Vector putElemNumber(org.apache.xalan.templates.ElemNumber)>(r1);

     label1:
        return r2;
    }

    java.util.Vector putElemNumber(org.apache.xalan.templates.ElemNumber)
    {
        org.apache.xalan.transformer.CountersTable r0;
        org.apache.xalan.templates.ElemNumber r1;
        java.util.Vector r2, $r3;

        r0 := @this: org.apache.xalan.transformer.CountersTable;

        r1 := @parameter0: org.apache.xalan.templates.ElemNumber;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r2 = $r3;

        virtualinvoke r0.<org.apache.xalan.transformer.CountersTable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return r2;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.transformer.CountersTable: long serialVersionUID> = 2159100770924179875L;

        return;
    }
}
