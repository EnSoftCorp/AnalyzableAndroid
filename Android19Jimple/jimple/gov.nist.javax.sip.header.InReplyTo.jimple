public class gov.nist.javax.sip.header.InReplyTo extends gov.nist.javax.sip.header.SIPHeader implements javax.sip.header.InReplyToHeader
{
    private static final long serialVersionUID;
    protected gov.nist.javax.sip.header.CallIdentifier callId;

    public void <init>()
    {
        gov.nist.javax.sip.header.InReplyTo r0;

        r0 := @this: gov.nist.javax.sip.header.InReplyTo;

        specialinvoke r0.<gov.nist.javax.sip.header.SIPHeader: void <init>(java.lang.String)>("In-Reply-To");

        return;
    }

    public void <init>(gov.nist.javax.sip.header.CallIdentifier)
    {
        gov.nist.javax.sip.header.InReplyTo r0;
        gov.nist.javax.sip.header.CallIdentifier r1;

        r0 := @this: gov.nist.javax.sip.header.InReplyTo;

        r1 := @parameter0: gov.nist.javax.sip.header.CallIdentifier;

        specialinvoke r0.<gov.nist.javax.sip.header.SIPHeader: void <init>(java.lang.String)>("In-Reply-To");

        r0.<gov.nist.javax.sip.header.InReplyTo: gov.nist.javax.sip.header.CallIdentifier callId> = r1;

        return;
    }

    public java.lang.Object clone()
    {
        gov.nist.javax.sip.header.InReplyTo r0, r1;
        java.lang.Object $r2, $r5;
        gov.nist.javax.sip.header.CallIdentifier $r3, $r4, $r6;

        r0 := @this: gov.nist.javax.sip.header.InReplyTo;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.header.SIPHeader: java.lang.Object clone()>();

        r1 = (gov.nist.javax.sip.header.InReplyTo) $r2;

        $r3 = r0.<gov.nist.javax.sip.header.InReplyTo: gov.nist.javax.sip.header.CallIdentifier callId>;

        if $r3 == null goto label1;

        $r4 = r0.<gov.nist.javax.sip.header.InReplyTo: gov.nist.javax.sip.header.CallIdentifier callId>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.CallIdentifier: java.lang.Object clone()>();

        $r6 = (gov.nist.javax.sip.header.CallIdentifier) $r5;

        r1.<gov.nist.javax.sip.header.InReplyTo: gov.nist.javax.sip.header.CallIdentifier callId> = $r6;

     label1:
        return r1;
    }

    public java.lang.String encodeBody()
    {
        gov.nist.javax.sip.header.InReplyTo r0;
        gov.nist.javax.sip.header.CallIdentifier $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.header.InReplyTo;

        $r1 = r0.<gov.nist.javax.sip.header.InReplyTo: gov.nist.javax.sip.header.CallIdentifier callId>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.header.CallIdentifier: java.lang.String encode()>();

        return $r2;
    }

    public java.lang.String getCallId()
    {
        gov.nist.javax.sip.header.InReplyTo r0;
        gov.nist.javax.sip.header.CallIdentifier $r1, $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.header.InReplyTo;

        $r1 = r0.<gov.nist.javax.sip.header.InReplyTo: gov.nist.javax.sip.header.CallIdentifier callId>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<gov.nist.javax.sip.header.InReplyTo: gov.nist.javax.sip.header.CallIdentifier callId>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.CallIdentifier: java.lang.String encode()>();

        return $r3;
    }

    public void setCallId(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.InReplyTo r0;
        java.lang.String r1, $r6;
        java.lang.Exception r2, $r4;
        gov.nist.javax.sip.header.CallIdentifier $r3;
        java.text.ParseException $r5;

        r0 := @this: gov.nist.javax.sip.header.InReplyTo;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = new gov.nist.javax.sip.header.CallIdentifier;

        specialinvoke $r3.<gov.nist.javax.sip.header.CallIdentifier: void <init>(java.lang.String)>(r1);

        r0.<gov.nist.javax.sip.header.InReplyTo: gov.nist.javax.sip.header.CallIdentifier callId> = $r3;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.text.ParseException;

        $r6 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>($r6, 0);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.header.InReplyTo: long serialVersionUID> = 1682602905733508890L;

        return;
    }
}
