public class android.content.ContentQueryMap extends java.util.Observable
{
    private java.lang.String[] mColumnNames;
    private android.database.ContentObserver mContentObserver;
    private volatile android.database.Cursor mCursor;
    private boolean mDirty;
    private android.os.Handler mHandlerForUpdateNotifications;
    private boolean mKeepUpdated;
    private int mKeyColumn;
    private java.util.Map mValues;

    public void <init>(android.database.Cursor, java.lang.String, boolean, android.os.Handler)
    {
        android.content.ContentQueryMap r0;
        android.database.Cursor r1, $r4, $r6;
        java.lang.String r2;
        boolean z0;
        android.os.Handler r3;
        java.lang.String[] $r5;
        int $i0;

        r0 := @this: android.content.ContentQueryMap;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: android.os.Handler;

        specialinvoke r0.<java.util.Observable: void <init>()>();

        r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications> = null;

        r0.<android.content.ContentQueryMap: boolean mKeepUpdated> = 0;

        r0.<android.content.ContentQueryMap: java.util.Map mValues> = null;

        r0.<android.content.ContentQueryMap: boolean mDirty> = 0;

        r0.<android.content.ContentQueryMap: android.database.Cursor mCursor> = r1;

        $r4 = r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        r0.<android.content.ContentQueryMap: java.lang.String[] mColumnNames> = $r5;

        $r6 = r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $i0 = interfaceinvoke $r6.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>(r2);

        r0.<android.content.ContentQueryMap: int mKeyColumn> = $i0;

        r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications> = r3;

        virtualinvoke r0.<android.content.ContentQueryMap: void setKeepUpdated(boolean)>(z0);

        if z0 != 0 goto label1;

        specialinvoke r0.<android.content.ContentQueryMap: void readCursorIntoCache(android.database.Cursor)>(r1);

     label1:
        return;
    }

    static boolean access$002(android.content.ContentQueryMap, boolean)
    {
        android.content.ContentQueryMap r0;
        boolean z0;

        r0 := @parameter0: android.content.ContentQueryMap;

        z0 := @parameter1: boolean;

        r0.<android.content.ContentQueryMap: boolean mDirty> = z0;

        return z0;
    }

    private void readCursorIntoCache(android.database.Cursor)
    {
        android.content.ContentQueryMap r0;
        android.database.Cursor r1;
        java.lang.Throwable r2, $r15;
        int i0, i1, $i2, $i3, $i4;
        android.content.ContentValues r3, $r6;
        java.util.Map $r4, $r8, $r14;
        java.util.HashMap $r5;
        boolean $z0;
        java.lang.String[] $r7, $r11;
        java.lang.String $r10, $r12, $r13;

        r0 := @this: android.content.ContentQueryMap;

        r1 := @parameter0: android.database.Cursor;

        entermonitor r0;

     label01:
        $r4 = r0.<android.content.ContentQueryMap: java.util.Map mValues>;

        if $r4 == null goto label12;

        $r14 = r0.<android.content.ContentQueryMap: java.util.Map mValues>;

        i0 = interfaceinvoke $r14.<java.util.Map: int size()>();

     label02:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>(int)>(i0);

        r0.<android.content.ContentQueryMap: java.util.Map mValues> = $r5;

     label03:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label10;

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        r3 = $r6;

     label04:
        i1 = 0;

     label05:
        $r7 = r0.<android.content.ContentQueryMap: java.lang.String[] mColumnNames>;

        $i2 = lengthof $r7;

        if i1 >= $i2 goto label07;

        $i4 = r0.<android.content.ContentQueryMap: int mKeyColumn>;

        if i1 == $i4 goto label11;

        $r11 = r0.<android.content.ContentQueryMap: java.lang.String[] mColumnNames>;

        $r13 = $r11[i1];

        $r12 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>($r13, $r12);

     label06:
        goto label11;

     label07:
        $r8 = r0.<android.content.ContentQueryMap: java.util.Map mValues>;

        $i3 = r0.<android.content.ContentQueryMap: int mKeyColumn>;

        $r10 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i3);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r3);

     label08:
        goto label03;

     label09:
        $r15 := @caughtexception;

        r2 = $r15;

        exitmonitor r0;

        throw r2;

     label10:
        exitmonitor r0;

        return;

     label11:
        i1 = i1 + 1;

        goto label05;

     label12:
        i0 = 0;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void close()
    {
        android.content.ContentQueryMap r0;
        java.lang.Throwable r1, $r6;
        android.database.ContentObserver $r2, $r4;
        android.database.Cursor $r3, $r5;

        r0 := @this: android.content.ContentQueryMap;

        entermonitor r0;

     label1:
        $r2 = r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        if $r2 == null goto label2;

        $r5 = r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $r4 = r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        interfaceinvoke $r5.<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>($r4);

        r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver> = null;

     label2:
        $r3 = r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        r0.<android.content.ContentQueryMap: android.database.Cursor mCursor> = null;

     label3:
        exitmonitor r0;

        return;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.content.ContentQueryMap r0;
        android.database.Cursor $r1;

        r0 := @this: android.content.ContentQueryMap;

        $r1 = r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        if $r1 == null goto label1;

        virtualinvoke r0.<android.content.ContentQueryMap: void close()>();

     label1:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    public java.util.Map getRows()
    {
        android.content.ContentQueryMap r0;
        java.lang.Throwable r1, $r3;
        java.util.Map r2;
        boolean $z0;

        r0 := @this: android.content.ContentQueryMap;

        entermonitor r0;

     label1:
        $z0 = r0.<android.content.ContentQueryMap: boolean mDirty>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.content.ContentQueryMap: void requery()>();

     label2:
        r2 = r0.<android.content.ContentQueryMap: java.util.Map mValues>;

     label3:
        exitmonitor r0;

        return r2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public android.content.ContentValues getValues(java.lang.String)
    {
        android.content.ContentQueryMap r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r6;
        android.content.ContentValues r3;
        boolean $z0;
        java.util.Map $r4;
        java.lang.Object $r5;

        r0 := @this: android.content.ContentQueryMap;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $z0 = r0.<android.content.ContentQueryMap: boolean mDirty>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.content.ContentQueryMap: void requery()>();

     label2:
        $r4 = r0.<android.content.ContentQueryMap: java.util.Map mValues>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.ContentValues) $r5;

     label3:
        exitmonitor r0;

        return r3;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void requery()
    {
        android.content.ContentQueryMap r0;
        android.database.Cursor r1;
        boolean $z0;

        r0 := @this: android.content.ContentQueryMap;

        r1 = r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        r0.<android.content.ContentQueryMap: boolean mDirty> = 0;

        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean requery()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.content.ContentQueryMap: void readCursorIntoCache(android.database.Cursor)>(r1);

        virtualinvoke r0.<android.content.ContentQueryMap: void setChanged()>();

        virtualinvoke r0.<android.content.ContentQueryMap: void notifyObservers()>();

        return;
    }

    public void setKeepUpdated(boolean)
    {
        android.content.ContentQueryMap r0;
        boolean z0, $z1, $z2;
        android.os.Handler $r1, $r6, $r7;
        android.database.ContentObserver $r2, $r3, $r8;
        android.database.Cursor $r4, $r9;
        android.content.ContentQueryMap$1 $r5;

        r0 := @this: android.content.ContentQueryMap;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.content.ContentQueryMap: boolean mKeepUpdated>;

        if z0 != $z1 goto label1;

        return;

     label1:
        r0.<android.content.ContentQueryMap: boolean mKeepUpdated> = z0;

        $z2 = r0.<android.content.ContentQueryMap: boolean mKeepUpdated>;

        if $z2 != 0 goto label2;

        $r9 = r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $r8 = r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        interfaceinvoke $r9.<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>($r8);

        r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver> = null;

        return;

     label2:
        $r1 = r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications>;

        if $r1 != null goto label3;

        $r7 = new android.os.Handler;

        specialinvoke $r7.<android.os.Handler: void <init>()>();

        r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications> = $r7;

     label3:
        $r2 = r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        if $r2 != null goto label4;

        $r5 = new android.content.ContentQueryMap$1;

        $r6 = r0.<android.content.ContentQueryMap: android.os.Handler mHandlerForUpdateNotifications>;

        specialinvoke $r5.<android.content.ContentQueryMap$1: void <init>(android.content.ContentQueryMap,android.os.Handler)>(r0, $r6);

        r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver> = $r5;

     label4:
        $r4 = r0.<android.content.ContentQueryMap: android.database.Cursor mCursor>;

        $r3 = r0.<android.content.ContentQueryMap: android.database.ContentObserver mContentObserver>;

        interfaceinvoke $r4.<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>($r3);

        r0.<android.content.ContentQueryMap: boolean mDirty> = 1;

        return;
    }
}
