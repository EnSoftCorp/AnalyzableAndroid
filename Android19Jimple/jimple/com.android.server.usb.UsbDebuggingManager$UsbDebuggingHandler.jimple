class com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler extends android.os.Handler
{
    private static final int MESSAGE_ADB_ALLOW;
    private static final int MESSAGE_ADB_CLEAR;
    private static final int MESSAGE_ADB_CONFIRM;
    private static final int MESSAGE_ADB_DENY;
    private static final int MESSAGE_ADB_DISABLED;
    private static final int MESSAGE_ADB_ENABLED;
    final com.android.server.usb.UsbDebuggingManager this$0;

    public void <init>(com.android.server.usb.UsbDebuggingManager, android.os.Looper)
    {
        com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler r0;
        com.android.server.usb.UsbDebuggingManager r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler;

        r1 := @parameter0: com.android.server.usb.UsbDebuggingManager;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler r0;
        android.os.Message r1;
        java.lang.String r2, r3, r4, $r10, $r15, $r19, $r25, $r30;
        int $i0, $i1;
        com.android.server.usb.UsbDebuggingManager $r6, $r8, $r9, $r12, $r13, $r14, $r16, $r18, $r20, $r22, $r24, $r28, $r31, $r32, $r33, $r35, $r38, $r40, $r41, $r42, $r44, $r45, $r49;
        java.lang.Object $r7, $r17;
        boolean $z0, $z2, $z4;
        java.lang.StringBuilder $r21, $r23, $r26, $r27, $r29;
        java.lang.Thread $r36, $r46, $r48;
        java.lang.Exception $r47;

        r0 := @this: com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label06;
            case 4: goto label09;
            case 5: goto label10;
            case 6: goto label11;
            default: goto label01;
        };

     label01:
        return;

     label02:
        $r42 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $z4 = staticinvoke <com.android.server.usb.UsbDebuggingManager: boolean access$000(com.android.server.usb.UsbDebuggingManager)>($r42);

        if $z4 != 0 goto label01;

        $r41 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: boolean access$002(com.android.server.usb.UsbDebuggingManager,boolean)>($r41, 1);

        $r44 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $r46 = new java.lang.Thread;

        $r45 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        specialinvoke $r46.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r45, "UsbDebuggingManager");

        staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.Thread access$102(com.android.server.usb.UsbDebuggingManager,java.lang.Thread)>($r44, $r46);

        $r49 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $r48 = staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.Thread access$100(com.android.server.usb.UsbDebuggingManager)>($r49);

        virtualinvoke $r48.<java.lang.Thread: void start()>();

        return;

     label03:
        $r28 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $z2 = staticinvoke <com.android.server.usb.UsbDebuggingManager: boolean access$000(com.android.server.usb.UsbDebuggingManager)>($r28);

        if $z2 == 0 goto label01;

        $r32 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: boolean access$002(com.android.server.usb.UsbDebuggingManager,boolean)>($r32, 0);

        $r31 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: void access$200(com.android.server.usb.UsbDebuggingManager)>($r31);

     label04:
        $r35 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $r36 = staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.Thread access$100(com.android.server.usb.UsbDebuggingManager)>($r35);

        virtualinvoke $r36.<java.lang.Thread: void join()>();

     label05:
        $r33 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.Thread access$102(com.android.server.usb.UsbDebuggingManager,java.lang.Thread)>($r33, null);

        $r40 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: java.io.OutputStream access$302(com.android.server.usb.UsbDebuggingManager,java.io.OutputStream)>($r40, null);

        $r38 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: android.net.LocalSocket access$402(com.android.server.usb.UsbDebuggingManager,android.net.LocalSocket)>($r38, null);

        return;

     label06:
        $r17 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = (java.lang.String) $r17;

        $r16 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        r4 = staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.String access$500(com.android.server.usb.UsbDebuggingManager,java.lang.String)>($r16, r3);

        $r18 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $r19 = staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.String access$600(com.android.server.usb.UsbDebuggingManager)>($r18);

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z0 != 0 goto label07;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fingerprints do not match. Got ");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expected ");

        $r24 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $r25 = staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.String access$600(com.android.server.usb.UsbDebuggingManager)>($r24);

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("UsbDebuggingManager", $r30);

        return;

     label07:
        $i1 = r1.<android.os.Message: int arg1>;

        if $i1 != 1 goto label08;

        $r22 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: void access$700(com.android.server.usb.UsbDebuggingManager,java.lang.String)>($r22, r3);

     label08:
        $r20 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: void access$800(com.android.server.usb.UsbDebuggingManager,java.lang.String)>($r20, "OK");

        return;

     label09:
        $r14 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: void access$800(com.android.server.usb.UsbDebuggingManager,java.lang.String)>($r14, "NO");

        return;

     label10:
        $r7 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (java.lang.String) $r7;

        $r9 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $r8 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $r10 = staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.String access$500(com.android.server.usb.UsbDebuggingManager,java.lang.String)>($r8, r2);

        staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.String access$602(com.android.server.usb.UsbDebuggingManager,java.lang.String)>($r9, $r10);

        $r12 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $r13 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        $r15 = staticinvoke <com.android.server.usb.UsbDebuggingManager: java.lang.String access$600(com.android.server.usb.UsbDebuggingManager)>($r13);

        staticinvoke <com.android.server.usb.UsbDebuggingManager: void access$900(com.android.server.usb.UsbDebuggingManager,java.lang.String,java.lang.String)>($r12, r2, $r15);

        return;

     label11:
        $r6 = r0.<com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: com.android.server.usb.UsbDebuggingManager this$0>;

        staticinvoke <com.android.server.usb.UsbDebuggingManager: void access$1000(com.android.server.usb.UsbDebuggingManager)>($r6);

        return;

     label12:
        $r47 := @caughtexception;

        goto label05;

        catch java.lang.Exception from label04 to label05 with label12;
    }

    public static void <clinit>()
    {
        <com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: int MESSAGE_ADB_ENABLED> = 1;

        <com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: int MESSAGE_ADB_DISABLED> = 2;

        <com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: int MESSAGE_ADB_DENY> = 4;

        <com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: int MESSAGE_ADB_CONFIRM> = 5;

        <com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: int MESSAGE_ADB_CLEAR> = 6;

        <com.android.server.usb.UsbDebuggingManager$UsbDebuggingHandler: int MESSAGE_ADB_ALLOW> = 3;

        return;
    }
}
