final class com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver extends android.view.InputEventReceiver
{
    final com.android.internal.policy.impl.PhoneWindowManager this$0;

    public void <init>(com.android.internal.policy.impl.PhoneWindowManager, android.view.InputChannel, android.os.Looper)
    {
        com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver r0;
        com.android.internal.policy.impl.PhoneWindowManager r1;
        android.view.InputChannel r2;
        android.os.Looper r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver;

        r1 := @parameter0: com.android.internal.policy.impl.PhoneWindowManager;

        r2 := @parameter1: android.view.InputChannel;

        r3 := @parameter2: android.os.Looper;

        r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0> = r1;

        specialinvoke r0.<android.view.InputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper)>(r2, r3);

        return;
    }

    public void onInputEvent(android.view.InputEvent)
    {
        com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver r0;
        android.view.InputEvent r1;
        java.lang.Throwable r2, r4, $r19, $r21;
        java.lang.Object r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean z0, $z1;
        android.view.MotionEvent $r5;
        com.android.internal.policy.impl.PhoneWindowManager $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r17, $r18, $r20;
        android.view.WindowManagerPolicy$WindowManagerFuncs $r7, $r14;
        android.os.Handler $r15;
        java.lang.Runnable $r16;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver;

        r1 := @parameter0: android.view.InputEvent;

     label01:
        $z1 = r1 instanceof android.view.MotionEvent;

        if $z1 == 0 goto label12;

        $i3 = virtualinvoke r1.<android.view.InputEvent: int getSource()>();

        $i4 = 2 & $i3;

        if $i4 == 0 goto label12;

        $r5 = (android.view.MotionEvent) r1;

        $i5 = virtualinvoke $r5.<android.view.MotionEvent: int getAction()>();

        if $i5 != 0 goto label12;

        $r6 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r7 = $r6.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowManagerFuncs mWindowManagerFuncs>;

        r3 = interfaceinvoke $r7.<android.view.WindowManagerPolicy$WindowManagerFuncs: java.lang.Object getWindowManagerLock()>();

        entermonitor r3;

     label02:
        $r8 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $i7 = $r8.<com.android.internal.policy.impl.PhoneWindowManager: int mResettingSystemUiFlags>;

        $i6 = 2 | $i7;

        $i8 = 1 | $i6;

        i0 = 4 | $i8;

        $r9 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        i1 = $r9.<com.android.internal.policy.impl.PhoneWindowManager: int mResettingSystemUiFlags>;

     label03:
        z0 = 0;

        if i1 == i0 goto label06;

     label04:
        $r20 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r20.<com.android.internal.policy.impl.PhoneWindowManager: int mResettingSystemUiFlags> = i0;

     label05:
        z0 = 1;

     label06:
        $r10 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $i9 = $r10.<com.android.internal.policy.impl.PhoneWindowManager: int mForceClearedSystemUiFlags>;

        i2 = 2 | $i9;

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $i10 = $r11.<com.android.internal.policy.impl.PhoneWindowManager: int mForceClearedSystemUiFlags>;

        if $i10 == i2 goto label09;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r13.<com.android.internal.policy.impl.PhoneWindowManager: int mForceClearedSystemUiFlags> = i2;

     label07:
        z0 = 1;

     label08:
        $r17 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r15 = $r17.<com.android.internal.policy.impl.PhoneWindowManager: android.os.Handler mHandler>;

        $r18 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r16 = staticinvoke <com.android.internal.policy.impl.PhoneWindowManager: java.lang.Runnable access$700(com.android.internal.policy.impl.PhoneWindowManager)>($r18);

        virtualinvoke $r15.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r16, 1000L);

     label09:
        exitmonitor r3;

     label10:
        if z0 == 0 goto label12;

     label11:
        $r12 = r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r14 = $r12.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowManagerFuncs mWindowManagerFuncs>;

        interfaceinvoke $r14.<android.view.WindowManagerPolicy$WindowManagerFuncs: void reevaluateStatusBarVisibility()>();

     label12:
        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: void finishInputEvent(android.view.InputEvent,boolean)>(r1, 0);

        return;

     label13:
        $r19 := @caughtexception;

        r4 = $r19;

     label14:
        exitmonitor r3;

     label15:
        throw r4;

     label16:
        $r21 := @caughtexception;

        r2 = $r21;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindowManager$HideNavInputEventReceiver: void finishInputEvent(android.view.InputEvent,boolean)>(r1, 0);

        throw r2;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label15 to label16 with label16;
    }
}
