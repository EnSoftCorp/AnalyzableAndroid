final class com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler extends android.os.Handler
{
    public static final int MSG_CLEAR_ACCESSIBILITY_NODE_INFO_CACHE;
    public static final int MSG_ON_GESTURE;
    public static final int MSG_ON_KEY_EVENT;
    public static final int MSG_ON_KEY_EVENT_TIMEOUT;
    final com.android.server.accessibility.AccessibilityManagerService$Service this$1;

    public void <init>(com.android.server.accessibility.AccessibilityManagerService$Service, android.os.Looper)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler r0;
        com.android.server.accessibility.AccessibilityManagerService$Service r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$Service;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: com.android.server.accessibility.AccessibilityManagerService$Service this$1> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback,boolean)>(r2, null, 1);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler r0;
        android.os.Message r1;
        int i0, i1, i2, $i3;
        com.android.server.accessibility.AccessibilityManagerService$PendingEvent r2;
        android.view.KeyEvent r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.Object $r9, $r13;
        com.android.server.accessibility.AccessibilityManagerService$Service $r10, $r11, $r12, $r14;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int what>;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label1;
        };

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        i2 = r1.<android.os.Message: int arg1>;

        $r14 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: com.android.server.accessibility.AccessibilityManagerService$Service this$1>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService$Service: void access$3700(com.android.server.accessibility.AccessibilityManagerService$Service,int)>($r14, i2);

        return;

     label3:
        $r13 = r1.<android.os.Message: java.lang.Object obj>;

        r3 = (android.view.KeyEvent) $r13;

        i1 = r1.<android.os.Message: int arg1>;

        $r12 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: com.android.server.accessibility.AccessibilityManagerService$Service this$1>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService$Service: void access$3800(com.android.server.accessibility.AccessibilityManagerService$Service,android.view.KeyEvent,int)>($r12, r3, i1);

        return;

     label4:
        $r11 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: com.android.server.accessibility.AccessibilityManagerService$Service this$1>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService$Service: void access$3900(com.android.server.accessibility.AccessibilityManagerService$Service)>($r11);

        return;

     label5:
        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.server.accessibility.AccessibilityManagerService$PendingEvent) $r9;

        $r10 = r0.<com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: com.android.server.accessibility.AccessibilityManagerService$Service this$1>;

        $i3 = r2.<com.android.server.accessibility.AccessibilityManagerService$PendingEvent: int sequence>;

        virtualinvoke $r10.<com.android.server.accessibility.AccessibilityManagerService$Service: void setOnKeyEventResult(boolean,int)>(0, $i3);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: int MSG_ON_KEY_EVENT_TIMEOUT> = 4;

        <com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: int MSG_ON_KEY_EVENT> = 2;

        <com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: int MSG_ON_GESTURE> = 1;

        <com.android.server.accessibility.AccessibilityManagerService$Service$InvocationHandler: int MSG_CLEAR_ACCESSIBILITY_NODE_INFO_CACHE> = 3;

        return;
    }
}
