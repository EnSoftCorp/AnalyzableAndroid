public final class org.apache.harmony.security.asn1.ASN1Explicit extends org.apache.harmony.security.asn1.ASN1Constructed
{
    public final org.apache.harmony.security.asn1.ASN1Type type;

    public void <init>(int, int, org.apache.harmony.security.asn1.ASN1Type)
    {
        org.apache.harmony.security.asn1.ASN1Explicit r0;
        int i0, i1;
        org.apache.harmony.security.asn1.ASN1Type r1;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Explicit;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.harmony.security.asn1.ASN1Type;

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Constructed: void <init>(int,int)>(i0, i1);

        r0.<org.apache.harmony.security.asn1.ASN1Explicit: org.apache.harmony.security.asn1.ASN1Type type> = r1;

        return;
    }

    public void <init>(int, org.apache.harmony.security.asn1.ASN1Type)
    {
        org.apache.harmony.security.asn1.ASN1Explicit r0;
        int i0;
        org.apache.harmony.security.asn1.ASN1Type r1;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Explicit;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.harmony.security.asn1.ASN1Type;

        specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Explicit: void <init>(int,int,org.apache.harmony.security.asn1.ASN1Type)>(128, i0, r1);

        return;
    }

    public java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream) throws java.io.IOException
    {
        org.apache.harmony.security.asn1.ASN1Explicit r0;
        org.apache.harmony.security.asn1.BerInputStream r1;
        int $i0, $i1, $i3, $i4, $i5;
        org.apache.harmony.security.asn1.ASN1Type $r2;
        java.lang.Object $r3, $r4;
        boolean $z0;
        org.apache.harmony.security.asn1.ASN1Exception $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r16;
        java.lang.String $r11, $r14, $r15;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Explicit;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerInputStream;

        $i1 = r0.<org.apache.harmony.security.asn1.ASN1Explicit: int constrId>;

        $i0 = r1.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        if $i1 == $i0 goto label1;

        $r5 = new org.apache.harmony.security.asn1.ASN1Exception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ASN.1 explicitly tagged type is expected at [");

        $i3 = r1.<org.apache.harmony.security.asn1.BerInputStream: int tagOffset>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]. Expected tag: ");

        $i4 = r0.<org.apache.harmony.security.asn1.ASN1Explicit: int constrId>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("but encountered tag ");

        $i5 = r1.<org.apache.harmony.security.asn1.BerInputStream: int tag>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i5);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.harmony.security.asn1.ASN1Exception: void <init>(java.lang.String)>($r15);

        throw $r5;

     label1:
        virtualinvoke r1.<org.apache.harmony.security.asn1.BerInputStream: int next()>();

        $r2 = r0.<org.apache.harmony.security.asn1.ASN1Explicit: org.apache.harmony.security.asn1.ASN1Type type>;

        $r3 = virtualinvoke $r2.<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)>(r1);

        r1.<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object content> = $r3;

        $z0 = r1.<org.apache.harmony.security.asn1.BerInputStream: boolean isVerify>;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r4 = virtualinvoke r0.<org.apache.harmony.security.asn1.ASN1Explicit: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)>(r1);

        return $r4;
    }

    public void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1Explicit r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Explicit;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerOutputStream: void encodeExplicit(org.apache.harmony.security.asn1.ASN1Explicit)>(r0);

        return;
    }

    public void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)
    {
        org.apache.harmony.security.asn1.ASN1Explicit r0;
        org.apache.harmony.security.asn1.BerOutputStream r1;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Explicit;

        r1 := @parameter0: org.apache.harmony.security.asn1.BerOutputStream;

        virtualinvoke r1.<org.apache.harmony.security.asn1.BerOutputStream: void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit)>(r0);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.harmony.security.asn1.ASN1Explicit r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String $r2, $r7;
        org.apache.harmony.security.asn1.ASN1Type $r5;

        r0 := @this: org.apache.harmony.security.asn1.ASN1Explicit;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r0.<org.apache.harmony.security.asn1.ASN1Constructed: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for type ");

        $r5 = r0.<org.apache.harmony.security.asn1.ASN1Explicit: org.apache.harmony.security.asn1.ASN1Type type>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
