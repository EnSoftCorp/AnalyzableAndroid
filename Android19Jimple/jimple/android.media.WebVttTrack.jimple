class android.media.WebVttTrack extends android.media.SubtitleTrack implements android.media.WebVttCueListener
{
    private static final java.lang.String TAG;
    private java.lang.Long mCurrentRunID;
    private final android.media.UnstyledTextExtractor mExtractor;
    private final android.media.WebVttParser mParser;
    private final java.util.Map mRegions;
    private final android.media.WebVttRenderingWidget mRenderingWidget;
    private final java.util.Vector mTimestamps;
    private final android.media.Tokenizer mTokenizer;

    void <init>(android.media.WebVttRenderingWidget, android.media.MediaFormat)
    {
        android.media.WebVttTrack r0;
        android.media.WebVttRenderingWidget r1;
        android.media.MediaFormat r2;
        android.media.WebVttParser $r3;
        android.media.UnstyledTextExtractor $r4, $r6;
        android.media.Tokenizer $r5;
        java.util.Vector $r7;
        java.util.HashMap $r8;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: android.media.WebVttRenderingWidget;

        r2 := @parameter1: android.media.MediaFormat;

        specialinvoke r0.<android.media.SubtitleTrack: void <init>(android.media.MediaFormat)>(r2);

        $r3 = new android.media.WebVttParser;

        specialinvoke $r3.<android.media.WebVttParser: void <init>(android.media.WebVttCueListener)>(r0);

        r0.<android.media.WebVttTrack: android.media.WebVttParser mParser> = $r3;

        $r4 = new android.media.UnstyledTextExtractor;

        specialinvoke $r4.<android.media.UnstyledTextExtractor: void <init>()>();

        r0.<android.media.WebVttTrack: android.media.UnstyledTextExtractor mExtractor> = $r4;

        $r5 = new android.media.Tokenizer;

        $r6 = r0.<android.media.WebVttTrack: android.media.UnstyledTextExtractor mExtractor>;

        specialinvoke $r5.<android.media.Tokenizer: void <init>(android.media.Tokenizer$OnTokenListener)>($r6);

        r0.<android.media.WebVttTrack: android.media.Tokenizer mTokenizer> = $r5;

        $r7 = new java.util.Vector;

        specialinvoke $r7.<java.util.Vector: void <init>()>();

        r0.<android.media.WebVttTrack: java.util.Vector mTimestamps> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<android.media.WebVttTrack: java.util.Map mRegions> = $r8;

        r0.<android.media.WebVttTrack: android.media.WebVttRenderingWidget mRenderingWidget> = r1;

        return;
    }

    public volatile android.media.SubtitleTrack$RenderingWidget getRenderingWidget()
    {
        android.media.WebVttTrack r0;
        android.media.WebVttRenderingWidget $r1;

        r0 := @this: android.media.WebVttTrack;

        $r1 = virtualinvoke r0.<android.media.WebVttTrack: android.media.WebVttRenderingWidget getRenderingWidget()>();

        return $r1;
    }

    public android.media.WebVttRenderingWidget getRenderingWidget()
    {
        android.media.WebVttTrack r0;
        android.media.WebVttRenderingWidget $r1;

        r0 := @this: android.media.WebVttTrack;

        $r1 = r0.<android.media.WebVttTrack: android.media.WebVttRenderingWidget mRenderingWidget>;

        return $r1;
    }

    public void onCueParsed(android.media.TextTrackCue)
    {
        android.media.WebVttTrack r0;
        android.media.TextTrackCue r1;
        android.media.WebVttParser r2;
        java.lang.Throwable r3, $r41;
        java.lang.String[] r4;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i10, $i11;
        java.lang.String r5, $r9, $r29, $r33, $r34;
        android.media.TextTrackCueSpan[][] r6, $r12;
        android.media.TextTrackCueSpan[] r7;
        android.media.TextTrackCueSpan r8;
        boolean $z0, $z1, $z3;
        android.media.UnstyledTextExtractor $r10;
        android.media.Tokenizer $r11, $r35;
        java.util.Vector $r13, $r16, $r17, $r18, $r20, $r24, $r26;
        long $l9, $l12, $l13, $l14, $l15, $l16, $l18, $l20;
        java.lang.Long $r14, $r22, $r23, $r25;
        long[] $r15, $r19;
        java.lang.Object $r21, $r39;
        byte $b17, $b19;
        java.lang.StringBuilder $r27, $r28, $r30, $r31, $r32, $r36, $r37;
        java.util.Map $r38;
        android.media.TextTrackRegion $r40;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: android.media.TextTrackCue;

        r2 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        entermonitor r2;

     label01:
        $r9 = r1.<android.media.TextTrackCue: java.lang.String mRegionId>;

        $i7 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i7 == 0 goto label02;

        $r38 = r0.<android.media.WebVttTrack: java.util.Map mRegions>;

        $r34 = r1.<android.media.TextTrackCue: java.lang.String mRegionId>;

        $r39 = interfaceinvoke $r38.<java.util.Map: java.lang.Object get(java.lang.Object)>($r34);

        $r40 = (android.media.TextTrackRegion) $r39;

        r1.<android.media.TextTrackCue: android.media.TextTrackRegion mRegion> = $r40;

     label02:
        $z0 = r0.<android.media.WebVttTrack: boolean DEBUG>;

        if $z0 == 0 goto label03;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding cue ");

        $r32 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("WebVttTrack", $r33);

     label03:
        $r11 = r0.<android.media.WebVttTrack: android.media.Tokenizer mTokenizer>;

        virtualinvoke $r11.<android.media.Tokenizer: void reset()>();

        r4 = r1.<android.media.TextTrackCue: java.lang.String[] mStrings>;

        i0 = lengthof r4;

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label08;

     label06:
        r5 = r4[i1];

        $r35 = r0.<android.media.WebVttTrack: android.media.Tokenizer mTokenizer>;

        virtualinvoke $r35.<android.media.Tokenizer: void tokenize(java.lang.String)>(r5);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        $r10 = r0.<android.media.WebVttTrack: android.media.UnstyledTextExtractor mExtractor>;

        $r12 = virtualinvoke $r10.<android.media.UnstyledTextExtractor: android.media.TextTrackCueSpan[][] getText()>();

        r1.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines> = $r12;

        $z1 = r0.<android.media.WebVttTrack: boolean DEBUG>;

        if $z1 == 0 goto label09;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke r1.<android.media.TextTrackCue: java.lang.StringBuilder appendStringsToBuilder(java.lang.StringBuilder)>($r28);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" simplified to: ");

        $r30 = virtualinvoke r1.<android.media.TextTrackCue: java.lang.StringBuilder appendLinesToBuilder(java.lang.StringBuilder)>($r31);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("WebVttTrack", $r29);

     label09:
        r6 = r1.<android.media.TextTrackCue: android.media.TextTrackCueSpan[][] mLines>;

        i2 = lengthof r6;

     label10:
        i3 = 0;

     label11:
        if i3 >= i2 goto label17;

     label12:
        r7 = r6[i3];

        i4 = lengthof r7;

     label13:
        i5 = 0;

     label14:
        if i5 >= i4 goto label30;

     label15:
        r8 = r7[i5];

        $l16 = r8.<android.media.TextTrackCueSpan: long mTimestampMs>;

        $l13 = r1.<android.media.TextTrackCue: long mStartTimeMs>;

        $b17 = $l16 cmp $l13;

        if $b17 <= 0 goto label29;

        $l15 = r8.<android.media.TextTrackCueSpan: long mTimestampMs>;

        $l14 = r1.<android.media.TextTrackCue: long mEndTimeMs>;

        $b19 = $l15 cmp $l14;

        if $b19 >= 0 goto label29;

        $r24 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $l18 = r8.<android.media.TextTrackCueSpan: long mTimestampMs>;

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l18);

        $z3 = virtualinvoke $r24.<java.util.Vector: boolean contains(java.lang.Object)>($r23);

        if $z3 != 0 goto label29;

        $r26 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $l20 = r8.<android.media.TextTrackCueSpan: long mTimestampMs>;

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l20);

        virtualinvoke $r26.<java.util.Vector: boolean add(java.lang.Object)>($r25);

     label16:
        goto label29;

     label17:
        $r13 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $i8 = virtualinvoke $r13.<java.util.Vector: int size()>();

        if $i8 <= 0 goto label24;

        $r17 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $i10 = virtualinvoke $r17.<java.util.Vector: int size()>();

        $r15 = newarray (long)[$i10];

        r1.<android.media.TextTrackCue: long[] mInnerTimesMs> = $r15;

     label18:
        i6 = 0;

     label19:
        $r16 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $i11 = virtualinvoke $r16.<java.util.Vector: int size()>();

        if i6 >= $i11 goto label21;

        $r19 = r1.<android.media.TextTrackCue: long[] mInnerTimesMs>;

        $r18 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        $r21 = virtualinvoke $r18.<java.util.Vector: java.lang.Object get(int)>(i6);

        $r22 = (java.lang.Long) $r21;

        $l12 = virtualinvoke $r22.<java.lang.Long: long longValue()>();

        $r19[i6] = $l12;

     label20:
        i6 = i6 + 1;

        goto label19;

     label21:
        $r20 = r0.<android.media.WebVttTrack: java.util.Vector mTimestamps>;

        virtualinvoke $r20.<java.util.Vector: void clear()>();

     label22:
        $r14 = r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID>;

        $l9 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        r1.<android.media.TextTrackCue: long mRunID> = $l9;

        exitmonitor r2;

     label23:
        virtualinvoke r0.<android.media.WebVttTrack: boolean addCue(android.media.SubtitleTrack$Cue)>(r1);

        return;

     label24:
        r1.<android.media.TextTrackCue: long[] mInnerTimesMs> = null;

     label25:
        goto label22;

     label26:
        $r41 := @caughtexception;

        r3 = $r41;

     label27:
        exitmonitor r2;

     label28:
        throw r3;

     label29:
        i5 = i5 + 1;

        goto label14;

     label30:
        i3 = i3 + 1;

        goto label11;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label02 to label03 with label26;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.Throwable from label21 to label22 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label26;
    }

    public void onData(java.lang.String, boolean, long)
    {
        android.media.WebVttTrack r0;
        java.lang.String r1, $r18;
        boolean z0;
        long l0, $l1;
        android.media.WebVttParser r2, $r6, $r7;
        java.lang.Throwable r3, $r17;
        java.lang.Long $r4, $r5, $r9, $r14;
        java.util.Map $r8;
        java.lang.IllegalStateException $r10;
        byte $b2;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        r2 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        entermonitor r2;

     label1:
        $r4 = r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID>;

        if $r4 == null goto label5;

        $r9 = r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID>;

        $l1 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

        $b2 = l0 cmp $l1;

        if $b2 == 0 goto label5;

        $r10 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Run #");

        $r14 = r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in progress.  Cannot process run #");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r10;

     label2:
        $r17 := @caughtexception;

        r3 = $r17;

     label3:
        exitmonitor r2;

     label4:
        throw r3;

     label5:
        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID> = $r5;

        $r6 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        virtualinvoke $r6.<android.media.WebVttParser: void parse(java.lang.String)>(r1);

     label6:
        if z0 == 0 goto label8;

     label7:
        virtualinvoke r0.<android.media.WebVttTrack: void finishedRun(long)>(l0);

        $r7 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        virtualinvoke $r7.<android.media.WebVttParser: void eos()>();

        $r8 = r0.<android.media.WebVttTrack: java.util.Map mRegions>;

        interfaceinvoke $r8.<java.util.Map: void clear()>();

        r0.<android.media.WebVttTrack: java.lang.Long mCurrentRunID> = null;

     label8:
        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
        catch java.lang.Throwable from label5 to label6 with label2;
        catch java.lang.Throwable from label7 to label8 with label2;
        catch java.lang.Throwable from label8 to label9 with label2;
    }

    public void onRegionParsed(android.media.TextTrackRegion)
    {
        android.media.WebVttTrack r0;
        android.media.TextTrackRegion r1;
        android.media.WebVttParser r2;
        java.lang.Throwable r3, $r7;
        java.lang.String $r4;
        java.util.Map $r5;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: android.media.TextTrackRegion;

        r2 = r0.<android.media.WebVttTrack: android.media.WebVttParser mParser>;

        entermonitor r2;

     label1:
        $r5 = r0.<android.media.WebVttTrack: java.util.Map mRegions>;

        $r4 = r1.<android.media.TextTrackRegion: java.lang.String mId>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void updateView(java.util.Vector)
    {
        android.media.WebVttTrack r0;
        java.util.Vector r1;
        boolean $z0, $z1;
        android.media.WebVttRenderingWidget $r3;
        android.media.MediaTimeProvider $r4, $r7;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        long $l0, $l1;
        java.lang.String $r10;
        java.lang.IllegalStateException $r11;

        r0 := @this: android.media.WebVttTrack;

        r1 := @parameter0: java.util.Vector;

        $z0 = r0.<android.media.WebVttTrack: boolean mVisible>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = r0.<android.media.WebVttTrack: boolean DEBUG>;

        if $z1 == 0 goto label3;

        $r4 = r0.<android.media.WebVttTrack: android.media.MediaTimeProvider mTimeProvider>;

        if $r4 == null goto label3;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("at ");

        $r7 = r0.<android.media.WebVttTrack: android.media.MediaTimeProvider mTimeProvider>;

        $l0 = interfaceinvoke $r7.<android.media.MediaTimeProvider: long getCurrentTimeUs(boolean,boolean)>(0, 1);

        $l1 = $l0 / 1000L;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms the active cues are:");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebVttTrack", $r10);

     label3:
        $r3 = r0.<android.media.WebVttTrack: android.media.WebVttRenderingWidget mRenderingWidget>;

        virtualinvoke $r3.<android.media.WebVttRenderingWidget: void setActiveCues(java.util.Vector)>(r1);

        return;

     label4:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebVttTrack", "at (illegal state) the active cues are:");

        goto label3;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
    }

    public static void <clinit>()
    {
        <android.media.WebVttTrack: java.lang.String TAG> = "WebVttTrack";

        return;
    }
}
