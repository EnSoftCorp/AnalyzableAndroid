class com.android.net.IProxyCallback$Stub$Proxy extends java.lang.Object implements com.android.net.IProxyCallback
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.net.IProxyCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.net.IProxyCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.net.IProxyCallback$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.net.IProxyCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.net.IProxyCallback$Stub$Proxy;

        $r1 = r0.<com.android.net.IProxyCallback$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.net.IProxyCallback$Stub$Proxy r0;

        r0 := @this: com.android.net.IProxyCallback$Stub$Proxy;

        return "com.android.net.IProxyCallback";
    }

    public void getProxyPort(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.net.IProxyCallback$Stub$Proxy r0;
        android.os.IBinder r1, $r4;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.net.IProxyCallback$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.net.IProxyCallback");

        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r1);

        $r4 = r0.<com.android.net.IProxyCallback$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
