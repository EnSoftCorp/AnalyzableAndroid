public class org.apache.http.impl.entity.EntityDeserializer extends java.lang.Object
{
    private final org.apache.http.entity.ContentLengthStrategy lenStrategy;

    public void <init>(org.apache.http.entity.ContentLengthStrategy)
    {
        org.apache.http.impl.entity.EntityDeserializer r0;
        org.apache.http.entity.ContentLengthStrategy r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.impl.entity.EntityDeserializer;

        r1 := @parameter0: org.apache.http.entity.ContentLengthStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Content length strategy may not be null");

        throw $r2;

     label1:
        r0.<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.ContentLengthStrategy lenStrategy> = r1;

        return;
    }

    public org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer, org.apache.http.HttpMessage) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.entity.EntityDeserializer r0;
        org.apache.http.io.SessionInputBuffer r1;
        org.apache.http.HttpMessage r2;
        org.apache.http.entity.BasicHttpEntity $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: org.apache.http.impl.entity.EntityDeserializer;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        r2 := @parameter1: org.apache.http.HttpMessage;

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Session input buffer may not be null");

        throw $r5;

     label1:
        if r2 != null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP message may not be null");

        throw $r4;

     label2:
        $r3 = virtualinvoke r0.<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>(r1, r2);

        return $r3;
    }

    protected org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer, org.apache.http.HttpMessage) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.entity.EntityDeserializer r0;
        org.apache.http.io.SessionInputBuffer r1;
        org.apache.http.HttpMessage r2;
        org.apache.http.entity.BasicHttpEntity r3, $r6;
        long l0;
        org.apache.http.Header r4, r5;
        org.apache.http.entity.ContentLengthStrategy $r7;
        byte $b1, $b2;
        org.apache.http.impl.io.ContentLengthInputStream $r8;
        org.apache.http.impl.io.ChunkedInputStream $r9;
        org.apache.http.impl.io.IdentityInputStream $r10;

        r0 := @this: org.apache.http.impl.entity.EntityDeserializer;

        r1 := @parameter0: org.apache.http.io.SessionInputBuffer;

        r2 := @parameter1: org.apache.http.HttpMessage;

        $r6 = new org.apache.http.entity.BasicHttpEntity;

        specialinvoke $r6.<org.apache.http.entity.BasicHttpEntity: void <init>()>();

        r3 = $r6;

        $r7 = r0.<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.ContentLengthStrategy lenStrategy>;

        l0 = interfaceinvoke $r7.<org.apache.http.entity.ContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>(r2);

        $b1 = l0 cmp -2L;

        if $b1 != 0 goto label4;

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setChunked(boolean)>(1);

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>(-1L);

        $r9 = new org.apache.http.impl.io.ChunkedInputStream;

        specialinvoke $r9.<org.apache.http.impl.io.ChunkedInputStream: void <init>(org.apache.http.io.SessionInputBuffer)>(r1);

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)>($r9);

     label1:
        r4 = interfaceinvoke r2.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Type");

        if r4 == null goto label2;

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContentType(org.apache.http.Header)>(r4);

     label2:
        r5 = interfaceinvoke r2.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Encoding");

        if r5 == null goto label3;

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContentEncoding(org.apache.http.Header)>(r5);

     label3:
        return r3;

     label4:
        $b2 = l0 cmp -1L;

        if $b2 != 0 goto label5;

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setChunked(boolean)>(0);

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>(-1L);

        $r10 = new org.apache.http.impl.io.IdentityInputStream;

        specialinvoke $r10.<org.apache.http.impl.io.IdentityInputStream: void <init>(org.apache.http.io.SessionInputBuffer)>(r1);

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)>($r10);

        goto label1;

     label5:
        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setChunked(boolean)>(0);

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>(l0);

        $r8 = new org.apache.http.impl.io.ContentLengthInputStream;

        specialinvoke $r8.<org.apache.http.impl.io.ContentLengthInputStream: void <init>(org.apache.http.io.SessionInputBuffer,long)>(r1, l0);

        virtualinvoke r3.<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)>($r8);

        goto label1;
    }
}
