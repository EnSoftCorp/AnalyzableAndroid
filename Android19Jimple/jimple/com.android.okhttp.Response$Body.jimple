public abstract class com.android.okhttp.Response$Body extends java.lang.Object
{

    public void <init>()
    {
        com.android.okhttp.Response$Body r0;

        r0 := @this: com.android.okhttp.Response$Body;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract java.io.InputStream byteStream() throws java.io.IOException;

    public byte[] bytes() throws java.io.IOException
    {
        com.android.okhttp.Response$Body r0;
        long l0;
        java.io.ByteArrayOutputStream r1, $r4;
        byte[] r2;
        java.io.InputStream r3, $r5;
        byte $b1, $b2;
        int $i4, $i5;
        java.io.IOException $r6, $r8;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.okhttp.Response$Body;

        l0 = virtualinvoke r0.<com.android.okhttp.Response$Body: long contentLength()>();

        $b1 = l0 cmp 2147483647L;

        if $b1 <= 0 goto label1;

        $r8 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot buffer entire body for content length: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label1:
        $b2 = l0 cmp -1L;

        if $b2 == 0 goto label2;

        $i4 = (int) l0;

        r2 = newarray (byte)[$i4];

        r3 = virtualinvoke r0.<com.android.okhttp.Response$Body: java.io.InputStream byteStream()>();

        staticinvoke <com.android.okhttp.internal.Util: void readFully(java.io.InputStream,byte[])>(r3, r2);

        $i5 = virtualinvoke r3.<java.io.InputStream: int read()>();

        if $i5 == -1 goto label3;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Content-Length and stream length disagree");

        throw $r6;

     label2:
        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r4;

        $r5 = virtualinvoke r0.<com.android.okhttp.Response$Body: java.io.InputStream byteStream()>();

        staticinvoke <com.android.okhttp.internal.Util: int copy(java.io.InputStream,java.io.OutputStream)>($r5, r1);

        r2 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label3:
        return r2;
    }

    public java.io.Reader charStream() throws java.io.IOException
    {
        com.android.okhttp.Response$Body r0;
        java.io.InputStreamReader $r1;
        java.io.InputStream $r2;

        r0 := @this: com.android.okhttp.Response$Body;

        $r1 = new java.io.InputStreamReader;

        $r2 = virtualinvoke r0.<com.android.okhttp.Response$Body: java.io.InputStream byteStream()>();

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r2, "UTF-8");

        return $r1;
    }

    public long contentLength()
    {
        com.android.okhttp.Response$Body r0;

        r0 := @this: com.android.okhttp.Response$Body;

        return -1L;
    }

    public java.lang.String contentType()
    {
        com.android.okhttp.Response$Body r0;

        r0 := @this: com.android.okhttp.Response$Body;

        return null;
    }

    public java.lang.String string() throws java.io.IOException
    {
        com.android.okhttp.Response$Body r0;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: com.android.okhttp.Response$Body;

        $r1 = new java.lang.String;

        $r2 = virtualinvoke r0.<com.android.okhttp.Response$Body: byte[] bytes()>();

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

        return $r1;
    }
}
