public class com.android.org.chromium.ui.base.LocalizationUtils extends java.lang.Object
{

    private void <init>()
    {
        com.android.org.chromium.ui.base.LocalizationUtils r0;

        r0 := @this: com.android.org.chromium.ui.base.LocalizationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getDefaultLocale()
    {
        java.util.Locale r0;
        java.lang.String r1, r2, $r3, $r4, $r5, $r9;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r6, $r7, $r8, $r10;

        r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r1 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        r2 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();

        $r3 = "iw";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        r1 = "he";

     label1:
        $z3 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z3 == 0 goto label4;

        return r1;

     label2:
        $r4 = "in";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        r1 = "id";

        goto label1;

     label3:
        $r5 = "tl";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        r1 = "fil";

        goto label1;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private static java.lang.String getDisplayNameForLocale(java.util.Locale, java.util.Locale)
    {
        java.util.Locale r0, r1;
        java.lang.String $r2;

        r0 := @parameter0: java.util.Locale;

        r1 := @parameter1: java.util.Locale;

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>(r1);

        return $r2;
    }

    private static java.util.Locale getJavaLocale(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        java.util.Locale $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = new java.util.Locale;

        specialinvoke $r3.<java.util.Locale: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    private static native java.lang.String nativeGetDurationString(long);

    private static native int nativeGetFirstStrongCharacterDirection(java.lang.String);

    private static native boolean nativeIsRTL();
}
