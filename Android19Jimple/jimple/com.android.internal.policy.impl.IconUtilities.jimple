final class com.android.internal.policy.impl.IconUtilities extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int[] sColors;
    private final android.graphics.Paint mBlurPaint;
    private final android.graphics.Canvas mCanvas;
    private int mColorIndex;
    private final android.util.DisplayMetrics mDisplayMetrics;
    private final android.graphics.Paint mGlowColorFocusedPaint;
    private final android.graphics.Paint mGlowColorPressedPaint;
    private int mIconHeight;
    private int mIconTextureHeight;
    private int mIconTextureWidth;
    private int mIconWidth;
    private final android.graphics.Rect mOldBounds;
    private final android.graphics.Paint mPaint;

    static void <clinit>()
    {
        int[] $r0;

        <com.android.internal.policy.impl.IconUtilities: java.lang.String TAG> = "IconUtilities";

        $r0 = newarray (int)[3];

        $r0[0] = -65536;

        $r0[1] = -16711936;

        $r0[2] = -16776961;

        <com.android.internal.policy.impl.IconUtilities: int[] sColors> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.internal.policy.impl.IconUtilities r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        android.util.DisplayMetrics r3;
        float f0, $f1, $f2, $f3;
        int i0, i1, i2, i3, $i4, $i5;
        android.util.TypedValue r4, $r16;
        android.graphics.Paint r5, r6, $r7, $r8, $r9, $r10, $r14, $r18, $r21;
        android.graphics.Canvas $r11, $r28;
        android.graphics.Rect $r12;
        android.graphics.BlurMaskFilter $r13;
        android.graphics.BlurMaskFilter$Blur $r15;
        android.graphics.TableMaskFilter $r19, $r26;
        android.content.res.Resources$Theme $r20, $r23;
        boolean $z0, $z1;
        android.graphics.ColorMatrix $r24;
        android.graphics.PaintFlagsDrawFilter $r25;

        r0 := @this: com.android.internal.policy.impl.IconUtilities;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.policy.impl.IconUtilities: int mIconWidth> = -1;

        r0.<com.android.internal.policy.impl.IconUtilities: int mIconHeight> = -1;

        r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureWidth> = -1;

        r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureHeight> = -1;

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>()>();

        r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mPaint> = $r7;

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mBlurPaint> = $r8;

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>()>();

        r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mGlowColorPressedPaint> = $r10;

        $r9 = new android.graphics.Paint;

        specialinvoke $r9.<android.graphics.Paint: void <init>()>();

        r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mGlowColorFocusedPaint> = $r9;

        $r12 = new android.graphics.Rect;

        specialinvoke $r12.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Rect mOldBounds> = $r12;

        $r11 = new android.graphics.Canvas;

        specialinvoke $r11.<android.graphics.Canvas: void <init>()>();

        r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Canvas mCanvas> = $r11;

        r0.<com.android.internal.policy.impl.IconUtilities: int mColorIndex> = 0;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        r0.<com.android.internal.policy.impl.IconUtilities: android.util.DisplayMetrics mDisplayMetrics> = r3;

        $f2 = r3.<android.util.DisplayMetrics: float density>;

        f0 = 5.0F * $f2;

        $f1 = virtualinvoke r2.<android.content.res.Resources: float getDimension(int)>(17104896);

        i0 = (int) $f1;

        r0.<com.android.internal.policy.impl.IconUtilities: int mIconHeight> = i0;

        r0.<com.android.internal.policy.impl.IconUtilities: int mIconWidth> = i0;

        $i5 = r0.<com.android.internal.policy.impl.IconUtilities: int mIconWidth>;

        $f3 = 2.0F * f0;

        $i4 = (int) $f3;

        i1 = $i5 + $i4;

        r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureHeight> = i1;

        r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureWidth> = i1;

        $r14 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mBlurPaint>;

        $r13 = new android.graphics.BlurMaskFilter;

        $r15 = <android.graphics.BlurMaskFilter$Blur: android.graphics.BlurMaskFilter$Blur NORMAL>;

        specialinvoke $r13.<android.graphics.BlurMaskFilter: void <init>(float,android.graphics.BlurMaskFilter$Blur)>(f0, $r15);

        virtualinvoke $r14.<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>($r13);

        $r16 = new android.util.TypedValue;

        specialinvoke $r16.<android.util.TypedValue: void <init>()>();

        r4 = $r16;

        r5 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mGlowColorPressedPaint>;

        $r20 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z0 = virtualinvoke $r20.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843661, r4, 1);

        if $z0 == 0 goto label3;

        i2 = r4.<android.util.TypedValue: int data>;

     label1:
        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>(i2);

        $r18 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mGlowColorPressedPaint>;

        $r19 = staticinvoke <android.graphics.TableMaskFilter: android.graphics.TableMaskFilter CreateClipTable(int,int)>(0, 30);

        virtualinvoke $r18.<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>($r19);

        r6 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mGlowColorFocusedPaint>;

        $r23 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $z1 = virtualinvoke $r23.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843663, r4, 1);

        if $z1 == 0 goto label4;

        i3 = r4.<android.util.TypedValue: int data>;

     label2:
        virtualinvoke r6.<android.graphics.Paint: void setColor(int)>(i3);

        $r21 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mGlowColorFocusedPaint>;

        $r26 = staticinvoke <android.graphics.TableMaskFilter: android.graphics.TableMaskFilter CreateClipTable(int,int)>(0, 30);

        virtualinvoke $r21.<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>($r26);

        $r24 = new android.graphics.ColorMatrix;

        specialinvoke $r24.<android.graphics.ColorMatrix: void <init>()>();

        virtualinvoke $r24.<android.graphics.ColorMatrix: void setSaturation(float)>(0.2F);

        $r28 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Canvas mCanvas>;

        $r25 = new android.graphics.PaintFlagsDrawFilter;

        specialinvoke $r25.<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>(4, 2);

        virtualinvoke $r28.<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>($r25);

        return;

     label3:
        i2 = -15616;

        goto label1;

     label4:
        i3 = -29184;

        goto label2;
    }

    private android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.IconUtilities r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.drawable.BitmapDrawable r2;
        android.graphics.Bitmap r3, $r10;
        android.graphics.Canvas r4;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.drawable.PaintDrawable r5;
        boolean $z0, $z1;
        android.graphics.Bitmap$Config $r6;
        android.graphics.Rect $r7, $r8, $r9;
        android.util.DisplayMetrics $r11;

        r0 := @this: com.android.internal.policy.impl.IconUtilities;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 = r0.<com.android.internal.policy.impl.IconUtilities: int mIconWidth>;

        i1 = r0.<com.android.internal.policy.impl.IconUtilities: int mIconHeight>;

        $z0 = r1 instanceof android.graphics.drawable.PaintDrawable;

        if $z0 == 0 goto label4;

        r5 = (android.graphics.drawable.PaintDrawable) r1;

        virtualinvoke r5.<android.graphics.drawable.PaintDrawable: void setIntrinsicWidth(int)>(i0);

        virtualinvoke r5.<android.graphics.drawable.PaintDrawable: void setIntrinsicHeight(int)>(i1);

     label1:
        i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i3 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if i2 <= 0 goto label3;

        if i3 <= 0 goto label3;

        if i0 < i2 goto label2;

        if i1 >= i3 goto label6;

     label2:
        $f1 = (float) i2;

        $f2 = (float) i3;

        f0 = $f1 / $f2;

        if i2 <= i3 goto label5;

        $f5 = (float) i0;

        $f6 = $f5 / f0;

        i1 = (int) $f6;

     label3:
        i4 = r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureWidth>;

        i5 = r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureHeight>;

        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i4, i5, $r6);

        r4 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Canvas mCanvas>;

        virtualinvoke r4.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(r3);

        $i8 = i4 - i0;

        i6 = $i8 / 2;

        $i9 = i5 - i1;

        i7 = $i9 / 2;

        $r7 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Rect mOldBounds>;

        $r8 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r7.<android.graphics.Rect: void set(android.graphics.Rect)>($r8);

        $i11 = i6 + i0;

        $i10 = i7 + i1;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i6, i7, $i11, $i10);

        virtualinvoke r1.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r4);

        $r9 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Rect mOldBounds>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r9);

        return r3;

     label4:
        $z1 = r1 instanceof android.graphics.drawable.BitmapDrawable;

        if $z1 == 0 goto label1;

        r2 = (android.graphics.drawable.BitmapDrawable) r1;

        $r10 = virtualinvoke r2.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $i12 = virtualinvoke $r10.<android.graphics.Bitmap: int getDensity()>();

        if $i12 != 0 goto label1;

        $r11 = r0.<com.android.internal.policy.impl.IconUtilities: android.util.DisplayMetrics mDisplayMetrics>;

        virtualinvoke r2.<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>($r11);

        goto label1;

     label5:
        if i3 <= i2 goto label3;

        $f4 = (float) i1;

        $f3 = f0 * $f4;

        i0 = (int) $f3;

        goto label3;

     label6:
        if i2 >= i0 goto label3;

        if i3 >= i1 goto label3;

        i0 = i2;

        i1 = i3;

        goto label3;
    }

    private android.graphics.Bitmap createSelectedBitmap(android.graphics.Bitmap, boolean)
    {
        com.android.internal.policy.impl.IconUtilities r0;
        android.graphics.Bitmap r1, r2, r5;
        boolean z0;
        android.graphics.Canvas r3, $r8;
        int[] r4;
        float f0, f1;
        android.graphics.Paint r6, $r10, $r11;
        android.graphics.Bitmap$Config $r7;
        int $i0, $i1, $i2, $i3;
        android.graphics.PorterDuff$Mode $r9;

        r0 := @this: com.android.internal.policy.impl.IconUtilities;

        r1 := @parameter0: android.graphics.Bitmap;

        z0 := @parameter1: boolean;

        $i1 = r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureWidth>;

        $i0 = r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureHeight>;

        $r7 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i1, $i0, $r7);

        $r8 = new android.graphics.Canvas;

        specialinvoke $r8.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r2);

        r3 = $r8;

        $r9 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode CLEAR>;

        virtualinvoke r3.<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff$Mode)>(0, $r9);

        r4 = newarray (int)[2];

        $r10 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mBlurPaint>;

        r5 = virtualinvoke r1.<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>($r10, r4);

        $i3 = r4[0];

        f0 = (float) $i3;

        $i2 = r4[1];

        f1 = (float) $i2;

        if z0 == 0 goto label2;

        r6 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mGlowColorPressedPaint>;

     label1:
        virtualinvoke r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r5, f0, f1, r6);

        virtualinvoke r5.<android.graphics.Bitmap: void recycle()>();

        $r11 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mPaint>;

        virtualinvoke r3.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r1, 0.0F, 0.0F, $r11);

        virtualinvoke r3.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return r2;

     label2:
        r6 = r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Paint mGlowColorFocusedPaint>;

        goto label1;
    }

    public android.graphics.drawable.Drawable createIconDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.IconUtilities r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.Bitmap r2, $r7, $r10;
        android.graphics.drawable.StateListDrawable r3, $r4;
        int[] $r5, $r8, $r12;
        android.graphics.drawable.BitmapDrawable $r6, $r9, $r11;
        int $i0, $i1;

        r0 := @this: com.android.internal.policy.impl.IconUtilities;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = specialinvoke r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable)>(r1);

        $r4 = new android.graphics.drawable.StateListDrawable;

        specialinvoke $r4.<android.graphics.drawable.StateListDrawable: void <init>()>();

        r3 = $r4;

        $r5 = newarray (int)[1];

        $r5[0] = 16842908;

        $r6 = new android.graphics.drawable.BitmapDrawable;

        $r7 = specialinvoke r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Bitmap createSelectedBitmap(android.graphics.Bitmap,boolean)>(r2, 0);

        specialinvoke $r6.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r7);

        virtualinvoke r3.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r5, $r6);

        $r8 = newarray (int)[1];

        $r8[0] = 16842919;

        $r9 = new android.graphics.drawable.BitmapDrawable;

        $r10 = specialinvoke r0.<com.android.internal.policy.impl.IconUtilities: android.graphics.Bitmap createSelectedBitmap(android.graphics.Bitmap,boolean)>(r2, 1);

        specialinvoke $r9.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r10);

        virtualinvoke r3.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r8, $r9);

        $r12 = newarray (int)[0];

        $r11 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r11.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>(r2);

        virtualinvoke r3.<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>($r12, $r11);

        $i1 = r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureWidth>;

        $i0 = r0.<com.android.internal.policy.impl.IconUtilities: int mIconTextureHeight>;

        virtualinvoke r3.<android.graphics.drawable.StateListDrawable: void setBounds(int,int,int,int)>(0, 0, $i1, $i0);

        return r3;
    }
}
