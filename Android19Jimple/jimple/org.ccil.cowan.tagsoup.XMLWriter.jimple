public class org.ccil.cowan.tagsoup.XMLWriter extends org.xml.sax.helpers.XMLFilterImpl implements org.xml.sax.ext.LexicalHandler
{
    public static final java.lang.String CDATA_SECTION_ELEMENTS;
    public static final java.lang.String DOCTYPE_PUBLIC;
    public static final java.lang.String DOCTYPE_SYSTEM;
    public static final java.lang.String ENCODING;
    public static final java.lang.String INDENT;
    public static final java.lang.String MEDIA_TYPE;
    public static final java.lang.String METHOD;
    public static final java.lang.String OMIT_XML_DECLARATION;
    public static final java.lang.String STANDALONE;
    public static final java.lang.String VERSION;
    private final org.xml.sax.Attributes EMPTY_ATTS;
    private java.lang.String[] booleans;
    private boolean cdataElement;
    private java.util.Hashtable doneDeclTable;
    private int elementLevel;
    private boolean forceDTD;
    private java.util.Hashtable forcedDeclTable;
    private boolean hasOutputDTD;
    private boolean htmlMode;
    private org.xml.sax.helpers.NamespaceSupport nsSupport;
    private java.io.Writer output;
    private java.lang.String outputEncoding;
    private java.util.Properties outputProperties;
    private java.lang.String overridePublic;
    private java.lang.String overrideSystem;
    private int prefixCounter;
    private java.util.Hashtable prefixTable;
    private java.lang.String standalone;
    private boolean unicodeMode;
    private java.lang.String version;

    public void <init>()
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String[] $r1;
        org.xml.sax.helpers.AttributesImpl $r2;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void <init>()>();

        $r1 = newarray (java.lang.String)[13];

        $r1[0] = "checked";

        $r1[1] = "compact";

        $r1[2] = "declare";

        $r1[3] = "defer";

        $r1[4] = "disabled";

        $r1[5] = "ismap";

        $r1[6] = "multiple";

        $r1[7] = "nohref";

        $r1[8] = "noresize";

        $r1[9] = "noshade";

        $r1[10] = "nowrap";

        $r1[11] = "readonly";

        $r1[12] = "selected";

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String[] booleans> = $r1;

        $r2 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r2.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS> = $r2;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int prefixCounter> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean unicodeMode> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String outputEncoding> = "";

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean htmlMode> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean forceDTD> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean hasOutputDTD> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overridePublic> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overrideSystem> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String version> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String standalone> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean cdataElement> = 0;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void init(java.io.Writer)>(null);

        return;
    }

    public void <init>(java.io.Writer)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.io.Writer r1;
        java.lang.String[] $r2;
        org.xml.sax.helpers.AttributesImpl $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.io.Writer;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void <init>()>();

        $r2 = newarray (java.lang.String)[13];

        $r2[0] = "checked";

        $r2[1] = "compact";

        $r2[2] = "declare";

        $r2[3] = "defer";

        $r2[4] = "disabled";

        $r2[5] = "ismap";

        $r2[6] = "multiple";

        $r2[7] = "nohref";

        $r2[8] = "noresize";

        $r2[9] = "noshade";

        $r2[10] = "nowrap";

        $r2[11] = "readonly";

        $r2[12] = "selected";

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String[] booleans> = $r2;

        $r3 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r3.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS> = $r3;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int prefixCounter> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean unicodeMode> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String outputEncoding> = "";

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean htmlMode> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean forceDTD> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean hasOutputDTD> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overridePublic> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overrideSystem> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String version> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String standalone> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean cdataElement> = 0;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void init(java.io.Writer)>(r1);

        return;
    }

    public void <init>(org.xml.sax.XMLReader)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        org.xml.sax.XMLReader r1;
        java.lang.String[] $r2;
        org.xml.sax.helpers.AttributesImpl $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: org.xml.sax.XMLReader;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void <init>(org.xml.sax.XMLReader)>(r1);

        $r2 = newarray (java.lang.String)[13];

        $r2[0] = "checked";

        $r2[1] = "compact";

        $r2[2] = "declare";

        $r2[3] = "defer";

        $r2[4] = "disabled";

        $r2[5] = "ismap";

        $r2[6] = "multiple";

        $r2[7] = "nohref";

        $r2[8] = "noresize";

        $r2[9] = "noshade";

        $r2[10] = "nowrap";

        $r2[11] = "readonly";

        $r2[12] = "selected";

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String[] booleans> = $r2;

        $r3 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r3.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS> = $r3;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int prefixCounter> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean unicodeMode> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String outputEncoding> = "";

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean htmlMode> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean forceDTD> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean hasOutputDTD> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overridePublic> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overrideSystem> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String version> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String standalone> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean cdataElement> = 0;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void init(java.io.Writer)>(null);

        return;
    }

    public void <init>(org.xml.sax.XMLReader, java.io.Writer)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        org.xml.sax.XMLReader r1;
        java.io.Writer r2;
        java.lang.String[] $r3;
        org.xml.sax.helpers.AttributesImpl $r4;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: org.xml.sax.XMLReader;

        r2 := @parameter1: java.io.Writer;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void <init>(org.xml.sax.XMLReader)>(r1);

        $r3 = newarray (java.lang.String)[13];

        $r3[0] = "checked";

        $r3[1] = "compact";

        $r3[2] = "declare";

        $r3[3] = "defer";

        $r3[4] = "disabled";

        $r3[5] = "ismap";

        $r3[6] = "multiple";

        $r3[7] = "nohref";

        $r3[8] = "noresize";

        $r3[9] = "noshade";

        $r3[10] = "nowrap";

        $r3[11] = "readonly";

        $r3[12] = "selected";

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String[] booleans> = $r3;

        $r4 = new org.xml.sax.helpers.AttributesImpl;

        specialinvoke $r4.<org.xml.sax.helpers.AttributesImpl: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS> = $r4;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int prefixCounter> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean unicodeMode> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String outputEncoding> = "";

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean htmlMode> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean forceDTD> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean hasOutputDTD> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overridePublic> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overrideSystem> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String version> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String standalone> = null;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean cdataElement> = 0;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void init(java.io.Writer)>(r2);

        return;
    }

    private boolean booleanAttribute(java.lang.String, java.lang.String, java.lang.String)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, r3, r4, $r7;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        java.lang.String[] $r5, $r6;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = r1;

        if r4 != null goto label1;

        i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(58);

        if i1 == -1 goto label1;

        $i3 = i1 + 1;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

     label1:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label3;

     label2:
        return 0;

     label3:
        i0 = 0;

     label4:
        $r5 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String[] booleans>;

        $i2 = lengthof $r5;

        if i0 >= $i2 goto label2;

        $r6 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String[] booleans>;

        $r7 = $r6[i0];

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label5;

        return 1;

     label5:
        i0 = i0 + 1;

        goto label4;
    }

    private java.lang.String doPrefix(java.lang.String, java.lang.String, boolean)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, r3, r4, r5, $r8, $r16, $r18, $r23, $r25, $r26, $r28;
        boolean z0, $z1, $z3, $z4, $z5, $z7;
        java.lang.StringBuilder r6, $r12, $r13;
        int i0, i1, $i2;
        org.xml.sax.helpers.NamespaceSupport $r7, $r9, $r14, $r15, $r21, $r24, $r27;
        java.lang.Object $r10, $r22;
        java.util.Hashtable $r11, $r17, $r20;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r7 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        r3 = virtualinvoke $r7.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>("");

        $r8 = "";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label03;

        if z0 == 0 goto label01;

        if r3 == null goto label01;

        $r27 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r27.<org.xml.sax.helpers.NamespaceSupport: boolean declarePrefix(java.lang.String,java.lang.String)>("", "");

     label01:
        r4 = null;

     label02:
        return r4;

     label03:
        if z0 == 0 goto label15;

        if r3 == null goto label15;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z7 == 0 goto label15;

        r4 = "";

     label04:
        if r4 != null goto label02;

        $r11 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable doneDeclTable>;

        $r10 = virtualinvoke $r11.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (java.lang.String) $r10;

        if r5 == null goto label08;

        if z0 == 0 goto label05;

        if r3 == null goto label06;

     label05:
        $r26 = "";

        $z5 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z5 != 0 goto label07;

     label06:
        $r24 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r28 = virtualinvoke $r24.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>(r5);

        if $r28 == null goto label08;

     label07:
        r5 = null;

     label08:
        if r5 != null goto label12;

        $r20 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable prefixTable>;

        $r22 = virtualinvoke $r20.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (java.lang.String) $r22;

        if r5 == null goto label12;

        if z0 == 0 goto label09;

        if r3 == null goto label10;

     label09:
        $r23 = "";

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z4 != 0 goto label11;

     label10:
        $r21 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r25 = virtualinvoke $r21.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>(r5);

        if $r25 == null goto label12;

     label11:
        r5 = null;

     label12:
        if r5 != null goto label13;

        if r2 == null goto label13;

        $r18 = "";

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 != 0 goto label13;

        i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(58);

        if i1 != -1 goto label16;

        if z0 == 0 goto label13;

        if r3 != null goto label13;

        r5 = "";

     label13:
        if r5 == null goto label14;

        $r14 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        $r16 = virtualinvoke $r14.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>(r5);

        if $r16 == null goto label17;

     label14:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__NS");

        $i2 = r0.<org.ccil.cowan.tagsoup.XMLWriter: int prefixCounter>;

        i0 = 1 + $i2;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int prefixCounter> = i0;

        $r13 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label13;

     label15:
        $r9 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        r4 = virtualinvoke $r9.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getPrefix(java.lang.String)>(r1);

        goto label04;

     label16:
        r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        goto label13;

     label17:
        $r15 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r15.<org.xml.sax.helpers.NamespaceSupport: boolean declarePrefix(java.lang.String,java.lang.String)>(r5, r1);

        $r17 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable doneDeclTable>;

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r5);

        return r5;
    }

    private void forceNSDecls()
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.util.Enumeration r1;
        java.util.Hashtable $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        $r2 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable forcedDeclTable>;

        r1 = virtualinvoke $r2.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (java.lang.String) $r3;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String doPrefix(java.lang.String,java.lang.String,boolean)>($r4, null, 1);

        goto label1;

     label2:
        return;
    }

    private void init(java.io.Writer)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.io.Writer r1;
        org.xml.sax.helpers.NamespaceSupport $r2;
        java.util.Hashtable $r3, $r4, $r5;
        java.util.Properties $r6;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.io.Writer;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void setOutput(java.io.Writer)>(r1);

        $r2 = new org.xml.sax.helpers.NamespaceSupport;

        specialinvoke $r2.<org.xml.sax.helpers.NamespaceSupport: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport> = $r2;

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable prefixTable> = $r3;

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable forcedDeclTable> = $r4;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable doneDeclTable> = $r5;

        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Properties outputProperties> = $r6;

        return;
    }

    private void write(char) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        char c0;
        java.io.IOException r1, $r3;
        java.io.Writer $r2;
        org.xml.sax.SAXException $r4;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        c0 := @parameter0: char;

     label1:
        $r2 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.io.Writer output>;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(c0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new org.xml.sax.SAXException;

        specialinvoke $r4.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r1);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void write(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1;
        java.io.IOException r2, $r4;
        java.io.Writer $r3;
        org.xml.sax.SAXException $r5;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.io.Writer output>;

        virtualinvoke $r3.<java.io.Writer: void write(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new org.xml.sax.SAXException;

        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r2);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void writeAttributes(org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        org.xml.sax.Attributes r1;
        int i0, i1, $i2;
        char[] r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: org.xml.sax.Attributes;

        i0 = interfaceinvoke r1.<org.xml.sax.Attributes: int getLength()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i1);

        r2 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(32);

        $r4 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i1);

        $r5 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i1);

        $r6 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i1);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeName(java.lang.String,java.lang.String,java.lang.String,boolean)>($r4, $r5, $r6, 0);

        $z0 = r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean htmlMode>;

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getLocalName(int)>(i1);

        $r8 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i1);

        $r9 = interfaceinvoke r1.<org.xml.sax.Attributes: java.lang.String getValue(int)>(i1);

        $z1 = specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean booleanAttribute(java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r9);

        if $z1 == 0 goto label3;

     label2:
        return;

     label3:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("=\"");

        $i2 = lengthof r2;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeEsc(char[],int,int,boolean)>(r2, 0, $i2, 1);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(34);

        i1 = i1 + 1;

        goto label1;
    }

    private void writeEsc(char[], int, int, boolean) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        char[] r1;
        int i0, i1, i2, $i3;
        boolean z0, $z1;
        char $c4, $c5, $c6, $c7;
        java.lang.String $r2;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        i2 = i0;

     label01:
        $i3 = i0 + i1;

        if i2 >= $i3 goto label10;

        $c4 = r1[i2];

        lookupswitch($c4)
        {
            case 34: goto label07;
            case 38: goto label04;
            case 60: goto label05;
            case 62: goto label06;
            default: goto label02;
        };

     label02:
        $z1 = r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean unicodeMode>;

        if $z1 != 0 goto label09;

        $c6 = r1[i2];

        if $c6 <= 127 goto label09;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("&#");

        $c7 = r1[i2];

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($c7);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>($r2);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(59);

     label03:
        i2 = i2 + 1;

        goto label01;

     label04:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("&amp;");

        goto label03;

     label05:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("&lt;");

        goto label03;

     label06:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("&gt;");

        goto label03;

     label07:
        if z0 == 0 goto label08;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("&quot;");

        goto label03;

     label08:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(34);

        goto label03;

     label09:
        $c5 = r1[i2];

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>($c5);

        goto label03;

     label10:
        return;
    }

    private void writeNSDecls() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.util.Enumeration r1;
        java.lang.String r2, r3, $r8;
        char[] r4;
        org.xml.sax.helpers.NamespaceSupport $r5, $r7;
        boolean $z0, $z1;
        java.lang.Object $r6;
        int $i0;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        $r5 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        r1 = virtualinvoke $r5.<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getDeclaredPrefixes()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r2 = (java.lang.String) $r6;

        $r7 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        r3 = virtualinvoke $r7.<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)>(r2);

        if r3 != null goto label2;

        r3 = "";

     label2:
        r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(32);

        $r8 = "";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label4;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("xmlns=\"");

     label3:
        $i0 = lengthof r4;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeEsc(char[],int,int,boolean)>(r4, 0, $i0, 1);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(34);

        goto label1;

     label4:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("xmlns:");

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(r2);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("=\"");

        goto label3;

     label5:
        return;
    }

    private void writeName(java.lang.String, java.lang.String, java.lang.String, boolean) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, r3, r4, $r5, $r6, $r7;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r4 = specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String doPrefix(java.lang.String,java.lang.String,boolean)>(r1, r3, z0);

        if r4 == null goto label1;

        $r7 = "";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 != 0 goto label1;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(r4);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(58);

     label1:
        if r2 == null goto label2;

        $r6 = "";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(r2);

        return;

     label2:
        $i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(58);

        $i1 = 1 + $i0;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>($r5);

        return;
    }

    public void characters(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1;
        char[] r2;
        int $i0;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof r2;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void characters(char[],int,int)>(r2, 0, $i0);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        char[] r1;
        int i0, i1, i2, $i3;
        boolean $z0;
        char $c4;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean cdataElement>;

        if $z0 != 0 goto label2;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeEsc(char[],int,int,boolean)>(r1, i0, i1, 0);

     label1:
        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void characters(char[],int,int)>(r1, i0, i1);

        return;

     label2:
        i2 = i0;

     label3:
        $i3 = i0 + i1;

        if i2 >= $i3 goto label1;

        $c4 = r1[i2];

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>($c4);

        i2 = i2 + 1;

        goto label3;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        char[] r1;
        int i0, i1, i2, $i3, $i6, $i7, $i8;
        char $c4, $c5, $c9;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("<!--");

        i2 = i0;

     label1:
        $i3 = i0 + i1;

        if i2 >= $i3 goto label3;

        $c4 = r1[i2];

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>($c4);

        $c5 = r1[i2];

        if $c5 != 45 goto label2;

        $i7 = i2 + 1;

        $i6 = i0 + i1;

        if $i7 > $i6 goto label2;

        $i8 = i2 + 1;

        $c9 = r1[$i8];

        if $c9 != 45 goto label2;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(32);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("-->");

        return;
    }

    public void dataElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2;
        org.xml.sax.Attributes $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void dataElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,java.lang.String)>("", r1, "", $r3, r2);

        return;
    }

    public void dataElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.Attributes $r4;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void dataElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,java.lang.String)>(r1, r2, "", $r4, r3);

        return;
    }

    public void dataElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, r3, r5;
        org.xml.sax.Attributes r4;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        r5 := @parameter4: java.lang.String;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, r4);

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void characters(java.lang.String)>(r5);

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void emptyElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1;
        org.xml.sax.Attributes $r2;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void emptyElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>("", r1, "", $r2);

        return;
    }

    public void emptyElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2;
        org.xml.sax.Attributes $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void emptyElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, "", $r3);

        return;
    }

    public void emptyElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, r3;
        org.xml.sax.Attributes r4;
        org.xml.sax.helpers.NamespaceSupport $r5;
        int $i0;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        $r5 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r5.<org.xml.sax.helpers.NamespaceSupport: void pushContext()>();

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(60);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeName(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 1);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeAttributes(org.xml.sax.Attributes)>(r4);

        $i0 = r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel>;

        if $i0 != 1 goto label1;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void forceNSDecls()>();

     label1:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeNSDecls()>();

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("/>");

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, r4);

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        return;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.io.IOException r1, $r2;
        org.xml.sax.SAXException $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(10);

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void endDocument()>();

     label1:
        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void flush()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r1);

        throw $r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void endElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)>("", r1, "");

        return;
    }

    public void endElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "");

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        int $i0, $i1, $i2;
        org.xml.sax.helpers.NamespaceSupport $r4;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $z0 = r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean htmlMode>;

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/1999/xhtml");

        if $z1 != 0 goto label1;

        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z14 == 0 goto label2;

     label1:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("area");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("base");

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("basefont");

        if $z4 != 0 goto label3;

        $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("br");

        if $z5 != 0 goto label3;

        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("col");

        if $z6 != 0 goto label3;

        $z7 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("frame");

        if $z7 != 0 goto label3;

        $z9 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("hr");

        if $z9 != 0 goto label3;

        $z8 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("img");

        if $z8 != 0 goto label3;

        $z11 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("input");

        if $z11 != 0 goto label3;

        $z10 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("isindex");

        if $z10 != 0 goto label3;

        $z13 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("link");

        if $z13 != 0 goto label3;

        $z12 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("meta");

        if $z12 != 0 goto label3;

        $z15 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("param");

        if $z15 != 0 goto label3;

     label2:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("</");

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeName(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 1);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(62);

     label3:
        $i0 = r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel>;

        if $i0 != 1 goto label4;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(10);

     label4:
        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean cdataElement> = 0;

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r4 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r4.<org.xml.sax.helpers.NamespaceSupport: void popContext()>();

        $i1 = r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel>;

        $i2 = -1 + $i1;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel> = $i2;

        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.io.Writer $r1;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        $r1 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.io.Writer output>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;
    }

    public void forceNSDecl(java.lang.String)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1;
        java.lang.Boolean $r2;
        java.util.Hashtable $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable forcedDeclTable>;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r2);

        return;
    }

    public void forceNSDecl(java.lang.String, java.lang.String)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void setPrefix(java.lang.String,java.lang.String)>(r1, r2);

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void forceNSDecl(java.lang.String)>(r1);

        return;
    }

    public java.lang.String getOutputProperty(java.lang.String)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, $r3;
        java.util.Properties $r2;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Properties outputProperties>;

        $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String getPrefix(java.lang.String)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, $r4;
        java.util.Hashtable $r2;
        java.lang.Object $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable prefixTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        char[] r1;
        int i0, i1;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeEsc(char[],int,int,boolean)>(r1, i0, i1, 0);

        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void ignorableWhitespace(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2;
        int $i0;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("<?");

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(r1);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(32);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(r2);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("?>");

        $i0 = r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel>;

        if $i0 >= 1 goto label1;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(10);

     label1:
        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void processingInstruction(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void reset()
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        org.xml.sax.helpers.NamespaceSupport $r1;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel> = 0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int prefixCounter> = 0;

        $r1 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r1.<org.xml.sax.helpers.NamespaceSupport: void reset()>();

        return;
    }

    public void setOutput(java.io.Writer)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.io.Writer r1;
        java.io.OutputStreamWriter $r2;
        java.io.PrintStream $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.io.Writer;

        if r1 != null goto label1;

        $r2 = new java.io.OutputStreamWriter;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r3);

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.io.Writer output> = $r2;

        return;

     label1:
        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.io.Writer output> = r1;

        return;
    }

    public void setOutputProperty(java.lang.String, java.lang.String)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, $r5;
        java.util.Properties $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Properties outputProperties>;

        virtualinvoke $r3.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(r1, r2);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("encoding");

        if $z0 == 0 goto label2;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String outputEncoding> = r2;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $z7 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("utf");

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean unicodeMode> = $z7;

     label1:
        return;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("method");

        if $z1 == 0 goto label3;

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("html");

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean htmlMode> = $z6;

        return;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("doctype-public");

        if $z2 == 0 goto label4;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overridePublic> = r2;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean forceDTD> = 1;

        return;

     label4:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("doctype-system");

        if $z3 == 0 goto label5;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overrideSystem> = r2;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean forceDTD> = 1;

        return;

     label5:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("version");

        if $z4 == 0 goto label6;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String version> = r2;

        return;

     label6:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("standalone");

        if $z5 == 0 goto label1;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String standalone> = r2;

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String)
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2;
        java.util.Hashtable $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Hashtable prefixTable>;

        virtualinvoke $r3.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, r3, $r4, $r5, $r6;
        char c0, c1;
        boolean $z0, $z1;
        int $i2, $i3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r1 != null goto label02;

     label01:
        return;

     label02:
        $z0 = r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean hasOutputDTD>;

        if $z0 != 0 goto label01;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean hasOutputDTD> = 1;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("<!DOCTYPE ");

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(r1);

        if r3 != null goto label03;

        r3 = "";

     label03:
        $r4 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overrideSystem>;

        if $r4 == null goto label04;

        r3 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overrideSystem>;

     label04:
        $i2 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(34);

        if $i2 == -1 goto label09;

        c0 = 39;

     label05:
        $r5 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overridePublic>;

        if $r5 == null goto label06;

        r2 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String overridePublic>;

     label06:
        if r2 == null goto label11;

        $r6 = "";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label11;

        $i3 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(34);

        if $i3 == -1 goto label10;

        c1 = 39;

     label07:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(" PUBLIC ");

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(c1);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(r2);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(c1);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(32);

     label08:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(c0);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(r3);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(c0);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(">\n");

        return;

     label09:
        c0 = 34;

        goto label05;

     label10:
        c1 = 34;

        goto label07;

     label11:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(" SYSTEM ");

        goto label08;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.util.Properties $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void reset()>();

        $r2 = "yes";

        $r1 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.util.Properties outputProperties>;

        $r3 = virtualinvoke $r1.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "no");

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label3;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("<?xml");

        $r4 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String version>;

        if $r4 != null goto label4;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(" version=\"1.0\"");

     label1:
        $r6 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String outputEncoding>;

        if $r6 == null goto label2;

        $r9 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String outputEncoding>;

        if $r9 == "" goto label2;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(" encoding=\"");

        $r10 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String outputEncoding>;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>($r10);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("\"");

     label2:
        $r7 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String standalone>;

        if $r7 != null goto label5;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(" standalone=\"yes\"?>\n");

     label3:
        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void startDocument()>();

        return;

     label4:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(" version=\"");

        $r5 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String version>;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>($r5);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("\"");

        goto label1;

     label5:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>(" standalone=\"");

        $r8 = r0.<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String standalone>;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>($r8);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)>("\"");

        goto label3;
    }

    public void startElement(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1;
        org.xml.sax.Attributes $r2;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>("", r1, "", $r2);

        return;
    }

    public void startElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2;
        org.xml.sax.Attributes $r3;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.Attributes EMPTY_ATTS>;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, "", $r3);

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1, r2, r3, r5;
        org.xml.sax.Attributes r4;
        int $i0, $i1, $i2;
        org.xml.sax.helpers.NamespaceSupport $r6;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.xml.sax.Attributes;

        $i0 = r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel>;

        $i1 = 1 + $i0;

        r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel> = $i1;

        $r6 = r0.<org.ccil.cowan.tagsoup.XMLWriter: org.xml.sax.helpers.NamespaceSupport nsSupport>;

        virtualinvoke $r6.<org.xml.sax.helpers.NamespaceSupport: void pushContext()>();

        $z0 = r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean forceDTD>;

        if $z0 == 0 goto label2;

        $z4 = r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean hasOutputDTD>;

        if $z4 != 0 goto label2;

        if r2 != null goto label6;

        r5 = r3;

     label1:
        virtualinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(r5, "", "");

     label2:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(60);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeName(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 1);

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeAttributes(org.xml.sax.Attributes)>(r4);

        $i2 = r0.<org.ccil.cowan.tagsoup.XMLWriter: int elementLevel>;

        if $i2 != 1 goto label3;

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void forceNSDecls()>();

     label3:
        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void writeNSDecls()>();

        specialinvoke r0.<org.ccil.cowan.tagsoup.XMLWriter: void write(char)>(62);

        $z1 = r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean htmlMode>;

        if $z1 == 0 goto label5;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("script");

        if $z2 != 0 goto label4;

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("style");

        if $z3 == 0 goto label5;

     label4:
        r0.<org.ccil.cowan.tagsoup.XMLWriter: boolean cdataElement> = 1;

     label5:
        specialinvoke r0.<org.xml.sax.helpers.XMLFilterImpl: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r1, r2, r3, r4);

        return;

     label6:
        r5 = r2;

        goto label1;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.XMLWriter r0;
        java.lang.String r1;

        r0 := @this: org.ccil.cowan.tagsoup.XMLWriter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public static void <clinit>()
    {
        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String VERSION> = "version";

        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String STANDALONE> = "standalone";

        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String OMIT_XML_DECLARATION> = "omit-xml-declaration";

        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String METHOD> = "method";

        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String MEDIA_TYPE> = "media-type";

        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String INDENT> = "indent";

        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String ENCODING> = "encoding";

        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String DOCTYPE_SYSTEM> = "doctype-system";

        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String DOCTYPE_PUBLIC> = "doctype-public";

        <org.ccil.cowan.tagsoup.XMLWriter: java.lang.String CDATA_SECTION_ELEMENTS> = "cdata-section-elements";

        return;
    }
}
