public class android.renderscript.Mesh$TriangleMeshBuilder extends java.lang.Object
{
    public static final int COLOR;
    public static final int NORMAL;
    public static final int TEXTURE_0;
    float mA;
    float mB;
    android.renderscript.Element mElement;
    int mFlags;
    float mG;
    int mIndexCount;
    short[] mIndexData;
    int mMaxIndex;
    float mNX;
    float mNY;
    float mNZ;
    float mR;
    android.renderscript.RenderScript mRS;
    float mS0;
    float mT0;
    int mVtxCount;
    float[] mVtxData;
    int mVtxSize;

    public void <init>(android.renderscript.RenderScript, int, int)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        android.renderscript.RenderScript r1;
        int i0, i1;
        float[] $r2;
        short[] $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        r1 := @parameter0: android.renderscript.RenderScript;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNX> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNY> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNZ> = -1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mS0> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mT0> = 0.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mR> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mG> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mB> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mA> = 1.0F;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS> = r1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = 0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex> = 0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = 0;

        $r2 = newarray (float)[128];

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData> = $r2;

        $r3 = newarray (short)[128];

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData> = $r3;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize> = i0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags> = i1;

        if i0 < 2 goto label1;

        if i0 <= 3 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Vertex size out of range.");

        throw $r4;

     label2:
        return;
    }

    private void latch()
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float[] r1, r2, r3, r4, r5, r6, r7, r8, r9, r10;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        $i9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i12 = 1 & $i9;

        if $i12 == 0 goto label1;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(4);

        r7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i25 = i6 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i25;

        $f6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mR>;

        r7[i6] = $f6;

        r8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i24 = i7 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i24;

        $f5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mG>;

        r8[i7] = $f5;

        r9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i27 = i8 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i27;

        $f8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mB>;

        r9[i8] = $f8;

        r10 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i10 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i26 = i10 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i26;

        $f7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mA>;

        r10[i10] = $f7;

     label1:
        $i11 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i14 = 256 & $i11;

        if $i14 == 0 goto label2;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(2);

        r5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i23 = i4 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i23;

        $f4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mS0>;

        r5[i4] = $f4;

        r6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i22 = i5 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i22;

        $f3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mT0>;

        r6[i5] = $f3;

     label2:
        $i13 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i16 = 2 & $i13;

        if $i16 == 0 goto label3;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(4);

        r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i17 = i0 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i17;

        $f0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNX>;

        r1[i0] = $f0;

        r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i19 = i1 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i19;

        $f2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNY>;

        r2[i1] = $f2;

        r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i21 = i2 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i21;

        $f1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNZ>;

        r3[i2] = $f1;

        r4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i20 = i3 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i20;

        r4[i3] = 0.0F;

     label3:
        $i15 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        $i18 = 1 + $i15;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex> = $i18;

        return;
    }

    private void makeSpace(int)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float[] r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        i0 := @parameter0: int;

        $i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i3 = i0 + $i1;

        $r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i2 = lengthof $r2;

        if $i3 < $i2 goto label1;

        $r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i4 = lengthof $r3;

        $i5 = 2 * $i4;

        r1 = newarray (float)[$i5];

        $r5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $r4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        $i6 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r1, 0, $i6);

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData> = r1;

     label1:
        return;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder addTriangle(int, int, int)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i18, $i19, $i20;
        short[] r1, r2, r3, r4, $r6, $r7, $r8, $r9;
        java.lang.IllegalStateException $r5;
        short $s14, $s16, $s17;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        if i0 >= $i6 goto label1;

        if i0 < 0 goto label1;

        $i7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        if i1 >= $i7 goto label1;

        if i1 < 0 goto label1;

        $i8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        if i2 >= $i8 goto label1;

        if i2 >= 0 goto label2;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Index provided greater than vertex count.");

        throw $r5;

     label2:
        $i9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $i12 = 3 + $i9;

        $r6 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i10 = lengthof $r6;

        if $i12 < $i10 goto label3;

        $r7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i19 = lengthof $r7;

        $i18 = 2 * $i19;

        r4 = newarray (short)[$i18];

        $r9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $r8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        $i20 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r4, 0, $i20);

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData> = r4;

     label3:
        r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        i3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $i11 = i3 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = $i11;

        $s14 = (short) i0;

        r1[i3] = $s14;

        r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        i4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $i13 = i4 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = $i13;

        $s16 = (short) i1;

        r2[i4] = $s16;

        r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        i5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $i15 = i5 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount> = $i15;

        $s17 = (short) i2;

        r3[i5] = $s17;

        return r0;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder addVertex(float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1;
        float[] r1, r2;
        int i0, i1, $i2, $i3, $i4;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize>;

        if $i2 == 2 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r3;

     label1:
        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(2);

        r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i3 = i0 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i3;

        r1[i0] = f0;

        r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i4 = i1 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i4;

        r2[i1] = f1;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void latch()>();

        return r0;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder addVertex(float, float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1, f2;
        float[] r1, r2, r3, r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $i4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize>;

        if $i4 == 3 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r5;

     label1:
        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void makeSpace(int)>(4);

        r1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i5 = i0 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i5;

        r1[i0] = f0;

        r2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i6 = i1 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i6;

        r2[i1] = f1;

        r3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i2 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i7 = i2 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i7;

        r3[i2] = f2;

        r4 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        i3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount>;

        $i8 = i3 + 1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxCount> = $i8;

        r4[i3] = 1.0F;

        specialinvoke r0.<android.renderscript.Mesh$TriangleMeshBuilder: void latch()>();

        return r0;
    }

    public android.renderscript.Mesh create(boolean)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        boolean z0;
        android.renderscript.Element$Builder r1, $r4;
        byte b0;
        android.renderscript.Mesh$Builder r2, $r10;
        android.renderscript.Mesh r3;
        android.renderscript.RenderScript $r5, $r7, $r12, $r16, $r23, $r30, $r33;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.renderscript.Element$DataType $r6;
        android.renderscript.Element $r8, $r11, $r14, $r15, $r24, $r27, $r32;
        android.renderscript.Mesh$Primitive $r17;
        android.renderscript.Allocation $r18, $r22, $r25, $r26;
        float[] $r19;
        short[] $r21;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        z0 := @parameter0: boolean;

        $r4 = new android.renderscript.Element$Builder;

        $r5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        specialinvoke $r4.<android.renderscript.Element$Builder: void <init>(android.renderscript.RenderScript)>($r5);

        r1 = $r4;

        $r7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r6 = <android.renderscript.Element$DataType: android.renderscript.Element$DataType FLOAT_32>;

        $i1 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mVtxSize>;

        $r8 = staticinvoke <android.renderscript.Element: android.renderscript.Element createVector(android.renderscript.RenderScript,android.renderscript.Element$DataType,int)>($r7, $r6, $i1);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r8, "position");

        $i3 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i2 = 1 & $i3;

        if $i2 == 0 goto label1;

        $r33 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r32 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>($r33);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r32, "color");

     label1:
        $i5 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i4 = 256 & $i5;

        if $i4 == 0 goto label2;

        $r30 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r27 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>($r30);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r27, "texture0");

     label2:
        $i7 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i6 = 2 & $i7;

        if $i6 == 0 goto label3;

        $r23 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r24 = staticinvoke <android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>($r23);

        virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element$Builder add(android.renderscript.Element,java.lang.String)>($r24, "normal");

     label3:
        $r11 = virtualinvoke r1.<android.renderscript.Element$Builder: android.renderscript.Element create()>();

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.Element mElement> = $r11;

        b0 = 1;

        if z0 == 0 goto label4;

        b0 = 5;

     label4:
        $r10 = new android.renderscript.Mesh$Builder;

        $r12 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        specialinvoke $r10.<android.renderscript.Mesh$Builder: void <init>(android.renderscript.RenderScript,int)>($r12, b0);

        r2 = $r10;

        $r14 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.Element mElement>;

        $i8 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        virtualinvoke r2.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder addVertexType(android.renderscript.Element,int)>($r14, $i8);

        $r16 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: android.renderscript.RenderScript mRS>;

        $r15 = staticinvoke <android.renderscript.Element: android.renderscript.Element U16(android.renderscript.RenderScript)>($r16);

        $i9 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $r17 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive TRIANGLE>;

        virtualinvoke r2.<android.renderscript.Mesh$Builder: android.renderscript.Mesh$Builder addIndexSetType(android.renderscript.Element,int,android.renderscript.Mesh$Primitive)>($r15, $i9, $r17);

        r3 = virtualinvoke r2.<android.renderscript.Mesh$Builder: android.renderscript.Mesh create()>();

        $r18 = virtualinvoke r3.<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>(0);

        $i11 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mMaxIndex>;

        $r19 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: float[] mVtxData>;

        virtualinvoke $r18.<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,float[])>(0, $i11, $r19);

        if z0 == 0 goto label5;

        if z0 == 0 goto label5;

        $r26 = virtualinvoke r3.<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>(0);

        virtualinvoke $r26.<android.renderscript.Allocation: void syncAll(int)>(1);

     label5:
        $r22 = virtualinvoke r3.<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>(0);

        $i10 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mIndexCount>;

        $r21 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: short[] mIndexData>;

        virtualinvoke $r22.<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,short[])>(0, $i10, $r21);

        if z0 == 0 goto label6;

        $r25 = virtualinvoke r3.<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>(0);

        virtualinvoke $r25.<android.renderscript.Allocation: void syncAll(int)>(1);

     label6:
        return r3;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder setColor(float, float, float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1, f2, f3;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = 1 & $i0;

        if $i1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r1;

     label1:
        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mR> = f0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mG> = f1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mB> = f2;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mA> = f3;

        return r0;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder setNormal(float, float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1, f2;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = 2 & $i0;

        if $i1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r1;

     label1:
        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNX> = f0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNY> = f1;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mNZ> = f2;

        return r0;
    }

    public android.renderscript.Mesh$TriangleMeshBuilder setTexture(float, float)
    {
        android.renderscript.Mesh$TriangleMeshBuilder r0;
        float f0, f1;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.renderscript.Mesh$TriangleMeshBuilder;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = r0.<android.renderscript.Mesh$TriangleMeshBuilder: int mFlags>;

        $i1 = 256 & $i0;

        if $i1 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("add mistmatch with declared components.");

        throw $r1;

     label1:
        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mS0> = f0;

        r0.<android.renderscript.Mesh$TriangleMeshBuilder: float mT0> = f1;

        return r0;
    }

    public static void <clinit>()
    {
        <android.renderscript.Mesh$TriangleMeshBuilder: int TEXTURE_0> = 256;

        <android.renderscript.Mesh$TriangleMeshBuilder: int NORMAL> = 2;

        <android.renderscript.Mesh$TriangleMeshBuilder: int COLOR> = 1;

        return;
    }
}
