public final class com.android.okhttp.HttpsHandler extends com.android.okhttp.HttpHandler
{
    private static final java.util.List ENABLED_TRANSPORTS;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.List $r1;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "http/1.1";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        <com.android.okhttp.HttpsHandler: java.util.List ENABLED_TRANSPORTS> = $r1;

        return;
    }

    public void <init>()
    {
        com.android.okhttp.HttpsHandler r0;

        r0 := @this: com.android.okhttp.HttpsHandler;

        specialinvoke r0.<com.android.okhttp.HttpHandler: void <init>()>();

        return;
    }

    protected int getDefaultPort()
    {
        com.android.okhttp.HttpsHandler r0;

        r0 := @this: com.android.okhttp.HttpsHandler;

        return 443;
    }

    protected com.android.okhttp.OkHttpClient newOkHttpClient(java.net.Proxy)
    {
        com.android.okhttp.HttpsHandler r0;
        java.net.Proxy r1;
        com.android.okhttp.OkHttpClient r2;
        javax.net.ssl.HostnameVerifier r3;
        java.util.List $r4;
        boolean $z0;

        r0 := @this: com.android.okhttp.HttpsHandler;

        r1 := @parameter0: java.net.Proxy;

        r2 = specialinvoke r0.<com.android.okhttp.HttpHandler: com.android.okhttp.OkHttpClient newOkHttpClient(java.net.Proxy)>(r1);

        $r4 = <com.android.okhttp.HttpsHandler: java.util.List ENABLED_TRANSPORTS>;

        virtualinvoke r2.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setTransports(java.util.List)>($r4);

        r3 = staticinvoke <javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()>();

        $z0 = r3 instanceof javax.net.ssl.DefaultHostnameVerifier;

        if $z0 != 0 goto label1;

        virtualinvoke r2.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier)>(r3);

     label1:
        return r2;
    }
}
