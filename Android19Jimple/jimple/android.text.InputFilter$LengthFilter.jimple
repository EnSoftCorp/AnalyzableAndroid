public class android.text.InputFilter$LengthFilter extends java.lang.Object implements android.text.InputFilter
{
    private int mMax;

    public void <init>(int)
    {
        android.text.InputFilter$LengthFilter r0;
        int i0;

        r0 := @this: android.text.InputFilter$LengthFilter;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.text.InputFilter$LengthFilter: int mMax> = i0;

        return;
    }

    public java.lang.CharSequence filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int)
    {
        android.text.InputFilter$LengthFilter r0;
        java.lang.CharSequence r1, $r3;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.text.Spanned r2;
        char $c12;
        boolean $z0;

        r0 := @this: android.text.InputFilter$LengthFilter;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.text.Spanned;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $i6 = r0.<android.text.InputFilter$LengthFilter: int mMax>;

        $i7 = interfaceinvoke r2.<android.text.Spanned: int length()>();

        $i8 = i3 - i2;

        $i9 = $i7 - $i8;

        i4 = $i6 - $i9;

        if i4 > 0 goto label1;

        return "";

     label1:
        $i10 = i1 - i0;

        if i4 < $i10 goto label2;

        return null;

     label2:
        i5 = i4 + i0;

        $i11 = i5 - 1;

        $c12 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>($i11);

        $z0 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>($c12);

        if $z0 == 0 goto label3;

        i5 = i5 + -1;

        if i5 != i0 goto label3;

        return "";

     label3:
        $r3 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i5);

        return $r3;
    }
}
