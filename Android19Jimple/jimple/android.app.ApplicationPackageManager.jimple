final class android.app.ApplicationPackageManager extends android.content.pm.PackageManager
{
    private static final boolean DEBUG;
    private static final boolean DEBUG_ICONS;
    private static final java.lang.String TAG;
    private static android.util.ArrayMap sIconCache;
    private static android.util.ArrayMap sStringCache;
    private static final java.lang.Object sSync;
    int mCachedSafeMode;
    private final android.app.ContextImpl mContext;
    private final android.content.pm.IPackageManager mPM;

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.util.ArrayMap $r1, $r2;

        <android.app.ApplicationPackageManager: java.lang.String TAG> = "ApplicationPackageManager";

        <android.app.ApplicationPackageManager: boolean DEBUG_ICONS> = 0;

        <android.app.ApplicationPackageManager: boolean DEBUG> = 0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.app.ApplicationPackageManager: java.lang.Object sSync> = $r0;

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache> = $r1;

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache> = $r2;

        return;
    }

    void <init>(android.app.ContextImpl, android.content.pm.IPackageManager)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ContextImpl r1;
        android.content.pm.IPackageManager r2;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ContextImpl;

        r2 := @parameter1: android.content.pm.IPackageManager;

        specialinvoke r0.<android.content.pm.PackageManager: void <init>()>();

        r0.<android.app.ApplicationPackageManager: int mCachedSafeMode> = -1;

        r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext> = r1;

        r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM> = r2;

        return;
    }

    static void configurationChanged()
    {
        java.lang.Object r0;
        java.lang.Throwable r1, $r4;
        android.util.ArrayMap $r2, $r3;

        r0 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor r0;

     label1:
        $r2 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        virtualinvoke $r2.<android.util.ArrayMap: void clear()>();

        $r3 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        virtualinvoke $r3.<android.util.ArrayMap: void clear()>();

        exitmonitor r0;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationPackageManager$ResourceName)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ApplicationPackageManager$ResourceName r1;
        java.lang.Object r2, $r8, $r9;
        java.lang.Throwable r3, $r12;
        java.lang.ref.WeakReference r4;
        android.graphics.drawable.Drawable$ConstantState r5;
        android.graphics.drawable.Drawable r6;
        android.util.ArrayMap $r7, $r10;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ApplicationPackageManager$ResourceName;

        r2 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor r2;

     label01:
        $r7 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.ref.WeakReference) $r8;

     label02:
        if r4 == null goto label08;

     label03:
        $r9 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (android.graphics.drawable.Drawable$ConstantState) $r9;

     label04:
        if r5 == null goto label07;

     label05:
        r6 = virtualinvoke r5.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable()>();

        exitmonitor r2;

     label06:
        return r6;

     label07:
        $r10 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label08:
        exitmonitor r2;

     label09:
        return null;

     label10:
        $r12 := @caughtexception;

        r3 = $r12;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private java.lang.CharSequence getCachedString(android.app.ApplicationPackageManager$ResourceName)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ApplicationPackageManager$ResourceName r1;
        java.lang.Object r2, $r7, $r8;
        java.lang.Throwable r3, $r11;
        java.lang.ref.WeakReference r4;
        java.lang.CharSequence r5;
        android.util.ArrayMap $r6, $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ApplicationPackageManager$ResourceName;

        r2 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor r2;

     label01:
        $r6 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.ref.WeakReference) $r7;

     label02:
        if r4 == null goto label08;

     label03:
        $r8 = virtualinvoke r4.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r5 = (java.lang.CharSequence) $r8;

     label04:
        if r5 == null goto label07;

     label05:
        exitmonitor r2;

     label06:
        return r5;

     label07:
        $r9 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

     label08:
        exitmonitor r2;

     label09:
        return null;

     label10:
        $r11 := @caughtexception;

        r3 = $r11;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    static void handlePackageBroadcast(int, java.lang.String[], boolean)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        java.lang.String[] r0;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.String r1, $r10, $r15;
        java.lang.Object r2, $r8, $r16;
        java.lang.Throwable r3, $r18;
        android.app.ActivityThread $r4;
        java.lang.Runtime $r5;
        android.util.ArrayMap $r6, $r7, $r9, $r12, $r13, $r19;
        android.app.ApplicationPackageManager$ResourceName $r11, $r17;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String[];

        z0 := @parameter2: boolean;

        z1 = 0;

        if i0 != 1 goto label01;

        z1 = 1;

     label01:
        if r0 == null goto label18;

        $i5 = lengthof r0;

        if $i5 <= 0 goto label18;

        z2 = 0;

        i1 = lengthof r0;

        i2 = 0;

     label02:
        if i2 >= i1 goto label16;

        r1 = r0[i2];

        r2 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor r2;

     label03:
        $r6 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        $i6 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        i3 = -1 + $i6;

     label04:
        if i3 < 0 goto label07;

     label05:
        $r13 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        $r16 = virtualinvoke $r13.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        $r17 = (android.app.ApplicationPackageManager$ResourceName) $r16;

        $r15 = $r17.<android.app.ApplicationPackageManager$ResourceName: java.lang.String packageName>;

        $z4 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z4 == 0 goto label20;

        $r19 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i3);

     label06:
        z2 = 1;

        goto label20;

     label07:
        $r7 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        $i7 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

        i4 = -1 + $i7;

     label08:
        if i4 < 0 goto label11;

     label09:
        $r9 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        $r8 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        $r11 = (android.app.ApplicationPackageManager$ResourceName) $r8;

        $r10 = $r11.<android.app.ApplicationPackageManager$ResourceName: java.lang.String packageName>;

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label21;

        $r12 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i4);

     label10:
        z2 = 1;

        goto label21;

     label11:
        exitmonitor r2;

     label12:
        i2 = i2 + 1;

        goto label02;

     label13:
        $r18 := @caughtexception;

        r3 = $r18;

     label14:
        exitmonitor r2;

     label15:
        throw r3;

     label16:
        if z2 != 0 goto label17;

        if z0 == 0 goto label18;

     label17:
        if z1 == 0 goto label19;

        $r5 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r5.<java.lang.Runtime: void gc()>();

     label18:
        return;

     label19:
        $r4 = staticinvoke <android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>();

        virtualinvoke $r4.<android.app.ActivityThread: void scheduleGcIdler()>();

        return;

     label20:
        i3 = i3 + -1;

        goto label04;

     label21:
        i4 = i4 + -1;

        goto label08;

        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    private void putCachedIcon(android.app.ApplicationPackageManager$ResourceName, android.graphics.drawable.Drawable)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ApplicationPackageManager$ResourceName r1;
        android.graphics.drawable.Drawable r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r9;
        java.lang.ref.WeakReference $r5;
        android.util.ArrayMap $r6;
        android.graphics.drawable.Drawable$ConstantState $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ApplicationPackageManager$ResourceName;

        r2 := @parameter1: android.graphics.drawable.Drawable;

        r3 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor r3;

     label1:
        $r6 = <android.app.ApplicationPackageManager: android.util.ArrayMap sIconCache>;

        $r5 = new java.lang.ref.WeakReference;

        $r7 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r7);

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void putCachedString(android.app.ApplicationPackageManager$ResourceName, java.lang.CharSequence)
    {
        android.app.ApplicationPackageManager r0;
        android.app.ApplicationPackageManager$ResourceName r1;
        java.lang.CharSequence r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r8;
        java.lang.ref.WeakReference $r5;
        android.util.ArrayMap $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.app.ApplicationPackageManager$ResourceName;

        r2 := @parameter1: java.lang.CharSequence;

        r3 = <android.app.ApplicationPackageManager: java.lang.Object sSync>;

        entermonitor r3;

     label1:
        $r6 = <android.app.ApplicationPackageManager: android.util.ArrayMap sStringCache>;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r2);

        virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        exitmonitor r3;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void addPackageToPreferred(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void addPackageToPreferred(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean addPermission(android.content.pm.PermissionInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.PermissionInfo r1;
        android.os.RemoteException r2, $r4;
        boolean z0;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.PermissionInfo;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        z0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>(r1);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean addPermissionAsync(android.content.pm.PermissionInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.PermissionInfo r1;
        android.os.RemoteException r2, $r4;
        boolean z0;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.PermissionInfo;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        z0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>(r1);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)
    {
        android.app.ApplicationPackageManager r0;
        android.content.IntentFilter r1;
        int i0, $i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        android.app.ContextImpl $r5;
        android.content.pm.IPackageManager $r6;
        android.os.RemoteException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

     label1:
        $r6 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r5 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r5.<android.app.ContextImpl: int getUserId()>();

        interfaceinvoke $r6.<android.content.pm.IPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>(r1, i0, r2, r3, $i1);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.IntentFilter r1;
        int i0, i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        i1 := @parameter4: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>(r1, i0, r2, r3, i1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String[] r1, r3;
        android.os.RemoteException r2, $r5;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String[];

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>(r1);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkPermission(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        int i0;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        i0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int checkPermission(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r3);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkSignatures(int, int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1, i2;
        android.os.RemoteException r1, $r3;
        android.content.pm.IPackageManager $r2;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        i2 = interfaceinvoke $r2.<android.content.pm.IPackageManager: int checkUidSignatures(int,int)>(i0, i1);

     label2:
        return i2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int checkSignatures(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        int i0;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        i0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int checkSignatures(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r3);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageDataObserver r2;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        int $i0;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i0 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>(r1, r2, $i0);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void clearPackagePreferredActivities(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void clearPackagePreferredActivities(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String[] r1, r3;
        android.os.RemoteException r2, $r5;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String[];

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>(r1);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void deleteApplicationCacheFiles(java.lang.String, android.content.pm.IPackageDataObserver)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageDataObserver r2;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDataObserver;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>(r1, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void deletePackage(java.lang.String, android.content.pm.IPackageDeleteObserver, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageDeleteObserver r2;
        int i0, $i1;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageDeleteObserver;

        i0 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void deletePackageAsUser(java.lang.String,android.content.pm.IPackageDeleteObserver,int,int)>(r1, r2, $i1, i0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void extendVerificationTimeout(int, int, long)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1;
        long l2;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r2.<android.content.pm.IPackageManager: void extendVerificationTimeout(int,int,long)>(i0, i1, l2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void freeStorage(long, android.content.IntentSender)
    {
        android.app.ApplicationPackageManager r0;
        long l0;
        android.content.IntentSender r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.IntentSender;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void freeStorage(long,android.content.IntentSender)>(l0, r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver)
    {
        android.app.ApplicationPackageManager r0;
        long l0;
        android.content.pm.IPackageDataObserver r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.pm.IPackageDataObserver;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>(l0, r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.content.pm.ActivityInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r1, 0);

        $r3 = virtualinvoke $r2.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r0);

        return $r3;
    }

    public android.graphics.drawable.Drawable getActivityIcon(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        android.content.pm.ResolveInfo r2;
        android.content.ComponentName $r3, $r8;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String $r5;
        android.content.pm.ActivityInfo $r6;
        android.graphics.drawable.Drawable $r7, $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        $r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r3 == null goto label1;

        $r8 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r9 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>($r8);

        return $r9;

     label1:
        r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r1, 65536);

        if r2 == null goto label2;

        $r6 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = virtualinvoke $r6.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r0);

        return $r7;

     label2:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        $r5 = virtualinvoke r1.<android.content.Intent: java.lang.String toUri(int)>(0);

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.os.RemoteException r2, $r8;
        android.content.pm.ActivityInfo r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>(r1, i0, $i1);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.content.pm.ActivityInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r1, 0);

        $r3 = virtualinvoke $r2.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>(r0);

        return $r3;
    }

    public android.graphics.drawable.Drawable getActivityLogo(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        android.content.pm.ResolveInfo r2;
        android.content.ComponentName $r3, $r8;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.String $r5;
        android.content.pm.ActivityInfo $r6;
        android.graphics.drawable.Drawable $r7, $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        $r3 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        if $r3 == null goto label1;

        $r8 = virtualinvoke r1.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r9 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>($r8);

        return $r9;

     label1:
        r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r1, 65536);

        if r2 == null goto label2;

        $r6 = r2.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r7 = virtualinvoke $r6.<android.content.pm.ActivityInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>(r0);

        return $r7;

     label2:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        $r5 = virtualinvoke r1.<android.content.Intent: java.lang.String toUri(int)>(0);

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public java.util.List getAllPermissionGroups(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        java.util.List r2;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List getAllPermissionGroups(int)>(i0);

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean getApplicationBlockedSettingAsUser(java.lang.String, android.os.UserHandle)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.os.UserHandle r2;
        boolean z0;
        android.content.pm.IPackageManager $r4;
        int $i0;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.UserHandle;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        z0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: boolean getApplicationBlockedSettingAsUser(java.lang.String,int)>(r1, $i0);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getApplicationEnabledSetting(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        i0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String,int)>(r1, $i1);

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.ApplicationInfo r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r0);

        return $r2;
    }

    public android.graphics.drawable.Drawable getApplicationIcon(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.os.RemoteException r2, $r7;
        android.content.pm.ApplicationInfo r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, i0, $i1);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r8;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.ApplicationInfo r1;
        java.lang.CharSequence $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r0);

        return $r2;
    }

    public android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.ApplicationInfo r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r2 = virtualinvoke r1.<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>(r0);

        return $r2;
    }

    public android.graphics.drawable.Drawable getApplicationLogo(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public int getComponentEnabledSetting(android.content.ComponentName)
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        i0 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int getComponentEnabledSetting(android.content.ComponentName,int)>(r1, $i1);

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.graphics.drawable.Drawable getDefaultActivityIcon()
    {
        android.app.ApplicationPackageManager r0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        $r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(17301651);

        return $r2;
    }

    public android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r17, $r18, $r23, $r24, $r28, $r30, $r33;
        int i0;
        android.content.pm.ApplicationInfo r2, r10;
        android.app.ApplicationPackageManager$ResourceName r3, $r11;
        android.graphics.drawable.Drawable r4, r8;
        java.lang.RuntimeException r5, $r26;
        android.content.res.Resources$NotFoundException r6, $r20;
        android.content.res.Resources $r12;
        java.lang.StringBuilder $r13, $r15, $r16, $r19, $r21, $r22, $r25, $r27, $r29, $r31, $r32, $r34, $r35;
        android.content.pm.PackageManager$NameNotFoundException $r14, $r36;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.ApplicationInfo;

        $r11 = new android.app.ApplicationPackageManager$ResourceName;

        specialinvoke $r11.<android.app.ApplicationPackageManager$ResourceName: void <init>(java.lang.String,int)>(r1, i0);

        r3 = $r11;

        r4 = specialinvoke r0.<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationPackageManager$ResourceName)>(r3);

        if r4 == null goto label1;

        return r4;

     label1:
        if r2 != null goto label4;

     label2:
        r10 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

     label3:
        r2 = r10;

     label4:
        $r12 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r2);

        r8 = virtualinvoke $r12.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        specialinvoke r0.<android.app.ApplicationPackageManager: void putCachedIcon(android.app.ApplicationPackageManager$ResourceName,android.graphics.drawable.Drawable)>(r3, r8);

     label5:
        return r8;

     label6:
        $r36 := @caughtexception;

        return null;

     label7:
        $r14 := @caughtexception;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for");

        $r17 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r18);

        return null;

     label8:
        $r20 := @caughtexception;

        r6 = $r20;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for");

        $r24 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r23 = virtualinvoke r6.<android.content.res.Resources$NotFoundException: java.lang.String getMessage()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r28);

        return null;

     label9:
        $r26 := @caughtexception;

        r5 = $r26;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving icon 0x");

        $r30 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r33, r5);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label6;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label7;
        catch android.content.res.Resources$NotFoundException from label4 to label5 with label8;
        catch java.lang.RuntimeException from label4 to label5 with label9;
    }

    public android.content.ComponentName getHomeActivities(java.util.List)
    {
        android.app.ApplicationPackageManager r0;
        java.util.List r1;
        android.content.ComponentName r3;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.util.List;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.ComponentName getHomeActivities(java.util.List)>(r1);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getInstalledApplications(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1;
        android.os.RemoteException r1, $r6;
        java.util.List r2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.ParceledListSlice $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        i1 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r5 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>(i0, i1);

        r2 = virtualinvoke $r5.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getInstalledPackages(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, $i1;
        android.app.ContextImpl $r1;
        java.util.List $r2;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        $r1 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r1.<android.app.ContextImpl: int getUserId()>();

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int,int)>(i0, $i1);

        return $r2;
    }

    public java.util.List getInstalledPackages(int, int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1;
        android.os.RemoteException r1, $r5;
        java.util.List r2;
        android.content.pm.IPackageManager $r3;
        android.content.pm.ParceledListSlice $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>(i0, i1);

        r2 = virtualinvoke $r4.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getInstallerPackageName(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r3;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>(r1);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0;
        android.os.RemoteException r2, $r7;
        android.content.pm.InstrumentationInfo r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.String $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>(r1, i0);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r8;

     label4:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        $r6 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.Intent getLaunchIntentForPackage(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r16, $r20;
        android.content.Intent r2, r4, $r5, $r10;
        java.util.List r3;
        int $i0, $i1;
        java.lang.Object $r11, $r15;
        android.content.pm.ActivityInfo $r13, $r17;
        android.content.pm.ResolveInfo $r14, $r18;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r2 = $r5;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.INFO");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r2, 0);

        if r3 == null goto label1;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 > 0 goto label2;

     label1:
        virtualinvoke r2.<android.content.Intent: void removeCategory(java.lang.String)>("android.intent.category.INFO");

        virtualinvoke r2.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>("android.intent.category.LAUNCHER");

        virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>(r2, 0);

     label2:
        if r3 == null goto label3;

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 > 0 goto label4;

     label3:
        return null;

     label4:
        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(android.content.Intent)>(r2);

        r4 = $r10;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (android.content.pm.ResolveInfo) $r11;

        $r13 = $r14.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r16 = $r13.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $r15 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (android.content.pm.ResolveInfo) $r15;

        $r17 = $r18.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r20 = $r17.<android.content.pm.ActivityInfo: java.lang.String name>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>($r16, $r20);

        return r4;
    }

    public java.lang.String getNameForUid(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        java.lang.String r2;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.lang.String getNameForUid(int)>(i0);

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int[] getPackageGids(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r6;
        int[] r3;
        int i0;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: int[] getPackageGids(java.lang.String)>(r1);

     label2:
        if r3 == null goto label5;

     label3:
        i0 = lengthof r3;

     label4:
        if i0 <= 0 goto label7;

     label5:
        return r3;

     label6:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r7;

     label7:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label6;
        catch android.os.RemoteException from label3 to label4 with label6;
    }

    public android.content.pm.PackageInfo getPackageInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.os.RemoteException r2, $r7;
        android.content.pm.PackageInfo r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>(r1, i0, $i1);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r8;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void getPackageSizeInfo(java.lang.String, int, android.content.pm.IPackageStatsObserver)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        android.content.pm.IPackageStatsObserver r2;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.IPackageStatsObserver;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>(r1, i0, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPackageUid(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, i1;
        android.os.RemoteException r2, $r5;
        android.content.pm.IPackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        i1 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r1, i0);

     label2:
        if i1 < 0 goto label4;

        return i1;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

     label4:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] getPackagesForUid(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0;
        android.os.RemoteException r1, $r4;
        java.lang.String[] r2;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>(i0);

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getPackagesHoldingPermissions(java.lang.String[], int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String[] r1;
        int i0, i1;
        android.os.RemoteException r2, $r7;
        java.util.List r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.pm.ParceledListSlice $r6;
        java.lang.RuntimeException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        i1 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r6 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>(r1, i0, i1);

        r3 = virtualinvoke $r6.<android.content.pm.ParceledListSlice: java.util.List getList()>();

     label2:
        return r3;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r8;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteException r2, $r6;
        android.content.pm.PermissionGroupInfo r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>(r1, i0);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r7;

     label4:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteException r2, $r6;
        android.content.pm.PermissionInfo r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>(r1, i0);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r7;

     label4:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPreferredActivities(java.util.List, java.util.List, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.util.List r1, r2;
        java.lang.String r3;
        int i0;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.String;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        i0 = interfaceinvoke $r5.<android.content.pm.IPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>(r1, r2, r3);

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getPreferredPackages(int)
    {
        android.app.ApplicationPackageManager r0;
        int i0;
        java.util.List r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.util.List getPreferredPackages(int)>(i0);

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        return $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.os.RemoteException r2, $r8;
        android.content.pm.ProviderInfo r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>(r1, i0, $i1);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.os.RemoteException r2, $r8;
        android.content.pm.ActivityInfo r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>(r1, i0, $i1);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.res.Resources getResourcesForActivity(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.content.pm.ActivityInfo $r2;
        android.content.pm.ApplicationInfo $r3;
        android.content.res.Resources $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>(r1, 0);

        $r3 = $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r4 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r3);

        return $r4;
    }

    public android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.ApplicationInfo r1;
        android.app.ActivityThread r2, $r17;
        java.lang.String r3, $r5, $r13, $r15;
        android.content.res.Resources r4;
        boolean $z0;
        android.app.ContextImpl $r6, $r7, $r14, $r16;
        int $i0, $i1;
        android.app.LoadedApk $r8;
        android.content.pm.PackageManager$NameNotFoundException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.pm.ApplicationInfo;

        $r5 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z0 == 0 goto label2;

        $r14 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r17 = $r14.<android.app.ContextImpl: android.app.ActivityThread mMainThread>;

        $r16 = virtualinvoke $r17.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        r4 = virtualinvoke $r16.<android.app.ContextImpl: android.content.res.Resources getResources()>();

     label1:
        return r4;

     label2:
        $r6 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        r2 = $r6.<android.app.ContextImpl: android.app.ActivityThread mMainThread>;

        $i0 = r1.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if $i0 != $i1 goto label4;

        r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

     label3:
        $r7 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r8 = $r7.<android.app.ContextImpl: android.app.LoadedApk mPackageInfo>;

        r4 = virtualinvoke r2.<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.app.LoadedApk)>(r3, 0, null, $r8);

        if r4 != null goto label1;

        $r9 = new android.content.pm.PackageManager$NameNotFoundException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to open ");

        $r13 = r1.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label4:
        r3 = r1.<android.content.pm.ApplicationInfo: java.lang.String publicSourceDir>;

        goto label3;
    }

    public android.content.res.Resources getResourcesForApplication(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.ApplicationInfo $r2;
        android.content.res.Resources $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>($r2);

        return $r3;
    }

    public android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r5, $r12, $r20;
        int i0;
        android.os.RemoteException r2, $r23;
        android.content.pm.ApplicationInfo r3;
        android.content.res.Resources r4, $r17;
        boolean $z0;
        android.content.pm.IPackageManager $r6;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r18, $r19, $r21;
        android.app.ContextImpl $r13, $r14;
        android.app.ActivityThread $r15;
        java.lang.IllegalArgumentException $r16;
        java.lang.RuntimeException $r22;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call does not support special user #");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label1:
        $r5 = "system";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r13 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r15 = $r13.<android.app.ContextImpl: android.app.ActivityThread mMainThread>;

        $r14 = virtualinvoke $r15.<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>();

        $r17 = virtualinvoke $r14.<android.app.ContextImpl: android.content.res.Resources getResources()>();

        return $r17;

     label2:
        $r6 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r6.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r1, 0, i0);

     label3:
        if r3 == null goto label7;

     label4:
        r4 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r3);

     label5:
        return r4;

     label6:
        $r23 := @caughtexception;

        r2 = $r23;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r22;

     label7:
        $r7 = new android.content.pm.PackageManager$NameNotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r12);

        throw $r7;

        catch android.os.RemoteException from label2 to label3 with label6;
        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, $i1;
        android.os.RemoteException r2, $r8;
        android.content.pm.ServiceInfo r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>(r1, i0, $i1);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

     label4:
        $r6 = new android.content.pm.PackageManager$NameNotFoundException;

        $r7 = virtualinvoke r1.<android.content.ComponentName: java.lang.String toString()>();

        specialinvoke $r6.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.FeatureInfo[] getSystemAvailableFeatures()
    {
        android.app.ApplicationPackageManager r0;
        android.os.RemoteException r1, $r4;
        android.content.pm.FeatureInfo[] r2;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>();

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String[] getSystemSharedLibraryNames()
    {
        android.app.ApplicationPackageManager r0;
        android.os.RemoteException r1, $r4;
        java.lang.String[] r2;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: java.lang.String[] getSystemSharedLibraryNames()>();

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r16, $r17, $r21, $r24;
        int i0;
        android.content.pm.ApplicationInfo r2, r9;
        android.app.ApplicationPackageManager$ResourceName r3, $r10;
        java.lang.CharSequence r4, r7;
        java.lang.RuntimeException r5, $r18;
        android.content.res.Resources $r11;
        java.lang.StringBuilder $r12, $r14, $r15, $r20, $r22, $r23, $r25, $r26;
        android.content.pm.PackageManager$NameNotFoundException $r13, $r19;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.ApplicationInfo;

        $r10 = new android.app.ApplicationPackageManager$ResourceName;

        specialinvoke $r10.<android.app.ApplicationPackageManager$ResourceName: void <init>(java.lang.String,int)>(r1, i0);

        r3 = $r10;

        r4 = specialinvoke r0.<android.app.ApplicationPackageManager: java.lang.CharSequence getCachedString(android.app.ApplicationPackageManager$ResourceName)>(r3);

        if r4 == null goto label1;

        return r4;

     label1:
        if r2 != null goto label4;

     label2:
        r9 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

     label3:
        r2 = r9;

     label4:
        $r11 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r2);

        r7 = virtualinvoke $r11.<android.content.res.Resources: java.lang.CharSequence getText(int)>(i0);

        specialinvoke r0.<android.app.ApplicationPackageManager: void putCachedString(android.app.ApplicationPackageManager$ResourceName,java.lang.CharSequence)>(r3, r7);

     label5:
        return r7;

     label6:
        $r19 := @caughtexception;

        return null;

     label7:
        $r13 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for");

        $r16 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r17);

        return null;

     label8:
        $r18 := @caughtexception;

        r5 = $r18;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving text 0x");

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r24, r5);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label6;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label7;
        catch java.lang.RuntimeException from label4 to label5 with label8;
    }

    public int getUidForSharedUser(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r8;
        android.os.RemoteException r2, $r9;
        int i0;
        android.content.pm.IPackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.RuntimeException $r10;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int getUidForSharedUser(java.lang.String)>(r1);

     label2:
        if i0 == -1 goto label4;

        return i0;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r10;

     label4:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No shared userid for user:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r8);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()
    {
        android.app.ApplicationPackageManager r0;
        android.content.pm.VerifierDeviceIdentity r2;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r2 = interfaceinvoke $r3.<android.content.pm.IPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>();

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r12, $r16, $r20, $r22;
        int i0;
        android.content.pm.ApplicationInfo r2, r7;
        java.lang.RuntimeException r4, $r10;
        android.content.res.XmlResourceParser r5;
        android.content.res.Resources $r8;
        android.content.pm.PackageManager$NameNotFoundException $r9, $r18;
        java.lang.StringBuilder $r11, $r13, $r14, $r15, $r17, $r19, $r21, $r23;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.pm.ApplicationInfo;

        if r2 != null goto label3;

     label1:
        r7 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

     label2:
        r2 = r7;

     label3:
        $r8 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>(r2);

        r5 = virtualinvoke $r8.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

     label4:
        return r5;

     label5:
        $r9 := @caughtexception;

        return null;

     label6:
        $r10 := @caughtexception;

        r4 = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving xml 0x");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in package ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PackageManager", $r16, r4);

        return null;

     label7:
        $r18 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure retrieving resources for ");

        $r20 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageManager", $r22);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label6;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label7;
    }

    public void grantPermission(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void grantPermission(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r3);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hasSystemFeature(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        boolean z0;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        z0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String)>(r1);

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int installExistingPackage(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r9, $r15;
        int i0, $i1;
        android.content.pm.IPackageManager $r3;
        android.content.pm.PackageManager$NameNotFoundException $r4, $r11;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r16;
        android.os.RemoteException $r10;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i1 = staticinvoke <android.os.UserHandle: int myUserId()>();

        i0 = interfaceinvoke $r3.<android.content.pm.IPackageManager: int installExistingPackageAsUser(java.lang.String,int)>(r1, $i1);

     label2:
        if i0 != -3 goto label5;

     label3:
        $r4 = new android.content.pm.PackageManager$NameNotFoundException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label4:
        $r10 := @caughtexception;

        $r11 = new android.content.pm.PackageManager$NameNotFoundException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Package ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label5:
        return i0;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch android.os.RemoteException from label3 to label4 with label4;
    }

    public void installPackage(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1;
        android.content.pm.IPackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>(r1, r2, i0, r3);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void installPackageWithVerification(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.net.Uri, android.content.pm.ManifestDigest, android.content.pm.ContainerEncryptionParams)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1, r4;
        android.content.pm.IPackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.ManifestDigest r5;
        android.content.pm.ContainerEncryptionParams r6;
        android.content.pm.IPackageManager $r8;
        android.os.RemoteException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.net.Uri;

        r5 := @parameter5: android.content.pm.ManifestDigest;

        r6 := @parameter6: android.content.pm.ContainerEncryptionParams;

     label1:
        $r8 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r8.<android.content.pm.IPackageManager: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>(r1, r2, i0, r3, r4, r5, r6);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void installPackageWithVerificationAndEncryption(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.content.pm.VerificationParams, android.content.pm.ContainerEncryptionParams)
    {
        android.app.ApplicationPackageManager r0;
        android.net.Uri r1;
        android.content.pm.IPackageInstallObserver r2;
        int i0;
        java.lang.String r3;
        android.content.pm.VerificationParams r4;
        android.content.pm.ContainerEncryptionParams r5;
        android.content.pm.IPackageManager $r7;
        android.os.RemoteException $r8;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.pm.IPackageInstallObserver;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: android.content.pm.VerificationParams;

        r5 := @parameter5: android.content.pm.ContainerEncryptionParams;

     label1:
        $r7 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r7.<android.content.pm.IPackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>(r1, r2, i0, r3, r4, r5);

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isSafeMode()
    {
        android.app.ApplicationPackageManager r0;
        android.os.RemoteException r1, $r3;
        int i0, $i2;
        byte b1;
        android.content.pm.IPackageManager $r2;
        boolean $z0;
        java.lang.RuntimeException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

     label1:
        $i2 = r0.<android.app.ApplicationPackageManager: int mCachedSafeMode>;

        if $i2 >= 0 goto label4;

        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $z0 = interfaceinvoke $r2.<android.content.pm.IPackageManager: boolean isSafeMode()>();

        if $z0 == 0 goto label6;

     label2:
        b1 = 1;

     label3:
        r0.<android.app.ApplicationPackageManager: int mCachedSafeMode> = b1;

     label4:
        i0 = r0.<android.app.ApplicationPackageManager: int mCachedSafeMode>;

     label5:
        if i0 == 0 goto label7;

        return 1;

     label6:
        b1 = 0;

        goto label3;

     label7:
        return 0;

     label8:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r1);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label8;
        catch android.os.RemoteException from label3 to label4 with label8;
        catch android.os.RemoteException from label4 to label5 with label8;
    }

    public void movePackage(java.lang.String, android.content.pm.IPackageMoveObserver, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageMoveObserver r2;
        int i0;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageMoveObserver;

        i0 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)>(r1, r2, i0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryBroadcastReceivers(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        java.util.List $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public java.util.List queryBroadcastReceivers(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        java.util.List r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.ContentResolver $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = virtualinvoke $r4.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r6);

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>(r1, $r7, i0, i1);

     label2:
        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryContentProviders(java.lang.String, int, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, i1;
        android.os.RemoteException r2, $r5;
        java.util.List r3;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>(r1, i0, i1);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryInstrumentation(java.lang.String, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteException r2, $r5;
        java.util.List r3;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>(r1, i0);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentActivities(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        java.util.List $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public java.util.List queryIntentActivitiesAsUser(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        java.util.List r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.ContentResolver $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = virtualinvoke $r4.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r6);

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, $r7, i0, i1);

     label2:
        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        android.content.Intent[] r2;
        android.content.Intent r3, r8;
        int i0, i1, i2, $i3;
        android.content.ContentResolver r4;
        java.lang.String[] r5;
        android.os.RemoteException r6, $r14;
        java.util.List r7;
        java.lang.String r9, $r13;
        android.app.ContextImpl $r10, $r12;
        android.content.pm.IPackageManager $r11;
        java.lang.RuntimeException $r15;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.content.Intent[];

        r3 := @parameter2: android.content.Intent;

        i0 := @parameter3: int;

        $r10 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        r4 = virtualinvoke $r10.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        r5 = null;

        if r2 == null goto label4;

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        r8 = r2[i2];

        if r8 == null goto label3;

        r9 = virtualinvoke r8.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>(r4);

        if r9 == null goto label3;

        if r5 != null goto label2;

        r5 = newarray (java.lang.String)[i1];

     label2:
        r5[i2] = r9;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $r11 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r13 = virtualinvoke r3.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>(r4);

        $r12 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i3 = virtualinvoke $r12.<android.app.ContextImpl: int getUserId()>();

        r7 = interfaceinvoke $r11.<android.content.pm.IPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>(r1, r2, r5, r3, $r13, i0, $i3);

     label5:
        return r7;

     label6:
        $r14 := @caughtexception;

        r6 = $r14;

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r6);

        throw $r15;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    public java.util.List queryIntentContentProviders(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        java.util.List $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public java.util.List queryIntentContentProvidersAsUser(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        java.util.List r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.ContentResolver $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = virtualinvoke $r4.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r6);

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: java.util.List queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>(r1, $r7, i0, i1);

     label2:
        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryIntentServices(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        java.util.List $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public java.util.List queryIntentServicesAsUser(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        java.util.List r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.ContentResolver $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = virtualinvoke $r4.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r6);

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>(r1, $r7, i0, i1);

     label2:
        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List queryPermissionsByGroup(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0;
        android.os.RemoteException r2, $r6;
        java.util.List r3;
        android.content.pm.IPackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        r3 = interfaceinvoke $r4.<android.content.pm.IPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>(r1, i0);

     label2:
        if r3 == null goto label4;

        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r7;

     label4:
        $r5 = new android.content.pm.PackageManager$NameNotFoundException;

        specialinvoke $r5.<android.content.pm.PackageManager$NameNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removePackageFromPreferred(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void removePackageFromPreferred(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void removePermission(java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        android.os.RemoteException r2, $r4;
        android.content.pm.IPackageManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r3.<android.content.pm.IPackageManager: void removePermission(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void replacePreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName)
    {
        android.app.ApplicationPackageManager r0;
        android.content.IntentFilter r1;
        int i0;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        android.content.pm.IPackageManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r5.<android.content.pm.IPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>(r1, i0, r2, r3);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.app.ContextImpl $r2;
        android.content.pm.ResolveInfo $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        $r2 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r2.<android.app.ContextImpl: int getUserId()>();

        $r3 = virtualinvoke r0.<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>(r1, i0, $i1);

        return $r3;
    }

    public android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, i1;
        android.os.RemoteException r2, $r8;
        android.content.pm.ResolveInfo r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        android.content.ContentResolver $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r9;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = virtualinvoke $r4.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r6);

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>(r1, $r7, i0, i1);

     label2:
        return r3;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r9;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.os.RemoteException r2, $r6;
        android.content.pm.ProviderInfo r3;
        android.app.ContextImpl $r4;
        android.content.pm.IPackageManager $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r4.<android.app.ContextImpl: int getUserId()>();

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>(r1, i0, $i1);

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r7;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public android.content.pm.ResolveInfo resolveService(android.content.Intent, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.Intent r1;
        int i0, $i1;
        android.os.RemoteException r2, $r9;
        android.content.pm.ResolveInfo r3;
        android.app.ContextImpl $r4, $r8;
        android.content.pm.IPackageManager $r5;
        android.content.ContentResolver $r6;
        java.lang.String $r7;
        java.lang.RuntimeException $r10;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

     label1:
        $r5 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r4 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = virtualinvoke $r4.<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>();

        $r7 = virtualinvoke r1.<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>($r6);

        $r8 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i1 = virtualinvoke $r8.<android.app.ContextImpl: int getUserId()>();

        r3 = interfaceinvoke $r5.<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>(r1, $r7, i0, $i1);

     label2:
        return r3;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r2);

        throw $r10;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void revokePermission(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.os.RemoteException r3, $r5;
        android.content.pm.IPackageManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void revokePermission(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Package manager has died", r3);

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean setApplicationBlockedSettingAsUser(java.lang.String, boolean, android.os.UserHandle)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1;
        boolean z0, z1;
        android.os.UserHandle r2;
        android.content.pm.IPackageManager $r4;
        int $i0;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: android.os.UserHandle;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $i0 = virtualinvoke r2.<android.os.UserHandle: int getIdentifier()>();

        z1 = interfaceinvoke $r4.<android.content.pm.IPackageManager: boolean setApplicationBlockedSettingAsUser(java.lang.String,boolean,int)>(r1, z0, $i0);

     label2:
        return z1;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setApplicationEnabledSetting(java.lang.String, int, int)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, $r6;
        int i0, i1, $i2;
        android.app.ContextImpl $r3, $r5;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r7;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i2 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        $r5 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $r6 = virtualinvoke $r5.<android.app.ContextImpl: java.lang.String getOpPackageName()>();

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>(r1, i0, i1, $i2, $r6);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setComponentEnabledSetting(android.content.ComponentName, int, int)
    {
        android.app.ApplicationPackageManager r0;
        android.content.ComponentName r1;
        int i0, i1, $i2;
        android.app.ContextImpl $r3;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        $r3 = r0.<android.app.ApplicationPackageManager: android.app.ContextImpl mContext>;

        $i2 = virtualinvoke $r3.<android.app.ContextImpl: int getUserId()>();

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>(r1, i0, i1, $i2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setInstallerPackageName(java.lang.String, java.lang.String)
    {
        android.app.ApplicationPackageManager r0;
        java.lang.String r1, r2;
        android.content.pm.IPackageManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.app.ApplicationPackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r4.<android.content.pm.IPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>(r1, r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void verifyPendingInstall(int, int)
    {
        android.app.ApplicationPackageManager r0;
        int i0, i1;
        android.content.pm.IPackageManager $r2;
        android.os.RemoteException $r3;

        r0 := @this: android.app.ApplicationPackageManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

     label1:
        $r2 = r0.<android.app.ApplicationPackageManager: android.content.pm.IPackageManager mPM>;

        interfaceinvoke $r2.<android.content.pm.IPackageManager: void verifyPendingInstall(int,int)>(i0, i1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
