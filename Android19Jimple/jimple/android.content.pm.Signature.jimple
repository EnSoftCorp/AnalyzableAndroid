public class android.content.pm.Signature extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private int mHashCode;
    private boolean mHaveHashCode;
    private final byte[] mSignature;
    private java.lang.ref.SoftReference mStringRef;

    static void <clinit>()
    {
        android.content.pm.Signature$1 $r0;

        $r0 = new android.content.pm.Signature$1;

        specialinvoke $r0.<android.content.pm.Signature$1: void <init>()>();

        <android.content.pm.Signature: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.content.pm.Signature r0;
        android.os.Parcel r1;
        byte[] $r2;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.content.pm.Signature: byte[] mSignature> = $r2;

        return;
    }

    void <init>(android.os.Parcel, android.content.pm.Signature$1)
    {
        android.content.pm.Signature r0;
        android.os.Parcel r1;
        android.content.pm.Signature$1 r2;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.content.pm.Signature$1;

        specialinvoke r0.<android.content.pm.Signature: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        android.content.pm.Signature r0;
        java.lang.String r1, $r9;
        byte[] r2, r3;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i11, $i12;
        byte $b9, $b10, $b13;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        i0 = lengthof r2;

        $i7 = i0 % 2;

        if $i7 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text size ");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not even");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $i8 = i0 / 2;

        r3 = newarray (byte)[$i8];

        i1 = 0;

        i2 = 0;

     label2:
        if i1 >= i0 goto label3;

        i3 = i1 + 1;

        $b9 = r2[i1];

        i4 = staticinvoke <android.content.pm.Signature: int parseHexDigit(int)>($b9);

        i1 = i3 + 1;

        $b10 = r2[i3];

        i5 = staticinvoke <android.content.pm.Signature: int parseHexDigit(int)>($b10);

        i6 = i2 + 1;

        $i12 = i4 << 4;

        $i11 = i5 | $i12;

        $b13 = (byte) $i11;

        r3[i2] = $b13;

        i2 = i6;

        goto label2;

     label3:
        r0.<android.content.pm.Signature: byte[] mSignature> = r3;

        return;
    }

    public void <init>(byte[])
    {
        android.content.pm.Signature r0;
        byte[] r1, $r3;
        java.lang.Object $r2;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (byte[]) $r2;

        r0.<android.content.pm.Signature: byte[] mSignature> = $r3;

        return;
    }

    public static boolean areExactMatch(android.content.pm.Signature[], android.content.pm.Signature[])
    {
        android.content.pm.Signature[] r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.pm.Signature[];

        r1 := @parameter1: android.content.pm.Signature[];

        $z0 = staticinvoke <com.android.internal.util.ArrayUtils: boolean containsAll(java.lang.Object[],java.lang.Object[])>(r0, r1);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.internal.util.ArrayUtils: boolean containsAll(java.lang.Object[],java.lang.Object[])>(r1, r0);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static final int parseHexDigit(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if 48 > i0 goto label1;

        if i0 > 57 goto label1;

        $i5 = i0 - 48;

        return $i5;

     label1:
        if 97 > i0 goto label2;

        if i0 > 102 goto label2;

        $i3 = i0 - 97;

        $i4 = 10 + $i3;

        return $i4;

     label2:
        if 65 > i0 goto label3;

        if i0 > 70 goto label3;

        $i1 = i0 - 65;

        $i2 = 10 + $i1;

        return $i2;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid character ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in hex string");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    public int describeContents()
    {
        android.content.pm.Signature r0;

        r0 := @this: android.content.pm.Signature;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.content.pm.Signature r0, r3;
        java.lang.Object r1;
        boolean z0, z1;
        byte[] $r4, $r5;
        java.lang.ClassCastException $r6;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: java.lang.Object;

        z0 = 0;

        if r1 == null goto label6;

     label1:
        r3 = (android.content.pm.Signature) r1;

     label2:
        if r0 == r3 goto label5;

     label3:
        $r5 = r0.<android.content.pm.Signature: byte[] mSignature>;

        $r4 = r3.<android.content.pm.Signature: byte[] mSignature>;

        z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r5, $r4);

     label4:
        z0 = 0;

        if z1 == 0 goto label6;

     label5:
        z0 = 1;

     label6:
        return z0;

     label7:
        $r6 := @caughtexception;

        return 0;

        catch java.lang.ClassCastException from label1 to label2 with label7;
        catch java.lang.ClassCastException from label3 to label4 with label7;
    }

    public java.security.PublicKey getPublicKey() throws java.security.cert.CertificateException
    {
        android.content.pm.Signature r0;
        java.security.cert.CertificateFactory $r1;
        java.io.ByteArrayInputStream $r2;
        byte[] $r3;
        java.security.cert.Certificate $r4;
        java.security.PublicKey $r5;

        r0 := @this: android.content.pm.Signature;

        $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = r0.<android.content.pm.Signature: byte[] mSignature>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        $r4 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2);

        $r5 = virtualinvoke $r4.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        return $r5;
    }

    public int hashCode()
    {
        android.content.pm.Signature r0;
        boolean $z0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: android.content.pm.Signature;

        $z0 = r0.<android.content.pm.Signature: boolean mHaveHashCode>;

        if $z0 == 0 goto label1;

        $i2 = r0.<android.content.pm.Signature: int mHashCode>;

        return $i2;

     label1:
        $r1 = r0.<android.content.pm.Signature: byte[] mSignature>;

        $i0 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);

        r0.<android.content.pm.Signature: int mHashCode> = $i0;

        r0.<android.content.pm.Signature: boolean mHaveHashCode> = 1;

        $i1 = r0.<android.content.pm.Signature: int mHashCode>;

        return $i1;
    }

    public byte[] toByteArray()
    {
        android.content.pm.Signature r0;
        byte[] r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.content.pm.Signature;

        $r2 = r0.<android.content.pm.Signature: byte[] mSignature>;

        $i0 = lengthof $r2;

        r1 = newarray (byte)[$i0];

        $r4 = r0.<android.content.pm.Signature: byte[] mSignature>;

        $r3 = r0.<android.content.pm.Signature: byte[] mSignature>;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, 0, $i1);

        return r1;
    }

    public char[] toChars()
    {
        android.content.pm.Signature r0;
        char[] $r1;

        r0 := @this: android.content.pm.Signature;

        $r1 = virtualinvoke r0.<android.content.pm.Signature: char[] toChars(char[],int[])>(null, null);

        return $r1;
    }

    public char[] toChars(char[], int[])
    {
        android.content.pm.Signature r0;
        char[] r1, r4;
        int[] r2;
        byte[] r3;
        int i0, i1, i2, i5, i6, i8, i9, $i11, $i13, $i15, $i16;
        byte b3, b4, b7, $b10;
        char $c12, $c14;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: char[];

        r2 := @parameter1: int[];

        r3 = r0.<android.content.pm.Signature: byte[] mSignature>;

        i0 = lengthof r3;

        i1 = i0 * 2;

        if r1 == null goto label01;

        $i15 = lengthof r1;

        if i1 <= $i15 goto label06;

     label01:
        r4 = newarray (char)[i1];

     label02:
        i2 = 0;

     label03:
        if i2 >= i0 goto label09;

        b3 = r3[i2];

        $b10 = b3 >> 4;

        b4 = 15 & $b10;

        i5 = i2 * 2;

        if b4 < 10 goto label07;

        $i16 = b4 + 97;

        i6 = -10 + $i16;

     label04:
        $c12 = (char) i6;

        r4[i5] = $c12;

        b7 = b3 & 15;

        $i11 = i2 * 2;

        i8 = 1 + $i11;

        if b7 < 10 goto label08;

        $i13 = b7 + 97;

        i9 = -10 + $i13;

     label05:
        $c14 = (char) i9;

        r4[i8] = $c14;

        i2 = i2 + 1;

        goto label03;

     label06:
        r4 = r1;

        goto label02;

     label07:
        i6 = b4 + 48;

        goto label04;

     label08:
        i9 = b7 + 48;

        goto label05;

     label09:
        if r2 == null goto label10;

        r2[0] = i0;

     label10:
        return r4;
    }

    public java.lang.String toCharsString()
    {
        android.content.pm.Signature r0;
        java.lang.String r1, r2, $r6;
        java.lang.ref.SoftReference $r3, $r4, $r8;
        java.lang.Object $r5;
        char[] $r7;

        r0 := @this: android.content.pm.Signature;

        $r3 = r0.<android.content.pm.Signature: java.lang.ref.SoftReference mStringRef>;

        if $r3 != null goto label2;

        r1 = null;

     label1:
        if r1 == null goto label3;

        return r1;

     label2:
        $r4 = r0.<android.content.pm.Signature: java.lang.ref.SoftReference mStringRef>;

        $r5 = virtualinvoke $r4.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r1 = (java.lang.String) $r5;

        goto label1;

     label3:
        $r6 = new java.lang.String;

        $r7 = virtualinvoke r0.<android.content.pm.Signature: char[] toChars()>();

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r2 = $r6;

        $r8 = new java.lang.ref.SoftReference;

        specialinvoke $r8.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r2);

        r0.<android.content.pm.Signature: java.lang.ref.SoftReference mStringRef> = $r8;

        return r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.pm.Signature r0;
        android.os.Parcel r1;
        int i0;
        byte[] $r2;

        r0 := @this: android.content.pm.Signature;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.content.pm.Signature: byte[] mSignature>;

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r2);

        return;
    }
}
