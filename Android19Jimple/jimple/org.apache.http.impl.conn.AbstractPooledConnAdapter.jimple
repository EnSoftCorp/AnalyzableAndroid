public abstract class org.apache.http.impl.conn.AbstractPooledConnAdapter extends org.apache.http.impl.conn.AbstractClientConnAdapter
{
    protected volatile org.apache.http.impl.conn.AbstractPoolEntry poolEntry;

    protected void <init>(org.apache.http.conn.ClientConnectionManager, org.apache.http.impl.conn.AbstractPoolEntry)
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        org.apache.http.conn.ClientConnectionManager r1;
        org.apache.http.impl.conn.AbstractPoolEntry r2;
        org.apache.http.conn.OperatedClientConnection $r3;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        r1 := @parameter0: org.apache.http.conn.ClientConnectionManager;

        r2 := @parameter1: org.apache.http.impl.conn.AbstractPoolEntry;

        $r3 = r2.<org.apache.http.impl.conn.AbstractPoolEntry: org.apache.http.conn.OperatedClientConnection connection>;

        specialinvoke r0.<org.apache.http.impl.conn.AbstractClientConnAdapter: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.conn.OperatedClientConnection)>(r1, $r3);

        r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry> = r2;

        return;
    }

    protected final void assertAttached()
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        org.apache.http.impl.conn.AbstractPoolEntry $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        $r1 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Adapter is detached.");

        throw $r2;

     label1:
        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        org.apache.http.conn.OperatedClientConnection r1;
        org.apache.http.impl.conn.AbstractPoolEntry $r2, $r3;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        $r2 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        virtualinvoke $r3.<org.apache.http.impl.conn.AbstractPoolEntry: void shutdownEntry()>();

     label1:
        r1 = virtualinvoke r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()>();

        if r1 == null goto label2;

        interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: void close()>();

     label2:
        return;
    }

    protected void detach()
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        specialinvoke r0.<org.apache.http.impl.conn.AbstractClientConnAdapter: void detach()>();

        r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry> = null;

        return;
    }

    public org.apache.http.conn.routing.HttpRoute getRoute()
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        org.apache.http.impl.conn.AbstractPoolEntry $r1, $r3;
        org.apache.http.conn.routing.RouteTracker $r2, $r4;
        org.apache.http.conn.routing.HttpRoute $r5;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        virtualinvoke r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: void assertAttached()>();

        $r1 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        $r2 = $r1.<org.apache.http.impl.conn.AbstractPoolEntry: org.apache.http.conn.routing.RouteTracker tracker>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        $r4 = $r3.<org.apache.http.impl.conn.AbstractPoolEntry: org.apache.http.conn.routing.RouteTracker tracker>;

        $r5 = virtualinvoke $r4.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.HttpRoute toRoute()>();

        return $r5;
    }

    public java.lang.Object getState()
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        org.apache.http.impl.conn.AbstractPoolEntry $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        virtualinvoke r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: void assertAttached()>();

        $r1 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        $r2 = virtualinvoke $r1.<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()>();

        return $r2;
    }

    public void layerProtocol(org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        org.apache.http.protocol.HttpContext r1;
        org.apache.http.params.HttpParams r2;
        org.apache.http.impl.conn.AbstractPoolEntry $r3;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        r1 := @parameter0: org.apache.http.protocol.HttpContext;

        r2 := @parameter1: org.apache.http.params.HttpParams;

        virtualinvoke r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: void assertAttached()>();

        $r3 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        virtualinvoke $r3.<org.apache.http.impl.conn.AbstractPoolEntry: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r1, r2);

        return;
    }

    public void open(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.params.HttpParams r3;
        org.apache.http.impl.conn.AbstractPoolEntry $r4;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        r3 := @parameter2: org.apache.http.params.HttpParams;

        virtualinvoke r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: void assertAttached()>();

        $r4 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        virtualinvoke $r4.<org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r1, r2, r3);

        return;
    }

    public void setState(java.lang.Object)
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        java.lang.Object r1;
        org.apache.http.impl.conn.AbstractPoolEntry $r2;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: void assertAttached()>();

        $r2 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        virtualinvoke $r2.<org.apache.http.impl.conn.AbstractPoolEntry: void setState(java.lang.Object)>(r1);

        return;
    }

    public void shutdown() throws java.io.IOException
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        org.apache.http.conn.OperatedClientConnection r1;
        org.apache.http.impl.conn.AbstractPoolEntry $r2, $r3;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        $r2 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        virtualinvoke $r3.<org.apache.http.impl.conn.AbstractPoolEntry: void shutdownEntry()>();

     label1:
        r1 = virtualinvoke r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()>();

        if r1 == null goto label2;

        interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: void shutdown()>();

     label2:
        return;
    }

    public void tunnelProxy(org.apache.http.HttpHost, boolean, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        org.apache.http.HttpHost r1;
        boolean z0;
        org.apache.http.params.HttpParams r2;
        org.apache.http.impl.conn.AbstractPoolEntry $r3;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        r1 := @parameter0: org.apache.http.HttpHost;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.http.params.HttpParams;

        virtualinvoke r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: void assertAttached()>();

        $r3 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        virtualinvoke $r3.<org.apache.http.impl.conn.AbstractPoolEntry: void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>(r1, z0, r2);

        return;
    }

    public void tunnelTarget(boolean, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.AbstractPooledConnAdapter r0;
        boolean z0;
        org.apache.http.params.HttpParams r1;
        org.apache.http.impl.conn.AbstractPoolEntry $r2;

        r0 := @this: org.apache.http.impl.conn.AbstractPooledConnAdapter;

        z0 := @parameter0: boolean;

        r1 := @parameter1: org.apache.http.params.HttpParams;

        virtualinvoke r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: void assertAttached()>();

        $r2 = r0.<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry poolEntry>;

        virtualinvoke $r2.<org.apache.http.impl.conn.AbstractPoolEntry: void tunnelTarget(boolean,org.apache.http.params.HttpParams)>(z0, r1);

        return;
    }
}
