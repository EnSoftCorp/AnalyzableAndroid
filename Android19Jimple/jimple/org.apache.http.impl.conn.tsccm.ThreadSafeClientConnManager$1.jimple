class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 extends java.lang.Object implements org.apache.http.conn.ClientConnectionRequest
{
    final org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0;
    final org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest;
    final org.apache.http.conn.routing.HttpRoute val$route;

    void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager, org.apache.http.impl.conn.tsccm.PoolEntryRequest, org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 r0;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r1;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest r2;
        org.apache.http.conn.routing.HttpRoute r3;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        r1 := @parameter0: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r2 := @parameter1: org.apache.http.impl.conn.tsccm.PoolEntryRequest;

        r3 := @parameter2: org.apache.http.conn.routing.HttpRoute;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0> = r1;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest> = r2;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.routing.HttpRoute val$route> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void abortRequest()
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 r0;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest>;

        interfaceinvoke $r1.<org.apache.http.impl.conn.tsccm.PoolEntryRequest: void abortRequest()>();

        return;
    }

    public org.apache.http.conn.ManagedClientConnection getConnection(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, org.apache.http.conn.ConnectionPoolTimeoutException
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r2;
        java.io.IOException r3, $r24;
        java.net.Socket r4;
        org.apache.http.conn.routing.HttpRoute $r5, $r18;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r6, $r12, $r14, $r23;
        org.apache.commons.logging.Log $r7, $r13, $r25;
        boolean $z0;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest $r8;
        org.apache.http.conn.OperatedClientConnection $r9;
        org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter $r10;
        dalvik.system.SocketTagger $r11;
        java.lang.StringBuilder $r15, $r16, $r17, $r19, $r20;
        java.lang.IllegalArgumentException $r21;
        java.lang.String $r22;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r5 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.routing.HttpRoute val$route>;

        if $r5 != null goto label1;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Route may not be null.");

        throw $r21;

     label1:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        $r7 = staticinvoke <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)>($r6);

        $z0 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r14 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        $r13 = staticinvoke <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)>($r14);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadSafeClientConnManager.getConnection: ");

        $r18 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.routing.HttpRoute val$route>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeout = ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r22);

     label2:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest>;

        r2 = interfaceinvoke $r8.<org.apache.http.impl.conn.tsccm.PoolEntryRequest: org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit)>(l0, r1);

     label3:
        $r9 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        r4 = interfaceinvoke $r9.<org.apache.http.conn.OperatedClientConnection: java.net.Socket getSocket()>();

     label4:
        if r4 == null goto label6;

     label5:
        $r11 = staticinvoke <dalvik.system.SocketTagger: dalvik.system.SocketTagger get()>();

        virtualinvoke $r11.<dalvik.system.SocketTagger: void tag(java.net.Socket)>(r4);

     label6:
        $r10 = new org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter;

        $r12 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        specialinvoke $r10.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.AbstractPoolEntry)>($r12, r2);

        return $r10;

     label7:
        $r24 := @caughtexception;

        r3 = $r24;

        $r23 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        $r25 = staticinvoke <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)>($r23);

        interfaceinvoke $r25.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Problem tagging socket.", r3);

        goto label6;

        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
}
