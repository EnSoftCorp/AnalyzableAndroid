public class android.os.FileUtils extends java.lang.Object
{
    private static final java.util.regex.Pattern SAFE_FILENAME_PATTERN;
    public static final int S_IRGRP;
    public static final int S_IROTH;
    public static final int S_IRUSR;
    public static final int S_IRWXG;
    public static final int S_IRWXO;
    public static final int S_IRWXU;
    public static final int S_IWGRP;
    public static final int S_IWOTH;
    public static final int S_IWUSR;
    public static final int S_IXGRP;
    public static final int S_IXOTH;
    public static final int S_IXUSR;
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <android.os.FileUtils: java.lang.String TAG> = "FileUtils";

        <android.os.FileUtils: int S_IXUSR> = 64;

        <android.os.FileUtils: int S_IXOTH> = 1;

        <android.os.FileUtils: int S_IXGRP> = 8;

        <android.os.FileUtils: int S_IWUSR> = 128;

        <android.os.FileUtils: int S_IWOTH> = 2;

        <android.os.FileUtils: int S_IWGRP> = 16;

        <android.os.FileUtils: int S_IRWXU> = 448;

        <android.os.FileUtils: int S_IRWXO> = 7;

        <android.os.FileUtils: int S_IRWXG> = 56;

        <android.os.FileUtils: int S_IRUSR> = 256;

        <android.os.FileUtils: int S_IROTH> = 4;

        <android.os.FileUtils: int S_IRGRP> = 32;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\w%+,./=_-]+");

        <android.os.FileUtils: java.util.regex.Pattern SAFE_FILENAME_PATTERN> = $r0;

        return;
    }

    public void <init>()
    {
        android.os.FileUtils r0;

        r0 := @this: android.os.FileUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long checksumCrc32(java.io.File) throws java.io.FileNotFoundException, java.io.IOException
    {
        java.io.File r0;
        java.util.zip.CRC32 r1, $r8;
        java.util.zip.CheckedInputStream r2, r3, $r9;
        java.lang.Throwable r4, $r11, $r12;
        byte[] r6;
        long l0;
        java.io.FileInputStream $r10;
        int $i1;
        java.io.IOException $r13, $r14;

        r0 := @parameter0: java.io.File;

        $r8 = new java.util.zip.CRC32;

        specialinvoke $r8.<java.util.zip.CRC32: void <init>()>();

        r1 = $r8;

        r2 = null;

     label01:
        $r9 = new java.util.zip.CheckedInputStream;

        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        specialinvoke $r9.<java.util.zip.CheckedInputStream: void <init>(java.io.InputStream,java.util.zip.Checksum)>($r10, r1);

        r3 = $r9;

     label02:
        r6 = newarray (byte)[128];

     label03:
        $i1 = virtualinvoke r3.<java.util.zip.CheckedInputStream: int read(byte[])>(r6);

        if $i1 >= 0 goto label03;

        l0 = virtualinvoke r1.<java.util.zip.CRC32: long getValue()>();

     label04:
        if r3 == null goto label06;

     label05:
        virtualinvoke r3.<java.util.zip.CheckedInputStream: void close()>();

     label06:
        return l0;

     label07:
        $r12 := @caughtexception;

        r4 = $r12;

     label08:
        if r2 == null goto label10;

     label09:
        virtualinvoke r2.<java.util.zip.CheckedInputStream: void close()>();

     label10:
        throw r4;

     label11:
        $r14 := @caughtexception;

        return l0;

     label12:
        $r13 := @caughtexception;

        goto label10;

     label13:
        $r11 := @caughtexception;

        r4 = $r11;

        r2 = r3;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.io.IOException from label09 to label10 with label12;
    }

    public static boolean copyFile(java.io.File, java.io.File)
    {
        java.io.File r0, r1;
        java.io.FileInputStream r2, $r5;
        java.lang.Throwable r3, $r6;
        boolean z0;
        java.io.IOException $r7;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

     label1:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r2 = $r5;

     label2:
        z0 = staticinvoke <android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)>(r2, r1);

     label3:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label4:
        return z0;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        virtualinvoke r2.<java.io.InputStream: void close()>();

        throw r3;

     label7:
        $r7 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label6 to label7 with label7;
    }

    public static boolean copyToFile(java.io.InputStream, java.io.File)
    {
        java.io.InputStream r0;
        java.io.File r1;
        java.io.FileOutputStream r3, $r8;
        java.lang.Throwable r4, $r12;
        byte[] r6;
        int i0;
        boolean $z0;
        java.io.FileDescriptor $r9, $r14;
        java.io.IOException $r10, $r11, $r13;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.File;

     label01:
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label02;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label02:
        $r8 = new java.io.FileOutputStream;

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r3 = $r8;

     label03:
        r6 = newarray (byte)[4096];

     label04:
        i0 = virtualinvoke r0.<java.io.InputStream: int read(byte[])>(r6);

     label05:
        if i0 < 0 goto label12;

     label06:
        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[],int,int)>(r6, 0, i0);

     label07:
        goto label04;

     label08:
        $r12 := @caughtexception;

        r4 = $r12;

     label09:
        virtualinvoke r3.<java.io.FileOutputStream: void flush()>();

     label10:
        $r14 = virtualinvoke r3.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r14.<java.io.FileDescriptor: void sync()>();

     label11:
        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

        throw r4;

     label12:
        virtualinvoke r3.<java.io.FileOutputStream: void flush()>();

     label13:
        $r9 = virtualinvoke r3.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r9.<java.io.FileDescriptor: void sync()>();

     label14:
        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label15:
        return 1;

     label16:
        $r13 := @caughtexception;

        goto label11;

     label17:
        $r10 := @caughtexception;

        goto label14;

     label18:
        $r11 := @caughtexception;

        return 0;

        catch java.io.IOException from label01 to label02 with label18;
        catch java.io.IOException from label02 to label03 with label18;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label18;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.io.IOException from label11 to label12 with label18;
        catch java.io.IOException from label12 to label13 with label18;
        catch java.io.IOException from label13 to label14 with label17;
        catch java.io.IOException from label14 to label15 with label18;
    }

    public static void deleteOlderFiles(java.io.File, int, long)
    {
        java.io.File r0, r2;
        int i0, i2, $i4;
        long l1, $l5, $l6, $l7;
        java.io.File[] r1;
        java.lang.IllegalArgumentException $r3;
        byte $b3, $b8;
        android.os.FileUtils$1 $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        if i0 < 0 goto label1;

        $b3 = l1 cmp 0L;

        if $b3 >= 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Constraints must be positive or 0");

        throw $r3;

     label2:
        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 != null goto label4;

     label3:
        return;

     label4:
        $r4 = new android.os.FileUtils$1;

        specialinvoke $r4.<android.os.FileUtils$1: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r1, $r4);

        i2 = i0;

     label5:
        $i4 = lengthof r1;

        if i2 >= $i4 goto label3;

        r2 = r1[i2];

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l6 = virtualinvoke r2.<java.io.File: long lastModified()>();

        $l7 = $l5 - $l6;

        $b8 = $l7 cmp l1;

        if $b8 <= 0 goto label6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting old file ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("FileUtils", $r8);

        virtualinvoke r2.<java.io.File: boolean delete()>();

     label6:
        i2 = i2 + 1;

        goto label5;
    }

    public static int getUid(java.lang.String)
    {
        java.lang.String r0;
        int i0;
        libcore.io.Os $r2;
        libcore.io.StructStat $r3;
        libcore.io.ErrnoException $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = <libcore.io.Libcore: libcore.io.Os os>;

        $r3 = interfaceinvoke $r2.<libcore.io.Os: libcore.io.StructStat stat(java.lang.String)>(r0);

        i0 = $r3.<libcore.io.StructStat: int st_uid>;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return -1;

        catch libcore.io.ErrnoException from label1 to label2 with label3;
    }

    public static boolean isFilenameSafe(java.io.File)
    {
        java.io.File r0;
        java.util.regex.Pattern $r1;
        java.lang.String $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $r1 = <android.os.FileUtils: java.util.regex.Pattern SAFE_FILENAME_PATTERN>;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r3 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public static java.lang.String readTextFile(java.io.File, int, java.lang.String) throws java.io.IOException
    {
        java.io.File r0;
        int i0, i2, i3, i4, i5, $i7, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String r1, r6, r7, r8, r11, r15, r16, r17, $r23, $r24, $r25, $r27, $r30, $r33;
        java.io.FileInputStream r2, $r19;
        java.io.BufferedInputStream r3, $r18;
        java.lang.Throwable r4, $r32;
        long l1, $l8;
        byte[] r5, r10, r12, r13, r14;
        java.io.ByteArrayOutputStream r9, $r26;
        boolean z0;
        byte $b6, $b9, $b10;
        java.lang.StringBuilder $r20, $r21, $r22, $r28, $r29, $r31;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r19 = new java.io.FileInputStream;

        specialinvoke $r19.<java.io.FileInputStream: void <init>(java.io.File)>(r0);

        r2 = $r19;

        $r18 = new java.io.BufferedInputStream;

        specialinvoke $r18.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);

        r3 = $r18;

     label01:
        l1 = virtualinvoke r0.<java.io.File: long length()>();

     label02:
        if i0 > 0 goto label36;

        $b10 = l1 cmp 0L;

        if $b10 <= 0 goto label13;

        if i0 != 0 goto label13;

        goto label36;

     label03:
        $i7 = i0 + 1;

        r5 = newarray (byte)[$i7];

        i2 = virtualinvoke r3.<java.io.BufferedInputStream: int read(byte[])>(r5);

     label04:
        if i2 > 0 goto label05;

        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return "";

     label05:
        if i2 > i0 goto label08;

     label06:
        $r24 = new java.lang.String;

        specialinvoke $r24.<java.lang.String: void <init>(byte[],int,int)>(r5, 0, i2);

        r8 = $r24;

     label07:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r8;

     label08:
        if r1 != null goto label11;

     label09:
        $r25 = new java.lang.String;

        specialinvoke $r25.<java.lang.String: void <init>(byte[],int,int)>(r5, 0, i0);

        r7 = $r25;

     label10:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r7;

     label11:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = new java.lang.String;

        specialinvoke $r23.<java.lang.String: void <init>(byte[],int,int)>(r5, 0, i0);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r6 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r6;

     label13:
        if i0 >= 0 goto label29;

        z0 = 0;

        r13 = null;

        r12 = null;

     label14:
        if r13 == null goto label15;

        z0 = 1;

     label15:
        r14 = r13;

        r13 = r12;

        r12 = r14;

        if r12 != null goto label17;

        i5 = neg i0;

     label16:
        r12 = newarray (byte)[i5];

     label17:
        i4 = virtualinvoke r3.<java.io.BufferedInputStream: int read(byte[])>(r12);

        $i11 = lengthof r12;

        if i4 == $i11 goto label14;

     label18:
        if r13 != null goto label19;

        if i4 > 0 goto label19;

        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return "";

     label19:
        if r13 != null goto label22;

     label20:
        $r33 = new java.lang.String;

        specialinvoke $r33.<java.lang.String: void <init>(byte[],int,int)>(r12, 0, i4);

        r17 = $r33;

     label21:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r17;

     label22:
        if i4 <= 0 goto label38;

        z0 = 1;

     label23:
        $i14 = lengthof r13;

        $i13 = $i14 - i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r13, i4, r13, 0, $i13);

        $i16 = lengthof r13;

        $i15 = $i16 - i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r12, 0, r13, $i15, i4);

     label24:
        goto label38;

     label25:
        $r30 = new java.lang.String;

        specialinvoke $r30.<java.lang.String: void <init>(byte[])>(r13);

        r16 = $r30;

     label26:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r16;

     label27:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = new java.lang.String;

        specialinvoke $r27.<java.lang.String: void <init>(byte[])>(r13);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        r15 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

     label28:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r15;

     label29:
        $r26 = new java.io.ByteArrayOutputStream;

        specialinvoke $r26.<java.io.ByteArrayOutputStream: void <init>()>();

        r9 = $r26;

        r10 = newarray (byte)[1024];

     label30:
        i3 = virtualinvoke r3.<java.io.BufferedInputStream: int read(byte[])>(r10);

     label31:
        if i3 <= 0 goto label33;

     label32:
        virtualinvoke r9.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r10, 0, i3);

     label33:
        $i12 = lengthof r10;

        if i3 == $i12 goto label30;

        r11 = virtualinvoke r9.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label34:
        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        return r11;

     label35:
        $r32 := @caughtexception;

        r4 = $r32;

        virtualinvoke r3.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r2.<java.io.InputStream: void close()>();

        throw r4;

     label36:
        $b6 = l1 cmp 0L;

        if $b6 <= 0 goto label03;

        if i0 == 0 goto label37;

        $l8 = (long) i0;

        $b9 = l1 cmp $l8;

        if $b9 >= 0 goto label03;

     label37:
        i0 = (int) l1;

        goto label03;

     label38:
        if r1 == null goto label25;

        if z0 != 0 goto label27;

        goto label25;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label03 to label04 with label35;
        catch java.lang.Throwable from label06 to label07 with label35;
        catch java.lang.Throwable from label09 to label10 with label35;
        catch java.lang.Throwable from label11 to label12 with label35;
        catch java.lang.Throwable from label16 to label17 with label35;
        catch java.lang.Throwable from label17 to label18 with label35;
        catch java.lang.Throwable from label20 to label21 with label35;
        catch java.lang.Throwable from label23 to label24 with label35;
        catch java.lang.Throwable from label25 to label26 with label35;
        catch java.lang.Throwable from label27 to label28 with label35;
        catch java.lang.Throwable from label29 to label30 with label35;
        catch java.lang.Throwable from label30 to label31 with label35;
        catch java.lang.Throwable from label32 to label33 with label35;
        catch java.lang.Throwable from label33 to label34 with label35;
    }

    public static int setPermissions(java.io.File, int, int, int)
    {
        java.io.File r0;
        int i0, i1, i2, $i3;
        java.lang.String $r1;

        r0 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $i3 = staticinvoke <android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>($r1, i0, i1, i2);

        return $i3;
    }

    public static int setPermissions(java.io.FileDescriptor, int, int, int)
    {
        java.io.FileDescriptor r0;
        int i0, i1, i2, $i4, $i6;
        libcore.io.ErrnoException r1, r2, $r5, $r10;
        libcore.io.Os $r3, $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        java.lang.String $r9, $r14;

        r0 := @parameter0: java.io.FileDescriptor;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r3.<libcore.io.Os: void fchmod(java.io.FileDescriptor,int)>(r0, i0);

     label2:
        if i1 >= 0 goto label3;

        if i2 < 0 goto label4;

     label3:
        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r4.<libcore.io.Os: void fchown(java.io.FileDescriptor,int,int)>(r0, i1, i2);

     label4:
        return 0;

     label5:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fchmod(): ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r9);

        $i4 = r1.<libcore.io.ErrnoException: int errno>;

        return $i4;

     label6:
        $r10 := @caughtexception;

        r2 = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to fchown(): ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r14);

        $i6 = r2.<libcore.io.ErrnoException: int errno>;

        return $i6;

        catch libcore.io.ErrnoException from label1 to label2 with label5;
        catch libcore.io.ErrnoException from label3 to label4 with label6;
    }

    public static int setPermissions(java.lang.String, int, int, int)
    {
        java.lang.String r0, $r11, $r18;
        int i0, i1, i2, $i4, $i6;
        libcore.io.ErrnoException r1, r2, $r5, $r12;
        libcore.io.Os $r3, $r4;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

     label1:
        $r3 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r3.<libcore.io.Os: void chmod(java.lang.String,int)>(r0, i0);

     label2:
        if i1 >= 0 goto label3;

        if i2 < 0 goto label4;

     label3:
        $r4 = <libcore.io.Libcore: libcore.io.Os os>;

        interfaceinvoke $r4.<libcore.io.Os: void chown(java.lang.String,int,int)>(r0, i1, i2);

     label4:
        return 0;

     label5:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to chmod(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r11);

        $i4 = r1.<libcore.io.ErrnoException: int errno>;

        return $i4;

     label6:
        $r12 := @caughtexception;

        r2 = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to chown(");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("FileUtils", $r18);

        $i6 = r2.<libcore.io.ErrnoException: int errno>;

        return $i6;

        catch libcore.io.ErrnoException from label1 to label2 with label5;
        catch libcore.io.ErrnoException from label3 to label4 with label6;
    }

    public static void stringToFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1;
        java.io.FileWriter r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.io.FileWriter;

        specialinvoke $r4.<java.io.FileWriter: void <init>(java.lang.String)>(r0);

        r2 = $r4;

     label1:
        virtualinvoke r2.<java.io.FileWriter: void write(java.lang.String)>(r1);

     label2:
        virtualinvoke r2.<java.io.FileWriter: void close()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<java.io.FileWriter: void close()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean sync(java.io.FileOutputStream)
    {
        java.io.FileOutputStream r0;
        java.io.FileDescriptor $r2;
        java.io.IOException $r3;

        r0 := @parameter0: java.io.FileOutputStream;

        if r0 == null goto label2;

     label1:
        $r2 = virtualinvoke r0.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r2.<java.io.FileDescriptor: void sync()>();

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
