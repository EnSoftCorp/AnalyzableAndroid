public final class android.view.accessibility.AccessibilityInteractionClient extends android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub
{
    private static final boolean CHECK_INTEGRITY;
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    public static final int NO_ID;
    private static final long TIMEOUT_INTERACTION_MILLIS;
    private static final android.view.accessibility.AccessibilityNodeInfoCache sAccessibilityNodeInfoCache;
    private static final android.util.LongSparseArray sClients;
    private static final android.util.SparseArray sConnectionCache;
    private static final java.lang.Object sStaticLock;
    private android.view.accessibility.AccessibilityNodeInfo mFindAccessibilityNodeInfoResult;
    private java.util.List mFindAccessibilityNodeInfosResult;
    private final java.lang.Object mInstanceLock;
    private volatile int mInteractionId;
    private final java.util.concurrent.atomic.AtomicInteger mInteractionIdCounter;
    private boolean mPerformAccessibilityActionResult;
    private android.os.Message mSameThreadMessage;

    static void <clinit>()
    {
        java.lang.Object $r0;
        android.util.LongSparseArray $r1;
        android.util.SparseArray $r2;
        android.view.accessibility.AccessibilityNodeInfoCache $r3;

        <android.view.accessibility.AccessibilityInteractionClient: long TIMEOUT_INTERACTION_MILLIS> = 5000L;

        <android.view.accessibility.AccessibilityInteractionClient: int NO_ID> = -1;

        <android.view.accessibility.AccessibilityInteractionClient: java.lang.String LOG_TAG> = "AccessibilityInteractionClient";

        <android.view.accessibility.AccessibilityInteractionClient: boolean DEBUG> = 0;

        <android.view.accessibility.AccessibilityInteractionClient: boolean CHECK_INTEGRITY> = 1;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.view.accessibility.AccessibilityInteractionClient: java.lang.Object sStaticLock> = $r0;

        $r1 = new android.util.LongSparseArray;

        specialinvoke $r1.<android.util.LongSparseArray: void <init>()>();

        <android.view.accessibility.AccessibilityInteractionClient: android.util.LongSparseArray sClients> = $r1;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<android.util.SparseArray: void <init>()>();

        <android.view.accessibility.AccessibilityInteractionClient: android.util.SparseArray sConnectionCache> = $r2;

        $r3 = new android.view.accessibility.AccessibilityNodeInfoCache;

        specialinvoke $r3.<android.view.accessibility.AccessibilityNodeInfoCache: void <init>()>();

        <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfoCache sAccessibilityNodeInfoCache> = $r3;

        return;
    }

    private void <init>()
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        java.lang.Object $r2;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        specialinvoke r0.<android.view.accessibility.IAccessibilityInteractionConnectionCallback$Stub: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.concurrent.atomic.AtomicInteger mInteractionIdCounter> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock> = $r2;

        r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId> = -1;

        return;
    }

    private void checkFindAccessibilityNodeInfoResultIntegrity(java.util.List)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        java.util.List r1;
        android.view.accessibility.AccessibilityNodeInfo r2, r5, r7, r8;
        int i0, i1, i2, i3, i4, i6, i7, $i8, $i9, $i10;
        java.util.HashSet r3, $r11;
        java.util.LinkedList r4, $r10;
        android.util.SparseLongArray r6;
        long l5, $l13, $l15, $l16;
        java.lang.Object $r9, $r15, $r17, $r18;
        boolean $z0, $z2;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r16;
        byte $b14, $b18;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        r1 := @parameter0: java.util.List;

        $i8 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i8 != 0 goto label02;

     label01:
        return;

     label02:
        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (android.view.accessibility.AccessibilityNodeInfo) $r9;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 1;

     label03:
        if i1 >= i0 goto label07;

        i7 = i1;

     label04:
        if i7 >= i0 goto label05;

        $r18 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i7);

        r8 = (android.view.accessibility.AccessibilityNodeInfo) $r18;

        $l16 = virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>();

        $l15 = virtualinvoke r8.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        $b18 = $l16 cmp $l15;

        if $b18 != 0 goto label06;

        r2 = r8;

     label05:
        i1 = i1 + 1;

        goto label03;

     label06:
        i7 = i7 + 1;

        goto label04;

     label07:
        if r2 != null goto label08;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityInteractionClient", "No root.");

     label08:
        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r3 = $r11;

        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        r4 = $r10;

        interfaceinvoke r4.<java.util.Queue: boolean add(java.lang.Object)>(r2);

     label09:
        $z0 = interfaceinvoke r4.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label15;

        $r15 = interfaceinvoke r4.<java.util.Queue: java.lang.Object poll()>();

        r5 = (android.view.accessibility.AccessibilityNodeInfo) $r15;

        $z2 = virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>(r5);

        if $z2 != 0 goto label10;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityInteractionClient", "Duplicate node.");

        return;

     label10:
        r6 = virtualinvoke r5.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray getChildNodeIds()>();

        i3 = virtualinvoke r6.<android.util.SparseLongArray: int size()>();

        i4 = 0;

     label11:
        if i4 >= i3 goto label09;

        l5 = virtualinvoke r6.<android.util.SparseLongArray: long valueAt(int)>(i4);

        i6 = 0;

     label12:
        if i6 >= i0 goto label14;

        $r17 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        r7 = (android.view.accessibility.AccessibilityNodeInfo) $r17;

        $l13 = virtualinvoke r7.<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>();

        $b14 = $l13 cmp l5;

        if $b14 != 0 goto label13;

        interfaceinvoke r4.<java.util.Queue: boolean add(java.lang.Object)>(r7);

     label13:
        i6 = i6 + 1;

        goto label12;

     label14:
        i4 = i4 + 1;

        goto label11;

     label15:
        $i10 = interfaceinvoke r1.<java.util.List: int size()>();

        $i9 = virtualinvoke r3.<java.util.HashSet: int size()>();

        i2 = $i10 - $i9;

        if i2 <= 0 goto label01;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Disconnected nodes.");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AccessibilityInteractionClient", $r16);

        return;
    }

    private void clearResultLocked()
    {
        android.view.accessibility.AccessibilityInteractionClient r0;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId> = -1;

        r0.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo mFindAccessibilityNodeInfoResult> = null;

        r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.List mFindAccessibilityNodeInfosResult> = null;

        r0.<android.view.accessibility.AccessibilityInteractionClient: boolean mPerformAccessibilityActionResult> = 0;

        return;
    }

    private void finalizeAndCacheAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo, int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int i0;
        android.view.accessibility.AccessibilityNodeInfoCache $r2;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setConnectionId(int)>(i0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setSealed(boolean)>(1);

        $r2 = <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfoCache sAccessibilityNodeInfoCache>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfoCache: void add(android.view.accessibility.AccessibilityNodeInfo)>(r1);

     label1:
        return;
    }

    private void finalizeAndCacheAccessibilityNodeInfos(java.util.List, int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        java.util.List r1;
        int i0, i1, i2;
        java.lang.Object $r2;
        android.view.accessibility.AccessibilityNodeInfo $r3;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        if r1 == null goto label2;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        $r3 = (android.view.accessibility.AccessibilityNodeInfo) $r2;

        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void finalizeAndCacheAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo,int)>($r3, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    private android.view.accessibility.AccessibilityNodeInfo getFindAccessibilityNodeInfoResultAndClear(int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        android.view.accessibility.AccessibilityNodeInfo r3;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        r1 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: boolean waitForResultTimedLocked(int)>(i0);

        if $z0 == 0 goto label7;

        r3 = r0.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo mFindAccessibilityNodeInfoResult>;

     label2:
        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void clearResultLocked()>();

        exitmonitor r1;

     label3:
        return r3;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        r3 = null;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private java.util.List getFindAccessibilityNodeInfosResultAndClear(int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.util.List r3;
        boolean $z0, $z1;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        r1 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: boolean waitForResultTimedLocked(int)>(i0);

        if $z0 == 0 goto label5;

        r3 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.List mFindAccessibilityNodeInfosResult>;

     label2:
        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void clearResultLocked()>();

        $z1 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label3;

        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void checkFindAccessibilityNodeInfoResultIntegrity(java.util.List)>(r3);

     label3:
        exitmonitor r1;

     label4:
        return r3;

     label5:
        r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label6:
        goto label2;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public static android.view.accessibility.AccessibilityInteractionClient getInstance()
    {
        java.lang.Thread $r0;
        long $l0;
        android.view.accessibility.AccessibilityInteractionClient $r1;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l0 = virtualinvoke $r0.<java.lang.Thread: long getId()>();

        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>($l0);

        return $r1;
    }

    public static android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)
    {
        long l0;
        java.lang.Object r0, $r4;
        java.lang.Throwable r1, $r7;
        android.view.accessibility.AccessibilityInteractionClient r2, $r5;
        android.util.LongSparseArray $r3, $r6;

        l0 := @parameter0: long;

        r0 = <android.view.accessibility.AccessibilityInteractionClient: java.lang.Object sStaticLock>;

        entermonitor r0;

     label1:
        $r3 = <android.view.accessibility.AccessibilityInteractionClient: android.util.LongSparseArray sClients>;

        $r4 = virtualinvoke $r3.<android.util.LongSparseArray: java.lang.Object get(long)>(l0);

        r2 = (android.view.accessibility.AccessibilityInteractionClient) $r4;

     label2:
        if r2 != null goto label4;

     label3:
        $r5 = new android.view.accessibility.AccessibilityInteractionClient;

        specialinvoke $r5.<android.view.accessibility.AccessibilityInteractionClient: void <init>()>();

        r2 = $r5;

        $r6 = <android.view.accessibility.AccessibilityInteractionClient: android.util.LongSparseArray sClients>;

        virtualinvoke $r6.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l0, r2);

     label4:
        exitmonitor r0;

     label5:
        return r2;

     label6:
        $r7 := @caughtexception;

        r1 = $r7;

     label7:
        exitmonitor r0;

     label8:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private boolean getPerformAccessibilityActionResultAndClear(int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        boolean z0, $z1;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        r1 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $z1 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: boolean waitForResultTimedLocked(int)>(i0);

        if $z1 == 0 goto label7;

        z0 = r0.<android.view.accessibility.AccessibilityInteractionClient: boolean mPerformAccessibilityActionResult>;

     label2:
        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void clearResultLocked()>();

        exitmonitor r1;

     label3:
        return z0;

     label4:
        $r3 := @caughtexception;

        r2 = $r3;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

     label7:
        z0 = 0;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private android.os.Message getSameProcessMessageAndClear()
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        android.os.Message r3;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        r1 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.view.accessibility.AccessibilityInteractionClient: android.os.Message mSameThreadMessage>;

        r0.<android.view.accessibility.AccessibilityInteractionClient: android.os.Message mSameThreadMessage> = null;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean waitForResultTimedLocked(int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0, $i3, $i4;
        long l1, l2, $l5, $l6;
        android.os.Message r2;
        byte $b7;
        android.os.Handler $r3;
        java.lang.Object $r4;
        java.lang.InterruptedException $r5;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label01:
        r2 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.os.Message getSameProcessMessageAndClear()>();

     label02:
        if r2 == null goto label04;

     label03:
        $r3 = virtualinvoke r2.<android.os.Message: android.os.Handler getTarget()>();

        virtualinvoke $r3.<android.os.Handler: void handleMessage(android.os.Message)>(r2);

     label04:
        $i3 = r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId>;

        if $i3 != i0 goto label06;

     label05:
        return 1;

     label06:
        $i4 = r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId>;

        if $i4 > i0 goto label11;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l6 = $l5 - l1;

        l2 = 5000L - $l6;

     label07:
        $b7 = l2 cmp 0L;

        if $b7 <= 0 goto label11;

     label08:
        $r4 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        virtualinvoke $r4.<java.lang.Object: void wait(long)>(l2);

     label09:
        goto label01;

     label10:
        $r5 := @caughtexception;

        goto label01;

     label11:
        return 0;

        catch java.lang.InterruptedException from label01 to label02 with label10;
        catch java.lang.InterruptedException from label03 to label04 with label10;
        catch java.lang.InterruptedException from label04 to label05 with label10;
        catch java.lang.InterruptedException from label06 to label07 with label10;
        catch java.lang.InterruptedException from label08 to label09 with label10;
    }

    public void addConnection(int, android.accessibilityservice.IAccessibilityServiceConnection)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0;
        android.accessibilityservice.IAccessibilityServiceConnection r1;
        android.util.SparseArray r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        r1 := @parameter1: android.accessibilityservice.IAccessibilityServiceConnection;

        r2 = <android.view.accessibility.AccessibilityInteractionClient: android.util.SparseArray sConnectionCache>;

        entermonitor r2;

     label1:
        $r4 = <android.view.accessibility.AccessibilityInteractionClient: android.util.SparseArray sConnectionCache>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clearCache()
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        android.view.accessibility.AccessibilityNodeInfoCache $r1;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        $r1 = <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfoCache sAccessibilityNodeInfoCache>;

        virtualinvoke $r1.<android.view.accessibility.AccessibilityNodeInfoCache: void clear()>();

        return;
    }

    public android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int, int, long, boolean, int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0, i1, i3, i4;
        long l2, $l5;
        boolean z0, $z1, $z2;
        android.accessibilityservice.IAccessibilityServiceConnection r2;
        android.view.accessibility.AccessibilityNodeInfo r3, r5;
        java.util.List r4;
        java.util.concurrent.atomic.AtomicInteger $r6;
        java.lang.Thread $r7;
        java.lang.Object $r8;
        android.view.accessibility.AccessibilityNodeInfoCache $r9;
        android.os.RemoteException $r10;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        z0 := @parameter3: boolean;

        i3 := @parameter4: int;

     label01:
        r2 = virtualinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>(i0);

     label02:
        if r2 == null goto label10;

        if z0 != 0 goto label05;

     label03:
        $r9 = <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfoCache sAccessibilityNodeInfoCache>;

        r3 = virtualinvoke $r9.<android.view.accessibility.AccessibilityNodeInfoCache: android.view.accessibility.AccessibilityNodeInfo get(long)>(l2);

     label04:
        if r3 == null goto label05;

        return r3;

     label05:
        $r6 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.concurrent.atomic.AtomicInteger mInteractionIdCounter>;

        i4 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l5 = virtualinvoke $r7.<java.lang.Thread: long getId()>();

        $z1 = interfaceinvoke r2.<android.accessibilityservice.IAccessibilityServiceConnection: boolean findAccessibilityNodeInfoByAccessibilityId(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)>(i1, l2, i4, r0, i3, $l5);

        if $z1 == 0 goto label10;

        r4 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.List getFindAccessibilityNodeInfosResultAndClear(int)>(i4);

        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void finalizeAndCacheAccessibilityNodeInfos(java.util.List,int)>(r4, i0);

     label06:
        if r4 == null goto label10;

     label07:
        $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label10;

        $r8 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (android.view.accessibility.AccessibilityNodeInfo) $r8;

     label08:
        return r5;

     label09:
        $r10 := @caughtexception;

     label10:
        return null;

        catch android.os.RemoteException from label01 to label02 with label09;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    public java.util.List findAccessibilityNodeInfosByText(int, int, long, java.lang.String)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0, i1, i3;
        long l2, $l4;
        java.lang.String r1;
        android.accessibilityservice.IAccessibilityServiceConnection r3;
        java.util.List r4, $r5;
        java.util.concurrent.atomic.AtomicInteger $r6;
        java.lang.Thread $r7;
        boolean $z0;
        android.os.RemoteException $r8;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r1 := @parameter3: java.lang.String;

     label1:
        r3 = virtualinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>(i0);

     label2:
        if r3 == null goto label8;

     label3:
        $r6 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.concurrent.atomic.AtomicInteger mInteractionIdCounter>;

        i3 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l4 = virtualinvoke $r7.<java.lang.Thread: long getId()>();

        $z0 = interfaceinvoke r3.<android.accessibilityservice.IAccessibilityServiceConnection: boolean findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>(i1, l2, r1, i3, r0, $l4);

        if $z0 == 0 goto label8;

        r4 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.List getFindAccessibilityNodeInfosResultAndClear(int)>(i3);

     label4:
        if r4 == null goto label8;

     label5:
        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void finalizeAndCacheAccessibilityNodeInfos(java.util.List,int)>(r4, i0);

     label6:
        return r4;

     label7:
        $r8 := @caughtexception;

     label8:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public java.util.List findAccessibilityNodeInfosByViewId(int, int, long, java.lang.String)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0, i1, i3;
        long l2, $l4;
        java.lang.String r1;
        android.accessibilityservice.IAccessibilityServiceConnection r3;
        java.util.List r4, $r5;
        java.util.concurrent.atomic.AtomicInteger $r6;
        java.lang.Thread $r7;
        boolean $z0;
        android.os.RemoteException $r8;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r1 := @parameter3: java.lang.String;

     label1:
        r3 = virtualinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>(i0);

     label2:
        if r3 == null goto label8;

     label3:
        $r6 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.concurrent.atomic.AtomicInteger mInteractionIdCounter>;

        i3 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l4 = virtualinvoke $r7.<java.lang.Thread: long getId()>();

        $z0 = interfaceinvoke r3.<android.accessibilityservice.IAccessibilityServiceConnection: boolean findAccessibilityNodeInfosByViewId(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>(i1, l2, r1, i3, r0, $l4);

        if $z0 == 0 goto label8;

        r4 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.List getFindAccessibilityNodeInfosResultAndClear(int)>(i3);

     label4:
        if r4 == null goto label8;

     label5:
        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void finalizeAndCacheAccessibilityNodeInfos(java.util.List,int)>(r4, i0);

     label6:
        return r4;

     label7:
        $r8 := @caughtexception;

     label8:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

        catch android.os.RemoteException from label1 to label2 with label7;
        catch android.os.RemoteException from label3 to label4 with label7;
        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public android.view.accessibility.AccessibilityNodeInfo findFocus(int, int, long, int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0, i1, i3, i4;
        long l2, $l5;
        android.accessibilityservice.IAccessibilityServiceConnection r2;
        android.view.accessibility.AccessibilityNodeInfo r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        java.lang.Thread $r5;
        boolean $z0;
        android.os.RemoteException $r6;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        i3 := @parameter3: int;

     label1:
        r2 = virtualinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>(i0);

     label2:
        if r2 == null goto label6;

     label3:
        $r4 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.concurrent.atomic.AtomicInteger mInteractionIdCounter>;

        i4 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l5 = virtualinvoke $r5.<java.lang.Thread: long getId()>();

        $z0 = interfaceinvoke r2.<android.accessibilityservice.IAccessibilityServiceConnection: boolean findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>(i1, l2, i3, i4, r0, $l5);

        if $z0 == 0 goto label6;

        r3 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getFindAccessibilityNodeInfoResultAndClear(int)>(i4);

        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void finalizeAndCacheAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo,int)>(r3, i0);

     label4:
        return r3;

     label5:
        $r6 := @caughtexception;

     label6:
        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.view.accessibility.AccessibilityNodeInfo focusSearch(int, int, long, int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0, i1, i3, i4;
        long l2, $l5;
        android.accessibilityservice.IAccessibilityServiceConnection r2;
        android.view.accessibility.AccessibilityNodeInfo r3;
        java.util.concurrent.atomic.AtomicInteger $r4;
        java.lang.Thread $r5;
        boolean $z0;
        android.os.RemoteException $r6;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        i3 := @parameter3: int;

     label1:
        r2 = virtualinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>(i0);

     label2:
        if r2 == null goto label6;

     label3:
        $r4 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.concurrent.atomic.AtomicInteger mInteractionIdCounter>;

        i4 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l5 = virtualinvoke $r5.<java.lang.Thread: long getId()>();

        $z0 = interfaceinvoke r2.<android.accessibilityservice.IAccessibilityServiceConnection: boolean focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>(i1, l2, i3, i4, r0, $l5);

        if $z0 == 0 goto label6;

        r3 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getFindAccessibilityNodeInfoResultAndClear(int)>(i4);

        specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: void finalizeAndCacheAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo,int)>(r3, i0);

     label4:
        return r3;

     label5:
        $r6 := @caughtexception;

     label6:
        return null;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0;
        android.util.SparseArray r1, $r4;
        java.lang.Throwable r2, $r6;
        android.accessibilityservice.IAccessibilityServiceConnection r3;
        java.lang.Object $r5;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        r1 = <android.view.accessibility.AccessibilityInteractionClient: android.util.SparseArray sConnectionCache>;

        entermonitor r1;

     label1:
        $r4 = <android.view.accessibility.AccessibilityInteractionClient: android.util.SparseArray sConnectionCache>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (android.accessibilityservice.IAccessibilityServiceConnection) $r5;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0;
        long $l1;
        android.view.accessibility.AccessibilityNodeInfo $r1;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        $r1 = virtualinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int)>(i0, -1, $l1, 0, 4);

        return $r1;
    }

    public void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.accessibility.AccessibilityNodeInfoCache $r2;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfoCache sAccessibilityNodeInfoCache>;

        virtualinvoke $r2.<android.view.accessibility.AccessibilityNodeInfoCache: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return;
    }

    public boolean performAccessibilityAction(int, int, long, int, android.os.Bundle)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0, i1, i3, i4;
        long l2, $l5;
        android.os.Bundle r1;
        android.accessibilityservice.IAccessibilityServiceConnection r3;
        boolean z0, $z1;
        java.util.concurrent.atomic.AtomicInteger $r4;
        java.lang.Thread $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        i3 := @parameter3: int;

        r1 := @parameter4: android.os.Bundle;

     label1:
        r3 = virtualinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>(i0);

     label2:
        if r3 == null goto label6;

     label3:
        $r4 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.concurrent.atomic.AtomicInteger mInteractionIdCounter>;

        i4 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l5 = virtualinvoke $r5.<java.lang.Thread: long getId()>();

        $z1 = interfaceinvoke r3.<android.accessibilityservice.IAccessibilityServiceConnection: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>(i1, l2, i3, r1, i4, r0, $l5);

        if $z1 == 0 goto label6;

        z0 = specialinvoke r0.<android.view.accessibility.AccessibilityInteractionClient: boolean getPerformAccessibilityActionResultAndClear(int)>(i4);

     label4:
        return z0;

     label5:
        $r6 := @caughtexception;

     label6:
        return 0;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void removeConnection(int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        int i0;
        android.util.SparseArray r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        i0 := @parameter0: int;

        r1 = <android.view.accessibility.AccessibilityInteractionClient: android.util.SparseArray sConnectionCache>;

        entermonitor r1;

     label1:
        $r3 = <android.view.accessibility.AccessibilityInteractionClient: android.util.SparseArray sConnectionCache>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo, int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        int i0, $i1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter1: int;

        r2 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        entermonitor r2;

     label1:
        $i1 = r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId>;

        if i0 <= $i1 goto label2;

        r0.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo mFindAccessibilityNodeInfoResult> = r1;

        r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId> = i0;

     label2:
        $r4 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        r3 = $r5;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setFindAccessibilityNodeInfosResult(java.util.List, int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        java.util.List r1, $r5;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r7;
        boolean z0;
        java.util.ArrayList $r6;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        r2 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        entermonitor r2;

     label01:
        $i1 = r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId>;

        if i0 <= $i1 goto label08;

     label02:
        if r1 == null goto label15;

     label03:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Process: int myPid()>();

        if $i2 == $i3 goto label17;

     label04:
        z0 = 1;

     label05:
        if z0 != 0 goto label10;

     label06:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.List mFindAccessibilityNodeInfosResult> = $r6;

     label07:
        r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId> = i0;

     label08:
        $r4 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label09:
        return;

     label10:
        r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.List mFindAccessibilityNodeInfosResult> = r1;

     label11:
        goto label07;

     label12:
        $r7 := @caughtexception;

        r3 = $r7;

     label13:
        exitmonitor r2;

     label14:
        throw r3;

     label15:
        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<android.view.accessibility.AccessibilityInteractionClient: java.util.List mFindAccessibilityNodeInfosResult> = $r5;

     label16:
        goto label07;

     label17:
        z0 = 0;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
    }

    public void setPerformAccessibilityActionResult(boolean, int)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        boolean z0;
        int i0, $i1;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        entermonitor r1;

     label1:
        $i1 = r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId>;

        if i0 <= $i1 goto label2;

        r0.<android.view.accessibility.AccessibilityInteractionClient: boolean mPerformAccessibilityActionResult> = z0;

        r0.<android.view.accessibility.AccessibilityInteractionClient: int mInteractionId> = i0;

     label2:
        $r3 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setSameThreadMessage(android.os.Message)
    {
        android.view.accessibility.AccessibilityInteractionClient r0;
        android.os.Message r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.view.accessibility.AccessibilityInteractionClient;

        r1 := @parameter0: android.os.Message;

        r2 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        entermonitor r2;

     label1:
        r0.<android.view.accessibility.AccessibilityInteractionClient: android.os.Message mSameThreadMessage> = r1;

        $r4 = r0.<android.view.accessibility.AccessibilityInteractionClient: java.lang.Object mInstanceLock>;

        virtualinvoke $r4.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
