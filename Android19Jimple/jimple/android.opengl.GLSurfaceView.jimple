public class android.opengl.GLSurfaceView extends android.view.SurfaceView implements android.view.SurfaceHolder$Callback
{
    public static final int DEBUG_CHECK_GL_ERROR;
    public static final int DEBUG_LOG_GL_CALLS;
    private static final boolean LOG_ATTACH_DETACH;
    private static final boolean LOG_EGL;
    private static final boolean LOG_PAUSE_RESUME;
    private static final boolean LOG_RENDERER;
    private static final boolean LOG_RENDERER_DRAW_FRAME;
    private static final boolean LOG_SURFACE;
    private static final boolean LOG_THREADS;
    public static final int RENDERMODE_CONTINUOUSLY;
    public static final int RENDERMODE_WHEN_DIRTY;
    private static final java.lang.String TAG;
    private static final android.opengl.GLSurfaceView$GLThreadManager sGLThreadManager;
    private int mDebugFlags;
    private boolean mDetached;
    private android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser;
    private int mEGLContextClientVersion;
    private android.opengl.GLSurfaceView$EGLContextFactory mEGLContextFactory;
    private android.opengl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory;
    private android.opengl.GLSurfaceView$GLThread mGLThread;
    private android.opengl.GLSurfaceView$GLWrapper mGLWrapper;
    private boolean mPreserveEGLContextOnPause;
    private android.opengl.GLSurfaceView$Renderer mRenderer;
    private final java.lang.ref.WeakReference mThisWeakRef;

    static void <clinit>()
    {
        android.opengl.GLSurfaceView$GLThreadManager $r0;

        <android.opengl.GLSurfaceView: java.lang.String TAG> = "GLSurfaceView";

        <android.opengl.GLSurfaceView: int RENDERMODE_WHEN_DIRTY> = 0;

        <android.opengl.GLSurfaceView: int RENDERMODE_CONTINUOUSLY> = 1;

        <android.opengl.GLSurfaceView: boolean LOG_THREADS> = 0;

        <android.opengl.GLSurfaceView: boolean LOG_SURFACE> = 0;

        <android.opengl.GLSurfaceView: boolean LOG_RENDERER_DRAW_FRAME> = 0;

        <android.opengl.GLSurfaceView: boolean LOG_RENDERER> = 0;

        <android.opengl.GLSurfaceView: boolean LOG_PAUSE_RESUME> = 0;

        <android.opengl.GLSurfaceView: boolean LOG_EGL> = 0;

        <android.opengl.GLSurfaceView: boolean LOG_ATTACH_DETACH> = 0;

        <android.opengl.GLSurfaceView: int DEBUG_LOG_GL_CALLS> = 2;

        <android.opengl.GLSurfaceView: int DEBUG_CHECK_GL_ERROR> = 1;

        $r0 = new android.opengl.GLSurfaceView$GLThreadManager;

        specialinvoke $r0.<android.opengl.GLSurfaceView$GLThreadManager: void <init>(android.opengl.GLSurfaceView$1)>(null);

        <android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThreadManager sGLThreadManager> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.opengl.GLSurfaceView r0;
        android.content.Context r1;
        java.lang.ref.WeakReference $r2;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context)>(r1);

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        r0.<android.opengl.GLSurfaceView: java.lang.ref.WeakReference mThisWeakRef> = $r2;

        specialinvoke r0.<android.opengl.GLSurfaceView: void init()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.opengl.GLSurfaceView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        java.lang.ref.WeakReference $r3;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        r0.<android.opengl.GLSurfaceView: java.lang.ref.WeakReference mThisWeakRef> = $r3;

        specialinvoke r0.<android.opengl.GLSurfaceView: void init()>();

        return;
    }

    static android.opengl.GLSurfaceView$Renderer access$1000(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$Renderer $r1;

        r0 := @parameter0: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$Renderer mRenderer>;

        return $r1;
    }

    static int access$200(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView r0;
        int $i0;

        r0 := @parameter0: android.opengl.GLSurfaceView;

        $i0 = r0.<android.opengl.GLSurfaceView: int mEGLContextClientVersion>;

        return $i0;
    }

    static android.opengl.GLSurfaceView$EGLConfigChooser access$300(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$EGLConfigChooser $r1;

        r0 := @parameter0: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser>;

        return $r1;
    }

    static android.opengl.GLSurfaceView$EGLContextFactory access$400(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$EGLContextFactory $r1;

        r0 := @parameter0: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLContextFactory mEGLContextFactory>;

        return $r1;
    }

    static android.opengl.GLSurfaceView$EGLWindowSurfaceFactory access$500(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$EGLWindowSurfaceFactory $r1;

        r0 := @parameter0: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory>;

        return $r1;
    }

    static android.opengl.GLSurfaceView$GLWrapper access$600(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$GLWrapper $r1;

        r0 := @parameter0: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLWrapper mGLWrapper>;

        return $r1;
    }

    static int access$700(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView r0;
        int $i0;

        r0 := @parameter0: android.opengl.GLSurfaceView;

        $i0 = r0.<android.opengl.GLSurfaceView: int mDebugFlags>;

        return $i0;
    }

    static android.opengl.GLSurfaceView$GLThreadManager access$800()
    {
        android.opengl.GLSurfaceView$GLThreadManager $r0;

        $r0 = <android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThreadManager sGLThreadManager>;

        return $r0;
    }

    static boolean access$900(android.opengl.GLSurfaceView)
    {
        android.opengl.GLSurfaceView r0;
        boolean $z0;

        r0 := @parameter0: android.opengl.GLSurfaceView;

        $z0 = r0.<android.opengl.GLSurfaceView: boolean mPreserveEGLContextOnPause>;

        return $z0;
    }

    private void checkRenderThreadState()
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$GLThread $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        if $r1 == null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setRenderer has already been called for this instance.");

        throw $r2;

     label1:
        return;
    }

    private void init()
    {
        android.opengl.GLSurfaceView r0;
        android.view.SurfaceHolder $r1;

        r0 := @this: android.opengl.GLSurfaceView;

        $r1 = virtualinvoke r0.<android.opengl.GLSurfaceView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r1.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>(r0);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.opengl.GLSurfaceView r0;
        java.lang.Throwable r1, $r4;
        android.opengl.GLSurfaceView$GLThread $r2, $r3;

        r0 := @this: android.opengl.GLSurfaceView;

     label1:
        $r2 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        if $r2 == null goto label2;

        $r3 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r3.<android.opengl.GLSurfaceView$GLThread: void requestExitAndWait()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getDebugFlags()
    {
        android.opengl.GLSurfaceView r0;
        int $i0;

        r0 := @this: android.opengl.GLSurfaceView;

        $i0 = r0.<android.opengl.GLSurfaceView: int mDebugFlags>;

        return $i0;
    }

    public boolean getPreserveEGLContextOnPause()
    {
        android.opengl.GLSurfaceView r0;
        boolean $z0;

        r0 := @this: android.opengl.GLSurfaceView;

        $z0 = r0.<android.opengl.GLSurfaceView: boolean mPreserveEGLContextOnPause>;

        return $z0;
    }

    public int getRenderMode()
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$GLThread $r1;
        int $i0;

        r0 := @this: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        $i0 = virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: int getRenderMode()>();

        return $i0;
    }

    protected void onAttachedToWindow()
    {
        android.opengl.GLSurfaceView r0;
        int i0;
        boolean $z0;
        android.opengl.GLSurfaceView$Renderer $r1;
        android.opengl.GLSurfaceView$GLThread $r2, $r3, $r5, $r6, $r7;
        java.lang.ref.WeakReference $r4;

        r0 := @this: android.opengl.GLSurfaceView;

        specialinvoke r0.<android.view.SurfaceView: void onAttachedToWindow()>();

        $z0 = r0.<android.opengl.GLSurfaceView: boolean mDetached>;

        if $z0 == 0 goto label3;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$Renderer mRenderer>;

        if $r1 == null goto label3;

        i0 = 1;

        $r2 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        if $r2 == null goto label1;

        $r7 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        i0 = virtualinvoke $r7.<android.opengl.GLSurfaceView$GLThread: int getRenderMode()>();

     label1:
        $r3 = new android.opengl.GLSurfaceView$GLThread;

        $r4 = r0.<android.opengl.GLSurfaceView: java.lang.ref.WeakReference mThisWeakRef>;

        specialinvoke $r3.<android.opengl.GLSurfaceView$GLThread: void <init>(java.lang.ref.WeakReference)>($r4);

        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread> = $r3;

        if i0 == 1 goto label2;

        $r6 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r6.<android.opengl.GLSurfaceView$GLThread: void setRenderMode(int)>(i0);

     label2:
        $r5 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r5.<android.opengl.GLSurfaceView$GLThread: void start()>();

     label3:
        r0.<android.opengl.GLSurfaceView: boolean mDetached> = 0;

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$GLThread $r1, $r2;

        r0 := @this: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        if $r1 == null goto label1;

        $r2 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void requestExitAndWait()>();

     label1:
        r0.<android.opengl.GLSurfaceView: boolean mDetached> = 1;

        specialinvoke r0.<android.view.SurfaceView: void onDetachedFromWindow()>();

        return;
    }

    public void onPause()
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$GLThread $r1;

        r0 := @this: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: void onPause()>();

        return;
    }

    public void onResume()
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$GLThread $r1;

        r0 := @this: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: void onResume()>();

        return;
    }

    public void queueEvent(java.lang.Runnable)
    {
        android.opengl.GLSurfaceView r0;
        java.lang.Runnable r1;
        android.opengl.GLSurfaceView$GLThread $r2;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void queueEvent(java.lang.Runnable)>(r1);

        return;
    }

    public void requestRender()
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$GLThread $r1;

        r0 := @this: android.opengl.GLSurfaceView;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: void requestRender()>();

        return;
    }

    public void setDebugFlags(int)
    {
        android.opengl.GLSurfaceView r0;
        int i0;

        r0 := @this: android.opengl.GLSurfaceView;

        i0 := @parameter0: int;

        r0.<android.opengl.GLSurfaceView: int mDebugFlags> = i0;

        return;
    }

    public void setEGLConfigChooser(int, int, int, int, int, int)
    {
        android.opengl.GLSurfaceView r0;
        int i0, i1, i2, i3, i4, i5;
        android.opengl.GLSurfaceView$ComponentSizeChooser $r1;

        r0 := @this: android.opengl.GLSurfaceView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        $r1 = new android.opengl.GLSurfaceView$ComponentSizeChooser;

        specialinvoke $r1.<android.opengl.GLSurfaceView$ComponentSizeChooser: void <init>(android.opengl.GLSurfaceView,int,int,int,int,int,int)>(r0, i0, i1, i2, i3, i4, i5);

        virtualinvoke r0.<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)>($r1);

        return;
    }

    public void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$EGLConfigChooser r1;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.opengl.GLSurfaceView$EGLConfigChooser;

        specialinvoke r0.<android.opengl.GLSurfaceView: void checkRenderThreadState()>();

        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser> = r1;

        return;
    }

    public void setEGLConfigChooser(boolean)
    {
        android.opengl.GLSurfaceView r0;
        boolean z0;
        android.opengl.GLSurfaceView$SimpleEGLConfigChooser $r1;

        r0 := @this: android.opengl.GLSurfaceView;

        z0 := @parameter0: boolean;

        $r1 = new android.opengl.GLSurfaceView$SimpleEGLConfigChooser;

        specialinvoke $r1.<android.opengl.GLSurfaceView$SimpleEGLConfigChooser: void <init>(android.opengl.GLSurfaceView,boolean)>(r0, z0);

        virtualinvoke r0.<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)>($r1);

        return;
    }

    public void setEGLContextClientVersion(int)
    {
        android.opengl.GLSurfaceView r0;
        int i0;

        r0 := @this: android.opengl.GLSurfaceView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.opengl.GLSurfaceView: void checkRenderThreadState()>();

        r0.<android.opengl.GLSurfaceView: int mEGLContextClientVersion> = i0;

        return;
    }

    public void setEGLContextFactory(android.opengl.GLSurfaceView$EGLContextFactory)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$EGLContextFactory r1;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.opengl.GLSurfaceView$EGLContextFactory;

        specialinvoke r0.<android.opengl.GLSurfaceView: void checkRenderThreadState()>();

        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLContextFactory mEGLContextFactory> = r1;

        return;
    }

    public void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView$EGLWindowSurfaceFactory)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$EGLWindowSurfaceFactory r1;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.opengl.GLSurfaceView$EGLWindowSurfaceFactory;

        specialinvoke r0.<android.opengl.GLSurfaceView: void checkRenderThreadState()>();

        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory> = r1;

        return;
    }

    public void setGLWrapper(android.opengl.GLSurfaceView$GLWrapper)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$GLWrapper r1;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.opengl.GLSurfaceView$GLWrapper;

        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLWrapper mGLWrapper> = r1;

        return;
    }

    public void setPreserveEGLContextOnPause(boolean)
    {
        android.opengl.GLSurfaceView r0;
        boolean z0;

        r0 := @this: android.opengl.GLSurfaceView;

        z0 := @parameter0: boolean;

        r0.<android.opengl.GLSurfaceView: boolean mPreserveEGLContextOnPause> = z0;

        return;
    }

    public void setRenderMode(int)
    {
        android.opengl.GLSurfaceView r0;
        int i0;
        android.opengl.GLSurfaceView$GLThread $r1;

        r0 := @this: android.opengl.GLSurfaceView;

        i0 := @parameter0: int;

        $r1 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r1.<android.opengl.GLSurfaceView$GLThread: void setRenderMode(int)>(i0);

        return;
    }

    public void setRenderer(android.opengl.GLSurfaceView$Renderer)
    {
        android.opengl.GLSurfaceView r0;
        android.opengl.GLSurfaceView$Renderer r1;
        android.opengl.GLSurfaceView$EGLConfigChooser $r2;
        android.opengl.GLSurfaceView$EGLContextFactory $r3;
        android.opengl.GLSurfaceView$EGLWindowSurfaceFactory $r4;
        android.opengl.GLSurfaceView$GLThread $r5, $r7;
        java.lang.ref.WeakReference $r6;
        android.opengl.GLSurfaceView$DefaultWindowSurfaceFactory $r8;
        android.opengl.GLSurfaceView$DefaultContextFactory $r9;
        android.opengl.GLSurfaceView$SimpleEGLConfigChooser $r10;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.opengl.GLSurfaceView$Renderer;

        specialinvoke r0.<android.opengl.GLSurfaceView: void checkRenderThreadState()>();

        $r2 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser>;

        if $r2 != null goto label1;

        $r10 = new android.opengl.GLSurfaceView$SimpleEGLConfigChooser;

        specialinvoke $r10.<android.opengl.GLSurfaceView$SimpleEGLConfigChooser: void <init>(android.opengl.GLSurfaceView,boolean)>(r0, 1);

        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser> = $r10;

     label1:
        $r3 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLContextFactory mEGLContextFactory>;

        if $r3 != null goto label2;

        $r9 = new android.opengl.GLSurfaceView$DefaultContextFactory;

        specialinvoke $r9.<android.opengl.GLSurfaceView$DefaultContextFactory: void <init>(android.opengl.GLSurfaceView,android.opengl.GLSurfaceView$1)>(r0, null);

        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLContextFactory mEGLContextFactory> = $r9;

     label2:
        $r4 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory>;

        if $r4 != null goto label3;

        $r8 = new android.opengl.GLSurfaceView$DefaultWindowSurfaceFactory;

        specialinvoke $r8.<android.opengl.GLSurfaceView$DefaultWindowSurfaceFactory: void <init>(android.opengl.GLSurfaceView$1)>(null);

        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory> = $r8;

     label3:
        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$Renderer mRenderer> = r1;

        $r5 = new android.opengl.GLSurfaceView$GLThread;

        $r6 = r0.<android.opengl.GLSurfaceView: java.lang.ref.WeakReference mThisWeakRef>;

        specialinvoke $r5.<android.opengl.GLSurfaceView$GLThread: void <init>(java.lang.ref.WeakReference)>($r6);

        r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread> = $r5;

        $r7 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r7.<android.opengl.GLSurfaceView$GLThread: void start()>();

        return;
    }

    public void surfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        android.opengl.GLSurfaceView r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2;
        android.opengl.GLSurfaceView$GLThread $r2;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void onWindowResize(int,int)>(i1, i2);

        return;
    }

    public void surfaceCreated(android.view.SurfaceHolder)
    {
        android.opengl.GLSurfaceView r0;
        android.view.SurfaceHolder r1;
        android.opengl.GLSurfaceView$GLThread $r2;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.view.SurfaceHolder;

        $r2 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void surfaceCreated()>();

        return;
    }

    public void surfaceDestroyed(android.view.SurfaceHolder)
    {
        android.opengl.GLSurfaceView r0;
        android.view.SurfaceHolder r1;
        android.opengl.GLSurfaceView$GLThread $r2;

        r0 := @this: android.opengl.GLSurfaceView;

        r1 := @parameter0: android.view.SurfaceHolder;

        $r2 = r0.<android.opengl.GLSurfaceView: android.opengl.GLSurfaceView$GLThread mGLThread>;

        virtualinvoke $r2.<android.opengl.GLSurfaceView$GLThread: void surfaceDestroyed()>();

        return;
    }
}
