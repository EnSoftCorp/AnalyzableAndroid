final class com.android.server.display.WifiDisplayController extends java.lang.Object implements com.android.internal.util.DumpUtils$Dump
{
    private static final int CONNECTION_TIMEOUT_SECONDS;
    private static final int CONNECT_MAX_RETRIES;
    private static final int CONNECT_RETRY_DELAY_MILLIS;
    private static final boolean DEBUG;
    private static final int DEFAULT_CONTROL_PORT;
    private static final int DISCOVER_PEERS_INTERVAL_MILLIS;
    private static final int MAX_THROUGHPUT;
    private static final int RTSP_TIMEOUT_SECONDS;
    private static final int RTSP_TIMEOUT_SECONDS_CERT_MODE;
    private static final java.lang.String TAG;
    private android.hardware.display.WifiDisplay mAdvertisedDisplay;
    private int mAdvertisedDisplayFlags;
    private int mAdvertisedDisplayHeight;
    private android.view.Surface mAdvertisedDisplaySurface;
    private int mAdvertisedDisplayWidth;
    private final java.util.ArrayList mAvailableWifiDisplayPeers;
    private android.net.wifi.p2p.WifiP2pDevice mCancelingDevice;
    private android.net.wifi.p2p.WifiP2pDevice mConnectedDevice;
    private android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo;
    private android.net.wifi.p2p.WifiP2pDevice mConnectingDevice;
    private int mConnectionRetriesLeft;
    private final java.lang.Runnable mConnectionTimeout;
    private final android.content.Context mContext;
    private android.net.wifi.p2p.WifiP2pDevice mDesiredDevice;
    private android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice;
    private final java.lang.Runnable mDiscoverPeers;
    private boolean mDiscoverPeersInProgress;
    private final android.os.Handler mHandler;
    private final com.android.server.display.WifiDisplayController$Listener mListener;
    private android.net.NetworkInfo mNetworkInfo;
    private android.media.RemoteDisplay mRemoteDisplay;
    private boolean mRemoteDisplayConnected;
    private java.lang.String mRemoteDisplayInterface;
    private final java.lang.Runnable mRtspTimeout;
    private boolean mScanRequested;
    private android.net.wifi.p2p.WifiP2pDevice mThisDevice;
    private boolean mWfdEnabled;
    private boolean mWfdEnabling;
    private boolean mWifiDisplayCertMode;
    private boolean mWifiDisplayOnSetting;
    private int mWifiDisplayWpsConfig;
    private final android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel;
    private boolean mWifiP2pEnabled;
    private final android.net.wifi.p2p.WifiP2pManager mWifiP2pManager;
    private final android.content.BroadcastReceiver mWifiP2pReceiver;

    public void <init>(android.content.Context, android.os.Handler, com.android.server.display.WifiDisplayController$Listener)
    {
        com.android.server.display.WifiDisplayController r0;
        android.content.Context r1, $r23;
        android.os.Handler r2, $r17, $r21;
        com.android.server.display.WifiDisplayController$Listener r3;
        android.content.IntentFilter r4, $r18;
        com.android.server.display.WifiDisplayController$1 r5, $r22;
        android.content.ContentResolver r6;
        java.util.ArrayList $r7;
        com.android.server.display.WifiDisplayController$16 $r8;
        com.android.server.display.WifiDisplayController$17 $r9;
        com.android.server.display.WifiDisplayController$18 $r10;
        com.android.server.display.WifiDisplayController$21 $r11;
        java.lang.Object $r12;
        android.net.wifi.p2p.WifiP2pManager $r13, $r14;
        android.net.wifi.p2p.WifiP2pManager$Channel $r15;
        android.os.Looper $r16;
        android.content.BroadcastReceiver $r20;
        android.net.Uri $r24, $r25, $r26;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.android.server.display.WifiDisplayController$Listener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers> = $r7;

        r0.<com.android.server.display.WifiDisplayController: int mWifiDisplayWpsConfig> = 4;

        $r8 = new com.android.server.display.WifiDisplayController$16;

        specialinvoke $r8.<com.android.server.display.WifiDisplayController$16: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mDiscoverPeers> = $r8;

        $r9 = new com.android.server.display.WifiDisplayController$17;

        specialinvoke $r9.<com.android.server.display.WifiDisplayController$17: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mConnectionTimeout> = $r9;

        $r10 = new com.android.server.display.WifiDisplayController$18;

        specialinvoke $r10.<com.android.server.display.WifiDisplayController$18: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mRtspTimeout> = $r10;

        $r11 = new com.android.server.display.WifiDisplayController$21;

        specialinvoke $r11.<com.android.server.display.WifiDisplayController$21: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        r0.<com.android.server.display.WifiDisplayController: android.content.BroadcastReceiver mWifiP2pReceiver> = $r11;

        r0.<com.android.server.display.WifiDisplayController: android.content.Context mContext> = r1;

        r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler> = r2;

        r0.<com.android.server.display.WifiDisplayController: com.android.server.display.WifiDisplayController$Listener mListener> = r3;

        $r12 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifip2p");

        $r13 = (android.net.wifi.p2p.WifiP2pManager) $r12;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager> = $r13;

        $r14 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r16 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        $r15 = virtualinvoke $r14.<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>(r1, $r16, null);

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel> = $r15;

        $r18 = new android.content.IntentFilter;

        specialinvoke $r18.<android.content.IntentFilter: void <init>()>();

        r4 = $r18;

        virtualinvoke r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.p2p.STATE_CHANGED");

        virtualinvoke r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.p2p.PEERS_CHANGED");

        virtualinvoke r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.p2p.CONNECTION_STATE_CHANGE");

        virtualinvoke r4.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.p2p.THIS_DEVICE_CHANGED");

        $r20 = r0.<com.android.server.display.WifiDisplayController: android.content.BroadcastReceiver mWifiP2pReceiver>;

        $r17 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r20, r4, null, $r17);

        $r22 = new com.android.server.display.WifiDisplayController$1;

        $r21 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        specialinvoke $r22.<com.android.server.display.WifiDisplayController$1: void <init>(com.android.server.display.WifiDisplayController,android.os.Handler)>(r0, $r21);

        r5 = $r22;

        $r23 = r0.<com.android.server.display.WifiDisplayController: android.content.Context mContext>;

        r6 = virtualinvoke $r23.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r25 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_display_on");

        virtualinvoke r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r25, 0, r5);

        $r24 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_display_certification_on");

        virtualinvoke r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r24, 0, r5);

        $r26 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_display_wps_config");

        virtualinvoke r6.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r26, 0, r5);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateSettings()>();

        return;
    }

    static void access$000(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateSettings()>();

        return;
    }

    static boolean access$100(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling>;

        return $z0;
    }

    static void access$1000(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleScanResults()>();

        return;
    }

    static boolean access$102(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling> = z0;

        return z0;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1100(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1102(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice> = r1;

        return r1;
    }

    static void access$1200(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateConnection()>();

        return;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1300(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1302(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice> = r1;

        return r1;
    }

    static java.lang.Runnable access$1400(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mConnectionTimeout>;

        return $r1;
    }

    static android.os.Handler access$1500(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1600(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1602(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice> = r1;

        return r1;
    }

    static void access$1700(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleConnectionFailure(boolean)>(z0);

        return;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1800(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$1802(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice> = r1;

        return r1;
    }

    static boolean access$1900(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mRemoteDisplayConnected>;

        return $z0;
    }

    static boolean access$1902(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.WifiDisplayController: boolean mRemoteDisplayConnected> = z0;

        return z0;
    }

    static java.lang.Runnable access$2000(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mRtspTimeout>;

        return $r1;
    }

    static boolean access$202(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled> = z0;

        return z0;
    }

    static boolean access$2100(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode>;

        return $z0;
    }

    static android.net.wifi.p2p.WifiP2pGroup access$2200(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pGroup $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pGroup access$2202(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pGroup)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pGroup r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pGroup;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo> = r1;

        return r1;
    }

    static android.hardware.display.WifiDisplaySessionInfo access$2300(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pGroup, int)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pGroup r1;
        int i0;
        android.hardware.display.WifiDisplaySessionInfo $r2;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pGroup;

        i0 := @parameter2: int;

        $r2 = specialinvoke r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplaySessionInfo getSessionInfo(android.net.wifi.p2p.WifiP2pGroup,int)>(r1, i0);

        return $r2;
    }

    static android.hardware.display.WifiDisplay access$2400(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        android.hardware.display.WifiDisplay $r1;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r1 = staticinvoke <com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>(r0);

        return $r1;
    }

    static void access$2500(com.android.server.display.WifiDisplayController, android.hardware.display.WifiDisplay, android.view.Surface, int, int, int)
    {
        com.android.server.display.WifiDisplayController r0;
        android.hardware.display.WifiDisplay r1;
        android.view.Surface r2;
        int i0, i1, i2;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.hardware.display.WifiDisplay;

        r2 := @parameter2: android.view.Surface;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void advertiseDisplay(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>(r1, r2, i0, i1, i2);

        return;
    }

    static void access$2600(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

        return;
    }

    static java.lang.String access$2700(android.net.wifi.p2p.WifiP2pGroup)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String $r1;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        $r1 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pGroup(android.net.wifi.p2p.WifiP2pGroup)>(r0);

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$2800(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$2802(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice> = r1;

        return r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$2900(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mThisDevice>;

        return $r1;
    }

    static android.net.wifi.p2p.WifiP2pDevice access$2902(com.android.server.display.WifiDisplayController, android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.wifi.p2p.WifiP2pDevice;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mThisDevice> = r1;

        return r1;
    }

    static void access$300(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void reportFeatureState()>();

        return;
    }

    static void access$3000(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void tryDiscoverPeers()>();

        return;
    }

    static android.media.RemoteDisplay access$3100(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        android.media.RemoteDisplay $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        return $r1;
    }

    static int access$3200(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        int $i0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $i0 = r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft>;

        return $i0;
    }

    static int access$3220(com.android.server.display.WifiDisplayController, int)
    {
        com.android.server.display.WifiDisplayController r0;
        int i0, i1, $i2;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        i0 := @parameter1: int;

        $i2 = r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft>;

        i1 = $i2 - i0;

        r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft> = i1;

        return i1;
    }

    static void access$3300(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void retryConnection()>();

        return;
    }

    static void access$3400(com.android.server.display.WifiDisplayController, boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleStateChanged(boolean)>(z0);

        return;
    }

    static void access$3500(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handlePeersChanged()>();

        return;
    }

    static void access$3600(com.android.server.display.WifiDisplayController, android.net.NetworkInfo)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.NetworkInfo r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        r1 := @parameter1: android.net.NetworkInfo;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleConnectionChanged(android.net.NetworkInfo)>(r1);

        return;
    }

    static void access$400(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

        return;
    }

    static com.android.server.display.WifiDisplayController$Listener access$500(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$Listener $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: com.android.server.display.WifiDisplayController$Listener mListener>;

        return $r1;
    }

    static boolean access$600(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress>;

        return $z0;
    }

    static void access$700(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void requestPeers()>();

        return;
    }

    static java.util.ArrayList access$800(com.android.server.display.WifiDisplayController)
    {
        com.android.server.display.WifiDisplayController r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        return $r1;
    }

    static boolean access$900(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $z0 = staticinvoke <com.android.server.display.WifiDisplayController: boolean isWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>(r0);

        return $z0;
    }

    private void advertiseDisplay(android.hardware.display.WifiDisplay, android.view.Surface, int, int, int)
    {
        com.android.server.display.WifiDisplayController r0;
        android.hardware.display.WifiDisplay r1, r3, $r5;
        android.view.Surface r2, r4, $r8;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean $z0;
        com.android.server.display.WifiDisplayController$20 $r6;
        android.os.Handler $r7;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.hardware.display.WifiDisplay;

        r2 := @parameter1: android.view.Surface;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r5 = r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay>;

        $z0 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z0 == 0 goto label1;

        $r8 = r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface>;

        if $r8 != r2 goto label1;

        $i3 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayWidth>;

        if $i3 != i0 goto label1;

        $i4 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayHeight>;

        if $i4 != i1 goto label1;

        $i5 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayFlags>;

        if $i5 == i2 goto label2;

     label1:
        r3 = r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay>;

        r4 = r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface>;

        r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay> = r1;

        r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface> = r2;

        r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayWidth> = i0;

        r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayHeight> = i1;

        r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayFlags> = i2;

        $r7 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r6 = new com.android.server.display.WifiDisplayController$20;

        specialinvoke $r6.<com.android.server.display.WifiDisplayController$20: void <init>(com.android.server.display.WifiDisplayController,android.view.Surface,android.view.Surface,android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplay,int,int,int)>(r0, r4, r2, r3, r1, i0, i1, i2);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

     label2:
        return;
    }

    private int computeFeatureState()
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiP2pEnabled>;

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $z1 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayOnSetting>;

        if $z1 == 0 goto label2;

        return 3;

     label2:
        return 2;
    }

    private void connect(android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1, $r2, $r3, $r9, $r12, $r13;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8, $r10, $r11, $r14, $r15;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r2 == null goto label2;

        $r12 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r14 = $r12.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r15 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 != 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if $r3 == null goto label3;

        $r9 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r11 = $r9.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r10 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label3;

        $r13 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r13 == null goto label1;

     label3:
        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z0 != 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring request to connect to Wifi display because the  feature is currently disabled: ");

        $r6 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r8);

        return;

     label4:
        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice> = r1;

        r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft> = 3;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateConnection()>();

        return;
    }

    private static android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        android.hardware.display.WifiDisplay $r1;
        android.net.wifi.p2p.WifiP2pWfdInfo $r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r1 = new android.hardware.display.WifiDisplay;

        $r3 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r4 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $r2 = r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo>;

        $z0 = virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isSessionAvailable()>();

        specialinvoke $r1.<android.hardware.display.WifiDisplay: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>($r3, $r4, null, 1, $z0, 0);

        return $r1;
    }

    private static java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(10, 44);

        return $r2;

     label1:
        return "null";
    }

    private static java.lang.String describeWifiP2pGroup(android.net.wifi.p2p.WifiP2pGroup)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.lang.String $r1, $r2;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(10, 44);

        return $r2;

     label1:
        return "null";
    }

    private void disconnect()
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice> = null;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateConnection()>();

        return;
    }

    private static java.net.Inet4Address getInterfaceAddress(android.net.wifi.p2p.WifiP2pGroup)
    {
        android.net.wifi.p2p.WifiP2pGroup r0;
        java.net.SocketException r1, $r15;
        java.net.NetworkInterface r2;
        java.util.Enumeration r3;
        java.net.InetAddress r4;
        java.lang.String $r5, $r8, $r10, $r18, $r19;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r9, $r11, $r14, $r16, $r17;
        java.lang.Object $r12;
        java.net.Inet4Address $r13;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

     label1:
        $r5 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>();

        r2 = staticinvoke <java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)>($r5);

     label2:
        r3 = virtualinvoke r2.<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r12 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r4 = (java.net.InetAddress) $r12;

        $z1 = r4 instanceof java.net.Inet4Address;

        if $z1 == 0 goto label3;

        $r13 = (java.net.Inet4Address) r4;

        return $r13;

     label4:
        $r15 := @caughtexception;

        r1 = $r15;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not obtain address of network interface ");

        $r18 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WifiDisplayController", $r19, r1);

        return null;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not obtain address of network interface ");

        $r8 = virtualinvoke r0.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because it had no IPv4 addresses.");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WifiDisplayController", $r10);

        return null;

        catch java.net.SocketException from label1 to label2 with label4;
    }

    private static int getPortNumber(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r1 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("DIRECT-");

        if $z0 == 0 goto label1;

        $r2 = r0.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("Broadcom");

        if $z1 == 0 goto label1;

        return 8554;

     label1:
        return 7236;
    }

    private android.hardware.display.WifiDisplaySessionInfo getSessionInfo(android.net.wifi.p2p.WifiP2pGroup, int)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pGroup r1;
        int i0;
        java.net.Inet4Address r2;
        boolean z0, $z1;
        java.lang.String r3, r4, r5, $r8, $r9, $r13, $r14;
        android.net.wifi.p2p.WifiP2pDevice $r6, $r7, $r11;
        java.lang.StringBuilder $r10, $r12, $r15, $r16;
        android.hardware.display.WifiDisplaySessionInfo $r17;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pGroup;

        i0 := @parameter1: int;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = staticinvoke <com.android.server.display.WifiDisplayController: java.net.Inet4Address getInterfaceAddress(android.net.wifi.p2p.WifiP2pGroup)>(r1);

        $r6 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>();

        $r9 = $r6.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r7 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mThisDevice>;

        $r8 = $r7.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label4;

        z0 = 1;

     label2:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>();

        $r13 = $r11.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r3 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke r1.<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>();

        if r2 == null goto label5;

        r5 = virtualinvoke r2.<java.net.Inet4Address: java.lang.String getHostAddress()>();

     label3:
        $r17 = new android.hardware.display.WifiDisplaySessionInfo;

        specialinvoke $r17.<android.hardware.display.WifiDisplaySessionInfo: void <init>(boolean,int,java.lang.String,java.lang.String,java.lang.String)>(z0, i0, r3, r4, r5);

        return $r17;

     label4:
        z0 = 0;

        goto label2;

     label5:
        r5 = "";

        goto label3;
    }

    private void handleConnectionChanged(android.net.NetworkInfo)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.NetworkInfo r1;
        boolean $z0, $z1, $z2, $z3;
        android.net.wifi.p2p.WifiP2pDevice $r2, $r3, $r4;
        com.android.server.display.WifiDisplayController$15 $r5;
        android.net.wifi.p2p.WifiP2pManager $r6;
        android.net.wifi.p2p.WifiP2pManager$Channel $r7;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.net.NetworkInfo;

        r0.<com.android.server.display.WifiDisplayController: android.net.NetworkInfo mNetworkInfo> = r1;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z0 == 0 goto label3;

        $z2 = virtualinvoke r1.<android.net.NetworkInfo: boolean isConnected()>();

        if $z2 == 0 goto label3;

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r4 != null goto label1;

        $z3 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode>;

        if $z3 == 0 goto label2;

     label1:
        $r6 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r7 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r5 = new com.android.server.display.WifiDisplayController$15;

        specialinvoke $r5.<com.android.server.display.WifiDisplayController$15: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r6.<android.net.wifi.p2p.WifiP2pManager: void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$GroupInfoListener)>($r7, $r5);

     label2:
        return;

     label3:
        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo> = null;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        if $r2 != null goto label4;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if $r3 == null goto label5;

     label4:
        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

     label5:
        $z1 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void requestPeers()>();

        return;
    }

    private void handleConnectionFailure(boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;
        android.net.wifi.p2p.WifiP2pDevice r1, $r4;
        android.os.Handler r2;
        com.android.server.display.WifiDisplayController$19 r3, $r5;
        long l0;
        int $i2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        z0 := @parameter0: boolean;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", "Wifi display connection failed!");

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r4 == null goto label2;

        $i2 = r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft>;

        if $i2 <= 0 goto label4;

        r1 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        r2 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r5 = new com.android.server.display.WifiDisplayController$19;

        specialinvoke $r5.<com.android.server.display.WifiDisplayController$19: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r1);

        r3 = $r5;

        if z0 == 0 goto label3;

        l0 = 0L;

     label1:
        virtualinvoke r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r3, l0);

     label2:
        return;

     label3:
        l0 = 500L;

        goto label1;

     label4:
        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

        return;
    }

    private void handlePeersChanged()
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void requestPeers()>();

        return;
    }

    private void handleScanFinished()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$10 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r1 = new com.android.server.display.WifiDisplayController$10;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$10: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void handleScanResults()
    {
        com.android.server.display.WifiDisplayController r0;
        int i0, i1;
        android.hardware.display.WifiDisplay[] r1;
        android.net.wifi.p2p.WifiP2pDevice r2;
        java.util.ArrayList $r3, $r8;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;
        com.android.server.display.WifiDisplayController$9 $r6;
        android.os.Handler $r7;
        java.lang.Object $r9;
        android.hardware.display.WifiDisplay $r10;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r3 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $r4 = <android.hardware.display.WifiDisplay: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r4.<android.os.Parcelable$Creator: java.lang.Object[] newArray(int)>(i0);

        r1 = (android.hardware.display.WifiDisplay[]) $r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.net.wifi.p2p.WifiP2pDevice) $r9;

        $r10 = staticinvoke <com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>(r2);

        r1[i1] = $r10;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateDesiredDevice(android.net.wifi.p2p.WifiP2pDevice)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r7 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r6 = new com.android.server.display.WifiDisplayController$9;

        specialinvoke $r6.<com.android.server.display.WifiDisplayController$9: void <init>(com.android.server.display.WifiDisplayController,android.hardware.display.WifiDisplay[])>(r0, r1);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r6);

        return;
    }

    private void handleScanStarted()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$8 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r1 = new com.android.server.display.WifiDisplayController$8;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$8: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void handleStateChanged(boolean)
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.display.WifiDisplayController: boolean mWifiP2pEnabled> = z0;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateWfdEnableState()>();

        return;
    }

    private static boolean isPrimarySinkDeviceType(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 != 3 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    private static boolean isWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)
    {
        android.net.wifi.p2p.WifiP2pDevice r0;
        android.net.wifi.p2p.WifiP2pWfdInfo $r1, $r2, $r3;
        boolean $z0, $z1;
        int $i0;

        r0 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        $r1 = r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo>;

        $z0 = virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isWfdEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<android.net.wifi.p2p.WifiP2pDevice: android.net.wifi.p2p.WifiP2pWfdInfo wfdInfo>;

        $i0 = virtualinvoke $r3.<android.net.wifi.p2p.WifiP2pWfdInfo: int getDeviceType()>();

        $z1 = staticinvoke <com.android.server.display.WifiDisplayController: boolean isPrimarySinkDeviceType(int)>($i0);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void readvertiseDisplay(android.hardware.display.WifiDisplay)
    {
        com.android.server.display.WifiDisplayController r0;
        android.hardware.display.WifiDisplay r1;
        int $i0, $i1, $i2;
        android.view.Surface $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.hardware.display.WifiDisplay;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface>;

        $i2 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayWidth>;

        $i1 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayHeight>;

        $i0 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayFlags>;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void advertiseDisplay(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>(r1, $r2, $i2, $i1, $i0);

        return;
    }

    private void reportFeatureState()
    {
        com.android.server.display.WifiDisplayController r0;
        int i0;
        com.android.server.display.WifiDisplayController$4 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        i0 = specialinvoke r0.<com.android.server.display.WifiDisplayController: int computeFeatureState()>();

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r1 = new com.android.server.display.WifiDisplayController$4;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$4: void <init>(com.android.server.display.WifiDisplayController,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void requestPeers()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$7 $r1;
        android.net.wifi.p2p.WifiP2pManager $r2;
        android.net.wifi.p2p.WifiP2pManager$Channel $r3;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r1 = new com.android.server.display.WifiDisplayController$7;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$7: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pManager: void requestPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$PeerListListener)>($r3, $r1);

        return;
    }

    private void retryConnection()
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice $r1, $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r1 = new android.net.wifi.p2p.WifiP2pDevice;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        specialinvoke $r1.<android.net.wifi.p2p.WifiP2pDevice: void <init>(android.net.wifi.p2p.WifiP2pDevice)>($r2);

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice> = $r1;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateConnection()>();

        return;
    }

    private void stopPeerDiscovery()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$6 $r1;
        android.net.wifi.p2p.WifiP2pManager $r2;
        android.net.wifi.p2p.WifiP2pManager$Channel $r3;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r1 = new com.android.server.display.WifiDisplayController$6;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$6: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pManager: void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r3, $r1);

        return;
    }

    private void tryDiscoverPeers()
    {
        com.android.server.display.WifiDisplayController r0;
        com.android.server.display.WifiDisplayController$5 $r1;
        android.net.wifi.p2p.WifiP2pManager $r2;
        android.net.wifi.p2p.WifiP2pManager$Channel $r3;
        java.lang.Runnable $r4;
        android.os.Handler $r5;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r1 = new com.android.server.display.WifiDisplayController$5;

        specialinvoke $r1.<com.android.server.display.WifiDisplayController$5: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r2.<android.net.wifi.p2p.WifiP2pManager: void discoverPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r3, $r1);

        $r5 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r4 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mDiscoverPeers>;

        virtualinvoke $r5.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r4, 10000L);

        return;
    }

    private void unadvertiseDisplay()
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void advertiseDisplay(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>(null, null, 0, 0, 0);

        return;
    }

    private void updateConnection()
    {
        com.android.server.display.WifiDisplayController r0;
        java.net.Inet4Address r1;
        android.net.wifi.p2p.WifiP2pDevice r2, r6, r7, r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r19, $r28, $r39, $r45, $r49, $r52, $r53, $r54, $r61, $r62, $r64, $r67, $r70, $r73, $r76, $r79, $r84, $r88, $r92, $r93, $r103;
        int i0, $i3, $i6, $i8;
        java.lang.String r3, $r24, $r29, $r34, $r42, $r44, $r46, $r48, $r63, $r72, $r74, $r85, $r87, $r102, $r106, $r107;
        byte b1;
        android.net.wifi.p2p.WifiP2pConfig r4, $r55;
        android.net.wifi.WpsInfo r5, $r56;
        android.media.RemoteDisplay $r8, $r16, $r35, $r98;
        android.net.wifi.p2p.WifiP2pGroup $r18, $r69;
        android.net.wifi.p2p.WifiP2pManager $r20, $r60, $r81, $r95, $r99;
        java.lang.StringBuilder $r21, $r22, $r23, $r25, $r26, $r27, $r30, $r31, $r33, $r40, $r41, $r43, $r47, $r50, $r51, $r66, $r71, $r75, $r77, $r86, $r89, $r90, $r91, $r101, $r104, $r105;
        com.android.server.display.WifiDisplayController$14 $r32;
        boolean $z0, $z2, $z3, $z4;
        android.os.Handler $r36, $r37, $r83, $r100;
        java.lang.Runnable $r38, $r82, $r97;
        long $l4;
        com.android.server.display.WifiDisplayController$13 $r57;
        android.hardware.display.WifiDisplay $r58;
        android.net.wifi.p2p.WifiP2pManager$Channel $r59, $r78, $r94;
        android.hardware.display.WifiDisplaySessionInfo $r65;
        com.android.server.display.WifiDisplayController$Listener $r68;
        com.android.server.display.WifiDisplayController$12 $r80;
        com.android.server.display.WifiDisplayController$11 $r96;

        r0 := @this: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

        $r8 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        if $r8 == null goto label01;

        $r92 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r93 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r92 == $r93 goto label01;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stopped listening for RTSP connection on ");

        $r102 = r0.<com.android.server.display.WifiDisplayController: java.lang.String mRemoteDisplayInterface>;

        $r101 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r104 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Wifi display: ");

        $r103 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r106 = $r103.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r107);

        $r98 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        virtualinvoke $r98.<android.media.RemoteDisplay: void dispose()>();

        r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay> = null;

        r0.<com.android.server.display.WifiDisplayController: java.lang.String mRemoteDisplayInterface> = null;

        r0.<com.android.server.display.WifiDisplayController: boolean mRemoteDisplayConnected> = 0;

        $r100 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r97 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mRtspTimeout>;

        virtualinvoke $r100.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r97);

        $r99 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        virtualinvoke $r99.<android.net.wifi.p2p.WifiP2pManager: void setMiracastMode(int)>(0);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void unadvertiseDisplay()>();

     label01:
        $r11 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice>;

        if $r11 == null goto label03;

     label02:
        return;

     label03:
        $r10 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if $r10 == null goto label04;

        $r76 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r79 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r76 == $r79 goto label04;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Disconnecting from Wifi display: ");

        $r88 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r87 = $r88.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $r86 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r85);

        $r84 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice> = $r84;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice> = null;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo> = null;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void unadvertiseDisplay()>();

        r9 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice>;

        $r95 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r94 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r96 = new com.android.server.display.WifiDisplayController$11;

        specialinvoke $r96.<com.android.server.display.WifiDisplayController$11: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r9);

        virtualinvoke $r95.<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r94, $r96);

        return;

     label04:
        $r13 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice>;

        if $r13 != null goto label02;

        $r12 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        if $r12 == null goto label05;

        $r67 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $r64 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r67 == $r64 goto label05;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Canceling connection to Wifi display: ");

        $r73 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $r74 = $r73.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $r71 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r72);

        $r70 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice> = $r70;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice> = null;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void unadvertiseDisplay()>();

        $r83 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r82 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mConnectionTimeout>;

        virtualinvoke $r83.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r82);

        r7 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice>;

        $r81 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r78 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r80 = new com.android.server.display.WifiDisplayController$12;

        specialinvoke $r80.<com.android.server.display.WifiDisplayController$12: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r7);

        virtualinvoke $r81.<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r78, $r80);

        return;

     label05:
        $r15 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r15 != null goto label07;

        $z4 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode>;

        if $z4 == 0 goto label06;

        $r68 = r0.<com.android.server.display.WifiDisplayController: com.android.server.display.WifiDisplayController$Listener mListener>;

        $r69 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo>;

        $r65 = specialinvoke r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplaySessionInfo getSessionInfo(android.net.wifi.p2p.WifiP2pGroup,int)>($r69, 0);

        interfaceinvoke $r68.<com.android.server.display.WifiDisplayController$Listener: void onDisplaySessionInfo(android.hardware.display.WifiDisplaySessionInfo)>($r65);

     label06:
        specialinvoke r0.<com.android.server.display.WifiDisplayController: void unadvertiseDisplay()>();

        return;

     label07:
        $r14 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if $r14 != null goto label12;

        $r49 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        if $r49 != null goto label12;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connecting to Wifi display: ");

        $r45 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r46 = $r45.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $r47 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r48);

        $r54 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice> = $r54;

        $r55 = new android.net.wifi.p2p.WifiP2pConfig;

        specialinvoke $r55.<android.net.wifi.p2p.WifiP2pConfig: void <init>()>();

        r4 = $r55;

        $r56 = new android.net.wifi.WpsInfo;

        specialinvoke $r56.<android.net.wifi.WpsInfo: void <init>()>();

        r5 = $r56;

        $i6 = r0.<com.android.server.display.WifiDisplayController: int mWifiDisplayWpsConfig>;

        if $i6 == 4 goto label09;

        $i8 = r0.<com.android.server.display.WifiDisplayController: int mWifiDisplayWpsConfig>;

        r5.<android.net.wifi.WpsInfo: int setup> = $i8;

     label08:
        r4.<android.net.wifi.p2p.WifiP2pConfig: android.net.wifi.WpsInfo wps> = r5;

        $r61 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $r63 = $r61.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        r4.<android.net.wifi.p2p.WifiP2pConfig: java.lang.String deviceAddress> = $r63;

        r4.<android.net.wifi.p2p.WifiP2pConfig: int groupOwnerIntent> = 0;

        $r62 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $r58 = staticinvoke <com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>($r62);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void advertiseDisplay(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>($r58, null, 0, 0, 0);

        r6 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r60 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r59 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r57 = new com.android.server.display.WifiDisplayController$13;

        specialinvoke $r57.<com.android.server.display.WifiDisplayController$13: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r6);

        virtualinvoke $r60.<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r59, r4, $r57);

        return;

     label09:
        $r52 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $z2 = virtualinvoke $r52.<android.net.wifi.p2p.WifiP2pDevice: boolean wpsPbcSupported()>();

        if $z2 == 0 goto label10;

        r5.<android.net.wifi.WpsInfo: int setup> = 0;

        goto label08;

     label10:
        $r53 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $z3 = virtualinvoke $r53.<android.net.wifi.p2p.WifiP2pDevice: boolean wpsDisplaySupported()>();

        if $z3 == 0 goto label11;

        r5.<android.net.wifi.WpsInfo: int setup> = 2;

        goto label08;

     label11:
        r5.<android.net.wifi.WpsInfo: int setup> = 1;

        goto label08;

     label12:
        $r17 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if $r17 == null goto label02;

        $r16 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        if $r16 != null goto label02;

        $r18 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pGroup mConnectedDeviceGroupInfo>;

        r1 = staticinvoke <com.android.server.display.WifiDisplayController: java.net.Inet4Address getInterfaceAddress(android.net.wifi.p2p.WifiP2pGroup)>($r18);

        if r1 != null goto label13;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to get local interface address for communicating with Wifi display: ");

        $r39 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r44 = $r39.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r42);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleConnectionFailure(boolean)>(0);

        return;

     label13:
        $r20 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        virtualinvoke $r20.<android.net.wifi.p2p.WifiP2pManager: void setMiracastMode(int)>(1);

        r2 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r19 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        i0 = staticinvoke <com.android.server.display.WifiDisplayController: int getPortNumber(android.net.wifi.p2p.WifiP2pDevice)>($r19);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke r1.<java.net.Inet4Address: java.lang.String getHostAddress()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r3 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.display.WifiDisplayController: java.lang.String mRemoteDisplayInterface> = r3;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Listening for RTSP connection on ");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from Wifi display: ");

        $r28 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r29 = $r28.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceName>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", $r34);

        $r32 = new com.android.server.display.WifiDisplayController$14;

        specialinvoke $r32.<com.android.server.display.WifiDisplayController$14: void <init>(com.android.server.display.WifiDisplayController,android.net.wifi.p2p.WifiP2pDevice)>(r0, r2);

        $r36 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r35 = staticinvoke <android.media.RemoteDisplay: android.media.RemoteDisplay listen(java.lang.String,android.media.RemoteDisplay$Listener,android.os.Handler)>(r3, $r32, $r36);

        r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay> = $r35;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode>;

        if $z0 == 0 goto label15;

        b1 = 120;

     label14:
        $r37 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r38 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mRtspTimeout>;

        $i3 = b1 * 1000;

        $l4 = (long) $i3;

        virtualinvoke $r37.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r38, $l4);

        return;

     label15:
        b1 = 30;

        goto label14;
    }

    private void updateDesiredDevice(android.net.wifi.p2p.WifiP2pDevice)
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pDevice r1, $r3, $r4, $r6, $r10;
        java.lang.String r2, $r5, $r9;
        boolean $z0, $z1;
        android.hardware.display.WifiDisplay $r7, $r8, $r11;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: android.net.wifi.p2p.WifiP2pDevice;

        r2 = r1.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r5 = $r4.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        virtualinvoke $r6.<android.net.wifi.p2p.WifiP2pDevice: void update(android.net.wifi.p2p.WifiP2pDevice)>(r1);

        $r7 = r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay>;

        if $r7 == null goto label1;

        $r8 = r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay>;

        $r9 = virtualinvoke $r8.<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $r10 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r11 = staticinvoke <com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay createWifiDisplay(android.net.wifi.p2p.WifiP2pDevice)>($r10);

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void readvertiseDisplay(android.hardware.display.WifiDisplay)>($r11);

     label1:
        return;
    }

    private void updateScanState()
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Runnable $r1;
        android.os.Handler $r2;
        android.net.wifi.p2p.WifiP2pDevice $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested>;

        if $z0 == 0 goto label2;

        $z2 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z2 == 0 goto label2;

        $r6 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r6 != null goto label2;

        $z3 = r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress>;

        if $z3 != 0 goto label1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", "Starting Wifi display scan.");

        r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress> = 1;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleScanStarted()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void tryDiscoverPeers()>();

     label1:
        return;

     label2:
        $z1 = r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress>;

        if $z1 == 0 goto label1;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.display.WifiDisplayController: java.lang.Runnable mDiscoverPeers>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r3 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        if $r3 == null goto label3;

        $r5 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r4 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        if $r5 != $r4 goto label1;

     label3:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WifiDisplayController", "Stopping Wifi display scan.");

        r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress> = 0;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void stopPeerDiscovery()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void handleScanFinished()>();

        return;
    }

    private void updateSettings()
    {
        com.android.server.display.WifiDisplayController r0;
        boolean z0, z1, $z2;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        z0 = 1;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "wifi_display_on", 0);

        if $i0 == 0 goto label4;

        z1 = 1;

     label1:
        r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayOnSetting> = z1;

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "wifi_display_certification_on", 0);

        if $i1 == 0 goto label5;

     label2:
        r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode> = z0;

        r0.<com.android.server.display.WifiDisplayController: int mWifiDisplayWpsConfig> = 4;

        $z2 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayCertMode>;

        if $z2 == 0 goto label3;

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "wifi_display_wps_config", 4);

        r0.<com.android.server.display.WifiDisplayController: int mWifiDisplayWpsConfig> = $i2;

     label3:
        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateWfdEnableState()>();

        return;

     label4:
        z1 = 0;

        goto label1;

     label5:
        z0 = 0;

        goto label2;
    }

    private void updateWfdEnableState()
    {
        com.android.server.display.WifiDisplayController r0;
        android.net.wifi.p2p.WifiP2pWfdInfo r1, r2, $r3, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.server.display.WifiDisplayController$3 $r4;
        android.net.wifi.p2p.WifiP2pManager $r5, $r10;
        android.net.wifi.p2p.WifiP2pManager$Channel $r6, $r9;
        com.android.server.display.WifiDisplayController$2 $r8;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayOnSetting>;

        if $z0 == 0 goto label2;

        $z3 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiP2pEnabled>;

        if $z3 == 0 goto label2;

        $z4 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z4 != 0 goto label1;

        $z5 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling>;

        if $z5 != 0 goto label1;

        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling> = 1;

        $r7 = new android.net.wifi.p2p.WifiP2pWfdInfo;

        specialinvoke $r7.<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>()>();

        r2 = $r7;

        virtualinvoke r2.<android.net.wifi.p2p.WifiP2pWfdInfo: void setWfdEnabled(boolean)>(1);

        virtualinvoke r2.<android.net.wifi.p2p.WifiP2pWfdInfo: boolean setDeviceType(int)>(0);

        virtualinvoke r2.<android.net.wifi.p2p.WifiP2pWfdInfo: void setSessionAvailable(boolean)>(1);

        virtualinvoke r2.<android.net.wifi.p2p.WifiP2pWfdInfo: void setControlPort(int)>(7236);

        virtualinvoke r2.<android.net.wifi.p2p.WifiP2pWfdInfo: void setMaxThroughput(int)>(50);

        $r10 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r9 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r8 = new com.android.server.display.WifiDisplayController$2;

        specialinvoke $r8.<com.android.server.display.WifiDisplayController$2: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r10.<android.net.wifi.p2p.WifiP2pManager: void setWFDInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pWfdInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r9, r2, $r8);

     label1:
        return;

     label2:
        $z1 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        if $z1 != 0 goto label3;

        $z2 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling>;

        if $z2 == 0 goto label4;

     label3:
        $r3 = new android.net.wifi.p2p.WifiP2pWfdInfo;

        specialinvoke $r3.<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>()>();

        r1 = $r3;

        virtualinvoke r1.<android.net.wifi.p2p.WifiP2pWfdInfo: void setWfdEnabled(boolean)>(0);

        $r5 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager mWifiP2pManager>;

        $r6 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pManager$Channel mWifiP2pChannel>;

        $r4 = new com.android.server.display.WifiDisplayController$3;

        specialinvoke $r4.<com.android.server.display.WifiDisplayController$3: void <init>(com.android.server.display.WifiDisplayController)>(r0);

        virtualinvoke $r5.<android.net.wifi.p2p.WifiP2pManager: void setWFDInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pWfdInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)>($r6, r1, $r4);

     label4:
        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling> = 0;

        r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled> = 0;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void reportFeatureState()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

        return;
    }

    public void dump(java.io.PrintWriter)
    {
        com.android.server.display.WifiDisplayController r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        android.net.wifi.p2p.WifiP2pDevice r3, $r37, $r39, $r48, $r50, $r62;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r19, $r20, $r21, $r22, $r24, $r26, $r27, $r28, $r29, $r32, $r33, $r35, $r36, $r38, $r41, $r42, $r44, $r46, $r49, $r51, $r52, $r54, $r56, $r59, $r60, $r61, $r64, $r66, $r68, $r69, $r71, $r72, $r73, $r74, $r75, $r77, $r79, $r81, $r82, $r83, $r84, $r87, $r88, $r90, $r92, $r94, $r95, $r97, $r98, $r99, $r100, $r102, $r104, $r105, $r107, $r108, $r110, $r111;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String $r7, $r11, $r16, $r18, $r25, $r30, $r31, $r34, $r40, $r43, $r45, $r47, $r53, $r55, $r57, $r58, $r63, $r67, $r70, $r76, $r78, $r80, $r85, $r89, $r91, $r96, $r101, $r106, $r109, $r114;
        android.net.NetworkInfo $r23;
        int $i0, $i1, $i2, $i3, $i4;
        android.media.RemoteDisplay $r65;
        android.hardware.display.WifiDisplay $r86;
        android.view.Surface $r93;
        java.util.ArrayList $r103, $r113;
        java.lang.Object $r112;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: java.io.PrintWriter;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWifiDisplayOnSetting=");

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiDisplayOnSetting>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWifiP2pEnabled=");

        $z1 = r0.<com.android.server.display.WifiDisplayController: boolean mWifiP2pEnabled>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWfdEnabled=");

        $z2 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabled>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWfdEnabling=");

        $z3 = r0.<com.android.server.display.WifiDisplayController: boolean mWfdEnabling>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mNetworkInfo=");

        $r23 = r0.<com.android.server.display.WifiDisplayController: android.net.NetworkInfo mNetworkInfo>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mScanRequested=");

        $z4 = r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r30);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDiscoverPeersInProgress=");

        $z5 = r0.<com.android.server.display.WifiDisplayController: boolean mDiscoverPeersInProgress>;

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDesiredDevice=");

        $r37 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDesiredDevice>;

        $r34 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r37);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mConnectingDisplay=");

        $r39 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectingDevice>;

        $r45 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r39);

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDisconnectingDisplay=");

        $r48 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mDisconnectingDevice>;

        $r47 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r48);

        $r46 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r53 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r53);

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCancelingDisplay=");

        $r50 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mCancelingDevice>;

        $r57 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r50);

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r55);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mConnectedDevice=");

        $r62 = r0.<com.android.server.display.WifiDisplayController: android.net.wifi.p2p.WifiP2pDevice mConnectedDevice>;

        $r63 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>($r62);

        $r64 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r58 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mConnectionRetriesLeft=");

        $i0 = r0.<com.android.server.display.WifiDisplayController: int mConnectionRetriesLeft>;

        $r69 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r70);

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRemoteDisplay=");

        $r65 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        $r66 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r67);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRemoteDisplayInterface=");

        $r76 = r0.<com.android.server.display.WifiDisplayController: java.lang.String mRemoteDisplayInterface>;

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r78);

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRemoteDisplayConnected=");

        $z6 = r0.<com.android.server.display.WifiDisplayController: boolean mRemoteDisplayConnected>;

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r85 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r85);

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplay=");

        $r86 = r0.<com.android.server.display.WifiDisplayController: android.hardware.display.WifiDisplay mAdvertisedDisplay>;

        $r81 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r86);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r80);

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplaySurface=");

        $r93 = r0.<com.android.server.display.WifiDisplayController: android.view.Surface mAdvertisedDisplaySurface>;

        $r94 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r93);

        $r91 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r91);

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplayWidth=");

        $i1 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayWidth>;

        $r88 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r89);

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplayHeight=");

        $i3 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayHeight>;

        $r98 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r96 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r96);

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r95 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAdvertisedDisplayFlags=");

        $i2 = r0.<com.android.server.display.WifiDisplayController: int mAdvertisedDisplayFlags>;

        $r107 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r106 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r106);

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mAvailableWifiDisplayPeers: size=");

        $r103 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        $i4 = virtualinvoke $r103.<java.util.ArrayList: int size()>();

        $r102 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r101);

        $r113 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        r2 = virtualinvoke $r113.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z7 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label2;

        $r112 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.p2p.WifiP2pDevice) $r112;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r109 = staticinvoke <com.android.server.display.WifiDisplayController: java.lang.String describeWifiP2pDevice(android.net.wifi.p2p.WifiP2pDevice)>(r3);

        $r108 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r114 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r114);

        goto label1;

     label2:
        return;
    }

    public void requestConnect(java.lang.String)
    {
        com.android.server.display.WifiDisplayController r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        android.net.wifi.p2p.WifiP2pDevice r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: com.android.server.display.WifiDisplayController;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.display.WifiDisplayController: java.util.ArrayList mAvailableWifiDisplayPeers>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.wifi.p2p.WifiP2pDevice) $r5;

        $r6 = r3.<android.net.wifi.p2p.WifiP2pDevice: java.lang.String deviceAddress>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void connect(android.net.wifi.p2p.WifiP2pDevice)>(r3);

        goto label1;

     label2:
        return;
    }

    public void requestDisconnect()
    {
        com.android.server.display.WifiDisplayController r0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void disconnect()>();

        return;
    }

    public void requestPause()
    {
        com.android.server.display.WifiDisplayController r0;
        android.media.RemoteDisplay $r1, $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        virtualinvoke $r2.<android.media.RemoteDisplay: void pause()>();

     label1:
        return;
    }

    public void requestResume()
    {
        com.android.server.display.WifiDisplayController r0;
        android.media.RemoteDisplay $r1, $r2;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $r1 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.display.WifiDisplayController: android.media.RemoteDisplay mRemoteDisplay>;

        virtualinvoke $r2.<android.media.RemoteDisplay: void resume()>();

     label1:
        return;
    }

    public void requestStartScan()
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested> = 1;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

     label1:
        return;
    }

    public void requestStopScan()
    {
        com.android.server.display.WifiDisplayController r0;
        boolean $z0;

        r0 := @this: com.android.server.display.WifiDisplayController;

        $z0 = r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.display.WifiDisplayController: boolean mScanRequested> = 0;

        specialinvoke r0.<com.android.server.display.WifiDisplayController: void updateScanState()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.display.WifiDisplayController: java.lang.String TAG> = "WifiDisplayController";

        <com.android.server.display.WifiDisplayController: int RTSP_TIMEOUT_SECONDS_CERT_MODE> = 120;

        <com.android.server.display.WifiDisplayController: int RTSP_TIMEOUT_SECONDS> = 30;

        <com.android.server.display.WifiDisplayController: int MAX_THROUGHPUT> = 50;

        <com.android.server.display.WifiDisplayController: int DISCOVER_PEERS_INTERVAL_MILLIS> = 10000;

        <com.android.server.display.WifiDisplayController: int DEFAULT_CONTROL_PORT> = 7236;

        <com.android.server.display.WifiDisplayController: boolean DEBUG> = 0;

        <com.android.server.display.WifiDisplayController: int CONNECT_RETRY_DELAY_MILLIS> = 500;

        <com.android.server.display.WifiDisplayController: int CONNECT_MAX_RETRIES> = 3;

        <com.android.server.display.WifiDisplayController: int CONNECTION_TIMEOUT_SECONDS> = 30;

        return;
    }
}
