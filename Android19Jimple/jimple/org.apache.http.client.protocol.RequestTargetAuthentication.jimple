public class org.apache.http.client.protocol.RequestTargetAuthentication extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{
    private final org.apache.commons.logging.Log log;

    public void <init>()
    {
        org.apache.http.client.protocol.RequestTargetAuthentication r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.apache.http.client.protocol.RequestTargetAuthentication;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.client.protocol.RequestTargetAuthentication r0;
        org.apache.http.HttpRequest r1;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.auth.AuthState r3;
        org.apache.http.auth.AuthScheme r4;
        org.apache.http.auth.Credentials r5;
        org.apache.http.auth.AuthenticationException r6, $r12;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7;
        org.apache.http.auth.AuthScope $r8;
        org.apache.http.Header $r9;
        org.apache.commons.logging.Log $r10, $r14, $r15;
        java.lang.IllegalArgumentException $r11, $r13;
        java.lang.StringBuilder $r16, $r18, $r20;
        java.lang.String $r17, $r19;

        r0 := @this: org.apache.http.client.protocol.RequestTargetAuthentication;

        r1 := @parameter0: org.apache.http.HttpRequest;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r13;

     label1:
        if r2 != null goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP context may not be null");

        throw $r11;

     label2:
        $z0 = interfaceinvoke r1.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Authorization");

        if $z0 == 0 goto label4;

     label3:
        return;

     label4:
        $r7 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.target-scope");

        r3 = (org.apache.http.auth.AuthState) $r7;

        if r3 == null goto label3;

        r4 = virtualinvoke r3.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        if r4 == null goto label3;

        r5 = virtualinvoke r3.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if r5 != null goto label5;

        $r10 = r0.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log>;

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("User credentials not available");

        return;

     label5:
        $r8 = virtualinvoke r3.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>();

        if $r8 != null goto label6;

        $z1 = interfaceinvoke r4.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z1 != 0 goto label3;

     label6:
        $r9 = interfaceinvoke r4.<org.apache.http.auth.AuthScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>(r5, r1);

        interfaceinvoke r1.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r9);

     label7:
        return;

     label8:
        $r12 := @caughtexception;

        r6 = $r12;

        $r14 = r0.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r14.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();

        if $z2 == 0 goto label3;

        $r15 = r0.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication error: ");

        $r17 = virtualinvoke r6.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r19);

        return;

        catch org.apache.http.auth.AuthenticationException from label6 to label7 with label8;
    }
}
