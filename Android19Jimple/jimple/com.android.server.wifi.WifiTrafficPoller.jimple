final class com.android.server.wifi.WifiTrafficPoller extends java.lang.Object
{
    private static final int ADD_CLIENT;
    private static final int ENABLE_TRAFFIC_STATS_POLL;
    private static final int POLL_TRAFFIC_STATS_INTERVAL_MSECS;
    private static final int REMOVE_CLIENT;
    private static final int TRAFFIC_STATS_POLL;
    private final java.util.List mClients;
    private int mDataActivity;
    private boolean mEnableTrafficStatsPoll;
    private final java.lang.String mInterface;
    private android.net.NetworkInfo mNetworkInfo;
    private long mRxPkts;
    private java.util.concurrent.atomic.AtomicBoolean mScreenOn;
    private final com.android.server.wifi.WifiTrafficPoller$TrafficHandler mTrafficHandler;
    private int mTrafficStatsPollToken;
    private long mTxPkts;

    void <init>(android.content.Context, java.lang.String)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        android.content.Context r1;
        java.lang.String r2;
        android.content.IntentFilter r3, $r7;
        java.util.ArrayList $r4;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        com.android.server.wifi.WifiTrafficPoller$TrafficHandler $r6;
        com.android.server.wifi.WifiTrafficPoller$1 $r8;

        r0 := @this: com.android.server.wifi.WifiTrafficPoller;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wifi.WifiTrafficPoller: boolean mEnableTrafficStatsPoll> = 0;

        r0.<com.android.server.wifi.WifiTrafficPoller: int mTrafficStatsPollToken> = 0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wifi.WifiTrafficPoller: java.util.List mClients> = $r4;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<com.android.server.wifi.WifiTrafficPoller: java.util.concurrent.atomic.AtomicBoolean mScreenOn> = $r5;

        r0.<com.android.server.wifi.WifiTrafficPoller: java.lang.String mInterface> = r2;

        $r6 = new com.android.server.wifi.WifiTrafficPoller$TrafficHandler;

        specialinvoke $r6.<com.android.server.wifi.WifiTrafficPoller$TrafficHandler: void <init>(com.android.server.wifi.WifiTrafficPoller,com.android.server.wifi.WifiTrafficPoller$1)>(r0, null);

        r0.<com.android.server.wifi.WifiTrafficPoller: com.android.server.wifi.WifiTrafficPoller$TrafficHandler mTrafficHandler> = $r6;

        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>()>();

        r3 = $r7;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.STATE_CHANGE");

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        $r8 = new com.android.server.wifi.WifiTrafficPoller$1;

        specialinvoke $r8.<com.android.server.wifi.WifiTrafficPoller$1: void <init>(com.android.server.wifi.WifiTrafficPoller)>(r0);

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r8, r3);

        return;
    }

    static android.net.NetworkInfo access$102(com.android.server.wifi.WifiTrafficPoller, android.net.NetworkInfo)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        android.net.NetworkInfo r1;

        r0 := @parameter0: com.android.server.wifi.WifiTrafficPoller;

        r1 := @parameter1: android.net.NetworkInfo;

        r0.<com.android.server.wifi.WifiTrafficPoller: android.net.NetworkInfo mNetworkInfo> = r1;

        return r1;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$200(com.android.server.wifi.WifiTrafficPoller)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.server.wifi.WifiTrafficPoller;

        $r1 = r0.<com.android.server.wifi.WifiTrafficPoller: java.util.concurrent.atomic.AtomicBoolean mScreenOn>;

        return $r1;
    }

    static void access$300(com.android.server.wifi.WifiTrafficPoller)
    {
        com.android.server.wifi.WifiTrafficPoller r0;

        r0 := @parameter0: com.android.server.wifi.WifiTrafficPoller;

        specialinvoke r0.<com.android.server.wifi.WifiTrafficPoller: void evaluateTrafficStatsPolling()>();

        return;
    }

    static boolean access$400(com.android.server.wifi.WifiTrafficPoller)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiTrafficPoller;

        $z0 = r0.<com.android.server.wifi.WifiTrafficPoller: boolean mEnableTrafficStatsPoll>;

        return $z0;
    }

    static boolean access$402(com.android.server.wifi.WifiTrafficPoller, boolean)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiTrafficPoller;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiTrafficPoller: boolean mEnableTrafficStatsPoll> = z0;

        return z0;
    }

    static int access$500(com.android.server.wifi.WifiTrafficPoller)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiTrafficPoller;

        $i0 = r0.<com.android.server.wifi.WifiTrafficPoller: int mTrafficStatsPollToken>;

        return $i0;
    }

    static int access$508(com.android.server.wifi.WifiTrafficPoller)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        int i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiTrafficPoller;

        i0 = r0.<com.android.server.wifi.WifiTrafficPoller: int mTrafficStatsPollToken>;

        $i1 = i0 + 1;

        r0.<com.android.server.wifi.WifiTrafficPoller: int mTrafficStatsPollToken> = $i1;

        return i0;
    }

    static void access$600(com.android.server.wifi.WifiTrafficPoller)
    {
        com.android.server.wifi.WifiTrafficPoller r0;

        r0 := @parameter0: com.android.server.wifi.WifiTrafficPoller;

        specialinvoke r0.<com.android.server.wifi.WifiTrafficPoller: void notifyOnDataActivity()>();

        return;
    }

    static java.util.List access$700(com.android.server.wifi.WifiTrafficPoller)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.wifi.WifiTrafficPoller;

        $r1 = r0.<com.android.server.wifi.WifiTrafficPoller: java.util.List mClients>;

        return $r1;
    }

    private void evaluateTrafficStatsPolling()
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        android.os.Message r1;
        android.net.NetworkInfo $r2, $r3;
        android.net.NetworkInfo$DetailedState $r4, $r5;
        com.android.server.wifi.WifiTrafficPoller$TrafficHandler $r6, $r8;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiTrafficPoller;

        $r2 = r0.<com.android.server.wifi.WifiTrafficPoller: android.net.NetworkInfo mNetworkInfo>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.wifi.WifiTrafficPoller: android.net.NetworkInfo mNetworkInfo>;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r5 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        if $r4 != $r5 goto label3;

        $r7 = r0.<com.android.server.wifi.WifiTrafficPoller: java.util.concurrent.atomic.AtomicBoolean mScreenOn>;

        $z0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<com.android.server.wifi.WifiTrafficPoller: com.android.server.wifi.WifiTrafficPoller$TrafficHandler mTrafficHandler>;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>($r8, 1, 1, 0);

     label2:
        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        return;

     label3:
        $r6 = r0.<com.android.server.wifi.WifiTrafficPoller: com.android.server.wifi.WifiTrafficPoller$TrafficHandler mTrafficHandler>;

        r1 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>($r6, 1, 0, 0);

        goto label2;
    }

    private void notifyOnDataActivity()
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        long l0, l1, l2, l3, $l6, $l8, $l9, $l10;
        byte b4, b5, $b7, $b12, $b14;
        java.util.Iterator r1;
        android.os.Messenger r2;
        android.os.Message r3;
        java.lang.String $r5, $r6;
        int $i11, $i13;
        boolean $z0, $z1;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        java.util.List $r8;
        java.lang.Object $r9;
        android.os.RemoteException $r10;

        r0 := @this: com.android.server.wifi.WifiTrafficPoller;

        l0 = r0.<com.android.server.wifi.WifiTrafficPoller: long mTxPkts>;

        l1 = r0.<com.android.server.wifi.WifiTrafficPoller: long mRxPkts>;

        $r5 = r0.<com.android.server.wifi.WifiTrafficPoller: java.lang.String mInterface>;

        $l6 = staticinvoke <android.net.TrafficStats: long getTxPackets(java.lang.String)>($r5);

        r0.<com.android.server.wifi.WifiTrafficPoller: long mTxPkts> = $l6;

        $r6 = r0.<com.android.server.wifi.WifiTrafficPoller: java.lang.String mInterface>;

        $l8 = staticinvoke <android.net.TrafficStats: long getRxPackets(java.lang.String)>($r6);

        r0.<com.android.server.wifi.WifiTrafficPoller: long mRxPkts> = $l8;

        $b7 = l0 cmp 0L;

        if $b7 > 0 goto label1;

        $b14 = l1 cmp 0L;

        if $b14 <= 0 goto label8;

     label1:
        $l10 = r0.<com.android.server.wifi.WifiTrafficPoller: long mTxPkts>;

        l2 = $l10 - l0;

        $l9 = r0.<com.android.server.wifi.WifiTrafficPoller: long mRxPkts>;

        l3 = $l9 - l1;

        b4 = l2 cmp 0L;

        b5 = 0;

        if b4 <= 0 goto label2;

        b5 = 2;

     label2:
        $b12 = l3 cmp 0L;

        if $b12 <= 0 goto label3;

        b5 = b5 | 1;

     label3:
        $i11 = r0.<com.android.server.wifi.WifiTrafficPoller: int mDataActivity>;

        if b5 == $i11 goto label8;

        $r7 = r0.<com.android.server.wifi.WifiTrafficPoller: java.util.concurrent.atomic.AtomicBoolean mScreenOn>;

        $z0 = virtualinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z0 == 0 goto label8;

        r0.<com.android.server.wifi.WifiTrafficPoller: int mDataActivity> = b5;

        $r8 = r0.<com.android.server.wifi.WifiTrafficPoller: java.util.List mClients>;

        r1 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.os.Messenger) $r9;

        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r3.<android.os.Message: int what> = 1;

        $i13 = r0.<com.android.server.wifi.WifiTrafficPoller: int mDataActivity>;

        r3.<android.os.Message: int arg1> = $i13;

     label5:
        virtualinvoke r2.<android.os.Messenger: void send(android.os.Message)>(r3);

     label6:
        goto label4;

     label7:
        $r10 := @caughtexception;

        goto label4;

     label8:
        return;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    void addClient(android.os.Messenger)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        android.os.Messenger r1;
        com.android.server.wifi.WifiTrafficPoller$TrafficHandler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.wifi.WifiTrafficPoller;

        r1 := @parameter0: android.os.Messenger;

        $r2 = r0.<com.android.server.wifi.WifiTrafficPoller: com.android.server.wifi.WifiTrafficPoller$TrafficHandler mTrafficHandler>;

        $r3 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r2, 3, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r19, $r20, $r21, $r22;
        boolean $z0;
        java.lang.String $r7, $r11, $r16, $r18, $r23;
        int $i0, $i3;
        long $l1, $l2;

        r0 := @this: com.android.server.wifi.WifiTrafficPoller;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mEnableTrafficStatsPoll ");

        $z0 = r0.<com.android.server.wifi.WifiTrafficPoller: boolean mEnableTrafficStatsPoll>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTrafficStatsPollToken ");

        $i0 = r0.<com.android.server.wifi.WifiTrafficPoller: int mTrafficStatsPollToken>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mTxPkts ");

        $l1 = r0.<com.android.server.wifi.WifiTrafficPoller: long mTxPkts>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mRxPkts ");

        $l2 = r0.<com.android.server.wifi.WifiTrafficPoller: long mRxPkts>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDataActivity ");

        $i3 = r0.<com.android.server.wifi.WifiTrafficPoller: int mDataActivity>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        return;
    }

    void removeClient(android.os.Messenger)
    {
        com.android.server.wifi.WifiTrafficPoller r0;
        android.os.Messenger r1;
        com.android.server.wifi.WifiTrafficPoller$TrafficHandler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.wifi.WifiTrafficPoller;

        r1 := @parameter0: android.os.Messenger;

        $r2 = r0.<com.android.server.wifi.WifiTrafficPoller: com.android.server.wifi.WifiTrafficPoller$TrafficHandler mTrafficHandler>;

        $r3 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>($r2, 4, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wifi.WifiTrafficPoller: int TRAFFIC_STATS_POLL> = 2;

        <com.android.server.wifi.WifiTrafficPoller: int REMOVE_CLIENT> = 4;

        <com.android.server.wifi.WifiTrafficPoller: int POLL_TRAFFIC_STATS_INTERVAL_MSECS> = 1000;

        <com.android.server.wifi.WifiTrafficPoller: int ENABLE_TRAFFIC_STATS_POLL> = 1;

        <com.android.server.wifi.WifiTrafficPoller: int ADD_CLIENT> = 3;

        return;
    }
}
