public class org.apache.http.impl.client.DefaultHttpRequestRetryHandler extends java.lang.Object implements org.apache.http.client.HttpRequestRetryHandler
{
    private final boolean requestSentRetryEnabled;
    private final int retryCount;

    public void <init>()
    {
        org.apache.http.impl.client.DefaultHttpRequestRetryHandler r0;

        r0 := @this: org.apache.http.impl.client.DefaultHttpRequestRetryHandler;

        specialinvoke r0.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>(int,boolean)>(3, 0);

        return;
    }

    public void <init>(int, boolean)
    {
        org.apache.http.impl.client.DefaultHttpRequestRetryHandler r0;
        int i0;
        boolean z0;

        r0 := @this: org.apache.http.impl.client.DefaultHttpRequestRetryHandler;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: int retryCount> = i0;

        r0.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: boolean requestSentRetryEnabled> = z0;

        return;
    }

    public int getRetryCount()
    {
        org.apache.http.impl.client.DefaultHttpRequestRetryHandler r0;
        int $i0;

        r0 := @this: org.apache.http.impl.client.DefaultHttpRequestRetryHandler;

        $i0 = r0.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: int retryCount>;

        return $i0;
    }

    public boolean isRequestSentRetryEnabled()
    {
        org.apache.http.impl.client.DefaultHttpRequestRetryHandler r0;
        boolean $z0;

        r0 := @this: org.apache.http.impl.client.DefaultHttpRequestRetryHandler;

        $z0 = r0.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: boolean requestSentRetryEnabled>;

        return $z0;
    }

    public boolean retryRequest(java.io.IOException, int, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.client.DefaultHttpRequestRetryHandler r0;
        java.io.IOException r1;
        int i0, $i1;
        org.apache.http.protocol.HttpContext r2;
        java.lang.Boolean r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: org.apache.http.impl.client.DefaultHttpRequestRetryHandler;

        r1 := @parameter0: java.io.IOException;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Exception parameter may not be null");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP context may not be null");

        throw $r5;

     label2:
        $i1 = r0.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: int retryCount>;

        if i0 <= $i1 goto label4;

     label3:
        return 0;

     label4:
        $z1 = r1 instanceof org.apache.http.NoHttpResponseException;

        if $z1 == 0 goto label5;

        return 1;

     label5:
        $z2 = r1 instanceof java.io.InterruptedIOException;

        if $z2 != 0 goto label3;

        $z3 = r1 instanceof java.net.UnknownHostException;

        if $z3 != 0 goto label3;

        $z4 = r1 instanceof javax.net.ssl.SSLHandshakeException;

        if $z4 != 0 goto label3;

        $r4 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.request_sent");

        r3 = (java.lang.Boolean) $r4;

        if r3 == null goto label8;

        $z6 = virtualinvoke r3.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label8;

        z0 = 1;

     label6:
        if z0 == 0 goto label7;

        $z5 = r0.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: boolean requestSentRetryEnabled>;

        if $z5 == 0 goto label3;

     label7:
        return 1;

     label8:
        z0 = 0;

        goto label6;
    }
}
