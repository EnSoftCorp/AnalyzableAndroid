abstract class com.android.server.ResettableTimeout extends java.lang.Object
{
    private android.os.ConditionVariable mLock;
    private volatile long mOffAt;
    private volatile boolean mOffCalled;
    private java.lang.Thread mThread;

    void <init>()
    {
        com.android.server.ResettableTimeout r0;
        android.os.ConditionVariable $r1;

        r0 := @this: com.android.server.ResettableTimeout;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.ConditionVariable;

        specialinvoke $r1.<android.os.ConditionVariable: void <init>()>();

        r0.<com.android.server.ResettableTimeout: android.os.ConditionVariable mLock> = $r1;

        return;
    }

    static android.os.ConditionVariable access$100(com.android.server.ResettableTimeout)
    {
        com.android.server.ResettableTimeout r0;
        android.os.ConditionVariable $r1;

        r0 := @parameter0: com.android.server.ResettableTimeout;

        $r1 = r0.<com.android.server.ResettableTimeout: android.os.ConditionVariable mLock>;

        return $r1;
    }

    static long access$200(com.android.server.ResettableTimeout)
    {
        com.android.server.ResettableTimeout r0;
        long $l0;

        r0 := @parameter0: com.android.server.ResettableTimeout;

        $l0 = r0.<com.android.server.ResettableTimeout: long mOffAt>;

        return $l0;
    }

    static boolean access$302(com.android.server.ResettableTimeout, boolean)
    {
        com.android.server.ResettableTimeout r0;
        boolean z0;

        r0 := @parameter0: com.android.server.ResettableTimeout;

        z0 := @parameter1: boolean;

        r0.<com.android.server.ResettableTimeout: boolean mOffCalled> = z0;

        return z0;
    }

    static java.lang.Thread access$402(com.android.server.ResettableTimeout, java.lang.Thread)
    {
        com.android.server.ResettableTimeout r0;
        java.lang.Thread r1;

        r0 := @parameter0: com.android.server.ResettableTimeout;

        r1 := @parameter1: java.lang.Thread;

        r0.<com.android.server.ResettableTimeout: java.lang.Thread mThread> = r1;

        return r1;
    }

    public void cancel()
    {
        com.android.server.ResettableTimeout r0;
        java.lang.Throwable r1, $r4;
        java.lang.Thread $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.ResettableTimeout;

        entermonitor r0;

     label1:
        r0.<com.android.server.ResettableTimeout: long mOffAt> = 0L;

        $r2 = r0.<com.android.server.ResettableTimeout: java.lang.Thread mThread>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.ResettableTimeout: java.lang.Thread mThread>;

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

        r0.<com.android.server.ResettableTimeout: java.lang.Thread mThread> = null;

     label2:
        $z0 = r0.<com.android.server.ResettableTimeout: boolean mOffCalled>;

        if $z0 != 0 goto label3;

        r0.<com.android.server.ResettableTimeout: boolean mOffCalled> = 1;

        virtualinvoke r0.<com.android.server.ResettableTimeout: void off()>();

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        r1 = $r4;

     label6:
        exitmonitor r0;

     label7:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void go(long)
    {
        com.android.server.ResettableTimeout r0;
        long l0, $l1, $l2;
        java.lang.Throwable r1, $r8;
        boolean z0;
        java.lang.Thread $r2, $r3, $r6;
        android.os.ConditionVariable $r4, $r7;
        com.android.server.ResettableTimeout$T $r5;

        r0 := @this: com.android.server.ResettableTimeout;

        l0 := @parameter0: long;

        entermonitor r0;

     label01:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = l0 + $l1;

        r0.<com.android.server.ResettableTimeout: long mOffAt> = $l2;

        $r2 = r0.<com.android.server.ResettableTimeout: java.lang.Thread mThread>;

        if $r2 != null goto label06;

     label02:
        z0 = 0;

     label03:
        $r4 = r0.<com.android.server.ResettableTimeout: android.os.ConditionVariable mLock>;

        virtualinvoke $r4.<android.os.ConditionVariable: void close()>();

        $r5 = new com.android.server.ResettableTimeout$T;

        specialinvoke $r5.<com.android.server.ResettableTimeout$T: void <init>(com.android.server.ResettableTimeout,com.android.server.ResettableTimeout$1)>(r0, null);

        r0.<com.android.server.ResettableTimeout: java.lang.Thread mThread> = $r5;

        $r6 = r0.<com.android.server.ResettableTimeout: java.lang.Thread mThread>;

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        $r7 = r0.<com.android.server.ResettableTimeout: android.os.ConditionVariable mLock>;

        virtualinvoke $r7.<android.os.ConditionVariable: void block()>();

        r0.<com.android.server.ResettableTimeout: boolean mOffCalled> = 0;

     label04:
        virtualinvoke r0.<com.android.server.ResettableTimeout: void on(boolean)>(z0);

        exitmonitor r0;

     label05:
        return;

     label06:
        z0 = 1;

     label07:
        $r3 = r0.<com.android.server.ResettableTimeout: java.lang.Thread mThread>;

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

     label08:
        goto label04;

     label09:
        $r8 := @caughtexception;

        r1 = $r8;

     label10:
        exitmonitor r0;

     label11:
        throw r1;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public abstract void off();

    public abstract void on(boolean);
}
