public class com.android.org.chromium.ui.base.ViewAndroid extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private int mKeepScreenOnCount;
    private android.view.View mKeepScreenOnView;
    private long mNativeViewAndroid;
    private final com.android.org.chromium.ui.base.ViewAndroidDelegate mViewAndroidDelegate;
    private final com.android.org.chromium.ui.base.WindowAndroid mWindowAndroid;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "com/android/org/chromium/ui/base/ViewAndroid";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.org.chromium.ui.base.ViewAndroid: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    public void <init>(com.android.org.chromium.ui.base.WindowAndroid, com.android.org.chromium.ui.base.ViewAndroidDelegate)
    {
        com.android.org.chromium.ui.base.ViewAndroid r0;
        com.android.org.chromium.ui.base.WindowAndroid r1, $r3;
        com.android.org.chromium.ui.base.ViewAndroidDelegate r2;
        long $l0, $l1;

        r0 := @this: com.android.org.chromium.ui.base.ViewAndroid;

        r1 := @parameter0: com.android.org.chromium.ui.base.WindowAndroid;

        r2 := @parameter1: com.android.org.chromium.ui.base.ViewAndroidDelegate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.ui.base.ViewAndroid: long mNativeViewAndroid> = 0L;

        r0.<com.android.org.chromium.ui.base.ViewAndroid: com.android.org.chromium.ui.base.WindowAndroid mWindowAndroid> = r1;

        r0.<com.android.org.chromium.ui.base.ViewAndroid: com.android.org.chromium.ui.base.ViewAndroidDelegate mViewAndroidDelegate> = r2;

        $r3 = r0.<com.android.org.chromium.ui.base.ViewAndroid: com.android.org.chromium.ui.base.WindowAndroid mWindowAndroid>;

        $l0 = virtualinvoke $r3.<com.android.org.chromium.ui.base.WindowAndroid: long getNativePointer()>();

        $l1 = specialinvoke r0.<com.android.org.chromium.ui.base.ViewAndroid: long nativeInit(long)>($l0);

        r0.<com.android.org.chromium.ui.base.ViewAndroid: long mNativeViewAndroid> = $l1;

        return;
    }

    private native void nativeDestroy(long);

    private native long nativeInit(long);

    public void decrementKeepScreenOnCount()
    {
        com.android.org.chromium.ui.base.ViewAndroid r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        com.android.org.chromium.ui.base.ViewAndroidDelegate $r2;
        java.lang.AssertionError $r3;

        r0 := @this: com.android.org.chromium.ui.base.ViewAndroid;

        $z0 = <com.android.org.chromium.ui.base.ViewAndroid: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = r0.<com.android.org.chromium.ui.base.ViewAndroid: int mKeepScreenOnCount>;

        if $i3 > 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $i0 = r0.<com.android.org.chromium.ui.base.ViewAndroid: int mKeepScreenOnCount>;

        $i1 = -1 + $i0;

        r0.<com.android.org.chromium.ui.base.ViewAndroid: int mKeepScreenOnCount> = $i1;

        $i2 = r0.<com.android.org.chromium.ui.base.ViewAndroid: int mKeepScreenOnCount>;

        if $i2 != 0 goto label2;

        $r2 = r0.<com.android.org.chromium.ui.base.ViewAndroid: com.android.org.chromium.ui.base.ViewAndroidDelegate mViewAndroidDelegate>;

        $r1 = r0.<com.android.org.chromium.ui.base.ViewAndroid: android.view.View mKeepScreenOnView>;

        interfaceinvoke $r2.<com.android.org.chromium.ui.base.ViewAndroidDelegate: void releaseAnchorView(android.view.View)>($r1);

        r0.<com.android.org.chromium.ui.base.ViewAndroid: android.view.View mKeepScreenOnView> = null;

     label2:
        return;
    }

    public void destroy()
    {
        com.android.org.chromium.ui.base.ViewAndroid r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.ui.base.ViewAndroid;

        $l0 = r0.<com.android.org.chromium.ui.base.ViewAndroid: long mNativeViewAndroid>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.org.chromium.ui.base.ViewAndroid: long mNativeViewAndroid>;

        specialinvoke r0.<com.android.org.chromium.ui.base.ViewAndroid: void nativeDestroy(long)>($l2);

        r0.<com.android.org.chromium.ui.base.ViewAndroid: long mNativeViewAndroid> = 0L;

     label1:
        return;
    }

    public long getNativePointer()
    {
        com.android.org.chromium.ui.base.ViewAndroid r0;
        long $l0;

        r0 := @this: com.android.org.chromium.ui.base.ViewAndroid;

        $l0 = r0.<com.android.org.chromium.ui.base.ViewAndroid: long mNativeViewAndroid>;

        return $l0;
    }

    public void incrementKeepScreenOnCount()
    {
        com.android.org.chromium.ui.base.ViewAndroid r0;
        int $i0, $i1, $i2;
        com.android.org.chromium.ui.base.ViewAndroidDelegate $r1;
        android.view.View $r2, $r3;

        r0 := @this: com.android.org.chromium.ui.base.ViewAndroid;

        $i0 = r0.<com.android.org.chromium.ui.base.ViewAndroid: int mKeepScreenOnCount>;

        $i1 = 1 + $i0;

        r0.<com.android.org.chromium.ui.base.ViewAndroid: int mKeepScreenOnCount> = $i1;

        $i2 = r0.<com.android.org.chromium.ui.base.ViewAndroid: int mKeepScreenOnCount>;

        if $i2 != 1 goto label1;

        $r1 = r0.<com.android.org.chromium.ui.base.ViewAndroid: com.android.org.chromium.ui.base.ViewAndroidDelegate mViewAndroidDelegate>;

        $r2 = interfaceinvoke $r1.<com.android.org.chromium.ui.base.ViewAndroidDelegate: android.view.View acquireAnchorView()>();

        r0.<com.android.org.chromium.ui.base.ViewAndroid: android.view.View mKeepScreenOnView> = $r2;

        $r3 = r0.<com.android.org.chromium.ui.base.ViewAndroid: android.view.View mKeepScreenOnView>;

        virtualinvoke $r3.<android.view.View: void setKeepScreenOn(boolean)>(1);

     label1:
        return;
    }
}
