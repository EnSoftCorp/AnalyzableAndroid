public class org.apache.xalan.templates.ElemWithParam extends org.apache.xalan.templates.ElemTemplateElement
{
    static final long serialVersionUID;
    int m_index;
    private org.apache.xml.utils.QName m_qname;
    int m_qnameID;
    private org.apache.xpath.XPath m_selectPattern;

    public void <init>()
    {
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern> = null;

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName m_qname> = null;

        return;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xalan.templates.ElemTemplateElement r1, $r4;
        java.lang.Object[] r2;
        org.apache.xpath.XPath $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r3 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if $r3 == null goto label1;

        r2 = newarray (java.lang.Object)[1];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xsl:");

        $r7 = virtualinvoke r0.<org.apache.xalan.templates.ElemWithParam: java.lang.String getNodeName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r2[0] = $r9;

        virtualinvoke r0.<org.apache.xalan.templates.ElemWithParam: void error(java.lang.String,java.lang.Object[])>("ER_CANT_HAVE_CONTENT_AND_SELECT", r2);

        return null;

     label1:
        $r4 = specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        return $r4;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xalan.templates.XSLTVisitor r1;
        boolean z0;
        org.apache.xpath.XPath $r2, $r3, $r5;
        org.apache.xpath.Expression $r4;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        $r4 = virtualinvoke $r3.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $r5 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        virtualinvoke $r4.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r5, r1);

     label1:
        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, z0);

        return;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.util.Vector r2;
        org.apache.xpath.XPath r3, $r4, $r8, $r9;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r5, $r7, $r10;
        org.apache.xml.utils.QName $r6;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        $r4 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if $r4 != null goto label1;

        $z0 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: boolean getOptimizer()>();

        if $z0 == 0 goto label1;

        r3 = staticinvoke <org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath rewriteChildToExpression(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        if r3 == null goto label1;

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern> = r3;

     label1:
        $r5 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $r6 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName m_qname>;

        $i0 = virtualinvoke $r5.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getQNameID(org.apache.xml.utils.QName)>($r6);

        r0.<org.apache.xalan.templates.ElemWithParam: int m_qnameID> = $i0;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r7 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        r2 = virtualinvoke $r7.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r8 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if $r8 == null goto label2;

        $r9 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        $r10 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i1 = virtualinvoke $r10.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r9.<org.apache.xpath.XPath: void fixupVariables(java.util.Vector,int)>(r2, $i1);

     label2:
        return;
    }

    public org.apache.xml.utils.QName getName()
    {
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xml.utils.QName $r1;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        $r1 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName m_qname>;

        return $r1;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        return "with-param";
    }

    public org.apache.xpath.XPath getSelect()
    {
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xpath.XPath $r1;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        $r1 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        return $r1;
    }

    public org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        int i0, $i1;
        org.apache.xpath.XPathContext r2;
        java.lang.Throwable r3, $r9;
        org.apache.xpath.objects.XObject r4;
        org.apache.xpath.XPath $r5, $r8;
        org.apache.xalan.templates.ElemTemplateElement $r6;
        org.apache.xpath.objects.XRTreeFrag $r7;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        virtualinvoke r2.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

     label1:
        $r5 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        if $r5 == null goto label3;

        $r8 = r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern>;

        r4 = virtualinvoke $r8.<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r2, i0, r0);

        virtualinvoke r4.<org.apache.xpath.objects.XObject: void allowDetachToRelease(boolean)>(0);

     label2:
        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        return r4;

     label3:
        $r6 = virtualinvoke r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        if $r6 != null goto label5;

        r4 = <org.apache.xpath.objects.XString: org.apache.xpath.objects.XString EMPTYSTRING>;

     label4:
        goto label2;

     label5:
        $r7 = new org.apache.xpath.objects.XRTreeFrag;

        $i1 = virtualinvoke r1.<org.apache.xalan.transformer.TransformerImpl: int transformToRTF(org.apache.xalan.templates.ElemTemplateElement)>(r0);

        specialinvoke $r7.<org.apache.xpath.objects.XRTreeFrag: void <init>(int,org.apache.xpath.XPathContext,org.apache.xpath.ExpressionNode)>($i1, r2, r0);

        r4 = $r7;

     label6:
        goto label2;

     label7:
        $r9 := @caughtexception;

        r3 = $r9;

        virtualinvoke r2.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemWithParam r0;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        return 2;
    }

    public void setName(org.apache.xml.utils.QName)
    {
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xml.utils.QName r1;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xml.utils.QName;

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName m_qname> = r1;

        return;
    }

    public void setParentElem(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xalan.templates.ElemTemplateElement r1;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)>(r1);

        r1.<org.apache.xalan.templates.ElemTemplateElement: boolean m_hasVariableDecl> = 1;

        return;
    }

    public void setSelect(org.apache.xpath.XPath)
    {
        org.apache.xalan.templates.ElemWithParam r0;
        org.apache.xpath.XPath r1;

        r0 := @this: org.apache.xalan.templates.ElemWithParam;

        r1 := @parameter0: org.apache.xpath.XPath;

        r0.<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath m_selectPattern> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.templates.ElemWithParam: long serialVersionUID> = -1070355175864326257L;

        return;
    }
}
