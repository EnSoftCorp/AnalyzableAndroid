final class com.android.server.print.RemotePrintService extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private boolean mBinding;
    private final com.android.server.print.RemotePrintService$PrintServiceCallbacks mCallbacks;
    private final android.content.ComponentName mComponentName;
    private final android.content.Context mContext;
    private boolean mDestroyed;
    private java.util.List mDiscoveryPriorityList;
    private final android.os.Handler mHandler;
    private boolean mHasActivePrintJobs;
    private boolean mHasPrinterDiscoverySession;
    private final android.content.Intent mIntent;
    private final java.util.List mPendingCommands;
    private android.printservice.IPrintService mPrintService;
    private final com.android.server.print.RemotePrintService$RemotePrintServiceClient mPrintServiceClient;
    private final android.content.ServiceConnection mServiceConnection;
    private boolean mServiceDied;
    private final com.android.server.print.RemotePrintSpooler mSpooler;
    private java.util.List mTrackedPrinterList;
    private final int mUserId;

    public void <init>(android.content.Context, android.content.ComponentName, int, com.android.server.print.RemotePrintSpooler, com.android.server.print.RemotePrintService$PrintServiceCallbacks)
    {
        com.android.server.print.RemotePrintService r0;
        android.content.Context r1;
        android.content.ComponentName r2, $r8;
        int i0;
        com.android.server.print.RemotePrintSpooler r3;
        com.android.server.print.RemotePrintService$PrintServiceCallbacks r4;
        java.util.ArrayList $r5;
        com.android.server.print.RemotePrintService$RemoteServiceConneciton $r6;
        android.content.Intent $r7, $r9;
        com.android.server.print.RemotePrintService$MyHandler $r10;
        android.os.Looper $r11;
        com.android.server.print.RemotePrintService$RemotePrintServiceClient $r12;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ComponentName;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.server.print.RemotePrintSpooler;

        r4 := @parameter4: com.android.server.print.RemotePrintService$PrintServiceCallbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands> = $r5;

        $r6 = new com.android.server.print.RemotePrintService$RemoteServiceConneciton;

        specialinvoke $r6.<com.android.server.print.RemotePrintService$RemoteServiceConneciton: void <init>(com.android.server.print.RemotePrintService,com.android.server.print.RemotePrintService$1)>(r0, null);

        r0.<com.android.server.print.RemotePrintService: android.content.ServiceConnection mServiceConnection> = $r6;

        r0.<com.android.server.print.RemotePrintService: android.content.Context mContext> = r1;

        r0.<com.android.server.print.RemotePrintService: com.android.server.print.RemotePrintService$PrintServiceCallbacks mCallbacks> = r4;

        r0.<com.android.server.print.RemotePrintService: android.content.ComponentName mComponentName> = r2;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>()>();

        $r8 = r0.<com.android.server.print.RemotePrintService: android.content.ComponentName mComponentName>;

        $r9 = virtualinvoke $r7.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r8);

        r0.<com.android.server.print.RemotePrintService: android.content.Intent mIntent> = $r9;

        r0.<com.android.server.print.RemotePrintService: int mUserId> = i0;

        r0.<com.android.server.print.RemotePrintService: com.android.server.print.RemotePrintSpooler mSpooler> = r3;

        $r10 = new com.android.server.print.RemotePrintService$MyHandler;

        $r11 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r10.<com.android.server.print.RemotePrintService$MyHandler: void <init>(com.android.server.print.RemotePrintService,android.os.Looper)>(r0, $r11);

        r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler> = $r10;

        $r12 = new com.android.server.print.RemotePrintService$RemotePrintServiceClient;

        specialinvoke $r12.<com.android.server.print.RemotePrintService$RemotePrintServiceClient: void <init>(com.android.server.print.RemotePrintService)>(r0);

        r0.<com.android.server.print.RemotePrintService: com.android.server.print.RemotePrintService$RemotePrintServiceClient mPrintServiceClient> = $r12;

        return;
    }

    static void access$100(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleOnAllPrintJobsHandled()>();

        return;
    }

    static void access$1000(com.android.server.print.RemotePrintService, android.print.PrinterId)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrinterId r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        r1 := @parameter1: android.print.PrinterId;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleStopPrinterStateTracking(android.print.PrinterId)>(r1);

        return;
    }

    static boolean access$1100(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $z0 = r0.<com.android.server.print.RemotePrintService: boolean mDestroyed>;

        return $z0;
    }

    static boolean access$1200(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $z0 = r0.<com.android.server.print.RemotePrintService: boolean mBinding>;

        return $z0;
    }

    static boolean access$1202(com.android.server.print.RemotePrintService, boolean)
    {
        com.android.server.print.RemotePrintService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.print.RemotePrintService: boolean mBinding> = z0;

        return z0;
    }

    static android.content.ServiceConnection access$1300(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        android.content.ServiceConnection $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.content.ServiceConnection mServiceConnection>;

        return $r1;
    }

    static android.content.Context access$1400(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.content.Context mContext>;

        return $r1;
    }

    static android.printservice.IPrintService access$1500(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        android.printservice.IPrintService $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        return $r1;
    }

    static android.printservice.IPrintService access$1502(com.android.server.print.RemotePrintService, android.printservice.IPrintService)
    {
        com.android.server.print.RemotePrintService r0;
        android.printservice.IPrintService r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        r1 := @parameter1: android.printservice.IPrintService;

        r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService> = r1;

        return r1;
    }

    static void access$1600(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleBinderDied()>();

        return;
    }

    static com.android.server.print.RemotePrintService$RemotePrintServiceClient access$1700(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        com.android.server.print.RemotePrintService$RemotePrintServiceClient $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: com.android.server.print.RemotePrintService$RemotePrintServiceClient mPrintServiceClient>;

        return $r1;
    }

    static boolean access$1800(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $z0 = r0.<com.android.server.print.RemotePrintService: boolean mServiceDied>;

        return $z0;
    }

    static boolean access$1802(com.android.server.print.RemotePrintService, boolean)
    {
        com.android.server.print.RemotePrintService r0;
        boolean z0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        z0 := @parameter1: boolean;

        r0.<com.android.server.print.RemotePrintService: boolean mServiceDied> = z0;

        return z0;
    }

    static boolean access$1900(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $z0 = r0.<com.android.server.print.RemotePrintService: boolean mHasPrinterDiscoverySession>;

        return $z0;
    }

    static void access$200(com.android.server.print.RemotePrintService, android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrintJobInfo r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        r1 := @parameter1: android.print.PrintJobInfo;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleRequestCancelPrintJob(android.print.PrintJobInfo)>(r1);

        return;
    }

    static java.util.List access$2000(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: java.util.List mDiscoveryPriorityList>;

        return $r1;
    }

    static java.util.List access$2100(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        return $r1;
    }

    static java.util.List access$2200(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        return $r1;
    }

    static boolean access$2300(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $z0 = r0.<com.android.server.print.RemotePrintService: boolean mHasActivePrintJobs>;

        return $z0;
    }

    static void access$2400(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureUnbound()>();

        return;
    }

    static void access$2500(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleDestroy()>();

        return;
    }

    static android.content.ComponentName access$2600(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        android.content.ComponentName $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.content.ComponentName mComponentName>;

        return $r1;
    }

    static com.android.server.print.RemotePrintSpooler access$2700(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        com.android.server.print.RemotePrintSpooler $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: com.android.server.print.RemotePrintSpooler mSpooler>;

        return $r1;
    }

    static com.android.server.print.RemotePrintService$PrintServiceCallbacks access$2800(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;
        com.android.server.print.RemotePrintService$PrintServiceCallbacks $r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: com.android.server.print.RemotePrintService$PrintServiceCallbacks mCallbacks>;

        return $r1;
    }

    static void access$300(com.android.server.print.RemotePrintService, android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrintJobInfo r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        r1 := @parameter1: android.print.PrintJobInfo;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleOnPrintJobQueued(android.print.PrintJobInfo)>(r1);

        return;
    }

    static void access$400(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleCreatePrinterDiscoverySession()>();

        return;
    }

    static void access$500(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleDestroyPrinterDiscoverySession()>();

        return;
    }

    static void access$600(com.android.server.print.RemotePrintService, java.util.List)
    {
        com.android.server.print.RemotePrintService r0;
        java.util.List r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleStartPrinterDiscovery(java.util.List)>(r1);

        return;
    }

    static void access$700(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.RemotePrintService r0;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleStopPrinterDiscovery()>();

        return;
    }

    static void access$800(com.android.server.print.RemotePrintService, java.util.List)
    {
        com.android.server.print.RemotePrintService r0;
        java.util.List r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        r1 := @parameter1: java.util.List;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleValidatePrinters(java.util.List)>(r1);

        return;
    }

    static void access$900(com.android.server.print.RemotePrintService, android.print.PrinterId)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrinterId r1;

        r0 := @parameter0: com.android.server.print.RemotePrintService;

        r1 := @parameter1: android.print.PrinterId;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleStartPrinterStateTracking(android.print.PrinterId)>(r1);

        return;
    }

    private void ensureBound()
    {
        com.android.server.print.RemotePrintService r0;
        boolean $z0, $z1;
        android.os.UserHandle $r1;
        int $i0;
        android.content.Context $r2;
        android.content.Intent $r3;
        android.content.ServiceConnection $r4;

        r0 := @this: com.android.server.print.RemotePrintService;

        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.server.print.RemotePrintService: boolean mBinding>;

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        r0.<com.android.server.print.RemotePrintService: boolean mBinding> = 1;

        $r2 = r0.<com.android.server.print.RemotePrintService: android.content.Context mContext>;

        $r3 = r0.<com.android.server.print.RemotePrintService: android.content.Intent mIntent>;

        $r4 = r0.<com.android.server.print.RemotePrintService: android.content.ServiceConnection mServiceConnection>;

        $r1 = new android.os.UserHandle;

        $i0 = r0.<com.android.server.print.RemotePrintService: int mUserId>;

        specialinvoke $r1.<android.os.UserHandle: void <init>(int)>($i0);

        virtualinvoke $r2.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>($r3, $r4, 1, $r1);

        return;
    }

    private void ensureUnbound()
    {
        com.android.server.print.RemotePrintService r0;
        boolean $z0, $z1, $z3;
        java.util.List $r2;
        android.printservice.IPrintService $r3, $r4;
        android.os.IBinder $r5;
        android.content.ServiceConnection $r6;
        android.content.Context $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.print.RemotePrintService;

        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label2;

        $z3 = r0.<com.android.server.print.RemotePrintService: boolean mBinding>;

        if $z3 != 0 goto label2;

     label1:
        return;

     label2:
        r0.<com.android.server.print.RemotePrintService: boolean mBinding> = 0;

        $r2 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        r0.<com.android.server.print.RemotePrintService: boolean mHasActivePrintJobs> = 0;

        r0.<com.android.server.print.RemotePrintService: boolean mHasPrinterDiscoverySession> = 0;

        r0.<com.android.server.print.RemotePrintService: java.util.List mDiscoveryPriorityList> = null;

        r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList> = null;

        $z1 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z1 == 0 goto label1;

     label3:
        $r3 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r3.<android.printservice.IPrintService: void setClient(android.printservice.IPrintServiceClient)>(null);

     label4:
        $r4 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        $r5 = interfaceinvoke $r4.<android.printservice.IPrintService: android.os.IBinder asBinder()>();

        interfaceinvoke $r5.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService> = null;

        $r7 = r0.<com.android.server.print.RemotePrintService: android.content.Context mContext>;

        $r6 = r0.<com.android.server.print.RemotePrintService: android.content.ServiceConnection mServiceConnection>;

        virtualinvoke $r7.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r6);

        return;

     label5:
        $r8 := @caughtexception;

        goto label4;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void handleBinderDied()
    {
        com.android.server.print.RemotePrintService r0;
        android.printservice.IPrintService $r1;
        android.os.IBinder $r2;
        com.android.server.print.RemotePrintService$PrintServiceCallbacks $r3;

        r0 := @this: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        $r2 = interfaceinvoke $r1.<android.printservice.IPrintService: android.os.IBinder asBinder()>();

        interfaceinvoke $r2.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>(r0, 0);

        r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService> = null;

        r0.<com.android.server.print.RemotePrintService: boolean mServiceDied> = 1;

        $r3 = r0.<com.android.server.print.RemotePrintService: com.android.server.print.RemotePrintService$PrintServiceCallbacks mCallbacks>;

        interfaceinvoke $r3.<com.android.server.print.RemotePrintService$PrintServiceCallbacks: void onServiceDied(com.android.server.print.RemotePrintService)>(r0);

        return;
    }

    private void handleCreatePrinterDiscoverySession()
    {
        com.android.server.print.RemotePrintService r0;
        android.os.RemoteException r1, $r5;
        boolean $z0;
        android.printservice.IPrintService $r2;
        com.android.server.print.RemotePrintService$4 $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        r0.<com.android.server.print.RemotePrintService: boolean mHasPrinterDiscoverySession> = 1;

        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r4 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r3 = new com.android.server.print.RemotePrintService$4;

        specialinvoke $r3.<com.android.server.print.RemotePrintService$4: void <init>(com.android.server.print.RemotePrintService)>(r0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;

     label1:
        $r2 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r2.<android.printservice.IPrintService: void createPrinterDiscoverySession()>();

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintService", "Error creating printer dicovery session.", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void handleDestroy()
    {
        com.android.server.print.RemotePrintService r0;
        int i0, i1;
        android.print.PrinterId r1;
        java.util.List $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        android.content.ComponentName $r7, $r8;

        r0 := @this: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        $r2 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        if $r2 == null goto label3;

        $r4 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r1 = (android.print.PrinterId) $r6;

        $r7 = virtualinvoke r1.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $r8 = r0.<com.android.server.print.RemotePrintService: android.content.ComponentName mComponentName>;

        $z1 = virtualinvoke $r7.<android.content.ComponentName: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleStopPrinterStateTracking(android.print.PrinterId)>(r1);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r3 = r0.<com.android.server.print.RemotePrintService: java.util.List mDiscoveryPriorityList>;

        if $r3 == null goto label4;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleStopPrinterDiscovery()>();

     label4:
        $z0 = r0.<com.android.server.print.RemotePrintService: boolean mHasPrinterDiscoverySession>;

        if $z0 == 0 goto label5;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void handleDestroyPrinterDiscoverySession()>();

     label5:
        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureUnbound()>();

        r0.<com.android.server.print.RemotePrintService: boolean mDestroyed> = 1;

        return;
    }

    private void handleDestroyPrinterDiscoverySession()
    {
        com.android.server.print.RemotePrintService r0;
        android.os.RemoteException r1, $r5;
        boolean $z0, $z1, $z2, $z4;
        android.printservice.IPrintService $r2;
        com.android.server.print.RemotePrintService$5 $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        r0.<com.android.server.print.RemotePrintService: boolean mHasPrinterDiscoverySession> = 0;

        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label3;

        $z2 = r0.<com.android.server.print.RemotePrintService: boolean mServiceDied>;

        if $z2 == 0 goto label2;

        $z4 = r0.<com.android.server.print.RemotePrintService: boolean mHasActivePrintJobs>;

        if $z4 != 0 goto label2;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureUnbound()>();

     label1:
        return;

     label2:
        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r4 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r3 = new com.android.server.print.RemotePrintService$5;

        specialinvoke $r3.<com.android.server.print.RemotePrintService$5: void <init>(com.android.server.print.RemotePrintService)>(r0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;

     label3:
        $r2 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r2.<android.printservice.IPrintService: void destroyPrinterDiscoverySession()>();

     label4:
        $z1 = r0.<com.android.server.print.RemotePrintService: boolean mHasActivePrintJobs>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureUnbound()>();

        return;

     label5:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintService", "Error destroying printer dicovery session.", r1);

        goto label4;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void handleOnAllPrintJobsHandled()
    {
        com.android.server.print.RemotePrintService r0;
        boolean $z0, $z1, $z2, $z4;
        com.android.server.print.RemotePrintService$1 $r1;
        java.util.List $r2;

        r0 := @this: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        r0.<com.android.server.print.RemotePrintService: boolean mHasActivePrintJobs> = 0;

        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label3;

        $z2 = r0.<com.android.server.print.RemotePrintService: boolean mServiceDied>;

        if $z2 == 0 goto label2;

        $z4 = r0.<com.android.server.print.RemotePrintService: boolean mHasPrinterDiscoverySession>;

        if $z4 != 0 goto label2;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureUnbound()>();

     label1:
        return;

     label2:
        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r2 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r1 = new com.android.server.print.RemotePrintService$1;

        specialinvoke $r1.<com.android.server.print.RemotePrintService$1: void <init>(com.android.server.print.RemotePrintService)>(r0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;

     label3:
        $z1 = r0.<com.android.server.print.RemotePrintService: boolean mHasPrinterDiscoverySession>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureUnbound()>();

        return;
    }

    private void handleOnPrintJobQueued(android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrintJobInfo r1;
        android.os.RemoteException r2, $r6;
        boolean $z0;
        android.printservice.IPrintService $r3;
        com.android.server.print.RemotePrintService$3 $r4;
        java.util.List $r5;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: android.print.PrintJobInfo;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        r0.<com.android.server.print.RemotePrintService: boolean mHasActivePrintJobs> = 1;

        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r5 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r4 = new com.android.server.print.RemotePrintService$3;

        specialinvoke $r4.<com.android.server.print.RemotePrintService$3: void <init>(com.android.server.print.RemotePrintService,android.print.PrintJobInfo)>(r0, r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;

     label1:
        $r3 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r3.<android.printservice.IPrintService: void onPrintJobQueued(android.print.PrintJobInfo)>(r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintService", "Error announcing queued pring job.", r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void handleRequestCancelPrintJob(android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrintJobInfo r1;
        android.os.RemoteException r2, $r6;
        boolean $z0;
        android.printservice.IPrintService $r3;
        com.android.server.print.RemotePrintService$2 $r4;
        java.util.List $r5;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: android.print.PrintJobInfo;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r5 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r4 = new com.android.server.print.RemotePrintService$2;

        specialinvoke $r4.<com.android.server.print.RemotePrintService$2: void <init>(com.android.server.print.RemotePrintService,android.print.PrintJobInfo)>(r0, r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;

     label1:
        $r3 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r3.<android.printservice.IPrintService: void requestCancelPrintJob(android.print.PrintJobInfo)>(r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintService", "Error canceling a pring job.", r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void handleStartPrinterDiscovery(java.util.List)
    {
        com.android.server.print.RemotePrintService r0;
        java.util.List r1, $r6, $r7;
        android.os.RemoteException r2, $r8;
        java.util.ArrayList $r3;
        boolean $z0;
        android.printservice.IPrintService $r4;
        com.android.server.print.RemotePrintService$6 $r5;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.print.RemotePrintService: java.util.List mDiscoveryPriorityList> = $r3;

        if r1 == null goto label1;

        $r7 = r0.<com.android.server.print.RemotePrintService: java.util.List mDiscoveryPriorityList>;

        interfaceinvoke $r7.<java.util.List: boolean addAll(java.util.Collection)>(r1);

     label1:
        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label2;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r6 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r5 = new com.android.server.print.RemotePrintService$6;

        specialinvoke $r5.<com.android.server.print.RemotePrintService$6: void <init>(com.android.server.print.RemotePrintService,java.util.List)>(r0, r1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;

     label2:
        $r4 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r4.<android.printservice.IPrintService: void startPrinterDiscovery(java.util.List)>(r1);

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintService", "Error starting printer dicovery.", r2);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void handleStartPrinterStateTracking(android.print.PrinterId)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrinterId r1;
        android.os.RemoteException r2, $r9;
        java.util.List $r3, $r4, $r7;
        boolean $z1;
        android.printservice.IPrintService $r5;
        com.android.server.print.RemotePrintService$9 $r6;
        java.util.ArrayList $r8;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: android.print.PrinterId;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        $r3 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        if $r3 != null goto label1;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList> = $r8;

     label1:
        $r4 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        $z1 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z1 != 0 goto label2;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r7 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r6 = new com.android.server.print.RemotePrintService$9;

        specialinvoke $r6.<com.android.server.print.RemotePrintService$9: void <init>(com.android.server.print.RemotePrintService,android.print.PrinterId)>(r0, r1);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;

     label2:
        $r5 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r5.<android.printservice.IPrintService: void startPrinterStateTracking(android.print.PrinterId)>(r1);

     label3:
        return;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintService", "Error requesting start printer tracking.", r2);

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void handleStopPrinterDiscovery()
    {
        com.android.server.print.RemotePrintService r0;
        android.os.RemoteException r1, $r5;
        boolean $z0;
        android.printservice.IPrintService $r2;
        com.android.server.print.RemotePrintService$7 $r3;
        java.util.List $r4;

        r0 := @this: com.android.server.print.RemotePrintService;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        r0.<com.android.server.print.RemotePrintService: java.util.List mDiscoveryPriorityList> = null;

        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r4 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r3 = new com.android.server.print.RemotePrintService$7;

        specialinvoke $r3.<com.android.server.print.RemotePrintService$7: void <init>(com.android.server.print.RemotePrintService)>(r0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;

     label1:
        $r2 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r2.<android.printservice.IPrintService: void stopPrinterDiscovery()>();

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintService", "Error stopping printer dicovery.", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void handleStopPrinterStateTracking(android.print.PrinterId)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrinterId r1;
        android.os.RemoteException r2, $r9;
        java.util.List $r3, $r4, $r5, $r8;
        boolean $z0, $z1, $z2;
        android.printservice.IPrintService $r6;
        com.android.server.print.RemotePrintService$10 $r7;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: android.print.PrinterId;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        $r3 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $r5 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        $z1 = interfaceinvoke $r5.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label3;

        r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList> = null;

     label3:
        $z2 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z2 != 0 goto label4;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r8 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r7 = new com.android.server.print.RemotePrintService$10;

        specialinvoke $r7.<com.android.server.print.RemotePrintService$10: void <init>(com.android.server.print.RemotePrintService,android.print.PrinterId)>(r0, r1);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;

     label4:
        $r6 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r6.<android.printservice.IPrintService: void stopPrinterStateTracking(android.print.PrinterId)>(r1);

     label5:
        return;

     label6:
        $r9 := @caughtexception;

        r2 = $r9;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintService", "Error requesting stop printer tracking.", r2);

        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    private void handleValidatePrinters(java.util.List)
    {
        com.android.server.print.RemotePrintService r0;
        java.util.List r1, $r5;
        android.os.RemoteException r2, $r6;
        boolean $z0;
        android.printservice.IPrintService $r3;
        com.android.server.print.RemotePrintService$8 $r4;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void throwIfDestroyed()>();

        $z0 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.print.RemotePrintService: void ensureBound()>();

        $r5 = r0.<com.android.server.print.RemotePrintService: java.util.List mPendingCommands>;

        $r4 = new com.android.server.print.RemotePrintService$8;

        specialinvoke $r4.<com.android.server.print.RemotePrintService$8: void <init>(com.android.server.print.RemotePrintService,java.util.List)>(r0, r1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;

     label1:
        $r3 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        interfaceinvoke $r3.<android.printservice.IPrintService: void validatePrinters(java.util.List)>(r1);

     label2:
        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("RemotePrintService", "Error requesting printers validation.", r2);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean isBound()
    {
        com.android.server.print.RemotePrintService r0;
        android.printservice.IPrintService $r1;

        r0 := @this: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.printservice.IPrintService mPrintService>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    private void throwIfDestroyed()
    {
        com.android.server.print.RemotePrintService r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.server.print.RemotePrintService;

        $z0 = r0.<com.android.server.print.RemotePrintService: boolean mDestroyed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot interact with a destroyed service");

        throw $r1;

     label1:
        return;
    }

    public void binderDied()
    {
        com.android.server.print.RemotePrintService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(12);

        return;
    }

    public void createPrinterDiscoverySession()
    {
        com.android.server.print.RemotePrintService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(1);

        return;
    }

    public void destroy()
    {
        com.android.server.print.RemotePrintService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(11);

        return;
    }

    public void destroyPrinterDiscoverySession()
    {
        com.android.server.print.RemotePrintService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(2);

        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.print.RemotePrintService r0;
        java.io.PrintWriter r1, r3, r4, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r37, $r38, $r39, $r40;
        java.lang.String r2, r5, $r12, $r17, $r22, $r27, $r34, $r36;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.ComponentName $r11;
        java.util.List $r35, $r41, $r43;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        $r6 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r2);

        $r7 = virtualinvoke $r6.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("service:");

        virtualinvoke $r7.<java.io.PrintWriter: void println()>();

        $r8 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r2);

        $r9 = virtualinvoke $r8.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r10 = virtualinvoke $r9.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("componentName=");

        $r11 = r0.<com.android.server.print.RemotePrintService: android.content.ComponentName mComponentName>;

        $r12 = virtualinvoke $r11.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r13 = virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r12);

        virtualinvoke $r13.<java.io.PrintWriter: void println()>();

        $r14 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r2);

        $r16 = virtualinvoke $r14.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r15 = virtualinvoke $r16.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("destroyed=");

        $z1 = r0.<com.android.server.print.RemotePrintService: boolean mDestroyed>;

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z1);

        $r19 = virtualinvoke $r15.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r17);

        virtualinvoke $r19.<java.io.PrintWriter: void println()>();

        $r18 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r2);

        $r21 = virtualinvoke $r18.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r20 = virtualinvoke $r21.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("bound=");

        $z2 = specialinvoke r0.<com.android.server.print.RemotePrintService: boolean isBound()>();

        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z2);

        $r24 = virtualinvoke $r20.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r22);

        virtualinvoke $r24.<java.io.PrintWriter: void println()>();

        $r23 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r2);

        $r26 = virtualinvoke $r23.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r25 = virtualinvoke $r26.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("hasDicoverySession=");

        $z3 = r0.<com.android.server.print.RemotePrintService: boolean mHasPrinterDiscoverySession>;

        $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z3);

        $r30 = virtualinvoke $r25.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r27);

        virtualinvoke $r30.<java.io.PrintWriter: void println()>();

        $r31 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r2);

        $r28 = virtualinvoke $r31.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r29 = virtualinvoke $r28.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("hasActivePrintJobs=");

        $z4 = r0.<com.android.server.print.RemotePrintService: boolean mHasActivePrintJobs>;

        $r34 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z4);

        $r32 = virtualinvoke $r29.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r34);

        virtualinvoke $r32.<java.io.PrintWriter: void println()>();

        $r33 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r2);

        $r37 = virtualinvoke $r33.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        r3 = virtualinvoke $r37.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("isDiscoveringPrinters=");

        $r35 = r0.<com.android.server.print.RemotePrintService: java.util.List mDiscoveryPriorityList>;

        if $r35 == null goto label3;

        z0 = 1;

     label1:
        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(z0);

        $r39 = virtualinvoke r3.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r36);

        virtualinvoke $r39.<java.io.PrintWriter: void println()>();

        $r40 = virtualinvoke r1.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r2);

        $r38 = virtualinvoke $r40.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        r4 = virtualinvoke $r38.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("trackedPrinters=");

        $r43 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        if $r43 == null goto label4;

        $r41 = r0.<com.android.server.print.RemotePrintService: java.util.List mTrackedPrinterList>;

        r5 = virtualinvoke $r41.<java.lang.Object: java.lang.String toString()>();

     label2:
        virtualinvoke r4.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r5);

        return;

     label3:
        z0 = 0;

        goto label1;

     label4:
        r5 = "null";

        goto label2;
    }

    public android.content.ComponentName getComponentName()
    {
        com.android.server.print.RemotePrintService r0;
        android.content.ComponentName $r1;

        r0 := @this: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.content.ComponentName mComponentName>;

        return $r1;
    }

    public void onAllPrintJobsHandled()
    {
        com.android.server.print.RemotePrintService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(8);

        return;
    }

    public void onPrintJobQueued(android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrintJobInfo r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r2 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(10, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void onRequestCancelPrintJob(android.print.PrintJobInfo)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrintJobInfo r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r2 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(9, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void startPrinterDiscovery(java.util.List)
    {
        com.android.server.print.RemotePrintService r0;
        java.util.List r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(3, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void startPrinterStateTracking(android.print.PrinterId)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrinterId r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: android.print.PrinterId;

        $r2 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(6, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void stopPrinterDiscovery()
    {
        com.android.server.print.RemotePrintService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.print.RemotePrintService;

        $r1 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(4);

        return;
    }

    public void stopPrinterStateTracking(android.print.PrinterId)
    {
        com.android.server.print.RemotePrintService r0;
        android.print.PrinterId r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: android.print.PrinterId;

        $r2 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(7, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void validatePrinters(java.util.List)
    {
        com.android.server.print.RemotePrintService r0;
        java.util.List r1;
        android.os.Handler $r2;
        android.os.Message $r3;

        r0 := @this: com.android.server.print.RemotePrintService;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<com.android.server.print.RemotePrintService: android.os.Handler mHandler>;

        $r3 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(5, r1);

        virtualinvoke $r3.<android.os.Message: void sendToTarget()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.print.RemotePrintService: java.lang.String LOG_TAG> = "RemotePrintService";

        <com.android.server.print.RemotePrintService: boolean DEBUG> = 0;

        return;
    }
}
