public final class org.apache.http.params.HttpConnectionParams extends java.lang.Object implements org.apache.http.params.CoreConnectionPNames
{

    private void <init>()
    {
        org.apache.http.params.HttpConnectionParams r0;

        r0 := @this: org.apache.http.params.HttpConnectionParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getConnectionTimeout(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.connection.timeout", 0);

        return $i0;
    }

    public static int getLinger(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.socket.linger", -1);

        return $i0;
    }

    public static int getSoTimeout(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.socket.timeout", 0);

        return $i0;
    }

    public static int getSocketBufferSize(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.socket.buffer-size", -1);

        return $i0;
    }

    public static boolean getTcpNoDelay(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $z0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>("http.tcp.nodelay", 1);

        return $z0;
    }

    public static boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $z0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>("http.connection.stalecheck", 1);

        return $z0;
    }

    public static void setConnectionTimeout(org.apache.http.params.HttpParams, int)
    {
        org.apache.http.params.HttpParams r0;
        int i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.connection.timeout", i0);

        return;
    }

    public static void setLinger(org.apache.http.params.HttpParams, int)
    {
        org.apache.http.params.HttpParams r0;
        int i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.linger", i0);

        return;
    }

    public static void setSoTimeout(org.apache.http.params.HttpParams, int)
    {
        org.apache.http.params.HttpParams r0;
        int i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.timeout", i0);

        return;
    }

    public static void setSocketBufferSize(org.apache.http.params.HttpParams, int)
    {
        org.apache.http.params.HttpParams r0;
        int i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.socket.buffer-size", i0);

        return;
    }

    public static void setStaleCheckingEnabled(org.apache.http.params.HttpParams, boolean)
    {
        org.apache.http.params.HttpParams r0;
        boolean z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.connection.stalecheck", z0);

        return;
    }

    public static void setTcpNoDelay(org.apache.http.params.HttpParams, boolean)
    {
        org.apache.http.params.HttpParams r0;
        boolean z0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.tcp.nodelay", z0);

        return;
    }
}
