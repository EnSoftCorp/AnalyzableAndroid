public class android.drm.DrmOutputStream extends java.io.OutputStream
{
    private static final java.lang.String TAG;
    private final android.drm.DrmManagerClient mClient;
    private final java.io.RandomAccessFile mFile;
    private int mSessionId;

    public void <init>(android.drm.DrmManagerClient, java.io.RandomAccessFile, java.lang.String) throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        android.drm.DrmManagerClient r1, $r4;
        java.io.RandomAccessFile r2;
        java.lang.String r3, $r9;
        int $i0, $i1;
        java.net.UnknownServiceException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: android.drm.DrmOutputStream;

        r1 := @parameter0: android.drm.DrmManagerClient;

        r2 := @parameter1: java.io.RandomAccessFile;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<android.drm.DrmOutputStream: int mSessionId> = -1;

        r0.<android.drm.DrmOutputStream: android.drm.DrmManagerClient mClient> = r1;

        r0.<android.drm.DrmOutputStream: java.io.RandomAccessFile mFile> = r2;

        $r4 = r0.<android.drm.DrmOutputStream: android.drm.DrmManagerClient mClient>;

        $i0 = virtualinvoke $r4.<android.drm.DrmManagerClient: int openConvertSession(java.lang.String)>(r3);

        r0.<android.drm.DrmOutputStream: int mSessionId> = $i0;

        $i1 = r0.<android.drm.DrmOutputStream: int mSessionId>;

        if $i1 != -1 goto label1;

        $r5 = new java.net.UnknownServiceException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to open DRM session for ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.UnknownServiceException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        return;
    }

    public void close() throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        int $i0;
        java.io.RandomAccessFile $r1;

        r0 := @this: android.drm.DrmOutputStream;

        $i0 = r0.<android.drm.DrmOutputStream: int mSessionId>;

        if $i0 != -1 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("DrmOutputStream", "Closing stream without finishing");

     label1:
        $r1 = r0.<android.drm.DrmOutputStream: java.io.RandomAccessFile mFile>;

        virtualinvoke $r1.<java.io.RandomAccessFile: void close()>();

        return;
    }

    public void finish() throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        android.drm.DrmConvertedStatus r1;
        int $i0, $i1, $i2, $i3;
        android.drm.DrmManagerClient $r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        long $l4;
        java.io.RandomAccessFile $r8, $r10;
        byte[] $r9;

        r0 := @this: android.drm.DrmOutputStream;

        $r2 = r0.<android.drm.DrmOutputStream: android.drm.DrmManagerClient mClient>;

        $i0 = r0.<android.drm.DrmOutputStream: int mSessionId>;

        r1 = virtualinvoke $r2.<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus closeConvertSession(int)>($i0);

        $i1 = r1.<android.drm.DrmConvertedStatus: int statusCode>;

        if $i1 != 1 goto label1;

        $r8 = r0.<android.drm.DrmOutputStream: java.io.RandomAccessFile mFile>;

        $i3 = r1.<android.drm.DrmConvertedStatus: int offset>;

        $l4 = (long) $i3;

        virtualinvoke $r8.<java.io.RandomAccessFile: void seek(long)>($l4);

        $r10 = r0.<android.drm.DrmOutputStream: java.io.RandomAccessFile mFile>;

        $r9 = r1.<android.drm.DrmConvertedStatus: byte[] convertedData>;

        virtualinvoke $r10.<java.io.RandomAccessFile: void write(byte[])>($r9);

        r0.<android.drm.DrmOutputStream: int mSessionId> = -1;

        return;

     label1:
        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected DRM status: ");

        $i2 = r1.<android.drm.DrmConvertedStatus: int statusCode>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public void write(int) throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        int i0;

        r0 := @this: android.drm.DrmOutputStream;

        i0 := @parameter0: int;

        staticinvoke <libcore.io.Streams: void writeSingleByte(java.io.OutputStream,int)>(r0, i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        android.drm.DrmOutputStream r0;
        byte[] r1, r2, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.drm.DrmConvertedStatus r3;
        android.drm.DrmManagerClient $r4;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8;
        java.io.RandomAccessFile $r10;

        r0 := @this: android.drm.DrmOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i2, i0, i1);

        $i3 = lengthof r1;

        if i1 != $i3 goto label2;

        r2 = r1;

     label1:
        $r4 = r0.<android.drm.DrmOutputStream: android.drm.DrmManagerClient mClient>;

        $i4 = r0.<android.drm.DrmOutputStream: int mSessionId>;

        r3 = virtualinvoke $r4.<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus convertData(int,byte[])>($i4, r2);

        $i5 = r3.<android.drm.DrmConvertedStatus: int statusCode>;

        if $i5 != 1 goto label3;

        $r10 = r0.<android.drm.DrmOutputStream: java.io.RandomAccessFile mFile>;

        $r11 = r3.<android.drm.DrmConvertedStatus: byte[] convertedData>;

        virtualinvoke $r10.<java.io.RandomAccessFile: void write(byte[])>($r11);

        return;

     label2:
        r2 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, r2, 0, i1);

        goto label1;

     label3:
        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected DRM status: ");

        $i6 = r3.<android.drm.DrmConvertedStatus: int statusCode>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r5;
    }

    public static void <clinit>()
    {
        <android.drm.DrmOutputStream: java.lang.String TAG> = "DrmOutputStream";

        return;
    }
}
