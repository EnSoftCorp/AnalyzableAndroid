class com.android.server.wifi.WifiService$TdlsTask extends android.os.AsyncTask
{
    final com.android.server.wifi.WifiService this$0;

    void <init>(com.android.server.wifi.WifiService)
    {
        com.android.server.wifi.WifiService$TdlsTask r0;
        com.android.server.wifi.WifiService r1;

        r0 := @this: com.android.server.wifi.WifiService$TdlsTask;

        r1 := @parameter0: com.android.server.wifi.WifiService;

        r0.<com.android.server.wifi.WifiService$TdlsTask: com.android.server.wifi.WifiService this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient java.lang.Integer doInBackground(com.android.server.wifi.WifiService$TdlsTaskParams[])
    {
        com.android.server.wifi.WifiService$TdlsTask r0;
        com.android.server.wifi.WifiService$TdlsTaskParams[] r1;
        com.android.server.wifi.WifiService$TdlsTaskParams r2;
        java.lang.String r3, r11, r13, r14, r15, $r19, $r28;
        boolean z0, $z1;
        java.io.BufferedReader r4, r5, $r21;
        java.lang.Throwable r7, $r31, $r38;
        java.lang.String[] r12;
        java.io.FileReader $r20;
        java.lang.Integer $r23;
        com.android.server.wifi.WifiService $r24;
        java.lang.StringBuilder $r25, $r26, $r27, $r29, $r30;
        int $i1;
        java.io.FileNotFoundException $r32, $r34;
        java.io.IOException $r33, $r35, $r36, $r37, $r39;

        r0 := @this: com.android.server.wifi.WifiService$TdlsTask;

        r1 := @parameter0: com.android.server.wifi.WifiService$TdlsTaskParams[];

        r2 = r1[0];

        $r19 = r2.<com.android.server.wifi.WifiService$TdlsTaskParams: java.lang.String remoteIpAddress>;

        r3 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>();

        z0 = r2.<com.android.server.wifi.WifiService$TdlsTaskParams: boolean enable>;

        r4 = null;

     label01:
        $r21 = new java.io.BufferedReader;

        $r20 = new java.io.FileReader;

        specialinvoke $r20.<java.io.FileReader: void <init>(java.lang.String)>("/proc/net/arp");

        specialinvoke $r21.<java.io.BufferedReader: void <init>(java.io.Reader)>($r20);

        r5 = $r21;

     label02:
        virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        r11 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        r13 = null;

        if r11 == null goto label07;

     label05:
        r12 = virtualinvoke r11.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ ]+");

        $i1 = lengthof r12;

        if $i1 < 6 goto label03;

        r15 = r12[0];

        r14 = r12[3];

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z1 == 0 goto label03;

     label06:
        r13 = r14;

     label07:
        if r13 != null goto label12;

     label08:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not find remoteAddress {");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} in ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/net/arp");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WifiService", $r28);

     label09:
        if r5 == null goto label11;

     label10:
        virtualinvoke r5.<java.io.BufferedReader: void close()>();

     label11:
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r23;

     label12:
        $r24 = r0.<com.android.server.wifi.WifiService$TdlsTask: com.android.server.wifi.WifiService this$0>;

        virtualinvoke $r24.<com.android.server.wifi.WifiService: void enableTdlsWithMacAddress(java.lang.String,boolean)>(r13, z0);

     label13:
        goto label09;

     label14:
        $r32 := @caughtexception;

        r4 = r5;

     label15:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WifiService", "Could not open /proc/net/arp to lookup mac address");

     label16:
        if r4 == null goto label11;

     label17:
        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label18:
        goto label11;

     label19:
        $r37 := @caughtexception;

        goto label11;

     label20:
        $r39 := @caughtexception;

     label21:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WifiService", "Could not read /proc/net/arp to lookup mac address");

     label22:
        if r4 == null goto label11;

     label23:
        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label24:
        goto label11;

     label25:
        $r31 := @caughtexception;

        r7 = $r31;

     label26:
        if r4 == null goto label28;

     label27:
        virtualinvoke r4.<java.io.BufferedReader: void close()>();

     label28:
        throw r7;

     label29:
        $r33 := @caughtexception;

        goto label28;

     label30:
        $r35 := @caughtexception;

        goto label11;

     label31:
        $r38 := @caughtexception;

        r7 = $r38;

        r4 = r5;

        goto label26;

     label32:
        $r36 := @caughtexception;

        r4 = r5;

        goto label21;

     label33:
        $r34 := @caughtexception;

        r4 = null;

        goto label15;

        catch java.io.FileNotFoundException from label01 to label02 with label33;
        catch java.io.IOException from label01 to label02 with label20;
        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.io.FileNotFoundException from label02 to label03 with label14;
        catch java.io.IOException from label02 to label03 with label32;
        catch java.lang.Throwable from label02 to label03 with label31;
        catch java.io.FileNotFoundException from label03 to label04 with label14;
        catch java.io.IOException from label03 to label04 with label32;
        catch java.lang.Throwable from label03 to label04 with label31;
        catch java.io.FileNotFoundException from label05 to label06 with label14;
        catch java.io.IOException from label05 to label06 with label32;
        catch java.lang.Throwable from label05 to label06 with label31;
        catch java.io.FileNotFoundException from label08 to label09 with label14;
        catch java.io.IOException from label08 to label09 with label32;
        catch java.lang.Throwable from label08 to label09 with label31;
        catch java.io.IOException from label10 to label11 with label30;
        catch java.io.FileNotFoundException from label12 to label13 with label14;
        catch java.io.IOException from label12 to label13 with label32;
        catch java.lang.Throwable from label12 to label13 with label31;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.io.IOException from label23 to label24 with label19;
        catch java.io.IOException from label27 to label28 with label29;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.server.wifi.WifiService$TdlsTask r0;
        java.lang.Object[] r1;
        com.android.server.wifi.WifiService$TdlsTaskParams[] $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.wifi.WifiService$TdlsTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (com.android.server.wifi.WifiService$TdlsTaskParams[]) r1;

        $r3 = virtualinvoke r0.<com.android.server.wifi.WifiService$TdlsTask: java.lang.Integer doInBackground(com.android.server.wifi.WifiService$TdlsTaskParams[])>($r2);

        return $r3;
    }
}
