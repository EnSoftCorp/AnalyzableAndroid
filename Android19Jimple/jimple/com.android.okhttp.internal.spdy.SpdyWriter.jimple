final class com.android.okhttp.internal.spdy.SpdyWriter extends java.lang.Object implements java.io.Closeable
{
    private final java.io.ByteArrayOutputStream nameValueBlockBuffer;
    private final java.io.DataOutputStream nameValueBlockOut;
    final java.io.DataOutputStream out;

    void <init>(java.io.OutputStream)
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        java.io.OutputStream r1, $r10;
        java.util.zip.Deflater r2, $r4;
        java.io.DataOutputStream $r3, $r7;
        byte[] $r5;
        java.io.ByteArrayOutputStream $r6, $r9;
        com.android.okhttp.internal.Platform $r8;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.io.DataOutputStream;

        specialinvoke $r3.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out> = $r3;

        $r4 = new java.util.zip.Deflater;

        specialinvoke $r4.<java.util.zip.Deflater: void <init>()>();

        r2 = $r4;

        $r5 = <com.android.okhttp.internal.spdy.SpdyReader: byte[] DICTIONARY>;

        virtualinvoke r2.<java.util.zip.Deflater: void setDictionary(byte[])>($r5);

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.ByteArrayOutputStream nameValueBlockBuffer> = $r6;

        $r7 = new java.io.DataOutputStream;

        $r8 = staticinvoke <com.android.okhttp.internal.Platform: com.android.okhttp.internal.Platform get()>();

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.ByteArrayOutputStream nameValueBlockBuffer>;

        $r10 = virtualinvoke $r8.<com.android.okhttp.internal.Platform: java.io.OutputStream newDeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,boolean)>($r9, r2, 1);

        specialinvoke $r7.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r10);

        r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream nameValueBlockOut> = $r7;

        return;
    }

    private void writeNameValueBlockToBuffer(java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        java.util.List r1;
        int i0, $i1, $i2;
        java.util.Iterator r2;
        java.lang.String r3;
        java.io.ByteArrayOutputStream $r4;
        java.io.DataOutputStream $r5, $r6, $r8, $r9;
        boolean $z0;
        java.lang.Object $r7;
        byte[] $r10;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.ByteArrayOutputStream nameValueBlockBuffer>;

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void reset()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i0 = $i1 / 2;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream nameValueBlockOut>;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeInt(int)>(i0);

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r7;

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream nameValueBlockOut>;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        virtualinvoke $r8.<java.io.DataOutputStream: void writeInt(int)>($i2);

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream nameValueBlockOut>;

        $r10 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke $r9.<java.io.DataOutputStream: void write(byte[])>($r10);

        goto label1;

     label2:
        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream nameValueBlockOut>;

        virtualinvoke $r6.<java.io.DataOutputStream: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        java.io.DataOutputStream $r1, $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream nameValueBlockOut>;

        staticinvoke <com.android.okhttp.internal.Util: void closeAll(java.io.Closeable,java.io.Closeable)>($r2, $r1);

        return;
    }

    public void data(int, int, byte[]) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        byte[] r1;
        java.lang.Throwable r2, $r7;
        java.io.DataOutputStream $r3, $r4, $r5, $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: byte[];

        entermonitor r0;

     label1:
        i2 = lengthof r1;

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i3 = 2147483647 & i1;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>($i3);

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i4 = i0 & 255;

        $i6 = $i4 << 24;

        $i5 = 16777215 & i2;

        $i7 = $i6 | $i5;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>($i7);

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r5.<java.io.DataOutputStream: void write(byte[])>(r1);

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r6.<java.io.DataOutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void goAway(int, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.Throwable r1, $r7;
        java.io.DataOutputStream $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(-2147287033);

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i3 = i0 & 255;

        $i4 = $i3 << 24;

        $i5 = 8 | $i4;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>($i5);

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(i1);

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeInt(int)>(i2);

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r6.<java.io.DataOutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void headers(int, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.List r1;
        java.lang.Throwable r2, $r10;
        java.io.ByteArrayOutputStream $r3, $r7;
        java.io.DataOutputStream $r4, $r5, $r6, $r8, $r9;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyWriter: void writeNameValueBlockToBuffer(java.util.List)>(r1);

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.ByteArrayOutputStream nameValueBlockBuffer>;

        $i3 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: int size()>();

        i2 = 4 + $i3;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(-2147287032);

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i4 = i0 & 255;

        $i6 = $i4 << 24;

        $i5 = 16777215 & i2;

        $i7 = $i6 | $i5;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeInt(int)>($i7);

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i8 = 2147483647 & i1;

        virtualinvoke $r6.<java.io.DataOutputStream: void writeInt(int)>($i8);

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.ByteArrayOutputStream nameValueBlockBuffer>;

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>($r8);

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r9.<java.io.DataOutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void noop() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        java.lang.Throwable r1, $r5;
        java.io.DataOutputStream $r2, $r3, $r4;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(-2147287035);

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>(0);

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r4.<java.io.DataOutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void ping(int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Throwable r1, $r6;
        java.io.DataOutputStream $r2, $r3, $r4, $r5;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(-2147287034);

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i2 = i0 & 255;

        $i3 = $i2 << 24;

        $i4 = 4 | $i3;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>($i4);

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(i1);

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r5.<java.io.DataOutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void rstStream(int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r7;
        java.io.DataOutputStream $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(-2147287037);

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>(8);

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i2 = 2147483647 & i0;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>($i2);

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeInt(int)>(i1);

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r6.<java.io.DataOutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void settings(int, com.android.okhttp.internal.spdy.Settings) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        com.android.okhttp.internal.spdy.Settings r1;
        java.lang.Throwable r2, $r9;
        java.io.DataOutputStream $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.okhttp.internal.spdy.Settings;

        entermonitor r0;

     label01:
        i1 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int size()>();

     label02:
        $i5 = i1 * 8;

        i2 = 4 + $i5;

     label03:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>(-2147287036);

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i6 = i0 & 255;

        $i8 = $i6 << 24;

        $i7 = i2 & 16777215;

        $i9 = $i8 | $i7;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeInt(int)>($i9);

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(i1);

     label04:
        i3 = 0;

     label05:
        if i3 > 9 goto label11;

     label06:
        $z0 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: boolean isSet(int)>(i3);

        if $z0 != 0 goto label08;

     label07:
        goto label13;

     label08:
        i4 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int flags(int)>(i3);

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i11 = i4 & 255;

        $i13 = $i11 << 24;

        $i10 = i3 & 16777215;

        $i12 = $i13 | $i10;

        virtualinvoke $r8.<java.io.DataOutputStream: void writeInt(int)>($i12);

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i14 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int get(int)>(i3);

        virtualinvoke $r7.<java.io.DataOutputStream: void writeInt(int)>($i14);

     label09:
        goto label13;

     label10:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r0;

        throw r2;

     label11:
        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r6.<java.io.DataOutputStream: void flush()>();

     label12:
        exitmonitor r0;

        return;

     label13:
        i3 = i3 + 1;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void synReply(int, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.List r1;
        java.lang.Throwable r2, $r10;
        java.io.ByteArrayOutputStream $r3, $r7;
        java.io.DataOutputStream $r4, $r5, $r6, $r8, $r9;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyWriter: void writeNameValueBlockToBuffer(java.util.List)>(r1);

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.ByteArrayOutputStream nameValueBlockBuffer>;

        $i3 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: int size()>();

        i2 = 4 + $i3;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(-2147287038);

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i4 = i0 & 255;

        $i6 = $i4 << 24;

        $i5 = 16777215 & i2;

        $i7 = $i6 | $i5;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeInt(int)>($i7);

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i8 = 2147483647 & i1;

        virtualinvoke $r6.<java.io.DataOutputStream: void writeInt(int)>($i8);

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.ByteArrayOutputStream nameValueBlockBuffer>;

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>($r8);

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r9.<java.io.DataOutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void synStream(int, int, int, int, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.util.List r1;
        java.lang.Throwable r2, $r12;
        java.io.ByteArrayOutputStream $r3, $r11;
        java.io.DataOutputStream $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r1 := @parameter5: java.util.List;

        entermonitor r0;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyWriter: void writeNameValueBlockToBuffer(java.util.List)>(r1);

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.ByteArrayOutputStream nameValueBlockBuffer>;

        $i6 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: int size()>();

        i5 = 10 + $i6;

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(-2147287039);

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i7 = i0 & 255;

        $i10 = $i7 << 24;

        $i8 = 16777215 & i5;

        $i9 = $i10 | $i8;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeInt(int)>($i9);

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i11 = i1 & 2147483647;

        virtualinvoke $r6.<java.io.DataOutputStream: void writeInt(int)>($i11);

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i12 = i2 & 2147483647;

        virtualinvoke $r7.<java.io.DataOutputStream: void writeInt(int)>($i12);

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        $i13 = i3 & 7;

        $i15 = $i13 << 13;

        $i17 = 0 | $i15;

        $i14 = i4 & 255;

        $i16 = $i17 | $i14;

        virtualinvoke $r9.<java.io.DataOutputStream: void writeShort(int)>($i16);

        $r11 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.ByteArrayOutputStream nameValueBlockBuffer>;

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r11.<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>($r8);

        $r10 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r10.<java.io.DataOutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void windowUpdate(int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyWriter r0;
        int i0, i1;
        java.lang.Throwable r1, $r7;
        java.io.DataOutputStream $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyWriter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r2.<java.io.DataOutputStream: void writeInt(int)>(-2147287031);

        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r3.<java.io.DataOutputStream: void writeInt(int)>(8);

        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r4.<java.io.DataOutputStream: void writeInt(int)>(i0);

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeInt(int)>(i1);

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyWriter: java.io.DataOutputStream out>;

        virtualinvoke $r6.<java.io.DataOutputStream: void flush()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
