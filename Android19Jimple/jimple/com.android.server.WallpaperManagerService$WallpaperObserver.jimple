class com.android.server.WallpaperManagerService$WallpaperObserver extends android.os.FileObserver
{
    final com.android.server.WallpaperManagerService$WallpaperData mWallpaper;
    final java.io.File mWallpaperDir;
    final java.io.File mWallpaperFile;
    final com.android.server.WallpaperManagerService this$0;

    public void <init>(com.android.server.WallpaperManagerService, com.android.server.WallpaperManagerService$WallpaperData)
    {
        com.android.server.WallpaperManagerService$WallpaperObserver r0;
        com.android.server.WallpaperManagerService r1;
        com.android.server.WallpaperManagerService$WallpaperData r2;
        int $i0, $i1;
        java.io.File $r3, $r5, $r6, $r7;
        java.lang.String $r4;

        r0 := @this: com.android.server.WallpaperManagerService$WallpaperObserver;

        r1 := @parameter0: com.android.server.WallpaperManagerService;

        r2 := @parameter1: com.android.server.WallpaperManagerService$WallpaperData;

        r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService this$0> = r1;

        $i0 = r2.<com.android.server.WallpaperManagerService$WallpaperData: int userId>;

        $r3 = staticinvoke <com.android.server.WallpaperManagerService: java.io.File access$000(int)>($i0);

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke r0.<android.os.FileObserver: void <init>(java.lang.String,int)>($r4, 1544);

        $i1 = r2.<com.android.server.WallpaperManagerService$WallpaperData: int userId>;

        $r5 = staticinvoke <com.android.server.WallpaperManagerService: java.io.File access$000(int)>($i1);

        r0.<com.android.server.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperDir> = $r5;

        r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService$WallpaperData mWallpaper> = r2;

        $r6 = new java.io.File;

        $r7 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "wallpaper");

        r0.<com.android.server.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperFile> = $r6;

        return;
    }

    public void onEvent(int, java.lang.String)
    {
        com.android.server.WallpaperManagerService$WallpaperObserver r0;
        int i0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r23;
        long l1;
        java.io.File r4, $r9, $r10, $r11;
        com.android.server.WallpaperManagerService $r5, $r7, $r14, $r17, $r21;
        android.app.backup.BackupManager $r6;
        android.content.Context $r8;
        boolean $z0, $z2;
        com.android.server.WallpaperManagerService$WallpaperData $r12, $r13, $r15, $r19, $r20, $r22;
        android.content.ComponentName $r16, $r18;

        r0 := @this: com.android.server.WallpaperManagerService$WallpaperObserver;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label01;

        return;

     label01:
        $r5 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService this$0>;

        r2 = $r5.<com.android.server.WallpaperManagerService: java.lang.Object mLock>;

        entermonitor r2;

     label02:
        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        $r6 = new android.app.backup.BackupManager;

        $r7 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService this$0>;

        $r8 = $r7.<com.android.server.WallpaperManagerService: android.content.Context mContext>;

        specialinvoke $r6.<android.app.backup.BackupManager: void <init>(android.content.Context)>($r8);

        virtualinvoke $r6.<android.app.backup.BackupManager: void dataChanged()>();

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        $r9 = new java.io.File;

        $r10 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperDir>;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, r1);

        r4 = $r9;

        $r11 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: java.io.File mWallpaperFile>;

        $z0 = virtualinvoke $r11.<java.io.File: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label08;

        $r14 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService this$0>;

        $r12 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        staticinvoke <com.android.server.WallpaperManagerService: void access$100(com.android.server.WallpaperManagerService,com.android.server.WallpaperManagerService$WallpaperData)>($r14, $r12);

        $r13 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $r16 = $r13.<com.android.server.WallpaperManagerService$WallpaperData: android.content.ComponentName wallpaperComponent>;

        if $r16 == null goto label05;

     label03:
        if i0 != 8 goto label05;

     label04:
        $r22 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $z2 = $r22.<com.android.server.WallpaperManagerService$WallpaperData: boolean imageWallpaperPending>;

        if $z2 == 0 goto label08;

     label05:
        if i0 != 8 goto label07;

     label06:
        $r20 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        $r20.<com.android.server.WallpaperManagerService$WallpaperData: boolean imageWallpaperPending> = 0;

     label07:
        $r17 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService this$0>;

        $r18 = <com.android.server.WallpaperManagerService: android.content.ComponentName IMAGE_WALLPAPER>;

        $r15 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        virtualinvoke $r17.<com.android.server.WallpaperManagerService: boolean bindWallpaperComponentLocked(android.content.ComponentName,boolean,boolean,com.android.server.WallpaperManagerService$WallpaperData,android.os.IRemoteCallback)>($r18, 1, 0, $r15, null);

        $r21 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService this$0>;

        $r19 = r0.<com.android.server.WallpaperManagerService$WallpaperObserver: com.android.server.WallpaperManagerService$WallpaperData mWallpaper>;

        staticinvoke <com.android.server.WallpaperManagerService: void access$200(com.android.server.WallpaperManagerService,com.android.server.WallpaperManagerService$WallpaperData)>($r21, $r19);

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r23 := @caughtexception;

        r3 = $r23;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
