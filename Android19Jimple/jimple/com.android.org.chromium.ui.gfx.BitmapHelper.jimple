public class com.android.org.chromium.ui.gfx.BitmapHelper extends java.lang.Object
{

    public void <init>()
    {
        com.android.org.chromium.ui.gfx.BitmapHelper r0;

        r0 := @this: com.android.org.chromium.ui.gfx.BitmapHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int calculateInSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        android.graphics.BitmapFactory$Options r0;
        int i0, i1, i2, i3, i4, i5, i6;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @parameter0: android.graphics.BitmapFactory$Options;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = r0.<android.graphics.BitmapFactory$Options: int outHeight>;

        i3 = r0.<android.graphics.BitmapFactory$Options: int outWidth>;

        i4 = 1;

        if i2 > i1 goto label1;

        if i3 <= i0 goto label2;

     label1:
        $f1 = (float) i2;

        $f0 = (float) i1;

        $f2 = $f1 / $f0;

        i5 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $f4 = (float) i3;

        $f3 = (float) i0;

        $f5 = $f4 / $f3;

        i6 = staticinvoke <java.lang.Math: int round(float)>($f5);

        if i5 >= i6 goto label3;

        i4 = i5;

     label2:
        return i4;

     label3:
        return i6;
    }

    public static android.graphics.Bitmap createBitmap(int, int)
    {
        int i0, i1;
        android.graphics.Bitmap$Config $r0;
        android.graphics.Bitmap $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r0);

        return $r1;
    }

    private static android.graphics.Bitmap decodeDrawableResource(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1, i2, $i3;
        android.content.res.Resources r1;
        android.graphics.BitmapFactory$Options r2, $r3;
        android.graphics.Bitmap $r5;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        i2 = virtualinvoke r1.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(r0, null, null);

        $r3 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r3.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r3;

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>(r1, i2, r2);

        $i3 = staticinvoke <com.android.org.chromium.ui.gfx.BitmapHelper: int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int)>(r2, i0, i1);

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i3;

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>(r1, i2, r2);

        return $r5;
    }
}
