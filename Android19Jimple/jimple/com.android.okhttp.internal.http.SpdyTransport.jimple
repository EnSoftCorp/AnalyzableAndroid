public final class com.android.okhttp.internal.http.SpdyTransport extends java.lang.Object implements com.android.okhttp.internal.http.Transport
{
    private final com.android.okhttp.internal.http.HttpEngine httpEngine;
    private final com.android.okhttp.internal.spdy.SpdyConnection spdyConnection;
    private com.android.okhttp.internal.spdy.SpdyStream stream;

    public void <init>(com.android.okhttp.internal.http.HttpEngine, com.android.okhttp.internal.spdy.SpdyConnection)
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.http.HttpEngine r1;
        com.android.okhttp.internal.spdy.SpdyConnection r2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        r1 := @parameter0: com.android.okhttp.internal.http.HttpEngine;

        r2 := @parameter1: com.android.okhttp.internal.spdy.SpdyConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine> = r1;

        r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection> = r2;

        return;
    }

    public java.io.OutputStream createRequestBody() throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.spdy.SpdyStream $r1;
        java.io.OutputStream $r2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        virtualinvoke r0.<com.android.okhttp.internal.http.SpdyTransport: void writeRequestHeaders()>();

        $r1 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.spdy.SpdyStream: java.io.OutputStream getOutputStream()>();

        return $r2;
    }

    public void flushRequest() throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.spdy.SpdyStream $r1;
        java.io.OutputStream $r2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        $r1 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.spdy.SpdyStream: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        return;
    }

    public java.io.InputStream getTransferStream(java.net.CacheRequest) throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        java.net.CacheRequest r1;
        com.android.okhttp.internal.http.UnknownLengthHttpInputStream $r2;
        com.android.okhttp.internal.spdy.SpdyStream $r3;
        java.io.InputStream $r4;
        com.android.okhttp.internal.http.HttpEngine $r5;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        r1 := @parameter0: java.net.CacheRequest;

        $r2 = new com.android.okhttp.internal.http.UnknownLengthHttpInputStream;

        $r3 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r4 = virtualinvoke $r3.<com.android.okhttp.internal.spdy.SpdyStream: java.io.InputStream getInputStream()>();

        $r5 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        specialinvoke $r2.<com.android.okhttp.internal.http.UnknownLengthHttpInputStream: void <init>(java.io.InputStream,java.net.CacheRequest,com.android.okhttp.internal.http.HttpEngine)>($r4, r1, $r5);

        return $r2;
    }

    public boolean makeReusable(boolean, java.io.OutputStream, java.io.InputStream)
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        boolean z0;
        java.io.OutputStream r1;
        java.io.InputStream r2;
        com.android.okhttp.internal.spdy.SpdyStream $r3, $r4;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.io.OutputStream;

        r2 := @parameter2: java.io.InputStream;

        if z0 == 0 goto label1;

        $r3 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        virtualinvoke $r4.<com.android.okhttp.internal.spdy.SpdyStream: void closeLater(int)>(5);

     label1:
        return 1;

     label2:
        return 0;
    }

    public com.android.okhttp.internal.http.ResponseHeaders readResponseHeaders() throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.http.RawHeaders r1;
        com.android.okhttp.internal.http.ResponseHeaders r2, $r6;
        com.android.okhttp.internal.spdy.SpdyStream $r3;
        java.util.List $r4;
        com.android.okhttp.internal.http.HttpEngine $r5, $r7;
        java.net.URI $r8;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        $r3 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r4 = virtualinvoke $r3.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List getResponseHeaders()>();

        r1 = staticinvoke <com.android.okhttp.internal.http.RawHeaders: com.android.okhttp.internal.http.RawHeaders fromNameValueBlock(java.util.List)>($r4);

        $r5 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        virtualinvoke $r5.<com.android.okhttp.internal.http.HttpEngine: void receiveHeaders(com.android.okhttp.internal.http.RawHeaders)>(r1);

        $r6 = new com.android.okhttp.internal.http.ResponseHeaders;

        $r7 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r8 = $r7.<com.android.okhttp.internal.http.HttpEngine: java.net.URI uri>;

        specialinvoke $r6.<com.android.okhttp.internal.http.ResponseHeaders: void <init>(java.net.URI,com.android.okhttp.internal.http.RawHeaders)>($r8, r1);

        r2 = $r6;

        virtualinvoke r2.<com.android.okhttp.internal.http.ResponseHeaders: void setTransport(java.lang.String)>("spdy/3");

        return r2;
    }

    public void writeRequestBody(com.android.okhttp.internal.http.RetryableOutputStream) throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.http.RetryableOutputStream r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        r1 := @parameter0: com.android.okhttp.internal.http.RetryableOutputStream;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void writeRequestHeaders() throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.http.RawHeaders r1;
        java.lang.String r2, $r12, $r14, $r15, $r19;
        java.net.URL r3;
        boolean z0;
        com.android.okhttp.internal.spdy.SpdyStream $r4, $r21, $r25;
        com.android.okhttp.internal.http.HttpEngine $r5, $r6, $r8, $r10, $r13, $r17, $r18, $r24;
        com.android.okhttp.internal.http.RequestHeaders $r7;
        com.android.okhttp.Connection $r9;
        int $i0, $i1;
        com.android.okhttp.internal.http.Policy $r11;
        java.net.URI $r16;
        com.android.okhttp.internal.spdy.SpdyConnection $r20;
        java.util.List $r22;
        com.android.okhttp.OkHttpClient $r23;
        long $l2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        $r4 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        if $r4 == null goto label1;

        return;

     label1:
        $r5 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        virtualinvoke $r5.<com.android.okhttp.internal.http.HttpEngine: void writingRequestHeaders()>();

        $r6 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r7 = $r6.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RequestHeaders requestHeaders>;

        r1 = virtualinvoke $r7.<com.android.okhttp.internal.http.RequestHeaders: com.android.okhttp.internal.http.RawHeaders getHeaders()>();

        $r8 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r9 = $r8.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $i0 = virtualinvoke $r9.<com.android.okhttp.Connection: int getHttpMinorVersion()>();

        if $i0 != 1 goto label3;

        r2 = "HTTP/1.1";

     label2:
        $r10 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r11 = $r10.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Policy policy>;

        r3 = interfaceinvoke $r11.<com.android.okhttp.internal.http.Policy: java.net.URL getURL()>();

        $r13 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r12 = $r13.<com.android.okhttp.internal.http.HttpEngine: java.lang.String method>;

        $r15 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: java.lang.String requestPath(java.net.URL)>(r3);

        $r14 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: java.lang.String getOriginAddress(java.net.URL)>(r3);

        $r17 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r16 = $r17.<com.android.okhttp.internal.http.HttpEngine: java.net.URI uri>;

        $r19 = virtualinvoke $r16.<java.net.URI: java.lang.String getScheme()>();

        virtualinvoke r1.<com.android.okhttp.internal.http.RawHeaders: void addSpdyRequestHeaders(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r12, $r15, r2, $r14, $r19);

        $r18 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        z0 = virtualinvoke $r18.<com.android.okhttp.internal.http.HttpEngine: boolean hasRequestBody()>();

        $r20 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        $r22 = virtualinvoke r1.<com.android.okhttp.internal.http.RawHeaders: java.util.List toNameValueBlock()>();

        $r21 = virtualinvoke $r20.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream newStream(java.util.List,boolean,boolean)>($r22, z0, 1);

        r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream> = $r21;

        $r25 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r24 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r23 = $r24.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $i1 = virtualinvoke $r23.<com.android.okhttp.OkHttpClient: int getReadTimeout()>();

        $l2 = (long) $i1;

        virtualinvoke $r25.<com.android.okhttp.internal.spdy.SpdyStream: void setReadTimeout(long)>($l2);

        return;

     label3:
        r2 = "HTTP/1.0";

        goto label2;
    }
}
