public abstract class com.google.android.util.AbstractMessageParser$Token extends java.lang.Object
{
    protected java.lang.String text;
    protected com.google.android.util.AbstractMessageParser$Token$Type type;

    protected void <init>(com.google.android.util.AbstractMessageParser$Token$Type, java.lang.String)
    {
        com.google.android.util.AbstractMessageParser$Token r0;
        com.google.android.util.AbstractMessageParser$Token$Type r1;
        java.lang.String r2;

        r0 := @this: com.google.android.util.AbstractMessageParser$Token;

        r1 := @parameter0: com.google.android.util.AbstractMessageParser$Token$Type;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.android.util.AbstractMessageParser$Token: com.google.android.util.AbstractMessageParser$Token$Type type> = r1;

        r0.<com.google.android.util.AbstractMessageParser$Token: java.lang.String text> = r2;

        return;
    }

    public boolean controlCaps()
    {
        com.google.android.util.AbstractMessageParser$Token r0;

        r0 := @this: com.google.android.util.AbstractMessageParser$Token;

        return 0;
    }

    public java.util.List getInfo()
    {
        com.google.android.util.AbstractMessageParser$Token r0;
        java.util.ArrayList r1, $r2;
        com.google.android.util.AbstractMessageParser$Token$Type $r3;
        java.lang.String $r4;

        r0 := @this: com.google.android.util.AbstractMessageParser$Token;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<com.google.android.util.AbstractMessageParser$Token: com.google.android.util.AbstractMessageParser$Token$Type getType()>();

        $r4 = virtualinvoke $r3.<com.google.android.util.AbstractMessageParser$Token$Type: java.lang.String toString()>();

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        return r1;
    }

    public java.lang.String getRawText()
    {
        com.google.android.util.AbstractMessageParser$Token r0;
        java.lang.String $r1;

        r0 := @this: com.google.android.util.AbstractMessageParser$Token;

        $r1 = r0.<com.google.android.util.AbstractMessageParser$Token: java.lang.String text>;

        return $r1;
    }

    public com.google.android.util.AbstractMessageParser$Token$Type getType()
    {
        com.google.android.util.AbstractMessageParser$Token r0;
        com.google.android.util.AbstractMessageParser$Token$Type $r1;

        r0 := @this: com.google.android.util.AbstractMessageParser$Token;

        $r1 = r0.<com.google.android.util.AbstractMessageParser$Token: com.google.android.util.AbstractMessageParser$Token$Type type>;

        return $r1;
    }

    public boolean isArray()
    {
        com.google.android.util.AbstractMessageParser$Token r0;
        boolean $z0;

        r0 := @this: com.google.android.util.AbstractMessageParser$Token;

        $z0 = virtualinvoke r0.<com.google.android.util.AbstractMessageParser$Token: boolean isHtml()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract boolean isHtml();

    public boolean isMedia()
    {
        com.google.android.util.AbstractMessageParser$Token r0;

        r0 := @this: com.google.android.util.AbstractMessageParser$Token;

        return 0;
    }

    public boolean setCaps()
    {
        com.google.android.util.AbstractMessageParser$Token r0;

        r0 := @this: com.google.android.util.AbstractMessageParser$Token;

        return 0;
    }

    public java.lang.String toHtml(boolean)
    {
        com.google.android.util.AbstractMessageParser$Token r0;
        boolean z0;
        java.lang.AssertionError $r1;

        r0 := @this: com.google.android.util.AbstractMessageParser$Token;

        z0 := @parameter0: boolean;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("not html");

        throw $r1;
    }
}
