class android.hardware.camera2.ICameraDeviceUser$Stub$Proxy extends java.lang.Object implements android.hardware.camera2.ICameraDeviceUser
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        $r1 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public int cancelRequest(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int createDefaultRequest(int, android.hardware.camera2.impl.CameraMetadataNative) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0, i1, $i2;
        android.hardware.camera2.impl.CameraMetadataNative r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r1 := @parameter1: android.hardware.camera2.impl.CameraMetadataNative;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i2 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label2;

        virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative: void readFromParcel(android.os.Parcel)>(r3);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int createStream(int, int, int, android.view.Surface) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0, i1, i2, i3;
        android.view.Surface r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.Surface;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.Surface: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r5 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i3 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i3;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public int deleteStream(int) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i1;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void disconnect() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int flush() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        int i0;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getCameraInfo(android.hardware.camera2.impl.CameraMetadataNative) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.hardware.camera2.impl.CameraMetadataNative r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i0, $i1;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 := @parameter0: android.hardware.camera2.impl.CameraMetadataNative;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r5 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        $i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if $i1 == 0 goto label2;

        virtualinvoke r1.<android.hardware.camera2.impl.CameraMetadataNative: void readFromParcel(android.os.Parcel)>(r3);

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        return "android.hardware.camera2.ICameraDeviceUser";
    }

    public int submitRequest(android.hardware.camera2.CaptureRequest, boolean) throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.hardware.camera2.CaptureRequest r1;
        boolean z0;
        byte b0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        int i1;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest;

        z0 := @parameter1: boolean;

        b0 = 1;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

     label02:
        if r1 == null goto label07;

     label03:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.hardware.camera2.CaptureRequest: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label04:
        goto label11;

     label05:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(b0);

        $r5 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        i1 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

     label06:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return i1;

     label07:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        goto label11;

     label09:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label10:
        b0 = 0;

        goto label05;

     label11:
        if z0 == 0 goto label10;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public int waitUntilIdle() throws android.os.RemoteException
    {
        android.hardware.camera2.ICameraDeviceUser$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        int i0;
        android.os.IBinder $r4;

        r0 := @this: android.hardware.camera2.ICameraDeviceUser$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.camera2.ICameraDeviceUser");

        $r4 = r0.<android.hardware.camera2.ICameraDeviceUser$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return i0;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
