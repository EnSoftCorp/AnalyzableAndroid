public class com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter extends java.lang.Object implements com.android.internal.util.FileRotator$Rewriter
{
    private final com.android.server.net.NetworkStatsCollection mTemp;
    private final int[] mUids;

    public void <init>(long, int[])
    {
        com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter r0;
        long l0;
        int[] r1;
        com.android.server.net.NetworkStatsCollection $r2;

        r0 := @this: com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter;

        l0 := @parameter0: long;

        r1 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.server.net.NetworkStatsCollection;

        specialinvoke $r2.<com.android.server.net.NetworkStatsCollection: void <init>(long)>(l0);

        r0.<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: com.android.server.net.NetworkStatsCollection mTemp> = $r2;

        r0.<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: int[] mUids> = r1;

        return;
    }

    public void read(java.io.InputStream) throws java.io.IOException
    {
        com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter r0;
        java.io.InputStream r1;
        com.android.server.net.NetworkStatsCollection $r2, $r3, $r5;
        int[] $r4;

        r0 := @this: com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter;

        r1 := @parameter0: java.io.InputStream;

        $r2 = r0.<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: com.android.server.net.NetworkStatsCollection mTemp>;

        virtualinvoke $r2.<com.android.server.net.NetworkStatsCollection: void read(java.io.InputStream)>(r1);

        $r3 = r0.<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: com.android.server.net.NetworkStatsCollection mTemp>;

        virtualinvoke $r3.<com.android.server.net.NetworkStatsCollection: void clearDirty()>();

        $r5 = r0.<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: com.android.server.net.NetworkStatsCollection mTemp>;

        $r4 = r0.<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: int[] mUids>;

        virtualinvoke $r5.<com.android.server.net.NetworkStatsCollection: void removeUids(int[])>($r4);

        return;
    }

    public void reset()
    {
        com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter r0;
        com.android.server.net.NetworkStatsCollection $r1;

        r0 := @this: com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter;

        $r1 = r0.<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: com.android.server.net.NetworkStatsCollection mTemp>;

        virtualinvoke $r1.<com.android.server.net.NetworkStatsCollection: void reset()>();

        return;
    }

    public boolean shouldWrite()
    {
        com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter r0;
        com.android.server.net.NetworkStatsCollection $r1;
        boolean $z0;

        r0 := @this: com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter;

        $r1 = r0.<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: com.android.server.net.NetworkStatsCollection mTemp>;

        $z0 = virtualinvoke $r1.<com.android.server.net.NetworkStatsCollection: boolean isDirty()>();

        return $z0;
    }

    public void write(java.io.OutputStream) throws java.io.IOException
    {
        com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter r0;
        java.io.OutputStream r1;
        java.io.DataOutputStream $r2;
        com.android.server.net.NetworkStatsCollection $r3;

        r0 := @this: com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter;

        r1 := @parameter0: java.io.OutputStream;

        $r3 = r0.<com.android.server.net.NetworkStatsRecorder$RemoveUidRewriter: com.android.server.net.NetworkStatsCollection mTemp>;

        $r2 = new java.io.DataOutputStream;

        specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        virtualinvoke $r3.<com.android.server.net.NetworkStatsCollection: void write(java.io.DataOutputStream)>($r2);

        return;
    }
}
