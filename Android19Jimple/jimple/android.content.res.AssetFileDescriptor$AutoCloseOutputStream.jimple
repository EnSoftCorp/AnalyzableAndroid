public class android.content.res.AssetFileDescriptor$AutoCloseOutputStream extends android.os.ParcelFileDescriptor$AutoCloseOutputStream
{
    private long mRemaining;

    public void <init>(android.content.res.AssetFileDescriptor) throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor$AutoCloseOutputStream r0;
        android.content.res.AssetFileDescriptor r1;
        android.os.ParcelFileDescriptor $r2, $r3;
        long $l0, $l1, $l3, $l5;
        byte $b2;
        int $i4;
        java.io.IOException $r4;

        r0 := @this: android.content.res.AssetFileDescriptor$AutoCloseOutputStream;

        r1 := @parameter0: android.content.res.AssetFileDescriptor;

        $r2 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>();

        specialinvoke r0.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>($r2);

        $r3 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>();

        $l0 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getStartOffset()>();

        $l1 = virtualinvoke $r3.<android.os.ParcelFileDescriptor: long seekTo(long)>($l0);

        $b2 = $l1 cmp 0L;

        if $b2 >= 0 goto label1;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Unable to seek");

        throw $r4;

     label1:
        $l3 = virtualinvoke r1.<android.content.res.AssetFileDescriptor: long getLength()>();

        $i4 = (int) $l3;

        $l5 = (long) $i4;

        r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining> = $l5;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor$AutoCloseOutputStream r0;
        int i0;
        long $l1, $l3, $l5, $l6;
        byte $b2, $b4;

        r0 := @this: android.content.res.AssetFileDescriptor$AutoCloseOutputStream;

        i0 := @parameter0: int;

        $l1 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label2;

        $l3 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void write(int)>(i0);

        $l5 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $l6 = $l5 - 1L;

        r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining> = $l6;

        return;

     label2:
        specialinvoke r0.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void write(int)>(i0);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor$AutoCloseOutputStream r0;
        byte[] r1;
        int i0;
        long $l1, $l3, $l5, $l6, $l8, $l9, $l10, $l11;
        byte $b2, $b4, $b7;

        r0 := @this: android.content.res.AssetFileDescriptor$AutoCloseOutputStream;

        r1 := @parameter0: byte[];

        $l1 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label3;

        $l3 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label1;

        return;

     label1:
        i0 = lengthof r1;

        $l6 = (long) i0;

        $l5 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $b7 = $l6 cmp $l5;

        if $b7 <= 0 goto label2;

        $l11 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        i0 = (int) $l11;

     label2:
        specialinvoke r0.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void write(byte[])>(r1);

        $l9 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $l8 = (long) i0;

        $l10 = $l9 - $l8;

        r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining> = $l10;

        return;

     label3:
        specialinvoke r0.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void write(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor$AutoCloseOutputStream r0;
        byte[] r1;
        int i0, i1;
        long $l2, $l4, $l6, $l7, $l9, $l10, $l11, $l12;
        byte $b3, $b5, $b8;

        r0 := @this: android.content.res.AssetFileDescriptor$AutoCloseOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l2 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label3;

        $l4 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label1;

        return;

     label1:
        $l7 = (long) i1;

        $l6 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $b8 = $l7 cmp $l6;

        if $b8 <= 0 goto label2;

        $l12 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        i1 = (int) $l12;

     label2:
        specialinvoke r0.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        $l10 = r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining>;

        $l9 = (long) i1;

        $l11 = $l10 - $l9;

        r0.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: long mRemaining> = $l11;

        return;

     label3:
        specialinvoke r0.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }
}
