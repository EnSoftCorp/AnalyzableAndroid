class android.view.ViewRootImpl$TakenSurfaceHolder extends com.android.internal.view.BaseSurfaceHolder
{
    final android.view.ViewRootImpl this$0;

    void <init>(android.view.ViewRootImpl)
    {
        android.view.ViewRootImpl$TakenSurfaceHolder r0;
        android.view.ViewRootImpl r1;

        r0 := @this: android.view.ViewRootImpl$TakenSurfaceHolder;

        r1 := @parameter0: android.view.ViewRootImpl;

        r0.<android.view.ViewRootImpl$TakenSurfaceHolder: android.view.ViewRootImpl this$0> = r1;

        specialinvoke r0.<com.android.internal.view.BaseSurfaceHolder: void <init>()>();

        return;
    }

    public boolean isCreating()
    {
        android.view.ViewRootImpl$TakenSurfaceHolder r0;
        android.view.ViewRootImpl $r1;
        boolean $z0;

        r0 := @this: android.view.ViewRootImpl$TakenSurfaceHolder;

        $r1 = r0.<android.view.ViewRootImpl$TakenSurfaceHolder: android.view.ViewRootImpl this$0>;

        $z0 = $r1.<android.view.ViewRootImpl: boolean mIsCreating>;

        return $z0;
    }

    public boolean onAllowLockCanvas()
    {
        android.view.ViewRootImpl$TakenSurfaceHolder r0;
        android.view.ViewRootImpl $r1;
        boolean $z0;

        r0 := @this: android.view.ViewRootImpl$TakenSurfaceHolder;

        $r1 = r0.<android.view.ViewRootImpl$TakenSurfaceHolder: android.view.ViewRootImpl this$0>;

        $z0 = $r1.<android.view.ViewRootImpl: boolean mDrawingAllowed>;

        return $z0;
    }

    public void onRelayoutContainer()
    {
        android.view.ViewRootImpl$TakenSurfaceHolder r0;

        r0 := @this: android.view.ViewRootImpl$TakenSurfaceHolder;

        return;
    }

    public void onUpdateSurface()
    {
        android.view.ViewRootImpl$TakenSurfaceHolder r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.ViewRootImpl$TakenSurfaceHolder;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Shouldn\'t be here");

        throw $r1;
    }

    public void setFixedSize(int, int)
    {
        android.view.ViewRootImpl$TakenSurfaceHolder r0;
        int i0, i1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.view.ViewRootImpl$TakenSurfaceHolder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Currently only support sizing from layout");

        throw $r1;
    }

    public void setFormat(int)
    {
        android.view.ViewRootImpl$TakenSurfaceHolder r0;
        int i0;
        android.view.ViewRootImpl $r1;
        android.view.View $r2;
        com.android.internal.view.RootViewSurfaceTaker $r3;

        r0 := @this: android.view.ViewRootImpl$TakenSurfaceHolder;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.ViewRootImpl$TakenSurfaceHolder: android.view.ViewRootImpl this$0>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.View mView>;

        $r3 = (com.android.internal.view.RootViewSurfaceTaker) $r2;

        interfaceinvoke $r3.<com.android.internal.view.RootViewSurfaceTaker: void setSurfaceFormat(int)>(i0);

        return;
    }

    public void setKeepScreenOn(boolean)
    {
        android.view.ViewRootImpl$TakenSurfaceHolder r0;
        boolean z0;
        android.view.ViewRootImpl $r1;
        android.view.View $r2;
        com.android.internal.view.RootViewSurfaceTaker $r3;

        r0 := @this: android.view.ViewRootImpl$TakenSurfaceHolder;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.view.ViewRootImpl$TakenSurfaceHolder: android.view.ViewRootImpl this$0>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.View mView>;

        $r3 = (com.android.internal.view.RootViewSurfaceTaker) $r2;

        interfaceinvoke $r3.<com.android.internal.view.RootViewSurfaceTaker: void setSurfaceKeepScreenOn(boolean)>(z0);

        return;
    }

    public void setType(int)
    {
        android.view.ViewRootImpl$TakenSurfaceHolder r0;
        int i0;
        android.view.ViewRootImpl $r1;
        android.view.View $r2;
        com.android.internal.view.RootViewSurfaceTaker $r3;

        r0 := @this: android.view.ViewRootImpl$TakenSurfaceHolder;

        i0 := @parameter0: int;

        $r1 = r0.<android.view.ViewRootImpl$TakenSurfaceHolder: android.view.ViewRootImpl this$0>;

        $r2 = $r1.<android.view.ViewRootImpl: android.view.View mView>;

        $r3 = (com.android.internal.view.RootViewSurfaceTaker) $r2;

        interfaceinvoke $r3.<com.android.internal.view.RootViewSurfaceTaker: void setSurfaceType(int)>(i0);

        return;
    }
}
