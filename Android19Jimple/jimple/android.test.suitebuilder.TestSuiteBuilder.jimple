public class android.test.suitebuilder.TestSuiteBuilder extends java.lang.Object
{
    private android.content.Context context;
    private java.lang.String currentClassname;
    private final java.util.Set predicates;
    private junit.framework.TestSuite rootSuite;
    private junit.framework.TestSuite suiteForCurrentClass;
    private java.lang.String suiteName;
    private java.util.List testCases;
    private final android.test.suitebuilder.TestGrouping testGrouping;

    public void <init>(java.lang.Class)
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.lang.Class r1;
        java.lang.String $r2;
        java.lang.ClassLoader $r3;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        specialinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: void <init>(java.lang.String,java.lang.ClassLoader)>($r2, $r3);

        return;
    }

    public void <init>(java.lang.String, java.lang.ClassLoader)
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.lang.String r1;
        java.lang.ClassLoader r2;
        com.android.internal.util.Predicate[] r3;
        android.test.suitebuilder.TestGrouping $r4, $r7;
        java.util.Comparator $r5;
        java.util.HashSet $r6;
        java.util.ArrayList $r8;
        com.android.internal.util.Predicate $r9;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new android.test.suitebuilder.TestGrouping;

        $r5 = <android.test.suitebuilder.TestGrouping: java.util.Comparator SORT_BY_FULLY_QUALIFIED_NAME>;

        specialinvoke $r4.<android.test.suitebuilder.TestGrouping: void <init>(java.util.Comparator)>($r5);

        r0.<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestGrouping testGrouping> = $r4;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r0.<android.test.suitebuilder.TestSuiteBuilder: java.util.Set predicates> = $r6;

        r0.<android.test.suitebuilder.TestSuiteBuilder: java.lang.String suiteName> = r1;

        $r7 = r0.<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestGrouping testGrouping>;

        virtualinvoke $r7.<android.test.suitebuilder.TestGrouping: void setClassLoader(java.lang.ClassLoader)>(r2);

        $r8 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        r0.<android.test.suitebuilder.TestSuiteBuilder: java.util.List testCases> = $r8;

        r3 = newarray (com.android.internal.util.Predicate)[1];

        $r9 = <android.test.suitebuilder.TestPredicates: com.android.internal.util.Predicate REJECT_SUPPRESSED>;

        r3[0] = $r9;

        virtualinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder addRequirements(com.android.internal.util.Predicate[])>(r3);

        return;
    }

    private void addSuiteIfNecessary(java.lang.String)
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.lang.String r1, $r2;
        boolean $z0;
        junit.framework.TestSuite $r3, $r4, $r5;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.test.suitebuilder.TestSuiteBuilder: java.lang.String currentClassname>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        r0.<android.test.suitebuilder.TestSuiteBuilder: java.lang.String currentClassname> = r1;

        $r3 = new junit.framework.TestSuite;

        specialinvoke $r3.<junit.framework.TestSuite: void <init>(java.lang.String)>(r1);

        r0.<android.test.suitebuilder.TestSuiteBuilder: junit.framework.TestSuite suiteForCurrentClass> = $r3;

        $r5 = r0.<android.test.suitebuilder.TestSuiteBuilder: junit.framework.TestSuite rootSuite>;

        $r4 = r0.<android.test.suitebuilder.TestSuiteBuilder: junit.framework.TestSuite suiteForCurrentClass>;

        virtualinvoke $r5.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r4);

     label1:
        return;
    }

    private void addTest(android.test.suitebuilder.TestMethod) throws java.lang.Exception
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        android.test.suitebuilder.TestMethod r1;
        java.lang.String $r2;
        junit.framework.TestSuite $r3;
        junit.framework.TestCase $r4;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: android.test.suitebuilder.TestMethod;

        $r2 = virtualinvoke r1.<android.test.suitebuilder.TestMethod: java.lang.String getEnclosingClassname()>();

        specialinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: void addSuiteIfNecessary(java.lang.String)>($r2);

        $r3 = r0.<android.test.suitebuilder.TestSuiteBuilder: junit.framework.TestSuite suiteForCurrentClass>;

        $r4 = virtualinvoke r1.<android.test.suitebuilder.TestMethod: junit.framework.TestCase createTest()>();

        virtualinvoke $r3.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r4);

        return;
    }

    private void addTest(junit.framework.Test)
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        junit.framework.Test r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        junit.framework.TestSuite $r4;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: junit.framework.Test;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        specialinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: void addSuiteIfNecessary(java.lang.String)>($r3);

        $r4 = r0.<android.test.suitebuilder.TestSuiteBuilder: junit.framework.TestSuite suiteForCurrentClass>;

        virtualinvoke $r4.<junit.framework.TestSuite: void addTest(junit.framework.Test)>(r1);

        return;
    }

    private static java.lang.String parsePackageNameFromClassName(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r1;
    }

    private boolean satisfiesAllPredicates(android.test.suitebuilder.TestMethod)
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        android.test.suitebuilder.TestMethod r1;
        java.util.Iterator r2;
        java.util.Set $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        com.android.internal.util.Predicate $r5;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: android.test.suitebuilder.TestMethod;

        $r3 = r0.<android.test.suitebuilder.TestSuiteBuilder: java.util.Set predicates>;

        r2 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.internal.util.Predicate) $r4;

        $z1 = interfaceinvoke $r5.<com.android.internal.util.Predicate: boolean apply(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public android.test.suitebuilder.TestSuiteBuilder addRequirements(java.util.List)
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.util.List r1;
        java.util.Set $r2;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<android.test.suitebuilder.TestSuiteBuilder: java.util.Set predicates>;

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public final transient android.test.suitebuilder.TestSuiteBuilder addRequirements(com.android.internal.util.Predicate[])
    {
        android.test.suitebuilder.TestSuiteBuilder r0, $r4;
        com.android.internal.util.Predicate[] r1;
        java.util.ArrayList r2, $r3;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: com.android.internal.util.Predicate[];

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = $r3;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r2, r1);

        $r4 = virtualinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder addRequirements(java.util.List)>(r2);

        return $r4;
    }

    public android.test.suitebuilder.TestSuiteBuilder addTestClassByName(java.lang.String, java.lang.String, android.content.Context)
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.lang.String r1, r2;
        android.content.Context r3;
        android.test.AndroidTestRunner r4, $r5;
        java.util.List $r6, $r7;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.Context;

        $r5 = new android.test.AndroidTestRunner;

        specialinvoke $r5.<android.test.AndroidTestRunner: void <init>()>();

        r4 = $r5;

        virtualinvoke r4.<android.test.AndroidTestRunner: void setContext(android.content.Context)>(r3);

        virtualinvoke r4.<android.test.AndroidTestRunner: void setTestClassName(java.lang.String,java.lang.String)>(r1, r2);

        $r6 = r0.<android.test.suitebuilder.TestSuiteBuilder: java.util.List testCases>;

        $r7 = virtualinvoke r4.<android.test.AndroidTestRunner: java.util.List getTestCases()>();

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        return r0;
    }

    public android.test.suitebuilder.TestSuiteBuilder addTestSuite(junit.framework.TestSuite)
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        junit.framework.TestSuite r1;
        java.util.Iterator r2;
        junit.framework.TestCase r3;
        java.util.List $r4, $r6;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: junit.framework.TestSuite;

        $r4 = staticinvoke <android.test.TestCaseUtil: java.util.List getTests(junit.framework.Test,boolean)>(r1, 1);

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (junit.framework.TestCase) $r5;

        $r6 = r0.<android.test.suitebuilder.TestSuiteBuilder: java.util.List testCases>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        return r0;
    }

    public final junit.framework.TestSuite build()
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.lang.Exception r1, $r17;
        junit.framework.TestSuite r2, $r7, $r13, $r18;
        java.util.Iterator r3, r4;
        junit.framework.TestCase r5;
        android.test.suitebuilder.TestMethod r6, $r14;
        java.lang.String $r8, $r20;
        android.test.suitebuilder.TestGrouping $r9;
        java.util.List $r10, $r11, $r12;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        java.lang.Object $r15, $r16;
        android.test.suitebuilder.TestSuiteBuilder$FailedToCreateTests $r19;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        $r7 = new junit.framework.TestSuite;

        $r8 = virtualinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: java.lang.String getSuiteName()>();

        specialinvoke $r7.<junit.framework.TestSuite: void <init>(java.lang.String)>($r8);

        r0.<android.test.suitebuilder.TestSuiteBuilder: junit.framework.TestSuite rootSuite> = $r7;

        r0.<android.test.suitebuilder.TestSuiteBuilder: java.lang.String currentClassname> = null;

     label1:
        $r9 = r0.<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestGrouping testGrouping>;

        $r10 = virtualinvoke $r9.<android.test.suitebuilder.TestGrouping: java.util.List getTests()>();

        r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.test.suitebuilder.TestMethod) $r16;

        $z3 = specialinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: boolean satisfiesAllPredicates(android.test.suitebuilder.TestMethod)>(r6);

        if $z3 == 0 goto label2;

        specialinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: void addTest(android.test.suitebuilder.TestMethod)>(r6);

     label3:
        goto label2;

     label4:
        $r17 := @caughtexception;

        r1 = $r17;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("TestSuiteBuilder", "Failed to create test.", r1);

        $r18 = new junit.framework.TestSuite;

        $r20 = virtualinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: java.lang.String getSuiteName()>();

        specialinvoke $r18.<junit.framework.TestSuite: void <init>(java.lang.String)>($r20);

        r2 = $r18;

        $r19 = new android.test.suitebuilder.TestSuiteBuilder$FailedToCreateTests;

        specialinvoke $r19.<android.test.suitebuilder.TestSuiteBuilder$FailedToCreateTests: void <init>(java.lang.Exception)>(r1);

        virtualinvoke r2.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r19);

        return r2;

     label5:
        $r11 = r0.<android.test.suitebuilder.TestSuiteBuilder: java.util.List testCases>;

        $i0 = interfaceinvoke $r11.<java.util.List: int size()>();

        if $i0 <= 0 goto label8;

        $r12 = r0.<android.test.suitebuilder.TestSuiteBuilder: java.util.List testCases>;

        r4 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (junit.framework.TestCase) $r15;

        $r14 = new android.test.suitebuilder.TestMethod;

        specialinvoke $r14.<android.test.suitebuilder.TestMethod: void <init>(junit.framework.TestCase)>(r5);

        $z2 = specialinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: boolean satisfiesAllPredicates(android.test.suitebuilder.TestMethod)>($r14);

        if $z2 == 0 goto label6;

        specialinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: void addTest(junit.framework.Test)>(r5);

     label7:
        goto label6;

     label8:
        $r13 = r0.<android.test.suitebuilder.TestSuiteBuilder: junit.framework.TestSuite rootSuite>;

        return $r13;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label4;
        catch java.lang.Exception from label5 to label6 with label4;
        catch java.lang.Exception from label6 to label7 with label4;
    }

    public transient android.test.suitebuilder.TestSuiteBuilder excludePackages(java.lang.String[])
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.lang.String[] r1;
        android.test.suitebuilder.TestGrouping $r2;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestGrouping testGrouping>;

        virtualinvoke $r2.<android.test.suitebuilder.TestGrouping: android.test.suitebuilder.TestGrouping removePackagesRecursive(java.lang.String[])>(r1);

        return r0;
    }

    protected java.lang.String getSuiteName()
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.lang.String $r1;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        $r1 = r0.<android.test.suitebuilder.TestSuiteBuilder: java.lang.String suiteName>;

        return $r1;
    }

    protected android.test.suitebuilder.TestGrouping getTestGrouping()
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        android.test.suitebuilder.TestGrouping $r1;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        $r1 = r0.<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestGrouping testGrouping>;

        return $r1;
    }

    public final android.test.suitebuilder.TestSuiteBuilder includeAllPackagesUnderHere()
    {
        android.test.suitebuilder.TestSuiteBuilder r0, $r9;
        java.lang.StackTraceElement[] r1;
        java.lang.String r2, r3, $r8, $r10, $r11, $r12;
        int i0, i1, $i2;
        java.lang.StackTraceElement r4, $r13;
        java.lang.Thread $r5;
        java.lang.Class $r6;
        java.lang.String[] $r7;
        boolean $z0, $z1;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r1 = virtualinvoke $r5.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r6 = class "android/test/suitebuilder/TestSuiteBuilder";

        r2 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        i0 = 0;

     label1:
        i1 = lengthof r1;

        r3 = null;

        if i0 >= i1 goto label2;

        r4 = r1[i0];

        $r10 = virtualinvoke r4.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label3;

        $r11 = "includeAllPackagesUnderHere";

        $r12 = virtualinvoke r4.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label3;

        $i2 = i0 + 1;

        $r13 = r1[$i2];

        r3 = virtualinvoke $r13.<java.lang.StackTraceElement: java.lang.String getClassName()>();

     label2:
        $r7 = newarray (java.lang.String)[1];

        $r8 = staticinvoke <android.test.suitebuilder.TestSuiteBuilder: java.lang.String parsePackageNameFromClassName(java.lang.String)>(r3);

        $r7[0] = $r8;

        $r9 = virtualinvoke r0.<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestSuiteBuilder includePackages(java.lang.String[])>($r7);

        return $r9;

     label3:
        i0 = i0 + 1;

        goto label1;
    }

    public transient android.test.suitebuilder.TestSuiteBuilder includePackages(java.lang.String[])
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.lang.String[] r1;
        android.test.suitebuilder.TestGrouping $r2;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestGrouping testGrouping>;

        virtualinvoke $r2.<android.test.suitebuilder.TestGrouping: android.test.suitebuilder.TestGrouping addPackagesRecursive(java.lang.String[])>(r1);

        return r0;
    }

    public android.test.suitebuilder.TestSuiteBuilder named(java.lang.String)
    {
        android.test.suitebuilder.TestSuiteBuilder r0;
        java.lang.String r1;

        r0 := @this: android.test.suitebuilder.TestSuiteBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<android.test.suitebuilder.TestSuiteBuilder: java.lang.String suiteName> = r1;

        return r0;
    }
}
