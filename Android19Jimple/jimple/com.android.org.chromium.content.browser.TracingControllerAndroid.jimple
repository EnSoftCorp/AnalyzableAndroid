public class com.android.org.chromium.content.browser.TracingControllerAndroid extends java.lang.Object
{
    private final android.content.Context mContext;
    private java.lang.String mFilename;
    private boolean mIsTracing;
    private long mNativeTracingControllerAndroid;
    private boolean mShowToasts;

    private native void nativeDestroy(long);

    private native java.lang.String nativeGetDefaultCategories();

    private native long nativeInit();

    private native boolean nativeStartTracing(long, java.lang.String, java.lang.String, boolean);

    private native void nativeStopTracing(long);

    protected void finalize()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $l0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid>;

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void nativeDestroy(long)>($l2);

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid> = 0L;

     label1:
        return;
    }

    public boolean isTracing()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $z0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mIsTracing>;

        return $z0;
    }

    void logAndToastInfo(java.lang.String)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        java.lang.String r1;
        boolean $z0;
        android.content.Context $r2;
        android.widget.Toast $r3;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TracingControllerAndroid", r1);

        $z0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mShowToasts>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.Context mContext>;

        $r3 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r2, r1, 0);

        virtualinvoke $r3.<android.widget.Toast: void show()>();

     label1:
        return;
    }

    protected void onTracingStopped()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        android.content.Context r1;
        int i0;
        java.lang.Object[] r2;
        boolean $z0;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean isTracing()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TracingControllerAndroid", "Received onTracingStopped, but we aren\'t tracing");

        return;

     label1:
        r1 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.Context mContext>;

        i0 = <com.android.org.chromium.content.R$string: int profiler_stopped_toast>;

        r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String mFilename>;

        r2[0] = $r3;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(i0, r2);

        virtualinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void logAndToastInfo(java.lang.String)>($r4);

        staticinvoke <com.android.org.chromium.content.common.TraceEvent: void setEnabledToMatchNative()>();

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mIsTracing> = 0;

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String mFilename> = null;

        return;
    }
}
