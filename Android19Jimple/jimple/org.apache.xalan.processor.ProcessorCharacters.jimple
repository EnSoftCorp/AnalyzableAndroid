public class org.apache.xalan.processor.ProcessorCharacters extends org.apache.xalan.processor.XSLTElementProcessor
{
    static final long serialVersionUID;
    private java.lang.StringBuffer m_accumulator;
    protected org.w3c.dom.Node m_firstBackPointer;
    private org.apache.xalan.templates.ElemText m_xslTextElement;

    public void <init>()
    {
        org.apache.xalan.processor.ProcessorCharacters r0;
        java.lang.StringBuffer $r1;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        specialinvoke r0.<org.apache.xalan.processor.XSLTElementProcessor: void <init>()>();

        r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer> = null;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator> = $r1;

        return;
    }

    public void characters(org.apache.xalan.processor.StylesheetHandler, char[], int, int) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.ProcessorCharacters r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        char[] r2;
        int i0, i1;
        java.lang.StringBuffer $r3;
        org.w3c.dom.Node $r5, $r7;
        org.apache.xalan.processor.XSLTElementProcessor $r6;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r2, i0, i1);

        $r5 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer>;

        if $r5 != null goto label1;

        $r7 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.w3c.dom.Node getOriginatingNode()>();

        r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer> = $r7;

     label1:
        $r6 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        if r0 == $r6 goto label2;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: void pushProcessor(org.apache.xalan.processor.XSLTElementProcessor)>(r0);

     label2:
        return;
    }

    public void endElement(org.apache.xalan.processor.StylesheetHandler, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.ProcessorCharacters r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        java.lang.String r2, r3, r4;
        org.apache.xalan.processor.XSLTElementProcessor $r5;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        virtualinvoke r0.<org.apache.xalan.processor.ProcessorCharacters: void startNonText(org.apache.xalan.processor.StylesheetHandler)>(r1);

        $r5 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        virtualinvoke $r5.<org.apache.xalan.processor.XSLTElementProcessor: void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor popProcessor()>();

        return;
    }

    void setXslTextElement(org.apache.xalan.templates.ElemText)
    {
        org.apache.xalan.processor.ProcessorCharacters r0;
        org.apache.xalan.templates.ElemText r1;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        r1 := @parameter0: org.apache.xalan.templates.ElemText;

        r0.<org.apache.xalan.processor.ProcessorCharacters: org.apache.xalan.templates.ElemText m_xslTextElement> = r1;

        return;
    }

    public void startNonText(org.apache.xalan.processor.StylesheetHandler) throws org.xml.sax.SAXException
    {
        org.apache.xalan.processor.ProcessorCharacters r0;
        org.apache.xalan.processor.StylesheetHandler r1;
        int i0;
        org.apache.xalan.templates.ElemTextLiteral r2, $r8;
        javax.xml.transform.TransformerException r3, $r21;
        boolean z0, $z1, $z2;
        char[] r4;
        org.apache.xalan.processor.XSLTElementProcessor $r5;
        java.lang.StringBuffer $r6, $r7, $r12, $r17;
        org.w3c.dom.Node $r9;
        org.apache.xml.utils.SAXSourceLocator $r10;
        org.xml.sax.helpers.NamespaceSupport $r11;
        org.apache.xalan.templates.ElemText $r13, $r16, $r18;
        org.apache.xalan.templates.ElemTemplateElement $r15;
        org.xml.sax.SAXException $r20;

        r0 := @this: org.apache.xalan.processor.ProcessorCharacters;

        r1 := @parameter0: org.apache.xalan.processor.StylesheetHandler;

        $r5 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()>();

        if r0 != $r5 goto label1;

        virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor popProcessor()>();

     label1:
        $r6 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        i0 = virtualinvoke $r6.<java.lang.StringBuffer: int length()>();

        if i0 <= 0 goto label2;

        $r18 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.apache.xalan.templates.ElemText m_xslTextElement>;

        if $r18 != null goto label3;

        $r17 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        $z2 = staticinvoke <org.apache.xml.utils.XMLCharacterRecognizer: boolean isWhiteSpace(java.lang.StringBuffer)>($r17);

        if $z2 == 0 goto label3;

     label2:
        $z1 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: boolean isSpacePreserve()>();

        if $z1 == 0 goto label7;

     label3:
        $r8 = new org.apache.xalan.templates.ElemTextLiteral;

        specialinvoke $r8.<org.apache.xalan.templates.ElemTextLiteral: void <init>()>();

        r2 = $r8;

        $r9 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer>;

        virtualinvoke r2.<org.apache.xalan.templates.ElemTextLiteral: void setDOMBackPointer(org.w3c.dom.Node)>($r9);

        $r10 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()>();

        virtualinvoke r2.<org.apache.xalan.templates.ElemTextLiteral: void setLocaterInfo(javax.xml.transform.SourceLocator)>($r10);

     label4:
        $r11 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()>();

        virtualinvoke r2.<org.apache.xalan.templates.ElemTextLiteral: void setPrefixes(org.xml.sax.helpers.NamespaceSupport)>($r11);

     label5:
        $r13 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.apache.xalan.templates.ElemText m_xslTextElement>;

        if $r13 == null goto label9;

        $r16 = r0.<org.apache.xalan.processor.ProcessorCharacters: org.apache.xalan.templates.ElemText m_xslTextElement>;

        z0 = virtualinvoke $r16.<org.apache.xalan.templates.ElemText: boolean getDisableOutputEscaping()>();

     label6:
        virtualinvoke r2.<org.apache.xalan.templates.ElemTextLiteral: void setDisableOutputEscaping(boolean)>(z0);

        virtualinvoke r2.<org.apache.xalan.templates.ElemTextLiteral: void setPreserveSpace(boolean)>(1);

        r4 = newarray (char)[i0];

        $r12 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        virtualinvoke $r12.<java.lang.StringBuffer: void getChars(int,int,char[],int)>(0, i0, r4, 0);

        virtualinvoke r2.<org.apache.xalan.templates.ElemTextLiteral: void setChars(char[])>(r4);

        $r15 = virtualinvoke r1.<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.ElemTemplateElement getElemTemplateElement()>();

        virtualinvoke $r15.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label7:
        $r7 = r0.<org.apache.xalan.processor.ProcessorCharacters: java.lang.StringBuffer m_accumulator>;

        virtualinvoke $r7.<java.lang.StringBuffer: void setLength(int)>(0);

        r0.<org.apache.xalan.processor.ProcessorCharacters: org.w3c.dom.Node m_firstBackPointer> = null;

        return;

     label8:
        $r21 := @caughtexception;

        r3 = $r21;

        $r20 = new org.xml.sax.SAXException;

        specialinvoke $r20.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(r3);

        throw $r20;

     label9:
        z0 = 0;

        goto label6;

        catch javax.xml.transform.TransformerException from label4 to label5 with label8;
    }

    public static void <clinit>()
    {
        <org.apache.xalan.processor.ProcessorCharacters: long serialVersionUID> = 8632900007814162650L;

        return;
    }
}
