public class com.android.internal.widget.SlidingTab extends android.view.ViewGroup
{
    private static final int ANIM_DURATION;
    private static final int ANIM_TARGET_TIME;
    private static final boolean DBG;
    private static final int HORIZONTAL;
    private static final java.lang.String LOG_TAG;
    private static final float THRESHOLD;
    private static final int TRACKING_MARGIN;
    private static final int VERTICAL;
    private static final long VIBRATE_LONG;
    private static final long VIBRATE_SHORT;
    private boolean mAnimating;
    private final android.view.animation.Animation$AnimationListener mAnimationDoneListener;
    private com.android.internal.widget.SlidingTab$Slider mCurrentSlider;
    private final float mDensity;
    private int mGrabbedState;
    private boolean mHoldLeftOnTransition;
    private boolean mHoldRightOnTransition;
    private final com.android.internal.widget.SlidingTab$Slider mLeftSlider;
    private com.android.internal.widget.SlidingTab$OnTriggerListener mOnTriggerListener;
    private final int mOrientation;
    private com.android.internal.widget.SlidingTab$Slider mOtherSlider;
    private final com.android.internal.widget.SlidingTab$Slider mRightSlider;
    private float mThreshold;
    private final android.graphics.Rect mTmpRect;
    private boolean mTracking;
    private boolean mTriggered;
    private android.os.Vibrator mVibrator;

    public void <init>(android.content.Context)
    {
        com.android.internal.widget.SlidingTab r0;
        android.content.Context r1;

        r0 := @this: com.android.internal.widget.SlidingTab;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.internal.widget.SlidingTab r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        com.android.internal.widget.SlidingTab$1 $r4;
        android.graphics.Rect $r5;
        int[] $r6;
        int $i0;
        android.content.res.Resources $r7;
        android.util.DisplayMetrics $r8;
        float $f0;
        com.android.internal.widget.SlidingTab$Slider $r9, $r10;

        r0 := @this: com.android.internal.widget.SlidingTab;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.internal.widget.SlidingTab: boolean mHoldLeftOnTransition> = 1;

        r0.<com.android.internal.widget.SlidingTab: boolean mHoldRightOnTransition> = 1;

        r0.<com.android.internal.widget.SlidingTab: int mGrabbedState> = 0;

        r0.<com.android.internal.widget.SlidingTab: boolean mTriggered> = 0;

        $r4 = new com.android.internal.widget.SlidingTab$1;

        specialinvoke $r4.<com.android.internal.widget.SlidingTab$1: void <init>(com.android.internal.widget.SlidingTab)>(r0);

        r0.<com.android.internal.widget.SlidingTab: android.view.animation.Animation$AnimationListener mAnimationDoneListener> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.widget.SlidingTab: android.graphics.Rect mTmpRect> = $r5;

        $r6 = <com.android.internal.R$styleable: int[] SlidingTab>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r2, $r6);

        $i0 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(0, 0);

        r0.<com.android.internal.widget.SlidingTab: int mOrientation> = $i0;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $r7 = virtualinvoke r0.<com.android.internal.widget.SlidingTab: android.content.res.Resources getResources()>();

        $r8 = virtualinvoke $r7.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r8.<android.util.DisplayMetrics: float density>;

        r0.<com.android.internal.widget.SlidingTab: float mDensity> = $f0;

        $r9 = new com.android.internal.widget.SlidingTab$Slider;

        specialinvoke $r9.<com.android.internal.widget.SlidingTab$Slider: void <init>(android.view.ViewGroup,int,int,int)>(r0, 17302488, 17302471, 17302502);

        r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider> = $r9;

        $r10 = new com.android.internal.widget.SlidingTab$Slider;

        specialinvoke $r10.<com.android.internal.widget.SlidingTab$Slider: void <init>(android.view.ViewGroup,int,int,int)>(r0, 17302497, 17302480, 17302502);

        r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider> = $r10;

        return;
    }

    static void access$000(com.android.internal.widget.SlidingTab)
    {
        com.android.internal.widget.SlidingTab r0;

        r0 := @parameter0: com.android.internal.widget.SlidingTab;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void onAnimationDone()>();

        return;
    }

    static boolean access$202(com.android.internal.widget.SlidingTab, boolean)
    {
        com.android.internal.widget.SlidingTab r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.widget.SlidingTab;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.widget.SlidingTab: boolean mAnimating> = z0;

        return z0;
    }

    static void access$300(com.android.internal.widget.SlidingTab)
    {
        com.android.internal.widget.SlidingTab r0;

        r0 := @parameter0: com.android.internal.widget.SlidingTab;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void resetView()>();

        return;
    }

    static android.view.animation.Animation$AnimationListener access$400(com.android.internal.widget.SlidingTab)
    {
        com.android.internal.widget.SlidingTab r0;
        android.view.animation.Animation$AnimationListener $r1;

        r0 := @parameter0: com.android.internal.widget.SlidingTab;

        $r1 = r0.<com.android.internal.widget.SlidingTab: android.view.animation.Animation$AnimationListener mAnimationDoneListener>;

        return $r1;
    }

    static com.android.internal.widget.SlidingTab$Slider access$500(com.android.internal.widget.SlidingTab)
    {
        com.android.internal.widget.SlidingTab r0;
        com.android.internal.widget.SlidingTab$Slider $r1;

        r0 := @parameter0: com.android.internal.widget.SlidingTab;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        return $r1;
    }

    static com.android.internal.widget.SlidingTab$Slider access$600(com.android.internal.widget.SlidingTab)
    {
        com.android.internal.widget.SlidingTab r0;
        com.android.internal.widget.SlidingTab$Slider $r1;

        r0 := @parameter0: com.android.internal.widget.SlidingTab;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        return $r1;
    }

    private void cancelGrab()
    {
        com.android.internal.widget.SlidingTab r0;
        com.android.internal.widget.SlidingTab$Slider $r1, $r2, $r3;

        r0 := @this: com.android.internal.widget.SlidingTab;

        r0.<com.android.internal.widget.SlidingTab: boolean mTracking> = 0;

        r0.<com.android.internal.widget.SlidingTab: boolean mTriggered> = 0;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mOtherSlider>;

        virtualinvoke $r1.<com.android.internal.widget.SlidingTab$Slider: void show(boolean)>(1);

        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        virtualinvoke $r2.<com.android.internal.widget.SlidingTab$Slider: void reset(boolean)>(0);

        $r3 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        virtualinvoke $r3.<com.android.internal.widget.SlidingTab$Slider: void hideTarget()>();

        r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider> = null;

        r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mOtherSlider> = null;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void setGrabbedState(int)>(0);

        return;
    }

    private void dispatchTriggerEvent(int)
    {
        com.android.internal.widget.SlidingTab r0;
        int i0;
        com.android.internal.widget.SlidingTab$OnTriggerListener $r1, $r2;

        r0 := @this: com.android.internal.widget.SlidingTab;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void vibrate(long)>(40L);

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$OnTriggerListener mOnTriggerListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$OnTriggerListener mOnTriggerListener>;

        interfaceinvoke $r2.<com.android.internal.widget.SlidingTab$OnTriggerListener: void onTrigger(android.view.View,int)>(r0, i0);

     label1:
        return;
    }

    private boolean isHorizontal()
    {
        com.android.internal.widget.SlidingTab r0;
        int $i0;

        r0 := @this: com.android.internal.widget.SlidingTab;

        $i0 = r0.<com.android.internal.widget.SlidingTab: int mOrientation>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void log(java.lang.String)
    {
        com.android.internal.widget.SlidingTab r0;
        java.lang.String r1;

        r0 := @this: com.android.internal.widget.SlidingTab;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SlidingTab", r1);

        return;
    }

    private void moveHandle(float, float)
    {
        com.android.internal.widget.SlidingTab r0;
        float f0, f1;
        android.widget.ImageView r1;
        android.widget.TextView r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.android.internal.widget.SlidingTab$Slider $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.internal.widget.SlidingTab;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r3 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        r1 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>($r3);

        $r4 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        r2 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.TextView access$700(com.android.internal.widget.SlidingTab$Slider)>($r4);

        $z0 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z0 == 0 goto label2;

        $i6 = (int) f0;

        $i9 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i8 = $i6 - $i9;

        $i11 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i10 = $i11 / 2;

        i1 = $i8 - $i10;

        virtualinvoke r1.<android.view.View: void offsetLeftAndRight(int)>(i1);

        virtualinvoke r2.<android.view.View: void offsetLeftAndRight(int)>(i1);

     label1:
        virtualinvoke r0.<com.android.internal.widget.SlidingTab: void invalidate()>();

        return;

     label2:
        $i2 = (int) f1;

        $i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i4 = $i2 - $i3;

        $i5 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i7 = $i5 / 2;

        i0 = $i4 - $i7;

        virtualinvoke r1.<android.view.View: void offsetTopAndBottom(int)>(i0);

        virtualinvoke r2.<android.view.View: void offsetTopAndBottom(int)>(i0);

        goto label1;
    }

    private void onAnimationDone()
    {
        com.android.internal.widget.SlidingTab r0;

        r0 := @this: com.android.internal.widget.SlidingTab;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void resetView()>();

        r0.<com.android.internal.widget.SlidingTab: boolean mAnimating> = 0;

        return;
    }

    private void resetView()
    {
        com.android.internal.widget.SlidingTab r0;
        com.android.internal.widget.SlidingTab$Slider $r1, $r2;

        r0 := @this: com.android.internal.widget.SlidingTab;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        virtualinvoke $r1.<com.android.internal.widget.SlidingTab$Slider: void reset(boolean)>(0);

        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        virtualinvoke $r2.<com.android.internal.widget.SlidingTab$Slider: void reset(boolean)>(0);

        return;
    }

    private void setGrabbedState(int)
    {
        com.android.internal.widget.SlidingTab r0;
        int i0, $i1, $i2;
        com.android.internal.widget.SlidingTab$OnTriggerListener $r1, $r2;

        r0 := @this: com.android.internal.widget.SlidingTab;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.internal.widget.SlidingTab: int mGrabbedState>;

        if i0 == $i1 goto label1;

        r0.<com.android.internal.widget.SlidingTab: int mGrabbedState> = i0;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$OnTriggerListener mOnTriggerListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$OnTriggerListener mOnTriggerListener>;

        $i2 = r0.<com.android.internal.widget.SlidingTab: int mGrabbedState>;

        interfaceinvoke $r2.<com.android.internal.widget.SlidingTab$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>(r0, $i2);

     label1:
        return;
    }

    private void vibrate(long)
    {
        com.android.internal.widget.SlidingTab r0;
        long l0;
        boolean z0;
        java.lang.Throwable r1, $r9;
        android.content.Context $r2, $r6;
        android.content.ContentResolver $r3;
        int $i1;
        android.os.Vibrator $r4, $r5, $r8;
        java.lang.Object $r7;

        r0 := @this: com.android.internal.widget.SlidingTab;

        l0 := @parameter0: long;

        z0 = 1;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.internal.widget.SlidingTab: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r3, "haptic_feedback_enabled", 1, -2);

        if $i1 == 0 goto label6;

     label2:
        if z0 == 0 goto label5;

     label3:
        $r4 = r0.<com.android.internal.widget.SlidingTab: android.os.Vibrator mVibrator>;

        if $r4 != null goto label4;

        $r6 = virtualinvoke r0.<com.android.internal.widget.SlidingTab: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("vibrator");

        $r8 = (android.os.Vibrator) $r7;

        r0.<com.android.internal.widget.SlidingTab: android.os.Vibrator mVibrator> = $r8;

     label4:
        $r5 = r0.<com.android.internal.widget.SlidingTab: android.os.Vibrator mVibrator>;

        virtualinvoke $r5.<android.os.Vibrator: void vibrate(long)>(l0);

     label5:
        exitmonitor r0;

        return;

     label6:
        z0 = 0;

        goto label2;

     label7:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    private boolean withinView(float, float, android.view.View)
    {
        com.android.internal.widget.SlidingTab r0;
        float f0, f1, $f2, $f3;
        android.view.View r1;
        boolean $z0, $z1;
        byte $b0, $b3, $b4, $b7;
        int $i1, $i2, $i5, $i6;

        r0 := @this: com.android.internal.widget.SlidingTab;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: android.view.View;

        $z0 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z0 == 0 goto label1;

        $b4 = f1 cmpl -50.0F;

        if $b4 <= 0 goto label1;

        $i5 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i6 = 50 + $i5;

        $f3 = (float) $i6;

        $b7 = f1 cmpg $f3;

        if $b7 < 0 goto label2;

     label1:
        $z1 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z1 != 0 goto label3;

        $b0 = f0 cmpl -50.0F;

        if $b0 <= 0 goto label3;

        $i1 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i2 = 50 + $i1;

        $f2 = (float) $i2;

        $b3 = f0 cmpg $f2;

        if $b3 >= 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.SlidingTab r0;
        android.view.MotionEvent r1;
        float f0, f1, f2, f3;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        com.android.internal.widget.SlidingTab$Slider $r2, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        android.widget.ImageView $r3, $r6;
        android.graphics.Rect $r4, $r5, $r8, $r9;

        r0 := @this: com.android.internal.widget.SlidingTab;

        r1 := @parameter0: android.view.MotionEvent;

        f0 = 0.6666667F;

        f1 = 0.3333333F;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z2 = r0.<com.android.internal.widget.SlidingTab: boolean mAnimating>;

        if $z2 == 0 goto label01;

        return 0;

     label01:
        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        $r3 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>($r2);

        $r4 = r0.<com.android.internal.widget.SlidingTab: android.graphics.Rect mTmpRect>;

        virtualinvoke $r3.<android.view.View: void getHitRect(android.graphics.Rect)>($r4);

        $r5 = r0.<com.android.internal.widget.SlidingTab: android.graphics.Rect mTmpRect>;

        $i1 = (int) f2;

        $i2 = (int) f3;

        z0 = virtualinvoke $r5.<android.graphics.Rect: boolean contains(int,int)>($i1, $i2);

        $r7 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        $r6 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>($r7);

        $r8 = r0.<com.android.internal.widget.SlidingTab: android.graphics.Rect mTmpRect>;

        virtualinvoke $r6.<android.view.View: void getHitRect(android.graphics.Rect)>($r8);

        $r9 = r0.<com.android.internal.widget.SlidingTab: android.graphics.Rect mTmpRect>;

        $i4 = (int) f2;

        $i3 = (int) f3;

        z1 = virtualinvoke $r9.<android.graphics.Rect: boolean contains(int,int)>($i4, $i3);

        $z3 = r0.<com.android.internal.widget.SlidingTab: boolean mTracking>;

        if $z3 != 0 goto label02;

        if z0 != 0 goto label02;

        if z1 != 0 goto label02;

        return 0;

     label02:
        tableswitch(i0)
        {
            case 0: goto label04;
            default: goto label03;
        };

     label03:
        return 1;

     label04:
        r0.<com.android.internal.widget.SlidingTab: boolean mTracking> = 1;

        r0.<com.android.internal.widget.SlidingTab: boolean mTriggered> = 0;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void vibrate(long)>(30L);

        if z0 == 0 goto label08;

        $r13 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider> = $r13;

        $r14 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mOtherSlider> = $r14;

        $z5 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z5 == 0 goto label07;

     label05:
        r0.<com.android.internal.widget.SlidingTab: float mThreshold> = f0;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void setGrabbedState(int)>(1);

     label06:
        $r12 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        virtualinvoke $r12.<com.android.internal.widget.SlidingTab$Slider: void setState(int)>(1);

        $r15 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        virtualinvoke $r15.<com.android.internal.widget.SlidingTab$Slider: void showTarget()>();

        $r16 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mOtherSlider>;

        virtualinvoke $r16.<com.android.internal.widget.SlidingTab$Slider: void hide()>();

        goto label03;

     label07:
        f0 = 0.3333333F;

        goto label05;

     label08:
        $r11 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider> = $r11;

        $r10 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mOtherSlider> = $r10;

        $z4 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z4 == 0 goto label10;

     label09:
        r0.<com.android.internal.widget.SlidingTab: float mThreshold> = f1;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void setGrabbedState(int)>(2);

        goto label06;

     label10:
        f1 = 0.6666667F;

        goto label09;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.internal.widget.SlidingTab r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, i3;
        com.android.internal.widget.SlidingTab$Slider r1, r2;
        byte b4, b5;

        r0 := @this: com.android.internal.widget.SlidingTab;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        if z0 != 0 goto label1;

        return;

     label1:
        r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        $z1 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z1 == 0 goto label4;

        b4 = 0;

     label2:
        virtualinvoke r1.<com.android.internal.widget.SlidingTab$Slider: void layout(int,int,int,int,int)>(i0, i1, i2, i3, b4);

        r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        $z2 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z2 == 0 goto label5;

        b5 = 1;

     label3:
        virtualinvoke r2.<com.android.internal.widget.SlidingTab$Slider: void layout(int,int,int,int,int)>(i0, i1, i2, i3, b5);

        return;

     label4:
        b4 = 3;

        goto label2;

     label5:
        b5 = 2;

        goto label3;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.widget.SlidingTab r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i12, $i13;
        com.android.internal.widget.SlidingTab$Slider $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.internal.widget.SlidingTab;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        virtualinvoke $r1.<com.android.internal.widget.SlidingTab$Slider: void measure()>();

        $r3 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        virtualinvoke $r3.<com.android.internal.widget.SlidingTab$Slider: void measure()>();

        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        i4 = virtualinvoke $r2.<com.android.internal.widget.SlidingTab$Slider: int getTabWidth()>();

        $r4 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        i5 = virtualinvoke $r4.<com.android.internal.widget.SlidingTab$Slider: int getTabWidth()>();

        $r5 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        i6 = virtualinvoke $r5.<com.android.internal.widget.SlidingTab$Slider: int getTabHeight()>();

        $r6 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        i7 = virtualinvoke $r6.<com.android.internal.widget.SlidingTab$Slider: int getTabHeight()>();

        $z0 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z0 == 0 goto label2;

        $i13 = i4 + i5;

        i8 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i13);

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(i6, i7);

     label1:
        virtualinvoke r0.<com.android.internal.widget.SlidingTab: void setMeasuredDimension(int,int)>(i8, i9);

        return;

     label2:
        i8 = staticinvoke <java.lang.Math: int max(int,int)>(i4, i7);

        $i12 = i6 + i7;

        i9 = staticinvoke <java.lang.Math: int max(int,int)>(i3, $i12);

        goto label1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.widget.SlidingTab r0;
        android.view.MotionEvent r1;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int i0, i1;
        float f0, f1, f2, f3, f4, $f5;
        byte b2, $b3, $b4, $b5, $b6;
        com.android.internal.widget.SlidingTab$Slider $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.android.internal.widget.SlidingTab;

        r1 := @parameter0: android.view.MotionEvent;

        $z5 = r0.<com.android.internal.widget.SlidingTab: boolean mTracking>;

        if $z5 == 0 goto label01;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        tableswitch(i0)
        {
            case 1: goto label24;
            case 2: goto label04;
            case 3: goto label24;
            default: goto label01;
        };

     label01:
        $z6 = r0.<com.android.internal.widget.SlidingTab: boolean mTracking>;

        if $z6 != 0 goto label02;

        z1 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        z0 = 0;

        if z1 == 0 goto label03;

     label02:
        z0 = 1;

     label03:
        return z0;

     label04:
        $z7 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean withinView(float,float,android.view.View)>(f0, f1, r0);

        if $z7 == 0 goto label24;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void moveHandle(float,float)>(f0, f1);

        $z9 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z9 == 0 goto label11;

        f2 = f0;

     label05:
        f3 = r0.<com.android.internal.widget.SlidingTab: float mThreshold>;

        $z8 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z8 == 0 goto label12;

        i1 = virtualinvoke r0.<com.android.internal.widget.SlidingTab: int getWidth()>();

     label06:
        $f5 = (float) i1;

        f4 = f3 * $f5;

        $z10 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z10 == 0 goto label16;

        $r8 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        $r5 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        if $r8 != $r5 goto label14;

        $b5 = f2 cmpl f4;

        if $b5 <= 0 goto label13;

        z2 = 1;

     label07:
        $z11 = r0.<com.android.internal.widget.SlidingTab: boolean mTriggered>;

        if $z11 != 0 goto label01;

        if z2 == 0 goto label01;

        r0.<com.android.internal.widget.SlidingTab: boolean mTriggered> = 1;

        r0.<com.android.internal.widget.SlidingTab: boolean mTracking> = 0;

        $r4 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        virtualinvoke $r4.<com.android.internal.widget.SlidingTab$Slider: void setState(int)>(2);

        $r7 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        $r6 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        if $r7 != $r6 goto label21;

        z3 = 1;

     label08:
        if z3 == 0 goto label22;

        b2 = 1;

     label09:
        specialinvoke r0.<com.android.internal.widget.SlidingTab: void dispatchTriggerEvent(int)>(b2);

        if z3 == 0 goto label23;

        z4 = r0.<com.android.internal.widget.SlidingTab: boolean mHoldLeftOnTransition>;

     label10:
        virtualinvoke r0.<com.android.internal.widget.SlidingTab: void startAnimating(boolean)>(z4);

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void setGrabbedState(int)>(0);

        goto label01;

     label11:
        f2 = f1;

        goto label05;

     label12:
        i1 = virtualinvoke r0.<com.android.internal.widget.SlidingTab: int getHeight()>();

        goto label06;

     label13:
        z2 = 0;

        goto label07;

     label14:
        $b6 = f2 cmpg f4;

        if $b6 >= 0 goto label15;

        z2 = 1;

        goto label07;

     label15:
        z2 = 0;

        goto label07;

     label16:
        $r3 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        if $r3 != $r2 goto label19;

        $b4 = f2 cmpg f4;

        if $b4 >= 0 goto label18;

        z2 = 1;

     label17:
        goto label07;

     label18:
        z2 = 0;

        goto label17;

     label19:
        $b3 = f2 cmpl f4;

        if $b3 <= 0 goto label20;

        z2 = 1;

        goto label17;

     label20:
        z2 = 0;

        goto label17;

     label21:
        z3 = 0;

        goto label08;

     label22:
        b2 = 2;

        goto label09;

     label23:
        z4 = r0.<com.android.internal.widget.SlidingTab: boolean mHoldRightOnTransition>;

        goto label10;

     label24:
        specialinvoke r0.<com.android.internal.widget.SlidingTab: void cancelGrab()>();

        goto label01;
    }

    protected void onVisibilityChanged(android.view.View, int)
    {
        com.android.internal.widget.SlidingTab r0;
        android.view.View r1;
        int i0, $i1;

        r0 := @this: com.android.internal.widget.SlidingTab;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        specialinvoke r0.<android.view.ViewGroup: void onVisibilityChanged(android.view.View,int)>(r1, i0);

        if r1 != r0 goto label1;

        if i0 == 0 goto label1;

        $i1 = r0.<com.android.internal.widget.SlidingTab: int mGrabbedState>;

        if $i1 == 0 goto label1;

        specialinvoke r0.<com.android.internal.widget.SlidingTab: void cancelGrab()>();

     label1:
        return;
    }

    public void reset(boolean)
    {
        com.android.internal.widget.SlidingTab r0;
        boolean z0;
        com.android.internal.widget.SlidingTab$Slider $r1, $r2;

        r0 := @this: com.android.internal.widget.SlidingTab;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        virtualinvoke $r1.<com.android.internal.widget.SlidingTab$Slider: void reset(boolean)>(z0);

        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        virtualinvoke $r2.<com.android.internal.widget.SlidingTab$Slider: void reset(boolean)>(z0);

        if z0 != 0 goto label1;

        r0.<com.android.internal.widget.SlidingTab: boolean mAnimating> = 0;

     label1:
        return;
    }

    public void setHoldAfterTrigger(boolean, boolean)
    {
        com.android.internal.widget.SlidingTab r0;
        boolean z0, z1;

        r0 := @this: com.android.internal.widget.SlidingTab;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r0.<com.android.internal.widget.SlidingTab: boolean mHoldLeftOnTransition> = z0;

        r0.<com.android.internal.widget.SlidingTab: boolean mHoldRightOnTransition> = z1;

        return;
    }

    public void setLeftHintText(int)
    {
        com.android.internal.widget.SlidingTab r0;
        int i0;
        boolean $z0;
        com.android.internal.widget.SlidingTab$Slider $r1;

        r0 := @this: com.android.internal.widget.SlidingTab;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        virtualinvoke $r1.<com.android.internal.widget.SlidingTab$Slider: void setHintText(int)>(i0);

     label1:
        return;
    }

    public void setLeftTabResources(int, int, int, int)
    {
        com.android.internal.widget.SlidingTab r0;
        int i0, i1, i2, i3;
        com.android.internal.widget.SlidingTab$Slider $r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.widget.SlidingTab;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        virtualinvoke $r1.<com.android.internal.widget.SlidingTab$Slider: void setIcon(int)>(i0);

        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        virtualinvoke $r2.<com.android.internal.widget.SlidingTab$Slider: void setTarget(int)>(i1);

        $r3 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        virtualinvoke $r3.<com.android.internal.widget.SlidingTab$Slider: void setBarBackgroundResource(int)>(i2);

        $r4 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        virtualinvoke $r4.<com.android.internal.widget.SlidingTab$Slider: void setTabBackgroundResource(int)>(i3);

        $r5 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mLeftSlider>;

        virtualinvoke $r5.<com.android.internal.widget.SlidingTab$Slider: void updateDrawableStates()>();

        return;
    }

    public void setOnTriggerListener(com.android.internal.widget.SlidingTab$OnTriggerListener)
    {
        com.android.internal.widget.SlidingTab r0;
        com.android.internal.widget.SlidingTab$OnTriggerListener r1;

        r0 := @this: com.android.internal.widget.SlidingTab;

        r1 := @parameter0: com.android.internal.widget.SlidingTab$OnTriggerListener;

        r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$OnTriggerListener mOnTriggerListener> = r1;

        return;
    }

    public void setRightHintText(int)
    {
        com.android.internal.widget.SlidingTab r0;
        int i0;
        boolean $z0;
        com.android.internal.widget.SlidingTab$Slider $r1;

        r0 := @this: com.android.internal.widget.SlidingTab;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        virtualinvoke $r1.<com.android.internal.widget.SlidingTab$Slider: void setHintText(int)>(i0);

     label1:
        return;
    }

    public void setRightTabResources(int, int, int, int)
    {
        com.android.internal.widget.SlidingTab r0;
        int i0, i1, i2, i3;
        com.android.internal.widget.SlidingTab$Slider $r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.widget.SlidingTab;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        virtualinvoke $r1.<com.android.internal.widget.SlidingTab$Slider: void setIcon(int)>(i0);

        $r2 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        virtualinvoke $r2.<com.android.internal.widget.SlidingTab$Slider: void setTarget(int)>(i1);

        $r3 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        virtualinvoke $r3.<com.android.internal.widget.SlidingTab$Slider: void setBarBackgroundResource(int)>(i2);

        $r4 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        virtualinvoke $r4.<com.android.internal.widget.SlidingTab$Slider: void setTabBackgroundResource(int)>(i3);

        $r5 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        virtualinvoke $r5.<com.android.internal.widget.SlidingTab$Slider: void updateDrawableStates()>();

        return;
    }

    public void setVisibility(int)
    {
        com.android.internal.widget.SlidingTab r0;
        int i0, $i1;

        r0 := @this: com.android.internal.widget.SlidingTab;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.android.internal.widget.SlidingTab: int getVisibility()>();

        if i0 == $i1 goto label1;

        if i0 != 4 goto label1;

        virtualinvoke r0.<com.android.internal.widget.SlidingTab: void reset(boolean)>(0);

     label1:
        specialinvoke r0.<android.view.ViewGroup: void setVisibility(int)>(i0);

        return;
    }

    void startAnimating(boolean)
    {
        com.android.internal.widget.SlidingTab r0;
        boolean z0, $z1;
        com.android.internal.widget.SlidingTab$Slider r1, $r9, $r18;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.view.animation.TranslateAnimation r2, r3, $r11, $r13;
        com.android.internal.widget.SlidingTab$2 r4, $r15;
        android.widget.ImageView $r6, $r7, $r8, $r14, $r16, $r17;
        float $f0, $f1, $f2, $f3;
        android.view.animation.LinearInterpolator $r10, $r12;

        r0 := @this: com.android.internal.widget.SlidingTab;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.widget.SlidingTab: boolean mAnimating> = 1;

        r1 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mCurrentSlider>;

        $z1 = specialinvoke r0.<com.android.internal.widget.SlidingTab: boolean isHorizontal()>();

        if $z1 == 0 goto label06;

        $r14 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>(r1);

        i7 = virtualinvoke $r14.<android.widget.ImageView: int getRight()>();

        $r17 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>(r1);

        i8 = virtualinvoke $r17.<android.widget.ImageView: int getWidth()>();

        $r16 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>(r1);

        i10 = virtualinvoke $r16.<android.widget.ImageView: int getLeft()>();

        i9 = virtualinvoke r0.<com.android.internal.widget.SlidingTab: int getWidth()>();

        if z0 == 0 goto label04;

        i11 = 0;

     label01:
        $r18 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        if r1 != $r18 goto label05;

        $i19 = i7 + i9;

        $i18 = $i19 - i11;

        i6 = neg $i18;

     label02:
        i5 = 0;

     label03:
        $r11 = new android.view.animation.TranslateAnimation;

        $f0 = (float) i6;

        $f1 = (float) i5;

        specialinvoke $r11.<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>(0.0F, $f0, 0.0F, $f1);

        r2 = $r11;

        virtualinvoke r2.<android.view.animation.Animation: void setDuration(long)>(250L);

        $r10 = new android.view.animation.LinearInterpolator;

        specialinvoke $r10.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke r2.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r10);

        virtualinvoke r2.<android.view.animation.Animation: void setFillAfter(boolean)>(1);

        $r13 = new android.view.animation.TranslateAnimation;

        $f2 = (float) i6;

        $f3 = (float) i5;

        specialinvoke $r13.<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>(0.0F, $f2, 0.0F, $f3);

        r3 = $r13;

        virtualinvoke r3.<android.view.animation.Animation: void setDuration(long)>(250L);

        $r12 = new android.view.animation.LinearInterpolator;

        specialinvoke $r12.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke r3.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r12);

        virtualinvoke r3.<android.view.animation.Animation: void setFillAfter(boolean)>(1);

        $r15 = new com.android.internal.widget.SlidingTab$2;

        specialinvoke $r15.<com.android.internal.widget.SlidingTab$2: void <init>(com.android.internal.widget.SlidingTab,boolean,int,int)>(r0, z0, i6, i5);

        r4 = $r15;

        virtualinvoke r2.<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>(r4);

        virtualinvoke r1.<com.android.internal.widget.SlidingTab$Slider: void hideTarget()>();

        virtualinvoke r1.<com.android.internal.widget.SlidingTab$Slider: void startAnimation(android.view.animation.Animation,android.view.animation.Animation)>(r2, r3);

        return;

     label04:
        i11 = i8;

        goto label01;

     label05:
        $i17 = i9 - i10;

        $i16 = i9 + $i17;

        i6 = $i16 - i11;

        goto label02;

     label06:
        $r6 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>(r1);

        i0 = virtualinvoke $r6.<android.widget.ImageView: int getTop()>();

        $r7 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>(r1);

        i1 = virtualinvoke $r7.<android.widget.ImageView: int getBottom()>();

        $r8 = staticinvoke <com.android.internal.widget.SlidingTab$Slider: android.widget.ImageView access$100(com.android.internal.widget.SlidingTab$Slider)>(r1);

        i2 = virtualinvoke $r8.<android.widget.ImageView: int getHeight()>();

        i3 = virtualinvoke r0.<com.android.internal.widget.SlidingTab: int getHeight()>();

        if z0 == 0 goto label09;

        i4 = 0;

     label07:
        $r9 = r0.<com.android.internal.widget.SlidingTab: com.android.internal.widget.SlidingTab$Slider mRightSlider>;

        if r1 != $r9 goto label10;

        $i15 = i0 + i3;

        i5 = $i15 - i4;

     label08:
        i6 = 0;

        goto label03;

     label09:
        i4 = i2;

        goto label07;

     label10:
        $i12 = i3 - i1;

        $i14 = i3 + $i12;

        $i13 = $i14 - i4;

        i5 = neg $i13;

        goto label08;
    }

    public static void <clinit>()
    {
        <com.android.internal.widget.SlidingTab: long VIBRATE_SHORT> = 30L;

        <com.android.internal.widget.SlidingTab: long VIBRATE_LONG> = 40L;

        <com.android.internal.widget.SlidingTab: int VERTICAL> = 1;

        <com.android.internal.widget.SlidingTab: int TRACKING_MARGIN> = 50;

        <com.android.internal.widget.SlidingTab: float THRESHOLD> = 0.6666667F;

        <com.android.internal.widget.SlidingTab: java.lang.String LOG_TAG> = "SlidingTab";

        <com.android.internal.widget.SlidingTab: int HORIZONTAL> = 0;

        <com.android.internal.widget.SlidingTab: boolean DBG> = 0;

        <com.android.internal.widget.SlidingTab: int ANIM_TARGET_TIME> = 500;

        <com.android.internal.widget.SlidingTab: int ANIM_DURATION> = 250;

        return;
    }
}
