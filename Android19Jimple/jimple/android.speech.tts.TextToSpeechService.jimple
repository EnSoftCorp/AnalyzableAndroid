public abstract class android.speech.tts.TextToSpeechService extends android.app.Service
{
    private static final boolean DBG;
    private static final java.lang.String SYNTH_THREAD_NAME;
    private static final java.lang.String TAG;
    private android.speech.tts.AudioPlaybackHandler mAudioPlaybackHandler;
    private final android.speech.tts.ITextToSpeechService$Stub mBinder;
    private android.speech.tts.TextToSpeechService$CallbackMap mCallbacks;
    private android.speech.tts.TtsEngines mEngineHelper;
    private java.lang.String mPackageName;
    private android.speech.tts.TextToSpeechService$SynthHandler mSynthHandler;

    public void <init>()
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.TextToSpeechService$1 $r1;

        r0 := @this: android.speech.tts.TextToSpeechService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new android.speech.tts.TextToSpeechService$1;

        specialinvoke $r1.<android.speech.tts.TextToSpeechService$1: void <init>(android.speech.tts.TextToSpeechService)>(r0);

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.ITextToSpeechService$Stub mBinder> = $r1;

        return;
    }

    static android.speech.tts.AudioPlaybackHandler access$200(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.AudioPlaybackHandler $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.AudioPlaybackHandler mAudioPlaybackHandler>;

        return $r1;
    }

    static android.speech.tts.TextToSpeechService$CallbackMap access$300(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.TextToSpeechService$CallbackMap $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap mCallbacks>;

        return $r1;
    }

    static java.lang.String[] access$400(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String[] $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = specialinvoke r0.<android.speech.tts.TextToSpeechService: java.lang.String[] getSettingsLocale()>();

        return $r1;
    }

    static java.lang.String access$500(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: java.lang.String mPackageName>;

        return $r1;
    }

    static int access$600(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        int $i0;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeechService: int getDefaultSpeechRate()>();

        return $i0;
    }

    static android.speech.tts.TextToSpeechService$SynthHandler access$700(android.speech.tts.TextToSpeechService)
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.TextToSpeechService$SynthHandler $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$SynthHandler mSynthHandler>;

        return $r1;
    }

    private int getDefaultSpeechRate()
    {
        android.speech.tts.TextToSpeechService r0;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeechService;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeechService: int getSecureSettingInt(java.lang.String,int)>("tts_default_rate", 100);

        return $i0;
    }

    private int getSecureSettingInt(java.lang.String, int)
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String r1;
        int i0, $i1;
        android.content.ContentResolver $r2;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, r1, i0);

        return $i1;
    }

    private java.lang.String[] getSettingsLocale()
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String $r1, $r3;
        android.speech.tts.TtsEngines $r2;
        java.lang.String[] $r4;

        r0 := @this: android.speech.tts.TextToSpeechService;

        $r2 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TtsEngines mEngineHelper>;

        $r1 = r0.<android.speech.tts.TextToSpeechService: java.lang.String mPackageName>;

        $r3 = virtualinvoke $r2.<android.speech.tts.TtsEngines: java.lang.String getLocalePrefForEngine(java.lang.String)>($r1);

        $r4 = staticinvoke <android.speech.tts.TtsEngines: java.lang.String[] parseLocalePref(java.lang.String)>($r3);

        return $r4;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        android.speech.tts.TextToSpeechService r0;
        android.content.Intent r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        android.speech.tts.ITextToSpeechService$Stub $r4;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r1 := @parameter0: android.content.Intent;

        $r2 = "android.intent.action.TTS_SERVICE";

        $r3 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.ITextToSpeechService$Stub mBinder>;

        return $r4;

     label1:
        return null;
    }

    public void onCreate()
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.TextToSpeechService$SynthThread r1, $r3;
        java.lang.String[] r2;
        android.speech.tts.TextToSpeechService$SynthHandler $r4;
        android.os.Looper $r5;
        android.speech.tts.AudioPlaybackHandler $r6, $r7;
        android.speech.tts.TtsEngines $r8;
        android.speech.tts.TextToSpeechService$CallbackMap $r9;
        android.content.pm.ApplicationInfo $r10;
        java.lang.String $r11, $r12, $r13, $r14;

        r0 := @this: android.speech.tts.TextToSpeechService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r3 = new android.speech.tts.TextToSpeechService$SynthThread;

        specialinvoke $r3.<android.speech.tts.TextToSpeechService$SynthThread: void <init>(android.speech.tts.TextToSpeechService)>(r0);

        r1 = $r3;

        virtualinvoke r1.<android.speech.tts.TextToSpeechService$SynthThread: void start()>();

        $r4 = new android.speech.tts.TextToSpeechService$SynthHandler;

        $r5 = virtualinvoke r1.<android.speech.tts.TextToSpeechService$SynthThread: android.os.Looper getLooper()>();

        specialinvoke $r4.<android.speech.tts.TextToSpeechService$SynthHandler: void <init>(android.speech.tts.TextToSpeechService,android.os.Looper)>(r0, $r5);

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$SynthHandler mSynthHandler> = $r4;

        $r6 = new android.speech.tts.AudioPlaybackHandler;

        specialinvoke $r6.<android.speech.tts.AudioPlaybackHandler: void <init>()>();

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.AudioPlaybackHandler mAudioPlaybackHandler> = $r6;

        $r7 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.AudioPlaybackHandler mAudioPlaybackHandler>;

        virtualinvoke $r7.<android.speech.tts.AudioPlaybackHandler: void start()>();

        $r8 = new android.speech.tts.TtsEngines;

        specialinvoke $r8.<android.speech.tts.TtsEngines: void <init>(android.content.Context)>(r0);

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TtsEngines mEngineHelper> = $r8;

        $r9 = new android.speech.tts.TextToSpeechService$CallbackMap;

        specialinvoke $r9.<android.speech.tts.TextToSpeechService$CallbackMap: void <init>(android.speech.tts.TextToSpeechService,android.speech.tts.TextToSpeechService$1)>(r0, null);

        r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap mCallbacks> = $r9;

        $r10 = virtualinvoke r0.<android.speech.tts.TextToSpeechService: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r11 = $r10.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        r0.<android.speech.tts.TextToSpeechService: java.lang.String mPackageName> = $r11;

        r2 = specialinvoke r0.<android.speech.tts.TextToSpeechService: java.lang.String[] getSettingsLocale()>();

        $r14 = r2[0];

        $r13 = r2[1];

        $r12 = r2[2];

        virtualinvoke r0.<android.speech.tts.TextToSpeechService: int onLoadLanguage(java.lang.String,java.lang.String,java.lang.String)>($r14, $r13, $r12);

        return;
    }

    public void onDestroy()
    {
        android.speech.tts.TextToSpeechService r0;
        android.speech.tts.TextToSpeechService$SynthHandler $r1;
        android.speech.tts.AudioPlaybackHandler $r2;
        android.speech.tts.TextToSpeechService$CallbackMap $r3;

        r0 := @this: android.speech.tts.TextToSpeechService;

        $r1 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$SynthHandler mSynthHandler>;

        virtualinvoke $r1.<android.speech.tts.TextToSpeechService$SynthHandler: void quit()>();

        $r2 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.AudioPlaybackHandler mAudioPlaybackHandler>;

        virtualinvoke $r2.<android.speech.tts.AudioPlaybackHandler: void quit()>();

        $r3 = r0.<android.speech.tts.TextToSpeechService: android.speech.tts.TextToSpeechService$CallbackMap mCallbacks>;

        virtualinvoke $r3.<android.speech.tts.TextToSpeechService$CallbackMap: void kill()>();

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        return;
    }

    protected java.util.Set onGetFeaturesForLanguage(java.lang.String, java.lang.String, java.lang.String)
    {
        android.speech.tts.TextToSpeechService r0;
        java.lang.String r1, r2, r3;

        r0 := @this: android.speech.tts.TextToSpeechService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return null;
    }

    protected abstract java.lang.String[] onGetLanguage();

    protected abstract int onIsLanguageAvailable(java.lang.String, java.lang.String, java.lang.String);

    protected abstract int onLoadLanguage(java.lang.String, java.lang.String, java.lang.String);

    protected abstract void onStop();

    protected abstract void onSynthesizeText(android.speech.tts.SynthesisRequest, android.speech.tts.SynthesisCallback);

    public static void <clinit>()
    {
        <android.speech.tts.TextToSpeechService: java.lang.String TAG> = "TextToSpeechService";

        <android.speech.tts.TextToSpeechService: java.lang.String SYNTH_THREAD_NAME> = "SynthThread";

        <android.speech.tts.TextToSpeechService: boolean DBG> = 0;

        return;
    }
}
