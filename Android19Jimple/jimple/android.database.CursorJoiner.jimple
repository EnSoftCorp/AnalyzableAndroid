public final class android.database.CursorJoiner extends java.lang.Object implements java.util.Iterator, java.lang.Iterable
{
    static final boolean $assertionsDisabled;
    private int[] mColumnsLeft;
    private int[] mColumnsRight;
    private android.database.CursorJoiner$Result mCompareResult;
    private boolean mCompareResultIsValid;
    private android.database.Cursor mCursorLeft;
    private android.database.Cursor mCursorRight;
    private java.lang.String[] mValues;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "android/database/CursorJoiner";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <android.database.CursorJoiner: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    public void <init>(android.database.Cursor, java.lang.String[], android.database.Cursor, java.lang.String[])
    {
        android.database.CursorJoiner r0;
        android.database.Cursor r1, r3, $r5, $r6;
        java.lang.String[] r2, r4, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r7, $r8, $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r17;
        java.lang.String $r16;

        r0 := @this: android.database.CursorJoiner;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: android.database.Cursor;

        r4 := @parameter3: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = lengthof r2;

        $i0 = lengthof r4;

        if $i1 == $i0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("you must have the same number of columns on the left and right, ");

        $i4 = lengthof r2;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $i5 = lengthof r4;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label1:
        r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft> = r1;

        r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight> = r3;

        $r5 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        interfaceinvoke $r5.<android.database.Cursor: boolean moveToFirst()>();

        $r6 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        interfaceinvoke $r6.<android.database.Cursor: boolean moveToFirst()>();

        r0.<android.database.CursorJoiner: boolean mCompareResultIsValid> = 0;

        $r7 = specialinvoke r0.<android.database.CursorJoiner: int[] buildColumnIndiciesArray(android.database.Cursor,java.lang.String[])>(r1, r2);

        r0.<android.database.CursorJoiner: int[] mColumnsLeft> = $r7;

        $r8 = specialinvoke r0.<android.database.CursorJoiner: int[] buildColumnIndiciesArray(android.database.Cursor,java.lang.String[])>(r3, r4);

        r0.<android.database.CursorJoiner: int[] mColumnsRight> = $r8;

        $r9 = r0.<android.database.CursorJoiner: int[] mColumnsLeft>;

        $i2 = lengthof $r9;

        $i3 = 2 * $i2;

        $r11 = newarray (java.lang.String)[$i3];

        r0.<android.database.CursorJoiner: java.lang.String[] mValues> = $r11;

        return;
    }

    private int[] buildColumnIndiciesArray(android.database.Cursor, java.lang.String[])
    {
        android.database.CursorJoiner r0;
        android.database.Cursor r1;
        java.lang.String[] r2;
        int[] r3;
        int i0, $i1, $i2, $i3;
        java.lang.String $r4;

        r0 := @this: android.database.CursorJoiner;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: java.lang.String[];

        $i1 = lengthof r2;

        r3 = newarray (int)[$i1];

        i0 = 0;

     label1:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label2;

        $r4 = r2[i0];

        $i3 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>($r4);

        r3[i0] = $i3;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r3;
    }

    private static transient int compareStrings(java.lang.String[])
    {
        java.lang.String[] r0;
        byte b0;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @parameter0: java.lang.String[];

        b0 = -1;

        $i3 = lengthof r0;

        $i4 = $i3 % 2;

        if $i4 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("you must specify an even number of values");

        throw $r6;

     label1:
        i1 = 0;

     label2:
        $i5 = lengthof r0;

        if i1 >= $i5 goto label7;

        $r1 = r0[i1];

        if $r1 != null goto label4;

        $i8 = i1 + 1;

        $r5 = r0[$i8];

        if $r5 != null goto label5;

     label3:
        i1 = i1 + 2;

        goto label2;

     label4:
        $i6 = i1 + 1;

        $r2 = r0[$i6];

        if $r2 != null goto label6;

        b0 = 1;

     label5:
        return b0;

     label6:
        $r4 = r0[i1];

        $i7 = i1 + 1;

        $r3 = r0[$i7];

        i2 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>($r3);

        if i2 == 0 goto label3;

        if i2 < 0 goto label5;

        return 1;

     label7:
        return 0;
    }

    private void incrementCursors()
    {
        android.database.CursorJoiner r0;
        boolean $z0;
        android.database.CursorJoiner$Result $r1;
        int[] $r2;
        int $i0, $i1;
        android.database.Cursor $r3, $r4, $r5, $r6;

        r0 := @this: android.database.CursorJoiner;

        $z0 = r0.<android.database.CursorJoiner: boolean mCompareResultIsValid>;

        if $z0 == 0 goto label2;

        $r2 = <android.database.CursorJoiner$1: int[] $SwitchMap$android$database$CursorJoiner$Result>;

        $r1 = r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        $i0 = virtualinvoke $r1.<android.database.CursorJoiner$Result: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        r0.<android.database.CursorJoiner: boolean mCompareResultIsValid> = 0;

     label2:
        return;

     label3:
        $r4 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        interfaceinvoke $r4.<android.database.Cursor: boolean moveToNext()>();

        goto label1;

     label4:
        $r3 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        interfaceinvoke $r3.<android.database.Cursor: boolean moveToNext()>();

        goto label1;

     label5:
        $r5 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

        $r6 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        interfaceinvoke $r6.<android.database.Cursor: boolean moveToNext()>();

        goto label1;
    }

    private static void populateValues(java.lang.String[], android.database.Cursor, int[], int)
    {
        java.lang.String[] r0;
        android.database.Cursor r1;
        int[] r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.lang.String $r3;
        java.lang.AssertionError $r4;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: android.database.Cursor;

        r2 := @parameter2: int[];

        i0 := @parameter3: int;

        $z0 = <android.database.CursorJoiner: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 == 0 goto label1;

        if i0 == 1 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        i1 = 0;

     label2:
        $i2 = lengthof r2;

        if i1 >= $i2 goto label3;

        $i3 = i1 * 2;

        $i5 = i0 + $i3;

        $i4 = r2[i1];

        $r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i4);

        r0[$i5] = $r3;

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public boolean hasNext()
    {
        android.database.CursorJoiner r0;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9;
        android.database.Cursor $r1, $r2, $r10, $r12, $r13, $r14, $r15, $r16;
        android.database.CursorJoiner$Result $r3, $r9;
        int[] $r4;
        int $i0, $i1;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r11;

        r0 := @this: android.database.CursorJoiner;

        $z5 = r0.<android.database.CursorJoiner: boolean mCompareResultIsValid>;

        if $z5 == 0 goto label09;

        $r4 = <android.database.CursorJoiner$1: int[] $SwitchMap$android$database$CursorJoiner$Result>;

        $r3 = r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        $i0 = virtualinvoke $r3.<android.database.CursorJoiner$Result: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label07;
            default: goto label01;
        };

     label01:
        $r5 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad value for mCompareResult, ");

        $r9 = r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label02:
        $r15 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z9 = interfaceinvoke $r15.<android.database.Cursor: boolean isLast()>();

        if $z9 == 0 goto label03;

        $r16 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        z4 = interfaceinvoke $r16.<android.database.Cursor: boolean isLast()>();

        z1 = 0;

        if z4 != 0 goto label04;

     label03:
        z1 = 1;

     label04:
        return z1;

     label05:
        $r13 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z8 = interfaceinvoke $r13.<android.database.Cursor: boolean isLast()>();

        if $z8 == 0 goto label06;

        $r14 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        z3 = interfaceinvoke $r14.<android.database.Cursor: boolean isAfterLast()>();

        z1 = 0;

        if z3 != 0 goto label04;

     label06:
        return 1;

     label07:
        $r10 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z7 = interfaceinvoke $r10.<android.database.Cursor: boolean isAfterLast()>();

        if $z7 == 0 goto label08;

        $r12 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        z2 = interfaceinvoke $r12.<android.database.Cursor: boolean isLast()>();

        z1 = 0;

        if z2 != 0 goto label04;

     label08:
        return 1;

     label09:
        $r1 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z6 = interfaceinvoke $r1.<android.database.Cursor: boolean isAfterLast()>();

        if $z6 == 0 goto label10;

        $r2 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        z0 = interfaceinvoke $r2.<android.database.Cursor: boolean isAfterLast()>();

        z1 = 0;

        if z0 != 0 goto label04;

     label10:
        return 1;
    }

    public java.util.Iterator iterator()
    {
        android.database.CursorJoiner r0;

        r0 := @this: android.database.CursorJoiner;

        return r0;
    }

    public android.database.CursorJoiner$Result next()
    {
        android.database.CursorJoiner r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        android.database.Cursor $r1, $r2, $r8, $r12;
        android.database.CursorJoiner$Result $r3, $r4, $r6, $r14, $r15, $r16;
        java.lang.AssertionError $r5, $r18;
        int[] $r7, $r9;
        java.lang.String[] $r10, $r11, $r13;
        int $i0;
        java.lang.IllegalStateException $r17;

        r0 := @this: android.database.CursorJoiner;

        $z2 = virtualinvoke r0.<android.database.CursorJoiner: boolean hasNext()>();

        if $z2 != 0 goto label01;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("you must only call next() when hasNext() is true");

        throw $r17;

     label01:
        specialinvoke r0.<android.database.CursorJoiner: void incrementCursors()>();

        $z3 = <android.database.CursorJoiner: boolean $assertionsDisabled>;

        if $z3 != 0 goto label02;

        $z7 = virtualinvoke r0.<android.database.CursorJoiner: boolean hasNext()>();

        if $z7 != 0 goto label02;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label02:
        $r1 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $z4 = interfaceinvoke $r1.<android.database.Cursor: boolean isAfterLast()>();

        if $z4 != 0 goto label06;

        z0 = 1;

     label03:
        $r2 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $z5 = interfaceinvoke $r2.<android.database.Cursor: boolean isAfterLast()>();

        if $z5 != 0 goto label07;

        z1 = 1;

     label04:
        if z0 == 0 goto label11;

        if z1 == 0 goto label11;

        $r10 = r0.<android.database.CursorJoiner: java.lang.String[] mValues>;

        $r8 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorLeft>;

        $r7 = r0.<android.database.CursorJoiner: int[] mColumnsLeft>;

        staticinvoke <android.database.CursorJoiner: void populateValues(java.lang.String[],android.database.Cursor,int[],int)>($r10, $r8, $r7, 0);

        $r11 = r0.<android.database.CursorJoiner: java.lang.String[] mValues>;

        $r12 = r0.<android.database.CursorJoiner: android.database.Cursor mCursorRight>;

        $r9 = r0.<android.database.CursorJoiner: int[] mColumnsRight>;

        staticinvoke <android.database.CursorJoiner: void populateValues(java.lang.String[],android.database.Cursor,int[],int)>($r11, $r12, $r9, 1);

        $r13 = r0.<android.database.CursorJoiner: java.lang.String[] mValues>;

        $i0 = staticinvoke <android.database.CursorJoiner: int compareStrings(java.lang.String[])>($r13);

        tableswitch($i0)
        {
            case -1: goto label08;
            case 0: goto label09;
            case 1: goto label10;
            default: goto label05;
        };

     label05:
        r0.<android.database.CursorJoiner: boolean mCompareResultIsValid> = 1;

        $r4 = r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult>;

        return $r4;

     label06:
        z0 = 0;

        goto label03;

     label07:
        z1 = 0;

        goto label04;

     label08:
        $r16 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result LEFT>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r16;

        goto label05;

     label09:
        $r14 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result BOTH>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r14;

        goto label05;

     label10:
        $r15 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result RIGHT>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r15;

        goto label05;

     label11:
        if z0 == 0 goto label12;

        $r6 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result LEFT>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r6;

        goto label05;

     label12:
        $z6 = <android.database.CursorJoiner: boolean $assertionsDisabled>;

        if $z6 != 0 goto label13;

        if z1 != 0 goto label13;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label13:
        $r3 = <android.database.CursorJoiner$Result: android.database.CursorJoiner$Result RIGHT>;

        r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result mCompareResult> = $r3;

        goto label05;
    }

    public volatile java.lang.Object next()
    {
        android.database.CursorJoiner r0;
        android.database.CursorJoiner$Result $r1;

        r0 := @this: android.database.CursorJoiner;

        $r1 = virtualinvoke r0.<android.database.CursorJoiner: android.database.CursorJoiner$Result next()>();

        return $r1;
    }

    public void remove()
    {
        android.database.CursorJoiner r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: android.database.CursorJoiner;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented");

        throw $r1;
    }
}
