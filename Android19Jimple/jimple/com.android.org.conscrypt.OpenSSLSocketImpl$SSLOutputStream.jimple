class com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream extends java.io.OutputStream
{
    final com.android.org.conscrypt.OpenSSLSocketImpl this$0;

    void <init>(com.android.org.conscrypt.OpenSSLSocketImpl) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream r0;
        com.android.org.conscrypt.OpenSSLSocketImpl r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream;

        r1 := @parameter0: com.android.org.conscrypt.OpenSSLSocketImpl;

        r0.<com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream: com.android.org.conscrypt.OpenSSLSocketImpl this$0> = r1;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        virtualinvoke r1.<com.android.org.conscrypt.OpenSSLSocketImpl: void startHandshake()>();

        return;
    }

    public void write(int) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream r0;
        int i0;

        r0 := @this: com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream;

        i0 := @parameter0: int;

        staticinvoke <libcore.io.Streams: void writeSingleByte(java.io.OutputStream,int)>(r0, i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream r0;
        byte[] r1;
        int i0, i1, $i2, $i4;
        java.lang.Object r2;
        java.lang.Throwable r3, $r13;
        dalvik.system.BlockGuard$Policy $r4;
        com.android.org.conscrypt.OpenSSLSocketImpl $r5, $r6, $r7, $r8, $r10, $r12;
        long $l3;
        java.net.Socket $r9;
        java.io.FileDescriptor $r11;

        r0 := @this: com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = staticinvoke <dalvik.system.BlockGuard: dalvik.system.BlockGuard$Policy getThreadPolicy()>();

        interfaceinvoke $r4.<dalvik.system.BlockGuard$Policy: void onNetwork()>();

        $r5 = r0.<com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream: com.android.org.conscrypt.OpenSSLSocketImpl this$0>;

        r2 = staticinvoke <com.android.org.conscrypt.OpenSSLSocketImpl: java.lang.Object access$400(com.android.org.conscrypt.OpenSSLSocketImpl)>($r5);

        entermonitor r2;

     label1:
        $r6 = r0.<com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream: com.android.org.conscrypt.OpenSSLSocketImpl this$0>;

        staticinvoke <com.android.org.conscrypt.OpenSSLSocketImpl: void access$100(com.android.org.conscrypt.OpenSSLSocketImpl)>($r6);

        $i2 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i2, i0, i1);

     label2:
        if i1 != 0 goto label5;

     label3:
        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 = r0.<com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream: com.android.org.conscrypt.OpenSSLSocketImpl this$0>;

        $l3 = staticinvoke <com.android.org.conscrypt.OpenSSLSocketImpl: long access$200(com.android.org.conscrypt.OpenSSLSocketImpl)>($r7);

        $r8 = r0.<com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream: com.android.org.conscrypt.OpenSSLSocketImpl this$0>;

        $r9 = staticinvoke <com.android.org.conscrypt.OpenSSLSocketImpl: java.net.Socket access$300(com.android.org.conscrypt.OpenSSLSocketImpl)>($r8);

        $r11 = virtualinvoke $r9.<java.net.Socket: java.io.FileDescriptor getFileDescriptor$()>();

        $r12 = r0.<com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream: com.android.org.conscrypt.OpenSSLSocketImpl this$0>;

        $r10 = r0.<com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream: com.android.org.conscrypt.OpenSSLSocketImpl this$0>;

        $i4 = staticinvoke <com.android.org.conscrypt.OpenSSLSocketImpl: int access$500(com.android.org.conscrypt.OpenSSLSocketImpl)>($r10);

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void SSL_write(long,java.io.FileDescriptor,com.android.org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,byte[],int,int,int)>($l3, $r11, $r12, r1, i0, i1, $i4);

        exitmonitor r2;

     label6:
        return;

     label7:
        $r13 := @caughtexception;

        r3 = $r13;

     label8:
        exitmonitor r2;

     label9:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
