public class android.app.backup.BackupDataInput extends java.lang.Object
{
    int mBackupReader;
    private android.app.backup.BackupDataInput$EntityHeader mHeader;
    private boolean mHeaderReady;

    public void <init>(java.io.FileDescriptor)
    {
        android.app.backup.BackupDataInput r0;
        java.io.FileDescriptor r1;
        android.app.backup.BackupDataInput$EntityHeader $r2;
        int $i0, $i1;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: android.app.backup.BackupDataInput;

        r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.app.backup.BackupDataInput$EntityHeader;

        specialinvoke $r2.<android.app.backup.BackupDataInput$EntityHeader: void <init>(android.app.backup.BackupDataInput$1)>(null);

        r0.<android.app.backup.BackupDataInput: android.app.backup.BackupDataInput$EntityHeader mHeader> = $r2;

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>()>();

        throw $r8;

     label1:
        $i0 = staticinvoke <android.app.backup.BackupDataInput: int ctor(java.io.FileDescriptor)>(r1);

        r0.<android.app.backup.BackupDataInput: int mBackupReader> = $i0;

        $i1 = r0.<android.app.backup.BackupDataInput: int mBackupReader>;

        if $i1 != 0 goto label2;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Native initialization failed with fd=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        return;
    }

    private static native int ctor(java.io.FileDescriptor);

    private static native void dtor(int);

    private native int readEntityData_native(int, byte[], int, int);

    private native int readNextHeader_native(int, android.app.backup.BackupDataInput$EntityHeader);

    private native int skipEntityData_native(int);

    protected void finalize() throws java.lang.Throwable
    {
        android.app.backup.BackupDataInput r0;
        java.lang.Throwable r1, $r2;
        int $i0;

        r0 := @this: android.app.backup.BackupDataInput;

     label1:
        $i0 = r0.<android.app.backup.BackupDataInput: int mBackupReader>;

        staticinvoke <android.app.backup.BackupDataInput: void dtor(int)>($i0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int getDataSize()
    {
        android.app.backup.BackupDataInput r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.app.backup.BackupDataInput$EntityHeader $r2;
        int $i0;

        r0 := @this: android.app.backup.BackupDataInput;

        $z0 = r0.<android.app.backup.BackupDataInput: boolean mHeaderReady>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.app.backup.BackupDataInput: android.app.backup.BackupDataInput$EntityHeader mHeader>;

        $i0 = $r2.<android.app.backup.BackupDataInput$EntityHeader: int dataSize>;

        return $i0;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entity header not read");

        throw $r1;
    }

    public java.lang.String getKey()
    {
        android.app.backup.BackupDataInput r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        android.app.backup.BackupDataInput$EntityHeader $r2;
        java.lang.String $r3;

        r0 := @this: android.app.backup.BackupDataInput;

        $z0 = r0.<android.app.backup.BackupDataInput: boolean mHeaderReady>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.app.backup.BackupDataInput: android.app.backup.BackupDataInput$EntityHeader mHeader>;

        $r3 = $r2.<android.app.backup.BackupDataInput$EntityHeader: java.lang.String key>;

        return $r3;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entity header not read");

        throw $r1;
    }

    public int readEntityData(byte[], int, int) throws java.io.IOException
    {
        android.app.backup.BackupDataInput r0;
        byte[] r1;
        int i0, i1, i2, $i3;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: android.app.backup.BackupDataInput;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<android.app.backup.BackupDataInput: boolean mHeaderReady>;

        if $z0 == 0 goto label2;

        $i3 = r0.<android.app.backup.BackupDataInput: int mBackupReader>;

        i2 = specialinvoke r0.<android.app.backup.BackupDataInput: int readEntityData_native(int,byte[],int,int)>($i3, r1, i0, i1);

        if i2 < 0 goto label1;

        return i2;

     label1:
        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("result=0x");

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entity header not read");

        throw $r2;
    }

    public boolean readNextHeader() throws java.io.IOException
    {
        android.app.backup.BackupDataInput r0;
        int i0, $i1;
        android.app.backup.BackupDataInput$EntityHeader $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: android.app.backup.BackupDataInput;

        $i1 = r0.<android.app.backup.BackupDataInput: int mBackupReader>;

        $r1 = r0.<android.app.backup.BackupDataInput: android.app.backup.BackupDataInput$EntityHeader mHeader>;

        i0 = specialinvoke r0.<android.app.backup.BackupDataInput: int readNextHeader_native(int,android.app.backup.BackupDataInput$EntityHeader)>($i1, $r1);

        if i0 != 0 goto label1;

        r0.<android.app.backup.BackupDataInput: boolean mHeaderReady> = 1;

        return 1;

     label1:
        if i0 <= 0 goto label2;

        r0.<android.app.backup.BackupDataInput: boolean mHeaderReady> = 0;

        return 0;

     label2:
        r0.<android.app.backup.BackupDataInput: boolean mHeaderReady> = 0;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed: 0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public void skipEntityData() throws java.io.IOException
    {
        android.app.backup.BackupDataInput r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        int $i0;

        r0 := @this: android.app.backup.BackupDataInput;

        $z0 = r0.<android.app.backup.BackupDataInput: boolean mHeaderReady>;

        if $z0 == 0 goto label1;

        $i0 = r0.<android.app.backup.BackupDataInput: int mBackupReader>;

        specialinvoke r0.<android.app.backup.BackupDataInput: int skipEntityData_native(int)>($i0);

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Entity header not read");

        throw $r1;
    }
}
