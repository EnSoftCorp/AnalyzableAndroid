public class android.net.PacProxySelector extends java.net.ProxySelector
{
    public static final java.lang.String PROXY_SERVICE;
    private static final java.lang.String TAG;
    private final java.util.List mDefaultList;
    private com.android.net.IProxyService mProxyService;

    public void <init>()
    {
        android.net.PacProxySelector r0;
        java.net.Proxy[] r1;
        android.os.IBinder $r2;
        com.android.net.IProxyService $r3, $r4;
        java.net.Proxy $r5;
        java.util.ArrayList $r6;

        r0 := @this: android.net.PacProxySelector;

        specialinvoke r0.<java.net.ProxySelector: void <init>()>();

        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("com.android.net.IProxyService");

        $r3 = staticinvoke <com.android.net.IProxyService$Stub: com.android.net.IProxyService asInterface(android.os.IBinder)>($r2);

        r0.<android.net.PacProxySelector: com.android.net.IProxyService mProxyService> = $r3;

        $r4 = r0.<android.net.PacProxySelector: com.android.net.IProxyService mProxyService>;

        if $r4 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PacProxySelector", "PacManager: no proxy service");

     label1:
        r1 = newarray (java.net.Proxy)[1];

        $r5 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        r1[0] = $r5;

        $r6 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r1);

        r0.<android.net.PacProxySelector: java.util.List mDefaultList> = $r6;

        return;
    }

    private static java.util.List parseResponse(java.lang.String)
    {
        java.lang.String r0, r3, r5, $r8, $r9, $r10;
        java.lang.String[] r1, r4;
        java.util.ArrayList r2;
        int i0, i1, i2, i3, $i4;
        java.net.Proxy $r7, $r12, $r14;
        boolean $z1, $z2;
        java.net.Proxy$Type $r11;
        java.net.InetSocketAddress $r13;
        java.lang.Exception $r15;

        r0 := @parameter0: java.lang.String;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        r2 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label8;

        $r8 = r1[i1];

        r3 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("DIRECT");

        if $z2 == 0 goto label3;

        $r14 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r14);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("PROXY ");

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(6);

        r4 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r5 = r4[0];

     label4:
        $r10 = r4[1];

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

     label5:
        i2 = i3;

     label6:
        $r12 = new java.net.Proxy;

        $r11 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        $r13 = staticinvoke <java.net.InetSocketAddress: java.net.InetSocketAddress createUnresolved(java.lang.String,int)>(r5, i2);

        specialinvoke $r12.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>($r11, $r13);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label2;

     label7:
        $r15 := @caughtexception;

        i2 = 8080;

        goto label6;

     label8:
        $i4 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i4 != 0 goto label9;

        $r7 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r7);

     label9:
        return r2;

        catch java.lang.Exception from label4 to label5 with label7;
    }

    public void connectFailed(java.net.URI, java.net.SocketAddress, java.io.IOException)
    {
        android.net.PacProxySelector r0;
        java.net.URI r1;
        java.net.SocketAddress r2;
        java.io.IOException r3;

        r0 := @this: android.net.PacProxySelector;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.net.SocketAddress;

        r3 := @parameter2: java.io.IOException;

        return;
    }

    public java.util.List select(java.net.URI)
    {
        android.net.PacProxySelector r0;
        java.net.URI r1;
        java.lang.String r3, r5, r6, r7, $r13;
        android.os.RemoteException r4, $r21;
        java.net.Proxy[] r8;
        com.android.net.IProxyService $r9, $r10, $r12, $r18;
        java.net.URL $r11;
        java.util.List $r14, $r15;
        java.util.ArrayList $r16;
        java.net.Proxy $r17;
        android.os.IBinder $r19;
        java.net.MalformedURLException $r20;

        r0 := @this: android.net.PacProxySelector;

        r1 := @parameter0: java.net.URI;

        $r9 = r0.<android.net.PacProxySelector: com.android.net.IProxyService mProxyService>;

        if $r9 != null goto label1;

        $r19 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("com.android.net.IProxyService");

        $r18 = staticinvoke <com.android.net.IProxyService$Stub: com.android.net.IProxyService asInterface(android.os.IBinder)>($r19);

        r0.<android.net.PacProxySelector: com.android.net.IProxyService mProxyService> = $r18;

     label1:
        $r10 = r0.<android.net.PacProxySelector: com.android.net.IProxyService mProxyService>;

        if $r10 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PacProxySelector", "select: no proxy service return NO_PROXY");

        r8 = newarray (java.net.Proxy)[1];

        $r17 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        r8[0] = $r17;

        $r16 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(r8);

        return $r16;

     label2:
        $r11 = virtualinvoke r1.<java.net.URI: java.net.URL toURL()>();

        r7 = virtualinvoke $r11.<java.net.URL: java.lang.String toString()>();

     label3:
        r3 = r7;

     label4:
        $r12 = r0.<android.net.PacProxySelector: com.android.net.IProxyService mProxyService>;

        $r13 = virtualinvoke r1.<java.net.URI: java.lang.String getHost()>();

        r6 = interfaceinvoke $r12.<com.android.net.IProxyService: java.lang.String resolvePacFile(java.lang.String,java.lang.String)>($r13, r3);

     label5:
        r5 = r6;

     label6:
        if r5 != null goto label9;

        $r15 = r0.<android.net.PacProxySelector: java.util.List mDefaultList>;

        return $r15;

     label7:
        $r20 := @caughtexception;

        r3 = virtualinvoke r1.<java.net.URI: java.lang.String getHost()>();

        goto label4;

     label8:
        $r21 := @caughtexception;

        r4 = $r21;

        virtualinvoke r4.<android.os.RemoteException: void printStackTrace()>();

        r5 = null;

        goto label6;

     label9:
        $r14 = staticinvoke <android.net.PacProxySelector: java.util.List parseResponse(java.lang.String)>(r5);

        return $r14;

        catch java.net.MalformedURLException from label2 to label3 with label7;
        catch android.os.RemoteException from label4 to label5 with label8;
    }

    public static void <clinit>()
    {
        <android.net.PacProxySelector: java.lang.String TAG> = "PacProxySelector";

        <android.net.PacProxySelector: java.lang.String PROXY_SERVICE> = "com.android.net.IProxyService";

        return;
    }
}
