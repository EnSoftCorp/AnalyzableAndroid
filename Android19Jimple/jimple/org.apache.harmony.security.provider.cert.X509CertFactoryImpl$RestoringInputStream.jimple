class org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream extends java.io.InputStream
{
    private static final int BUFF_SIZE;
    private int bar;
    private final int[] buff;
    private int end;
    private final java.io.InputStream inStream;
    private int pos;

    public void <init>(java.io.InputStream)
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream r0;
        java.io.InputStream r1;
        int[] $r2;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r2 = newarray (int)[64];

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int[] buff> = $r2;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos> = -1;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int bar> = 0;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int end> = 0;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: java.io.InputStream inStream> = r1;

        return;
    }

    public int available() throws java.io.IOException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.InputStream $r1;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        $i1 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int bar>;

        $i0 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos>;

        $i2 = $i1 - $i0;

        $r1 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: java.io.InputStream inStream>;

        $i3 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    public void close() throws java.io.IOException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        $r1 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: java.io.InputStream inStream>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public void mark(int)
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos>;

        if $i1 >= 0 goto label1;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos> = 0;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int bar> = 0;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int end> = 31;

        return;

     label1:
        $i2 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos>;

        $i3 = 32 + $i2;

        $i4 = -1 + $i3;

        $i5 = $i4 % 32;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int end> = $i5;

        return;
    }

    public boolean markSupported()
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream r0;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        return 1;
    }

    public int read() throws java.io.IOException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.io.InputStream $r1, $r2;
        int[] $r3, $r4, $r5;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        $i1 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos>;

        if $i1 < 0 goto label3;

        $i3 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos>;

        i0 = $i3 % 32;

        $i4 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int bar>;

        if i0 >= $i4 goto label1;

        $i12 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos>;

        $i11 = 1 + $i12;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos> = $i11;

        $r5 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int[] buff>;

        $i13 = $r5[i0];

        return $i13;

     label1:
        $i5 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int end>;

        if i0 == $i5 goto label2;

        $r3 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int[] buff>;

        $r2 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: java.io.InputStream inStream>;

        $i6 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $r3[i0] = $i6;

        $i7 = i0 + 1;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int bar> = $i7;

        $i8 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos>;

        $i9 = 1 + $i8;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos> = $i9;

        $r4 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int[] buff>;

        $i10 = $r4[i0];

        return $i10;

     label2:
        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos> = -1;

     label3:
        $r1 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: java.io.InputStream inStream>;

        $i2 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        return $i2;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream r0;
        byte[] r1;
        int i0, i1, i2, i3, $i5;
        byte $b4;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        i3 = virtualinvoke r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int read()>();

        if i3 != -1 goto label3;

        if i2 != 0 goto label2;

        i2 = -1;

     label2:
        return i2;

     label3:
        $i5 = i0 + i2;

        $b4 = (byte) i3;

        r1[$i5] = $b4;

        i2 = i2 + 1;

        goto label1;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream r0;
        int $i0, $i1, $i2, $i3;
        java.io.IOException $r1;

        r0 := @this: org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream;

        $i0 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos>;

        if $i0 < 0 goto label1;

        $i1 = r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int end>;

        $i2 = 1 + $i1;

        $i3 = $i2 % 32;

        r0.<org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int pos> = $i3;

        return;

     label1:
        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Could not reset the stream: position became invalid or stream has not been marked");

        throw $r1;
    }

    public static void <clinit>()
    {
        <org.apache.harmony.security.provider.cert.X509CertFactoryImpl$RestoringInputStream: int BUFF_SIZE> = 32;

        return;
    }
}
