public class android.security.AndroidKeyStore extends java.security.KeyStoreSpi
{
    public static final java.lang.String NAME;
    private android.security.KeyStore mKeyStore;

    public void <init>()
    {
        android.security.AndroidKeyStore r0;

        r0 := @this: android.security.AndroidKeyStore;

        specialinvoke r0.<java.security.KeyStoreSpi: void <init>()>();

        return;
    }

    private java.util.Date getModificationDate(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        long l0;
        android.security.KeyStore $r2;
        byte $b1;
        java.util.Date $r3;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        l0 = virtualinvoke $r2.<android.security.KeyStore: long getmtime(java.lang.String)>(r1);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        return null;

     label1:
        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>(long)>(l0);

        return $r3;
    }

    private java.util.Set getUniqueAliases()
    {
        android.security.AndroidKeyStore r0;
        java.lang.String[] r1;
        java.util.HashSet r2, $r5, $r12;
        int i0, i1, i2, $i3, $i5, $i6;
        java.lang.String r3, $r9, $r10, $r11;
        android.security.KeyStore $r4;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: android.security.AndroidKeyStore;

        $r4 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        r1 = virtualinvoke $r4.<android.security.KeyStore: java.lang.String[] saw(java.lang.String)>("");

        if r1 != null goto label2;

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        r2 = $r12;

     label1:
        return r2;

     label2:
        $r5 = new java.util.HashSet;

        $i3 = lengthof r1;

        specialinvoke $r5.<java.util.HashSet: void <init>(int)>($i3);

        r2 = $r5;

        i0 = lengthof r1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        r3 = r1[i1];

        i2 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(95);

        if i2 == -1 goto label4;

        $i5 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i5 > i2 goto label6;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid alias: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AndroidKeyStore", $r9);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        $r10 = new java.lang.String;

        $i6 = i2 + 1;

        $r11 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i6);

        specialinvoke $r10.<java.lang.String: void <init>(java.lang.String)>($r11);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label5;
    }

    private boolean isCertificateEntry(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r4, $r5;
        android.security.KeyStore $r3;
        boolean $z0;
        java.lang.NullPointerException $r7;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r7;

     label1:
        $r3 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<android.security.KeyStore: boolean contains(java.lang.String)>($r6);

        return $z0;
    }

    private boolean isKeyEntry(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r4, $r5;
        android.security.KeyStore $r3;
        boolean $z0;
        java.lang.NullPointerException $r7;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r7;

     label1:
        $r3 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<android.security.KeyStore: boolean contains(java.lang.String)>($r6);

        return $z0;
    }

    private void setPrivateKeyEntry(java.lang.String, java.security.PrivateKey, java.security.cert.Certificate[], android.security.KeyStoreParameter) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, r6, r7, r16, $r18, $r28, $r29, $r37, $r46, $r55, $r58, $r61, $r67, $r71, $r76;
        java.security.PrivateKey r2;
        java.security.cert.Certificate[] r3;
        android.security.KeyStoreParameter r4;
        byte[] r5, r11, r12, $r44, $r45, $r48, $r50;
        boolean z0, $z1, $z2, $z4, $z5, $z7, $z11, $z12, $z13, $z14;
        java.security.cert.X509Certificate[] r8;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.security.cert.CertificateEncodingException r9, r15, $r81, $r83;
        java.security.KeyStoreException r10, r14, $r17, $r19, $r33, $r38, $r42, $r54, $r62, $r65, $r68, $r80, $r82;
        byte[][] r13;
        java.security.cert.X509Certificate $r20, $r49, $r51;
        android.security.KeyStore $r21, $r24, $r26, $r32, $r34, $r40, $r41, $r43;
        java.lang.StringBuilder $r22, $r23, $r25, $r27, $r30, $r31, $r35, $r36, $r39, $r53, $r57, $r59, $r60, $r63, $r64, $r66, $r72, $r73, $r74, $r75, $r77, $r78, $r79;
        java.security.cert.Certificate $r47, $r52, $r56;
        com.android.org.conscrypt.OpenSSLKey $r69;
        com.android.org.conscrypt.OpenSSLKeyHolder $r70;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.PrivateKey;

        r3 := @parameter2: java.security.cert.Certificate[];

        r4 := @parameter3: android.security.KeyStoreParameter;

        r5 = null;

        $z1 = r2 instanceof com.android.org.conscrypt.OpenSSLKeyHolder;

        if $z1 == 0 goto label02;

        $r70 = (com.android.org.conscrypt.OpenSSLKeyHolder) r2;

        $r69 = interfaceinvoke $r70.<com.android.org.conscrypt.OpenSSLKeyHolder: com.android.org.conscrypt.OpenSSLKey getOpenSSLKey()>();

        r6 = virtualinvoke $r69.<com.android.org.conscrypt.OpenSSLKey: java.lang.String getAlias()>();

     label01:
        if r6 == null goto label06;

        $z14 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("USRPKEY_");

        if $z14 == 0 goto label06;

        $r67 = "USRPKEY_";

        $i17 = virtualinvoke $r67.<java.lang.String: int length()>();

        r16 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i17);

        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z13 != 0 goto label03;

        $r65 = new java.security.KeyStoreException;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can only replace keys with same alias: ");

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r65.<java.security.KeyStoreException: void <init>(java.lang.String)>($r71);

        throw $r65;

     label02:
        r6 = null;

        goto label01;

     label03:
        z0 = 0;

     label04:
        if r3 == null goto label05;

        $i9 = lengthof r3;

        if $i9 != 0 goto label10;

     label05:
        $r19 = new java.security.KeyStoreException;

        specialinvoke $r19.<java.security.KeyStoreException: void <init>(java.lang.String)>("Must supply at least one Certificate with PrivateKey");

        throw $r19;

     label06:
        r7 = interfaceinvoke r2.<java.security.PrivateKey: java.lang.String getFormat()>();

        if r7 == null goto label07;

        $r18 = "PKCS#8";

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 != 0 goto label08;

     label07:
        $r17 = new java.security.KeyStoreException;

        specialinvoke $r17.<java.security.KeyStoreException: void <init>(java.lang.String)>("Only PrivateKeys that can be encoded into PKCS#8 are supported");

        throw $r17;

     label08:
        r5 = interfaceinvoke r2.<java.security.PrivateKey: byte[] getEncoded()>();

        if r5 != null goto label09;

        $r68 = new java.security.KeyStoreException;

        specialinvoke $r68.<java.security.KeyStoreException: void <init>(java.lang.String)>("PrivateKey has no encoding");

        throw $r68;

     label09:
        z0 = 1;

        goto label04;

     label10:
        $i10 = lengthof r3;

        r8 = newarray (java.security.cert.X509Certificate)[$i10];

        i0 = 0;

     label11:
        $i11 = lengthof r3;

        if i0 >= $i11 goto label14;

        $r46 = "X.509";

        $r47 = r3[i0];

        $r55 = virtualinvoke $r47.<java.security.cert.Certificate: java.lang.String getType()>();

        $z11 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r55);

        if $z11 != 0 goto label12;

        $r62 = new java.security.KeyStoreException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificates must be in X.509 format: invalid cert #");

        $r57 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<java.security.KeyStoreException: void <init>(java.lang.String)>($r58);

        throw $r62;

     label12:
        $r56 = r3[i0];

        $z12 = $r56 instanceof java.security.cert.X509Certificate;

        if $z12 != 0 goto label13;

        $r54 = new java.security.KeyStoreException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Certificates must be in X.509 format: invalid cert #");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r61 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<java.security.KeyStoreException: void <init>(java.lang.String)>($r61);

        throw $r54;

     label13:
        $r52 = r3[i0];

        $r51 = (java.security.cert.X509Certificate) $r52;

        r8[i0] = $r51;

        i0 = i0 + 1;

        goto label11;

     label14:
        $r20 = r8[0];

        r11 = virtualinvoke $r20.<java.security.cert.X509Certificate: byte[] getEncoded()>();

     label15:
        $i12 = lengthof r3;

        if $i12 <= 1 goto label23;

        $i13 = lengthof r8;

        $i14 = -1 + $i13;

        r13 = newarray (byte[])[$i14];

        i3 = 0;

        i2 = 0;

     label16:
        $i15 = lengthof r13;

        if i2 >= $i15 goto label21;

        i6 = i2 + 1;

     label17:
        $r49 = r8[i6];

        $r45 = virtualinvoke $r49.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        r13[i2] = $r45;

        $r44 = r13[i2];

        i8 = lengthof $r44;

     label18:
        i3 = i3 + i8;

        i2 = i2 + 1;

        goto label16;

     label19:
        $r83 := @caughtexception;

        r9 = $r83;

        $r82 = new java.security.KeyStoreException;

        specialinvoke $r82.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Couldn\'t encode certificate #1", r9);

        r10 = $r82;

        throw r10;

     label20:
        $r81 := @caughtexception;

        r15 = $r81;

        $r80 = new java.security.KeyStoreException;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t encode Certificate #");

        $r77 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r80.<java.security.KeyStoreException: void <init>(java.lang.String,java.lang.Throwable)>($r76, r15);

        r14 = $r80;

        throw r14;

     label21:
        r12 = newarray (byte)[i3];

        i5 = 0;

        i4 = 0;

     label22:
        $i16 = lengthof r13;

        if i4 >= $i16 goto label24;

        $r48 = r13[i4];

        i7 = lengthof $r48;

        $r50 = r13[i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r50, 0, r12, i5, i7);

        i5 = i5 + i7;

        r13[i4] = null;

        i4 = i4 + 1;

        goto label22;

     label23:
        r12 = null;

     label24:
        if z0 == 0 goto label27;

        $r43 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r43, r1);

     label25:
        if r4 != null goto label28;

        i1 = 0;

     label26:
        if z0 == 0 goto label29;

        $r40 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $z7 = virtualinvoke $r40.<android.security.KeyStore: boolean importKey(java.lang.String,byte[],int,int)>($r37, r5, -1, i1);

        if $z7 != 0 goto label29;

        $r41 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r41, r1);

        $r42 = new java.security.KeyStoreException;

        specialinvoke $r42.<java.security.KeyStoreException: void <init>(java.lang.String)>("Couldn\'t put private key in keystore");

        throw $r42;

     label27:
        $r21 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteCertificateTypesForAlias(android.security.KeyStore,java.lang.String)>($r21, r1);

        goto label25;

     label28:
        i1 = virtualinvoke r4.<android.security.KeyStoreParameter: int getFlags()>();

        goto label26;

     label29:
        $r24 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $z4 = virtualinvoke $r24.<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>($r28, r11, -1, i1);

        if $z4 != 0 goto label30;

        $r32 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r32, r1);

        $r38 = new java.security.KeyStoreException;

        specialinvoke $r38.<java.security.KeyStoreException: void <init>(java.lang.String)>("Couldn\'t put certificate #1 in keystore");

        throw $r38;

     label30:
        if r12 == null goto label31;

        $r26 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $z5 = virtualinvoke $r26.<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>($r29, r12, -1, i1);

        if $z5 != 0 goto label31;

        $r34 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r34, r1);

        $r33 = new java.security.KeyStoreException;

        specialinvoke $r33.<java.security.KeyStoreException: void <init>(java.lang.String)>("Couldn\'t put certificate chain in keystore");

        throw $r33;

     label31:
        return;

        catch java.security.cert.CertificateEncodingException from label14 to label15 with label19;
        catch java.security.cert.CertificateEncodingException from label17 to label18 with label20;
    }

    private static java.security.cert.X509Certificate toCertificate(byte[])
    {
        byte[] r0;
        java.security.cert.CertificateException r1, $r6;
        java.security.cert.X509Certificate r2;
        java.security.cert.CertificateFactory $r3;
        java.io.ByteArrayInputStream $r4;
        java.security.cert.Certificate $r5;

        r0 := @parameter0: byte[];

     label1:
        $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r4 = new java.io.ByteArrayInputStream;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        $r5 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4);

        r2 = (java.security.cert.X509Certificate) $r5;

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidKeyStore", "Couldn\'t parse certificate in keystore", r1);

        return null;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    private static java.util.Collection toCertificates(byte[])
    {
        byte[] r0;
        java.security.cert.CertificateException r1, $r5;
        java.util.Collection r2;
        java.security.cert.CertificateFactory $r3;
        java.io.ByteArrayInputStream $r4;
        java.util.ArrayList $r6;

        r0 := @parameter0: byte[];

     label1:
        $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r4 = new java.io.ByteArrayInputStream;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        r2 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r4);

     label2:
        return r2;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AndroidKeyStore", "Couldn\'t parse certificates in keystore", r1);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        return $r6;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    public java.util.Enumeration engineAliases()
    {
        android.security.AndroidKeyStore r0;
        java.util.Set $r1;
        java.util.Enumeration $r2;

        r0 := @this: android.security.AndroidKeyStore;

        $r1 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Set getUniqueAliases()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>($r1);

        return $r2;
    }

    public boolean engineContainsAlias(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r6, $r11, $r16;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r9, $r10, $r12, $r14, $r15;
        android.security.KeyStore $r3, $r8, $r13;
        boolean $z0, $z1, $z2;
        java.lang.NullPointerException $r17;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r17;

     label1:
        $r3 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<android.security.KeyStore: boolean contains(java.lang.String)>($r6);

        if $z0 != 0 goto label2;

        $r8 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r8.<android.security.KeyStore: boolean contains(java.lang.String)>($r11);

        if $z1 != 0 goto label2;

        $r13 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke $r13.<android.security.KeyStore: boolean contains(java.lang.String)>($r16);

        if $z2 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public void engineDeleteEntry(java.lang.String) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r7;
        boolean $z0, $z1, $z2;
        android.security.KeyStore $r2;
        java.security.KeyStoreException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

        $z2 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isCertificateEntry(java.lang.String)>(r1);

        if $z2 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $z1 = staticinvoke <android.security.Credentials: boolean deleteAllTypesForAlias(android.security.KeyStore,java.lang.String)>($r2, r1);

        if $z1 != 0 goto label1;

        $r3 = new java.security.KeyStoreException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such entry ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.KeyStoreException: void <init>(java.lang.String)>($r7);

        throw $r3;
    }

    public java.security.cert.Certificate engineGetCertificate(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r8, $r13;
        byte[] r2, r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r9, $r11, $r12;
        android.security.KeyStore $r5, $r10;
        java.security.cert.X509Certificate $r14, $r15;
        java.lang.NullPointerException $r16;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r16;

     label1:
        $r5 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = virtualinvoke $r5.<android.security.KeyStore: byte[] get(java.lang.String)>($r8);

        if r2 == null goto label2;

        $r14 = staticinvoke <android.security.AndroidKeyStore: java.security.cert.X509Certificate toCertificate(byte[])>(r2);

        return $r14;

     label2:
        $r10 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke $r10.<android.security.KeyStore: byte[] get(java.lang.String)>($r13);

        if r3 == null goto label3;

        $r15 = staticinvoke <android.security.AndroidKeyStore: java.security.cert.X509Certificate toCertificate(byte[])>(r3);

        return $r15;

     label3:
        return null;
    }

    public java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)
    {
        android.security.AndroidKeyStore r0;
        java.security.cert.Certificate r1;
        java.util.HashSet r2, $r9;
        java.lang.String[] r3, r4;
        int i0, i1, i2, i3;
        java.lang.String r5, r6, $r15, $r21, $r29;
        byte[] r7, $r18, $r24;
        java.security.cert.X509Certificate r8, $r23;
        android.security.KeyStore $r10, $r11, $r14, $r20, $r25;
        java.lang.StringBuilder $r12, $r13, $r16, $r17, $r19, $r22, $r26, $r27, $r28;
        boolean $z0, $z1, $z3;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.security.cert.Certificate;

        if r1 != null goto label1;

        return null;

     label1:
        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r2 = $r9;

        $r10 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        r3 = virtualinvoke $r10.<android.security.KeyStore: java.lang.String[] saw(java.lang.String)>("USRCERT_");

        if r3 == null goto label5;

        i2 = lengthof r3;

        i3 = 0;

     label2:
        if i3 >= i2 goto label5;

        r6 = r3[i3];

        $r25 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = virtualinvoke $r25.<android.security.KeyStore: byte[] get(java.lang.String)>($r29);

        if r7 != null goto label4;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        r8 = staticinvoke <android.security.AndroidKeyStore: java.security.cert.X509Certificate toCertificate(byte[])>(r7);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

        $z3 = virtualinvoke r1.<java.security.cert.Certificate: boolean equals(java.lang.Object)>(r8);

        if $z3 == 0 goto label3;

        return r6;

     label5:
        $r11 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        r4 = virtualinvoke $r11.<android.security.KeyStore: java.lang.String[] saw(java.lang.String)>("CACERT_");

        if r3 == null goto label9;

        i0 = lengthof r4;

        i1 = 0;

     label6:
        if i1 >= i0 goto label9;

        r5 = r4[i1];

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z0 == 0 goto label8;

     label7:
        i1 = i1 + 1;

        goto label6;

     label8:
        $r14 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r14.<android.security.KeyStore: byte[] get(java.lang.String)>($r15);

        if $r18 == null goto label7;

        $r20 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = virtualinvoke $r20.<android.security.KeyStore: byte[] get(java.lang.String)>($r21);

        $r23 = staticinvoke <android.security.AndroidKeyStore: java.security.cert.X509Certificate toCertificate(byte[])>($r24);

        $z1 = virtualinvoke r1.<java.security.cert.Certificate: boolean equals(java.lang.Object)>($r23);

        if $z1 == 0 goto label7;

        return r5;

     label9:
        return null;
    }

    public java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r12;
        java.security.cert.X509Certificate r2;
        byte[] r3;
        java.security.cert.Certificate[] r4;
        java.util.Collection r5;
        java.util.Iterator r6;
        int i0, i1, $i2, $i3;
        java.security.cert.Certificate $r7, $r13;
        java.lang.StringBuilder $r8, $r10, $r11;
        android.security.KeyStore $r9;
        boolean $z0;
        java.lang.Object $r14;
        java.lang.NullPointerException $r15;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r15;

     label1:
        $r7 = virtualinvoke r0.<android.security.AndroidKeyStore: java.security.cert.Certificate engineGetCertificate(java.lang.String)>(r1);

        r2 = (java.security.cert.X509Certificate) $r7;

        if r2 != null goto label2;

        return null;

     label2:
        $r9 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke $r9.<android.security.KeyStore: byte[] get(java.lang.String)>($r12);

        if r3 == null goto label4;

        r5 = staticinvoke <android.security.AndroidKeyStore: java.util.Collection toCertificates(byte[])>(r3);

        $i3 = interfaceinvoke r5.<java.util.Collection: int size()>();

        $i2 = 1 + $i3;

        r4 = newarray (java.security.cert.Certificate)[$i2];

        r6 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

        i0 = 1;

     label3:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        i1 = i0 + 1;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.security.cert.Certificate) $r14;

        r4[i0] = $r13;

        i0 = i1;

        goto label3;

     label4:
        r4 = newarray (java.security.cert.Certificate)[1];

     label5:
        r4[0] = r2;

        return r4;
    }

    public java.util.Date engineGetCreationDate(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r7, $r11, $r14;
        java.util.Date r2, r3, $r17;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r15;
        java.lang.NullPointerException $r16;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r16 = new java.lang.NullPointerException;

        specialinvoke $r16.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r16;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Date getModificationDate(java.lang.String)>($r7);

        if r2 == null goto label2;

        return r2;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRCERT_");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Date getModificationDate(java.lang.String)>($r11);

        if r3 == null goto label3;

        return r3;

     label3:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Date getModificationDate(java.lang.String)>($r14);

        return $r17;
    }

    public java.security.Key engineGetKey(java.lang.String, char[]) throws java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r10;
        char[] r2;
        com.android.org.conscrypt.OpenSSLEngine r3;
        java.security.InvalidKeyException r4, $r11;
        java.security.UnrecoverableKeyException r5, $r13;
        java.security.PrivateKey r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: char[];

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r3 = staticinvoke <com.android.org.conscrypt.OpenSSLEngine: com.android.org.conscrypt.OpenSSLEngine getInstance(java.lang.String)>("keystore");

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("USRPKEY_");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r3.<com.android.org.conscrypt.OpenSSLEngine: java.security.PrivateKey getPrivateKeyById(java.lang.String)>($r10);

     label3:
        return r6;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        $r13 = new java.security.UnrecoverableKeyException;

        specialinvoke $r13.<java.security.UnrecoverableKeyException: void <init>(java.lang.String)>("Can\'t get key");

        r5 = $r13;

        virtualinvoke r5.<java.security.UnrecoverableKeyException: java.lang.Throwable initCause(java.lang.Throwable)>(r4);

        throw r5;

        catch java.security.InvalidKeyException from label2 to label3 with label4;
    }

    public boolean engineIsCertificateEntry(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isCertificateEntry(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean engineIsKeyEntry(java.lang.String)
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        return $z0;
    }

    public void engineLoad(java.io.InputStream, char[]) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        android.security.AndroidKeyStore r0;
        java.io.InputStream r1;
        char[] r2;
        android.security.KeyStore $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: char[];

        if r1 == null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("InputStream not supported");

        throw $r5;

     label1:
        if r2 == null goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("password not supported");

        throw $r4;

     label2:
        $r3 = staticinvoke <android.security.KeyStore: android.security.KeyStore getInstance()>();

        r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore> = $r3;

        return;
    }

    public void engineSetCertificateEntry(java.lang.String, java.security.cert.Certificate) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r9;
        java.security.cert.Certificate r2;
        java.security.cert.CertificateEncodingException r3, $r14;
        byte[] r4;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r7, $r8;
        android.security.KeyStore $r6;
        java.security.KeyStoreException $r10, $r12, $r13;
        java.lang.NullPointerException $r11;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.cert.Certificate;

        $z0 = specialinvoke r0.<android.security.AndroidKeyStore: boolean isKeyEntry(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r12 = new java.security.KeyStoreException;

        specialinvoke $r12.<java.security.KeyStoreException: void <init>(java.lang.String)>("Entry exists and is not a trusted certificate");

        throw $r12;

     label1:
        if r2 != null goto label2;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("cert == null");

        throw $r11;

     label2:
        r4 = virtualinvoke r2.<java.security.cert.Certificate: byte[] getEncoded()>();

     label3:
        $r6 = r0.<android.security.AndroidKeyStore: android.security.KeyStore mKeyStore>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CACERT_");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r6.<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>($r9, r4, -1, 0);

        if $z1 != 0 goto label5;

        $r10 = new java.security.KeyStoreException;

        specialinvoke $r10.<java.security.KeyStoreException: void <init>(java.lang.String)>("Couldn\'t insert certificate; is KeyStore initialized?");

        throw $r10;

     label4:
        $r14 := @caughtexception;

        r3 = $r14;

        $r13 = new java.security.KeyStoreException;

        specialinvoke $r13.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r3);

        throw $r13;

     label5:
        return;

        catch java.security.cert.CertificateEncodingException from label2 to label3 with label4;
    }

    public void engineSetEntry(java.lang.String, java.security.KeyStore$Entry, java.security.KeyStore$ProtectionParameter) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1, $r9, $r16, $r18;
        java.security.KeyStore$Entry r2;
        java.security.KeyStore$ProtectionParameter r3;
        java.security.KeyStore$PrivateKeyEntry r4;
        boolean $z0, $z1, $z2, $z3;
        java.security.KeyStoreException $r5, $r13, $r22;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r15, $r19;
        java.security.PrivateKey $r10;
        java.security.cert.Certificate[] $r11;
        android.security.KeyStoreParameter $r12;
        java.lang.Class $r17;
        java.security.cert.Certificate $r20;
        java.security.KeyStore$TrustedCertificateEntry $r21;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.KeyStore$Entry;

        r3 := @parameter2: java.security.KeyStore$ProtectionParameter;

        if r2 != null goto label1;

        $r22 = new java.security.KeyStoreException;

        specialinvoke $r22.<java.security.KeyStoreException: void <init>(java.lang.String)>("entry == null");

        throw $r22;

     label1:
        $z0 = virtualinvoke r0.<android.security.AndroidKeyStore: boolean engineContainsAlias(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.security.AndroidKeyStore: void engineDeleteEntry(java.lang.String)>(r1);

     label2:
        $z1 = r2 instanceof java.security.KeyStore$TrustedCertificateEntry;

        if $z1 == 0 goto label3;

        $r21 = (java.security.KeyStore$TrustedCertificateEntry) r2;

        $r20 = virtualinvoke $r21.<java.security.KeyStore$TrustedCertificateEntry: java.security.cert.Certificate getTrustedCertificate()>();

        virtualinvoke r0.<android.security.AndroidKeyStore: void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)>(r1, $r20);

        return;

     label3:
        if r3 == null goto label4;

        $z3 = r3 instanceof android.security.KeyStoreParameter;

        if $z3 != 0 goto label4;

        $r13 = new java.security.KeyStoreException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("protParam should be android.security.KeyStoreParameter; was: ");

        $r17 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r16 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.security.KeyStoreException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label4:
        $z2 = r2 instanceof java.security.KeyStore$PrivateKeyEntry;

        if $z2 == 0 goto label5;

        r4 = (java.security.KeyStore$PrivateKeyEntry) r2;

        $r10 = virtualinvoke r4.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey getPrivateKey()>();

        $r11 = virtualinvoke r4.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>();

        $r12 = (android.security.KeyStoreParameter) r3;

        specialinvoke r0.<android.security.AndroidKeyStore: void setPrivateKeyEntry(java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],android.security.KeyStoreParameter)>(r1, $r10, $r11, $r12);

        return;

     label5:
        $r5 = new java.security.KeyStoreException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entry must be a PrivateKeyEntry or TrustedCertificateEntry; was ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.KeyStoreException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    public void engineSetKeyEntry(java.lang.String, java.security.Key, char[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        java.security.Key r2;
        char[] r3;
        java.security.cert.Certificate[] r4;
        boolean $z0;
        java.security.KeyStoreException $r5, $r7;
        java.security.PrivateKey $r6;
        int $i0;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Key;

        r3 := @parameter2: char[];

        r4 := @parameter3: java.security.cert.Certificate[];

        if r3 == null goto label1;

        $i0 = lengthof r3;

        if $i0 <= 0 goto label1;

        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.String)>("entries cannot be protected with passwords");

        throw $r7;

     label1:
        $z0 = r2 instanceof java.security.PrivateKey;

        if $z0 == 0 goto label2;

        $r6 = (java.security.PrivateKey) r2;

        specialinvoke r0.<android.security.AndroidKeyStore: void setPrivateKeyEntry(java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],android.security.KeyStoreParameter)>(r1, $r6, r4, null);

        return;

     label2:
        $r5 = new java.security.KeyStoreException;

        specialinvoke $r5.<java.security.KeyStoreException: void <init>(java.lang.String)>("Only PrivateKeys are supported");

        throw $r5;
    }

    public void engineSetKeyEntry(java.lang.String, byte[], java.security.cert.Certificate[]) throws java.security.KeyStoreException
    {
        android.security.AndroidKeyStore r0;
        java.lang.String r1;
        byte[] r2;
        java.security.cert.Certificate[] r3;
        java.security.KeyStoreException $r4;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.security.cert.Certificate[];

        $r4 = new java.security.KeyStoreException;

        specialinvoke $r4.<java.security.KeyStoreException: void <init>(java.lang.String)>("Operation not supported because key encoding is unknown");

        throw $r4;
    }

    public int engineSize()
    {
        android.security.AndroidKeyStore r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: android.security.AndroidKeyStore;

        $r1 = specialinvoke r0.<android.security.AndroidKeyStore: java.util.Set getUniqueAliases()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        return $i0;
    }

    public void engineStore(java.io.OutputStream, char[]) throws java.io.IOException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        android.security.AndroidKeyStore r0;
        java.io.OutputStream r1;
        char[] r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: android.security.AndroidKeyStore;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: char[];

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Can not serialize AndroidKeyStore to OutputStream");

        throw $r3;
    }

    public static void <clinit>()
    {
        <android.security.AndroidKeyStore: java.lang.String NAME> = "AndroidKeyStore";

        return;
    }
}
