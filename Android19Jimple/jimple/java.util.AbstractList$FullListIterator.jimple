final class java.util.AbstractList$FullListIterator extends java.util.AbstractList$SimpleListIterator implements java.util.ListIterator
{
    final java.util.AbstractList this$0;

    void <init>(java.util.AbstractList, int)
    {
        java.util.AbstractList$FullListIterator r0;
        java.util.AbstractList r1;
        int i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r2;

        r0 := @this: java.util.AbstractList$FullListIterator;

        r1 := @parameter0: java.util.AbstractList;

        i0 := @parameter1: int;

        r0.<java.util.AbstractList$FullListIterator: java.util.AbstractList this$0> = r1;

        specialinvoke r0.<java.util.AbstractList$SimpleListIterator: void <init>(java.util.AbstractList)>(r1);

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r1.<java.util.AbstractList: int size()>();

        if i0 > $i1 goto label1;

        $i2 = i0 - 1;

        r0.<java.util.AbstractList$FullListIterator: int pos> = $i2;

        return;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;
    }

    public void add(java.lang.Object)
    {
        java.util.AbstractList$FullListIterator r0;
        java.lang.Object r1;
        java.util.AbstractList $r3, $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.ConcurrentModificationException $r4;
        java.lang.IndexOutOfBoundsException $r8;
        java.util.NoSuchElementException $r9;

        r0 := @this: java.util.AbstractList$FullListIterator;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<java.util.AbstractList$FullListIterator: int expectedModCount>;

        $r3 = r0.<java.util.AbstractList$FullListIterator: java.util.AbstractList this$0>;

        $i0 = $r3.<java.util.AbstractList: int modCount>;

        if $i1 != $i0 goto label5;

     label1:
        $r5 = r0.<java.util.AbstractList$FullListIterator: java.util.AbstractList this$0>;

        $i2 = r0.<java.util.AbstractList$FullListIterator: int pos>;

        $i3 = 1 + $i2;

        virtualinvoke $r5.<java.util.AbstractList: void add(int,java.lang.Object)>($i3, r1);

     label2:
        $i4 = r0.<java.util.AbstractList$FullListIterator: int pos>;

        $i5 = 1 + $i4;

        r0.<java.util.AbstractList$FullListIterator: int pos> = $i5;

        r0.<java.util.AbstractList$FullListIterator: int lastPosition> = -1;

        $r6 = r0.<java.util.AbstractList$FullListIterator: java.util.AbstractList this$0>;

        $i7 = $r6.<java.util.AbstractList: int modCount>;

        $i6 = r0.<java.util.AbstractList$FullListIterator: int expectedModCount>;

        if $i7 == $i6 goto label3;

        $r7 = r0.<java.util.AbstractList$FullListIterator: java.util.AbstractList this$0>;

        $i8 = $r7.<java.util.AbstractList: int modCount>;

        r0.<java.util.AbstractList$FullListIterator: int expectedModCount> = $i8;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        $r9 = new java.util.NoSuchElementException;

        specialinvoke $r9.<java.util.NoSuchElementException: void <init>()>();

        throw $r9;

     label5:
        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label4;
    }

    public boolean hasPrevious()
    {
        java.util.AbstractList$FullListIterator r0;
        int $i0;

        r0 := @this: java.util.AbstractList$FullListIterator;

        $i0 = r0.<java.util.AbstractList$FullListIterator: int pos>;

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int nextIndex()
    {
        java.util.AbstractList$FullListIterator r0;
        int $i0, $i1;

        r0 := @this: java.util.AbstractList$FullListIterator;

        $i0 = r0.<java.util.AbstractList$FullListIterator: int pos>;

        $i1 = 1 + $i0;

        return $i1;
    }

    public java.lang.Object previous()
    {
        java.util.AbstractList$FullListIterator r0;
        java.lang.Object r2;
        java.util.AbstractList $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.ConcurrentModificationException $r4;
        java.lang.IndexOutOfBoundsException $r6;
        java.util.NoSuchElementException $r7;

        r0 := @this: java.util.AbstractList$FullListIterator;

        $i1 = r0.<java.util.AbstractList$FullListIterator: int expectedModCount>;

        $r3 = r0.<java.util.AbstractList$FullListIterator: java.util.AbstractList this$0>;

        $i0 = $r3.<java.util.AbstractList: int modCount>;

        if $i1 != $i0 goto label4;

     label1:
        $r5 = r0.<java.util.AbstractList$FullListIterator: java.util.AbstractList this$0>;

        $i2 = r0.<java.util.AbstractList$FullListIterator: int pos>;

        r2 = virtualinvoke $r5.<java.util.AbstractList: java.lang.Object get(int)>($i2);

        $i3 = r0.<java.util.AbstractList$FullListIterator: int pos>;

        r0.<java.util.AbstractList$FullListIterator: int lastPosition> = $i3;

        $i4 = r0.<java.util.AbstractList$FullListIterator: int pos>;

        $i5 = -1 + $i4;

        r0.<java.util.AbstractList$FullListIterator: int pos> = $i5;

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;

     label4:
        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }

    public int previousIndex()
    {
        java.util.AbstractList$FullListIterator r0;
        int $i0;

        r0 := @this: java.util.AbstractList$FullListIterator;

        $i0 = r0.<java.util.AbstractList$FullListIterator: int pos>;

        return $i0;
    }

    public void set(java.lang.Object)
    {
        java.util.AbstractList$FullListIterator r0;
        java.lang.Object r1;
        java.util.AbstractList $r3, $r5;
        int $i0, $i1, $i2;
        java.util.ConcurrentModificationException $r4;
        java.lang.IndexOutOfBoundsException $r7;
        java.lang.IllegalStateException $r8;

        r0 := @this: java.util.AbstractList$FullListIterator;

        r1 := @parameter0: java.lang.Object;

        $i1 = r0.<java.util.AbstractList$FullListIterator: int expectedModCount>;

        $r3 = r0.<java.util.AbstractList$FullListIterator: java.util.AbstractList this$0>;

        $i0 = $r3.<java.util.AbstractList: int modCount>;

        if $i1 != $i0 goto label4;

     label1:
        $r5 = r0.<java.util.AbstractList$FullListIterator: java.util.AbstractList this$0>;

        $i2 = r0.<java.util.AbstractList$FullListIterator: int lastPosition>;

        virtualinvoke $r5.<java.util.AbstractList: java.lang.Object set(int,java.lang.Object)>($i2, r1);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label4:
        $r4 = new java.util.ConcurrentModificationException;

        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r4;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
    }
}
