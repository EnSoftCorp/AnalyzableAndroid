public class com.android.internal.logging.AndroidConfig extends java.lang.Object
{

    public void <init>()
    {
        com.android.internal.logging.AndroidConfig r0;
        java.lang.Exception r1, $r7;
        java.util.logging.Logger r2, $r5;
        com.android.internal.logging.AndroidHandler $r3;
        java.util.logging.Level $r4, $r6;

        r0 := @this: com.android.internal.logging.AndroidConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("");

        $r3 = new com.android.internal.logging.AndroidHandler;

        specialinvoke $r3.<com.android.internal.logging.AndroidHandler: void <init>()>();

        virtualinvoke r2.<java.util.logging.Logger: void addHandler(java.util.logging.Handler)>($r3);

        $r4 = <java.util.logging.Level: java.util.logging.Level INFO>;

        virtualinvoke r2.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r4);

        $r5 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("org.apache");

        $r6 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r5.<java.util.logging.Logger: void setLevel(java.util.logging.Level)>($r6);

     label2:
        return;

     label3:
        $r7 := @caughtexception;

        r1 = $r7;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
