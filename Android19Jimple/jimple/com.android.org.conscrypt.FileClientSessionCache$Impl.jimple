class com.android.org.conscrypt.FileClientSessionCache$Impl extends java.lang.Object implements com.android.org.conscrypt.SSLClientSessionCache
{
    java.util.Map accessOrder;
    final java.io.File directory;
    java.lang.String[] initialFiles;
    int size;

    void <init>(java.io.File) throws java.io.IOException
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        java.io.File r1;
        boolean z0, $z1, $z2;
        java.util.Map $r2;
        java.io.IOException $r3, $r13, $r18;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r14, $r15, $r17, $r19, $r20, $r22;
        java.lang.String $r8, $r16, $r21;
        java.lang.String[] $r9, $r10, $r11, $r12;
        int $i0;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map newAccessOrder()>();

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder> = $r2;

        z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if z0 == 0 goto label1;

        $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z2 != 0 goto label1;

        $r18 = new java.io.IOException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exists but is not a directory.");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label1:
        if z0 == 0 goto label4;

        $r9 = virtualinvoke r1.<java.io.File: java.lang.String[] list()>();

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles> = $r9;

        $r10 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        if $r10 != null goto label2;

        $r13 = new java.io.IOException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exists but cannot list contents.");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label2:
        $r11 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r11);

        $r12 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        $i0 = lengthof $r12;

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size> = $i0;

     label3:
        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.io.File directory> = r1;

        return;

     label4:
        $z1 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label5;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creation of ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" directory failed.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label5:
        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size> = 0;

        goto label3;
    }

    private void delete(java.io.File)
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        java.io.File r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        java.io.IOException $r7;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>()>();

        staticinvoke <java.lang.System: void logW(java.lang.String,java.lang.Throwable)>($r6, $r7);

     label1:
        $i0 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size>;

        $i1 = -1 + $i0;

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size> = $i1;

        return;
    }

    private static java.lang.String fileName(java.lang.String, int)
    {
        java.lang.String r0, $r5;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.NullPointerException $r6;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("host == null");

        throw $r6;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private void indexFiles()
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        java.lang.String[] r1;
        java.util.TreeSet r2, $r7;
        int i0, i1;
        java.util.Map r3, $r8, $r11;
        java.util.Iterator r4;
        com.android.org.conscrypt.FileClientSessionCache$CacheFile r5, $r13;
        java.lang.String r6, $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10;
        java.io.File $r14;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        if r1 == null goto label6;

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles> = null;

        $r7 = new java.util.TreeSet;

        specialinvoke $r7.<java.util.TreeSet: void <init>()>();

        r2 = $r7;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r6 = r1[i1];

        $r11 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        $z2 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r6);

        if $z2 != 0 goto label2;

        $r13 = new com.android.org.conscrypt.FileClientSessionCache$CacheFile;

        $r14 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.io.File directory>;

        specialinvoke $r13.<com.android.org.conscrypt.FileClientSessionCache$CacheFile: void <init>(java.io.File,java.lang.String)>($r14, r6);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r13);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        r3 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map newAccessOrder()>();

        r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.org.conscrypt.FileClientSessionCache$CacheFile) $r10;

        $r9 = r5.<com.android.org.conscrypt.FileClientSessionCache$CacheFile: java.lang.String name>;

        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r5);

        goto label4;

     label5:
        $r8 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke r3.<java.util.Map: void putAll(java.util.Map)>($r8);

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder> = r3;

     label6:
        return;
    }

    static void logReadError(java.lang.String, java.io.File, java.lang.Throwable)
    {
        java.lang.String r0, $r9;
        java.io.File r1;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading session data for ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void logW(java.lang.String,java.lang.Throwable)>($r9, r2);

        return;
    }

    static void logWriteError(java.lang.String, java.io.File, java.lang.Throwable)
    {
        java.lang.String r0, $r9;
        java.io.File r1;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.Throwable;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing session data for ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <java.lang.System: void logW(java.lang.String,java.lang.Throwable)>($r9, r2);

        return;
    }

    private void makeRoom()
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.lang.Object $r4;
        java.io.File $r5;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        $i1 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size>;

        if $i1 > 12 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void indexFiles()>();

        $i2 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size>;

        i0 = -12 + $i2;

        $r2 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.io.File) $r4;

        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>($r5);

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        i0 = i0 + -1;

        if i0 > 0 goto label2;

        return;
    }

    private static java.util.Map newAccessOrder()
    {
        java.util.LinkedHashMap $r0;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(12, 0.75F, 1);

        return $r0;
    }

    public byte[] getSessionData(java.lang.String, int)
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        java.lang.String r1, r3;
        int i0, $i1, $i3;
        java.lang.Throwable r2, r8, $r21, $r22;
        java.io.File r4, $r16, $r17;
        java.lang.String[] r5, $r15;
        byte[] r6;
        java.io.FileInputStream r7, $r12;
        java.io.IOException r9, $r20;
        java.io.FileNotFoundException r10, $r23;
        java.util.Map $r11, $r19;
        java.lang.Object $r13;
        long $l2;
        java.io.DataInputStream $r14;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        entermonitor r0;

     label01:
        r3 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String fileName(java.lang.String,int)>(r1, i0);

        $r11 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.io.File) $r13;

     label02:
        if r4 != null goto label09;

     label03:
        r5 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

     label04:
        if r5 != null goto label06;

        r6 = null;

     label05:
        exitmonitor r0;

        return r6;

     label06:
        $r15 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        $i3 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r15, r3);

        if $i3 >= 0 goto label08;

     label07:
        r6 = null;

        goto label05;

     label08:
        $r17 = new java.io.File;

        $r16 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.io.File directory>;

        specialinvoke $r17.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, r3);

        r4 = $r17;

        $r19 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label09:
        $r12 = new java.io.FileInputStream;

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.File)>(r4);

        r7 = $r12;

     label10:
        $l2 = virtualinvoke r4.<java.io.File: long length()>();

        $i1 = (int) $l2;

        r6 = newarray (byte)[$i1];

        $r14 = new java.io.DataInputStream;

        specialinvoke $r14.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r7);

        virtualinvoke $r14.<java.io.DataInputStream: void readFully(byte[])>(r6);

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

     label12:
        goto label05;

     label13:
        $r22 := @caughtexception;

        r2 = $r22;

        exitmonitor r0;

        throw r2;

     label14:
        $r23 := @caughtexception;

        r10 = $r23;

     label15:
        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logReadError(java.lang.String,java.io.File,java.lang.Throwable)>(r1, r4, r10);

     label16:
        r6 = null;

        goto label05;

     label17:
        $r20 := @caughtexception;

        r9 = $r20;

     label18:
        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logReadError(java.lang.String,java.io.File,java.lang.Throwable)>(r1, r4, r9);

     label19:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

     label20:
        r6 = null;

        goto label05;

     label21:
        $r21 := @caughtexception;

        r8 = $r21;

     label22:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r7);

     label23:
        throw r8;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.io.FileNotFoundException from label09 to label10 with label14;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.io.IOException from label10 to label11 with label17;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label15 to label16 with label13;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label13;
        catch java.lang.Throwable from label22 to label23 with label13;
    }

    public void putSessionData(javax.net.ssl.SSLSession, byte[])
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        javax.net.ssl.SSLSession r1;
        byte[] r2;
        java.lang.Throwable r3, r8, r9, r12, r14, $r25, $r28, $r30, $r36, $r37;
        java.lang.String r4, r5;
        java.io.File r6, $r17, $r19;
        boolean z0;
        java.io.FileOutputStream r7, $r18;
        java.io.IOException r10, r11, r13, r15, $r27, $r40, $r42, $r46;
        java.io.FileNotFoundException r16, $r31;
        int $i0, $i1, $i2;
        java.util.Map $r20;
        java.lang.NullPointerException $r24;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 := @parameter0: javax.net.ssl.SSLSession;

        r2 := @parameter1: byte[];

        entermonitor r0;

     label01:
        r4 = interfaceinvoke r1.<javax.net.ssl.SSLSession: java.lang.String getPeerHost()>();

     label02:
        if r2 != null goto label05;

     label03:
        $r24 = new java.lang.NullPointerException;

        specialinvoke $r24.<java.lang.NullPointerException: void <init>(java.lang.String)>("sessionData == null");

        throw $r24;

     label04:
        $r30 := @caughtexception;

        r3 = $r30;

        exitmonitor r0;

        throw r3;

     label05:
        $i0 = interfaceinvoke r1.<javax.net.ssl.SSLSession: int getPeerPort()>();

        r5 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String fileName(java.lang.String,int)>(r4, $i0);

        $r17 = new java.io.File;

        $r19 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.io.File directory>;

        specialinvoke $r17.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, r5);

        r6 = $r17;

        z0 = virtualinvoke r6.<java.io.File: boolean exists()>();

     label06:
        $r18 = new java.io.FileOutputStream;

        specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.io.File)>(r6);

        r7 = $r18;

     label07:
        if z0 != 0 goto label09;

     label08:
        $i1 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size>;

        $i2 = 1 + $i1;

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size> = $i2;

        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void makeRoom()>();

     label09:
        virtualinvoke r7.<java.io.FileOutputStream: void write(byte[])>(r2);

     label10:
        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label11:
        goto label16;

     label12:
        exitmonitor r0;

        return;

     label13:
        $r31 := @caughtexception;

        r16 = $r31;

     label14:
        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r4, r6, r16);

     label15:
        goto label12;

     label16:
        $r20 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

     label17:
        goto label12;

     label18:
        $r27 := @caughtexception;

        r15 = $r27;

     label19:
        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r4, r6, r15);

     label20:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r6);

     label21:
        goto label12;

     label22:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r6);

     label23:
        throw r14;

     label24:
        $r42 := @caughtexception;

        r11 = $r42;

     label25:
        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r4, r6, r11);

     label26:
        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label27:
        goto label28;

     label28:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r6);

     label29:
        goto label12;

     label30:
        $r40 := @caughtexception;

        r13 = $r40;

     label31:
        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r4, r6, r13);

     label32:
        goto label33;

     label33:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r6);

     label34:
        goto label12;

     label35:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r6);

     label36:
        throw r12;

     label37:
        $r28 := @caughtexception;

        r8 = $r28;

     label38:
        virtualinvoke r7.<java.io.FileOutputStream: void close()>();

     label39:
        goto label40;

     label40:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r6);

     label41:
        throw r8;

     label42:
        $r46 := @caughtexception;

        r10 = $r46;

     label43:
        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r4, r6, r10);

     label44:
        goto label45;

     label45:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r6);

     label46:
        goto label41;

     label47:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r6);

     label48:
        throw r9;

     label49:
        $r25 := @caughtexception;

        r14 = $r25;

        goto label22;

     label50:
        $r37 := @caughtexception;

        r12 = $r37;

        goto label35;

     label51:
        $r36 := @caughtexception;

        r9 = $r36;

        goto label47;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.io.FileNotFoundException from label06 to label07 with label13;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
        catch java.io.IOException from label09 to label10 with label24;
        catch java.lang.Throwable from label09 to label10 with label37;
        catch java.io.IOException from label10 to label11 with label18;
        catch java.lang.Throwable from label10 to label11 with label49;
        catch java.lang.Throwable from label12 to label12 with label04;
        catch java.lang.Throwable from label14 to label15 with label04;
        catch java.lang.Throwable from label16 to label17 with label04;
        catch java.lang.Throwable from label19 to label20 with label49;
        catch java.lang.Throwable from label20 to label21 with label04;
        catch java.lang.Throwable from label22 to label22 with label04;
        catch java.lang.Throwable from label22 to label23 with label04;
        catch java.lang.Throwable from label23 to label24 with label04;
        catch java.lang.Throwable from label24 to label24 with label04;
        catch java.lang.Throwable from label25 to label26 with label37;
        catch java.io.IOException from label26 to label27 with label30;
        catch java.lang.Throwable from label26 to label27 with label50;
        catch java.lang.Throwable from label28 to label29 with label04;
        catch java.lang.Throwable from label30 to label30 with label04;
        catch java.lang.Throwable from label31 to label32 with label50;
        catch java.lang.Throwable from label33 to label34 with label04;
        catch java.lang.Throwable from label35 to label35 with label04;
        catch java.lang.Throwable from label35 to label36 with label04;
        catch java.lang.Throwable from label36 to label37 with label04;
        catch java.lang.Throwable from label37 to label37 with label04;
        catch java.io.IOException from label38 to label39 with label42;
        catch java.lang.Throwable from label38 to label39 with label51;
        catch java.lang.Throwable from label40 to label41 with label04;
        catch java.lang.Throwable from label41 to label42 with label04;
        catch java.lang.Throwable from label42 to label42 with label04;
        catch java.lang.Throwable from label43 to label44 with label51;
        catch java.lang.Throwable from label45 to label46 with label04;
        catch java.lang.Throwable from label47 to label47 with label04;
        catch java.lang.Throwable from label47 to label48 with label04;
        catch java.lang.Throwable from label48 to label49 with label04;
        catch java.lang.Throwable from label49 to label49 with label04;
    }
}
