public class org.apache.http.impl.auth.NTLMScheme extends org.apache.http.impl.auth.AuthSchemeBase
{
    private java.lang.String challenge;
    private final org.apache.http.impl.auth.NTLMEngine engine;
    private org.apache.http.impl.auth.NTLMScheme$State state;

    public void <init>(org.apache.http.impl.auth.NTLMEngine)
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.impl.auth.NTLMEngine r1;
        org.apache.http.impl.auth.NTLMScheme$State $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: org.apache.http.impl.auth.NTLMEngine;

        specialinvoke r0.<org.apache.http.impl.auth.AuthSchemeBase: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("NTLM engine may not be null");

        throw $r3;

     label1:
        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine> = r1;

        $r2 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State UNINITIATED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r2;

        r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = null;

        return;
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.auth.Credentials r1;
        org.apache.http.HttpRequest r2;
        org.apache.http.auth.NTCredentials r4;
        java.lang.String r5, $r10, $r11, $r25, $r26, $r27, $r28, $r29, $r32, $r37, $r38;
        org.apache.http.util.CharArrayBuffer r6, $r13;
        org.apache.http.impl.auth.NTLMScheme$State $r7, $r8, $r12, $r14, $r16, $r17, $r19, $r23, $r30;
        org.apache.http.impl.auth.NTLMEngine $r9, $r24;
        boolean $z0;
        org.apache.http.message.BufferedHeader $r15;
        org.apache.http.auth.AuthenticationException $r18;
        java.lang.StringBuilder $r20, $r21, $r22, $r33, $r36, $r39;
        java.lang.ClassCastException $r31;
        java.lang.Class $r34;
        org.apache.http.auth.InvalidCredentialsException $r35;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: org.apache.http.auth.Credentials;

        r2 := @parameter1: org.apache.http.HttpRequest;

     label1:
        r4 = (org.apache.http.auth.NTCredentials) r1;

     label2:
        $r8 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r7 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED>;

        if $r8 == $r7 goto label3;

        $r17 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r14 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        if $r17 != $r14 goto label7;

     label3:
        $r9 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine>;

        $r10 = virtualinvoke r4.<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>();

        $r11 = virtualinvoke r4.<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>();

        r5 = interfaceinvoke $r9.<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType1Msg(java.lang.String,java.lang.String)>($r10, $r11);

        $r12 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r12;

     label4:
        $r13 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r13.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(32);

        r6 = $r13;

        $z0 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMScheme: boolean isProxy()>();

        if $z0 == 0 goto label9;

        virtualinvoke r6.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Proxy-Authorization");

     label5:
        virtualinvoke r6.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": NTLM ");

        virtualinvoke r6.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(r5);

        $r15 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r15.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>(r6);

        return $r15;

     label6:
        $r31 := @caughtexception;

        $r35 = new org.apache.http.auth.InvalidCredentialsException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Credentials cannot be used for NTLM authentication: ");

        $r34 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r38 = virtualinvoke $r34.<java.lang.Class: java.lang.String getName()>();

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<org.apache.http.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r37);

        throw $r35;

     label7:
        $r19 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r16 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED>;

        if $r19 != $r16 goto label8;

        $r24 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine>;

        $r27 = virtualinvoke r4.<org.apache.http.auth.NTCredentials: java.lang.String getUserName()>();

        $r26 = virtualinvoke r4.<org.apache.http.auth.NTCredentials: java.lang.String getPassword()>();

        $r29 = virtualinvoke r4.<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>();

        $r28 = virtualinvoke r4.<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>();

        $r32 = r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge>;

        r5 = interfaceinvoke $r24.<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r27, $r26, $r29, $r28, $r32);

        $r30 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r30;

        goto label4;

     label8:
        $r18 = new org.apache.http.auth.AuthenticationException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected state: ");

        $r23 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r25);

        throw $r18;

     label9:
        virtualinvoke r6.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Authorization");

        goto label5;

        catch java.lang.ClassCastException from label1 to label2 with label6;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        java.lang.String r1;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getRealm()
    {
        org.apache.http.impl.auth.NTLMScheme r0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return null;
    }

    public java.lang.String getSchemeName()
    {
        org.apache.http.impl.auth.NTLMScheme r0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return "ntlm";
    }

    public boolean isComplete()
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.impl.auth.NTLMScheme$State $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        $r2 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r1 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r3 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        if $r4 != $r3 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean isConnectionBased()
    {
        org.apache.http.impl.auth.NTLMScheme r0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return 1;
    }

    protected void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.util.CharArrayBuffer r1;
        int i0, i1, $i2;
        java.lang.String r2;
        org.apache.http.impl.auth.NTLMScheme$State $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i0, i1);

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 != 0 goto label3;

        $r5 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r4 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State UNINITIATED>;

        if $r5 != $r4 goto label2;

        $r7 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r7;

     label1:
        r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = null;

        return;

     label2:
        $r6 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r6;

        goto label1;

     label3:
        $r3 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r3;

        r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = r2;

        return;
    }
}
