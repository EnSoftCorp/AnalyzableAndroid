public class com.android.org.chromium.base.ObserverList extends java.lang.Object implements java.lang.Iterable
{
    static final boolean $assertionsDisabled;
    private int mIterationDepth;
    public final java.util.List mObservers;

    static void <clinit>()
    {
        boolean z0, $z1;
        java.lang.Class $r0;

        $r0 = class "com/android/org/chromium/base/ObserverList";

        $z1 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        <com.android.org.chromium.base.ObserverList: boolean $assertionsDisabled> = z0;

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    public void <init>()
    {
        com.android.org.chromium.base.ObserverList r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.org.chromium.base.ObserverList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.org.chromium.base.ObserverList: java.util.List mObservers> = $r1;

        r0.<com.android.org.chromium.base.ObserverList: int mIterationDepth> = 0;

        return;
    }

    static void access$100(com.android.org.chromium.base.ObserverList)
    {
        com.android.org.chromium.base.ObserverList r0;

        r0 := @parameter0: com.android.org.chromium.base.ObserverList;

        specialinvoke r0.<com.android.org.chromium.base.ObserverList: void incrementIterationDepth()>();

        return;
    }

    static int access$200(com.android.org.chromium.base.ObserverList)
    {
        com.android.org.chromium.base.ObserverList r0;
        int $i0;

        r0 := @parameter0: com.android.org.chromium.base.ObserverList;

        $i0 = specialinvoke r0.<com.android.org.chromium.base.ObserverList: int getSize()>();

        return $i0;
    }

    static java.lang.Object access$300(com.android.org.chromium.base.ObserverList, int)
    {
        com.android.org.chromium.base.ObserverList r0;
        int i0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.org.chromium.base.ObserverList;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.org.chromium.base.ObserverList: java.lang.Object getObserverAt(int)>(i0);

        return $r1;
    }

    static void access$400(com.android.org.chromium.base.ObserverList)
    {
        com.android.org.chromium.base.ObserverList r0;

        r0 := @parameter0: com.android.org.chromium.base.ObserverList;

        specialinvoke r0.<com.android.org.chromium.base.ObserverList: void decrementIterationDepthAndCompactIfNeeded()>();

        return;
    }

    private void compact()
    {
        com.android.org.chromium.base.ObserverList r0;
        int i0, $i1, $i2;
        boolean $z0;
        java.util.List $r1, $r2, $r4;
        java.lang.Object $r3;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.org.chromium.base.ObserverList;

        $z0 = <com.android.org.chromium.base.ObserverList: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i2 = r0.<com.android.org.chromium.base.ObserverList: int mIterationDepth>;

        if $i2 == 0 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r1 = r0.<com.android.org.chromium.base.ObserverList: java.util.List mObservers>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        i0 = -1 + $i1;

     label2:
        if i0 < 0 goto label4;

        $r2 = r0.<com.android.org.chromium.base.ObserverList: java.util.List mObservers>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        if $r3 != null goto label3;

        $r4 = r0.<com.android.org.chromium.base.ObserverList: java.util.List mObservers>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>(i0);

     label3:
        i0 = i0 + -1;

        goto label2;

     label4:
        return;
    }

    private void decrementIterationDepthAndCompactIfNeeded()
    {
        com.android.org.chromium.base.ObserverList r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.AssertionError $r1;

        r0 := @this: com.android.org.chromium.base.ObserverList;

        $i0 = r0.<com.android.org.chromium.base.ObserverList: int mIterationDepth>;

        $i1 = -1 + $i0;

        r0.<com.android.org.chromium.base.ObserverList: int mIterationDepth> = $i1;

        $z0 = <com.android.org.chromium.base.ObserverList: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i3 = r0.<com.android.org.chromium.base.ObserverList: int mIterationDepth>;

        if $i3 >= 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $i2 = r0.<com.android.org.chromium.base.ObserverList: int mIterationDepth>;

        if $i2 != 0 goto label2;

        specialinvoke r0.<com.android.org.chromium.base.ObserverList: void compact()>();

     label2:
        return;
    }

    private java.lang.Object getObserverAt(int)
    {
        com.android.org.chromium.base.ObserverList r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;

        r0 := @this: com.android.org.chromium.base.ObserverList;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.chromium.base.ObserverList: java.util.List mObservers>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        return $r2;
    }

    private int getSize()
    {
        com.android.org.chromium.base.ObserverList r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.base.ObserverList;

        $r1 = r0.<com.android.org.chromium.base.ObserverList: java.util.List mObservers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    private void incrementIterationDepth()
    {
        com.android.org.chromium.base.ObserverList r0;
        int $i0, $i1;

        r0 := @this: com.android.org.chromium.base.ObserverList;

        $i0 = r0.<com.android.org.chromium.base.ObserverList: int mIterationDepth>;

        $i1 = 1 + $i0;

        r0.<com.android.org.chromium.base.ObserverList: int mIterationDepth> = $i1;

        return;
    }

    public void addObserver(java.lang.Object)
    {
        com.android.org.chromium.base.ObserverList r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.AssertionError $r2;
        java.util.List $r3, $r4;

        r0 := @this: com.android.org.chromium.base.ObserverList;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r3 = r0.<com.android.org.chromium.base.ObserverList: java.util.List mObservers>;

        $z1 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z0 = <com.android.org.chromium.base.ObserverList: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r4 = r0.<com.android.org.chromium.base.ObserverList: java.util.List mObservers>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

     label3:
        return;
    }

    public java.util.Iterator iterator()
    {
        com.android.org.chromium.base.ObserverList r0;
        com.android.org.chromium.base.ObserverList$ObserverListIterator $r1;

        r0 := @this: com.android.org.chromium.base.ObserverList;

        $r1 = new com.android.org.chromium.base.ObserverList$ObserverListIterator;

        specialinvoke $r1.<com.android.org.chromium.base.ObserverList$ObserverListIterator: void <init>(com.android.org.chromium.base.ObserverList,com.android.org.chromium.base.ObserverList$1)>(r0, null);

        return $r1;
    }
}
