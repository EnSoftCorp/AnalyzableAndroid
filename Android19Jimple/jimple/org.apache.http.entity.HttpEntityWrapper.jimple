public class org.apache.http.entity.HttpEntityWrapper extends java.lang.Object implements org.apache.http.HttpEntity
{
    protected org.apache.http.HttpEntity wrappedEntity;

    public void <init>(org.apache.http.HttpEntity)
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        org.apache.http.HttpEntity r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        r1 := @parameter0: org.apache.http.HttpEntity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("wrapped entity must not be null");

        throw $r2;

     label1:
        r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity> = r1;

        return;
    }

    public void consumeContent() throws java.io.IOException
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        org.apache.http.HttpEntity $r1;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        $r1 = r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        interfaceinvoke $r1.<org.apache.http.HttpEntity: void consumeContent()>();

        return;
    }

    public java.io.InputStream getContent() throws java.io.IOException
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        org.apache.http.HttpEntity $r1;
        java.io.InputStream $r2;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        $r1 = r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        $r2 = interfaceinvoke $r1.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        return $r2;
    }

    public org.apache.http.Header getContentEncoding()
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        org.apache.http.HttpEntity $r1;
        org.apache.http.Header $r2;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        $r1 = r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        $r2 = interfaceinvoke $r1.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        return $r2;
    }

    public long getContentLength()
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        org.apache.http.HttpEntity $r1;
        long $l0;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        $r1 = r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        $l0 = interfaceinvoke $r1.<org.apache.http.HttpEntity: long getContentLength()>();

        return $l0;
    }

    public org.apache.http.Header getContentType()
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        org.apache.http.HttpEntity $r1;
        org.apache.http.Header $r2;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        $r1 = r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        $r2 = interfaceinvoke $r1.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        return $r2;
    }

    public boolean isChunked()
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        org.apache.http.HttpEntity $r1;
        boolean $z0;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        $r1 = r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        $z0 = interfaceinvoke $r1.<org.apache.http.HttpEntity: boolean isChunked()>();

        return $z0;
    }

    public boolean isRepeatable()
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        org.apache.http.HttpEntity $r1;
        boolean $z0;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        $r1 = r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        $z0 = interfaceinvoke $r1.<org.apache.http.HttpEntity: boolean isRepeatable()>();

        return $z0;
    }

    public boolean isStreaming()
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        org.apache.http.HttpEntity $r1;
        boolean $z0;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        $r1 = r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        $z0 = interfaceinvoke $r1.<org.apache.http.HttpEntity: boolean isStreaming()>();

        return $z0;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.http.entity.HttpEntityWrapper r0;
        java.io.OutputStream r1;
        org.apache.http.HttpEntity $r2;

        r0 := @this: org.apache.http.entity.HttpEntityWrapper;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<org.apache.http.entity.HttpEntityWrapper: org.apache.http.HttpEntity wrappedEntity>;

        interfaceinvoke $r2.<org.apache.http.HttpEntity: void writeTo(java.io.OutputStream)>(r1);

        return;
    }
}
