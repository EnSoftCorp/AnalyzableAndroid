class android.filterfw.GraphEnvironment$GraphHandle extends java.lang.Object
{
    private android.filterfw.core.AsyncRunner mAsyncRunner;
    private android.filterfw.core.FilterGraph mGraph;
    private android.filterfw.core.SyncRunner mSyncRunner;
    final android.filterfw.GraphEnvironment this$0;

    public void <init>(android.filterfw.GraphEnvironment, android.filterfw.core.FilterGraph)
    {
        android.filterfw.GraphEnvironment$GraphHandle r0;
        android.filterfw.GraphEnvironment r1;
        android.filterfw.core.FilterGraph r2;

        r0 := @this: android.filterfw.GraphEnvironment$GraphHandle;

        r1 := @parameter0: android.filterfw.GraphEnvironment;

        r2 := @parameter1: android.filterfw.core.FilterGraph;

        r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.GraphEnvironment this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.FilterGraph mGraph> = r2;

        return;
    }

    public android.filterfw.core.AsyncRunner getAsyncRunner(android.filterfw.core.FilterContext)
    {
        android.filterfw.GraphEnvironment$GraphHandle r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.AsyncRunner $r2, $r3, $r4, $r6;
        android.filterfw.core.FilterGraph $r5;

        r0 := @this: android.filterfw.GraphEnvironment$GraphHandle;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.AsyncRunner mAsyncRunner>;

        if $r2 != null goto label1;

        $r4 = new android.filterfw.core.AsyncRunner;

        specialinvoke $r4.<android.filterfw.core.AsyncRunner: void <init>(android.filterfw.core.FilterContext,java.lang.Class)>(r1, class "android/filterfw/core/RoundRobinScheduler");

        r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.AsyncRunner mAsyncRunner> = $r4;

        $r6 = r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.AsyncRunner mAsyncRunner>;

        $r5 = r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.FilterGraph mGraph>;

        virtualinvoke $r6.<android.filterfw.core.AsyncRunner: void setGraph(android.filterfw.core.FilterGraph)>($r5);

     label1:
        $r3 = r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.AsyncRunner mAsyncRunner>;

        return $r3;
    }

    public android.filterfw.core.FilterGraph getGraph()
    {
        android.filterfw.GraphEnvironment$GraphHandle r0;
        android.filterfw.core.FilterGraph $r1;

        r0 := @this: android.filterfw.GraphEnvironment$GraphHandle;

        $r1 = r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.FilterGraph mGraph>;

        return $r1;
    }

    public android.filterfw.core.GraphRunner getSyncRunner(android.filterfw.core.FilterContext)
    {
        android.filterfw.GraphEnvironment$GraphHandle r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.SyncRunner $r2, $r3, $r4;
        android.filterfw.core.FilterGraph $r5;

        r0 := @this: android.filterfw.GraphEnvironment$GraphHandle;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        $r2 = r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.SyncRunner mSyncRunner>;

        if $r2 != null goto label1;

        $r4 = new android.filterfw.core.SyncRunner;

        $r5 = r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.FilterGraph mGraph>;

        specialinvoke $r4.<android.filterfw.core.SyncRunner: void <init>(android.filterfw.core.FilterContext,android.filterfw.core.FilterGraph,java.lang.Class)>(r1, $r5, class "android/filterfw/core/RoundRobinScheduler");

        r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.SyncRunner mSyncRunner> = $r4;

     label1:
        $r3 = r0.<android.filterfw.GraphEnvironment$GraphHandle: android.filterfw.core.SyncRunner mSyncRunner>;

        return $r3;
    }
}
