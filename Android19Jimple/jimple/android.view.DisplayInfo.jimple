public final class android.view.DisplayInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    public java.lang.String address;
    public int appHeight;
    public int appWidth;
    public int flags;
    public int largestNominalAppHeight;
    public int largestNominalAppWidth;
    public int layerStack;
    public int logicalDensityDpi;
    public int logicalHeight;
    public int logicalWidth;
    public java.lang.String name;
    public int overscanBottom;
    public int overscanLeft;
    public int overscanRight;
    public int overscanTop;
    public java.lang.String ownerPackageName;
    public int ownerUid;
    public float physicalXDpi;
    public float physicalYDpi;
    public float refreshRate;
    public int rotation;
    public int smallestNominalAppHeight;
    public int smallestNominalAppWidth;
    public int type;

    static void <clinit>()
    {
        android.view.DisplayInfo$1 $r0;

        $r0 = new android.view.DisplayInfo$1;

        specialinvoke $r0.<android.view.DisplayInfo$1: void <init>()>();

        <android.view.DisplayInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    public void <init>()
    {
        android.view.DisplayInfo r0;

        r0 := @this: android.view.DisplayInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.view.DisplayInfo r0;
        android.os.Parcel r1;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.view.DisplayInfo: void readFromParcel(android.os.Parcel)>(r1);

        return;
    }

    void <init>(android.os.Parcel, android.view.DisplayInfo$1)
    {
        android.view.DisplayInfo r0;
        android.os.Parcel r1;
        android.view.DisplayInfo$1 r2;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.view.DisplayInfo$1;

        specialinvoke r0.<android.view.DisplayInfo: void <init>(android.os.Parcel)>(r1);

        return;
    }

    public void <init>(android.view.DisplayInfo)
    {
        android.view.DisplayInfo r0, r1;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.view.DisplayInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        virtualinvoke r0.<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>(r1);

        return;
    }

    private static java.lang.String flagsToString(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder r0, $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0 = $r1;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SECURE");

     label1:
        $i2 = i0 & 1;

        if $i2 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_SUPPORTS_PROTECTED_BUFFERS");

     label2:
        $i3 = i0 & 4;

        if $i3 == 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_PRIVATE");

     label3:
        $i4 = i0 & 8;

        if $i4 == 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", FLAG_PRESENTATION");

     label4:
        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private void getMetricsWithSize(android.util.DisplayMetrics, android.content.res.CompatibilityInfo, android.os.IBinder, int, int)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.content.res.CompatibilityInfo r2, $r4;
        android.os.IBinder r3;
        int i0, i1, i2, $i3;
        float f0, f1, f2, f3, $f4;
        boolean $z0;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        r3 := @parameter2: android.os.IBinder;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        r1.<android.util.DisplayMetrics: int noncompatDensityDpi> = i2;

        r1.<android.util.DisplayMetrics: int densityDpi> = i2;

        r1.<android.util.DisplayMetrics: int widthPixels> = i0;

        r1.<android.util.DisplayMetrics: int noncompatWidthPixels> = i0;

        r1.<android.util.DisplayMetrics: int heightPixels> = i1;

        r1.<android.util.DisplayMetrics: int noncompatHeightPixels> = i1;

        $i3 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        $f4 = (float) $i3;

        f0 = 0.00625F * $f4;

        r1.<android.util.DisplayMetrics: float noncompatDensity> = f0;

        r1.<android.util.DisplayMetrics: float density> = f0;

        f1 = r1.<android.util.DisplayMetrics: float density>;

        r1.<android.util.DisplayMetrics: float noncompatScaledDensity> = f1;

        r1.<android.util.DisplayMetrics: float scaledDensity> = f1;

        f2 = r0.<android.view.DisplayInfo: float physicalXDpi>;

        r1.<android.util.DisplayMetrics: float noncompatXdpi> = f2;

        r1.<android.util.DisplayMetrics: float xdpi> = f2;

        f3 = r0.<android.view.DisplayInfo: float physicalYDpi>;

        r1.<android.util.DisplayMetrics: float noncompatYdpi> = f3;

        r1.<android.util.DisplayMetrics: float ydpi> = f3;

        $r4 = <android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo DEFAULT_COMPATIBILITY_INFO>;

        $z0 = virtualinvoke r2.<android.content.res.CompatibilityInfo: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<android.content.res.CompatibilityInfo: void applyToDisplayMetrics(android.util.DisplayMetrics)>(r1);

     label1:
        return;
    }

    public void copyFrom(android.view.DisplayInfo)
    {
        android.view.DisplayInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String $r2, $r3, $r4;
        float $f0, $f1, $f2;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.view.DisplayInfo;

        $i0 = r1.<android.view.DisplayInfo: int layerStack>;

        r0.<android.view.DisplayInfo: int layerStack> = $i0;

        $i1 = r1.<android.view.DisplayInfo: int flags>;

        r0.<android.view.DisplayInfo: int flags> = $i1;

        $i2 = r1.<android.view.DisplayInfo: int type>;

        r0.<android.view.DisplayInfo: int type> = $i2;

        $r2 = r1.<android.view.DisplayInfo: java.lang.String address>;

        r0.<android.view.DisplayInfo: java.lang.String address> = $r2;

        $r3 = r1.<android.view.DisplayInfo: java.lang.String name>;

        r0.<android.view.DisplayInfo: java.lang.String name> = $r3;

        $i3 = r1.<android.view.DisplayInfo: int appWidth>;

        r0.<android.view.DisplayInfo: int appWidth> = $i3;

        $i4 = r1.<android.view.DisplayInfo: int appHeight>;

        r0.<android.view.DisplayInfo: int appHeight> = $i4;

        $i5 = r1.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        r0.<android.view.DisplayInfo: int smallestNominalAppWidth> = $i5;

        $i6 = r1.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        r0.<android.view.DisplayInfo: int smallestNominalAppHeight> = $i6;

        $i7 = r1.<android.view.DisplayInfo: int largestNominalAppWidth>;

        r0.<android.view.DisplayInfo: int largestNominalAppWidth> = $i7;

        $i8 = r1.<android.view.DisplayInfo: int largestNominalAppHeight>;

        r0.<android.view.DisplayInfo: int largestNominalAppHeight> = $i8;

        $i9 = r1.<android.view.DisplayInfo: int logicalWidth>;

        r0.<android.view.DisplayInfo: int logicalWidth> = $i9;

        $i10 = r1.<android.view.DisplayInfo: int logicalHeight>;

        r0.<android.view.DisplayInfo: int logicalHeight> = $i10;

        $i11 = r1.<android.view.DisplayInfo: int overscanLeft>;

        r0.<android.view.DisplayInfo: int overscanLeft> = $i11;

        $i13 = r1.<android.view.DisplayInfo: int overscanTop>;

        r0.<android.view.DisplayInfo: int overscanTop> = $i13;

        $i12 = r1.<android.view.DisplayInfo: int overscanRight>;

        r0.<android.view.DisplayInfo: int overscanRight> = $i12;

        $i15 = r1.<android.view.DisplayInfo: int overscanBottom>;

        r0.<android.view.DisplayInfo: int overscanBottom> = $i15;

        $i14 = r1.<android.view.DisplayInfo: int rotation>;

        r0.<android.view.DisplayInfo: int rotation> = $i14;

        $f0 = r1.<android.view.DisplayInfo: float refreshRate>;

        r0.<android.view.DisplayInfo: float refreshRate> = $f0;

        $i16 = r1.<android.view.DisplayInfo: int logicalDensityDpi>;

        r0.<android.view.DisplayInfo: int logicalDensityDpi> = $i16;

        $f2 = r1.<android.view.DisplayInfo: float physicalXDpi>;

        r0.<android.view.DisplayInfo: float physicalXDpi> = $f2;

        $f1 = r1.<android.view.DisplayInfo: float physicalYDpi>;

        r0.<android.view.DisplayInfo: float physicalYDpi> = $f1;

        $i17 = r1.<android.view.DisplayInfo: int ownerUid>;

        r0.<android.view.DisplayInfo: int ownerUid> = $i17;

        $r4 = r1.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        r0.<android.view.DisplayInfo: java.lang.String ownerPackageName> = $r4;

        return;
    }

    public int describeContents()
    {
        android.view.DisplayInfo r0;

        r0 := @this: android.view.DisplayInfo;

        return 0;
    }

    public boolean equals(android.view.DisplayInfo)
    {
        android.view.DisplayInfo r0, r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i35, $i36, $i38;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;
        byte $b32, $b34, $b37;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.view.DisplayInfo;

        if r1 == null goto label1;

        $i1 = r0.<android.view.DisplayInfo: int layerStack>;

        $i0 = r1.<android.view.DisplayInfo: int layerStack>;

        if $i1 != $i0 goto label1;

        $i3 = r0.<android.view.DisplayInfo: int flags>;

        $i2 = r1.<android.view.DisplayInfo: int flags>;

        if $i3 != $i2 goto label1;

        $i5 = r0.<android.view.DisplayInfo: int type>;

        $i4 = r1.<android.view.DisplayInfo: int type>;

        if $i5 != $i4 goto label1;

        $r3 = r0.<android.view.DisplayInfo: java.lang.String address>;

        $r2 = r1.<android.view.DisplayInfo: java.lang.String address>;

        $z0 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<android.view.DisplayInfo: java.lang.String name>;

        $r4 = r1.<android.view.DisplayInfo: java.lang.String name>;

        $z1 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z1 == 0 goto label1;

        $i7 = r0.<android.view.DisplayInfo: int appWidth>;

        $i6 = r1.<android.view.DisplayInfo: int appWidth>;

        if $i7 != $i6 goto label1;

        $i8 = r0.<android.view.DisplayInfo: int appHeight>;

        $i9 = r1.<android.view.DisplayInfo: int appHeight>;

        if $i8 != $i9 goto label1;

        $i10 = r0.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        $i11 = r1.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        if $i10 != $i11 goto label1;

        $i12 = r0.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        $i13 = r1.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        if $i12 != $i13 goto label1;

        $i14 = r0.<android.view.DisplayInfo: int largestNominalAppWidth>;

        $i15 = r1.<android.view.DisplayInfo: int largestNominalAppWidth>;

        if $i14 != $i15 goto label1;

        $i16 = r0.<android.view.DisplayInfo: int largestNominalAppHeight>;

        $i17 = r1.<android.view.DisplayInfo: int largestNominalAppHeight>;

        if $i16 != $i17 goto label1;

        $i18 = r0.<android.view.DisplayInfo: int logicalWidth>;

        $i19 = r1.<android.view.DisplayInfo: int logicalWidth>;

        if $i18 != $i19 goto label1;

        $i20 = r0.<android.view.DisplayInfo: int logicalHeight>;

        $i21 = r1.<android.view.DisplayInfo: int logicalHeight>;

        if $i20 != $i21 goto label1;

        $i22 = r0.<android.view.DisplayInfo: int overscanLeft>;

        $i23 = r1.<android.view.DisplayInfo: int overscanLeft>;

        if $i22 != $i23 goto label1;

        $i27 = r0.<android.view.DisplayInfo: int overscanTop>;

        $i26 = r1.<android.view.DisplayInfo: int overscanTop>;

        if $i27 != $i26 goto label1;

        $i25 = r0.<android.view.DisplayInfo: int overscanRight>;

        $i24 = r1.<android.view.DisplayInfo: int overscanRight>;

        if $i25 != $i24 goto label1;

        $i31 = r0.<android.view.DisplayInfo: int overscanBottom>;

        $i30 = r1.<android.view.DisplayInfo: int overscanBottom>;

        if $i31 != $i30 goto label1;

        $i29 = r0.<android.view.DisplayInfo: int rotation>;

        $i28 = r1.<android.view.DisplayInfo: int rotation>;

        if $i29 != $i28 goto label1;

        $f1 = r0.<android.view.DisplayInfo: float refreshRate>;

        $f0 = r1.<android.view.DisplayInfo: float refreshRate>;

        $b32 = $f1 cmpl $f0;

        if $b32 != 0 goto label1;

        $i35 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        $i33 = r1.<android.view.DisplayInfo: int logicalDensityDpi>;

        if $i35 != $i33 goto label1;

        $f2 = r0.<android.view.DisplayInfo: float physicalXDpi>;

        $f3 = r1.<android.view.DisplayInfo: float physicalXDpi>;

        $b34 = $f2 cmpl $f3;

        if $b34 != 0 goto label1;

        $f4 = r0.<android.view.DisplayInfo: float physicalYDpi>;

        $f5 = r1.<android.view.DisplayInfo: float physicalYDpi>;

        $b37 = $f4 cmpl $f5;

        if $b37 != 0 goto label1;

        $i38 = r0.<android.view.DisplayInfo: int ownerUid>;

        $i36 = r1.<android.view.DisplayInfo: int ownerUid>;

        if $i38 != $i36 goto label1;

        $r6 = r0.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        $r7 = r1.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        $z2 = staticinvoke <libcore.util.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.DisplayInfo r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.view.DisplayInfo;

        if $z0 == 0 goto label1;

        $r2 = (android.view.DisplayInfo) r1;

        $z1 = virtualinvoke r0.<android.view.DisplayInfo: boolean equals(android.view.DisplayInfo)>($r2);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void getAppMetrics(android.util.DisplayMetrics)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.content.res.CompatibilityInfo $r2;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        $r2 = <android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo DEFAULT_COMPATIBILITY_INFO>;

        virtualinvoke r0.<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder)>(r1, $r2, null);

        return;
    }

    public void getAppMetrics(android.util.DisplayMetrics, android.content.res.CompatibilityInfo, android.os.IBinder)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.content.res.CompatibilityInfo r2;
        android.os.IBinder r3;
        int $i0, $i1;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        r3 := @parameter2: android.os.IBinder;

        $i1 = r0.<android.view.DisplayInfo: int appWidth>;

        $i0 = r0.<android.view.DisplayInfo: int appHeight>;

        specialinvoke r0.<android.view.DisplayInfo: void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder,int,int)>(r1, r2, r3, $i1, $i0);

        return;
    }

    public void getAppMetrics(android.util.DisplayMetrics, android.view.DisplayAdjustments)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.view.DisplayAdjustments r2;
        android.content.res.CompatibilityInfo $r3;
        android.os.IBinder $r4;
        int $i0, $i1;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        r2 := @parameter1: android.view.DisplayAdjustments;

        $r3 = virtualinvoke r2.<android.view.DisplayAdjustments: android.content.res.CompatibilityInfo getCompatibilityInfo()>();

        $r4 = virtualinvoke r2.<android.view.DisplayAdjustments: android.os.IBinder getActivityToken()>();

        $i1 = r0.<android.view.DisplayInfo: int appWidth>;

        $i0 = r0.<android.view.DisplayInfo: int appHeight>;

        specialinvoke r0.<android.view.DisplayInfo: void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder,int,int)>(r1, $r3, $r4, $i1, $i0);

        return;
    }

    public void getLogicalMetrics(android.util.DisplayMetrics, android.content.res.CompatibilityInfo, android.os.IBinder)
    {
        android.view.DisplayInfo r0;
        android.util.DisplayMetrics r1;
        android.content.res.CompatibilityInfo r2;
        android.os.IBinder r3;
        int $i0, $i1;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.util.DisplayMetrics;

        r2 := @parameter1: android.content.res.CompatibilityInfo;

        r3 := @parameter2: android.os.IBinder;

        $i1 = r0.<android.view.DisplayInfo: int logicalWidth>;

        $i0 = r0.<android.view.DisplayInfo: int logicalHeight>;

        specialinvoke r0.<android.view.DisplayInfo: void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder,int,int)>(r1, r2, r3, $i1, $i0);

        return;
    }

    public int getNaturalHeight()
    {
        android.view.DisplayInfo r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.DisplayInfo;

        $i0 = r0.<android.view.DisplayInfo: int rotation>;

        if $i0 == 0 goto label1;

        $i2 = r0.<android.view.DisplayInfo: int rotation>;

        if $i2 != 2 goto label2;

     label1:
        $i1 = r0.<android.view.DisplayInfo: int logicalHeight>;

        return $i1;

     label2:
        $i3 = r0.<android.view.DisplayInfo: int logicalWidth>;

        return $i3;
    }

    public int getNaturalWidth()
    {
        android.view.DisplayInfo r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.DisplayInfo;

        $i0 = r0.<android.view.DisplayInfo: int rotation>;

        if $i0 == 0 goto label1;

        $i2 = r0.<android.view.DisplayInfo: int rotation>;

        if $i2 != 2 goto label2;

     label1:
        $i1 = r0.<android.view.DisplayInfo: int logicalWidth>;

        return $i1;

     label2:
        $i3 = r0.<android.view.DisplayInfo: int logicalHeight>;

        return $i3;
    }

    public boolean hasAccess(int)
    {
        android.view.DisplayInfo r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.view.DisplayInfo;

        i0 := @parameter0: int;

        $i2 = r0.<android.view.DisplayInfo: int flags>;

        $i1 = r0.<android.view.DisplayInfo: int ownerUid>;

        $z0 = staticinvoke <android.view.Display: boolean hasAccess(int,int,int)>(i0, $i2, $i1);

        return $z0;
    }

    public int hashCode()
    {
        android.view.DisplayInfo r0;

        r0 := @this: android.view.DisplayInfo;

        return 0;
    }

    public void readFromParcel(android.os.Parcel)
    {
        android.view.DisplayInfo r0;
        android.os.Parcel r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String $r2, $r3, $r4;
        float $f0, $f1, $f2;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.os.Parcel;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int layerStack> = $i0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int flags> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int type> = $i2;

        $r2 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.DisplayInfo: java.lang.String address> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.DisplayInfo: java.lang.String name> = $r3;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int appWidth> = $i3;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int appHeight> = $i4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int smallestNominalAppWidth> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int smallestNominalAppHeight> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int largestNominalAppWidth> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int largestNominalAppHeight> = $i8;

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int logicalWidth> = $i9;

        $i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int logicalHeight> = $i10;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int overscanLeft> = $i11;

        $i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int overscanTop> = $i13;

        $i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int overscanRight> = $i12;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int overscanBottom> = $i15;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int rotation> = $i14;

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.DisplayInfo: float refreshRate> = $f0;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int logicalDensityDpi> = $i16;

        $f2 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.DisplayInfo: float physicalXDpi> = $f2;

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        r0.<android.view.DisplayInfo: float physicalYDpi> = $f1;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.DisplayInfo: int ownerUid> = $i17;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.DisplayInfo: java.lang.String ownerPackageName> = $r4;

        return;
    }

    public java.lang.String toString()
    {
        android.view.DisplayInfo r0;
        java.lang.StringBuilder r1, $r2, $r44, $r47, $r55, $r57;
        java.lang.String $r4, $r45, $r48, $r50, $r51, $r54, $r58, $r60;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        float $f0, $f1, $f2;

        r0 := @this: android.view.DisplayInfo;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DisplayInfo{\"");

        $r4 = r0.<android.view.DisplayInfo: java.lang.String name>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", app ");

        $i0 = r0.<android.view.DisplayInfo: int appWidth>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i1 = r0.<android.view.DisplayInfo: int appHeight>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", real ");

        $i2 = r0.<android.view.DisplayInfo: int logicalWidth>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i3 = r0.<android.view.DisplayInfo: int logicalHeight>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $i4 = r0.<android.view.DisplayInfo: int overscanLeft>;

        if $i4 != 0 goto label1;

        $i21 = r0.<android.view.DisplayInfo: int overscanTop>;

        if $i21 != 0 goto label1;

        $i20 = r0.<android.view.DisplayInfo: int overscanRight>;

        if $i20 != 0 goto label1;

        $i22 = r0.<android.view.DisplayInfo: int overscanBottom>;

        if $i22 == 0 goto label2;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", overscan (");

        $i5 = r0.<android.view.DisplayInfo: int overscanLeft>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i6 = r0.<android.view.DisplayInfo: int overscanTop>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i7 = r0.<android.view.DisplayInfo: int overscanRight>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i8 = r0.<android.view.DisplayInfo: int overscanBottom>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", largest app ");

        $i9 = r0.<android.view.DisplayInfo: int largestNominalAppWidth>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i11 = r0.<android.view.DisplayInfo: int largestNominalAppHeight>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", smallest app ");

        $i10 = r0.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $i12 = r0.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f0 = r0.<android.view.DisplayInfo: float refreshRate>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fps, rotation");

        $i14 = r0.<android.view.DisplayInfo: int rotation>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", density ");

        $i13 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $f1 = r0.<android.view.DisplayInfo: float physicalXDpi>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $f2 = r0.<android.view.DisplayInfo: float physicalYDpi>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") dpi, layerStack ");

        $i16 = r0.<android.view.DisplayInfo: int layerStack>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type ");

        $i15 = r0.<android.view.DisplayInfo: int type>;

        $r48 = staticinvoke <android.view.Display: java.lang.String typeToString(int)>($i15);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = r0.<android.view.DisplayInfo: java.lang.String address>;

        if $r50 == null goto label3;

        $r57 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", address ");

        $r60 = r0.<android.view.DisplayInfo: java.lang.String address>;

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

     label3:
        $i17 = r0.<android.view.DisplayInfo: int ownerUid>;

        if $i17 != 0 goto label4;

        $r58 = r0.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        if $r58 == null goto label5;

     label4:
        $r44 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", owner ");

        $r45 = r0.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (uid ");

        $i18 = r0.<android.view.DisplayInfo: int ownerUid>;

        $r55 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label5:
        $i19 = r0.<android.view.DisplayInfo: int flags>;

        $r51 = staticinvoke <android.view.DisplayInfo: java.lang.String flagsToString(int)>($i19);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r54 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r54;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.DisplayInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String $r2, $r3, $r4;
        float $f0, $f1, $f2;

        r0 := @this: android.view.DisplayInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.view.DisplayInfo: int layerStack>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.view.DisplayInfo: int flags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.view.DisplayInfo: int type>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r2 = r0.<android.view.DisplayInfo: java.lang.String address>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<android.view.DisplayInfo: java.lang.String name>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $i4 = r0.<android.view.DisplayInfo: int appWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $i5 = r0.<android.view.DisplayInfo: int appHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $i6 = r0.<android.view.DisplayInfo: int smallestNominalAppWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        $i7 = r0.<android.view.DisplayInfo: int smallestNominalAppHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $i8 = r0.<android.view.DisplayInfo: int largestNominalAppWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i8);

        $i9 = r0.<android.view.DisplayInfo: int largestNominalAppHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $i10 = r0.<android.view.DisplayInfo: int logicalWidth>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i10);

        $i11 = r0.<android.view.DisplayInfo: int logicalHeight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        $i13 = r0.<android.view.DisplayInfo: int overscanLeft>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        $i12 = r0.<android.view.DisplayInfo: int overscanTop>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $i15 = r0.<android.view.DisplayInfo: int overscanRight>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $i14 = r0.<android.view.DisplayInfo: int overscanBottom>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $i16 = r0.<android.view.DisplayInfo: int rotation>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        $f0 = r0.<android.view.DisplayInfo: float refreshRate>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $i17 = r0.<android.view.DisplayInfo: int logicalDensityDpi>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

        $f1 = r0.<android.view.DisplayInfo: float physicalXDpi>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $f2 = r0.<android.view.DisplayInfo: float physicalYDpi>;

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f2);

        $i18 = r0.<android.view.DisplayInfo: int ownerUid>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i18);

        $r4 = r0.<android.view.DisplayInfo: java.lang.String ownerPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        return;
    }
}
