public class android.filterfw.io.TextGraphReader extends android.filterfw.io.GraphReader
{
    private android.filterfw.core.KeyValueMap mBoundReferences;
    private java.util.ArrayList mCommands;
    private android.filterfw.core.Filter mCurrentFilter;
    private android.filterfw.core.FilterGraph mCurrentGraph;
    private android.filterfw.core.FilterFactory mFactory;
    private android.filterfw.core.KeyValueMap mSettings;

    public void <init>()
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.ArrayList $r1;

        r0 := @this: android.filterfw.io.TextGraphReader;

        specialinvoke r0.<android.filterfw.io.GraphReader: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands> = $r1;

        return;
    }

    static android.filterfw.core.FilterFactory access$000(android.filterfw.io.TextGraphReader)
    {
        android.filterfw.io.TextGraphReader r0;
        android.filterfw.core.FilterFactory $r1;

        r0 := @parameter0: android.filterfw.io.TextGraphReader;

        $r1 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterFactory mFactory>;

        return $r1;
    }

    static android.filterfw.core.Filter access$100(android.filterfw.io.TextGraphReader)
    {
        android.filterfw.io.TextGraphReader r0;
        android.filterfw.core.Filter $r1;

        r0 := @parameter0: android.filterfw.io.TextGraphReader;

        $r1 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter mCurrentFilter>;

        return $r1;
    }

    static android.filterfw.core.Filter access$102(android.filterfw.io.TextGraphReader, android.filterfw.core.Filter)
    {
        android.filterfw.io.TextGraphReader r0;
        android.filterfw.core.Filter r1;

        r0 := @parameter0: android.filterfw.io.TextGraphReader;

        r1 := @parameter1: android.filterfw.core.Filter;

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter mCurrentFilter> = r1;

        return r1;
    }

    static android.filterfw.core.FilterGraph access$200(android.filterfw.io.TextGraphReader)
    {
        android.filterfw.io.TextGraphReader r0;
        android.filterfw.core.FilterGraph $r1;

        r0 := @parameter0: android.filterfw.io.TextGraphReader;

        $r1 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        return $r1;
    }

    private void applySettings() throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.Iterator r1;
        java.lang.String r2, $r14, $r22;
        java.lang.Object r3, $r6;
        android.filterfw.core.KeyValueMap $r4, $r7;
        java.util.Set $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        android.filterfw.io.GraphIOException $r8, $r16;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r17, $r18, $r19, $r20;
        java.lang.Boolean $r13;
        android.filterfw.core.FilterGraph $r15, $r21, $r23, $r24;

        r0 := @this: android.filterfw.io.TextGraphReader;

        $r4 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mSettings>;

        $r5 = virtualinvoke $r4.<android.filterfw.core.KeyValueMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r6;

        $r7 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mSettings>;

        r3 = virtualinvoke $r7.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r2);

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("autoBranch");

        if $z1 == 0 goto label5;

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void expectSettingClass(java.lang.String,java.lang.Object,java.lang.Class)>(r2, r3, class "java/lang/String");

        $z5 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>("synced");

        if $z5 == 0 goto label2;

        $r24 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        virtualinvoke $r24.<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)>(1);

        goto label1;

     label2:
        $z4 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>("unsynced");

        if $z4 == 0 goto label3;

        $r23 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        virtualinvoke $r23.<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)>(2);

        goto label1;

     label3:
        $z6 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>("off");

        if $z6 == 0 goto label4;

        $r21 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        virtualinvoke $r21.<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)>(0);

        goto label1;

     label4:
        $r16 = new android.filterfw.io.GraphIOException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown autobranch setting: ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r22);

        throw $r16;

     label5:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("discardUnconnectedOutputs");

        if $z2 == 0 goto label6;

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void expectSettingClass(java.lang.String,java.lang.Object,java.lang.Class)>(r2, r3, class "java/lang/Boolean");

        $r15 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph>;

        $r13 = (java.lang.Boolean) r3;

        $z3 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r15.<android.filterfw.core.FilterGraph: void setDiscardUnconnectedOutputs(boolean)>($z3);

        goto label1;

     label6:
        $r8 = new android.filterfw.io.GraphIOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown @setting \'");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label7:
        return;
    }

    private void bindExternal(java.lang.String) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1, $r11;
        java.lang.Object r2;
        android.filterfw.core.KeyValueMap $r3, $r12, $r13;
        boolean $z0;
        android.filterfw.io.GraphIOException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mReferences>;

        $z0 = virtualinvoke $r3.<android.filterfw.core.KeyValueMap: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r12 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mReferences>;

        r2 = virtualinvoke $r12.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r1);

        $r13 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences>;

        virtualinvoke $r13.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;

     label1:
        $r4 = new android.filterfw.io.GraphIOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown external variable \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'! ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You must add a reference to this external in the host program using ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addReference(...)!");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r11);

        throw $r4;
    }

    private void checkReferences() throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.Iterator r1;
        java.lang.String r2, $r13;
        android.filterfw.core.KeyValueMap $r3, $r6;
        java.util.Set $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        android.filterfw.io.GraphIOException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;

        r0 := @this: android.filterfw.io.TextGraphReader;

        $r3 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mReferences>;

        $r4 = virtualinvoke $r3.<android.filterfw.core.KeyValueMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r5;

        $r6 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences>;

        $z1 = virtualinvoke $r6.<android.filterfw.core.KeyValueMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $r7 = new android.filterfw.io.GraphIOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Host program specifies reference to \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', which is not ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("declared @external in graph file!");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r13);

        throw $r7;

     label2:
        return;
    }

    private void executeCommands() throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.Iterator r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        android.filterfw.io.TextGraphReader$Command $r4;

        r0 := @this: android.filterfw.io.TextGraphReader;

        $r2 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        r1 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.filterfw.io.TextGraphReader$Command) $r3;

        interfaceinvoke $r4.<android.filterfw.io.TextGraphReader$Command: void execute(android.filterfw.io.TextGraphReader)>(r0);

        goto label1;

     label2:
        return;
    }

    private void expectSettingClass(java.lang.String, java.lang.Object, java.lang.Class) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1, $r10, $r14, $r16;
        java.lang.Object r2;
        java.lang.Class r3, $r4, $r13;
        android.filterfw.io.GraphIOException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r15, $r17;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Class;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 == r3 goto label1;

        $r5 = new android.filterfw.io.GraphIOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' must have a value of type ");

        $r10 = virtualinvoke r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but found a value of type ");

        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r16);

        throw $r5;

     label1:
        return;
    }

    private void parseString(java.lang.String) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1, r13, r14, r15, r16, r18, r20, r21, r23, r24, r25, r26, $r31, $r49;
        java.util.regex.Pattern r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        byte b0;
        android.filterfw.io.PatternScanner r12, $r27;
        android.filterfw.core.KeyValueMap r17, r19, r22, $r30, $r32;
        android.filterfw.io.GraphIOException $r29, $r48;
        boolean $z0, $z5, $z6, $z8, $z9, $z10, $z11, $z12;
        int $i1, $i2, $i3, $i4;
        java.util.ArrayList $r33, $r37, $r40, $r43, $r44;
        android.filterfw.io.TextGraphReader$ConnectCommand $r34;
        android.filterfw.io.TextGraphReader$InitFilterCommand $r36;
        android.filterfw.io.TextGraphReader$AddLibraryCommand $r41;
        android.filterfw.io.TextGraphReader$AllocateFilterCommand $r42;
        android.filterfw.io.TextGraphReader$ImportPackageCommand $r45;
        java.lang.StringBuilder $r46, $r47, $r50, $r51;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("@[a-zA-Z]+");

        r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\}");

        r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\{");

        r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\s+|//[^\\n]*\\n)+");

        r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z\\.]+");

        r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z\\./:]+");

        r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\[[a-zA-Z0-9\\-_]+\\]");

        r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("=>");

        r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(";");

        r11 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z0-9\\-_]+");

        b0 = 0;

        $r27 = new android.filterfw.io.PatternScanner;

        specialinvoke $r27.<android.filterfw.io.PatternScanner: void <init>(java.lang.String,java.util.regex.Pattern)>(r1, r5);

        r12 = $r27;

        r13 = null;

        r14 = null;

        r16 = null;

        r15 = null;

     label01:
        $z0 = virtualinvoke r12.<android.filterfw.io.PatternScanner: boolean atEnd()>();

        if $z0 != 0 goto label27;

        tableswitch(b0)
        {
            case 0: goto label03;
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label13;
            case 4: goto label14;
            case 5: goto label15;
            case 6: goto label16;
            case 7: goto label17;
            case 8: goto label18;
            case 9: goto label19;
            case 10: goto label20;
            case 11: goto label21;
            case 12: goto label22;
            case 13: goto label23;
            case 14: goto label24;
            case 15: goto label25;
            case 16: goto label26;
            default: goto label02;
        };

     label02:
        goto label01;

     label03:
        r26 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r2, "<command>");

        $z6 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("@import");

        if $z6 == 0 goto label04;

        b0 = 1;

        goto label01;

     label04:
        $z5 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("@library");

        if $z5 == 0 goto label05;

        b0 = 2;

        goto label01;

     label05:
        $z11 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("@filter");

        if $z11 == 0 goto label06;

        b0 = 3;

        goto label01;

     label06:
        $z12 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("@connect");

        if $z12 == 0 goto label07;

        b0 = 8;

        goto label01;

     label07:
        $z9 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("@set");

        if $z9 == 0 goto label08;

        b0 = 13;

        goto label01;

     label08:
        $z10 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("@external");

        if $z10 == 0 goto label09;

        b0 = 14;

        goto label01;

     label09:
        $z8 = virtualinvoke r26.<java.lang.String: boolean equals(java.lang.Object)>("@setting");

        if $z8 == 0 goto label10;

        b0 = 15;

        goto label01;

     label10:
        $r48 = new android.filterfw.io.GraphIOException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown command \'");

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r49);

        throw $r48;

     label11:
        r24 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r6, "<package-name>");

        $r44 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r45 = new android.filterfw.io.TextGraphReader$ImportPackageCommand;

        specialinvoke $r45.<android.filterfw.io.TextGraphReader$ImportPackageCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String)>(r0, r24);

        virtualinvoke $r44.<java.util.ArrayList: boolean add(java.lang.Object)>($r45);

        b0 = 16;

        goto label01;

     label12:
        r25 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r7, "<library-name>");

        $r40 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r41 = new android.filterfw.io.TextGraphReader$AddLibraryCommand;

        specialinvoke $r41.<android.filterfw.io.TextGraphReader$AddLibraryCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String)>(r0, r25);

        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>($r41);

        b0 = 16;

        goto label01;

     label13:
        r13 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r11, "<class-name>");

        b0 = 4;

        goto label01;

     label14:
        r23 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r11, "<filter-name>");

        $r43 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r42 = new android.filterfw.io.TextGraphReader$AllocateFilterCommand;

        specialinvoke $r42.<android.filterfw.io.TextGraphReader$AllocateFilterCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String,java.lang.String)>(r0, r13, r23);

        virtualinvoke $r43.<java.util.ArrayList: boolean add(java.lang.Object)>($r42);

        b0 = 5;

        goto label01;

     label15:
        virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r4, "{");

        b0 = 6;

        goto label01;

     label16:
        r22 = specialinvoke r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)>(r12, r3);

        $r37 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r36 = new android.filterfw.io.TextGraphReader$InitFilterCommand;

        specialinvoke $r36.<android.filterfw.io.TextGraphReader$InitFilterCommand: void <init>(android.filterfw.io.TextGraphReader,android.filterfw.core.KeyValueMap)>(r0, r22);

        virtualinvoke $r37.<java.util.ArrayList: boolean add(java.lang.Object)>($r36);

        b0 = 7;

        goto label01;

     label17:
        virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r3, "}");

        b0 = 0;

        goto label01;

     label18:
        r14 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r11, "<source-filter-name>");

        b0 = 9;

        goto label01;

     label19:
        r21 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r8, "[<source-port-name>]");

        $i3 = virtualinvoke r21.<java.lang.String: int length()>();

        $i4 = -1 + $i3;

        r16 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

        b0 = 10;

        goto label01;

     label20:
        virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r9, "=>");

        b0 = 11;

        goto label01;

     label21:
        r15 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r11, "<target-filter-name>");

        b0 = 12;

        goto label01;

     label22:
        r18 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r8, "[<target-port-name>]");

        $i1 = virtualinvoke r18.<java.lang.String: int length()>();

        $i2 = -1 + $i1;

        r20 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

        $r33 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        $r34 = new android.filterfw.io.TextGraphReader$ConnectCommand;

        specialinvoke $r34.<android.filterfw.io.TextGraphReader$ConnectCommand: void <init>(android.filterfw.io.TextGraphReader,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r0, r14, r16, r15, r20);

        virtualinvoke $r33.<java.util.ArrayList: boolean add(java.lang.Object)>($r34);

        b0 = 16;

        goto label01;

     label23:
        r19 = specialinvoke r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)>(r12, r10);

        $r30 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences>;

        virtualinvoke $r30.<android.filterfw.core.KeyValueMap: void putAll(java.util.Map)>(r19);

        b0 = 16;

        goto label01;

     label24:
        $r31 = virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r11, "<external-identifier>");

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void bindExternal(java.lang.String)>($r31);

        b0 = 16;

        goto label01;

     label25:
        r17 = specialinvoke r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)>(r12, r10);

        $r32 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mSettings>;

        virtualinvoke $r32.<android.filterfw.core.KeyValueMap: void putAll(java.util.Map)>(r17);

        b0 = 16;

        goto label01;

     label26:
        virtualinvoke r12.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r10, ";");

        b0 = 0;

        goto label01;

     label27:
        if b0 == 16 goto label28;

        if b0 == 0 goto label28;

        $r29 = new android.filterfw.io.GraphIOException;

        specialinvoke $r29.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>("Unexpected end of input!");

        throw $r29;

     label28:
        return;
    }

    private android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner, java.util.regex.Pattern) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        android.filterfw.io.PatternScanner r1;
        java.util.regex.Pattern r2, r3, r4, r5, r6, r7, r8, r9, r10;
        byte b0;
        android.filterfw.core.KeyValueMap r11, $r21, $r37, $r40;
        java.lang.String r12, r13, r14, r15, r16, r17, r18, $r27, $r29, $r39, $r45;
        java.lang.Object r19;
        boolean $z0, $z1, $z2;
        android.filterfw.io.GraphIOException $r20, $r30, $r41;
        int $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r22, $r23, $r24, $r26, $r38, $r42, $r43, $r44;
        java.lang.Integer $r28;
        java.lang.Float $r32;
        float $f0;
        java.lang.Boolean $r35;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: android.filterfw.io.PatternScanner;

        r2 := @parameter1: java.util.regex.Pattern;

        r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("=");

        r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(";");

        r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z]+[a-zA-Z0-9]*");

        r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\'[^\']*\'|\\\"[^\\\"]*\\\"");

        r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[0-9]+");

        r8 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[0-9]*\\.[0-9]+f?");

        r9 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\$[a-zA-Z]+[a-zA-Z0-9]");

        r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("true|false");

        b0 = 0;

        $r21 = new android.filterfw.core.KeyValueMap;

        specialinvoke $r21.<android.filterfw.core.KeyValueMap: void <init>()>();

        r11 = $r21;

        r12 = null;

     label01:
        $z0 = virtualinvoke r1.<android.filterfw.io.PatternScanner: boolean atEnd()>();

        if $z0 != 0 goto label17;

        if r2 == null goto label02;

        $z2 = virtualinvoke r1.<android.filterfw.io.PatternScanner: boolean peek(java.util.regex.Pattern)>(r2);

        if $z2 != 0 goto label17;

     label02:
        tableswitch(b0)
        {
            case 0: goto label04;
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label16;
            default: goto label03;
        };

     label03:
        goto label01;

     label04:
        r12 = virtualinvoke r1.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r5, "<identifier>");

        b0 = 1;

        goto label01;

     label05:
        virtualinvoke r1.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r3, "=");

        b0 = 2;

        goto label01;

     label06:
        r13 = virtualinvoke r1.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r6);

        if r13 == null goto label08;

        $i4 = virtualinvoke r13.<java.lang.String: int length()>();

        $i5 = -1 + $i4;

        $r45 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(1, $i5);

        virtualinvoke r11.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r45);

     label07:
        b0 = 3;

        goto label01;

     label08:
        r15 = virtualinvoke r1.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r9);

        if r15 == null goto label12;

        $i3 = virtualinvoke r15.<java.lang.String: int length()>();

        r18 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(1, $i3);

        $r37 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences>;

        if $r37 == null goto label10;

        $r40 = r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences>;

        r19 = virtualinvoke $r40.<android.filterfw.core.KeyValueMap: java.lang.Object get(java.lang.Object)>(r18);

     label09:
        if r19 != null goto label11;

        $r41 = new android.filterfw.io.GraphIOException;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown object reference to \'");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r38 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'!");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r39);

        throw $r41;

     label10:
        r19 = null;

        goto label09;

     label11:
        virtualinvoke r11.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, r19);

        goto label07;

     label12:
        r14 = virtualinvoke r1.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r10);

        if r14 == null goto label13;

        $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r14);

        $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke r11.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r35);

        goto label07;

     label13:
        r17 = virtualinvoke r1.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r8);

        if r17 == null goto label14;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r17);

        $r32 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        virtualinvoke r11.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r32);

        goto label07;

     label14:
        r16 = virtualinvoke r1.<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>(r7);

        if r16 == null goto label15;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r16);

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r11.<android.filterfw.core.KeyValueMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r28);

        goto label07;

     label15:
        $r30 = new android.filterfw.io.GraphIOException;

        $r29 = virtualinvoke r1.<android.filterfw.io.PatternScanner: java.lang.String unexpectedTokenMessage(java.lang.String)>("<value>");

        specialinvoke $r30.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r29);

        throw $r30;

     label16:
        virtualinvoke r1.<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>(r4, ";");

        b0 = 0;

        goto label01;

     label17:
        if b0 == 0 goto label18;

        if b0 == 3 goto label18;

        $r20 = new android.filterfw.io.GraphIOException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected end of assignments on line ");

        $i1 = virtualinvoke r1.<android.filterfw.io.PatternScanner: int lineNo()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>($r27);

        throw $r20;

     label18:
        return r11;
    }

    private void reset()
    {
        android.filterfw.io.TextGraphReader r0;
        java.util.ArrayList $r1;
        android.filterfw.core.KeyValueMap $r2, $r3;
        android.filterfw.core.FilterFactory $r4;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph> = null;

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.Filter mCurrentFilter> = null;

        $r1 = r0.<android.filterfw.io.TextGraphReader: java.util.ArrayList mCommands>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = new android.filterfw.core.KeyValueMap;

        specialinvoke $r2.<android.filterfw.core.KeyValueMap: void <init>()>();

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mBoundReferences> = $r2;

        $r3 = new android.filterfw.core.KeyValueMap;

        specialinvoke $r3.<android.filterfw.core.KeyValueMap: void <init>()>();

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap mSettings> = $r3;

        $r4 = new android.filterfw.core.FilterFactory;

        specialinvoke $r4.<android.filterfw.core.FilterFactory: void <init>()>();

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterFactory mFactory> = $r4;

        return;
    }

    public android.filterfw.core.FilterGraph readGraphString(java.lang.String) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1;
        android.filterfw.core.FilterGraph r2, $r3;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.filterfw.core.FilterGraph;

        specialinvoke $r3.<android.filterfw.core.FilterGraph: void <init>()>();

        r2 = $r3;

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void reset()>();

        r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph mCurrentGraph> = r2;

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void parseString(java.lang.String)>(r1);

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void applySettings()>();

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void executeCommands()>();

        specialinvoke r0.<android.filterfw.io.TextGraphReader: void reset()>();

        return r2;
    }

    public android.filterfw.core.KeyValueMap readKeyValueAssignments(java.lang.String) throws android.filterfw.io.GraphIOException
    {
        android.filterfw.io.TextGraphReader r0;
        java.lang.String r1;
        android.filterfw.io.PatternScanner $r2;
        java.util.regex.Pattern $r3;
        android.filterfw.core.KeyValueMap $r4;

        r0 := @this: android.filterfw.io.TextGraphReader;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.filterfw.io.PatternScanner;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s+");

        specialinvoke $r2.<android.filterfw.io.PatternScanner: void <init>(java.lang.String,java.util.regex.Pattern)>(r1, $r3);

        $r4 = specialinvoke r0.<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)>($r2, null);

        return $r4;
    }
}
