public class org.apache.http.message.BasicStatusLine extends java.lang.Object implements org.apache.http.StatusLine, java.lang.Cloneable
{
    private final org.apache.http.ProtocolVersion protoVersion;
    private final java.lang.String reasonPhrase;
    private final int statusCode;

    public void <init>(org.apache.http.ProtocolVersion, int, java.lang.String)
    {
        org.apache.http.message.BasicStatusLine r0;
        org.apache.http.ProtocolVersion r1;
        int i0;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: org.apache.http.message.BasicStatusLine;

        r1 := @parameter0: org.apache.http.ProtocolVersion;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Protocol version may not be null.");

        throw $r4;

     label1:
        if i0 >= 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Status code may not be negative.");

        throw $r3;

     label2:
        r0.<org.apache.http.message.BasicStatusLine: org.apache.http.ProtocolVersion protoVersion> = r1;

        r0.<org.apache.http.message.BasicStatusLine: int statusCode> = i0;

        r0.<org.apache.http.message.BasicStatusLine: java.lang.String reasonPhrase> = r2;

        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.message.BasicStatusLine r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.http.message.BasicStatusLine;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    public org.apache.http.ProtocolVersion getProtocolVersion()
    {
        org.apache.http.message.BasicStatusLine r0;
        org.apache.http.ProtocolVersion $r1;

        r0 := @this: org.apache.http.message.BasicStatusLine;

        $r1 = r0.<org.apache.http.message.BasicStatusLine: org.apache.http.ProtocolVersion protoVersion>;

        return $r1;
    }

    public java.lang.String getReasonPhrase()
    {
        org.apache.http.message.BasicStatusLine r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.message.BasicStatusLine;

        $r1 = r0.<org.apache.http.message.BasicStatusLine: java.lang.String reasonPhrase>;

        return $r1;
    }

    public int getStatusCode()
    {
        org.apache.http.message.BasicStatusLine r0;
        int $i0;

        r0 := @this: org.apache.http.message.BasicStatusLine;

        $i0 = r0.<org.apache.http.message.BasicStatusLine: int statusCode>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.http.message.BasicStatusLine r0;
        org.apache.http.message.BasicLineFormatter $r1;
        org.apache.http.util.CharArrayBuffer $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.http.message.BasicStatusLine;

        $r1 = <org.apache.http.message.BasicLineFormatter: org.apache.http.message.BasicLineFormatter DEFAULT>;

        $r2 = virtualinvoke $r1.<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine)>(null, r0);

        $r3 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r3;
    }
}
