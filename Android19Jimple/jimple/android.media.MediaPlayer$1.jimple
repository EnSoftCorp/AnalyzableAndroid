class android.media.MediaPlayer$1 extends java.lang.Object implements android.media.MediaPlayer$OnSubtitleDataListener
{
    final android.media.MediaPlayer this$0;

    void <init>(android.media.MediaPlayer)
    {
        android.media.MediaPlayer$1 r0;
        android.media.MediaPlayer r1;

        r0 := @this: android.media.MediaPlayer$1;

        r1 := @parameter0: android.media.MediaPlayer;

        r0.<android.media.MediaPlayer$1: android.media.MediaPlayer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSubtitleData(android.media.MediaPlayer, android.media.SubtitleData)
    {
        android.media.MediaPlayer$1 r0;
        android.media.MediaPlayer r1, $r5, $r7;
        android.media.SubtitleData r2;
        int i0, $i2;
        android.media.SubtitleTrack r3;
        java.io.UnsupportedEncodingException r4, $r11;
        long l1, $l3, $l4, $l5, $l6, $l7;
        android.media.SubtitleTrack[] $r6, $r8;
        java.lang.String $r9, $r17;
        byte[] $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16;

        r0 := @this: android.media.MediaPlayer$1;

        r1 := @parameter0: android.media.MediaPlayer;

        r2 := @parameter1: android.media.SubtitleData;

        i0 = virtualinvoke r2.<android.media.SubtitleData: int getTrackIndex()>();

        $r5 = r0.<android.media.MediaPlayer$1: android.media.MediaPlayer this$0>;

        $r6 = staticinvoke <android.media.MediaPlayer: android.media.SubtitleTrack[] access$000(android.media.MediaPlayer)>($r5);

        $i2 = lengthof $r6;

        if i0 < $i2 goto label2;

     label1:
        return;

     label2:
        $r7 = r0.<android.media.MediaPlayer$1: android.media.MediaPlayer this$0>;

        $r8 = staticinvoke <android.media.MediaPlayer: android.media.SubtitleTrack[] access$000(android.media.MediaPlayer)>($r7);

        r3 = $r8[i0];

        if r3 == null goto label1;

     label3:
        $l3 = virtualinvoke r2.<android.media.SubtitleData: long getStartTimeUs()>();

        l1 = 1L + $l3;

        $r9 = new java.lang.String;

        $r10 = virtualinvoke r2.<android.media.SubtitleData: byte[] getData()>();

        specialinvoke $r9.<java.lang.String: void <init>(byte[],java.lang.String)>($r10, "UTF-8");

        virtualinvoke r3.<android.media.SubtitleTrack: void onData(java.lang.String,boolean,long)>($r9, 1, l1);

        $l4 = virtualinvoke r2.<android.media.SubtitleData: long getStartTimeUs()>();

        $l6 = virtualinvoke r2.<android.media.SubtitleData: long getDurationUs()>();

        $l5 = $l4 + $l6;

        $l7 = $l5 / 1000L;

        virtualinvoke r3.<android.media.SubtitleTrack: void setRunDiscardTimeMs(long,long)>(l1, $l7);

     label4:
        return;

     label5:
        $r11 := @caughtexception;

        r4 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subtitle data for track ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not UTF-8 encoded: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaPlayer", $r17);

        return;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }
}
