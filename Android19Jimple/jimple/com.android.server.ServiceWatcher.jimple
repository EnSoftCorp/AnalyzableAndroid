public class com.android.server.ServiceWatcher extends java.lang.Object implements android.content.ServiceConnection
{
    private static final boolean D;
    public static final java.lang.String EXTRA_SERVICE_IS_MULTIUSER;
    public static final java.lang.String EXTRA_SERVICE_VERSION;
    private final java.lang.String mAction;
    private android.os.IBinder mBinder;
    private final android.content.Context mContext;
    private final android.os.Handler mHandler;
    private boolean mIsMultiuser;
    private java.lang.Object mLock;
    private final java.lang.Runnable mNewServiceWork;
    private final com.android.internal.content.PackageMonitor mPackageMonitor;
    private java.lang.String mPackageName;
    private final android.content.pm.PackageManager mPm;
    private final java.lang.String mServicePackageName;
    private final java.util.List mSignatureSets;
    private final java.lang.String mTag;
    private int mVersion;

    public void <init>(android.content.Context, java.lang.String, java.lang.String, int, int, int, java.lang.Runnable, android.os.Handler)
    {
        com.android.server.ServiceWatcher r0;
        android.content.Context r1, $r11;
        java.lang.String r2, r3, r8;
        int i0, i1, i2;
        java.lang.Runnable r4;
        android.os.Handler r5;
        android.content.res.Resources r6;
        boolean z0;
        java.util.ArrayList r7, $r14, $r15;
        java.lang.String[] r9;
        java.lang.Object $r10;
        com.android.server.ServiceWatcher$2 $r12;
        android.content.pm.PackageManager $r13;
        java.util.List $r16;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        r4 := @parameter6: java.lang.Runnable;

        r5 := @parameter7: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r10 = new java.lang.Object;

        specialinvoke $r10.<java.lang.Object: void <init>()>();

        r0.<com.android.server.ServiceWatcher: java.lang.Object mLock> = $r10;

        r0.<com.android.server.ServiceWatcher: int mVersion> = -2147483648;

        r0.<com.android.server.ServiceWatcher: boolean mIsMultiuser> = 0;

        $r12 = new com.android.server.ServiceWatcher$2;

        specialinvoke $r12.<com.android.server.ServiceWatcher$2: void <init>(com.android.server.ServiceWatcher)>(r0);

        r0.<com.android.server.ServiceWatcher: com.android.internal.content.PackageMonitor mPackageMonitor> = $r12;

        r0.<com.android.server.ServiceWatcher: android.content.Context mContext> = r1;

        r0.<com.android.server.ServiceWatcher: java.lang.String mTag> = r2;

        r0.<com.android.server.ServiceWatcher: java.lang.String mAction> = r3;

        $r11 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        $r13 = virtualinvoke $r11.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.server.ServiceWatcher: android.content.pm.PackageManager mPm> = $r13;

        r0.<com.android.server.ServiceWatcher: java.lang.Runnable mNewServiceWork> = r4;

        r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler> = r5;

        r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        z0 = virtualinvoke r6.<android.content.res.Resources: boolean getBoolean(int)>(i0);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r7 = $r14;

        if z0 == 0 goto label3;

        r9 = virtualinvoke r6.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(i2);

        if r9 == null goto label1;

        $r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r9);

        virtualinvoke r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r16);

     label1:
        r0.<com.android.server.ServiceWatcher: java.lang.String mServicePackageName> = null;

     label2:
        $r15 = staticinvoke <com.android.server.ServiceWatcher: java.util.ArrayList getSignatureSets(android.content.Context,java.util.List)>(r1, r7);

        r0.<com.android.server.ServiceWatcher: java.util.List mSignatureSets> = $r15;

        return;

     label3:
        r8 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>(i1);

        if r8 == null goto label4;

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

     label4:
        r0.<com.android.server.ServiceWatcher: java.lang.String mServicePackageName> = r8;

        goto label2;
    }

    static java.lang.Object access$000(com.android.server.ServiceWatcher)
    {
        com.android.server.ServiceWatcher r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.ServiceWatcher;

        $r1 = r0.<com.android.server.ServiceWatcher: java.lang.Object mLock>;

        return $r1;
    }

    static java.lang.String access$100(com.android.server.ServiceWatcher)
    {
        com.android.server.ServiceWatcher r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.ServiceWatcher;

        $r1 = r0.<com.android.server.ServiceWatcher: java.lang.String mPackageName>;

        return $r1;
    }

    static void access$200(com.android.server.ServiceWatcher)
    {
        com.android.server.ServiceWatcher r0;

        r0 := @parameter0: com.android.server.ServiceWatcher;

        specialinvoke r0.<com.android.server.ServiceWatcher: void unbindLocked()>();

        return;
    }

    static boolean access$300(com.android.server.ServiceWatcher, java.lang.String)
    {
        com.android.server.ServiceWatcher r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.ServiceWatcher;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.ServiceWatcher: boolean bindBestPackageLocked(java.lang.String)>(r1);

        return $z0;
    }

    private boolean bindBestPackageLocked(java.lang.String)
    {
        com.android.server.ServiceWatcher r0;
        java.lang.String r1, r4, r7, $r12, $r25, $r26, $r28, $r31;
        android.content.Intent r2, $r10;
        java.util.List r3;
        int i0, i1, $i2;
        boolean z0, z1, $z2, $z3;
        java.util.Iterator r5;
        android.content.pm.ResolveInfo r6;
        android.content.pm.PackageManager$NameNotFoundException r8, $r33;
        android.os.Bundle r9, $r20, $r23;
        android.content.pm.PackageManager $r11, $r14;
        java.lang.Object $r13;
        android.content.pm.ServiceInfo $r15, $r18, $r19, $r22;
        android.content.pm.Signature[] $r16;
        android.content.pm.PackageInfo $r17;
        java.lang.StringBuilder $r21, $r24, $r27, $r29, $r30;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: java.lang.String;

        $r10 = new android.content.Intent;

        $r12 = r0.<com.android.server.ServiceWatcher: java.lang.String mAction>;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>($r12);

        r2 = $r10;

        if r1 == null goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

     label1:
        $r11 = r0.<com.android.server.ServiceWatcher: android.content.pm.PackageManager mPm>;

        r3 = virtualinvoke $r11.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>(r2, 128, 0);

        i0 = -2147483648;

        z0 = 0;

        r4 = null;

        if r3 == null goto label8;

        r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.pm.ResolveInfo) $r13;

        $r15 = r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r7 = $r15.<android.content.pm.ServiceInfo: java.lang.String packageName>;

     label3:
        $r14 = r0.<com.android.server.ServiceWatcher: android.content.pm.PackageManager mPm>;

        $r17 = virtualinvoke $r14.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r7, 64);

        $r16 = $r17.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $z3 = specialinvoke r0.<com.android.server.ServiceWatcher: boolean isSignatureMatch(android.content.pm.Signature[])>($r16);

        if $z3 != 0 goto label6;

        $r26 = r0.<com.android.server.ServiceWatcher: java.lang.String mTag>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resolves service ");

        $r25 = r0.<com.android.server.ServiceWatcher: java.lang.String mAction>;

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but has wrong signature, ignoring");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r26, $r28);

     label4:
        goto label2;

     label5:
        $r33 := @caughtexception;

        r8 = $r33;

        $r31 = r0.<com.android.server.ServiceWatcher: java.lang.String mTag>;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>($r31, r8);

        goto label2;

     label6:
        i1 = -2147483648;

        $r18 = r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        r9 = $r18.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        z1 = 0;

        if r9 == null goto label7;

        $r19 = r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r20 = $r19.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        i1 = virtualinvoke $r20.<android.os.Bundle: int getInt(java.lang.String,int)>("serviceVersion", -2147483648);

        $r22 = r6.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r23 = $r22.<android.content.pm.ServiceInfo: android.os.Bundle metaData>;

        z1 = virtualinvoke $r23.<android.os.Bundle: boolean getBoolean(java.lang.String)>("serviceIsMultiuser");

     label7:
        $i2 = r0.<com.android.server.ServiceWatcher: int mVersion>;

        if i1 <= $i2 goto label2;

        i0 = i1;

        r4 = r7;

        z0 = z1;

        goto label2;

     label8:
        if r4 == null goto label9;

        specialinvoke r0.<com.android.server.ServiceWatcher: void bindToPackageLocked(java.lang.String,int,boolean)>(r4, i0, z0);

        return 1;

     label9:
        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    private void bindToPackageLocked(java.lang.String, int, boolean)
    {
        com.android.server.ServiceWatcher r0;
        java.lang.String r1, $r6;
        int i0;
        boolean z0, $z1;
        android.content.Intent r2, $r5;
        android.content.Context r3;
        android.os.UserHandle r4;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.ServiceWatcher: void unbindLocked()>();

        $r5 = new android.content.Intent;

        $r6 = r0.<com.android.server.ServiceWatcher: java.lang.String mAction>;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>($r6);

        r2 = $r5;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        r0.<com.android.server.ServiceWatcher: java.lang.String mPackageName> = r1;

        r0.<com.android.server.ServiceWatcher: int mVersion> = i0;

        r0.<com.android.server.ServiceWatcher: boolean mIsMultiuser> = z0;

        r3 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        $z1 = r0.<com.android.server.ServiceWatcher: boolean mIsMultiuser>;

        if $z1 == 0 goto label2;

        r4 = <android.os.UserHandle: android.os.UserHandle OWNER>;

     label1:
        virtualinvoke r3.<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>(r2, r0, 1073741829, r4);

        return;

     label2:
        r4 = <android.os.UserHandle: android.os.UserHandle CURRENT>;

        goto label1;
    }

    public static java.util.ArrayList getSignatureSets(android.content.Context, java.util.List)
    {
        android.content.Context r0;
        java.util.List r1, $r12;
        android.content.pm.PackageManager r2;
        java.util.ArrayList r3, $r7;
        int i0, i1;
        java.lang.String r4, $r17;
        java.util.HashSet r5, $r9;
        java.lang.Object $r8;
        android.content.pm.PackageInfo $r10;
        android.content.pm.Signature[] $r11;
        android.content.pm.PackageManager$NameNotFoundException $r13;
        java.lang.StringBuilder $r14, $r15, $r16;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.List;

        r2 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r3 = $r7;

        i0 = 0;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        if i0 >= i1 goto label5;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (java.lang.String) $r8;

     label2:
        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r5 = $r9;

        $r10 = virtualinvoke r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r4, 64);

        $r11 = $r10.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11);

        virtualinvoke r5.<java.util.HashSet: boolean addAll(java.util.Collection)>($r12);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r13 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ServiceWatcher", $r17);

        goto label3;

     label5:
        return r3;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    private boolean isSignatureMatch(android.content.pm.Signature[])
    {
        com.android.server.ServiceWatcher r0;
        android.content.pm.Signature[] r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: android.content.pm.Signature[];

        $r2 = r0.<com.android.server.ServiceWatcher: java.util.List mSignatureSets>;

        $z0 = staticinvoke <com.android.server.ServiceWatcher: boolean isSignatureMatch(android.content.pm.Signature[],java.util.List)>(r1, $r2);

        return $z0;
    }

    public static boolean isSignatureMatch(android.content.pm.Signature[], java.util.List)
    {
        android.content.pm.Signature[] r0;
        java.util.List r1;
        java.util.HashSet r2, $r4, $r6;
        int i0, i1;
        java.util.Iterator r3;
        boolean $z0, $z1;
        java.lang.Object $r5;
        android.content.pm.Signature $r7;

        r0 := @parameter0: android.content.pm.Signature[];

        r1 := @parameter1: java.util.List;

        if r0 != null goto label2;

     label1:
        return 0;

     label2:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = $r4;

        i0 = lengthof r0;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r7 = r0[i1];

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label3;

     label4:
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.HashSet) $r5;

        $z1 = virtualinvoke $r6.<java.util.HashSet: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label5;

        return 1;
    }

    private void unbindLocked()
    {
        com.android.server.ServiceWatcher r0;
        java.lang.String r1;
        android.content.Context $r2;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 = r0.<com.android.server.ServiceWatcher: java.lang.String mPackageName>;

        r0.<com.android.server.ServiceWatcher: java.lang.String mPackageName> = null;

        r0.<com.android.server.ServiceWatcher: int mVersion> = -2147483648;

        r0.<com.android.server.ServiceWatcher: boolean mIsMultiuser> = 0;

        if r1 == null goto label1;

        $r2 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void unbindService(android.content.ServiceConnection)>(r0);

     label1:
        return;
    }

    public java.lang.String getBestPackageName()
    {
        com.android.server.ServiceWatcher r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.lang.String r3;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 = r0.<com.android.server.ServiceWatcher: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.ServiceWatcher: java.lang.String mPackageName>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int getBestVersion()
    {
        com.android.server.ServiceWatcher r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r3;
        int i0;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 = r0.<com.android.server.ServiceWatcher: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        i0 = r0.<com.android.server.ServiceWatcher: int mVersion>;

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.os.IBinder getBinder()
    {
        com.android.server.ServiceWatcher r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder r3;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 = r0.<com.android.server.ServiceWatcher: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.server.ServiceWatcher r0;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r16;
        java.lang.String r5, $r6, $r8, $r11;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r10;
        android.os.Handler $r12, $r15;
        java.lang.Runnable $r13, $r14;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        r3 = r0.<com.android.server.ServiceWatcher: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        r5 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r6 = r0.<com.android.server.ServiceWatcher: java.lang.String mPackageName>;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label4;

        r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder> = r2;

        $r12 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        if $r12 == null goto label2;

        $r14 = r0.<com.android.server.ServiceWatcher: java.lang.Runnable mNewServiceWork>;

        if $r14 == null goto label2;

        $r15 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        $r13 = r0.<com.android.server.ServiceWatcher: java.lang.Runnable mNewServiceWork>;

        virtualinvoke $r15.<android.os.Handler: boolean post(java.lang.Runnable)>($r13);

     label2:
        exitmonitor r3;

     label3:
        return;

     label4:
        $r8 = r0.<com.android.server.ServiceWatcher: java.lang.String mTag>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected onServiceConnected: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, $r11);

     label5:
        goto label2;

     label6:
        $r16 := @caughtexception;

        r4 = $r16;

     label7:
        exitmonitor r3;

     label8:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.server.ServiceWatcher r0;
        android.content.ComponentName r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r6;
        java.lang.String $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 := @parameter0: android.content.ComponentName;

        r2 = r0.<com.android.server.ServiceWatcher: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        $r5 = r0.<com.android.server.ServiceWatcher: java.lang.String mPackageName>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        r0.<com.android.server.ServiceWatcher: android.os.IBinder mBinder> = null;

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public boolean start()
    {
        com.android.server.ServiceWatcher r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r15;
        android.content.IntentFilter r3, $r5;
        java.lang.String $r4, $r11;
        boolean $z0;
        com.android.server.ServiceWatcher$1 $r6;
        android.content.Context $r7, $r14;
        android.os.Handler $r8;
        android.os.UserHandle $r9, $r12;
        com.android.internal.content.PackageMonitor $r13;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 = r0.<com.android.server.ServiceWatcher: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.ServiceWatcher: java.lang.String mServicePackageName>;

        $z0 = specialinvoke r0.<com.android.server.ServiceWatcher: boolean bindBestPackageLocked(java.lang.String)>($r4);

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return 0;

     label3:
        exitmonitor r1;

     label4:
        $r5 = new android.content.IntentFilter;

        specialinvoke $r5.<android.content.IntentFilter: void <init>()>();

        r3 = $r5;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.USER_SWITCHED");

        $r7 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        $r6 = new com.android.server.ServiceWatcher$1;

        specialinvoke $r6.<com.android.server.ServiceWatcher$1: void <init>(com.android.server.ServiceWatcher)>(r0);

        $r9 = <android.os.UserHandle: android.os.UserHandle ALL>;

        $r8 = r0.<com.android.server.ServiceWatcher: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r6, $r9, r3, null, $r8);

        $r11 = r0.<com.android.server.ServiceWatcher: java.lang.String mServicePackageName>;

        if $r11 != null goto label5;

        $r13 = r0.<com.android.server.ServiceWatcher: com.android.internal.content.PackageMonitor mPackageMonitor>;

        $r14 = r0.<com.android.server.ServiceWatcher: android.content.Context mContext>;

        $r12 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r13.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>($r14, null, $r12, 1);

     label5:
        return 1;

     label6:
        $r15 := @caughtexception;

        r2 = $r15;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void switchUser()
    {
        com.android.server.ServiceWatcher r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: com.android.server.ServiceWatcher;

        r1 = r0.<com.android.server.ServiceWatcher: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z0 = r0.<com.android.server.ServiceWatcher: boolean mIsMultiuser>;

        if $z0 != 0 goto label2;

        specialinvoke r0.<com.android.server.ServiceWatcher: void unbindLocked()>();

        $r3 = r0.<com.android.server.ServiceWatcher: java.lang.String mServicePackageName>;

        specialinvoke r0.<com.android.server.ServiceWatcher: boolean bindBestPackageLocked(java.lang.String)>($r3);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void <clinit>()
    {
        <com.android.server.ServiceWatcher: java.lang.String EXTRA_SERVICE_VERSION> = "serviceVersion";

        <com.android.server.ServiceWatcher: java.lang.String EXTRA_SERVICE_IS_MULTIUSER> = "serviceIsMultiuser";

        <com.android.server.ServiceWatcher: boolean D> = 0;

        return;
    }
}
