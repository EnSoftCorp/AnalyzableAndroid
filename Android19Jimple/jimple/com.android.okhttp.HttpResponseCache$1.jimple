class com.android.okhttp.HttpResponseCache$1 extends java.lang.Object implements com.android.okhttp.OkResponseCache
{
    final com.android.okhttp.HttpResponseCache this$0;

    void <init>(com.android.okhttp.HttpResponseCache)
    {
        com.android.okhttp.HttpResponseCache$1 r0;
        com.android.okhttp.HttpResponseCache r1;

        r0 := @this: com.android.okhttp.HttpResponseCache$1;

        r1 := @parameter0: com.android.okhttp.HttpResponseCache;

        r0.<com.android.okhttp.HttpResponseCache$1: com.android.okhttp.HttpResponseCache this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.net.CacheResponse get(java.net.URI, java.lang.String, java.util.Map) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$1 r0;
        java.net.URI r1;
        java.lang.String r2;
        java.util.Map r3;
        com.android.okhttp.HttpResponseCache $r4;
        java.net.CacheResponse $r5;

        r0 := @this: com.android.okhttp.HttpResponseCache$1;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        $r4 = r0.<com.android.okhttp.HttpResponseCache$1: com.android.okhttp.HttpResponseCache this$0>;

        $r5 = virtualinvoke $r4.<com.android.okhttp.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>(r1, r2, r3);

        return $r5;
    }

    public void maybeRemove(java.lang.String, java.net.URI) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$1 r0;
        java.lang.String r1;
        java.net.URI r2;
        com.android.okhttp.HttpResponseCache $r3;

        r0 := @this: com.android.okhttp.HttpResponseCache$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.net.URI;

        $r3 = r0.<com.android.okhttp.HttpResponseCache$1: com.android.okhttp.HttpResponseCache this$0>;

        staticinvoke <com.android.okhttp.HttpResponseCache: boolean access$000(com.android.okhttp.HttpResponseCache,java.lang.String,java.net.URI)>($r3, r1, r2);

        return;
    }

    public java.net.CacheRequest put(java.net.URI, java.net.URLConnection) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$1 r0;
        java.net.URI r1;
        java.net.URLConnection r2;
        com.android.okhttp.HttpResponseCache $r3;
        java.net.CacheRequest $r4;

        r0 := @this: com.android.okhttp.HttpResponseCache$1;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.net.URLConnection;

        $r3 = r0.<com.android.okhttp.HttpResponseCache$1: com.android.okhttp.HttpResponseCache this$0>;

        $r4 = virtualinvoke $r3.<com.android.okhttp.HttpResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>(r1, r2);

        return $r4;
    }

    public void trackConditionalCacheHit()
    {
        com.android.okhttp.HttpResponseCache$1 r0;
        com.android.okhttp.HttpResponseCache $r1;

        r0 := @this: com.android.okhttp.HttpResponseCache$1;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$1: com.android.okhttp.HttpResponseCache this$0>;

        staticinvoke <com.android.okhttp.HttpResponseCache: void access$200(com.android.okhttp.HttpResponseCache)>($r1);

        return;
    }

    public void trackResponse(com.android.okhttp.ResponseSource)
    {
        com.android.okhttp.HttpResponseCache$1 r0;
        com.android.okhttp.ResponseSource r1;
        com.android.okhttp.HttpResponseCache $r2;

        r0 := @this: com.android.okhttp.HttpResponseCache$1;

        r1 := @parameter0: com.android.okhttp.ResponseSource;

        $r2 = r0.<com.android.okhttp.HttpResponseCache$1: com.android.okhttp.HttpResponseCache this$0>;

        staticinvoke <com.android.okhttp.HttpResponseCache: void access$300(com.android.okhttp.HttpResponseCache,com.android.okhttp.ResponseSource)>($r2, r1);

        return;
    }

    public void update(java.net.CacheResponse, java.net.HttpURLConnection) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$1 r0;
        java.net.CacheResponse r1;
        java.net.HttpURLConnection r2;
        com.android.okhttp.HttpResponseCache $r3;

        r0 := @this: com.android.okhttp.HttpResponseCache$1;

        r1 := @parameter0: java.net.CacheResponse;

        r2 := @parameter1: java.net.HttpURLConnection;

        $r3 = r0.<com.android.okhttp.HttpResponseCache$1: com.android.okhttp.HttpResponseCache this$0>;

        staticinvoke <com.android.okhttp.HttpResponseCache: void access$100(com.android.okhttp.HttpResponseCache,java.net.CacheResponse,java.net.HttpURLConnection)>($r3, r1, r2);

        return;
    }
}
