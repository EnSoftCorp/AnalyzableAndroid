class com.android.internal.view.IInputContext$Stub$Proxy extends java.lang.Object implements com.android.internal.view.IInputContext
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        $r1 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public void beginBatchEdit() throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void clearMetaKeyStates(int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void commitCompletion(android.view.inputmethod.CompletionInfo) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.view.inputmethod.CompletionInfo r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 := @parameter0: android.view.inputmethod.CompletionInfo;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r4 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void commitCorrection(android.view.inputmethod.CorrectionInfo) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.view.inputmethod.CorrectionInfo r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 := @parameter0: android.view.inputmethod.CorrectionInfo;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r4 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void commitText(java.lang.CharSequence, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        java.lang.CharSequence r1;
        int i0;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r2, 0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void deleteSurroundingText(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void endBatchEdit() throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void finishComposingText() throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void getCursorCapsMode(int, int, com.android.internal.view.IInputContextCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder r4, $r5;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.view.IInputContextCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        r4 = null;

        if r1 == null goto label4;

     label3:
        r4 = interfaceinvoke r1.<com.android.internal.view.IInputContextCallback: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r4);

        $r5 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void getExtractedText(android.view.inputmethod.ExtractedTextRequest, int, int, com.android.internal.view.IInputContextCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.view.inputmethod.ExtractedTextRequest r1;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder r5, $r6;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 := @parameter0: android.view.inputmethod.ExtractedTextRequest;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.internal.view.IInputContextCallback;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label02:
        if r1 == null goto label09;

     label03:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label04:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i1);

     label05:
        r5 = null;

        if r2 == null goto label07;

     label06:
        r5 = interfaceinvoke r2.<com.android.internal.view.IInputContextCallback: android.os.IBinder asBinder()>();

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r5);

        $r6 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, null, 1);

     label08:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        goto label04;

     label11:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        return "com.android.internal.view.IInputContext";
    }

    public void getSelectedText(int, int, com.android.internal.view.IInputContextCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder r4, $r5;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.internal.view.IInputContextCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

     label2:
        r4 = null;

        if r1 == null goto label4;

     label3:
        r4 = interfaceinvoke r1.<com.android.internal.view.IInputContextCallback: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r4);

        $r5 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void getTextAfterCursor(int, int, int, com.android.internal.view.IInputContextCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1, i2;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder r4, $r5;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: com.android.internal.view.IInputContextCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

     label2:
        r4 = null;

        if r1 == null goto label4;

     label3:
        r4 = interfaceinvoke r1.<com.android.internal.view.IInputContextCallback: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r4);

        $r5 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void getTextBeforeCursor(int, int, int, com.android.internal.view.IInputContextCallback) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1, i2;
        com.android.internal.view.IInputContextCallback r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r6;
        android.os.IBinder r4, $r5;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: com.android.internal.view.IInputContextCallback;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i2);

     label2:
        r4 = null;

        if r1 == null goto label4;

     label3:
        r4 = interfaceinvoke r1.<com.android.internal.view.IInputContextCallback: android.os.IBinder asBinder()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r4);

        $r5 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public void performContextMenuAction(int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void performEditorAction(int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void performPrivateCommand(java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.os.Parcel r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.Bundle;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

     label2:
        if r2 == null goto label6;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r3, 0);

     label4:
        $r5 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r3, null, 1);

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r6 := @caughtexception;

        r4 = $r6;

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void reportFullscreenMode(boolean) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        boolean z0;
        byte b0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        z0 := @parameter0: boolean;

        b0 = 1;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if z0 == 0 goto label5;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b0);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r1, null, 1);

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label5:
        b0 = 0;

        goto label3;

     label6:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public void sendKeyEvent(android.view.KeyEvent) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        android.view.KeyEvent r1;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 := @parameter0: android.view.KeyEvent;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>(r2, 0);

     label4:
        $r4 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setComposingRegion(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void setComposingText(java.lang.CharSequence, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        java.lang.CharSequence r1;
        int i0;
        android.os.Parcel r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

     label2:
        if r1 == null goto label6;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        staticinvoke <android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>(r1, r2, 0);

     label4:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, null, 1);

     label5:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        return;

     label6:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void setSelection(int, int) throws android.os.RemoteException
    {
        com.android.internal.view.IInputContext$Stub$Proxy r0;
        int i0, i1;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.internal.view.IInputContext$Stub$Proxy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.internal.view.IInputContext");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i1);

        $r3 = r0.<com.android.internal.view.IInputContext$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
