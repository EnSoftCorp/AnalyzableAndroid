public class android.renderscript.ProgramVertex extends android.renderscript.Program
{

    void <init>(int, android.renderscript.RenderScript)
    {
        android.renderscript.ProgramVertex r0;
        int i0;
        android.renderscript.RenderScript r1;

        r0 := @this: android.renderscript.ProgramVertex;

        i0 := @parameter0: int;

        r1 := @parameter1: android.renderscript.RenderScript;

        specialinvoke r0.<android.renderscript.Program: void <init>(int,android.renderscript.RenderScript)>(i0, r1);

        return;
    }

    public android.renderscript.Element getInput(int)
    {
        android.renderscript.ProgramVertex r0;
        int i0, $i1;
        java.lang.IllegalArgumentException $r1;
        android.renderscript.Element[] $r2, $r3;
        android.renderscript.Element $r4;

        r0 := @this: android.renderscript.ProgramVertex;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r2 = r0.<android.renderscript.ProgramVertex: android.renderscript.Element[] mInputs>;

        $i1 = lengthof $r2;

        if i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Slot ID out of range.");

        throw $r1;

     label2:
        $r3 = r0.<android.renderscript.ProgramVertex: android.renderscript.Element[] mInputs>;

        $r4 = $r3[i0];

        return $r4;
    }

    public int getInputCount()
    {
        android.renderscript.ProgramVertex r0;
        android.renderscript.Element[] $r1, $r2;
        int $i0;

        r0 := @this: android.renderscript.ProgramVertex;

        $r1 = r0.<android.renderscript.ProgramVertex: android.renderscript.Element[] mInputs>;

        if $r1 == null goto label1;

        $r2 = r0.<android.renderscript.ProgramVertex: android.renderscript.Element[] mInputs>;

        $i0 = lengthof $r2;

        return $i0;

     label1:
        return 0;
    }
}
