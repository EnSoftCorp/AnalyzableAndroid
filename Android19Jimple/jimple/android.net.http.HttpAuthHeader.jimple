public class android.net.http.HttpAuthHeader extends java.lang.Object
{
    private static final java.lang.String ALGORITHM_TOKEN;
    public static final int BASIC;
    public static final java.lang.String BASIC_TOKEN;
    public static final int DIGEST;
    public static final java.lang.String DIGEST_TOKEN;
    private static final java.lang.String NONCE_TOKEN;
    private static final java.lang.String OPAQUE_TOKEN;
    private static final java.lang.String QOP_TOKEN;
    private static final java.lang.String REALM_TOKEN;
    private static final java.lang.String STALE_TOKEN;
    public static final int UNKNOWN;
    private java.lang.String mAlgorithm;
    private boolean mIsProxy;
    private java.lang.String mNonce;
    private java.lang.String mOpaque;
    private java.lang.String mPassword;
    private java.lang.String mQop;
    private java.lang.String mRealm;
    private int mScheme;
    private boolean mStale;
    private java.lang.String mUsername;

    public void <init>(java.lang.String)
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        specialinvoke r0.<android.net.http.HttpAuthHeader: void parseHeader(java.lang.String)>(r1);

     label1:
        return;
    }

    private void parseHeader(java.lang.String)
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String r1, r2;
        int $i0;

        r0 := @this: android.net.http.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        r2 = specialinvoke r0.<android.net.http.HttpAuthHeader: java.lang.String parseScheme(java.lang.String)>(r1);

        if r2 == null goto label1;

        $i0 = r0.<android.net.http.HttpAuthHeader: int mScheme>;

        if $i0 == 0 goto label1;

        specialinvoke r0.<android.net.http.HttpAuthHeader: void parseParameters(java.lang.String)>(r2);

     label1:
        return;
    }

    private void parseParameter(java.lang.String)
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String r1, r2, r3, $r4, $r5, $r6;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: android.net.http.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(61);

        if i0 < 0 goto label1;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        $i1 = i0 + 1;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        r3 = staticinvoke <android.net.http.HttpAuthHeader: java.lang.String trimDoubleQuotesIfAny(java.lang.String)>($r6);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("realm");

        if $z0 == 0 goto label2;

        r0.<android.net.http.HttpAuthHeader: java.lang.String mRealm> = r3;

     label1:
        return;

     label2:
        $i2 = r0.<android.net.http.HttpAuthHeader: int mScheme>;

        if $i2 != 2 goto label1;

        specialinvoke r0.<android.net.http.HttpAuthHeader: void parseParameter(java.lang.String,java.lang.String)>(r2, r3);

        return;
    }

    private void parseParameter(java.lang.String, java.lang.String)
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String r1, r2, $r4, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Locale $r3, $r5;

        r0 := @this: android.net.http.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("nonce");

        if $z0 == 0 goto label2;

        r0.<android.net.http.HttpAuthHeader: java.lang.String mNonce> = r2;

     label1:
        return;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("stale");

        if $z1 == 0 goto label3;

        specialinvoke r0.<android.net.http.HttpAuthHeader: void parseStale(java.lang.String)>(r2);

        return;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("opaque");

        if $z2 == 0 goto label4;

        r0.<android.net.http.HttpAuthHeader: java.lang.String mOpaque> = r2;

        return;

     label4:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("qop");

        if $z3 == 0 goto label5;

        $r5 = <java.util.Locale: java.util.Locale ROOT>;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        r0.<android.net.http.HttpAuthHeader: java.lang.String mQop> = $r6;

        return;

     label5:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("algorithm");

        if $z4 == 0 goto label1;

        $r3 = <java.util.Locale: java.util.Locale ROOT>;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        r0.<android.net.http.HttpAuthHeader: java.lang.String mAlgorithm> = $r4;

        return;
    }

    private void parseParameters(java.lang.String)
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String r1, $r2;
        int i0, $i1;

        r0 := @this: android.net.http.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label3;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(44);

        if i0 >= 0 goto label4;

        specialinvoke r0.<android.net.http.HttpAuthHeader: void parseParameter(java.lang.String)>(r1);

     label2:
        if i0 >= 0 goto label1;

     label3:
        return;

     label4:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        specialinvoke r0.<android.net.http.HttpAuthHeader: void parseParameter(java.lang.String)>($r2);

        $i1 = i0 + 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        goto label2;
    }

    private java.lang.String parseScheme(java.lang.String)
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String r1, r2, $r3, $r4;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: android.net.http.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label3;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(32);

        if i0 < 0 goto label3;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r2 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Digest");

        if $z0 == 0 goto label2;

        r0.<android.net.http.HttpAuthHeader: int mScheme> = 2;

        r0.<android.net.http.HttpAuthHeader: java.lang.String mAlgorithm> = "md5";

     label1:
        $i1 = i0 + 1;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r4;

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Basic");

        if $z1 == 0 goto label1;

        r0.<android.net.http.HttpAuthHeader: int mScheme> = 1;

        goto label1;

     label3:
        return null;
    }

    private void parseStale(java.lang.String)
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: android.net.http.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z0 == 0 goto label1;

        r0.<android.net.http.HttpAuthHeader: boolean mStale> = 1;

     label1:
        return;
    }

    private static java.lang.String trimDoubleQuotesIfAny(java.lang.String)
    {
        java.lang.String r0;
        int i0, $i2, $i4;
        char $c1, $c3;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= 2 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 34 goto label1;

        $i2 = i0 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        if $c3 != 34 goto label1;

        $i4 = i0 - 1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

     label1:
        return r0;
    }

    public java.lang.String getAlgorithm()
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        $r1 = r0.<android.net.http.HttpAuthHeader: java.lang.String mAlgorithm>;

        return $r1;
    }

    public java.lang.String getNonce()
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        $r1 = r0.<android.net.http.HttpAuthHeader: java.lang.String mNonce>;

        return $r1;
    }

    public java.lang.String getOpaque()
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        $r1 = r0.<android.net.http.HttpAuthHeader: java.lang.String mOpaque>;

        return $r1;
    }

    public java.lang.String getPassword()
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        $r1 = r0.<android.net.http.HttpAuthHeader: java.lang.String mPassword>;

        return $r1;
    }

    public java.lang.String getQop()
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        $r1 = r0.<android.net.http.HttpAuthHeader: java.lang.String mQop>;

        return $r1;
    }

    public java.lang.String getRealm()
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        $r1 = r0.<android.net.http.HttpAuthHeader: java.lang.String mRealm>;

        return $r1;
    }

    public int getScheme()
    {
        android.net.http.HttpAuthHeader r0;
        int $i0;

        r0 := @this: android.net.http.HttpAuthHeader;

        $i0 = r0.<android.net.http.HttpAuthHeader: int mScheme>;

        return $i0;
    }

    public boolean getStale()
    {
        android.net.http.HttpAuthHeader r0;
        boolean $z0;

        r0 := @this: android.net.http.HttpAuthHeader;

        $z0 = r0.<android.net.http.HttpAuthHeader: boolean mStale>;

        return $z0;
    }

    public java.lang.String getUsername()
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String $r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        $r1 = r0.<android.net.http.HttpAuthHeader: java.lang.String mUsername>;

        return $r1;
    }

    public boolean isBasic()
    {
        android.net.http.HttpAuthHeader r0;
        int $i0;

        r0 := @this: android.net.http.HttpAuthHeader;

        $i0 = r0.<android.net.http.HttpAuthHeader: int mScheme>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDigest()
    {
        android.net.http.HttpAuthHeader r0;
        int $i0;

        r0 := @this: android.net.http.HttpAuthHeader;

        $i0 = r0.<android.net.http.HttpAuthHeader: int mScheme>;

        if $i0 != 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isProxy()
    {
        android.net.http.HttpAuthHeader r0;
        boolean $z0;

        r0 := @this: android.net.http.HttpAuthHeader;

        $z0 = r0.<android.net.http.HttpAuthHeader: boolean mIsProxy>;

        return $z0;
    }

    public boolean isSupportedScheme()
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: android.net.http.HttpAuthHeader;

        $r1 = r0.<android.net.http.HttpAuthHeader: java.lang.String mRealm>;

        if $r1 == null goto label4;

        $i0 = r0.<android.net.http.HttpAuthHeader: int mScheme>;

        if $i0 != 1 goto label2;

     label1:
        return 1;

     label2:
        $i1 = r0.<android.net.http.HttpAuthHeader: int mScheme>;

        if $i1 != 2 goto label4;

        $r2 = r0.<android.net.http.HttpAuthHeader: java.lang.String mAlgorithm>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("md5");

        if $z0 == 0 goto label3;

        $r3 = r0.<android.net.http.HttpAuthHeader: java.lang.String mQop>;

        if $r3 == null goto label1;

        $r4 = r0.<android.net.http.HttpAuthHeader: java.lang.String mQop>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("auth");

        if $z1 != 0 goto label1;

     label3:
        return 0;

     label4:
        return 0;
    }

    public void setPassword(java.lang.String)
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.http.HttpAuthHeader: java.lang.String mPassword> = r1;

        return;
    }

    public void setProxy()
    {
        android.net.http.HttpAuthHeader r0;

        r0 := @this: android.net.http.HttpAuthHeader;

        r0.<android.net.http.HttpAuthHeader: boolean mIsProxy> = 1;

        return;
    }

    public void setUsername(java.lang.String)
    {
        android.net.http.HttpAuthHeader r0;
        java.lang.String r1;

        r0 := @this: android.net.http.HttpAuthHeader;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.http.HttpAuthHeader: java.lang.String mUsername> = r1;

        return;
    }

    public static void <clinit>()
    {
        <android.net.http.HttpAuthHeader: java.lang.String STALE_TOKEN> = "stale";

        <android.net.http.HttpAuthHeader: java.lang.String REALM_TOKEN> = "realm";

        <android.net.http.HttpAuthHeader: java.lang.String QOP_TOKEN> = "qop";

        <android.net.http.HttpAuthHeader: java.lang.String OPAQUE_TOKEN> = "opaque";

        <android.net.http.HttpAuthHeader: java.lang.String NONCE_TOKEN> = "nonce";

        <android.net.http.HttpAuthHeader: java.lang.String DIGEST_TOKEN> = "Digest";

        <android.net.http.HttpAuthHeader: int DIGEST> = 2;

        <android.net.http.HttpAuthHeader: java.lang.String BASIC_TOKEN> = "Basic";

        <android.net.http.HttpAuthHeader: int BASIC> = 1;

        <android.net.http.HttpAuthHeader: java.lang.String ALGORITHM_TOKEN> = "algorithm";

        return;
    }
}
