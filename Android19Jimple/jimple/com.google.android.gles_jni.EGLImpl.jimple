public class com.google.android.gles_jni.EGLImpl extends java.lang.Object implements javax.microedition.khronos.egl.EGL10
{
    private com.google.android.gles_jni.EGLContextImpl mContext;
    private com.google.android.gles_jni.EGLDisplayImpl mDisplay;
    private com.google.android.gles_jni.EGLSurfaceImpl mSurface;

    static void <clinit>()
    {
        staticinvoke <com.google.android.gles_jni.EGLImpl: void _nativeClassInit()>();

        return;
    }

    public void <init>()
    {
        com.google.android.gles_jni.EGLImpl r0;
        com.google.android.gles_jni.EGLContextImpl $r1;
        com.google.android.gles_jni.EGLDisplayImpl $r2;
        com.google.android.gles_jni.EGLSurfaceImpl $r3;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.android.gles_jni.EGLContextImpl;

        specialinvoke $r1.<com.google.android.gles_jni.EGLContextImpl: void <init>(int)>(-1);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext> = $r1;

        $r2 = new com.google.android.gles_jni.EGLDisplayImpl;

        specialinvoke $r2.<com.google.android.gles_jni.EGLDisplayImpl: void <init>(int)>(-1);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay> = $r2;

        $r3 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r3.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(int)>(-1);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface> = $r3;

        return;
    }

    private native int _eglCreateContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, javax.microedition.khronos.egl.EGLContext, int[]);

    private native int _eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int[]);

    private native void _eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);

    private native int _eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);

    private native int _eglCreateWindowSurfaceTexture(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[]);

    private native int _eglGetCurrentContext();

    private native int _eglGetCurrentDisplay();

    private native int _eglGetCurrentSurface(int);

    private native int _eglGetDisplay(java.lang.Object);

    private static native void _nativeClassInit();

    public static native int getInitCount(javax.microedition.khronos.egl.EGLDisplay);

    public native boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay, int[], javax.microedition.khronos.egl.EGLConfig[], int, int[]);

    public native boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, java.lang.Object);

    public javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, javax.microedition.khronos.egl.EGLContext, int[])
    {
        com.google.android.gles_jni.EGLImpl r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        javax.microedition.khronos.egl.EGLContext r3, $r6;
        int[] r4;
        int i0;
        com.google.android.gles_jni.EGLContextImpl $r5;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: javax.microedition.khronos.egl.EGLContext;

        r4 := @parameter3: int[];

        i0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: int _eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>(r1, r2, r3, r4);

        if i0 != 0 goto label1;

        $r6 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext EGL_NO_CONTEXT>;

        return $r6;

     label1:
        $r5 = new com.google.android.gles_jni.EGLContextImpl;

        specialinvoke $r5.<com.google.android.gles_jni.EGLContextImpl: void <init>(int)>(i0);

        return $r5;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int[])
    {
        com.google.android.gles_jni.EGLImpl r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        int[] r3;
        int i0;
        com.google.android.gles_jni.EGLSurfaceImpl $r4;
        javax.microedition.khronos.egl.EGLSurface $r5;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: int[];

        i0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: int _eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>(r1, r2, r3);

        if i0 != 0 goto label1;

        $r5 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

        return $r5;

     label1:
        $r4 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r4.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(int)>(i0);

        return $r4;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[])
    {
        com.google.android.gles_jni.EGLImpl r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        java.lang.Object r3;
        int[] r4;
        javax.microedition.khronos.egl.EGLSurface r5;
        int $i0;
        com.google.android.gles_jni.EGLSurfaceImpl r7, r8;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: int[];

        r7 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke r7.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>()>();

        r5 = r7;

        specialinvoke r0.<com.google.android.gles_jni.EGLImpl: void _eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>(r5, r1, r2, r3, r4);

        r8 = (com.google.android.gles_jni.EGLSurfaceImpl) r5;

        $i0 = r8.<com.google.android.gles_jni.EGLSurfaceImpl: int mEGLSurface>;

        if $i0 != 0 goto label1;

        r5 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

     label1:
        return r5;
    }

    public javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, java.lang.Object, int[])
    {
        com.google.android.gles_jni.EGLImpl r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig r2;
        java.lang.Object r3;
        int[] r4;
        boolean z0, $z1, $z2, $z3;
        android.view.Surface r5;
        int i0;
        java.lang.UnsupportedOperationException $r6;
        com.google.android.gles_jni.EGLSurfaceImpl $r7;
        javax.microedition.khronos.egl.EGLSurface $r8;
        android.view.SurfaceHolder $r9, $r10;
        android.view.SurfaceView $r11;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: javax.microedition.khronos.egl.EGLDisplay;

        r2 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: int[];

        $z1 = r3 instanceof android.view.SurfaceView;

        if $z1 == 0 goto label3;

        $r11 = (android.view.SurfaceView) r3;

        $r10 = virtualinvoke $r11.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        r5 = interfaceinvoke $r10.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

     label1:
        if r5 == null goto label5;

        i0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: int _eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>(r1, r2, r5, r4);

     label2:
        if i0 != 0 goto label7;

        $r8 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

        return $r8;

     label3:
        $z2 = r3 instanceof android.view.SurfaceHolder;

        if $z2 == 0 goto label4;

        $r9 = (android.view.SurfaceHolder) r3;

        r5 = interfaceinvoke $r9.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        goto label1;

     label4:
        z0 = r3 instanceof android.view.Surface;

        r5 = null;

        if z0 == 0 goto label1;

        r5 = (android.view.Surface) r3;

        goto label1;

     label5:
        $z3 = r3 instanceof android.graphics.SurfaceTexture;

        if $z3 == 0 goto label6;

        i0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: int _eglCreateWindowSurfaceTexture(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>(r1, r2, r3, r4);

        goto label2;

     label6:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("eglCreateWindowSurface() can only be called with an instance of Surface, SurfaceView, SurfaceHolder or SurfaceTexture at the moment.");

        throw $r6;

     label7:
        $r7 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r7.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(int)>(i0);

        return $r7;
    }

    public native boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext);

    public native boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface);

    public native boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig, int, int[]);

    public native boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLConfig[], int, int[]);

    public javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()
    {
        com.google.android.gles_jni.EGLImpl r0;
        java.lang.Throwable r1, $r5;
        int i0, $i1;
        javax.microedition.khronos.egl.EGLContext r2;
        com.google.android.gles_jni.EGLContextImpl $r3, $r4;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        entermonitor r0;

     label1:
        i0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: int _eglGetCurrentContext()>();

     label2:
        if i0 != 0 goto label5;

     label3:
        r2 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext EGL_NO_CONTEXT>;

     label4:
        exitmonitor r0;

        return r2;

     label5:
        $r3 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext>;

        $i1 = $r3.<com.google.android.gles_jni.EGLContextImpl: int mEGLContext>;

        if $i1 == i0 goto label6;

        $r4 = new com.google.android.gles_jni.EGLContextImpl;

        specialinvoke $r4.<com.google.android.gles_jni.EGLContextImpl: void <init>(int)>(i0);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext> = $r4;

     label6:
        r2 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLContextImpl mContext>;

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()
    {
        com.google.android.gles_jni.EGLImpl r0;
        java.lang.Throwable r1, $r5;
        int i0, $i1;
        javax.microedition.khronos.egl.EGLDisplay r2;
        com.google.android.gles_jni.EGLDisplayImpl $r3, $r4;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        entermonitor r0;

     label1:
        i0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: int _eglGetCurrentDisplay()>();

     label2:
        if i0 != 0 goto label5;

     label3:
        r2 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay EGL_NO_DISPLAY>;

     label4:
        exitmonitor r0;

        return r2;

     label5:
        $r3 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

        $i1 = $r3.<com.google.android.gles_jni.EGLDisplayImpl: int mEGLDisplay>;

        if $i1 == i0 goto label6;

        $r4 = new com.google.android.gles_jni.EGLDisplayImpl;

        specialinvoke $r4.<com.google.android.gles_jni.EGLDisplayImpl: void <init>(int)>(i0);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay> = $r4;

     label6:
        r2 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)
    {
        com.google.android.gles_jni.EGLImpl r0;
        int i0, i1, $i2;
        java.lang.Throwable r1, $r5;
        javax.microedition.khronos.egl.EGLSurface r2;
        com.google.android.gles_jni.EGLSurfaceImpl $r3, $r4;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        i1 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: int _eglGetCurrentSurface(int)>(i0);

     label2:
        if i1 != 0 goto label5;

     label3:
        r2 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface EGL_NO_SURFACE>;

     label4:
        exitmonitor r0;

        return r2;

     label5:
        $r3 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface>;

        $i2 = $r3.<com.google.android.gles_jni.EGLSurfaceImpl: int mEGLSurface>;

        if $i2 == i1 goto label6;

        $r4 = new com.google.android.gles_jni.EGLSurfaceImpl;

        specialinvoke $r4.<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(int)>(i1);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface> = $r4;

     label6:
        r2 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLSurfaceImpl mSurface>;

     label7:
        goto label4;

     label8:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)
    {
        com.google.android.gles_jni.EGLImpl r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        int i0, $i1;
        javax.microedition.khronos.egl.EGLDisplay r3;
        com.google.android.gles_jni.EGLDisplayImpl $r4, $r5;

        r0 := @this: com.google.android.gles_jni.EGLImpl;

        r1 := @parameter0: java.lang.Object;

        entermonitor r0;

     label1:
        i0 = specialinvoke r0.<com.google.android.gles_jni.EGLImpl: int _eglGetDisplay(java.lang.Object)>(r1);

     label2:
        if i0 != 0 goto label5;

     label3:
        r3 = <javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay EGL_NO_DISPLAY>;

     label4:
        exitmonitor r0;

        return r3;

     label5:
        $r4 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

        $i1 = $r4.<com.google.android.gles_jni.EGLDisplayImpl: int mEGLDisplay>;

        if $i1 == i0 goto label6;

        $r5 = new com.google.android.gles_jni.EGLDisplayImpl;

        specialinvoke $r5.<com.google.android.gles_jni.EGLDisplayImpl: void <init>(int)>(i0);

        r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay> = $r5;

     label6:
        r3 = r0.<com.google.android.gles_jni.EGLImpl: com.google.android.gles_jni.EGLDisplayImpl mDisplay>;

     label7:
        goto label4;

     label8:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public native int eglGetError();

    public native boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay, int[]);

    public native boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLSurface, javax.microedition.khronos.egl.EGLContext);

    public native boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLContext, int, int[]);

    public native java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay, int);

    public native boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface, int, int[]);

    public native boolean eglReleaseThread();

    public native boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay, javax.microedition.khronos.egl.EGLSurface);

    public native boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay);

    public native boolean eglWaitGL();

    public native boolean eglWaitNative(int, java.lang.Object);
}
