final class com.android.server.power.PowerManagerService$ScreenOnBlockerImpl extends java.lang.Object implements com.android.server.power.ScreenOnBlocker
{
    private int mNestCount;
    final com.android.server.power.PowerManagerService this$0;

    private void <init>(com.android.server.power.PowerManagerService)
    {
        com.android.server.power.PowerManagerService$ScreenOnBlockerImpl r0;
        com.android.server.power.PowerManagerService r1;

        r0 := @this: com.android.server.power.PowerManagerService$ScreenOnBlockerImpl;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: com.android.server.power.PowerManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.power.PowerManagerService, com.android.server.power.PowerManagerService$1)
    {
        com.android.server.power.PowerManagerService$ScreenOnBlockerImpl r0;
        com.android.server.power.PowerManagerService r1;
        com.android.server.power.PowerManagerService$1 r2;

        r0 := @this: com.android.server.power.PowerManagerService$ScreenOnBlockerImpl;

        r1 := @parameter0: com.android.server.power.PowerManagerService;

        r2 := @parameter1: com.android.server.power.PowerManagerService$1;

        specialinvoke r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: void <init>(com.android.server.power.PowerManagerService)>(r1);

        return;
    }

    public void acquire()
    {
        com.android.server.power.PowerManagerService$ScreenOnBlockerImpl r0;
        java.lang.Throwable r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.server.power.PowerManagerService$ScreenOnBlockerImpl;

        entermonitor r0;

     label1:
        $i0 = r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount>;

        $i1 = 1 + $i0;

        r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount> = $i1;

        exitmonitor r0;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        exitmonitor r0;

     label5:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public boolean isHeld()
    {
        com.android.server.power.PowerManagerService$ScreenOnBlockerImpl r0;
        java.lang.Throwable r1, $r2;
        boolean z0;
        int $i0;

        r0 := @this: com.android.server.power.PowerManagerService$ScreenOnBlockerImpl;

        entermonitor r0;

     label1:
        $i0 = r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount>;

        if $i0 == 0 goto label8;

     label2:
        z0 = 1;

     label3:
        exitmonitor r0;

     label4:
        return z0;

     label5:
        $r2 := @caughtexception;

        r1 = $r2;

     label6:
        exitmonitor r0;

     label7:
        throw r1;

     label8:
        z0 = 0;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void release()
    {
        com.android.server.power.PowerManagerService$ScreenOnBlockerImpl r0;
        java.lang.Throwable r1, $r4, $r5;
        int $i0, $i1, $i2, $i3;
        com.android.server.power.PowerManagerService $r2;
        com.android.server.power.PowerManagerService$PowerManagerHandler $r3;

        r0 := @this: com.android.server.power.PowerManagerService$ScreenOnBlockerImpl;

        entermonitor r0;

     label1:
        $i0 = r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount>;

        $i1 = -1 + $i0;

        r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount> = $i1;

        $i2 = r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount>;

        if $i2 >= 0 goto label2;

        $r4 = new java.lang.Throwable;

        specialinvoke $r4.<java.lang.Throwable: void <init>()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>("PowerManagerService", "Screen on blocker was released without being acquired!", $r4);

        r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount> = 0;

     label2:
        $i3 = r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount>;

        if $i3 != 0 goto label3;

        $r2 = r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: com.android.server.power.PowerManagerService this$0>;

        $r3 = staticinvoke <com.android.server.power.PowerManagerService: com.android.server.power.PowerManagerService$PowerManagerHandler access$2600(com.android.server.power.PowerManagerService)>($r2);

        virtualinvoke $r3.<com.android.server.power.PowerManagerService$PowerManagerHandler: boolean sendEmptyMessage(int)>(3);

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        r1 = $r5;

     label6:
        exitmonitor r0;

     label7:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public java.lang.String toString()
    {
        com.android.server.power.PowerManagerService$ScreenOnBlockerImpl r0;
        java.lang.Throwable r1, $r8;
        java.lang.StringBuilder r2, $r4, $r5, $r6, $r7;
        boolean z0;
        java.lang.String r3;
        int $i0, $i1;

        r0 := @this: com.android.server.power.PowerManagerService$ScreenOnBlockerImpl;

        entermonitor r0;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("held=");

        $i0 = r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount>;

        if $i0 == 0 goto label8;

     label2:
        z0 = 1;

     label3:
        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mNestCount=");

        $i1 = r0.<com.android.server.power.PowerManagerService$ScreenOnBlockerImpl: int mNestCount>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        exitmonitor r0;

     label4:
        return r3;

     label5:
        $r8 := @caughtexception;

        r1 = $r8;

     label6:
        exitmonitor r0;

     label7:
        throw r1;

     label8:
        z0 = 0;

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
