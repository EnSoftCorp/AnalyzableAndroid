class android.net.wifi.WifiMonitor$WifiMonitorSingleton extends java.lang.Object
{
    private static java.lang.Object sSingletonLock;
    private static android.net.wifi.WifiMonitor$WifiMonitorSingleton sWifiMonitorSingleton;
    private boolean mConnected;
    private java.util.HashMap mIfaceMap;
    private android.net.wifi.WifiNative mWifiNative;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.lang.Object sSingletonLock> = $r0;

        <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor$WifiMonitorSingleton sWifiMonitorSingleton> = null;

        return;
    }

    private void <init>()
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.util.HashMap $r1;

        r0 := @this: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap> = $r1;

        r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected> = 0;

        return;
    }

    static android.net.wifi.WifiMonitor access$300(android.net.wifi.WifiMonitor$WifiMonitorSingleton, java.lang.String)
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1;
        android.net.wifi.WifiMonitor $r2;

        r0 := @parameter0: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor getMonitor(java.lang.String)>(r1);

        return $r2;
    }

    static java.util.HashMap access$400(android.net.wifi.WifiMonitor$WifiMonitorSingleton)
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.util.HashMap $r1;

        r0 := @parameter0: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        $r1 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        return $r1;
    }

    static boolean access$502(android.net.wifi.WifiMonitor$WifiMonitorSingleton, boolean)
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        boolean z0;

        r0 := @parameter0: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        z0 := @parameter1: boolean;

        r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected> = z0;

        return z0;
    }

    static android.net.wifi.WifiMonitor$WifiMonitorSingleton getMonitor()
    {
        java.lang.Object r0;
        java.lang.Throwable r1, $r5;
        android.net.wifi.WifiMonitor$WifiMonitorSingleton $r2, $r3, $r4;

        r0 = <android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.lang.Object sSingletonLock>;

        entermonitor r0;

     label1:
        $r2 = <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor$WifiMonitorSingleton sWifiMonitorSingleton>;

        if $r2 != null goto label2;

        $r4 = new android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        specialinvoke $r4.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: void <init>()>();

        <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor$WifiMonitorSingleton sWifiMonitorSingleton> = $r4;

     label2:
        exitmonitor r0;

     label3:
        $r3 = <android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiMonitor$WifiMonitorSingleton sWifiMonitorSingleton>;

        return $r3;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private android.net.wifi.WifiMonitor getMonitor(java.lang.String)
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r6;
        android.net.wifi.WifiMonitor r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;

        r0 := @this: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.net.wifi.WifiMonitor) $r5;

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void killSupplicant(boolean)
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        boolean z0, $z2;
        java.lang.Throwable r1, $r10;
        java.util.Iterator r2;
        java.util.HashMap $r4;
        java.util.Set $r5;
        java.lang.Object $r6, $r9;
        java.util.Map$Entry $r7;
        android.net.wifi.WifiMonitor $r8;

        r0 := @this: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        staticinvoke <android.net.wifi.WifiNative: boolean killSupplicant(boolean)>(z0);

        r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected> = 0;

        $r4 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r9 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r8 = (android.net.wifi.WifiMonitor) $r9;

        staticinvoke <android.net.wifi.WifiMonitor: boolean access$002(android.net.wifi.WifiMonitor,boolean)>($r8, 0);

     label3:
        goto label2;

     label4:
        $r10 := @caughtexception;

        r1 = $r10;

        exitmonitor r0;

        throw r1;

     label5:
        exitmonitor r0;

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void registerInterfaceMonitor(java.lang.String, android.net.wifi.WifiMonitor)
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1;
        android.net.wifi.WifiMonitor r2;
        java.lang.Throwable r3, $r8;
        java.util.HashMap $r4;
        android.net.wifi.WifiNative $r6, $r7;

        r0 := @this: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.wifi.WifiMonitor;

        entermonitor r0;

     label1:
        $r4 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r6 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiNative mWifiNative>;

        if $r6 != null goto label2;

        $r7 = staticinvoke <android.net.wifi.WifiMonitor: android.net.wifi.WifiNative access$200(android.net.wifi.WifiMonitor)>(r2);

        r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiNative mWifiNative> = $r7;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r0;

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void startMonitoring(java.lang.String)
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1, $r11, $r19, $r28;
        java.lang.Throwable r2, $r31;
        android.net.wifi.WifiMonitor r3;
        int i0, i1;
        java.util.HashMap $r5, $r15;
        java.lang.Object $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r16, $r18, $r20, $r21, $r25, $r27, $r29;
        boolean $z0, $z1, $z2;
        android.net.wifi.WifiNative $r13, $r26;
        com.android.internal.util.StateMachine $r17, $r22, $r24;
        android.net.wifi.WifiMonitor$MonitorThread $r23;
        java.lang.InterruptedException $r30;

        r0 := @this: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label01:
        $r5 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.net.wifi.WifiMonitor) $r6;

     label02:
        if r3 != null goto label05;

     label03:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startMonitor called with unknown iface=");

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiMonitor", $r28);

     label04:
        exitmonitor r0;

        return;

     label05:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startMonitoring(");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with mConnected = ");

        $z0 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiMonitor", $r11);

        $z1 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected>;

        if $z1 == 0 goto label08;

        staticinvoke <android.net.wifi.WifiMonitor: boolean access$002(android.net.wifi.WifiMonitor,boolean)>(r3, 1);

        $r24 = staticinvoke <android.net.wifi.WifiMonitor: com.android.internal.util.StateMachine access$100(android.net.wifi.WifiMonitor)>(r3);

        virtualinvoke $r24.<com.android.internal.util.StateMachine: void sendMessage(int)>(147457);

     label06:
        goto label04;

     label07:
        $r31 := @caughtexception;

        r2 = $r31;

        exitmonitor r0;

        throw r2;

     label08:
        i0 = 0;

     label09:
        $r13 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiNative mWifiNative>;

        $z2 = virtualinvoke $r13.<android.net.wifi.WifiNative: boolean connectToSupplicant()>();

        if $z2 == 0 goto label11;

        staticinvoke <android.net.wifi.WifiMonitor: boolean access$002(android.net.wifi.WifiMonitor,boolean)>(r3, 1);

        $r22 = staticinvoke <android.net.wifi.WifiMonitor: com.android.internal.util.StateMachine access$100(android.net.wifi.WifiMonitor)>(r3);

        virtualinvoke $r22.<com.android.internal.util.StateMachine: void sendMessage(int)>(147457);

        $r23 = new android.net.wifi.WifiMonitor$MonitorThread;

        $r26 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiNative mWifiNative>;

        specialinvoke $r23.<android.net.wifi.WifiMonitor$MonitorThread: void <init>(android.net.wifi.WifiNative,android.net.wifi.WifiMonitor$WifiMonitorSingleton)>($r26, r0);

        virtualinvoke $r23.<android.net.wifi.WifiMonitor$MonitorThread: void start()>();

        r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected> = 1;

     label10:
        goto label04;

     label11:
        i1 = i0 + 1;

        if i0 >= 5 goto label15;

     label12:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label13:
        i0 = i1;

        goto label09;

     label14:
        $r30 := @caughtexception;

        i0 = i1;

        goto label09;

     label15:
        $r15 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r17 = staticinvoke <android.net.wifi.WifiMonitor: com.android.internal.util.StateMachine access$100(android.net.wifi.WifiMonitor)>(r3);

        virtualinvoke $r17.<com.android.internal.util.StateMachine: void sendMessage(int)>(147458);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startMonitoring(");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") failed!");

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiMonitor", $r19);

     label16:
        goto label04;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.InterruptedException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label15 to label16 with label07;
    }

    public void stopMonitoring(java.lang.String)
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r7;
        android.net.wifi.WifiMonitor r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        com.android.internal.util.StateMachine $r6;

        r0 := @this: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.net.wifi.WifiMonitor) $r5;

        staticinvoke <android.net.wifi.WifiMonitor: boolean access$002(android.net.wifi.WifiMonitor,boolean)>(r3, 0);

        $r6 = staticinvoke <android.net.wifi.WifiMonitor: com.android.internal.util.StateMachine access$100(android.net.wifi.WifiMonitor)>(r3);

        virtualinvoke $r6.<com.android.internal.util.StateMachine: void sendMessage(int)>(147458);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stopSupplicant()
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.Throwable r1, $r3;
        android.net.wifi.WifiNative $r2;

        r0 := @this: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        entermonitor r0;

     label1:
        $r2 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: android.net.wifi.WifiNative mWifiNative>;

        virtualinvoke $r2.<android.net.wifi.WifiNative: boolean stopSupplicant()>();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void unregisterInterfaceMonitor(java.lang.String)
    {
        android.net.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r6;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        android.net.wifi.WifiMonitor $r5;

        r0 := @this: android.net.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = r0.<android.net.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r5 = (android.net.wifi.WifiMonitor) $r4;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
