class android.media.WebVttParser extends java.lang.Object
{
    private static final java.lang.String TAG;
    private java.lang.String mBuffer;
    private android.media.TextTrackCue mCue;
    private java.util.Vector mCueTexts;
    private android.media.WebVttCueListener mListener;
    private final android.media.WebVttParser$Phase mParseCueId;
    private final android.media.WebVttParser$Phase mParseCueText;
    private final android.media.WebVttParser$Phase mParseCueTime;
    private final android.media.WebVttParser$Phase mParseHeader;
    private final android.media.WebVttParser$Phase mParseStart;
    private android.media.WebVttParser$Phase mPhase;
    private final android.media.WebVttParser$Phase mSkipRest;

    void <init>(android.media.WebVttCueListener)
    {
        android.media.WebVttParser r0;
        android.media.WebVttCueListener r1;
        android.media.WebVttParser$1 $r2;
        android.media.WebVttParser$2 $r3;
        android.media.WebVttParser$3 $r4;
        android.media.WebVttParser$4 $r5;
        android.media.WebVttParser$5 $r6;
        android.media.WebVttParser$6 $r7;
        android.media.WebVttParser$Phase $r8;
        java.util.Vector $r9;

        r0 := @this: android.media.WebVttParser;

        r1 := @parameter0: android.media.WebVttCueListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.media.WebVttParser$1;

        specialinvoke $r2.<android.media.WebVttParser$1: void <init>(android.media.WebVttParser)>(r0);

        r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mSkipRest> = $r2;

        $r3 = new android.media.WebVttParser$2;

        specialinvoke $r3.<android.media.WebVttParser$2: void <init>(android.media.WebVttParser)>(r0);

        r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseStart> = $r3;

        $r4 = new android.media.WebVttParser$3;

        specialinvoke $r4.<android.media.WebVttParser$3: void <init>(android.media.WebVttParser)>(r0);

        r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseHeader> = $r4;

        $r5 = new android.media.WebVttParser$4;

        specialinvoke $r5.<android.media.WebVttParser$4: void <init>(android.media.WebVttParser)>(r0);

        r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseCueId> = $r5;

        $r6 = new android.media.WebVttParser$5;

        specialinvoke $r6.<android.media.WebVttParser$5: void <init>(android.media.WebVttParser)>(r0);

        r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseCueTime> = $r6;

        $r7 = new android.media.WebVttParser$6;

        specialinvoke $r7.<android.media.WebVttParser$6: void <init>(android.media.WebVttParser)>(r0);

        r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseCueText> = $r7;

        $r8 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseStart>;

        r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mPhase> = $r8;

        r0.<android.media.WebVttParser: java.lang.String mBuffer> = "";

        r0.<android.media.WebVttParser: android.media.WebVttCueListener mListener> = r1;

        $r9 = new java.util.Vector;

        specialinvoke $r9.<java.util.Vector: void <init>()>();

        r0.<android.media.WebVttParser: java.util.Vector mCueTexts> = $r9;

        return;
    }

    static void access$000(android.media.WebVttParser, java.lang.String, java.lang.String)
    {
        android.media.WebVttParser r0;
        java.lang.String r1, r2;

        r0 := @parameter0: android.media.WebVttParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<android.media.WebVttParser: void log_warning(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    static android.media.WebVttParser$Phase access$100(android.media.WebVttParser)
    {
        android.media.WebVttParser r0;
        android.media.WebVttParser$Phase $r1;

        r0 := @parameter0: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mPhase>;

        return $r1;
    }

    static android.media.WebVttParser$Phase access$1000(android.media.WebVttParser)
    {
        android.media.WebVttParser r0;
        android.media.WebVttParser$Phase $r1;

        r0 := @parameter0: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseCueText>;

        return $r1;
    }

    static android.media.WebVttParser$Phase access$102(android.media.WebVttParser, android.media.WebVttParser$Phase)
    {
        android.media.WebVttParser r0;
        android.media.WebVttParser$Phase r1;

        r0 := @parameter0: android.media.WebVttParser;

        r1 := @parameter1: android.media.WebVttParser$Phase;

        r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mPhase> = r1;

        return r1;
    }

    static java.util.Vector access$1100(android.media.WebVttParser)
    {
        android.media.WebVttParser r0;
        java.util.Vector $r1;

        r0 := @parameter0: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: java.util.Vector mCueTexts>;

        return $r1;
    }

    static android.media.WebVttParser$Phase access$200(android.media.WebVttParser)
    {
        android.media.WebVttParser r0;
        android.media.WebVttParser$Phase $r1;

        r0 := @parameter0: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mSkipRest>;

        return $r1;
    }

    static android.media.WebVttParser$Phase access$300(android.media.WebVttParser)
    {
        android.media.WebVttParser r0;
        android.media.WebVttParser$Phase $r1;

        r0 := @parameter0: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseHeader>;

        return $r1;
    }

    static void access$400(android.media.WebVttParser, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.media.WebVttParser r0;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @parameter0: android.media.WebVttParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        specialinvoke r0.<android.media.WebVttParser: void log_warning(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4, r5);

        return;
    }

    static void access$500(android.media.WebVttParser, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.media.WebVttParser r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @parameter0: android.media.WebVttParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        specialinvoke r0.<android.media.WebVttParser: void log_warning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    static android.media.WebVttParser$Phase access$600(android.media.WebVttParser)
    {
        android.media.WebVttParser r0;
        android.media.WebVttParser$Phase $r1;

        r0 := @parameter0: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseCueId>;

        return $r1;
    }

    static android.media.WebVttParser$Phase access$700(android.media.WebVttParser)
    {
        android.media.WebVttParser r0;
        android.media.WebVttParser$Phase $r1;

        r0 := @parameter0: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseCueTime>;

        return $r1;
    }

    static android.media.WebVttCueListener access$800(android.media.WebVttParser)
    {
        android.media.WebVttParser r0;
        android.media.WebVttCueListener $r1;

        r0 := @parameter0: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: android.media.WebVttCueListener mListener>;

        return $r1;
    }

    static android.media.TextTrackCue access$900(android.media.WebVttParser)
    {
        android.media.WebVttParser r0;
        android.media.TextTrackCue $r1;

        r0 := @parameter0: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: android.media.TextTrackCue mCue>;

        return $r1;
    }

    static android.media.TextTrackCue access$902(android.media.WebVttParser, android.media.TextTrackCue)
    {
        android.media.WebVttParser r0;
        android.media.TextTrackCue r1;

        r0 := @parameter0: android.media.WebVttParser;

        r1 := @parameter1: android.media.TextTrackCue;

        r0.<android.media.WebVttParser: android.media.TextTrackCue mCue> = r1;

        return r1;
    }

    private void log_warning(java.lang.String, java.lang.String)
    {
        android.media.WebVttParser r0;
        java.lang.String r1, r2, $r4, $r10;
        java.lang.Class $r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @this: android.media.WebVttParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (\'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r4, $r10);

        return;
    }

    private void log_warning(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.media.WebVttParser r0;
        java.lang.String r1, r2, r3, r4, $r6, $r16;
        java.lang.Class $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: android.media.WebVttParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (\'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r6, $r16);

        return;
    }

    private void log_warning(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.media.WebVttParser r0;
        java.lang.String r1, r2, r3, r4, r5, $r7, $r18;
        java.lang.Class $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19;

        r0 := @this: android.media.WebVttParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (\'");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r18);

        return;
    }

    public static float parseFloatPercentage(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0, r1;
        float f0;
        boolean $z0, $z1;
        int $i0, $i1;
        byte $b2, $b3;
        java.lang.NumberFormatException $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("%");

        if $z0 != 0 goto label1;

        $r6 = new java.lang.NumberFormatException;

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>("does not end in %");

        throw $r6;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = -1 + $i0;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $z1 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>(".*[^0-9.].*");

        if $z1 == 0 goto label2;

        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>("contains an invalid character");

        throw $r4;

     label2:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r1);

     label3:
        $b2 = f0 cmpg 0.0F;

        if $b2 < 0 goto label4;

        $b3 = f0 cmpl 100.0F;

        if $b3 <= 0 goto label6;

     label4:
        $r3 = new java.lang.NumberFormatException;

        specialinvoke $r3.<java.lang.NumberFormatException: void <init>(java.lang.String)>("is out of range");

        throw $r3;

     label5:
        $r5 := @caughtexception;

        $r7 = new java.lang.NumberFormatException;

        specialinvoke $r7.<java.lang.NumberFormatException: void <init>(java.lang.String)>("is not a number");

        throw $r7;

     label6:
        return f0;

        catch java.lang.NumberFormatException from label2 to label3 with label5;
        catch java.lang.NumberFormatException from label4 to label5 with label5;
    }

    public static int parseIntPercentage(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0, r1;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("%");

        if $z0 != 0 goto label1;

        $r5 = new java.lang.NumberFormatException;

        specialinvoke $r5.<java.lang.NumberFormatException: void <init>(java.lang.String)>("does not end in %");

        throw $r5;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = -1 + $i1;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $z1 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>(".*[^0-9].*");

        if $z1 == 0 goto label2;

        $r4 = new java.lang.NumberFormatException;

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>("contains an invalid character");

        throw $r4;

     label2:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label3:
        if i0 < 0 goto label4;

        if i0 <= 100 goto label6;

     label4:
        $r3 = new java.lang.NumberFormatException;

        specialinvoke $r3.<java.lang.NumberFormatException: void <init>(java.lang.String)>("is out of range");

        throw $r3;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.NumberFormatException;

        specialinvoke $r7.<java.lang.NumberFormatException: void <init>(java.lang.String)>("is not a number");

        throw $r7;

     label6:
        return i0;

        catch java.lang.NumberFormatException from label2 to label3 with label5;
        catch java.lang.NumberFormatException from label4 to label5 with label5;
    }

    public static long parseTimestampMs(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0, r3, $r4, $r5;
        java.lang.String[] r1, r2;
        long l0, $l3, $l4, $l5, $l6, $l7;
        int i1, i2;
        boolean $z0;
        java.lang.NumberFormatException $r6;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean matches(java.lang.String)>("(\\d+:)?[0-5]\\d:[0-5]\\d\\.\\d{3}");

        if $z0 != 0 goto label1;

        $r6 = new java.lang.NumberFormatException;

        specialinvoke $r6.<java.lang.NumberFormatException: void <init>(java.lang.String)>("has invalid format");

        throw $r6;

     label1:
        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", 2);

        l0 = 0L;

        $r4 = r1[0];

        r2 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        i1 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r3 = r2[i2];

        $l7 = 60L * l0;

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

        l0 = $l7 + $l6;

        i2 = i2 + 1;

        goto label2;

     label3:
        $l3 = 1000L * l0;

        $r5 = r1[1];

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

        $l5 = $l3 + $l4;

        return $l5;
    }

    public static java.lang.String timeToString(long)
    {
        long l0, $l1, $l2, $l3, $l4, $l5, $l6;
        java.lang.Object[] r0;
        java.lang.Long $r1, $r2, $r3, $r5;
        java.lang.String $r4;

        l0 := @parameter0: long;

        r0 = newarray (java.lang.Object)[4];

        $l1 = l0 / 3600000L;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        r0[0] = $r1;

        $l2 = l0 / 60000L;

        $l3 = $l2 % 60L;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        r0[1] = $r2;

        $l4 = l0 / 1000L;

        $l5 = $l4 % 60L;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        r0[2] = $r3;

        $l6 = l0 % 1000L;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        r0[3] = $r5;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d:%02d:%02d.%03d", r0);

        return $r4;
    }

    public void eos()
    {
        android.media.WebVttParser r0;
        java.lang.String $r1, $r2, $r5, $r6, $r7;
        boolean $z0;
        android.media.WebVttParser$Phase $r3, $r4;
        int $i0, $i1;

        r0 := @this: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("\r");

        if $z0 == 0 goto label1;

        $r6 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        $r5 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i1 = -1 + $i0;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        r0.<android.media.WebVttParser: java.lang.String mBuffer> = $r7;

     label1:
        $r3 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mPhase>;

        $r2 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        interfaceinvoke $r3.<android.media.WebVttParser$Phase: void parse(java.lang.String)>($r2);

        r0.<android.media.WebVttParser: java.lang.String mBuffer> = "";

        virtualinvoke r0.<android.media.WebVttParser: void yieldCue()>();

        $r4 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mParseStart>;

        r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mPhase> = $r4;

        return;
    }

    public void parse(java.lang.String)
    {
        android.media.WebVttParser r0;
        java.lang.String r1, $r4, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r17, $r18, $r19, $r21, $r22;
        boolean z0, z1;
        java.lang.String[] r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r3, $r5, $r7, $r14, $r15, $r16;
        android.media.WebVttParser$Phase $r20;

        r0 := @this: android.media.WebVttParser;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\u0000", "\ufffd");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\r\n", "\n");

        r0.<android.media.WebVttParser: java.lang.String mBuffer> = $r9;

        $r10 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        z0 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>("\r");

        z1 = 0;

        if z0 == 0 goto label1;

        z1 = 1;

        $r21 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        $r19 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        $i6 = virtualinvoke $r19.<java.lang.String: int length()>();

        $i5 = -1 + $i6;

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        r0.<android.media.WebVttParser: java.lang.String mBuffer> = $r22;

     label1:
        $r11 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        r2 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>("[\r\n]");

        i0 = 0;

     label2:
        $i1 = lengthof r2;

        $i3 = -1 + $i1;

        if i0 >= $i3 goto label3;

        $r20 = r0.<android.media.WebVttParser: android.media.WebVttParser$Phase mPhase>;

        $r17 = r2[i0];

        interfaceinvoke $r20.<android.media.WebVttParser$Phase: void parse(java.lang.String)>($r17);

        i0 = i0 + 1;

        goto label2;

     label3:
        $i2 = lengthof r2;

        $i4 = -1 + $i2;

        $r12 = r2[$i4];

        r0.<android.media.WebVttParser: java.lang.String mBuffer> = $r12;

        if z1 == 0 goto label4;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<android.media.WebVttParser: java.lang.String mBuffer>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.media.WebVttParser: java.lang.String mBuffer> = $r18;

     label4:
        return;
    }

    public void yieldCue()
    {
        android.media.WebVttParser r0;
        android.media.TextTrackCue $r1, $r4, $r6, $r11;
        java.util.Vector $r2, $r3, $r8, $r10;
        int $i0, $i1;
        java.lang.String[] $r5, $r7;
        android.media.WebVttCueListener $r12;

        r0 := @this: android.media.WebVttParser;

        $r1 = r0.<android.media.WebVttParser: android.media.TextTrackCue mCue>;

        if $r1 == null goto label1;

        $r2 = r0.<android.media.WebVttParser: java.util.Vector mCueTexts>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        if $i0 <= 0 goto label1;

        $r4 = r0.<android.media.WebVttParser: android.media.TextTrackCue mCue>;

        $r3 = r0.<android.media.WebVttParser: java.util.Vector mCueTexts>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        $r5 = newarray (java.lang.String)[$i1];

        $r4.<android.media.TextTrackCue: java.lang.String[] mStrings> = $r5;

        $r8 = r0.<android.media.WebVttParser: java.util.Vector mCueTexts>;

        $r6 = r0.<android.media.WebVttParser: android.media.TextTrackCue mCue>;

        $r7 = $r6.<android.media.TextTrackCue: java.lang.String[] mStrings>;

        virtualinvoke $r8.<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r10 = r0.<android.media.WebVttParser: java.util.Vector mCueTexts>;

        virtualinvoke $r10.<java.util.Vector: void clear()>();

        $r12 = r0.<android.media.WebVttParser: android.media.WebVttCueListener mListener>;

        $r11 = r0.<android.media.WebVttParser: android.media.TextTrackCue mCue>;

        interfaceinvoke $r12.<android.media.WebVttCueListener: void onCueParsed(android.media.TextTrackCue)>($r11);

     label1:
        r0.<android.media.WebVttParser: android.media.TextTrackCue mCue> = null;

        return;
    }

    public static void <clinit>()
    {
        <android.media.WebVttParser: java.lang.String TAG> = "WebVttParser";

        return;
    }
}
