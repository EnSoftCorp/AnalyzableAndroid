class java.util.jar.JarVerifier extends java.lang.Object
{
    private static final java.lang.String[] DIGEST_ALGORITHMS;
    private final java.util.Hashtable certificates;
    private final java.lang.String jarName;
    int mainAttributesEnd;
    private java.util.jar.Manifest man;
    private java.util.HashMap metaEntries;
    private final java.util.Hashtable signatures;
    private final java.util.Hashtable verifiedEntries;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "SHA-512";

        $r0[1] = "SHA-384";

        $r0[2] = "SHA-256";

        $r0[3] = "SHA1";

        <java.util.jar.JarVerifier: java.lang.String[] DIGEST_ALGORITHMS> = $r0;

        return;
    }

    void <init>(java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.util.Hashtable $r3, $r4, $r5;

        r0 := @this: java.util.jar.JarVerifier;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(5);

        r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries> = $r2;

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>(int)>(5);

        r0.<java.util.jar.JarVerifier: java.util.Hashtable signatures> = $r3;

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>(int)>(5);

        r0.<java.util.jar.JarVerifier: java.util.Hashtable certificates> = $r4;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedEntries> = $r5;

        r0.<java.util.jar.JarVerifier: java.lang.String jarName> = r1;

        return;
    }

    static java.lang.String access$000(java.util.jar.JarVerifier)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String $r1;

        r0 := @parameter0: java.util.jar.JarVerifier;

        $r1 = r0.<java.util.jar.JarVerifier: java.lang.String jarName>;

        return $r1;
    }

    static java.lang.SecurityException access$100(java.util.jar.JarVerifier, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1, r2, r3;
        java.lang.SecurityException $r4;

        r0 := @parameter0: java.util.jar.JarVerifier;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = specialinvoke r0.<java.util.jar.JarVerifier: java.lang.SecurityException invalidDigest(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    static java.util.Hashtable access$200(java.util.jar.JarVerifier)
    {
        java.util.jar.JarVerifier r0;
        java.util.Hashtable $r1;

        r0 := @parameter0: java.util.jar.JarVerifier;

        $r1 = r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedEntries>;

        return $r1;
    }

    private java.lang.SecurityException failedVerification(java.lang.String, java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1, r2, $r8;
        java.lang.SecurityException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: java.util.jar.JarVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.SecurityException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed verification of ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.SecurityException: void <init>(java.lang.String)>($r8);

        throw $r3;
    }

    public static java.util.Vector getSignerCertificates(java.lang.String, java.util.Map)
    {
        java.lang.String r0;
        java.util.Map r1;
        java.util.Vector r2, $r4;
        java.security.cert.Certificate[] r3;
        int i0, i1;
        java.lang.Object $r5;
        java.security.cert.Certificate $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r2 = $r4;

        $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.security.cert.Certificate[]) $r5;

        if r3 == null goto label2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r6 = r3[i1];

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    private java.lang.SecurityException invalidDigest(java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1, r2, r3, $r11;
        java.lang.SecurityException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: java.util.jar.JarVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = new java.lang.SecurityException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has invalid digest for ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.SecurityException: void <init>(java.lang.String)>($r11);

        throw $r4;
    }

    private boolean verify(java.util.jar.Attributes, java.lang.String, byte[], int, int, boolean, boolean)
    {
        java.util.jar.JarVerifier r0;
        java.util.jar.Attributes r1;
        java.lang.String r2, r4, r5, $r12;
        byte[] r3, $r14, $r15, $r17;
        int i0, i1, i2, $i3, $i4, $i6, $i8, $i9, $i10;
        boolean z0, z1;
        java.security.MessageDigest r7;
        java.lang.String[] $r8, $r9;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.nio.charset.Charset $r16;
        byte $b5, $b7;
        java.security.NoSuchAlgorithmException $r18;

        r0 := @this: java.util.jar.JarVerifier;

        r1 := @parameter0: java.util.jar.Attributes;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        i2 = 0;

     label1:
        $r8 = <java.util.jar.JarVerifier: java.lang.String[] DIGEST_ALGORITHMS>;

        $i3 = lengthof $r8;

        if i2 >= $i3 goto label6;

        $r9 = <java.util.jar.JarVerifier: java.lang.String[] DIGEST_ALGORITHMS>;

        r4 = $r9[i2];

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = virtualinvoke r1.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>($r12);

        if r5 != null goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r4);

     label4:
        if z0 == 0 goto label8;

        $i6 = i1 - 1;

        $b5 = r3[$i6];

        if $b5 != 10 goto label8;

        $i8 = i1 - 2;

        $b7 = r3[$i8];

        if $b7 != 10 goto label8;

        $i9 = i1 - 1;

        $i10 = $i9 - i0;

        virtualinvoke r7.<java.security.MessageDigest: void update(byte[],int,int)>(r3, i0, $i10);

     label5:
        $r14 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest()>();

        $r16 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>;

        $r15 = virtualinvoke r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r16);

        $r17 = staticinvoke <libcore.io.Base64: byte[] decode(byte[])>($r15);

        z1 = staticinvoke <java.security.MessageDigest: boolean isEqual(byte[],byte[])>($r14, $r17);

     label6:
        return z1;

     label7:
        $r18 := @caughtexception;

        goto label2;

     label8:
        $i4 = i1 - i0;

        virtualinvoke r7.<java.security.MessageDigest: void update(byte[],int,int)>(r3, i0, $i4);

        goto label5;

        catch java.security.NoSuchAlgorithmException from label3 to label4 with label7;
    }

    private void verifyCertificate(java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1, r2, r13, r14, $r19, $r42, $r48, $r50, $r51, $r53;
        byte[] r3, r4, r5;
        java.security.cert.Certificate[] r8;
        java.util.jar.Attributes r9, $r30, $r45;
        java.util.HashMap r10, $r22, $r23, $r28, $r29, $r34, $r39;
        java.util.jar.ManifestReader r11, $r35;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Iterator r15;
        java.util.jar.Manifest$Chunk r16;
        java.util.Map$Entry r17;
        java.lang.StringBuilder $r18, $r20, $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object $r24, $r25, $r27, $r33, $r40, $r43, $r46, $r49;
        java.io.ByteArrayInputStream $r26, $r31;
        java.util.jar.Attributes$Name $r32;
        java.util.Hashtable $r37, $r57;
        java.util.Set $r41;
        java.util.jar.Manifest $r44;
        java.lang.SecurityException $r47, $r54, $r56;
        java.security.GeneralSecurityException $r52;
        java.io.IOException $r55, $r59;

        r0 := @this: java.util.jar.JarVerifier;

        r1 := @parameter0: java.lang.String;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        $r19 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".SF");

        r2 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries>;

        $r24 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (byte[]) $r24;

        if r3 != null goto label02;

     label01:
        return;

     label02:
        $r23 = r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries>;

        $r27 = virtualinvoke $r23.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("META-INF/MANIFEST.MF");

        r4 = (byte[]) $r27;

        if r4 == null goto label01;

        $r28 = r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries>;

        $r25 = virtualinvoke $r28.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r5 = (byte[]) $r25;

     label03:
        $r26 = new java.io.ByteArrayInputStream;

        specialinvoke $r26.<java.io.ByteArrayInputStream: void <init>(byte[])>(r3);

        $r31 = new java.io.ByteArrayInputStream;

        specialinvoke $r31.<java.io.ByteArrayInputStream: void <init>(byte[])>(r5);

        r8 = staticinvoke <org.apache.harmony.security.utils.JarUtils: java.security.cert.Certificate[] verifySignature(java.io.InputStream,java.io.InputStream)>($r26, $r31);

        $r29 = r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries>;

        if $r29 == null goto label01;

     label04:
        if r8 == null goto label06;

     label05:
        $r57 = r0.<java.util.jar.JarVerifier: java.util.Hashtable certificates>;

        virtualinvoke $r57.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r8);

     label06:
        $r30 = new java.util.jar.Attributes;

        specialinvoke $r30.<java.util.jar.Attributes: void <init>()>();

        r9 = $r30;

        $r34 = new java.util.HashMap;

        specialinvoke $r34.<java.util.HashMap: void <init>()>();

        r10 = $r34;

     label07:
        $r35 = new java.util.jar.ManifestReader;

        specialinvoke $r35.<java.util.jar.ManifestReader: void <init>(byte[],java.util.jar.Attributes)>(r3, r9);

        r11 = $r35;

        virtualinvoke r11.<java.util.jar.ManifestReader: void readEntries(java.util.Map,java.util.Map)>(r10, null);

     label08:
        $r32 = <java.util.jar.Attributes$Name: java.util.jar.Attributes$Name SIGNATURE_VERSION>;

        $r33 = virtualinvoke r9.<java.util.jar.Attributes: java.lang.Object get(java.lang.Object)>($r32);

        if $r33 == null goto label01;

        r13 = virtualinvoke r9.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>("Created-By");

        z0 = 0;

        if r13 == null goto label09;

        $i6 = virtualinvoke r13.<java.lang.String: int indexOf(java.lang.String)>("signtool");

        if $i6 == -1 goto label13;

        z0 = 1;

     label09:
        $i2 = r0.<java.util.jar.JarVerifier: int mainAttributesEnd>;

        if $i2 <= 0 goto label14;

        if z0 != 0 goto label14;

        $i5 = r0.<java.util.jar.JarVerifier: int mainAttributesEnd>;

        $z3 = specialinvoke r0.<java.util.jar.JarVerifier: boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean)>(r9, "-Digest-Manifest-Main-Attributes", r4, 0, $i5, 0, 1);

        if $z3 != 0 goto label14;

        $r48 = r0.<java.util.jar.JarVerifier: java.lang.String jarName>;

        $r56 = specialinvoke r0.<java.util.jar.JarVerifier: java.lang.SecurityException failedVerification(java.lang.String,java.lang.String)>($r48, r2);

        throw $r56;

     label10:
        $r55 := @caughtexception;

        return;

     label11:
        $r52 := @caughtexception;

        $r53 = r0.<java.util.jar.JarVerifier: java.lang.String jarName>;

        $r54 = specialinvoke r0.<java.util.jar.JarVerifier: java.lang.SecurityException failedVerification(java.lang.String,java.lang.String)>($r53, r2);

        throw $r54;

     label12:
        $r59 := @caughtexception;

        return;

     label13:
        z0 = 0;

        goto label09;

     label14:
        if z0 == 0 goto label17;

        r14 = "-Digest";

     label15:
        $i1 = lengthof r4;

        $z1 = specialinvoke r0.<java.util.jar.JarVerifier: boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean)>(r9, r14, r4, 0, $i1, 0, 0);

        if $z1 != 0 goto label18;

        $r41 = virtualinvoke r10.<java.util.HashMap: java.util.Set entrySet()>();

        r15 = interfaceinvoke $r41.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z2 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r40 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.util.Map$Entry) $r40;

        $r44 = r0.<java.util.jar.JarVerifier: java.util.jar.Manifest man>;

        $r43 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r42 = (java.lang.String) $r43;

        r16 = virtualinvoke $r44.<java.util.jar.Manifest: java.util.jar.Manifest$Chunk getChunk(java.lang.String)>($r42);

        if r16 == null goto label01;

        $r46 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r45 = (java.util.jar.Attributes) $r46;

        $i3 = r16.<java.util.jar.Manifest$Chunk: int start>;

        $i4 = r16.<java.util.jar.Manifest$Chunk: int end>;

        $z4 = specialinvoke r0.<java.util.jar.JarVerifier: boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean)>($r45, "-Digest", r4, $i3, $i4, z0, 0);

        if $z4 != 0 goto label16;

        $r49 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r51 = (java.lang.String) $r49;

        $r50 = r0.<java.util.jar.JarVerifier: java.lang.String jarName>;

        $r47 = specialinvoke r0.<java.util.jar.JarVerifier: java.lang.SecurityException invalidDigest(java.lang.String,java.lang.String,java.lang.String)>(r2, $r51, $r50);

        throw $r47;

     label17:
        r14 = "-Digest-Manifest";

        goto label15;

     label18:
        $r39 = r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries>;

        virtualinvoke $r39.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, null);

        $r37 = r0.<java.util.jar.JarVerifier: java.util.Hashtable signatures>;

        virtualinvoke $r37.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r10);

        return;

        catch java.io.IOException from label03 to label04 with label10;
        catch java.security.GeneralSecurityException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.security.GeneralSecurityException from label05 to label06 with label11;
        catch java.io.IOException from label07 to label08 with label12;
    }

    void addMetaEntry(java.lang.String, byte[])
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1, $r5;
        byte[] r2;
        java.util.Locale $r3;
        java.util.HashMap $r4;

        r0 := @this: java.util.jar.JarVerifier;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r4 = r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries>;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r2);

        return;
    }

    java.security.cert.Certificate[] getCertificates(java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1;
        java.security.cert.Certificate[] r2, $r6;
        java.util.Hashtable $r3;
        java.lang.Object $r4, $r5;

        r0 := @this: java.util.jar.JarVerifier;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<java.util.jar.JarVerifier: java.util.Hashtable verifiedEntries>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.security.cert.Certificate[]) $r4;

        if r2 != null goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (java.security.cert.Certificate[]) $r5;

        return $r6;
    }

    java.util.jar.JarVerifier$VerifierEntry initEntry(java.lang.String)
    {
        java.util.jar.JarVerifier r0;
        java.lang.String r1, r6, r7, $r26, $r36;
        java.util.jar.Attributes r2;
        java.util.ArrayList r3, $r16;
        java.util.Iterator r4;
        java.security.cert.Certificate[] r5, $r18;
        int i0, $i1, $i2, $i3;
        byte[] r8;
        java.util.jar.JarVerifier$VerifierEntry r9, $r29;
        java.util.Map$Entry r11;
        java.util.jar.Manifest $r12, $r14;
        java.util.Hashtable $r13, $r15, $r35;
        java.util.Set $r17;
        boolean $z0, $z1;
        java.lang.String[] $r19, $r21;
        java.lang.Object[] $r20;
        java.lang.StringBuilder $r22, $r23, $r25;
        java.nio.charset.Charset $r24;
        java.security.MessageDigest $r27;
        java.lang.Object $r28, $r30, $r31, $r32;
        java.util.HashMap $r33;
        java.util.Vector $r34;
        java.security.NoSuchAlgorithmException $r37;

        r0 := @this: java.util.jar.JarVerifier;

        r1 := @parameter0: java.lang.String;

        $r12 = r0.<java.util.jar.JarVerifier: java.util.jar.Manifest man>;

        if $r12 == null goto label01;

        $r13 = r0.<java.util.jar.JarVerifier: java.util.Hashtable signatures>;

        $i1 = virtualinvoke $r13.<java.util.Hashtable: int size()>();

        if $i1 != 0 goto label02;

     label01:
        return null;

     label02:
        $r14 = r0.<java.util.jar.JarVerifier: java.util.jar.Manifest man>;

        r2 = virtualinvoke $r14.<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)>(r1);

        if r2 != null goto label03;

        return null;

     label03:
        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        r3 = $r16;

        $r15 = r0.<java.util.jar.JarVerifier: java.util.Hashtable signatures>;

        $r17 = virtualinvoke $r15.<java.util.Hashtable: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r28 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r28;

        $r32 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r33 = (java.util.HashMap) $r32;

        $r30 = virtualinvoke $r33.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r30 == null goto label04;

        $r31 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r36 = (java.lang.String) $r31;

        $r35 = r0.<java.util.jar.JarVerifier: java.util.Hashtable certificates>;

        $r34 = staticinvoke <java.util.jar.JarVerifier: java.util.Vector getSignerCertificates(java.lang.String,java.util.Map)>($r36, $r35);

        virtualinvoke r3.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r34);

        goto label04;

     label05:
        $z0 = virtualinvoke r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label06;

        return null;

     label06:
        $i2 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r18 = newarray (java.security.cert.Certificate)[$i2];

        $r20 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r18);

        r5 = (java.security.cert.Certificate[]) $r20;

        i0 = 0;

     label07:
        $r19 = <java.util.jar.JarVerifier: java.lang.String[] DIGEST_ALGORITHMS>;

        $i3 = lengthof $r19;

        if i0 >= $i3 goto label13;

        $r21 = <java.util.jar.JarVerifier: java.lang.String[] DIGEST_ALGORITHMS>;

        r6 = $r21[i0];

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Digest");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = virtualinvoke r2.<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)>($r26);

        if r7 != null goto label09;

     label08:
        i0 = i0 + 1;

        goto label07;

     label09:
        $r24 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>;

        r8 = virtualinvoke r7.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r24);

     label10:
        $r29 = new java.util.jar.JarVerifier$VerifierEntry;

        $r27 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r6);

        specialinvoke $r29.<java.util.jar.JarVerifier$VerifierEntry: void <init>(java.util.jar.JarVerifier,java.lang.String,java.security.MessageDigest,byte[],java.security.cert.Certificate[])>(r0, r1, $r27, r8, r5);

        r9 = $r29;

     label11:
        return r9;

     label12:
        $r37 := @caughtexception;

        goto label08;

     label13:
        return null;

        catch java.security.NoSuchAlgorithmException from label10 to label11 with label12;
    }

    boolean isSignedJar()
    {
        java.util.jar.JarVerifier r0;
        java.util.Hashtable $r1;
        int $i0;

        r0 := @this: java.util.jar.JarVerifier;

        $r1 = r0.<java.util.jar.JarVerifier: java.util.Hashtable certificates>;

        $i0 = virtualinvoke $r1.<java.util.Hashtable: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean readCertificates()
    {
        java.util.jar.JarVerifier r0;
        java.lang.Throwable r1, $r9;
        java.util.HashMap r2, r5, $r6;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.Set $r7;
        java.lang.Object $r8;

        r0 := @this: java.util.jar.JarVerifier;

        entermonitor r0;

     label01:
        r2 = r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries>;

     label02:
        z0 = 0;

        if r2 != null goto label04;

     label03:
        exitmonitor r0;

        return z0;

     label04:
        $r6 = r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.util.Set keySet()>();

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r8;

        $z2 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".DSA");

        if $z2 != 0 goto label06;

        $z3 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".RSA");

        if $z3 != 0 goto label06;

        $z4 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(".EC");

        if $z4 == 0 goto label05;

     label06:
        specialinvoke r0.<java.util.jar.JarVerifier: void verifyCertificate(java.lang.String)>(r4);

        r5 = r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries>;

     label07:
        z0 = 0;

        if r5 == null goto label03;

     label08:
        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label09:
        goto label05;

     label10:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r0;

        throw r1;

     label11:
        z0 = 1;

        goto label03;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    void removeMetaEntries()
    {
        java.util.jar.JarVerifier r0;

        r0 := @this: java.util.jar.JarVerifier;

        r0.<java.util.jar.JarVerifier: java.util.HashMap metaEntries> = null;

        return;
    }

    void setManifest(java.util.jar.Manifest)
    {
        java.util.jar.JarVerifier r0;
        java.util.jar.Manifest r1;

        r0 := @this: java.util.jar.JarVerifier;

        r1 := @parameter0: java.util.jar.Manifest;

        r0.<java.util.jar.JarVerifier: java.util.jar.Manifest man> = r1;

        return;
    }
}
