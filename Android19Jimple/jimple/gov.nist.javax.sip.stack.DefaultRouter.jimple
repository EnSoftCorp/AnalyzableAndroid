public class gov.nist.javax.sip.stack.DefaultRouter extends java.lang.Object implements javax.sip.address.Router
{
    private javax.sip.address.Hop defaultRoute;
    private gov.nist.javax.sip.SipStackImpl sipStack;

    private void <init>()
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(javax.sip.SipStack, java.lang.String)
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        javax.sip.SipStack r1;
        java.lang.String r2;
        java.lang.IllegalArgumentException r3, $r9;
        gov.nist.javax.sip.SipStackImpl $r4, $r5;
        gov.nist.core.net.AddressResolver $r6;
        gov.nist.javax.sip.stack.HopImpl $r7;
        javax.sip.address.Hop $r8;
        gov.nist.javax.sip.stack.SIPTransactionStack $r10;
        gov.nist.core.StackLogger $r11;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r1 := @parameter0: javax.sip.SipStack;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = (gov.nist.javax.sip.SipStackImpl) r1;

        r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack> = $r4;

        if r2 == null goto label2;

     label1:
        $r5 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.net.AddressResolver getAddressResolver()>();

        $r7 = new gov.nist.javax.sip.stack.HopImpl;

        specialinvoke $r7.<gov.nist.javax.sip.stack.HopImpl: void <init>(java.lang.String)>(r2);

        $r8 = interfaceinvoke $r6.<gov.nist.core.net.AddressResolver: javax.sip.address.Hop resolveAddress(javax.sip.address.Hop)>($r7);

        r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute> = $r8;

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = (gov.nist.javax.sip.stack.SIPTransactionStack) r1;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Invalid default route specification - need host:port/transport");

        throw r3;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private final javax.sip.address.Hop createHop(javax.sip.address.SipURI, javax.sip.message.Request)
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        javax.sip.address.SipURI r1;
        javax.sip.message.Request r2;
        java.lang.String r3, r4, $r5;
        int i0, $i1;
        boolean $z0, $z1;
        gov.nist.javax.sip.SipStackImpl $r6;
        gov.nist.core.net.AddressResolver $r7;
        gov.nist.javax.sip.stack.HopImpl $r8;
        javax.sip.address.Hop $r9;
        javax.sip.header.ViaHeader $r10;
        javax.sip.header.Header $r11;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r1 := @parameter0: javax.sip.address.SipURI;

        r2 := @parameter1: javax.sip.message.Request;

        $z0 = interfaceinvoke r1.<javax.sip.address.SipURI: boolean isSecure()>();

        if $z0 == 0 goto label5;

        r3 = "tls";

     label1:
        if r3 != null goto label2;

        $r11 = interfaceinvoke r2.<javax.sip.message.Request: javax.sip.header.Header getHeader(java.lang.String)>("Via");

        $r10 = (javax.sip.header.ViaHeader) $r11;

        r3 = interfaceinvoke $r10.<javax.sip.header.ViaHeader: java.lang.String getTransport()>();

     label2:
        $i1 = interfaceinvoke r1.<javax.sip.address.SipURI: int getPort()>();

        if $i1 == -1 goto label6;

        i0 = interfaceinvoke r1.<javax.sip.address.SipURI: int getPort()>();

     label3:
        $r5 = interfaceinvoke r1.<javax.sip.address.SipURI: java.lang.String getMAddrParam()>();

        if $r5 == null goto label8;

        r4 = interfaceinvoke r1.<javax.sip.address.SipURI: java.lang.String getMAddrParam()>();

     label4:
        $r6 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.net.AddressResolver getAddressResolver()>();

        $r8 = new gov.nist.javax.sip.stack.HopImpl;

        specialinvoke $r8.<gov.nist.javax.sip.stack.HopImpl: void <init>(java.lang.String,int,java.lang.String)>(r4, i0, r3);

        $r9 = interfaceinvoke $r7.<gov.nist.core.net.AddressResolver: javax.sip.address.Hop resolveAddress(javax.sip.address.Hop)>($r8);

        return $r9;

     label5:
        r3 = interfaceinvoke r1.<javax.sip.address.SipURI: java.lang.String getTransportParam()>();

        goto label1;

     label6:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("tls");

        if $z1 == 0 goto label7;

        i0 = 5061;

        goto label3;

     label7:
        i0 = 5060;

        goto label3;

     label8:
        r4 = interfaceinvoke r1.<javax.sip.address.SipURI: java.lang.String getHost()>();

        goto label4;
    }

    public void fixStrictRouting(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.javax.sip.header.RouteList r2;
        gov.nist.javax.sip.address.SipUri r3;
        gov.nist.javax.sip.address.AddressImpl r4, $r9;
        javax.sip.header.Header $r5;
        gov.nist.javax.sip.header.Route $r6, $r11;
        javax.sip.address.Address $r7;
        javax.sip.address.URI $r8, $r10;
        gov.nist.javax.sip.SipStackImpl $r12, $r14;
        boolean $z1;
        gov.nist.core.StackLogger $r13;
        java.lang.StringBuilder $r15, $r16, $r18;
        java.lang.String $r17;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        $r5 = virtualinvoke r2.<gov.nist.javax.sip.header.RouteList: javax.sip.header.Header getFirst()>();

        $r6 = (gov.nist.javax.sip.header.Route) $r5;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $r8 = interfaceinvoke $r7.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r3 = (gov.nist.javax.sip.address.SipUri) $r8;

        virtualinvoke r2.<gov.nist.javax.sip.header.RouteList: void removeFirst()>();

        $r9 = new gov.nist.javax.sip.address.AddressImpl;

        specialinvoke $r9.<gov.nist.javax.sip.address.AddressImpl: void <init>()>();

        r4 = $r9;

        $r10 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()>();

        virtualinvoke r4.<gov.nist.javax.sip.address.AddressImpl: void setAddess(javax.sip.address.URI)>($r10);

        $r11 = new gov.nist.javax.sip.header.Route;

        specialinvoke $r11.<gov.nist.javax.sip.header.Route: void <init>(gov.nist.javax.sip.address.AddressImpl)>(r4);

        virtualinvoke r2.<gov.nist.javax.sip.header.RouteList: boolean add(gov.nist.javax.sip.header.SIPHeader)>($r11);

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: void setRequestURI(javax.sip.address.URI)>(r3);

        $r12 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r12.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r14 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r13 = virtualinvoke $r14.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("post: fixStrictRouting");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r17);

     label1:
        return;
    }

    public javax.sip.address.Hop getNextHop(javax.sip.message.Request) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        javax.sip.message.Request r1;
        gov.nist.javax.sip.message.SIPRequest r2;
        gov.nist.javax.sip.header.RequestLine r3;
        gov.nist.javax.sip.address.GenericURI r4;
        gov.nist.javax.sip.header.RouteList r5;
        javax.sip.address.Hop r6, $r9, $r23, $r32;
        javax.sip.address.URI r7;
        javax.sip.address.SipURI r8, $r12, $r34, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        gov.nist.javax.sip.SipStackImpl $r10, $r13, $r15, $r16, $r18, $r25, $r28, $r38, $r39, $r53, $r54, $r58, $r59;
        gov.nist.core.StackLogger $r11, $r14, $r17, $r29, $r37, $r49, $r55;
        java.lang.StringBuilder $r19, $r20, $r21, $r26, $r27, $r30, $r40, $r42, $r43, $r50, $r51, $r52;
        java.lang.String $r22, $r24, $r31, $r33, $r36, $r41, $r47, $r57;
        javax.sip.address.Address $r44;
        gov.nist.javax.sip.header.Route $r45;
        javax.sip.header.Header $r46;
        javax.sip.SipException $r48;
        java.lang.IllegalArgumentException $r56;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r1 := @parameter0: javax.sip.message.Request;

        r2 = (gov.nist.javax.sip.message.SIPRequest) r1;

        r3 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine getRequestLine()>();

        if r3 != null goto label02;

        r6 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

     label01:
        return r6;

     label02:
        r4 = virtualinvoke r3.<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()>();

        if r4 != null goto label03;

        $r56 = new java.lang.IllegalArgumentException;

        specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad message: Null requestURI");

        throw $r56;

     label03:
        r5 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        if r5 == null goto label06;

        $r46 = virtualinvoke r5.<gov.nist.javax.sip.header.RouteList: javax.sip.header.Header getFirst()>();

        $r45 = (gov.nist.javax.sip.header.Route) $r46;

        $r44 = virtualinvoke $r45.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        r7 = interfaceinvoke $r44.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $z7 = interfaceinvoke r7.<javax.sip.address.URI: boolean isSipURI()>();

        if $z7 == 0 goto label05;

        r8 = (javax.sip.address.SipURI) r7;

        $z6 = interfaceinvoke r8.<javax.sip.address.SipURI: boolean hasLrParam()>();

        if $z6 != 0 goto label04;

        virtualinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: void fixStrictRouting(gov.nist.javax.sip.message.SIPRequest)>(r2);

        $r58 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z9 = virtualinvoke $r58.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label04;

        $r59 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r55 = virtualinvoke $r59.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r55.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Route post processing fixed strict routing");

     label04:
        r6 = specialinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop createHop(javax.sip.address.SipURI,javax.sip.message.Request)>(r8, r1);

        $r53 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z8 = virtualinvoke $r53.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label01;

        $r54 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r49 = virtualinvoke $r54.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NextHop based on Route:");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r57 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r49.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r57);

        return r6;

     label05:
        $r48 = new javax.sip.SipException;

        specialinvoke $r48.<javax.sip.SipException: void <init>(java.lang.String)>("First Route not a SIP URI");

        throw $r48;

     label06:
        $z0 = interfaceinvoke r4.<javax.sip.address.URI: boolean isSipURI()>();

        if $z0 == 0 goto label07;

        $r35 = (javax.sip.address.SipURI) r4;

        $r36 = interfaceinvoke $r35.<javax.sip.address.SipURI: java.lang.String getMAddrParam()>();

        if $r36 == null goto label07;

        $r34 = (javax.sip.address.SipURI) r4;

        r6 = specialinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop createHop(javax.sip.address.SipURI,javax.sip.message.Request)>($r34, r1);

        $r39 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z5 = virtualinvoke $r39.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label01;

        $r38 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r37 = virtualinvoke $r38.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using request URI maddr to route the request = ");

        $r41 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r47);

        return r6;

     label07:
        $r9 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

        if $r9 == null goto label09;

        $r25 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z4 = virtualinvoke $r25.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label08;

        $r28 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r29 = virtualinvoke $r28.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using outbound proxy to route the request = ");

        $r32 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

        $r33 = virtualinvoke $r32.<java.lang.Object: java.lang.String toString()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r29.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r31);

     label08:
        $r23 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

        return $r23;

     label09:
        $z1 = interfaceinvoke r4.<javax.sip.address.URI: boolean isSipURI()>();

        if $z1 == 0 goto label11;

        $r12 = (javax.sip.address.SipURI) r4;

        r6 = specialinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop createHop(javax.sip.address.SipURI,javax.sip.message.Request)>($r12, r1);

        if r6 == null goto label10;

        $r16 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z3 = virtualinvoke $r16.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label10;

        $r18 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r17 = virtualinvoke $r18.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Used request-URI for nextHop = ");

        $r22 = virtualinvoke r6.<java.lang.Object: java.lang.String toString()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r24);

        return r6;

     label10:
        $r13 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z2 = virtualinvoke $r13.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label01;

        $r15 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r14 = virtualinvoke $r15.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("returning null hop -- loop detected");

        return r6;

     label11:
        $r10 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.String,gov.nist.core.StackLogger)>("Unexpected non-sip URI", $r11);

        return null;
    }

    public java.util.ListIterator getNextHops(javax.sip.message.Request)
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        javax.sip.message.Request r1;
        java.util.LinkedList r2, $r5;
        java.util.ListIterator r4;
        javax.sip.address.Hop $r6;
        javax.sip.SipException $r7;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r1 := @parameter0: javax.sip.message.Request;

     label1:
        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r2 = $r5;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getNextHop(javax.sip.message.Request)>(r1);

        virtualinvoke r2.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);

        r4 = virtualinvoke r2.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label2:
        return r4;

     label3:
        $r7 := @caughtexception;

        return null;

        catch javax.sip.SipException from label1 to label2 with label3;
    }

    public javax.sip.address.Hop getOutboundProxy()
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        javax.sip.address.Hop $r1;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        $r1 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

        return $r1;
    }
}
