class libcore.io.IoUtils$FileReader extends java.lang.Object
{
    private byte[] bytes;
    private int count;
    private java.io.FileDescriptor fd;
    private boolean unknownLength;

    public void <init>(java.lang.String) throws java.io.IOException
    {
        libcore.io.IoUtils$FileReader r0;
        java.lang.String r1;
        java.io.FileNotFoundException r2, $r9;
        libcore.io.ErrnoException r3, $r10;
        int i0, $i1;
        java.io.FileDescriptor $r4, $r5, $r11;
        libcore.io.Os $r6;
        libcore.io.StructStat $r7;
        long $l2;
        byte[] $r8;
        java.io.IOException $r12;

        r0 := @this: libcore.io.IoUtils$FileReader;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $i1 = <libcore.io.OsConstants: int O_RDONLY>;

        $r4 = staticinvoke <libcore.io.IoBridge: java.io.FileDescriptor open(java.lang.String,int)>(r1, $i1);

        r0.<libcore.io.IoUtils$FileReader: java.io.FileDescriptor fd> = $r4;

     label2:
        $r6 = <libcore.io.Libcore: libcore.io.Os os>;

        $r5 = r0.<libcore.io.IoUtils$FileReader: java.io.FileDescriptor fd>;

        $r7 = interfaceinvoke $r6.<libcore.io.Os: libcore.io.StructStat fstat(java.io.FileDescriptor)>($r5);

        $l2 = $r7.<libcore.io.StructStat: long st_size>;

        i0 = (int) $l2;

     label3:
        if i0 != 0 goto label6;

     label4:
        r0.<libcore.io.IoUtils$FileReader: boolean unknownLength> = 1;

     label5:
        i0 = 8192;

     label6:
        $r8 = newarray (byte)[i0];

        r0.<libcore.io.IoUtils$FileReader: byte[] bytes> = $r8;

        return;

     label7:
        $r9 := @caughtexception;

        r2 = $r9;

        throw r2;

     label8:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = r0.<libcore.io.IoUtils$FileReader: java.io.FileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r11);

        $r12 = virtualinvoke r3.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r12;

        catch java.io.FileNotFoundException from label1 to label2 with label7;
        catch libcore.io.ErrnoException from label2 to label3 with label8;
        catch libcore.io.ErrnoException from label4 to label5 with label8;
    }

    public libcore.io.IoUtils$FileReader readFully() throws java.io.IOException
    {
        libcore.io.IoUtils$FileReader r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Throwable r1, $r9;
        libcore.io.ErrnoException r2, $r11;
        byte[] r3, $r4, $r5, $r10;
        java.io.FileDescriptor $r6, $r8, $r12;
        libcore.io.Os $r7;
        boolean $z0;
        java.io.IOException $r13;

        r0 := @this: libcore.io.IoUtils$FileReader;

        $r4 = r0.<libcore.io.IoUtils$FileReader: byte[] bytes>;

        i0 = lengthof $r4;

     label01:
        $r7 = <libcore.io.Libcore: libcore.io.Os os>;

        $r6 = r0.<libcore.io.IoUtils$FileReader: java.io.FileDescriptor fd>;

        $r5 = r0.<libcore.io.IoUtils$FileReader: byte[] bytes>;

        $i5 = r0.<libcore.io.IoUtils$FileReader: int count>;

        $i3 = r0.<libcore.io.IoUtils$FileReader: int count>;

        $i4 = i0 - $i3;

        i1 = interfaceinvoke $r7.<libcore.io.Os: int read(java.io.FileDescriptor,byte[],int,int)>($r6, $r5, $i5, $i4);

     label02:
        if i1 == 0 goto label10;

     label03:
        $i7 = r0.<libcore.io.IoUtils$FileReader: int count>;

        $i6 = i1 + $i7;

        r0.<libcore.io.IoUtils$FileReader: int count> = $i6;

        $i8 = r0.<libcore.io.IoUtils$FileReader: int count>;

        if $i8 != i0 goto label01;

        $z0 = r0.<libcore.io.IoUtils$FileReader: boolean unknownLength>;

        if $z0 == 0 goto label10;

     label04:
        i2 = i0 * 2;

     label05:
        r3 = newarray (byte)[i2];

        $r10 = r0.<libcore.io.IoUtils$FileReader: byte[] bytes>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, r3, 0, i0);

        r0.<libcore.io.IoUtils$FileReader: byte[] bytes> = r3;

     label06:
        i0 = i2;

        goto label01;

     label07:
        $r11 := @caughtexception;

        r2 = $r11;

     label08:
        $r13 = virtualinvoke r2.<libcore.io.ErrnoException: java.io.IOException rethrowAsIOException()>();

        throw $r13;

     label09:
        $r9 := @caughtexception;

        r1 = $r9;

        $r12 = r0.<libcore.io.IoUtils$FileReader: java.io.FileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r12);

        throw r1;

     label10:
        $r8 = r0.<libcore.io.IoUtils$FileReader: java.io.FileDescriptor fd>;

        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.io.FileDescriptor)>($r8);

        return r0;

        catch libcore.io.ErrnoException from label01 to label02 with label07;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch libcore.io.ErrnoException from label03 to label04 with label07;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch libcore.io.ErrnoException from label05 to label06 with label07;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
    }

    public byte[] toByteArray()
    {
        libcore.io.IoUtils$FileReader r0;
        byte[] r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: libcore.io.IoUtils$FileReader;

        $i1 = r0.<libcore.io.IoUtils$FileReader: int count>;

        $r2 = r0.<libcore.io.IoUtils$FileReader: byte[] bytes>;

        $i0 = lengthof $r2;

        if $i1 != $i0 goto label1;

        $r4 = r0.<libcore.io.IoUtils$FileReader: byte[] bytes>;

        return $r4;

     label1:
        $i2 = r0.<libcore.io.IoUtils$FileReader: int count>;

        r1 = newarray (byte)[$i2];

        $r3 = r0.<libcore.io.IoUtils$FileReader: byte[] bytes>;

        $i3 = r0.<libcore.io.IoUtils$FileReader: int count>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i3);

        return r1;
    }

    public java.lang.String toString(java.nio.charset.Charset)
    {
        libcore.io.IoUtils$FileReader r0;
        java.nio.charset.Charset r1;
        java.lang.String $r2;
        int $i0;
        byte[] $r3;

        r0 := @this: libcore.io.IoUtils$FileReader;

        r1 := @parameter0: java.nio.charset.Charset;

        $r2 = new java.lang.String;

        $r3 = r0.<libcore.io.IoUtils$FileReader: byte[] bytes>;

        $i0 = r0.<libcore.io.IoUtils$FileReader: int count>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r3, 0, $i0, r1);

        return $r2;
    }
}
