public class android.filterpacks.performance.Throughput extends java.lang.Object
{
    private final int mPeriodFrames;
    private final int mPeriodTime;
    private final int mPixels;
    private final int mTotalFrames;

    public void <init>(int, int, int, int)
    {
        android.filterpacks.performance.Throughput r0;
        int i0, i1, i2, i3;

        r0 := @this: android.filterpacks.performance.Throughput;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.filterpacks.performance.Throughput: int mTotalFrames> = i0;

        r0.<android.filterpacks.performance.Throughput: int mPeriodFrames> = i1;

        r0.<android.filterpacks.performance.Throughput: int mPeriodTime> = i2;

        r0.<android.filterpacks.performance.Throughput: int mPixels> = i3;

        return;
    }

    public float getFramesPerSecond()
    {
        android.filterpacks.performance.Throughput r0;
        int $i0, $i1;
        float $f0, $f1, $f2;

        r0 := @this: android.filterpacks.performance.Throughput;

        $i0 = r0.<android.filterpacks.performance.Throughput: int mPeriodFrames>;

        $f1 = (float) $i0;

        $i1 = r0.<android.filterpacks.performance.Throughput: int mPeriodTime>;

        $f0 = (float) $i1;

        $f2 = $f1 / $f0;

        return $f2;
    }

    public float getNanosPerPixel()
    {
        android.filterpacks.performance.Throughput r0;
        int $i0, $i1, $i2;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        float $f0;

        r0 := @this: android.filterpacks.performance.Throughput;

        $i0 = r0.<android.filterpacks.performance.Throughput: int mPeriodTime>;

        $d1 = (double) $i0;

        $i1 = r0.<android.filterpacks.performance.Throughput: int mPeriodFrames>;

        $d0 = (double) $i1;

        $d2 = $d1 / $d0;

        $d4 = 1000000.0 * $d2;

        $i2 = r0.<android.filterpacks.performance.Throughput: int mPixels>;

        $d3 = (double) $i2;

        $d5 = $d4 / $d3;

        $f0 = (float) $d5;

        return $f0;
    }

    public int getPeriodFrameCount()
    {
        android.filterpacks.performance.Throughput r0;
        int $i0;

        r0 := @this: android.filterpacks.performance.Throughput;

        $i0 = r0.<android.filterpacks.performance.Throughput: int mPeriodFrames>;

        return $i0;
    }

    public int getPeriodTime()
    {
        android.filterpacks.performance.Throughput r0;
        int $i0;

        r0 := @this: android.filterpacks.performance.Throughput;

        $i0 = r0.<android.filterpacks.performance.Throughput: int mPeriodTime>;

        return $i0;
    }

    public int getTotalFrameCount()
    {
        android.filterpacks.performance.Throughput r0;
        int $i0;

        r0 := @this: android.filterpacks.performance.Throughput;

        $i0 = r0.<android.filterpacks.performance.Throughput: int mTotalFrames>;

        return $i0;
    }

    public java.lang.String toString()
    {
        android.filterpacks.performance.Throughput r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        float $f0;
        java.lang.String $r4;

        r0 := @this: android.filterpacks.performance.Throughput;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $f0 = virtualinvoke r0.<android.filterpacks.performance.Throughput: float getFramesPerSecond()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FPS");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
