class android.webkit.WebViewFactory$Preloader extends java.lang.Object
{
    static android.webkit.WebViewFactoryProvider sPreloadedProvider;

    static void <clinit>()
    {
        java.lang.Exception r0, $r4;
        java.lang.Class $r1;
        java.lang.Object $r2;
        android.webkit.WebViewFactoryProvider $r3;

     label1:
        $r1 = staticinvoke <android.webkit.WebViewFactory: java.lang.Class access$000()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (android.webkit.WebViewFactoryProvider) $r2;

        <android.webkit.WebViewFactory$Preloader: android.webkit.WebViewFactoryProvider sPreloadedProvider> = $r3;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        r0 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WebViewFactory", "error preloading provider", r0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void <init>()
    {
        android.webkit.WebViewFactory$Preloader r0;

        r0 := @this: android.webkit.WebViewFactory$Preloader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
