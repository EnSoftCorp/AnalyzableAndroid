public interface  android.os.INetworkManagementService extends java.lang.Object implements android.os.IInterface
{

    public abstract void addIdleTimer(java.lang.String, int, java.lang.String) throws android.os.RemoteException;

    public abstract void addRoute(java.lang.String, android.net.RouteInfo) throws android.os.RemoteException;

    public abstract void addSecondaryRoute(java.lang.String, android.net.RouteInfo) throws android.os.RemoteException;

    public abstract void attachPppd(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void clearDnsInterfaceForPid(int) throws android.os.RemoteException;

    public abstract void clearDnsInterfaceForUidRange(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract void clearDnsInterfaceMaps() throws android.os.RemoteException;

    public abstract void clearHostExemption(android.net.LinkAddress) throws android.os.RemoteException;

    public abstract void clearInterfaceAddresses(java.lang.String) throws android.os.RemoteException;

    public abstract void clearMarkedForwarding(java.lang.String) throws android.os.RemoteException;

    public abstract void clearMarkedForwardingRoute(java.lang.String, android.net.RouteInfo) throws android.os.RemoteException;

    public abstract void clearUidRangeRoute(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract void detachPppd(java.lang.String) throws android.os.RemoteException;

    public abstract void disableIpv6(java.lang.String) throws android.os.RemoteException;

    public abstract void disableNat(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void enableIpv6(java.lang.String) throws android.os.RemoteException;

    public abstract void enableNat(java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void flushDefaultDnsCache() throws android.os.RemoteException;

    public abstract void flushInterfaceDnsCache(java.lang.String) throws android.os.RemoteException;

    public abstract java.lang.String[] getDnsForwarders() throws android.os.RemoteException;

    public abstract android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String) throws android.os.RemoteException;

    public abstract boolean getIpForwardingEnabled() throws android.os.RemoteException;

    public abstract int getMarkForProtect() throws android.os.RemoteException;

    public abstract int getMarkForUid(int) throws android.os.RemoteException;

    public abstract android.net.NetworkStats getNetworkStatsDetail() throws android.os.RemoteException;

    public abstract android.net.NetworkStats getNetworkStatsSummaryDev() throws android.os.RemoteException;

    public abstract android.net.NetworkStats getNetworkStatsSummaryXt() throws android.os.RemoteException;

    public abstract android.net.NetworkStats getNetworkStatsTethering() throws android.os.RemoteException;

    public abstract android.net.NetworkStats getNetworkStatsUidDetail(int) throws android.os.RemoteException;

    public abstract android.net.RouteInfo[] getRoutes(java.lang.String) throws android.os.RemoteException;

    public abstract boolean isBandwidthControlEnabled() throws android.os.RemoteException;

    public abstract boolean isClatdStarted() throws android.os.RemoteException;

    public abstract boolean isFirewallEnabled() throws android.os.RemoteException;

    public abstract boolean isTetheringStarted() throws android.os.RemoteException;

    public abstract java.lang.String[] listInterfaces() throws android.os.RemoteException;

    public abstract java.lang.String[] listTetheredInterfaces() throws android.os.RemoteException;

    public abstract java.lang.String[] listTtys() throws android.os.RemoteException;

    public abstract void registerObserver(android.net.INetworkManagementEventObserver) throws android.os.RemoteException;

    public abstract void removeIdleTimer(java.lang.String) throws android.os.RemoteException;

    public abstract void removeInterfaceAlert(java.lang.String) throws android.os.RemoteException;

    public abstract void removeInterfaceQuota(java.lang.String) throws android.os.RemoteException;

    public abstract void removeRoute(java.lang.String, android.net.RouteInfo) throws android.os.RemoteException;

    public abstract void removeSecondaryRoute(java.lang.String, android.net.RouteInfo) throws android.os.RemoteException;

    public abstract void setAccessPoint(android.net.wifi.WifiConfiguration, java.lang.String) throws android.os.RemoteException;

    public abstract void setDefaultInterfaceForDns(java.lang.String) throws android.os.RemoteException;

    public abstract void setDnsForwarders(java.lang.String[]) throws android.os.RemoteException;

    public abstract void setDnsInterfaceForPid(java.lang.String, int) throws android.os.RemoteException;

    public abstract void setDnsInterfaceForUidRange(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract void setDnsServersForInterface(java.lang.String, java.lang.String[], java.lang.String) throws android.os.RemoteException;

    public abstract void setFirewallEgressDestRule(java.lang.String, int, boolean) throws android.os.RemoteException;

    public abstract void setFirewallEgressSourceRule(java.lang.String, boolean) throws android.os.RemoteException;

    public abstract void setFirewallEnabled(boolean) throws android.os.RemoteException;

    public abstract void setFirewallInterfaceRule(java.lang.String, boolean) throws android.os.RemoteException;

    public abstract void setFirewallUidRule(int, boolean) throws android.os.RemoteException;

    public abstract void setGlobalAlert(long) throws android.os.RemoteException;

    public abstract void setHostExemption(android.net.LinkAddress) throws android.os.RemoteException;

    public abstract void setInterfaceAlert(java.lang.String, long) throws android.os.RemoteException;

    public abstract void setInterfaceConfig(java.lang.String, android.net.InterfaceConfiguration) throws android.os.RemoteException;

    public abstract void setInterfaceDown(java.lang.String) throws android.os.RemoteException;

    public abstract void setInterfaceIpv6PrivacyExtensions(java.lang.String, boolean) throws android.os.RemoteException;

    public abstract void setInterfaceQuota(java.lang.String, long) throws android.os.RemoteException;

    public abstract void setInterfaceUp(java.lang.String) throws android.os.RemoteException;

    public abstract void setIpForwardingEnabled(boolean) throws android.os.RemoteException;

    public abstract void setMarkedForwarding(java.lang.String) throws android.os.RemoteException;

    public abstract void setMarkedForwardingRoute(java.lang.String, android.net.RouteInfo) throws android.os.RemoteException;

    public abstract void setMtu(java.lang.String, int) throws android.os.RemoteException;

    public abstract void setUidNetworkRules(int, boolean) throws android.os.RemoteException;

    public abstract void setUidRangeRoute(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract void shutdown() throws android.os.RemoteException;

    public abstract void startAccessPoint(android.net.wifi.WifiConfiguration, java.lang.String) throws android.os.RemoteException;

    public abstract void startClatd(java.lang.String) throws android.os.RemoteException;

    public abstract void startTethering(java.lang.String[]) throws android.os.RemoteException;

    public abstract void stopAccessPoint(java.lang.String) throws android.os.RemoteException;

    public abstract void stopClatd() throws android.os.RemoteException;

    public abstract void stopTethering() throws android.os.RemoteException;

    public abstract void tetherInterface(java.lang.String) throws android.os.RemoteException;

    public abstract void unregisterObserver(android.net.INetworkManagementEventObserver) throws android.os.RemoteException;

    public abstract void untetherInterface(java.lang.String) throws android.os.RemoteException;

    public abstract void wifiFirmwareReload(java.lang.String, java.lang.String) throws android.os.RemoteException;
}
