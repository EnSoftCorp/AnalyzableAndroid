class com.android.server.RandomBlock extends java.lang.Object
{
    private static final int BLOCK_SIZE;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private byte[] block;

    private void <init>()
    {
        com.android.server.RandomBlock r0;
        byte[] $r1;

        r0 := @this: com.android.server.RandomBlock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[4096];

        r0.<com.android.server.RandomBlock: byte[] block> = $r1;

        return;
    }

    private static void close(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.io.IOException r1, $r2;

        r0 := @parameter0: java.io.Closeable;

        if r0 != null goto label1;

        return;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("RandomBlock", "IOException thrown while closing Closeable", r1);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static com.android.server.RandomBlock fromFile(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        java.io.FileInputStream r1, r2, $r5;
        java.lang.Throwable r3, $r6, $r7;
        com.android.server.RandomBlock r4;

        r0 := @parameter0: java.lang.String;

        r1 = null;

     label1:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);

        r2 = $r5;

     label2:
        r4 = staticinvoke <com.android.server.RandomBlock: com.android.server.RandomBlock fromStream(java.io.InputStream)>(r2);

     label3:
        staticinvoke <com.android.server.RandomBlock: void close(java.io.Closeable)>(r2);

        return r4;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

     label5:
        staticinvoke <com.android.server.RandomBlock: void close(java.io.Closeable)>(r1);

        throw r3;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        r1 = r2;

        goto label5;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
    }

    private static com.android.server.RandomBlock fromStream(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        com.android.server.RandomBlock r1, $r2;
        int i0, i1, $i2;
        byte[] $r3;
        java.io.EOFException $r4;

        r0 := @parameter0: java.io.InputStream;

        $r2 = new com.android.server.RandomBlock;

        specialinvoke $r2.<com.android.server.RandomBlock: void <init>()>();

        r1 = $r2;

        i0 = 0;

     label1:
        if i0 >= 4096 goto label3;

        $r3 = r1.<com.android.server.RandomBlock: byte[] block>;

        $i2 = 4096 - i0;

        i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>($r3, i0, $i2);

        if i1 != -1 goto label2;

        $r4 = new java.io.EOFException;

        specialinvoke $r4.<java.io.EOFException: void <init>()>();

        throw $r4;

     label2:
        i0 = i0 + i1;

        goto label1;

     label3:
        return r1;
    }

    private void toDataOut(java.io.DataOutput) throws java.io.IOException
    {
        com.android.server.RandomBlock r0;
        java.io.DataOutput r1;
        byte[] $r2;

        r0 := @this: com.android.server.RandomBlock;

        r1 := @parameter0: java.io.DataOutput;

        $r2 = r0.<com.android.server.RandomBlock: byte[] block>;

        interfaceinvoke r1.<java.io.DataOutput: void write(byte[])>($r2);

        return;
    }

    private static void truncateIfPossible(java.io.RandomAccessFile)
    {
        java.io.RandomAccessFile r0;
        java.io.IOException $r2;

        r0 := @parameter0: java.io.RandomAccessFile;

     label1:
        virtualinvoke r0.<java.io.RandomAccessFile: void setLength(long)>(4096L);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void toFile(java.lang.String, boolean) throws java.io.IOException
    {
        com.android.server.RandomBlock r0;
        java.lang.String r1, r3;
        boolean z0;
        java.io.RandomAccessFile r2, r4, $r6;
        java.lang.Throwable r5, $r7, $r8;

        r0 := @this: com.android.server.RandomBlock;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = null;

        if z0 == 0 goto label4;

        r3 = "rws";

     label1:
        $r6 = new java.io.RandomAccessFile;

        specialinvoke $r6.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r1, r3);

        r4 = $r6;

     label2:
        specialinvoke r0.<com.android.server.RandomBlock: void toDataOut(java.io.DataOutput)>(r4);

        staticinvoke <com.android.server.RandomBlock: void truncateIfPossible(java.io.RandomAccessFile)>(r4);

     label3:
        staticinvoke <com.android.server.RandomBlock: void close(java.io.Closeable)>(r4);

        return;

     label4:
        r3 = "rw";

        goto label1;

     label5:
        $r7 := @caughtexception;

        r5 = $r7;

     label6:
        staticinvoke <com.android.server.RandomBlock: void close(java.io.Closeable)>(r2);

        throw r5;

     label7:
        $r8 := @caughtexception;

        r5 = $r8;

        r2 = r4;

        goto label6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label7;
    }

    public static void <clinit>()
    {
        <com.android.server.RandomBlock: java.lang.String TAG> = "RandomBlock";

        <com.android.server.RandomBlock: boolean DEBUG> = 0;

        <com.android.server.RandomBlock: int BLOCK_SIZE> = 4096;

        return;
    }
}
