public class com.android.org.bouncycastle.math.ec.ECAlgorithms extends java.lang.Object
{

    public void <init>()
    {
        com.android.org.bouncycastle.math.ec.ECAlgorithms r0;

        r0 := @this: com.android.org.bouncycastle.math.ec.ECAlgorithms;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static com.android.org.bouncycastle.math.ec.ECPoint implShamirsTrick(com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        com.android.org.bouncycastle.math.ec.ECPoint r0, r2, r4, r5;
        java.math.BigInteger r1, r3;
        int i0, i1, $i2, $i3;
        com.android.org.bouncycastle.math.ec.ECCurve $r6;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: com.android.org.bouncycastle.math.ec.ECPoint;

        r3 := @parameter3: java.math.BigInteger;

        $i2 = virtualinvoke r1.<java.math.BigInteger: int bitLength()>();

        $i3 = virtualinvoke r3.<java.math.BigInteger: int bitLength()>();

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        r4 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>(r2);

        $r6 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        r5 = virtualinvoke $r6.<com.android.org.bouncycastle.math.ec.ECCurve: com.android.org.bouncycastle.math.ec.ECPoint getInfinity()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label5;

        r5 = virtualinvoke r5.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint twice()>();

        $z0 = virtualinvoke r1.<java.math.BigInteger: boolean testBit(int)>(i1);

        if $z0 == 0 goto label4;

        $z2 = virtualinvoke r3.<java.math.BigInteger: boolean testBit(int)>(i1);

        if $z2 == 0 goto label3;

        r5 = virtualinvoke r5.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>(r4);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        r5 = virtualinvoke r5.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>(r0);

        goto label2;

     label4:
        $z1 = virtualinvoke r3.<java.math.BigInteger: boolean testBit(int)>(i1);

        if $z1 == 0 goto label2;

        r5 = virtualinvoke r5.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>(r2);

        goto label2;

     label5:
        return r5;
    }

    public static com.android.org.bouncycastle.math.ec.ECPoint shamirsTrick(com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        com.android.org.bouncycastle.math.ec.ECPoint r0, r2, $r6;
        java.math.BigInteger r1, r3;
        com.android.org.bouncycastle.math.ec.ECCurve $r4, $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: com.android.org.bouncycastle.math.ec.ECPoint;

        r3 := @parameter3: java.math.BigInteger;

        $r4 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r5 = virtualinvoke r2.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("P and Q must be on same curve");

        throw $r7;

     label1:
        $r6 = staticinvoke <com.android.org.bouncycastle.math.ec.ECAlgorithms: com.android.org.bouncycastle.math.ec.ECPoint implShamirsTrick(com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>(r0, r1, r2, r3);

        return $r6;
    }

    public static com.android.org.bouncycastle.math.ec.ECPoint sumOfTwoMultiplies(com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger, com.android.org.bouncycastle.math.ec.ECPoint, java.math.BigInteger)
    {
        com.android.org.bouncycastle.math.ec.ECPoint r0, r2, $r6, $r8, $r9, $r10;
        java.math.BigInteger r1, r3;
        com.android.org.bouncycastle.math.ec.ECCurve r4, $r5;
        boolean $z0, $z1, $z2;
        com.android.org.bouncycastle.math.ec.ECCurve$F2m $r7;
        java.lang.IllegalArgumentException $r11;

        r0 := @parameter0: com.android.org.bouncycastle.math.ec.ECPoint;

        r1 := @parameter1: java.math.BigInteger;

        r2 := @parameter2: com.android.org.bouncycastle.math.ec.ECPoint;

        r3 := @parameter3: java.math.BigInteger;

        r4 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        $r5 = virtualinvoke r2.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECCurve getCurve()>();

        $z0 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("P and Q must be on same curve");

        throw $r11;

     label1:
        $z1 = r4 instanceof com.android.org.bouncycastle.math.ec.ECCurve$F2m;

        if $z1 == 0 goto label2;

        $r7 = (com.android.org.bouncycastle.math.ec.ECCurve$F2m) r4;

        $z2 = virtualinvoke $r7.<com.android.org.bouncycastle.math.ec.ECCurve$F2m: boolean isKoblitz()>();

        if $z2 == 0 goto label2;

        $r8 = virtualinvoke r0.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)>(r1);

        $r9 = virtualinvoke r2.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint multiply(java.math.BigInteger)>(r3);

        $r10 = virtualinvoke $r8.<com.android.org.bouncycastle.math.ec.ECPoint: com.android.org.bouncycastle.math.ec.ECPoint add(com.android.org.bouncycastle.math.ec.ECPoint)>($r9);

        return $r10;

     label2:
        $r6 = staticinvoke <com.android.org.bouncycastle.math.ec.ECAlgorithms: com.android.org.bouncycastle.math.ec.ECPoint implShamirsTrick(com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,com.android.org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>(r0, r1, r2, r3);

        return $r6;
    }
}
