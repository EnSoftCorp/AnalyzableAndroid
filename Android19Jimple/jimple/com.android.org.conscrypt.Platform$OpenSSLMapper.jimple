class com.android.org.conscrypt.Platform$OpenSSLMapper extends java.lang.Object implements org.apache.harmony.security.utils.AlgNameMapperSource
{

    private void <init>()
    {
        com.android.org.conscrypt.Platform$OpenSSLMapper r0;

        r0 := @this: com.android.org.conscrypt.Platform$OpenSSLMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.org.conscrypt.Platform$1)
    {
        com.android.org.conscrypt.Platform$OpenSSLMapper r0;
        com.android.org.conscrypt.Platform$1 r1;

        r0 := @this: com.android.org.conscrypt.Platform$OpenSSLMapper;

        r1 := @parameter0: com.android.org.conscrypt.Platform$1;

        specialinvoke r0.<com.android.org.conscrypt.Platform$OpenSSLMapper: void <init>()>();

        return;
    }

    public java.lang.String mapNameToOid(java.lang.String)
    {
        com.android.org.conscrypt.Platform$OpenSSLMapper r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.org.conscrypt.Platform$OpenSSLMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String OBJ_txt2nid_oid(java.lang.String)>(r1);

        return $r2;
    }

    public java.lang.String mapOidToName(java.lang.String)
    {
        com.android.org.conscrypt.Platform$OpenSSLMapper r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.org.conscrypt.Platform$OpenSSLMapper;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String OBJ_txt2nid_longName(java.lang.String)>(r1);

        return $r2;
    }
}
