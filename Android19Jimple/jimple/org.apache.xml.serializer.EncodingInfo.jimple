public final class org.apache.xml.serializer.EncodingInfo extends java.lang.Object
{
    final java.lang.String javaName;
    private org.apache.xml.serializer.EncodingInfo$InEncoding m_encoding;
    private final char m_highCharInContiguousGroup;
    final java.lang.String name;

    public void <init>(java.lang.String, java.lang.String, char)
    {
        org.apache.xml.serializer.EncodingInfo r0;
        java.lang.String r1, r2;
        char c0;

        r0 := @this: org.apache.xml.serializer.EncodingInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        c0 := @parameter2: char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xml.serializer.EncodingInfo: java.lang.String name> = r1;

        r0.<org.apache.xml.serializer.EncodingInfo: java.lang.String javaName> = r2;

        r0.<org.apache.xml.serializer.EncodingInfo: char m_highCharInContiguousGroup> = c0;

        return;
    }

    static boolean access$100(char, java.lang.String)
    {
        char c0;
        java.lang.String r0;
        boolean $z0;

        c0 := @parameter0: char;

        r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <org.apache.xml.serializer.EncodingInfo: boolean inEncoding(char,java.lang.String)>(c0, r0);

        return $z0;
    }

    static boolean access$200(char, char, java.lang.String)
    {
        char c0, c1;
        java.lang.String r0;
        boolean $z0;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        r0 := @parameter2: java.lang.String;

        $z0 = staticinvoke <org.apache.xml.serializer.EncodingInfo: boolean inEncoding(char,char,java.lang.String)>(c0, c1, r0);

        return $z0;
    }

    private static boolean inEncoding(char, char, java.lang.String)
    {
        char c0, c1;
        java.lang.String r0, $r2;
        boolean z0;
        char[] $r3;
        byte[] $r4;
        java.lang.Exception $r5;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        r0 := @parameter2: java.lang.String;

     label1:
        $r2 = new java.lang.String;

        $r3 = newarray (char)[2];

        $r3[0] = c0;

        $r3[1] = c1;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r3);

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(r0);

        z0 = staticinvoke <org.apache.xml.serializer.EncodingInfo: boolean inEncoding(char,byte[])>(c0, $r4);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static boolean inEncoding(char, java.lang.String)
    {
        char c0;
        java.lang.String r0, $r2;
        boolean z0, z1;
        char[] $r3;
        byte[] $r4;
        java.lang.Exception $r5;

        c0 := @parameter0: char;

        r0 := @parameter1: java.lang.String;

     label1:
        $r2 = new java.lang.String;

        $r3 = newarray (char)[1];

        $r3[0] = c0;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r3);

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(r0);

        z1 = staticinvoke <org.apache.xml.serializer.EncodingInfo: boolean inEncoding(char,byte[])>(c0, $r4);

     label2:
        z0 = z1;

     label3:
        return z0;

     label4:
        $r5 := @caughtexception;

        z0 = 0;

        if r0 != null goto label3;

        return 1;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    private static boolean inEncoding(char, byte[])
    {
        char c0;
        byte[] r0;
        int $i1;
        byte $b2, $b3;

        c0 := @parameter0: char;

        r0 := @parameter1: byte[];

        if r0 == null goto label1;

        $i1 = lengthof r0;

        if $i1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $b2 = r0[0];

        if $b2 != 0 goto label3;

        return 0;

     label3:
        $b3 = r0[0];

        if $b3 != 63 goto label4;

        if c0 == 63 goto label4;

        return 0;

     label4:
        return 1;
    }

    public final char getHighChar()
    {
        org.apache.xml.serializer.EncodingInfo r0;
        char $c0;

        r0 := @this: org.apache.xml.serializer.EncodingInfo;

        $c0 = r0.<org.apache.xml.serializer.EncodingInfo: char m_highCharInContiguousGroup>;

        return $c0;
    }

    public boolean isInEncoding(char)
    {
        org.apache.xml.serializer.EncodingInfo r0;
        char c0;
        org.apache.xml.serializer.EncodingInfo$InEncoding $r1, $r2;
        boolean $z0;
        org.apache.xml.serializer.EncodingInfo$EncodingImpl $r3;

        r0 := @this: org.apache.xml.serializer.EncodingInfo;

        c0 := @parameter0: char;

        $r1 = r0.<org.apache.xml.serializer.EncodingInfo: org.apache.xml.serializer.EncodingInfo$InEncoding m_encoding>;

        if $r1 != null goto label1;

        $r3 = new org.apache.xml.serializer.EncodingInfo$EncodingImpl;

        specialinvoke $r3.<org.apache.xml.serializer.EncodingInfo$EncodingImpl: void <init>(org.apache.xml.serializer.EncodingInfo,org.apache.xml.serializer.EncodingInfo$1)>(r0, null);

        r0.<org.apache.xml.serializer.EncodingInfo: org.apache.xml.serializer.EncodingInfo$InEncoding m_encoding> = $r3;

     label1:
        $r2 = r0.<org.apache.xml.serializer.EncodingInfo: org.apache.xml.serializer.EncodingInfo$InEncoding m_encoding>;

        $z0 = interfaceinvoke $r2.<org.apache.xml.serializer.EncodingInfo$InEncoding: boolean isInEncoding(char)>(c0);

        return $z0;
    }

    public boolean isInEncoding(char, char)
    {
        org.apache.xml.serializer.EncodingInfo r0;
        char c0, c1;
        org.apache.xml.serializer.EncodingInfo$InEncoding $r1, $r2;
        boolean $z0;
        org.apache.xml.serializer.EncodingInfo$EncodingImpl $r3;

        r0 := @this: org.apache.xml.serializer.EncodingInfo;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $r1 = r0.<org.apache.xml.serializer.EncodingInfo: org.apache.xml.serializer.EncodingInfo$InEncoding m_encoding>;

        if $r1 != null goto label1;

        $r3 = new org.apache.xml.serializer.EncodingInfo$EncodingImpl;

        specialinvoke $r3.<org.apache.xml.serializer.EncodingInfo$EncodingImpl: void <init>(org.apache.xml.serializer.EncodingInfo,org.apache.xml.serializer.EncodingInfo$1)>(r0, null);

        r0.<org.apache.xml.serializer.EncodingInfo: org.apache.xml.serializer.EncodingInfo$InEncoding m_encoding> = $r3;

     label1:
        $r2 = r0.<org.apache.xml.serializer.EncodingInfo: org.apache.xml.serializer.EncodingInfo$InEncoding m_encoding>;

        $z0 = interfaceinvoke $r2.<org.apache.xml.serializer.EncodingInfo$InEncoding: boolean isInEncoding(char,char)>(c0, c1);

        return $z0;
    }
}
