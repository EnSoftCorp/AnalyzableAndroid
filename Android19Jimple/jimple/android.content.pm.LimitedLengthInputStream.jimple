public class android.content.pm.LimitedLengthInputStream extends java.io.FilterInputStream
{
    private final long mEnd;
    private long mOffset;

    public void <init>(java.io.InputStream, long, long) throws java.io.IOException
    {
        android.content.pm.LimitedLengthInputStream r0;
        java.io.InputStream r1;
        long l0, l1, $l4, $l6;
        byte $b2, $b3, $b5;
        java.io.IOException $r2, $r3, $r4, $r5;

        r0 := @this: android.content.pm.LimitedLengthInputStream;

        r1 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        if r1 != null goto label1;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("in == null");

        throw $r5;

     label1:
        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label2;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("offset < 0");

        throw $r4;

     label2:
        $b3 = l1 cmp 0L;

        if $b3 >= 0 goto label3;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("length < 0");

        throw $r3;

     label3:
        $l4 = 9223372036854775807L - l0;

        $b5 = l1 cmp $l4;

        if $b5 <= 0 goto label4;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("offset + length > Long.MAX_VALUE");

        throw $r2;

     label4:
        $l6 = l0 + l1;

        r0.<android.content.pm.LimitedLengthInputStream: long mEnd> = $l6;

        virtualinvoke r0.<android.content.pm.LimitedLengthInputStream: long skip(long)>(l0);

        r0.<android.content.pm.LimitedLengthInputStream: long mOffset> = l0;

        return;
    }

    public int read() throws java.io.IOException
    {
        android.content.pm.LimitedLengthInputStream r0;
        java.lang.Throwable r1, $r2;
        long l0, l1, $l5, $l6;
        int i2, i3;
        byte $b4;

        r0 := @this: android.content.pm.LimitedLengthInputStream;

        entermonitor r0;

     label1:
        l0 = r0.<android.content.pm.LimitedLengthInputStream: long mOffset>;

        l1 = r0.<android.content.pm.LimitedLengthInputStream: long mEnd>;

     label2:
        $b4 = l0 cmp l1;

        if $b4 < 0 goto label4;

        i3 = -1;

     label3:
        exitmonitor r0;

        return i3;

     label4:
        $l5 = r0.<android.content.pm.LimitedLengthInputStream: long mOffset>;

        $l6 = 1L + $l5;

        r0.<android.content.pm.LimitedLengthInputStream: long mOffset> = $l6;

        i2 = specialinvoke r0.<java.io.FilterInputStream: int read()>();

     label5:
        i3 = i2;

        goto label3;

     label6:
        $r2 := @caughtexception;

        r1 = $r2;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public int read(byte[]) throws java.io.IOException
    {
        android.content.pm.LimitedLengthInputStream r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: android.content.pm.LimitedLengthInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<android.content.pm.LimitedLengthInputStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        android.content.pm.LimitedLengthInputStream r0;
        byte[] r1;
        int i0, i1, i2, $i6;
        long $l3, $l4, $l7, $l8, $l9, $l11, $l12, $l13, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22;
        byte $b5, $b10, $b14;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.content.pm.LimitedLengthInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l4 = r0.<android.content.pm.LimitedLengthInputStream: long mOffset>;

        $l3 = r0.<android.content.pm.LimitedLengthInputStream: long mEnd>;

        $b5 = $l4 cmp $l3;

        if $b5 < 0 goto label1;

        return -1;

     label1:
        $i6 = lengthof r1;

        staticinvoke <java.util.Arrays: void checkOffsetAndCount(int,int,int)>($i6, i0, i1);

        $l9 = r0.<android.content.pm.LimitedLengthInputStream: long mOffset>;

        $l7 = (long) i1;

        $l8 = 9223372036854775807L - $l7;

        $b10 = $l9 cmp $l8;

        if $b10 <= 0 goto label2;

        $r2 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("offset out of bounds: ");

        $l22 = r0.<android.content.pm.LimitedLengthInputStream: long mOffset>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l22);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label2:
        $l12 = r0.<android.content.pm.LimitedLengthInputStream: long mOffset>;

        $l11 = (long) i1;

        $l15 = $l12 + $l11;

        $l13 = r0.<android.content.pm.LimitedLengthInputStream: long mEnd>;

        $b14 = $l15 cmp $l13;

        if $b14 <= 0 goto label3;

        $l19 = r0.<android.content.pm.LimitedLengthInputStream: long mEnd>;

        $l20 = r0.<android.content.pm.LimitedLengthInputStream: long mOffset>;

        $l21 = $l19 - $l20;

        i1 = (int) $l21;

     label3:
        i2 = specialinvoke r0.<java.io.FilterInputStream: int read(byte[],int,int)>(r1, i0, i1);

        $l18 = r0.<android.content.pm.LimitedLengthInputStream: long mOffset>;

        $l16 = (long) i2;

        $l17 = $l18 + $l16;

        r0.<android.content.pm.LimitedLengthInputStream: long mOffset> = $l17;

        return i2;
    }
}
