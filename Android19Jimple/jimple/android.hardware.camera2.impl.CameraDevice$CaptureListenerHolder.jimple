class android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder extends java.lang.Object
{
    private final android.os.Handler mHandler;
    private final android.hardware.camera2.CameraDevice$CaptureListener mListener;
    private final boolean mRepeating;
    private final android.hardware.camera2.CaptureRequest mRequest;

    void <init>(android.hardware.camera2.CameraDevice$CaptureListener, android.hardware.camera2.CaptureRequest, android.os.Handler, boolean)
    {
        android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder r0;
        android.hardware.camera2.CameraDevice$CaptureListener r1;
        android.hardware.camera2.CaptureRequest r2;
        android.os.Handler r3;
        boolean z0;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder;

        r1 := @parameter0: android.hardware.camera2.CameraDevice$CaptureListener;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.os.Handler;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if r3 != null goto label2;

     label1:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Must have a valid handler and a valid listener");

        throw $r4;

     label2:
        r0.<android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder: boolean mRepeating> = z0;

        r0.<android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder: android.os.Handler mHandler> = r3;

        r0.<android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder: android.hardware.camera2.CaptureRequest mRequest> = r2;

        r0.<android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder: android.hardware.camera2.CameraDevice$CaptureListener mListener> = r1;

        return;
    }

    public android.os.Handler getHandler()
    {
        android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder r0;
        android.os.Handler $r1;

        r0 := @this: android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder;

        $r1 = r0.<android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder: android.os.Handler mHandler>;

        return $r1;
    }

    public android.hardware.camera2.CameraDevice$CaptureListener getListener()
    {
        android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder r0;
        android.hardware.camera2.CameraDevice$CaptureListener $r1;

        r0 := @this: android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder;

        $r1 = r0.<android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder: android.hardware.camera2.CameraDevice$CaptureListener mListener>;

        return $r1;
    }

    public android.hardware.camera2.CaptureRequest getRequest()
    {
        android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder r0;
        android.hardware.camera2.CaptureRequest $r1;

        r0 := @this: android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder;

        $r1 = r0.<android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder: android.hardware.camera2.CaptureRequest mRequest>;

        return $r1;
    }

    public boolean isRepeating()
    {
        android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder r0;
        boolean $z0;

        r0 := @this: android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder;

        $z0 = r0.<android.hardware.camera2.impl.CameraDevice$CaptureListenerHolder: boolean mRepeating>;

        return $z0;
    }
}
