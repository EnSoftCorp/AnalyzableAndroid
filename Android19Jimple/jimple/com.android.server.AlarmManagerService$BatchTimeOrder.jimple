class com.android.server.AlarmManagerService$BatchTimeOrder extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        com.android.server.AlarmManagerService$BatchTimeOrder r0;

        r0 := @this: com.android.server.AlarmManagerService$BatchTimeOrder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(com.android.server.AlarmManagerService$Batch, com.android.server.AlarmManagerService$Batch)
    {
        com.android.server.AlarmManagerService$BatchTimeOrder r0;
        com.android.server.AlarmManagerService$Batch r1, r2;
        long l0, l1, $l2, $l4;
        byte $b3, $b5;

        r0 := @this: com.android.server.AlarmManagerService$BatchTimeOrder;

        r1 := @parameter0: com.android.server.AlarmManagerService$Batch;

        r2 := @parameter1: com.android.server.AlarmManagerService$Batch;

        l0 = r1.<com.android.server.AlarmManagerService$Batch: long start>;

        l1 = r2.<com.android.server.AlarmManagerService$Batch: long start>;

        $l2 = l0 - l1;

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label1;

        return 1;

     label1:
        $l4 = l0 - l1;

        $b5 = $l4 cmp 0L;

        if $b5 >= 0 goto label2;

        return -1;

     label2:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.android.server.AlarmManagerService$BatchTimeOrder r0;
        java.lang.Object r1, r2;
        com.android.server.AlarmManagerService$Batch $r3, $r4;
        int $i0;

        r0 := @this: com.android.server.AlarmManagerService$BatchTimeOrder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.android.server.AlarmManagerService$Batch) r1;

        $r3 = (com.android.server.AlarmManagerService$Batch) r2;

        $i0 = virtualinvoke r0.<com.android.server.AlarmManagerService$BatchTimeOrder: int compare(com.android.server.AlarmManagerService$Batch,com.android.server.AlarmManagerService$Batch)>($r4, $r3);

        return $i0;
    }
}
