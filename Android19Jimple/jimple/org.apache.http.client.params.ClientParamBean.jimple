public class org.apache.http.client.params.ClientParamBean extends org.apache.http.params.HttpAbstractParamBean
{

    public void <init>(org.apache.http.params.HttpParams)
    {
        org.apache.http.client.params.ClientParamBean r0;
        org.apache.http.params.HttpParams r1;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        r1 := @parameter0: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.params.HttpAbstractParamBean: void <init>(org.apache.http.params.HttpParams)>(r1);

        return;
    }

    public void setAllowCircularRedirects(boolean)
    {
        org.apache.http.client.params.ClientParamBean r0;
        boolean z0;
        org.apache.http.params.HttpParams $r1;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r1.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.allow-circular-redirects", z0);

        return;
    }

    public void setConnectionManagerFactory(org.apache.http.conn.ClientConnectionManagerFactory)
    {
        org.apache.http.client.params.ClientParamBean r0;
        org.apache.http.conn.ClientConnectionManagerFactory r1;
        org.apache.http.params.HttpParams $r2;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        r1 := @parameter0: org.apache.http.conn.ClientConnectionManagerFactory;

        $r2 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r2.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.connection-manager.factory-object", r1);

        return;
    }

    public void setConnectionManagerFactoryClassName(java.lang.String)
    {
        org.apache.http.client.params.ClientParamBean r0;
        java.lang.String r1;
        org.apache.http.params.HttpParams $r2;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r2.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.connection-manager.factory-class-name", r1);

        return;
    }

    public void setCookiePolicy(java.lang.String)
    {
        org.apache.http.client.params.ClientParamBean r0;
        java.lang.String r1;
        org.apache.http.params.HttpParams $r2;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r2.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.cookie-policy", r1);

        return;
    }

    public void setDefaultHeaders(java.util.Collection)
    {
        org.apache.http.client.params.ClientParamBean r0;
        java.util.Collection r1;
        org.apache.http.params.HttpParams $r2;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r2.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.default-headers", r1);

        return;
    }

    public void setDefaultHost(org.apache.http.HttpHost)
    {
        org.apache.http.client.params.ClientParamBean r0;
        org.apache.http.HttpHost r1;
        org.apache.http.params.HttpParams $r2;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        r1 := @parameter0: org.apache.http.HttpHost;

        $r2 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r2.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.default-host", r1);

        return;
    }

    public void setHandleAuthentication(boolean)
    {
        org.apache.http.client.params.ClientParamBean r0;
        boolean z0;
        org.apache.http.params.HttpParams $r1;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r1.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.handle-authentication", z0);

        return;
    }

    public void setHandleRedirects(boolean)
    {
        org.apache.http.client.params.ClientParamBean r0;
        boolean z0;
        org.apache.http.params.HttpParams $r1;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r1.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.handle-redirects", z0);

        return;
    }

    public void setMaxRedirects(int)
    {
        org.apache.http.client.params.ClientParamBean r0;
        int i0;
        org.apache.http.params.HttpParams $r1;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r1.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.protocol.max-redirects", i0);

        return;
    }

    public void setRejectRelativeRedirect(boolean)
    {
        org.apache.http.client.params.ClientParamBean r0;
        boolean z0;
        org.apache.http.params.HttpParams $r1;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r1.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.reject-relative-redirect", z0);

        return;
    }

    public void setVirtualHost(org.apache.http.HttpHost)
    {
        org.apache.http.client.params.ClientParamBean r0;
        org.apache.http.HttpHost r1;
        org.apache.http.params.HttpParams $r2;

        r0 := @this: org.apache.http.client.params.ClientParamBean;

        r1 := @parameter0: org.apache.http.HttpHost;

        $r2 = r0.<org.apache.http.client.params.ClientParamBean: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r2.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.virtual-host", r1);

        return;
    }
}
