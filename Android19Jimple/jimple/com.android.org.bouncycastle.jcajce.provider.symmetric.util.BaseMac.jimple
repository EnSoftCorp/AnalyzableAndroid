public class com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac extends javax.crypto.MacSpi implements com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE
{
    private int keySize;
    private com.android.org.bouncycastle.crypto.Mac macEngine;
    private int pbeHash;
    private int pbeType;

    protected void <init>(com.android.org.bouncycastle.crypto.Mac)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac r0;
        com.android.org.bouncycastle.crypto.Mac r1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.Mac;

        specialinvoke r0.<javax.crypto.MacSpi: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int pbeType> = 2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int pbeHash> = 1;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int keySize> = 160;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: com.android.org.bouncycastle.crypto.Mac macEngine> = r1;

        return;
    }

    protected void <init>(com.android.org.bouncycastle.crypto.Mac, int, int, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac r0;
        com.android.org.bouncycastle.crypto.Mac r1;
        int i0, i1, i2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac;

        r1 := @parameter0: com.android.org.bouncycastle.crypto.Mac;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<javax.crypto.MacSpi: void <init>()>();

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int pbeType> = 2;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int pbeHash> = 1;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int keySize> = 160;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: com.android.org.bouncycastle.crypto.Mac macEngine> = r1;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int pbeType> = i0;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int pbeHash> = i1;

        r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int keySize> = i2;

        return;
    }

    protected byte[] engineDoFinal()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac r0;
        byte[] r1;
        int $i0;
        com.android.org.bouncycastle.crypto.Mac $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac;

        $i0 = virtualinvoke r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: int engineGetMacLength()>();

        r1 = newarray (byte)[$i0];

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: com.android.org.bouncycastle.crypto.Mac macEngine>;

        interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.Mac: int doFinal(byte[],int)>(r1, 0);

        return r1;
    }

    protected int engineGetMacLength()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac r0;
        com.android.org.bouncycastle.crypto.Mac $r1;
        int $i0;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: com.android.org.bouncycastle.crypto.Mac macEngine>;

        $i0 = interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.Mac: int getMacSize()>();

        return $i0;
    }

    protected void engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac r0;
        java.security.Key r1;
        java.security.spec.AlgorithmParameterSpec r2;
        com.android.org.bouncycastle.crypto.CipherParameters r3, $r14;
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey r4;
        boolean $z0, $z1, $z2;
        java.security.InvalidAlgorithmParameterException $r5, $r15;
        com.android.org.bouncycastle.crypto.params.KeyParameter $r6, $r10;
        byte[] $r7, $r11, $r13;
        com.android.org.bouncycastle.crypto.Mac $r8;
        com.android.org.bouncycastle.crypto.params.ParametersWithIV $r9;
        javax.crypto.spec.IvParameterSpec $r12;
        java.security.InvalidKeyException $r16;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac;

        r1 := @parameter0: java.security.Key;

        r2 := @parameter1: java.security.spec.AlgorithmParameterSpec;

        if r1 != null goto label1;

        $r16 = new java.security.InvalidKeyException;

        specialinvoke $r16.<java.security.InvalidKeyException: void <init>(java.lang.String)>("key is null");

        throw $r16;

     label1:
        $z0 = r1 instanceof com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey;

        if $z0 == 0 goto label5;

        r4 = (com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey) r1;

        $r14 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.crypto.CipherParameters getParam()>();

        if $r14 == null goto label3;

        r3 = virtualinvoke r4.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey: com.android.org.bouncycastle.crypto.CipherParameters getParam()>();

     label2:
        $r8 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: com.android.org.bouncycastle.crypto.Mac macEngine>;

        interfaceinvoke $r8.<com.android.org.bouncycastle.crypto.Mac: void init(com.android.org.bouncycastle.crypto.CipherParameters)>(r3);

        return;

     label3:
        $z2 = r2 instanceof javax.crypto.spec.PBEParameterSpec;

        if $z2 == 0 goto label4;

        r3 = staticinvoke <com.android.org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util: com.android.org.bouncycastle.crypto.CipherParameters makePBEMacParameters(com.android.org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec)>(r4, r2);

        goto label2;

     label4:
        $r15 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r15.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("PBE requires PBE parameters to be set.");

        throw $r15;

     label5:
        $z1 = r2 instanceof javax.crypto.spec.IvParameterSpec;

        if $z1 == 0 goto label6;

        $r9 = new com.android.org.bouncycastle.crypto.params.ParametersWithIV;

        $r10 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r11 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r10.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r11);

        $r12 = (javax.crypto.spec.IvParameterSpec) r2;

        $r13 = virtualinvoke $r12.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r9.<com.android.org.bouncycastle.crypto.params.ParametersWithIV: void <init>(com.android.org.bouncycastle.crypto.CipherParameters,byte[])>($r10, $r13);

        r3 = $r9;

        goto label2;

     label6:
        if r2 != null goto label7;

        $r6 = new com.android.org.bouncycastle.crypto.params.KeyParameter;

        $r7 = interfaceinvoke r1.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r6.<com.android.org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r7);

        r3 = $r6;

        goto label2;

     label7:
        $r5 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r5.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unknown parameter type.");

        throw $r5;
    }

    protected void engineReset()
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac r0;
        com.android.org.bouncycastle.crypto.Mac $r1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: com.android.org.bouncycastle.crypto.Mac macEngine>;

        interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.Mac: void reset()>();

        return;
    }

    protected void engineUpdate(byte)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac r0;
        byte b0;
        com.android.org.bouncycastle.crypto.Mac $r1;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: com.android.org.bouncycastle.crypto.Mac macEngine>;

        interfaceinvoke $r1.<com.android.org.bouncycastle.crypto.Mac: void update(byte)>(b0);

        return;
    }

    protected void engineUpdate(byte[], int, int)
    {
        com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac r0;
        byte[] r1;
        int i0, i1;
        com.android.org.bouncycastle.crypto.Mac $r2;

        r0 := @this: com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.bouncycastle.jcajce.provider.symmetric.util.BaseMac: com.android.org.bouncycastle.crypto.Mac macEngine>;

        interfaceinvoke $r2.<com.android.org.bouncycastle.crypto.Mac: void update(byte[],int,int)>(r1, i0, i1);

        return;
    }
}
