public final class com.android.okhttp.internal.Base64 extends java.lang.Object
{
    private static final byte[] MAP;

    static void <clinit>()
    {
        byte[] $r0;

        $r0 = newarray (byte)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <com.android.okhttp.internal.Base64: byte[] MAP> = $r0;

        return;
    }

    private void <init>()
    {
        com.android.okhttp.internal.Base64 r0;

        r0 := @this: com.android.okhttp.internal.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decode(byte[])
    {
        byte[] r0, $r1;
        int $i0;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <com.android.okhttp.internal.Base64: byte[] decode(byte[],int)>(r0, $i0);

        return $r1;
    }

    public static byte[] decode(byte[], int)
    {
        byte[] r0, r1, r2, $r3;
        int i0, i1, i2, i4, i5, i6, i7, i8, i9, i11, i12, i13, i14, $i15, $i16, $i17, $i18, $i19, $i23, $i24, $i26, $i28;
        byte b3, b10, $b20, $b21, $b22, $b25, $b27, $b29;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i16 = i0 / 4;

        i1 = 3 * $i16;

        if i1 != 0 goto label01;

        $r3 = <com.android.okhttp.internal.Util: byte[] EMPTY_BYTE_ARRAY>;

        return $r3;

     label01:
        r1 = newarray (byte)[i1];

        i2 = 0;

     label02:
        $i15 = i0 - 1;

        b3 = r0[$i15];

        if b3 == 10 goto label03;

        if b3 == 13 goto label03;

        if b3 == 32 goto label03;

        if b3 != 9 goto label04;

     label03:
        i0 = i0 + -1;

        goto label02;

     label04:
        if b3 != 61 goto label05;

        i2 = i2 + 1;

        goto label03;

     label05:
        i4 = 0;

        i5 = 0;

        i6 = 0;

        i7 = 0;

     label06:
        if i6 >= i0 goto label16;

        b10 = r0[i6];

        if b10 == 10 goto label20;

        if b10 == 13 goto label20;

        if b10 == 32 goto label20;

        if b10 != 9 goto label08;

        i11 = i7;

     label07:
        i6 = i6 + 1;

        i7 = i11;

        goto label06;

     label08:
        if b10 < 65 goto label11;

        if b10 > 90 goto label11;

        i12 = b10 - 65;

     label09:
        $i24 = i5 << 6;

        $b21 = (byte) i12;

        i5 = $i24 | $b21;

        $i23 = i4 % 4;

        if $i23 != 3 goto label19;

        i14 = i7 + 1;

        $i26 = i5 >> 16;

        $b25 = (byte) $i26;

        r1[i7] = $b25;

        i13 = i14 + 1;

        $i28 = i5 >> 8;

        $b27 = (byte) $i28;

        r1[i14] = $b27;

        i11 = i13 + 1;

        $b29 = (byte) i5;

        r1[i13] = $b29;

     label10:
        i4 = i4 + 1;

        goto label07;

     label11:
        if b10 < 97 goto label12;

        if b10 > 122 goto label12;

        i12 = b10 - 71;

        goto label09;

     label12:
        if b10 < 48 goto label13;

        if b10 > 57 goto label13;

        i12 = b10 + 4;

        goto label09;

     label13:
        if b10 != 43 goto label14;

        i12 = 62;

        goto label09;

     label14:
        if b10 != 47 goto label15;

        i12 = 63;

        goto label09;

     label15:
        return null;

     label16:
        if i2 <= 0 goto label17;

        $i18 = i2 * 6;

        i9 = i5 << $i18;

        i8 = i7 + 1;

        $i17 = i9 >> 16;

        $b20 = (byte) $i17;

        r1[i7] = $b20;

        if i2 != 1 goto label18;

        i7 = i8 + 1;

        $i19 = i9 >> 8;

        $b22 = (byte) $i19;

        r1[i8] = $b22;

     label17:
        i8 = i7;

     label18:
        r2 = newarray (byte)[i8];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i8);

        return r2;

     label19:
        i11 = i7;

        goto label10;

     label20:
        i11 = i7;

        goto label07;
    }

    public static java.lang.String encode(byte[])
    {
        byte[] r0, r1, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i27, $i31, $i35, $i36, $i37, $i49, $i55, $i56, $i59, $i62, $i66, $i68, $i72, $i74;
        java.lang.String r2, $r4;
        java.io.UnsupportedEncodingException r3, $r15;
        short $s23, $s25, $s30, $s33, $s40, $s41, $s51, $s52, $s53, $s54, $s64, $s73;
        byte $b24, $b26, $b28, $b29, $b32, $b34, $b38, $b39, $b42, $b43, $b44, $b45, $b46, $b47, $b48, $b50, $b57, $b58, $b60, $b61, $b63, $b65, $b67, $b69, $b70, $b71, $b75;
        java.lang.AssertionError $r14;

        r0 := @parameter0: byte[];

        $i15 = lengthof r0;

        $i14 = 2 + $i15;

        $i17 = 4 * $i14;

        $i16 = $i17 / 3;

        r1 = newarray (byte)[$i16];

        $i21 = lengthof r0;

        $i19 = lengthof r0;

        $i18 = $i19 % 3;

        i0 = $i21 - $i18;

        i1 = 0;

        i2 = 0;

     label1:
        if i1 >= i0 goto label2;

        i11 = i2 + 1;

        $r10 = <com.android.okhttp.internal.Base64: byte[] MAP>;

        $b47 = r0[i1];

        $s52 = 255 & $b47;

        $s51 = $s52 >> 2;

        $b50 = $r10[$s51];

        r1[i2] = $b50;

        i13 = i11 + 1;

        $r11 = <com.android.okhttp.internal.Base64: byte[] MAP>;

        $b57 = r0[i1];

        $b58 = 3 & $b57;

        $i55 = $b58 << 4;

        $i59 = i1 + 1;

        $b60 = r0[$i59];

        $s53 = 255 & $b60;

        $s54 = $s53 >> 4;

        $i56 = $i55 | $s54;

        $b65 = $r11[$i56];

        r1[i11] = $b65;

        i12 = i13 + 1;

        $r12 = <com.android.okhttp.internal.Base64: byte[] MAP>;

        $i66 = i1 + 1;

        $b67 = r0[$i66];

        $b61 = 15 & $b67;

        $i72 = $b61 << 2;

        $i62 = i1 + 2;

        $b63 = r0[$i62];

        $s64 = 255 & $b63;

        $s73 = $s64 >> 6;

        $i74 = $i72 | $s73;

        $b69 = $r12[$i74];

        r1[i13] = $b69;

        i2 = i12 + 1;

        $r13 = <com.android.okhttp.internal.Base64: byte[] MAP>;

        $i68 = i1 + 2;

        $b71 = r0[$i68];

        $b70 = 63 & $b71;

        $b75 = $r13[$b70];

        r1[i12] = $b75;

        i1 = i1 + 3;

        goto label1;

     label2:
        $i20 = lengthof r0;

        $i22 = $i20 % 3;

        tableswitch($i22)
        {
            case 1: goto label6;
            case 2: goto label7;
            default: goto label3;
        };

     label3:
        i6 = i2;

     label4:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, 0, i6, "US-ASCII");

        r2 = $r4;

     label5:
        return r2;

     label6:
        i7 = i2 + 1;

        $r8 = <com.android.okhttp.internal.Base64: byte[] MAP>;

        $b42 = r0[i0];

        $s41 = 255 & $b42;

        $s40 = $s41 >> 2;

        $b46 = $r8[$s40];

        r1[i2] = $b46;

        i8 = i7 + 1;

        $r9 = <com.android.okhttp.internal.Base64: byte[] MAP>;

        $b45 = r0[i0];

        $b44 = 3 & $b45;

        $i49 = $b44 << 4;

        $b48 = $r9[$i49];

        r1[i7] = $b48;

        i9 = i8 + 1;

        r1[i8] = 61;

        i10 = i9 + 1;

        r1[i9] = 61;

        i6 = i10;

        goto label4;

     label7:
        i3 = i2 + 1;

        $r5 = <com.android.okhttp.internal.Base64: byte[] MAP>;

        $b24 = r0[i0];

        $s23 = 255 & $b24;

        $s25 = $s23 >> 2;

        $b28 = $r5[$s25];

        r1[i2] = $b28;

        i4 = i3 + 1;

        $r6 = <com.android.okhttp.internal.Base64: byte[] MAP>;

        $b29 = r0[i0];

        $b26 = 3 & $b29;

        $i31 = $b26 << 4;

        $i27 = i0 + 1;

        $b32 = r0[$i27];

        $s33 = 255 & $b32;

        $s30 = $s33 >> 4;

        $i36 = $i31 | $s30;

        $b34 = $r6[$i36];

        r1[i3] = $b34;

        i5 = i4 + 1;

        $r7 = <com.android.okhttp.internal.Base64: byte[] MAP>;

        $i35 = i0 + 1;

        $b38 = r0[$i35];

        $b39 = 15 & $b38;

        $i37 = $b39 << 2;

        $b43 = $r7[$i37];

        r1[i4] = $b43;

        i2 = i5 + 1;

        r1[i5] = 61;

        goto label3;

     label8:
        $r15 := @caughtexception;

        r3 = $r15;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(r3);

        throw $r14;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label8;
    }
}
