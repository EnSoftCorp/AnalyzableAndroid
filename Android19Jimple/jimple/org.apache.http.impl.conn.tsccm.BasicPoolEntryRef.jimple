public class org.apache.http.impl.conn.tsccm.BasicPoolEntryRef extends java.lang.ref.WeakReference
{
    private final org.apache.http.conn.routing.HttpRoute route;

    public void <init>(org.apache.http.impl.conn.tsccm.BasicPoolEntry, java.lang.ref.ReferenceQueue)
    {
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef r0;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r1;
        java.lang.ref.ReferenceQueue r2;
        org.apache.http.conn.routing.HttpRoute $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef;

        r1 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        r2 := @parameter1: java.lang.ref.ReferenceQueue;

        specialinvoke r0.<java.lang.ref.WeakReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, r2);

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pool entry must not be null.");

        throw $r4;

     label1:
        $r3 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        r0.<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef: org.apache.http.conn.routing.HttpRoute route> = $r3;

        return;
    }

    public final org.apache.http.conn.routing.HttpRoute getRoute()
    {
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef r0;
        org.apache.http.conn.routing.HttpRoute $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef: org.apache.http.conn.routing.HttpRoute route>;

        return $r1;
    }
}
