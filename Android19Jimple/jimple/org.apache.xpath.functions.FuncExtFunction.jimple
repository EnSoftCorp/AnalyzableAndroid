public class org.apache.xpath.functions.FuncExtFunction extends org.apache.xpath.functions.Function
{
    static final long serialVersionUID;
    java.util.Vector m_argVec;
    java.lang.String m_extensionName;
    java.lang.Object m_methodKey;
    java.lang.String m_namespace;

    public void <init>(java.lang.String, java.lang.String, java.lang.Object)
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        java.lang.String r1, r2;
        java.lang.Object r3;
        java.util.Vector $r4;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<org.apache.xpath.functions.Function: void <init>()>();

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec> = $r4;

        r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String m_namespace> = r1;

        r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String m_extensionName> = r2;

        r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.Object m_methodKey> = r3;

        return;
    }

    public void callArgVisitors(org.apache.xpath.XPathVisitor)
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        org.apache.xpath.XPathVisitor r1;
        int i0, $i1;
        org.apache.xpath.Expression r2;
        java.util.Vector $r3, $r4;
        java.lang.Object $r5;
        org.apache.xpath.functions.FuncExtFunction$ArgExtOwner $r6;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        r1 := @parameter0: org.apache.xpath.XPathVisitor;

        i0 = 0;

     label1:
        $r3 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        $i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        if i0 >= $i1 goto label2;

        $r4 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r2 = (org.apache.xpath.Expression) $r5;

        $r6 = new org.apache.xpath.functions.FuncExtFunction$ArgExtOwner;

        specialinvoke $r6.<org.apache.xpath.functions.FuncExtFunction$ArgExtOwner: void <init>(org.apache.xpath.functions.FuncExtFunction,org.apache.xpath.Expression)>(r0, r2);

        virtualinvoke r2.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r6, r1);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void checkNumberArgs(int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        int i0;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        i0 := @parameter0: int;

        return;
    }

    public org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        org.apache.xpath.XPathContext r1;
        java.util.Vector r2, $r6, $r7, $r11;
        int i0, i1;
        java.lang.Object r3, $r8, $r14;
        org.apache.xpath.objects.XObject r4, $r12;
        java.lang.Object[] r5;
        boolean $z0;
        org.apache.xpath.ExtensionsProvider $r9;
        org.apache.xpath.objects.XNull $r10;
        org.apache.xpath.Expression $r13;
        javax.xml.transform.TransformerException $r15;
        java.lang.String $r16, $r17;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        $z0 = virtualinvoke r1.<org.apache.xpath.XPathContext: boolean isSecureProcessing()>();

        if $z0 == 0 goto label1;

        r5 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String toString()>();

        r5[0] = $r16;

        $r15 = new javax.xml.transform.TransformerException;

        $r17 = staticinvoke <org.apache.xpath.res.XPATHMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED", r5);

        specialinvoke $r15.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r17);

        throw $r15;

     label1:
        $r6 = new java.util.Vector;

        specialinvoke $r6.<java.util.Vector: void <init>()>();

        r2 = $r6;

        $r7 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        i0 = virtualinvoke $r7.<java.util.Vector: int size()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r11 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        $r14 = virtualinvoke $r11.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r13 = (org.apache.xpath.Expression) $r14;

        r4 = virtualinvoke $r13.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>(r1);

        virtualinvoke r4.<org.apache.xpath.objects.XObject: void allowDetachToRelease(boolean)>(0);

        virtualinvoke r2.<java.util.Vector: void addElement(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r8 = virtualinvoke r1.<org.apache.xpath.XPathContext: java.lang.Object getOwnerObject()>();

        $r9 = (org.apache.xpath.ExtensionsProvider) $r8;

        r3 = interfaceinvoke $r9.<org.apache.xpath.ExtensionsProvider: java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector)>(r0, r2);

        if r3 == null goto label4;

        $r12 = staticinvoke <org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)>(r3, r1);

        return $r12;

     label4:
        $r10 = new org.apache.xpath.objects.XNull;

        specialinvoke $r10.<org.apache.xpath.objects.XNull: void <init>()>();

        return $r10;
    }

    public void exprSetParent(org.apache.xpath.ExpressionNode)
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        org.apache.xpath.ExpressionNode r1;
        int i0, i1;
        java.util.Vector $r2, $r3;
        java.lang.Object $r4;
        org.apache.xpath.Expression $r5;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        r1 := @parameter0: org.apache.xpath.ExpressionNode;

        specialinvoke r0.<org.apache.xpath.functions.Function: void exprSetParent(org.apache.xpath.ExpressionNode)>(r1);

        $r2 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r5 = (org.apache.xpath.Expression) $r4;

        virtualinvoke $r5.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void fixupVariables(java.util.Vector, int)
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        java.util.Vector r1, $r2, $r3, $r4;
        int i0, i1, i2;
        java.lang.Object $r5;
        org.apache.xpath.Expression $r6;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        r1 := @parameter0: java.util.Vector;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        i1 = virtualinvoke $r3.<java.util.Vector: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i2);

        $r6 = (org.apache.xpath.Expression) $r5;

        virtualinvoke $r6.<org.apache.xpath.Expression: void fixupVariables(java.util.Vector,int)>(r1, i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public org.apache.xpath.Expression getArg(int)
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        int i0, $i1;
        java.util.Vector $r1, $r2;
        java.lang.Object $r3;
        org.apache.xpath.Expression $r4;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (org.apache.xpath.Expression) $r3;

        return $r4;

     label1:
        return null;
    }

    public int getArgCount()
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        java.util.Vector $r1;
        int $i0;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        $r1 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public java.lang.String getFunctionName()
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        $r1 = r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String m_extensionName>;

        return $r1;
    }

    public java.lang.Object getMethodKey()
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        $r1 = r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.Object m_methodKey>;

        return $r1;
    }

    public java.lang.String getNamespace()
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        $r1 = r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String m_namespace>;

        return $r1;
    }

    protected void reportWrongNumberArgs() throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        java.lang.RuntimeException $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        $r1 = new java.lang.RuntimeException;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = "Programmer\'s assertion:  the method FunctionMultiArgs.reportWrongNumberArgs() should never be called.";

        $r3 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createXPATHMessage(java.lang.String,java.lang.Object[])>("ER_INCORRECT_PROGRAMMER_ASSERTION", $r2);

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        throw $r1;
    }

    public void setArg(org.apache.xpath.Expression, int) throws org.apache.xpath.functions.WrongNumberArgsException
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        org.apache.xpath.Expression r1;
        int i0;
        java.util.Vector $r2;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        r1 := @parameter0: org.apache.xpath.Expression;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xpath.functions.FuncExtFunction: java.util.Vector m_argVec>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        virtualinvoke r1.<org.apache.xpath.Expression: void exprSetParent(org.apache.xpath.ExpressionNode)>(r0);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.xpath.functions.FuncExtFunction r0;
        java.lang.String $r1, $r2, $r3, $r6, $r9, $r11;
        int $i0;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10;

        r0 := @this: org.apache.xpath.functions.FuncExtFunction;

        $r1 = r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String m_namespace>;

        if $r1 == null goto label1;

        $r3 = r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String m_namespace>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r6 = r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String m_namespace>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String m_extensionName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label1:
        $r2 = r0.<org.apache.xpath.functions.FuncExtFunction: java.lang.String m_extensionName>;

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.functions.FuncExtFunction: long serialVersionUID> = 5196115554693708718L;

        return;
    }
}
