class java.nio.MemoryBlock$NonMovableHeapBlock extends java.nio.MemoryBlock
{
    private byte[] array;

    private void <init>(byte[], long, long)
    {
        java.nio.MemoryBlock$NonMovableHeapBlock r0;
        byte[] r1;
        long l0, l1;

        r0 := @this: java.nio.MemoryBlock$NonMovableHeapBlock;

        r1 := @parameter0: byte[];

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<java.nio.MemoryBlock: void <init>(long,long,java.nio.MemoryBlock$1)>(l0, l1, null);

        r0.<java.nio.MemoryBlock$NonMovableHeapBlock: byte[] array> = r1;

        return;
    }

    void <init>(byte[], long, long, java.nio.MemoryBlock$1)
    {
        java.nio.MemoryBlock$NonMovableHeapBlock r0;
        byte[] r1;
        long l0, l1;
        java.nio.MemoryBlock$1 r2;

        r0 := @this: java.nio.MemoryBlock$NonMovableHeapBlock;

        r1 := @parameter0: byte[];

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.nio.MemoryBlock$1;

        specialinvoke r0.<java.nio.MemoryBlock$NonMovableHeapBlock: void <init>(byte[],long,long)>(r1, l0, l1);

        return;
    }

    public byte[] array()
    {
        java.nio.MemoryBlock$NonMovableHeapBlock r0;
        byte[] $r1;

        r0 := @this: java.nio.MemoryBlock$NonMovableHeapBlock;

        $r1 = r0.<java.nio.MemoryBlock$NonMovableHeapBlock: byte[] array>;

        return $r1;
    }

    public void free()
    {
        java.nio.MemoryBlock$NonMovableHeapBlock r0;

        r0 := @this: java.nio.MemoryBlock$NonMovableHeapBlock;

        r0.<java.nio.MemoryBlock$NonMovableHeapBlock: byte[] array> = null;

        r0.<java.nio.MemoryBlock$NonMovableHeapBlock: long address> = 0L;

        return;
    }
}
