public class javax.crypto.spec.RC2ParameterSpec extends java.lang.Object implements java.security.spec.AlgorithmParameterSpec
{
    private final int effectiveKeyBits;
    private final byte[] iv;

    public void <init>(int)
    {
        javax.crypto.spec.RC2ParameterSpec r0;
        int i0;

        r0 := @this: javax.crypto.spec.RC2ParameterSpec;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javax.crypto.spec.RC2ParameterSpec: int effectiveKeyBits> = i0;

        r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv> = null;

        return;
    }

    public void <init>(int, byte[])
    {
        javax.crypto.spec.RC2ParameterSpec r0;
        int i0, $i1;
        byte[] r1, $r2, $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: javax.crypto.spec.RC2ParameterSpec;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iv == null");

        throw $r5;

     label1:
        $i1 = lengthof r1;

        if $i1 >= 8 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iv.length < 8");

        throw $r4;

     label2:
        r0.<javax.crypto.spec.RC2ParameterSpec: int effectiveKeyBits> = i0;

        $r2 = newarray (byte)[8];

        r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv> = $r2;

        $r3 = r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 0, 8);

        return;
    }

    public void <init>(int, byte[], int)
    {
        javax.crypto.spec.RC2ParameterSpec r0;
        int i0, i1, $i2, $i3;
        byte[] r1, $r2, $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: javax.crypto.spec.RC2ParameterSpec;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iv == null");

        throw $r5;

     label1:
        $i2 = lengthof r1;

        $i3 = $i2 - i1;

        if $i3 >= 8 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("iv.length - offset < 8");

        throw $r4;

     label2:
        r0.<javax.crypto.spec.RC2ParameterSpec: int effectiveKeyBits> = i0;

        $r2 = newarray (byte)[8];

        r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv> = $r2;

        $r3 = r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i1, $r3, 0, 8);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        javax.crypto.spec.RC2ParameterSpec r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;
        byte[] $r3, $r4;

        r0 := @this: javax.crypto.spec.RC2ParameterSpec;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof javax.crypto.spec.RC2ParameterSpec;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (javax.crypto.spec.RC2ParameterSpec) r1;

        $i1 = r0.<javax.crypto.spec.RC2ParameterSpec: int effectiveKeyBits>;

        $i0 = r2.<javax.crypto.spec.RC2ParameterSpec: int effectiveKeyBits>;

        if $i1 != $i0 goto label4;

        $r4 = r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        $r3 = r2.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3);

        if $z1 != 0 goto label1;

     label4:
        return 0;
    }

    public int getEffectiveKeyBits()
    {
        javax.crypto.spec.RC2ParameterSpec r0;
        int $i0;

        r0 := @this: javax.crypto.spec.RC2ParameterSpec;

        $i0 = r0.<javax.crypto.spec.RC2ParameterSpec: int effectiveKeyBits>;

        return $i0;
    }

    public byte[] getIV()
    {
        javax.crypto.spec.RC2ParameterSpec r0;
        byte[] r1, $r2, $r3, $r4, $r5;
        int $i0, $i1;

        r0 := @this: javax.crypto.spec.RC2ParameterSpec;

        $r2 = r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        $i0 = lengthof $r3;

        r1 = newarray (byte)[$i0];

        $r5 = r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        $r4 = r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        $i1 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r1, 0, $i1);

        return r1;
    }

    public int hashCode()
    {
        javax.crypto.spec.RC2ParameterSpec r0;
        int i0, i1, i2;
        byte[] r1, $r2;
        byte $b3;

        r0 := @this: javax.crypto.spec.RC2ParameterSpec;

        i0 = r0.<javax.crypto.spec.RC2ParameterSpec: int effectiveKeyBits>;

        $r2 = r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        if $r2 != null goto label1;

        return i0;

     label1:
        r1 = r0.<javax.crypto.spec.RC2ParameterSpec: byte[] iv>;

        i1 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $b3 = r1[i2];

        i0 = i0 + $b3;

        i2 = i2 + 1;

        goto label2;

     label3:
        return i0;
    }
}
