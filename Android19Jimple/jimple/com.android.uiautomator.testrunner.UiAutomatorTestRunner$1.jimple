class com.android.uiautomator.testrunner.UiAutomatorTestRunner$1 extends java.lang.Object implements com.android.uiautomator.testrunner.IAutomationSupport
{
    final com.android.uiautomator.testrunner.UiAutomatorTestRunner this$0;

    void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$1 r0;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner r1;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$1;

        r1 := @parameter0: com.android.uiautomator.testrunner.UiAutomatorTestRunner;

        r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$1: com.android.uiautomator.testrunner.UiAutomatorTestRunner this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void sendStatus(int, android.os.Bundle)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher $r0;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$1 r1;
        int i0;
        android.os.Bundle r2;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner $r3;

        r1 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$1;

        i0 := @parameter0: int;

        r2 := @parameter1: android.os.Bundle;

        $r3 = r1.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$1: com.android.uiautomator.testrunner.UiAutomatorTestRunner this$0>;

        $r0 = staticinvoke <com.android.uiautomator.testrunner.UiAutomatorTestRunner: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher access$100(com.android.uiautomator.testrunner.UiAutomatorTestRunner)>($r3);

        virtualinvoke $r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>(null, i0, r2);

        return;
    }
}
