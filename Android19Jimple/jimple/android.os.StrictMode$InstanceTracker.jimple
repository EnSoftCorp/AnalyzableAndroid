final class android.os.StrictMode$InstanceTracker extends java.lang.Object
{
    private static final java.util.HashMap sInstanceCounts;
    private final java.lang.Class mKlass;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts> = $r0;

        return;
    }

    public void <init>(java.lang.Object)
    {
        android.os.StrictMode$InstanceTracker r0;
        java.lang.Object r1, $r8;
        java.util.HashMap r2, $r7, $r9;
        java.lang.Throwable r3, $r13;
        java.lang.Integer r4, $r11;
        int i0, $i1;
        java.lang.Class $r5, $r6, $r10;

        r0 := @this: android.os.StrictMode$InstanceTracker;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass> = $r5;

        r2 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        entermonitor r2;

     label1:
        $r7 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r6 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r6);

        r4 = (java.lang.Integer) $r8;

     label2:
        if r4 == null goto label9;

     label3:
        $i1 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        i0 = 1 + $i1;

     label4:
        $r9 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r10 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        exitmonitor r2;

     label5:
        return;

     label6:
        $r13 := @caughtexception;

        r3 = $r13;

     label7:
        exitmonitor r2;

     label8:
        throw r3;

     label9:
        i0 = 1;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static int getInstanceCount(java.lang.Class)
    {
        java.lang.Class r0;
        java.util.HashMap r1, $r4;
        java.lang.Throwable r2, $r6;
        java.lang.Integer r3;
        int i0;
        java.lang.Object $r5;

        r0 := @parameter0: java.lang.Class;

        r1 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        entermonitor r1;

     label1:
        $r4 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.Integer) $r5;

     label2:
        if r3 == null goto label9;

     label3:
        i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

     label4:
        exitmonitor r1;

     label5:
        return i0;

     label6:
        $r6 := @caughtexception;

        r2 = $r6;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

     label9:
        i0 = 0;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.os.StrictMode$InstanceTracker r0;
        java.lang.Throwable r1, r3, $r15, $r16;
        java.util.HashMap r2, $r6, $r9, $r12;
        java.lang.Integer r4, $r14;
        int i0, $i1;
        java.lang.Class $r5, $r8, $r11;
        java.lang.Object $r7;

        r0 := @this: android.os.StrictMode$InstanceTracker;

     label01:
        r2 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        entermonitor r2;

     label02:
        $r6 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r5 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r4 = (java.lang.Integer) $r7;

     label03:
        if r4 == null goto label07;

     label04:
        $i1 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        i0 = -1 + $i1;

     label05:
        if i0 <= 0 goto label09;

     label06:
        $r12 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r11 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r14);

     label07:
        exitmonitor r2;

     label08:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label09:
        $r9 = <android.os.StrictMode$InstanceTracker: java.util.HashMap sInstanceCounts>;

        $r8 = r0.<android.os.StrictMode$InstanceTracker: java.lang.Class mKlass>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r8);

     label10:
        goto label07;

     label11:
        $r15 := @caughtexception;

        r3 = $r15;

     label12:
        exitmonitor r2;

     label13:
        throw r3;

     label14:
        $r16 := @caughtexception;

        r1 = $r16;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label13 to label14 with label14;
    }
}
