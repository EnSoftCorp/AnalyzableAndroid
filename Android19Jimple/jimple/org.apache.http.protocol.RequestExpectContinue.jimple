public class org.apache.http.protocol.RequestExpectContinue extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{

    public void <init>()
    {
        org.apache.http.protocol.RequestExpectContinue r0;

        r0 := @this: org.apache.http.protocol.RequestExpectContinue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.protocol.RequestExpectContinue r0;
        org.apache.http.HttpRequest r1;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.HttpEntity r3;
        org.apache.http.ProtocolVersion r4;
        boolean $z0, $z1, $z2;
        org.apache.http.HttpEntityEnclosingRequest $r5;
        long $l0;
        byte $b1;
        org.apache.http.RequestLine $r6;
        org.apache.http.params.HttpParams $r7;
        org.apache.http.HttpVersion $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.apache.http.protocol.RequestExpectContinue;

        r1 := @parameter0: org.apache.http.HttpRequest;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r9;

     label1:
        $z0 = r1 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.http.HttpEntityEnclosingRequest) r1;

        r3 = interfaceinvoke $r5.<org.apache.http.HttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()>();

        if r3 == null goto label2;

        $l0 = interfaceinvoke r3.<org.apache.http.HttpEntity: long getContentLength()>();

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $r6 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        r4 = interfaceinvoke $r6.<org.apache.http.RequestLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r7 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        $z1 = staticinvoke <org.apache.http.params.HttpProtocolParams: boolean useExpectContinue(org.apache.http.params.HttpParams)>($r7);

        if $z1 == 0 goto label2;

        $r8 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z2 = virtualinvoke r4.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r8);

        if $z2 != 0 goto label2;

        interfaceinvoke r1.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("Expect", "100-continue");

     label2:
        return;
    }
}
