abstract class android.view.GLES20Layer extends android.view.HardwareLayer
{
    android.view.GLES20Layer$Finalizer mFinalizer;
    int mLayer;

    void <init>()
    {
        android.view.GLES20Layer r0;

        r0 := @this: android.view.GLES20Layer;

        specialinvoke r0.<android.view.HardwareLayer: void <init>()>();

        return;
    }

    void <init>(int, int, boolean)
    {
        android.view.GLES20Layer r0;
        int i0, i1;
        boolean z0;

        r0 := @this: android.view.GLES20Layer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<android.view.HardwareLayer: void <init>(int,int,boolean)>(i0, i1, z0);

        return;
    }

    void clearStorage()
    {
        android.view.GLES20Layer r0;
        int $i0, $i1;

        r0 := @this: android.view.GLES20Layer;

        $i0 = r0.<android.view.GLES20Layer: int mLayer>;

        if $i0 == 0 goto label1;

        $i1 = r0.<android.view.GLES20Layer: int mLayer>;

        staticinvoke <android.view.GLES20Canvas: void nClearLayerTexture(int)>($i1);

     label1:
        return;
    }

    public boolean copyInto(android.graphics.Bitmap)
    {
        android.view.GLES20Layer r0;
        android.graphics.Bitmap r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.view.GLES20Layer;

        r1 := @parameter0: android.graphics.Bitmap;

        $i1 = r0.<android.view.GLES20Layer: int mLayer>;

        $i0 = r1.<android.graphics.Bitmap: int mNativeBitmap>;

        $z0 = staticinvoke <android.view.GLES20Canvas: boolean nCopyLayer(int,int)>($i1, $i0);

        return $z0;
    }

    public void destroy()
    {
        android.view.GLES20Layer r0;
        android.view.DisplayList $r1, $r4;
        android.view.GLES20Layer$Finalizer $r2, $r3;

        r0 := @this: android.view.GLES20Layer;

        $r1 = r0.<android.view.GLES20Layer: android.view.DisplayList mDisplayList>;

        if $r1 == null goto label1;

        $r4 = r0.<android.view.GLES20Layer: android.view.DisplayList mDisplayList>;

        virtualinvoke $r4.<android.view.DisplayList: void reset()>();

     label1:
        $r2 = r0.<android.view.GLES20Layer: android.view.GLES20Layer$Finalizer mFinalizer>;

        if $r2 == null goto label2;

        $r3 = r0.<android.view.GLES20Layer: android.view.GLES20Layer$Finalizer mFinalizer>;

        virtualinvoke $r3.<android.view.GLES20Layer$Finalizer: void destroy()>();

        r0.<android.view.GLES20Layer: android.view.GLES20Layer$Finalizer mFinalizer> = null;

     label2:
        r0.<android.view.GLES20Layer: int mLayer> = 0;

        return;
    }

    public int getLayer()
    {
        android.view.GLES20Layer r0;
        int $i0;

        r0 := @this: android.view.GLES20Layer;

        $i0 = r0.<android.view.GLES20Layer: int mLayer>;

        return $i0;
    }

    void setLayerPaint(android.graphics.Paint)
    {
        android.view.GLES20Layer r0;
        android.graphics.Paint r1;
        int i0, i1, $i2, $i3;
        android.graphics.ColorFilter $r2, $r3;

        r0 := @this: android.view.GLES20Layer;

        r1 := @parameter0: android.graphics.Paint;

        if r1 == null goto label2;

        $i3 = r0.<android.view.GLES20Layer: int mLayer>;

        $i2 = r1.<android.graphics.Paint: int mNativePaint>;

        staticinvoke <android.view.GLES20Canvas: void nSetLayerPaint(int,int)>($i3, $i2);

        i0 = r0.<android.view.GLES20Layer: int mLayer>;

        $r2 = virtualinvoke r1.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        if $r2 == null goto label3;

        $r3 = virtualinvoke r1.<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>();

        i1 = $r3.<android.graphics.ColorFilter: int nativeColorFilter>;

     label1:
        staticinvoke <android.view.GLES20Canvas: void nSetLayerColorFilter(int,int)>(i0, i1);

     label2:
        return;

     label3:
        i1 = 0;

        goto label1;
    }
}
