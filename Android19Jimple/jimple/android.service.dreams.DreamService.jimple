public class android.service.dreams.DreamService extends android.app.Service implements android.view.Window$Callback
{
    public static final java.lang.String DREAM_META_DATA;
    public static final java.lang.String DREAM_SERVICE;
    public static final java.lang.String SERVICE_INTERFACE;
    private final java.lang.String TAG;
    private boolean mDebug;
    private boolean mFinished;
    private boolean mFullscreen;
    private final android.os.Handler mHandler;
    private boolean mInteractive;
    private boolean mLowProfile;
    private android.service.dreams.IDreamManager mSandman;
    private boolean mScreenBright;
    private android.view.Window mWindow;
    private android.view.WindowManager mWindowManager;
    private android.os.IBinder mWindowToken;

    public void <init>()
    {
        android.service.dreams.DreamService r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r8, $r9;
        java.lang.Class $r2, $r6;
        java.lang.String $r3, $r7, $r10;
        android.os.Handler $r11;

        r0 := @this: android.service.dreams.DreamService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = class "android/service/dreams/DreamService";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<android.service.dreams.DreamService: java.lang.String TAG> = $r10;

        $r11 = new android.os.Handler;

        specialinvoke $r11.<android.os.Handler: void <init>()>();

        r0.<android.service.dreams.DreamService: android.os.Handler mHandler> = $r11;

        r0.<android.service.dreams.DreamService: boolean mInteractive> = 0;

        r0.<android.service.dreams.DreamService: boolean mLowProfile> = 1;

        r0.<android.service.dreams.DreamService: boolean mFullscreen> = 0;

        r0.<android.service.dreams.DreamService: boolean mScreenBright> = 1;

        r0.<android.service.dreams.DreamService: boolean mDebug> = 0;

        return;
    }

    static java.lang.String access$100(android.service.dreams.DreamService)
    {
        android.service.dreams.DreamService r0;
        java.lang.String $r1;

        r0 := @parameter0: android.service.dreams.DreamService;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        return $r1;
    }

    static void access$200(android.service.dreams.DreamService)
    {
        android.service.dreams.DreamService r0;

        r0 := @parameter0: android.service.dreams.DreamService;

        specialinvoke r0.<android.service.dreams.DreamService: void safelyFinish()>();

        return;
    }

    static void access$300(android.service.dreams.DreamService, android.os.IBinder)
    {
        android.service.dreams.DreamService r0;
        android.os.IBinder r1;

        r0 := @parameter0: android.service.dreams.DreamService;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<android.service.dreams.DreamService: void attach(android.os.IBinder)>(r1);

        return;
    }

    static android.os.Handler access$400(android.service.dreams.DreamService)
    {
        android.service.dreams.DreamService r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.service.dreams.DreamService;

        $r1 = r0.<android.service.dreams.DreamService: android.os.Handler mHandler>;

        return $r1;
    }

    static void access$500(android.service.dreams.DreamService)
    {
        android.service.dreams.DreamService r0;

        r0 := @parameter0: android.service.dreams.DreamService;

        specialinvoke r0.<android.service.dreams.DreamService: void detach()>();

        return;
    }

    private int applyFlags(int, int, int)
    {
        android.service.dreams.DreamService r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i3 = i2 ^ -1;

        $i5 = i0 & $i3;

        $i4 = i1 & i2;

        $i6 = $i5 | $i4;

        return $i6;
    }

    private void applySystemUiVisibilityFlags(int, int)
    {
        android.service.dreams.DreamService r0;
        int i0, i1, $i2, $i3;
        android.view.View r1;
        android.view.Window $r2, $r3;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        if $r2 != null goto label3;

        r1 = null;

     label1:
        if r1 == null goto label2;

        $i2 = virtualinvoke r1.<android.view.View: int getSystemUiVisibility()>();

        $i3 = specialinvoke r0.<android.service.dreams.DreamService: int applyFlags(int,int,int)>($i2, i0, i1);

        virtualinvoke r1.<android.view.View: void setSystemUiVisibility(int)>($i3);

     label2:
        return;

     label3:
        $r3 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        r1 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        goto label1;
    }

    private void applyWindowFlags(int, int)
    {
        android.service.dreams.DreamService r0;
        int i0, i1, $i2, $i3;
        android.view.WindowManager$LayoutParams r1;
        android.view.Window $r2, $r3, $r4, $r5;
        android.view.WindowManager $r6;
        android.view.View $r7;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        if $r2 == null goto label1;

        $r3 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        r1 = virtualinvoke $r3.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i2 = r1.<android.view.WindowManager$LayoutParams: int flags>;

        $i3 = specialinvoke r0.<android.service.dreams.DreamService: int applyFlags(int,int,int)>($i2, i0, i1);

        r1.<android.view.WindowManager$LayoutParams: int flags> = $i3;

        $r4 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r4.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r1);

        $r6 = r0.<android.service.dreams.DreamService: android.view.WindowManager mWindowManager>;

        $r5 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r7 = virtualinvoke $r5.<android.view.Window: android.view.View getDecorView()>();

        interfaceinvoke $r6.<android.view.WindowManager: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)>($r7, r1);

     label1:
        return;
    }

    private final void attach(android.os.IBinder)
    {
        android.service.dreams.DreamService r0;
        android.os.IBinder r1, $r5, $r46;
        android.view.WindowManager$LayoutParams r2, $r24;
        int i0, i2, $i5, $i6;
        short s1, s3;
        java.lang.Throwable r3, $r53;
        boolean z0, $z1, $z3, $z4, $z5, $z6, $z7;
        byte b4;
        java.lang.String r4, $r28, $r30, $r34, $r36, $r38, $r42, $r44, $r49, $r51, $r52;
        java.lang.Object[] r6;
        android.service.dreams.IDreamManager $r7;
        android.view.Window $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r17, $r18, $r20, $r22, $r32;
        android.graphics.drawable.ColorDrawable $r12;
        android.view.WindowManager $r16, $r21;
        android.view.View $r19;
        android.os.Handler $r23;
        android.service.dreams.DreamService$1 $r25;
        java.lang.Thread $r26, $r40;
        java.lang.StringBuilder $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r43, $r45, $r47, $r48, $r50;
        long $l8, $l10;
        java.lang.Integer $r41;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.os.IBinder;

        $r5 = r0.<android.service.dreams.DreamService: android.os.IBinder mWindowToken>;

        if $r5 == null goto label01;

        $r44 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach() called when already attached with token=");

        $r46 = r0.<android.service.dreams.DreamService: android.os.IBinder mWindowToken>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r46);

        $r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>($r44, $r51);

        return;

     label01:
        $z1 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z1 == 0 goto label02;

        $r38 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attached on thread ");

        $r40 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l10 = virtualinvoke $r40.<java.lang.Thread: long getId()>();

        $r48 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r38, $r49);

     label02:
        $r7 = r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mSandman>;

        if $r7 != null goto label03;

        specialinvoke r0.<android.service.dreams.DreamService: void loadSandman()>();

     label03:
        r0.<android.service.dreams.DreamService: android.os.IBinder mWindowToken> = r1;

        $r9 = staticinvoke <com.android.internal.policy.PolicyManager: android.view.Window makeNewWindow(android.content.Context)>(r0);

        r0.<android.service.dreams.DreamService: android.view.Window mWindow> = $r9;

        $r8 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r8.<android.view.Window: void setCallback(android.view.Window$Callback)>(r0);

        $r10 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r10.<android.view.Window: boolean requestFeature(int)>(1);

        $r11 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r12 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r12.<android.graphics.drawable.ColorDrawable: void <init>(int)>(-16777216);

        virtualinvoke $r11.<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r12);

        $r13 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r13.<android.view.Window: void setFormat(int)>(-1);

        $z3 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z3 == 0 goto label04;

        r4 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        r6 = newarray (java.lang.Object)[2];

        r6[0] = r1;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2023);

        r6[1] = $r41;

        $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attaching window token: %s to window of type %s", r6);

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>(r4, $r42);

     label04:
        $r14 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        r2 = virtualinvoke $r14.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r2.<android.view.WindowManager$LayoutParams: int type> = 2023;

        r2.<android.view.WindowManager$LayoutParams: android.os.IBinder token> = r1;

        r2.<android.view.WindowManager$LayoutParams: int windowAnimations> = 16974329;

        i0 = r2.<android.view.WindowManager$LayoutParams: int flags>;

        $z5 = r0.<android.service.dreams.DreamService: boolean mFullscreen>;

        if $z5 == 0 goto label12;

        s1 = 1024;

     label05:
        i2 = 4784385 | s1;

        $z4 = r0.<android.service.dreams.DreamService: boolean mScreenBright>;

        if $z4 == 0 goto label13;

        s3 = 128;

     label06:
        $i5 = s3 | i2;

        $i6 = i0 | $i5;

        r2.<android.view.WindowManager$LayoutParams: int flags> = $i6;

        $r15 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r15.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r2);

        $z6 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z6 == 0 goto label07;

        $r34 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created and attached window: ");

        $r32 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r34, $r36);

     label07:
        $r17 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        virtualinvoke $r17.<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)>(null, r1, "dream", 1);

        $r18 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r16 = virtualinvoke $r18.<android.view.Window: android.view.WindowManager getWindowManager()>();

        r0.<android.service.dreams.DreamService: android.view.WindowManager mWindowManager> = $r16;

        $z7 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z7 == 0 goto label08;

        $r28 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Window added on thread ");

        $r26 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l8 = virtualinvoke $r26.<java.lang.Thread: long getId()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r28, $r30);

     label08:
        z0 = r0.<android.service.dreams.DreamService: boolean mLowProfile>;

     label09:
        b4 = 0;

        if z0 == 0 goto label10;

        b4 = 1;

     label10:
        specialinvoke r0.<android.service.dreams.DreamService: void applySystemUiVisibilityFlags(int,int)>(b4, 1);

        $r21 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.WindowManager getWindowManager()>();

        $r22 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r19 = virtualinvoke $r22.<android.view.Window: android.view.View getDecorView()>();

        $r20 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r24 = virtualinvoke $r20.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        interfaceinvoke $r21.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r19, $r24);

     label11:
        $r23 = r0.<android.service.dreams.DreamService: android.os.Handler mHandler>;

        $r25 = new android.service.dreams.DreamService$1;

        specialinvoke $r25.<android.service.dreams.DreamService$1: void <init>(android.service.dreams.DreamService)>(r0);

        virtualinvoke $r23.<android.os.Handler: boolean post(java.lang.Runnable)>($r25);

        return;

     label12:
        s1 = 0;

        goto label05;

     label13:
        s3 = 0;

        goto label06;

     label14:
        $r53 := @caughtexception;

        r3 = $r53;

        $r52 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r52, "Crashed adding window view", r3);

        specialinvoke r0.<android.service.dreams.DreamService: void safelyFinish()>();

        return;

        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
    }

    private final void detach()
    {
        android.service.dreams.DreamService r0;
        java.lang.Throwable r1, r2, $r12, $r15;
        android.view.Window $r3, $r4;
        boolean $z0;
        android.view.WindowManager $r5;
        android.view.View $r6;
        android.view.WindowManagerGlobal $r7;
        android.os.IBinder $r8;
        java.lang.Class $r9;
        java.lang.String $r10, $r11, $r13, $r14;

        r0 := @this: android.service.dreams.DreamService;

        $r3 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        if $r3 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<android.service.dreams.DreamService: void onDreamingStopped()>();

     label2:
        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label3;

        $r11 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r11, "detach(): Removing window from window manager");

     label3:
        $r5 = r0.<android.service.dreams.DreamService: android.view.WindowManager mWindowManager>;

        $r4 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r6 = virtualinvoke $r4.<android.view.Window: android.view.View getDecorView()>();

        interfaceinvoke $r5.<android.view.WindowManager: void removeViewImmediate(android.view.View)>($r6);

        $r7 = staticinvoke <android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>();

        $r8 = r0.<android.service.dreams.DreamService: android.os.IBinder mWindowToken>;

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r7.<android.view.WindowManagerGlobal: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>($r8, $r10, "Dream");

     label4:
        r0.<android.service.dreams.DreamService: android.view.Window mWindow> = null;

        r0.<android.service.dreams.DreamService: android.os.IBinder mWindowToken> = null;

        return;

     label5:
        $r12 := @caughtexception;

        r1 = $r12;

        $r13 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r13, "Crashed in onDreamingStopped()", r1);

        goto label2;

     label6:
        $r15 := @caughtexception;

        r2 = $r15;

        $r14 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r14, "Crashed removing window view", r2);

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    private void finishInternal()
    {
        android.service.dreams.DreamService r0;
        java.lang.Throwable r1, $r12;
        boolean $z0, $z1, $z2;
        android.service.dreams.IDreamManager $r2, $r5;
        java.lang.String $r3, $r7, $r10, $r11;
        android.os.IBinder $r4;
        java.lang.StringBuilder $r6, $r8, $r9;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r7 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finishInternal() mFinished = ");

        $z2 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r7, $r10);

     label1:
        $z1 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        if $z1 == 0 goto label2;

        return;

     label2:
        r0.<android.service.dreams.DreamService: boolean mFinished> = 1;

        $r2 = r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mSandman>;

        if $r2 == null goto label6;

        $r5 = r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mSandman>;

        $r4 = r0.<android.service.dreams.DreamService: android.os.IBinder mWindowToken>;

        interfaceinvoke $r5.<android.service.dreams.IDreamManager: void finishSelf(android.os.IBinder)>($r4);

     label3:
        virtualinvoke r0.<android.service.dreams.DreamService: void stopSelf()>();

     label4:
        return;

     label5:
        $r12 := @caughtexception;

        r1 = $r12;

        $r11 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r11, "Crashed in finishInternal()", r1);

        return;

     label6:
        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r3, "No dream manager found");

     label7:
        goto label3;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    private boolean getSystemUiVisibilityFlagValue(int, boolean)
    {
        android.service.dreams.DreamService r0;
        int i0, $i1, $i2;
        boolean z0;
        android.view.View r1;
        android.view.Window $r2, $r3;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        if $r2 != null goto label2;

        r1 = null;

     label1:
        if r1 != null goto label3;

        return z0;

     label2:
        $r3 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        r1 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        goto label1;

     label3:
        $i1 = virtualinvoke r1.<android.view.View: int getSystemUiVisibility()>();

        $i2 = i0 & $i1;

        if $i2 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private boolean getWindowFlagValue(int, boolean)
    {
        android.service.dreams.DreamService r0;
        int i0, $i1, $i2;
        boolean z0;
        android.view.Window $r1, $r2;
        android.view.WindowManager$LayoutParams $r3;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        if $r1 != null goto label1;

        return z0;

     label1:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r3 = virtualinvoke $r2.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i1 = $r3.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private void loadSandman()
    {
        android.service.dreams.DreamService r0;
        android.os.IBinder $r1;
        android.service.dreams.IDreamManager $r2;

        r0 := @this: android.service.dreams.DreamService;

        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("dreams");

        $r2 = staticinvoke <android.service.dreams.IDreamManager$Stub: android.service.dreams.IDreamManager asInterface(android.os.IBinder)>($r1);

        r0.<android.service.dreams.DreamService: android.service.dreams.IDreamManager mSandman> = $r2;

        return;
    }

    private void safelyFinish()
    {
        android.service.dreams.DreamService r0;
        java.lang.Throwable r1, $r4;
        boolean $z0, $z1;
        java.lang.String $r2, $r3, $r5;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "safelyFinish()");

     label1:
        virtualinvoke r0.<android.service.dreams.DreamService: void finish()>();

     label2:
        $z1 = r0.<android.service.dreams.DreamService: boolean mFinished>;

        if $z1 != 0 goto label3;

        $r2 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>($r2, "Bad dream, did not call super.finish()");

        specialinvoke r0.<android.service.dreams.DreamService: void finishInternal()>();

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Crashed in safelyFinish()", r1);

        specialinvoke r0.<android.service.dreams.DreamService: void finishInternal()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label4;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.service.dreams.DreamService r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;
        android.view.Window $r2;
        java.lang.String $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Finishing on genericMotionEvent");

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void safelyFinish()>();

        return 1;

     label2:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        android.view.Window $r2;
        java.lang.String $r3, $r4;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z3 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z3 == 0 goto label1;

        $r4 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r4, "Finishing on keyEvent");

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void safelyFinish()>();

        return 1;

     label2:
        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i0 != 4 goto label4;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label3;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Finishing on back key");

     label3:
        specialinvoke r0.<android.service.dreams.DreamService: void safelyFinish()>();

        return 1;

     label4:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z1;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2;
        android.view.Window $r2;
        java.lang.String $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Finishing on keyShortcutEvent");

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void safelyFinish()>();

        return 1;

     label2:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        return $z1;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        return 0;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;
        android.view.Window $r2;
        java.lang.String $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Finishing on touchEvent");

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void safelyFinish()>();

        return 1;

     label2:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        android.service.dreams.DreamService r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;
        android.view.Window $r2;
        java.lang.String $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        if $z0 != 0 goto label2;

        $z2 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z2 == 0 goto label1;

        $r3 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r3, "Finishing on trackballEvent");

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void safelyFinish()>();

        return 1;

     label2:
        $r2 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $z1 = virtualinvoke $r2.<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.service.dreams.DreamService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r10, $r11, $r13, $r14, $r16, $r17, $r18;
        java.lang.String $r5, $r8, $r15, $r20;
        android.os.IBinder $r9, $r12;
        android.view.Window $r19;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        $r9 = r0.<android.service.dreams.DreamService: android.os.IBinder mWindowToken>;

        if $r9 != null goto label6;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("stopped");

     label1:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  window: ");

        $r19 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  flags:");

        $z0 = virtualinvoke r0.<android.service.dreams.DreamService: boolean isInteractive()>();

        if $z0 == 0 goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" interactive");

     label2:
        $z2 = virtualinvoke r0.<android.service.dreams.DreamService: boolean isLowProfile()>();

        if $z2 == 0 goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" lowprofile");

     label3:
        $z1 = virtualinvoke r0.<android.service.dreams.DreamService: boolean isFullscreen()>();

        if $z1 == 0 goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" fullscreen");

     label4:
        $z3 = virtualinvoke r0.<android.service.dreams.DreamService: boolean isScreenBright()>();

        if $z3 == 0 goto label5;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" bright");

     label5:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        return;

     label6:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("running (token=");

        $r12 = r0.<android.service.dreams.DreamService: android.os.IBinder mWindowToken>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        goto label1;
    }

    public android.view.View findViewById(int)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Window $r1;
        android.view.View $r2;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        $r2 = virtualinvoke $r1.<android.view.Window: android.view.View findViewById(int)>(i0);

        return $r2;
    }

    public final void finish()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "finish()");

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void finishInternal()>();

        return;
    }

    public android.view.Window getWindow()
    {
        android.service.dreams.DreamService r0;
        android.view.Window $r1;

        r0 := @this: android.service.dreams.DreamService;

        $r1 = r0.<android.service.dreams.DreamService: android.view.Window mWindow>;

        return $r1;
    }

    public android.view.WindowManager getWindowManager()
    {
        android.service.dreams.DreamService r0;
        android.view.WindowManager $r1;

        r0 := @this: android.service.dreams.DreamService;

        $r1 = r0.<android.service.dreams.DreamService: android.view.WindowManager mWindowManager>;

        return $r1;
    }

    public boolean isFullscreen()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mFullscreen>;

        return $z0;
    }

    public boolean isInteractive()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mInteractive>;

        return $z0;
    }

    public boolean isLowProfile()
    {
        android.service.dreams.DreamService r0;
        boolean $z0, $z1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mLowProfile>;

        $z1 = specialinvoke r0.<android.service.dreams.DreamService: boolean getSystemUiVisibilityFlagValue(int,boolean)>(1, $z0);

        return $z1;
    }

    public boolean isScreenBright()
    {
        android.service.dreams.DreamService r0;
        boolean $z0, $z1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mScreenBright>;

        $z1 = specialinvoke r0.<android.service.dreams.DreamService: boolean getWindowFlagValue(int,boolean)>(128, $z0);

        return $z1;
    }

    public void onActionModeFinished(android.view.ActionMode)
    {
        android.service.dreams.DreamService r0;
        android.view.ActionMode r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.ActionMode;

        return;
    }

    public void onActionModeStarted(android.view.ActionMode)
    {
        android.service.dreams.DreamService r0;
        android.view.ActionMode r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.ActionMode;

        return;
    }

    public void onAttachedToWindow()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        return;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.service.dreams.DreamService r0;
        android.content.Intent r1;
        boolean $z0;
        android.service.dreams.DreamService$DreamServiceWrapper $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.content.Intent;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onBind() intent = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r4, $r7);

     label1:
        $r2 = new android.service.dreams.DreamService$DreamServiceWrapper;

        specialinvoke $r2.<android.service.dreams.DreamService$DreamServiceWrapper: void <init>(android.service.dreams.DreamService,android.service.dreams.DreamService$1)>(r0, null);

        return $r2;
    }

    public void onContentChanged()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        return;
    }

    public void onCreate()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r5;
        java.lang.String $r2, $r6;
        java.lang.Thread $r4;
        long $l0;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCreate() on thread ");

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l0 = virtualinvoke $r4.<java.lang.Thread: long getId()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r2, $r6);

     label1:
        specialinvoke r0.<android.app.Service: void onCreate()>();

        return;
    }

    public boolean onCreatePanelMenu(int, android.view.Menu)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Menu r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        return 0;
    }

    public android.view.View onCreatePanelView(int)
    {
        android.service.dreams.DreamService r0;
        int i0;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        return null;
    }

    public void onDestroy()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "onDestroy()");

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void detach()>();

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        return;
    }

    public void onDetachedFromWindow()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        return;
    }

    public void onDreamingStarted()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "onDreamingStarted()");

     label1:
        return;
    }

    public void onDreamingStopped()
    {
        android.service.dreams.DreamService r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: android.service.dreams.DreamService;

        $z0 = r0.<android.service.dreams.DreamService: boolean mDebug>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.service.dreams.DreamService: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>($r1, "onDreamingStopped()");

     label1:
        return;
    }

    public boolean onMenuItemSelected(int, android.view.MenuItem)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.MenuItem r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.MenuItem;

        return 0;
    }

    public boolean onMenuOpened(int, android.view.Menu)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Menu r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        return 0;
    }

    public void onPanelClosed(int, android.view.Menu)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Menu r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        return;
    }

    public boolean onPreparePanel(int, android.view.View, android.view.Menu)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.View r1;
        android.view.Menu r2;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.Menu;

        return 0;
    }

    public boolean onSearchRequested()
    {
        android.service.dreams.DreamService r0;

        r0 := @this: android.service.dreams.DreamService;

        return 0;
    }

    public void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
    {
        android.service.dreams.DreamService r0;
        android.view.WindowManager$LayoutParams r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.WindowManager$LayoutParams;

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        return;
    }

    public android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
    {
        android.service.dreams.DreamService r0;
        android.view.ActionMode$Callback r1;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.ActionMode$Callback;

        return null;
    }

    public void setContentView(int)
    {
        android.service.dreams.DreamService r0;
        int i0;
        android.view.Window $r1;

        r0 := @this: android.service.dreams.DreamService;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        virtualinvoke $r1.<android.view.Window: void setContentView(int)>(i0);

        return;
    }

    public void setContentView(android.view.View)
    {
        android.service.dreams.DreamService r0;
        android.view.View r1;
        android.view.Window $r2;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void setContentView(android.view.View)>(r1);

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.service.dreams.DreamService r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.Window $r3;

        r0 := @this: android.service.dreams.DreamService;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ViewGroup$LayoutParams;

        $r3 = virtualinvoke r0.<android.service.dreams.DreamService: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, r2);

        return;
    }

    public void setDebug(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        r0.<android.service.dreams.DreamService: boolean mDebug> = z0;

        return;
    }

    public void setFullscreen(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0, $z1;
        short s0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        r0.<android.service.dreams.DreamService: boolean mFullscreen> = z0;

        $z1 = r0.<android.service.dreams.DreamService: boolean mFullscreen>;

        if $z1 == 0 goto label2;

        s0 = 1024;

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void applyWindowFlags(int,int)>(s0, 1024);

        return;

     label2:
        s0 = 0;

        goto label1;
    }

    public void setInteractive(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        r0.<android.service.dreams.DreamService: boolean mInteractive> = z0;

        return;
    }

    public void setLowProfile(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0, $z1;
        byte b0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        r0.<android.service.dreams.DreamService: boolean mLowProfile> = z0;

        $z1 = r0.<android.service.dreams.DreamService: boolean mLowProfile>;

        if $z1 == 0 goto label2;

        b0 = 1;

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void applySystemUiVisibilityFlags(int,int)>(b0, 1);

        return;

     label2:
        b0 = 0;

        goto label1;
    }

    public void setScreenBright(boolean)
    {
        android.service.dreams.DreamService r0;
        boolean z0, $z1;
        short s0;

        r0 := @this: android.service.dreams.DreamService;

        z0 := @parameter0: boolean;

        r0.<android.service.dreams.DreamService: boolean mScreenBright> = z0;

        $z1 = r0.<android.service.dreams.DreamService: boolean mScreenBright>;

        if $z1 == 0 goto label2;

        s0 = 128;

     label1:
        specialinvoke r0.<android.service.dreams.DreamService: void applyWindowFlags(int,int)>(s0, 128);

        return;

     label2:
        s0 = 0;

        goto label1;
    }

    public static void <clinit>()
    {
        <android.service.dreams.DreamService: java.lang.String SERVICE_INTERFACE> = "android.service.dreams.DreamService";

        <android.service.dreams.DreamService: java.lang.String DREAM_SERVICE> = "dreams";

        <android.service.dreams.DreamService: java.lang.String DREAM_META_DATA> = "android.service.dream";

        return;
    }
}
