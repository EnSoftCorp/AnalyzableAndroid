public class android.graphics.drawable.AnimatedRotateDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback, java.lang.Runnable, android.graphics.drawable.Animatable
{
    private float mCurrentDegrees;
    private float mIncrement;
    private boolean mMutated;
    private boolean mRunning;
    private android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState;

    public void <init>()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        specialinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources)>(null, null);

        return;
    }

    private void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState, android.content.res.Resources)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState r1, $r3;
        android.content.res.Resources r2;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = new android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState;

        specialinvoke $r3.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.graphics.drawable.AnimatedRotateDrawable,android.content.res.Resources)>(r1, r0, r2);

        r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState> = $r3;

        specialinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void init()>();

        return;
    }

    void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState, android.content.res.Resources, android.graphics.drawable.AnimatedRotateDrawable$1)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.AnimatedRotateDrawable$1 r3;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.AnimatedRotateDrawable$1;

        specialinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources)>(r1, r2);

        return;
    }

    private void init()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState r1;
        android.graphics.drawable.Drawable r2;
        int $i0;
        float $f0, $f1;
        boolean $z0;
        android.graphics.drawable.BitmapDrawable $r3;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $i0 = r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int mFramesCount>;

        $f0 = (float) $i0;

        $f1 = 360.0F / $f0;

        r0.<android.graphics.drawable.AnimatedRotateDrawable: float mIncrement> = $f1;

        r2 = r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        if r2 == null goto label1;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>(1);

        $z0 = r2 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 == 0 goto label1;

        $r3 = (android.graphics.drawable.BitmapDrawable) r2;

        virtualinvoke $r3.<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)>(1);

     label1:
        return;
    }

    private void nextFrame()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        long $l0, $l2, $l3;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;
        int $i1;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void unscheduleSelf(java.lang.Runnable)>(r0);

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $i1 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int mFrameDuration>;

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void scheduleSelf(java.lang.Runnable,long)>(r0, $l3);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState r2;
        android.graphics.drawable.Drawable r3;
        android.graphics.Rect r4;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        boolean $z0, $z1;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        r2 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        r3 = r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        r4 = virtualinvoke r3.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i4 = r4.<android.graphics.Rect: int right>;

        $i3 = r4.<android.graphics.Rect: int left>;

        i1 = $i4 - $i3;

        $i6 = r4.<android.graphics.Rect: int bottom>;

        $i5 = r4.<android.graphics.Rect: int top>;

        i2 = $i6 - $i5;

        $z1 = r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: boolean mPivotXRel>;

        if $z1 == 0 goto label3;

        $f10 = (float) i1;

        $f8 = r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: float mPivotX>;

        f0 = $f10 * $f8;

     label1:
        $z0 = r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: boolean mPivotYRel>;

        if $z0 == 0 goto label4;

        $f9 = (float) i2;

        $f6 = r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: float mPivotY>;

        f1 = $f9 * $f6;

     label2:
        $f7 = r0.<android.graphics.drawable.AnimatedRotateDrawable: float mCurrentDegrees>;

        $i7 = r4.<android.graphics.Rect: int left>;

        $f2 = (float) $i7;

        $f4 = f0 + $f2;

        $i8 = r4.<android.graphics.Rect: int top>;

        $f3 = (float) $i8;

        $f5 = f1 + $f3;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f7, $f4, $f5);

        virtualinvoke r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

        return;

     label3:
        f0 = r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: float mPivotX>;

        goto label1;

     label4:
        f1 = r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: float mPivotY>;

        goto label2;
    }

    public int getAlpha()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getAlpha()>();

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1, $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $i1 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        $r2 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        $i3 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $i4 = $i2 | $i3;

        return $i4;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1, $r2, $r3;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $z0 = virtualinvoke $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: boolean canConstantState()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: int getChangingConfigurations()>();

        $r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int mChangingConfigurations> = $i0;

        $r3 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        return $r3;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        return $r2;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;
        android.graphics.drawable.Drawable $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r2;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4;
        android.util.TypedValue r5, r6;
        boolean z0, z1;
        float f0, f1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8;
        android.graphics.drawable.Drawable r7;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState r8;
        int[] $r9;
        java.lang.StringBuilder $r10, $r12, $r13;
        java.lang.String $r11, $r14;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        $r9 = <com.android.internal.R$styleable: int[] AnimatedRotateDrawable>;

        r4 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r9);

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>(r1, r2, r4, 0);

        r5 = virtualinvoke r4.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(2);

        $i3 = r5.<android.util.TypedValue: int type>;

        if $i3 != 6 goto label08;

        z0 = 1;

     label01:
        if z0 == 0 goto label09;

        f0 = virtualinvoke r5.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

     label02:
        r6 = virtualinvoke r4.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(3);

        $i4 = r6.<android.util.TypedValue: int type>;

        if $i4 != 6 goto label10;

        z1 = 1;

     label03:
        if z1 == 0 goto label11;

        f1 = virtualinvoke r6.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

     label04:
        $i6 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(5, 12);

        virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void setFramesCount(int)>($i6);

        $i5 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(4, 150);

        virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void setFramesDuration(int)>($i5);

        i0 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        r7 = null;

        if i0 <= 0 goto label05;

        r7 = virtualinvoke r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

     label05:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label06:
        i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label12;

        if i2 != 3 goto label07;

        $i8 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i8 <= i1 goto label12;

     label07:
        if i2 != 2 goto label06;

        r7 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r1, r2, r3);

        if r7 != null goto label06;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad element under <animated-rotate>: ");

        $r11 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", $r14);

        goto label06;

     label08:
        z0 = 0;

        goto label01;

     label09:
        f0 = virtualinvoke r5.<android.util.TypedValue: float getFloat()>();

        goto label02;

     label10:
        z1 = 0;

        goto label03;

     label11:
        f1 = virtualinvoke r6.<android.util.TypedValue: float getFloat()>();

        goto label04;

     label12:
        if r7 != null goto label13;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", "No drawable specified for <animated-rotate>");

     label13:
        r8 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        r8.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable> = r7;

        r8.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: boolean mPivotXRel> = z0;

        r8.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: float mPivotX> = f0;

        r8.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: boolean mPivotYRel> = z1;

        r8.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: float mPivotY> = f1;

        specialinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void init()>();

        if r7 == null goto label14;

        virtualinvoke r7.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label14:
        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.Drawable r1;
        android.graphics.drawable.Drawable$Callback r2;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 = virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if r2 == null goto label1;

        interfaceinvoke r2.<android.graphics.drawable.Drawable$Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>(r0);

     label1:
        return;
    }

    public boolean isRunning()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $z0 = r0.<android.graphics.drawable.AnimatedRotateDrawable: boolean mRunning>;

        return $z0;
    }

    public boolean isStateful()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean isStateful()>();

        return $z0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1, $r3;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r2;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $z0 = r0.<android.graphics.drawable.AnimatedRotateDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        r0.<android.graphics.drawable.AnimatedRotateDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void run()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $f1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: float mCurrentDegrees>;

        $f0 = r0.<android.graphics.drawable.AnimatedRotateDrawable: float mIncrement>;

        $f2 = $f1 + $f0;

        r0.<android.graphics.drawable.AnimatedRotateDrawable: float mCurrentDegrees> = $f2;

        $f5 = r0.<android.graphics.drawable.AnimatedRotateDrawable: float mCurrentDegrees>;

        $f3 = r0.<android.graphics.drawable.AnimatedRotateDrawable: float mIncrement>;

        $f4 = 360.0F - $f3;

        $b0 = $f5 cmpl $f4;

        if $b0 <= 0 goto label1;

        r0.<android.graphics.drawable.AnimatedRotateDrawable: float mCurrentDegrees> = 0.0F;

     label1:
        virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void invalidateSelf()>();

        specialinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void nextFrame()>();

        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0;
        android.graphics.drawable.Drawable$Callback r3;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        r3 = virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if r3 == null goto label1;

        interfaceinvoke r3.<android.graphics.drawable.Drawable$Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>(r0, r2, l0);

     label1:
        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        int i0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r3 = $r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public void setFramesCount(int)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        int i0, $i1;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1, $r2;
        float $f0, $f1;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int mFramesCount> = i0;

        $r2 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $i1 = $r2.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int mFramesCount>;

        $f0 = (float) $i1;

        $f1 = 360.0F / $f0;

        r0.<android.graphics.drawable.AnimatedRotateDrawable: float mIncrement> = $f1;

        return;
    }

    public void setFramesDuration(int)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        int i0;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: int mFrameDuration> = i0;

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        boolean z0, z1, z2;
        android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState mState>;

        $r2 = $r1.<android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        z2 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        if z0 == 0 goto label3;

        if z2 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        r0.<android.graphics.drawable.AnimatedRotateDrawable: float mCurrentDegrees> = 0.0F;

        specialinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void nextFrame()>();

     label2:
        return z2;

     label3:
        virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void unscheduleSelf(java.lang.Runnable)>(r0);

        return z2;
    }

    public void start()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        boolean $z0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        $z0 = r0.<android.graphics.drawable.AnimatedRotateDrawable: boolean mRunning>;

        if $z0 != 0 goto label1;

        r0.<android.graphics.drawable.AnimatedRotateDrawable: boolean mRunning> = 1;

        specialinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void nextFrame()>();

     label1:
        return;
    }

    public void stop()
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r0.<android.graphics.drawable.AnimatedRotateDrawable: boolean mRunning> = 0;

        virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: void unscheduleSelf(java.lang.Runnable)>(r0);

        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.AnimatedRotateDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        android.graphics.drawable.Drawable$Callback r3;

        r0 := @this: android.graphics.drawable.AnimatedRotateDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        r3 = virtualinvoke r0.<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if r3 == null goto label1;

        interfaceinvoke r3.<android.graphics.drawable.Drawable$Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>(r0, r2);

     label1:
        return;
    }
}
