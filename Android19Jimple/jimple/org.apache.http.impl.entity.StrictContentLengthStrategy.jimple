public class org.apache.http.impl.entity.StrictContentLengthStrategy extends java.lang.Object implements org.apache.http.entity.ContentLengthStrategy
{

    public void <init>()
    {
        org.apache.http.impl.entity.StrictContentLengthStrategy r0;

        r0 := @this: org.apache.http.impl.entity.StrictContentLengthStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long determineLength(org.apache.http.HttpMessage) throws org.apache.http.HttpException
    {
        org.apache.http.impl.entity.StrictContentLengthStrategy r0;
        org.apache.http.HttpMessage r1;
        long l0, l1;
        org.apache.http.Header r2, r3;
        java.lang.String r4, r6, $r7, $r8, $r14, $r23, $r28;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r9, $r11, $r12, $r16, $r19, $r22, $r24, $r25, $r27;
        org.apache.http.ProtocolException $r10, $r17, $r26;
        org.apache.http.ProtocolVersion $r13, $r18;
        org.apache.http.HttpVersion $r15;
        java.lang.IllegalArgumentException $r20;
        java.lang.NumberFormatException $r21;

        r0 := @this: org.apache.http.impl.entity.StrictContentLengthStrategy;

        r1 := @parameter0: org.apache.http.HttpMessage;

        l0 = -1L;

        if r1 != null goto label1;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP message may not be null");

        throw $r20;

     label1:
        r2 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Transfer-Encoding");

        r3 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Length");

        if r2 == null goto label5;

        r6 = interfaceinvoke r2.<org.apache.http.Header: java.lang.String getValue()>();

        $r7 = "chunked";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r15 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z2 = virtualinvoke $r13.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r15);

        if $z2 == 0 goto label2;

        $r17 = new org.apache.http.ProtocolException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Chunked transfer encoding not allowed for ");

        $r18 = interfaceinvoke r1.<org.apache.http.HttpMessage: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label2:
        l0 = -2L;

     label3:
        return l0;

     label4:
        $r8 = "identity";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r6);

        if $z1 != 0 goto label3;

        $r10 = new org.apache.http.ProtocolException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported transfer encoding: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label5:
        if r3 == null goto label3;

        r4 = interfaceinvoke r3.<org.apache.http.Header: java.lang.String getValue()>();

     label6:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r4);

     label7:
        return l1;

     label8:
        $r21 := @caughtexception;

        $r26 = new org.apache.http.ProtocolException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content length: ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r28);

        throw $r26;

        catch java.lang.NumberFormatException from label6 to label7 with label8;
    }
}
