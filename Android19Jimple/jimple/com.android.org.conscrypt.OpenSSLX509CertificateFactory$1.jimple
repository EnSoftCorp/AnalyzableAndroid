class com.android.org.conscrypt.OpenSSLX509CertificateFactory$1 extends com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser
{
    final com.android.org.conscrypt.OpenSSLX509CertificateFactory this$0;

    void <init>(com.android.org.conscrypt.OpenSSLX509CertificateFactory)
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$1 r0;
        com.android.org.conscrypt.OpenSSLX509CertificateFactory r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$1;

        r1 := @parameter0: com.android.org.conscrypt.OpenSSLX509CertificateFactory;

        r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$1: com.android.org.conscrypt.OpenSSLX509CertificateFactory this$0> = r1;

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$Parser: void <init>(com.android.org.conscrypt.OpenSSLX509CertificateFactory$1)>(null);

        return;
    }

    public java.util.List fromPkcs7DerInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$1 r0;
        java.io.InputStream r1;
        java.util.List $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$1;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <com.android.org.conscrypt.OpenSSLX509Certificate: java.util.List fromPkcs7DerInputStream(java.io.InputStream)>(r1);

        return $r2;
    }

    public java.util.List fromPkcs7PemInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$1 r0;
        java.io.InputStream r1;
        java.util.List $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$1;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <com.android.org.conscrypt.OpenSSLX509Certificate: java.util.List fromPkcs7PemInputStream(java.io.InputStream)>(r1);

        return $r2;
    }

    public com.android.org.conscrypt.OpenSSLX509Certificate fromX509DerInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$1 r0;
        java.io.InputStream r1;
        com.android.org.conscrypt.OpenSSLX509Certificate $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$1;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <com.android.org.conscrypt.OpenSSLX509Certificate: com.android.org.conscrypt.OpenSSLX509Certificate fromX509DerInputStream(java.io.InputStream)>(r1);

        return $r2;
    }

    public volatile java.lang.Object fromX509DerInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$1 r0;
        java.io.InputStream r1;
        com.android.org.conscrypt.OpenSSLX509Certificate $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$1;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$1: com.android.org.conscrypt.OpenSSLX509Certificate fromX509DerInputStream(java.io.InputStream)>(r1);

        return $r2;
    }

    public com.android.org.conscrypt.OpenSSLX509Certificate fromX509PemInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$1 r0;
        java.io.InputStream r1;
        com.android.org.conscrypt.OpenSSLX509Certificate $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$1;

        r1 := @parameter0: java.io.InputStream;

        $r2 = staticinvoke <com.android.org.conscrypt.OpenSSLX509Certificate: com.android.org.conscrypt.OpenSSLX509Certificate fromX509PemInputStream(java.io.InputStream)>(r1);

        return $r2;
    }

    public volatile java.lang.Object fromX509PemInputStream(java.io.InputStream) throws com.android.org.conscrypt.OpenSSLX509CertificateFactory$ParsingException
    {
        com.android.org.conscrypt.OpenSSLX509CertificateFactory$1 r0;
        java.io.InputStream r1;
        com.android.org.conscrypt.OpenSSLX509Certificate $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertificateFactory$1;

        r1 := @parameter0: java.io.InputStream;

        $r2 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509CertificateFactory$1: com.android.org.conscrypt.OpenSSLX509Certificate fromX509PemInputStream(java.io.InputStream)>(r1);

        return $r2;
    }
}
