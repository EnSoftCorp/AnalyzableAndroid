class java.util.Collections$SingletonMap$1 extends java.util.AbstractSet
{
    final java.util.Collections$SingletonMap this$0;

    void <init>(java.util.Collections$SingletonMap)
    {
        java.util.Collections$SingletonMap$1 r0;
        java.util.Collections$SingletonMap r1;

        r0 := @this: java.util.Collections$SingletonMap$1;

        r1 := @parameter0: java.util.Collections$SingletonMap;

        r0.<java.util.Collections$SingletonMap$1: java.util.Collections$SingletonMap this$0> = r1;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        java.util.Collections$SingletonMap$1 r0;
        java.lang.Object r1, $r4, $r6;
        boolean z0, z1, z2, z3;
        java.util.Map$Entry r2;
        java.util.Collections$SingletonMap $r3, $r5;

        r0 := @this: java.util.Collections$SingletonMap$1;

        r1 := @parameter0: java.lang.Object;

        z0 = r1 instanceof java.util.Map$Entry;

        z1 = 0;

        if z0 == 0 goto label1;

        r2 = (java.util.Map$Entry) r1;

        $r3 = r0.<java.util.Collections$SingletonMap$1: java.util.Collections$SingletonMap this$0>;

        $r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        z2 = virtualinvoke $r3.<java.util.Collections$SingletonMap: boolean containsKey(java.lang.Object)>($r4);

        z1 = 0;

        if z2 == 0 goto label1;

        $r5 = r0.<java.util.Collections$SingletonMap$1: java.util.Collections$SingletonMap this$0>;

        $r6 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        z3 = virtualinvoke $r5.<java.util.Collections$SingletonMap: boolean containsValue(java.lang.Object)>($r6);

        z1 = 0;

        if z3 == 0 goto label1;

        z1 = 1;

     label1:
        return z1;
    }

    public java.util.Iterator iterator()
    {
        java.util.Collections$SingletonMap$1 r0;
        java.util.Collections$SingletonMap$1$1 $r1;

        r0 := @this: java.util.Collections$SingletonMap$1;

        $r1 = new java.util.Collections$SingletonMap$1$1;

        specialinvoke $r1.<java.util.Collections$SingletonMap$1$1: void <init>(java.util.Collections$SingletonMap$1)>(r0);

        return $r1;
    }

    public int size()
    {
        java.util.Collections$SingletonMap$1 r0;

        r0 := @this: java.util.Collections$SingletonMap$1;

        return 1;
    }
}
