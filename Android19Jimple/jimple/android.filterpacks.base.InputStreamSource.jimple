public class android.filterpacks.base.InputStreamSource extends android.filterfw.core.Filter
{
    private java.io.InputStream mInputStream;
    private android.filterfw.core.MutableFrameFormat mOutputFormat;
    private java.lang.String mTarget;

    public void <init>(java.lang.String)
    {
        android.filterpacks.base.InputStreamSource r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.base.InputStreamSource;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.base.InputStreamSource: android.filterfw.core.MutableFrameFormat mOutputFormat> = null;

        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.base.InputStreamSource r0;
        android.filterfw.core.FilterContext r1;
        int i0, i1;
        java.io.ByteArrayOutputStream r2, $r7;
        java.io.IOException r3, $r13;
        byte[] r4, $r9;
        java.nio.ByteBuffer r5;
        android.filterfw.core.Frame r6;
        java.io.InputStream $r8;
        android.filterfw.core.MutableFrameFormat $r10, $r12;
        android.filterfw.core.FrameManager $r11;
        java.lang.StringBuilder $r15, $r18, $r19, $r20;
        java.lang.RuntimeException $r16;
        java.lang.String $r17, $r21;

        r0 := @this: android.filterpacks.base.InputStreamSource;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        i0 = 0;

     label1:
        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = $r7;

        r4 = newarray (byte)[1024];

     label2:
        $r8 = r0.<android.filterpacks.base.InputStreamSource: java.io.InputStream mInputStream>;

        i1 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>(r4);

     label3:
        if i1 <= 0 goto label6;

     label4:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r4, 0, i1);

     label5:
        i0 = i0 + i1;

        goto label2;

     label6:
        $r9 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r9);

     label7:
        $r10 = r0.<android.filterpacks.base.InputStreamSource: android.filterfw.core.MutableFrameFormat mOutputFormat>;

        virtualinvoke $r10.<android.filterfw.core.MutableFrameFormat: void setDimensions(int)>(i0);

        $r11 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        $r12 = r0.<android.filterpacks.base.InputStreamSource: android.filterfw.core.MutableFrameFormat mOutputFormat>;

        r6 = virtualinvoke $r11.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>($r12);

        virtualinvoke r6.<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer)>(r5);

        virtualinvoke r0.<android.filterpacks.base.InputStreamSource: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("data", r6);

        virtualinvoke r6.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        virtualinvoke r0.<android.filterpacks.base.InputStreamSource: void closeOutputPort(java.lang.String)>("data");

        return;

     label8:
        $r13 := @caughtexception;

        r3 = $r13;

        $r16 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("InputStreamSource: Could not read stream: ");

        $r17 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>($r21);

        throw $r16;

        catch java.io.IOException from label1 to label2 with label8;
        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public void setupPorts()
    {
        android.filterpacks.base.InputStreamSource r0;
        int i0;
        java.lang.String $r1;
        android.filterfw.core.MutableFrameFormat $r2, $r3, $r4;

        r0 := @this: android.filterpacks.base.InputStreamSource;

        $r1 = r0.<android.filterpacks.base.InputStreamSource: java.lang.String mTarget>;

        i0 = staticinvoke <android.filterfw.core.FrameFormat: int readTargetString(java.lang.String)>($r1);

        $r2 = r0.<android.filterpacks.base.InputStreamSource: android.filterfw.core.MutableFrameFormat mOutputFormat>;

        if $r2 != null goto label1;

        $r4 = staticinvoke <android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createByteFormat(int)>(i0);

        r0.<android.filterpacks.base.InputStreamSource: android.filterfw.core.MutableFrameFormat mOutputFormat> = $r4;

     label1:
        $r3 = r0.<android.filterpacks.base.InputStreamSource: android.filterfw.core.MutableFrameFormat mOutputFormat>;

        virtualinvoke r0.<android.filterpacks.base.InputStreamSource: void addOutputPort(java.lang.String,android.filterfw.core.FrameFormat)>("data", $r3);

        return;
    }
}
