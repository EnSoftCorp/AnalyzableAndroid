public class android.net.http.RequestQueue extends java.lang.Object implements android.net.http.RequestFeeder
{
    private static final int CONNECTION_COUNT;
    private final android.net.http.RequestQueue$ActivePool mActivePool;
    private final android.net.ConnectivityManager mConnectivityManager;
    private final android.content.Context mContext;
    private final java.util.LinkedHashMap mPending;
    private android.content.BroadcastReceiver mProxyChangeReceiver;
    private org.apache.http.HttpHost mProxyHost;

    public void <init>(android.content.Context)
    {
        android.net.http.RequestQueue r0;
        android.content.Context r1;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.net.http.RequestQueue: void <init>(android.content.Context,int)>(r1, 4);

        return;
    }

    public void <init>(android.content.Context, int)
    {
        android.net.http.RequestQueue r0;
        android.content.Context r1;
        int i0;
        java.util.LinkedHashMap $r2;
        android.net.http.RequestQueue$ActivePool $r3, $r4;
        java.lang.Object $r5;
        android.net.ConnectivityManager $r6;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost> = null;

        r0.<android.net.http.RequestQueue: android.content.Context mContext> = r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int)>(32);

        r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending> = $r2;

        $r3 = new android.net.http.RequestQueue$ActivePool;

        specialinvoke $r3.<android.net.http.RequestQueue$ActivePool: void <init>(android.net.http.RequestQueue,int)>(r0, i0);

        r0.<android.net.http.RequestQueue: android.net.http.RequestQueue$ActivePool mActivePool> = $r3;

        $r4 = r0.<android.net.http.RequestQueue: android.net.http.RequestQueue$ActivePool mActivePool>;

        virtualinvoke $r4.<android.net.http.RequestQueue$ActivePool: void startup()>();

        $r5 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r6 = (android.net.ConnectivityManager) $r5;

        r0.<android.net.http.RequestQueue: android.net.ConnectivityManager mConnectivityManager> = $r6;

        return;
    }

    static android.content.Context access$000(android.net.http.RequestQueue)
    {
        android.net.http.RequestQueue r0;
        android.content.Context $r1;

        r0 := @parameter0: android.net.http.RequestQueue;

        $r1 = r0.<android.net.http.RequestQueue: android.content.Context mContext>;

        return $r1;
    }

    static org.apache.http.HttpHost access$100(android.net.http.RequestQueue)
    {
        android.net.http.RequestQueue r0;
        org.apache.http.HttpHost $r1;

        r0 := @parameter0: android.net.http.RequestQueue;

        $r1 = r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost>;

        return $r1;
    }

    static org.apache.http.HttpHost access$200(android.net.http.RequestQueue, org.apache.http.HttpHost)
    {
        android.net.http.RequestQueue r0;
        org.apache.http.HttpHost r1, $r2;

        r0 := @parameter0: android.net.http.RequestQueue;

        r1 := @parameter1: org.apache.http.HttpHost;

        $r2 = specialinvoke r0.<android.net.http.RequestQueue: org.apache.http.HttpHost determineHost(org.apache.http.HttpHost)>(r1);

        return $r2;
    }

    static void access$300(android.net.http.RequestQueue)
    {
        android.net.http.RequestQueue r0;

        r0 := @parameter0: android.net.http.RequestQueue;

        specialinvoke r0.<android.net.http.RequestQueue: void setProxyConfig()>();

        return;
    }

    private org.apache.http.HttpHost determineHost(org.apache.http.HttpHost)
    {
        android.net.http.RequestQueue r0;
        org.apache.http.HttpHost r1, $r2, $r5;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: org.apache.http.HttpHost;

        $r2 = r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost>;

        if $r2 == null goto label1;

        $r3 = "https";

        $r4 = virtualinvoke r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

     label1:
        return r1;

     label2:
        $r5 = r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost>;

        return $r5;
    }

    private android.net.http.Request removeFirst(java.util.LinkedHashMap)
    {
        android.net.http.RequestQueue r0;
        java.util.LinkedHashMap r1;
        java.util.Iterator r2;
        boolean z0, $z1;
        android.net.http.Request r3;
        java.util.Map$Entry r4;
        java.util.LinkedList r5;
        java.util.Set $r6;
        java.lang.Object $r7, $r8, $r9, $r10;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: java.util.LinkedHashMap;

        $r6 = virtualinvoke r1.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        r3 = null;

        if z0 == 0 goto label1;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (java.util.LinkedList) $r8;

        $r9 = virtualinvoke r5.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r3 = (android.net.http.Request) $r9;

        $z1 = virtualinvoke r5.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r1.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r10);

     label1:
        return r3;
    }

    private void setProxyConfig()
    {
        android.net.http.RequestQueue r0;
        java.lang.Throwable r1, $r9;
        android.net.NetworkInfo r2;
        java.lang.String r3;
        android.net.ConnectivityManager $r4;
        android.content.Context $r5, $r8;
        android.net.http.RequestQueue$ActivePool $r6;
        org.apache.http.HttpHost $r7;
        int $i0, $i1;

        r0 := @this: android.net.http.RequestQueue;

        entermonitor r0;

     label01:
        $r4 = r0.<android.net.http.RequestQueue: android.net.ConnectivityManager mConnectivityManager>;

        r2 = virtualinvoke $r4.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label02:
        if r2 == null goto label05;

     label03:
        $i1 = virtualinvoke r2.<android.net.NetworkInfo: int getType()>();

        if $i1 != 1 goto label05;

        r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost> = null;

     label04:
        exitmonitor r0;

        return;

     label05:
        $r5 = r0.<android.net.http.RequestQueue: android.content.Context mContext>;

        r3 = staticinvoke <android.net.Proxy: java.lang.String getHost(android.content.Context)>($r5);

     label06:
        if r3 != null goto label10;

     label07:
        r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost> = null;

     label08:
        goto label04;

     label09:
        $r9 := @caughtexception;

        r1 = $r9;

        exitmonitor r0;

        throw r1;

     label10:
        $r6 = r0.<android.net.http.RequestQueue: android.net.http.RequestQueue$ActivePool mActivePool>;

        virtualinvoke $r6.<android.net.http.RequestQueue$ActivePool: void disablePersistence()>();

        $r7 = new org.apache.http.HttpHost;

        $r8 = r0.<android.net.http.RequestQueue: android.content.Context mContext>;

        $i0 = staticinvoke <android.net.Proxy: int getPort(android.content.Context)>($r8);

        specialinvoke $r7.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>(r3, $i0, "http");

        r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost> = $r7;

     label11:
        goto label04;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    public void disablePlatformNotifications()
    {
        android.net.http.RequestQueue r0;
        java.lang.Throwable r1, $r5;
        android.content.BroadcastReceiver $r2, $r3;
        android.content.Context $r4;

        r0 := @this: android.net.http.RequestQueue;

        entermonitor r0;

     label1:
        $r2 = r0.<android.net.http.RequestQueue: android.content.BroadcastReceiver mProxyChangeReceiver>;

        if $r2 == null goto label2;

        $r4 = r0.<android.net.http.RequestQueue: android.content.Context mContext>;

        $r3 = r0.<android.net.http.RequestQueue: android.content.BroadcastReceiver mProxyChangeReceiver>;

        virtualinvoke $r4.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);

        r0.<android.net.http.RequestQueue: android.content.BroadcastReceiver mProxyChangeReceiver> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void dump()
    {
        android.net.http.RequestQueue r0;
        java.lang.Throwable r1, $r34;
        java.lang.StringBuilder r2, r6, r7, $r10, $r17, $r18, $r19, $r20, $r21, $r22, $r30, $r32, $r33;
        java.util.Iterator r3;
        int i0, i1;
        java.util.Map$Entry r4;
        java.lang.String r5, $r11, $r25, $r31;
        android.net.http.Request r8;
        java.util.LinkedHashMap $r9, $r12;
        boolean $z0, $z1, $z2;
        java.util.Set $r13;
        java.lang.Object $r14, $r16, $r26, $r28;
        org.apache.http.HttpHost $r15;
        java.util.LinkedList $r23;

        r0 := @this: android.net.http.RequestQueue;

        entermonitor r0;

     label01:
        staticinvoke <android.net.http.HttpLog: void v(java.lang.String)>("dump()");

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r2 = $r10;

        $r9 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        $z0 = virtualinvoke $r9.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        $r12 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        $r13 = virtualinvoke $r12.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        i0 = 0;

     label03:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r14;

        $r16 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (org.apache.http.HttpHost) $r16;

        r5 = virtualinvoke $r15.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        r6 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("p");

     label04:
        i1 = i0 + 1;

     label05:
        $r18 = new java.lang.StringBuilder;

        $r21 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>($r25);

        r7 = $r18;

        $r26 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r23 = (java.util.LinkedList) $r26;

        virtualinvoke $r23.<java.util.LinkedList: java.util.ListIterator listIterator(int)>(0);

     label06:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r28 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.net.http.Request) $r28;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

     label07:
        goto label06;

     label08:
        $r34 := @caughtexception;

        r1 = $r34;

        exitmonitor r0;

        throw r1;

     label09:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r7);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label10:
        i0 = i1;

        goto label03;

     label11:
        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.http.HttpLog: void v(java.lang.String)>($r11);

     label12:
        exitmonitor r0;

        return;

     label13:
        goto label11;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    public void enablePlatformNotifications()
    {
        android.net.http.RequestQueue r0;
        java.lang.Throwable r1, $r8;
        android.content.BroadcastReceiver $r2, $r6;
        android.net.http.RequestQueue$1 $r3;
        android.content.IntentFilter $r4;
        android.content.Context $r5;

        r0 := @this: android.net.http.RequestQueue;

        entermonitor r0;

     label1:
        $r2 = r0.<android.net.http.RequestQueue: android.content.BroadcastReceiver mProxyChangeReceiver>;

        if $r2 != null goto label2;

        $r3 = new android.net.http.RequestQueue$1;

        specialinvoke $r3.<android.net.http.RequestQueue$1: void <init>(android.net.http.RequestQueue)>(r0);

        r0.<android.net.http.RequestQueue: android.content.BroadcastReceiver mProxyChangeReceiver> = $r3;

        $r5 = r0.<android.net.http.RequestQueue: android.content.Context mContext>;

        $r6 = r0.<android.net.http.RequestQueue: android.content.BroadcastReceiver mProxyChangeReceiver>;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.PROXY_CHANGE");

        virtualinvoke $r5.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r6, $r4);

     label2:
        specialinvoke r0.<android.net.http.RequestQueue: void setProxyConfig()>();

     label3:
        exitmonitor r0;

        return;

     label4:
        $r8 := @caughtexception;

        r1 = $r8;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public org.apache.http.HttpHost getProxyHost()
    {
        android.net.http.RequestQueue r0;
        org.apache.http.HttpHost $r1;

        r0 := @this: android.net.http.RequestQueue;

        $r1 = r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost>;

        return $r1;
    }

    public android.net.http.Request getRequest()
    {
        android.net.http.RequestQueue r0;
        java.lang.Throwable r1, $r6;
        boolean z0;
        android.net.http.Request r2, r3;
        java.util.LinkedHashMap $r4, $r5;

        r0 := @this: android.net.http.RequestQueue;

        entermonitor r0;

     label1:
        $r4 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        z0 = virtualinvoke $r4.<java.util.LinkedHashMap: boolean isEmpty()>();

     label2:
        r2 = null;

        if z0 != 0 goto label5;

     label3:
        $r5 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        r3 = specialinvoke r0.<android.net.http.RequestQueue: android.net.http.Request removeFirst(java.util.LinkedHashMap)>($r5);

     label4:
        r2 = r3;

     label5:
        exitmonitor r0;

        return r2;

     label6:
        $r6 := @caughtexception;

        r1 = $r6;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public android.net.http.Request getRequest(org.apache.http.HttpHost)
    {
        android.net.http.RequestQueue r0;
        org.apache.http.HttpHost r1;
        java.lang.Throwable r2, $r11;
        boolean z0, $z1;
        android.net.http.Request r3;
        java.util.LinkedList r4;
        java.util.LinkedHashMap $r5, $r6, $r9;
        java.lang.Object $r7, $r8;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: org.apache.http.HttpHost;

        entermonitor r0;

     label1:
        $r5 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        z0 = virtualinvoke $r5.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r1);

     label2:
        r3 = null;

        if z0 == 0 goto label4;

     label3:
        $r6 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.LinkedList) $r7;

        $r8 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r3 = (android.net.http.Request) $r8;

        $z1 = virtualinvoke r4.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 == 0 goto label4;

        $r9 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        virtualinvoke $r9.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        exitmonitor r0;

        return r3;

     label5:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public boolean haveRequest(org.apache.http.HttpHost)
    {
        android.net.http.RequestQueue r0;
        org.apache.http.HttpHost r1;
        java.lang.Throwable r2, $r4;
        boolean z0;
        java.util.LinkedHashMap $r3;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: org.apache.http.HttpHost;

        entermonitor r0;

     label1:
        $r3 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        z0 = virtualinvoke $r3.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r1);

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public android.net.http.RequestHandle queueRequest(java.lang.String, android.net.WebAddress, java.lang.String, java.util.Map, android.net.http.EventHandler, java.io.InputStream, int)
    {
        android.net.http.RequestQueue r0;
        java.lang.String r1, r3, $r10, $r11, $r13;
        android.net.WebAddress r2;
        java.util.Map r4;
        android.net.http.EventHandler r5;
        java.io.InputStream r6;
        int i0, $i1;
        android.net.http.Request r7, $r8;
        org.apache.http.HttpHost $r9, $r12;
        android.net.http.RequestQueue$ActivePool $r14, $r16;
        android.net.http.RequestHandle $r15;
        android.net.http.LoggingEventHandler $r17;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.WebAddress;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: android.net.http.EventHandler;

        r6 := @parameter5: java.io.InputStream;

        i0 := @parameter6: int;

        if r5 != null goto label1;

        $r17 = new android.net.http.LoggingEventHandler;

        specialinvoke $r17.<android.net.http.LoggingEventHandler: void <init>()>();

        r5 = $r17;

     label1:
        $r8 = new android.net.http.Request;

        $r9 = new org.apache.http.HttpHost;

        $r10 = virtualinvoke r2.<android.net.WebAddress: java.lang.String getHost()>();

        $i1 = virtualinvoke r2.<android.net.WebAddress: int getPort()>();

        $r11 = virtualinvoke r2.<android.net.WebAddress: java.lang.String getScheme()>();

        specialinvoke $r9.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r10, $i1, $r11);

        $r12 = r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost>;

        $r13 = virtualinvoke r2.<android.net.WebAddress: java.lang.String getPath()>();

        specialinvoke $r8.<android.net.http.Request: void <init>(java.lang.String,org.apache.http.HttpHost,org.apache.http.HttpHost,java.lang.String,java.io.InputStream,int,android.net.http.EventHandler,java.util.Map)>(r3, $r9, $r12, $r13, r6, i0, r5, r4);

        r7 = $r8;

        virtualinvoke r0.<android.net.http.RequestQueue: void queueRequest(android.net.http.Request,boolean)>(r7, 0);

        $r14 = r0.<android.net.http.RequestQueue: android.net.http.RequestQueue$ActivePool mActivePool>;

        staticinvoke <android.net.http.RequestQueue$ActivePool: int access$408(android.net.http.RequestQueue$ActivePool)>($r14);

        $r16 = r0.<android.net.http.RequestQueue: android.net.http.RequestQueue$ActivePool mActivePool>;

        virtualinvoke $r16.<android.net.http.RequestQueue$ActivePool: void startConnectionThread()>();

        $r15 = new android.net.http.RequestHandle;

        specialinvoke $r15.<android.net.http.RequestHandle: void <init>(android.net.http.RequestQueue,java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,java.io.InputStream,int,android.net.http.Request)>(r0, r1, r2, r3, r4, r6, i0, r7);

        return $r15;
    }

    public android.net.http.RequestHandle queueRequest(java.lang.String, java.lang.String, java.util.Map, android.net.http.EventHandler, java.io.InputStream, int)
    {
        android.net.http.RequestQueue r0;
        java.lang.String r1, r2;
        java.util.Map r3;
        android.net.http.EventHandler r4;
        java.io.InputStream r5;
        int i0;
        android.net.WebAddress $r6;
        android.net.http.RequestHandle $r7;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        r4 := @parameter3: android.net.http.EventHandler;

        r5 := @parameter4: java.io.InputStream;

        i0 := @parameter5: int;

        $r6 = new android.net.WebAddress;

        specialinvoke $r6.<android.net.WebAddress: void <init>(java.lang.String)>(r1);

        $r7 = virtualinvoke r0.<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>(r1, $r6, r2, r3, r4, r5, i0);

        return $r7;
    }

    protected void queueRequest(android.net.http.Request, boolean)
    {
        android.net.http.RequestQueue r0;
        android.net.http.Request r1;
        boolean z0, $z1;
        java.lang.Throwable r2, $r11;
        org.apache.http.HttpHost r3, $r5;
        java.util.LinkedList r4, $r7;
        java.util.LinkedHashMap $r6, $r8, $r10;
        java.lang.Object $r12;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: android.net.http.Request;

        z0 := @parameter1: boolean;

        entermonitor r0;

     label01:
        $r5 = r1.<android.net.http.Request: org.apache.http.HttpHost mProxyHost>;

        if $r5 != null goto label06;

        r3 = r1.<android.net.http.Request: org.apache.http.HttpHost mHost>;

     label02:
        $r6 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        $z1 = virtualinvoke $r6.<java.util.LinkedHashMap: boolean containsKey(java.lang.Object)>(r3);

        if $z1 == 0 goto label08;

        $r10 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        $r12 = virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.util.LinkedList) $r12;

     label03:
        if z0 == 0 goto label11;

     label04:
        virtualinvoke r4.<java.util.LinkedList: void addFirst(java.lang.Object)>(r1);

     label05:
        exitmonitor r0;

        return;

     label06:
        r3 = r1.<android.net.http.Request: org.apache.http.HttpHost mProxyHost>;

     label07:
        goto label02;

     label08:
        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r4 = $r7;

        $r8 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        virtualinvoke $r8.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label09:
        goto label03;

     label10:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r0;

        throw r2;

     label11:
        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

     label12:
        goto label05;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label02 to label03 with label10;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public android.net.http.RequestHandle queueSynchronousRequest(java.lang.String, android.net.WebAddress, java.lang.String, java.util.Map, android.net.http.EventHandler, java.io.InputStream, int)
    {
        android.net.http.RequestQueue r0;
        java.lang.String r1, r3, $r11, $r12, $r14;
        android.net.WebAddress r2;
        java.util.Map r4;
        android.net.http.EventHandler r5;
        java.io.InputStream r6;
        int i0, $i1;
        org.apache.http.HttpHost r7, r9, $r10, $r15, $r20;
        android.net.http.Request r8, $r13;
        android.net.http.RequestHandle $r16;
        android.content.Context $r17;
        android.net.http.RequestQueue$SyncFeeder $r18;
        android.net.http.Connection $r19;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.WebAddress;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: android.net.http.EventHandler;

        r6 := @parameter5: java.io.InputStream;

        i0 := @parameter6: int;

        $r10 = new org.apache.http.HttpHost;

        $r11 = virtualinvoke r2.<android.net.WebAddress: java.lang.String getHost()>();

        $i1 = virtualinvoke r2.<android.net.WebAddress: int getPort()>();

        $r12 = virtualinvoke r2.<android.net.WebAddress: java.lang.String getScheme()>();

        specialinvoke $r10.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r11, $i1, $r12);

        r7 = $r10;

        $r13 = new android.net.http.Request;

        $r15 = r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost>;

        $r14 = virtualinvoke r2.<android.net.WebAddress: java.lang.String getPath()>();

        specialinvoke $r13.<android.net.http.Request: void <init>(java.lang.String,org.apache.http.HttpHost,org.apache.http.HttpHost,java.lang.String,java.io.InputStream,int,android.net.http.EventHandler,java.util.Map)>(r3, r7, $r15, $r14, r6, i0, r5, r4);

        r8 = $r13;

        r9 = specialinvoke r0.<android.net.http.RequestQueue: org.apache.http.HttpHost determineHost(org.apache.http.HttpHost)>(r7);

        $r16 = new android.net.http.RequestHandle;

        $r17 = r0.<android.net.http.RequestQueue: android.content.Context mContext>;

        $r20 = r0.<android.net.http.RequestQueue: org.apache.http.HttpHost mProxyHost>;

        $r18 = new android.net.http.RequestQueue$SyncFeeder;

        specialinvoke $r18.<android.net.http.RequestQueue$SyncFeeder: void <init>()>();

        $r19 = staticinvoke <android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)>($r17, r9, $r20, $r18);

        specialinvoke $r16.<android.net.http.RequestHandle: void <init>(android.net.http.RequestQueue,java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,java.io.InputStream,int,android.net.http.Request,android.net.http.Connection)>(r0, r1, r2, r3, r4, r6, i0, r8, $r19);

        return $r16;
    }

    boolean requestsPending()
    {
        android.net.http.RequestQueue r0;
        java.lang.Throwable r1, $r3;
        boolean z0, z1;
        java.util.LinkedHashMap $r2;

        r0 := @this: android.net.http.RequestQueue;

        entermonitor r0;

     label1:
        $r2 = r0.<android.net.http.RequestQueue: java.util.LinkedHashMap mPending>;

        z0 = virtualinvoke $r2.<java.util.LinkedHashMap: boolean isEmpty()>();

     label2:
        if z0 != 0 goto label4;

        z1 = 1;

     label3:
        exitmonitor r0;

        return z1;

     label4:
        z1 = 0;

        goto label3;

     label5:
        $r3 := @caughtexception;

        r1 = $r3;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public void requeueRequest(android.net.http.Request)
    {
        android.net.http.RequestQueue r0;
        android.net.http.Request r1;

        r0 := @this: android.net.http.RequestQueue;

        r1 := @parameter0: android.net.http.Request;

        virtualinvoke r0.<android.net.http.RequestQueue: void queueRequest(android.net.http.Request,boolean)>(r1, 1);

        return;
    }

    public void shutdown()
    {
        android.net.http.RequestQueue r0;
        android.net.http.RequestQueue$ActivePool $r1;

        r0 := @this: android.net.http.RequestQueue;

        $r1 = r0.<android.net.http.RequestQueue: android.net.http.RequestQueue$ActivePool mActivePool>;

        virtualinvoke $r1.<android.net.http.RequestQueue$ActivePool: void shutdown()>();

        return;
    }

    public void startTiming()
    {
        android.net.http.RequestQueue r0;
        android.net.http.RequestQueue$ActivePool $r1;

        r0 := @this: android.net.http.RequestQueue;

        $r1 = r0.<android.net.http.RequestQueue: android.net.http.RequestQueue$ActivePool mActivePool>;

        virtualinvoke $r1.<android.net.http.RequestQueue$ActivePool: void startTiming()>();

        return;
    }

    public void stopTiming()
    {
        android.net.http.RequestQueue r0;
        android.net.http.RequestQueue$ActivePool $r1;

        r0 := @this: android.net.http.RequestQueue;

        $r1 = r0.<android.net.http.RequestQueue: android.net.http.RequestQueue$ActivePool mActivePool>;

        virtualinvoke $r1.<android.net.http.RequestQueue$ActivePool: void stopTiming()>();

        return;
    }

    public static void <clinit>()
    {
        <android.net.http.RequestQueue: int CONNECTION_COUNT> = 4;

        return;
    }
}
