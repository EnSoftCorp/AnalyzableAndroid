public abstract class android.content.pm.PackageManager extends java.lang.Object
{
    public static final java.lang.String ACTION_CLEAN_EXTERNAL_STORAGE;
    public static final java.lang.String ACTION_REQUEST_PERMISSION;
    public static final int COMPONENT_ENABLED_STATE_DEFAULT;
    public static final int COMPONENT_ENABLED_STATE_DISABLED;
    public static final int COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED;
    public static final int COMPONENT_ENABLED_STATE_DISABLED_USER;
    public static final int COMPONENT_ENABLED_STATE_ENABLED;
    public static final int DELETE_ALL_USERS;
    public static final int DELETE_FAILED_DEVICE_POLICY_MANAGER;
    public static final int DELETE_FAILED_INTERNAL_ERROR;
    public static final int DELETE_FAILED_USER_RESTRICTED;
    public static final int DELETE_KEEP_DATA;
    public static final int DELETE_SUCCEEDED;
    public static final int DELETE_SYSTEM_APP;
    public static final int DONT_KILL_APP;
    public static final java.lang.String EXTRA_REQUEST_PERMISSION_PERMISSION_LIST;
    public static final java.lang.String EXTRA_VERIFICATION_ID;
    public static final java.lang.String EXTRA_VERIFICATION_INSTALLER_PACKAGE;
    public static final java.lang.String EXTRA_VERIFICATION_INSTALLER_UID;
    public static final java.lang.String EXTRA_VERIFICATION_INSTALL_FLAGS;
    public static final java.lang.String EXTRA_VERIFICATION_PACKAGE_NAME;
    public static final java.lang.String EXTRA_VERIFICATION_RESULT;
    public static final java.lang.String EXTRA_VERIFICATION_URI;
    public static final java.lang.String EXTRA_VERIFICATION_VERSION_CODE;
    public static final java.lang.String FEATURE_APP_WIDGETS;
    public static final java.lang.String FEATURE_AUDIO_LOW_LATENCY;
    public static final java.lang.String FEATURE_BLUETOOTH;
    public static final java.lang.String FEATURE_BLUETOOTH_LE;
    public static final java.lang.String FEATURE_CAMERA;
    public static final java.lang.String FEATURE_CAMERA_ANY;
    public static final java.lang.String FEATURE_CAMERA_AUTOFOCUS;
    public static final java.lang.String FEATURE_CAMERA_FLASH;
    public static final java.lang.String FEATURE_CAMERA_FRONT;
    public static final java.lang.String FEATURE_CONSUMER_IR;
    public static final java.lang.String FEATURE_DEVICE_ADMIN;
    public static final java.lang.String FEATURE_FAKETOUCH;
    public static final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT;
    public static final java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND;
    public static final java.lang.String FEATURE_HOME_SCREEN;
    public static final java.lang.String FEATURE_INPUT_METHODS;
    public static final java.lang.String FEATURE_LIVE_WALLPAPER;
    public static final java.lang.String FEATURE_LOCATION;
    public static final java.lang.String FEATURE_LOCATION_GPS;
    public static final java.lang.String FEATURE_LOCATION_NETWORK;
    public static final java.lang.String FEATURE_MICROPHONE;
    public static final java.lang.String FEATURE_NFC;
    public static final java.lang.String FEATURE_NFC_HCE;
    public static final java.lang.String FEATURE_NFC_HOST_CARD_EMULATION;
    public static final java.lang.String FEATURE_SCREEN_LANDSCAPE;
    public static final java.lang.String FEATURE_SCREEN_PORTRAIT;
    public static final java.lang.String FEATURE_SENSOR_ACCELEROMETER;
    public static final java.lang.String FEATURE_SENSOR_BAROMETER;
    public static final java.lang.String FEATURE_SENSOR_COMPASS;
    public static final java.lang.String FEATURE_SENSOR_GYROSCOPE;
    public static final java.lang.String FEATURE_SENSOR_LIGHT;
    public static final java.lang.String FEATURE_SENSOR_PROXIMITY;
    public static final java.lang.String FEATURE_SENSOR_STEP_COUNTER;
    public static final java.lang.String FEATURE_SENSOR_STEP_DETECTOR;
    public static final java.lang.String FEATURE_SIP;
    public static final java.lang.String FEATURE_SIP_VOIP;
    public static final java.lang.String FEATURE_TELEPHONY;
    public static final java.lang.String FEATURE_TELEPHONY_CDMA;
    public static final java.lang.String FEATURE_TELEPHONY_GSM;
    public static final java.lang.String FEATURE_TELEVISION;
    public static final java.lang.String FEATURE_TOUCHSCREEN;
    public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH;
    public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT;
    public static final java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND;
    public static final java.lang.String FEATURE_USB_ACCESSORY;
    public static final java.lang.String FEATURE_USB_HOST;
    public static final java.lang.String FEATURE_WIFI;
    public static final java.lang.String FEATURE_WIFI_DIRECT;
    public static final int GET_ACTIVITIES;
    public static final int GET_CONFIGURATIONS;
    public static final int GET_DISABLED_COMPONENTS;
    public static final int GET_DISABLED_UNTIL_USED_COMPONENTS;
    public static final int GET_GIDS;
    public static final int GET_INSTRUMENTATION;
    public static final int GET_INTENT_FILTERS;
    public static final int GET_META_DATA;
    public static final int GET_PERMISSIONS;
    public static final int GET_PROVIDERS;
    public static final int GET_RECEIVERS;
    public static final int GET_RESOLVED_FILTER;
    public static final int GET_SERVICES;
    public static final int GET_SHARED_LIBRARY_FILES;
    public static final int GET_SIGNATURES;
    public static final int GET_UNINSTALLED_PACKAGES;
    public static final int GET_URI_PERMISSION_PATTERNS;
    public static final int INSTALL_ALLOW_DOWNGRADE;
    public static final int INSTALL_ALLOW_TEST;
    public static final int INSTALL_ALL_USERS;
    public static final int INSTALL_EXTERNAL;
    public static final int INSTALL_FAILED_ALREADY_EXISTS;
    public static final int INSTALL_FAILED_CONFLICTING_PROVIDER;
    public static final int INSTALL_FAILED_CONTAINER_ERROR;
    public static final int INSTALL_FAILED_CPU_ABI_INCOMPATIBLE;
    public static final int INSTALL_FAILED_DEXOPT;
    public static final int INSTALL_FAILED_DUPLICATE_PACKAGE;
    public static final int INSTALL_FAILED_INSUFFICIENT_STORAGE;
    public static final int INSTALL_FAILED_INTERNAL_ERROR;
    public static final int INSTALL_FAILED_INVALID_APK;
    public static final int INSTALL_FAILED_INVALID_INSTALL_LOCATION;
    public static final int INSTALL_FAILED_INVALID_URI;
    public static final int INSTALL_FAILED_MEDIA_UNAVAILABLE;
    public static final int INSTALL_FAILED_MISSING_FEATURE;
    public static final int INSTALL_FAILED_MISSING_SHARED_LIBRARY;
    public static final int INSTALL_FAILED_NEWER_SDK;
    public static final int INSTALL_FAILED_NO_SHARED_USER;
    public static final int INSTALL_FAILED_OLDER_SDK;
    public static final int INSTALL_FAILED_PACKAGE_CHANGED;
    public static final int INSTALL_FAILED_REPLACE_COULDNT_DELETE;
    public static final int INSTALL_FAILED_SHARED_USER_INCOMPATIBLE;
    public static final int INSTALL_FAILED_TEST_ONLY;
    public static final int INSTALL_FAILED_UID_CHANGED;
    public static final int INSTALL_FAILED_UPDATE_INCOMPATIBLE;
    public static final int INSTALL_FAILED_USER_RESTRICTED;
    public static final int INSTALL_FAILED_VERIFICATION_FAILURE;
    public static final int INSTALL_FAILED_VERIFICATION_TIMEOUT;
    public static final int INSTALL_FAILED_VERSION_DOWNGRADE;
    public static final int INSTALL_FORWARD_LOCK;
    public static final int INSTALL_FROM_ADB;
    public static final int INSTALL_INTERNAL;
    public static final int INSTALL_PARSE_FAILED_BAD_MANIFEST;
    public static final int INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME;
    public static final int INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID;
    public static final int INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING;
    public static final int INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES;
    public static final int INSTALL_PARSE_FAILED_MANIFEST_EMPTY;
    public static final int INSTALL_PARSE_FAILED_MANIFEST_MALFORMED;
    public static final int INSTALL_PARSE_FAILED_NOT_APK;
    public static final int INSTALL_PARSE_FAILED_NO_CERTIFICATES;
    public static final int INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION;
    public static final int INSTALL_REPLACE_EXISTING;
    public static final int INSTALL_SUCCEEDED;
    public static final int MATCH_DEFAULT_ONLY;
    public static final long MAXIMUM_VERIFICATION_TIMEOUT;
    public static final int MOVE_EXTERNAL_MEDIA;
    public static final int MOVE_FAILED_DOESNT_EXIST;
    public static final int MOVE_FAILED_FORWARD_LOCKED;
    public static final int MOVE_FAILED_INSUFFICIENT_STORAGE;
    public static final int MOVE_FAILED_INTERNAL_ERROR;
    public static final int MOVE_FAILED_INVALID_LOCATION;
    public static final int MOVE_FAILED_OPERATION_PENDING;
    public static final int MOVE_FAILED_SYSTEM_PACKAGE;
    public static final int MOVE_INTERNAL;
    public static final int MOVE_SUCCEEDED;
    public static final int PERMISSION_DENIED;
    public static final int PERMISSION_GRANTED;
    public static final int SIGNATURE_FIRST_NOT_SIGNED;
    public static final int SIGNATURE_MATCH;
    public static final int SIGNATURE_NEITHER_SIGNED;
    public static final int SIGNATURE_NO_MATCH;
    public static final int SIGNATURE_SECOND_NOT_SIGNED;
    public static final int SIGNATURE_UNKNOWN_PACKAGE;
    public static final int VERIFICATION_ALLOW;
    public static final int VERIFICATION_ALLOW_WITHOUT_SUFFICIENT;
    public static final int VERIFICATION_REJECT;

    public void <init>()
    {
        android.content.pm.PackageManager r0;

        r0 := @this: android.content.pm.PackageManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getDataDirForUser(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r3, $r9;
        java.lang.StringBuilder $r1, $r4, $r5, $r6, $r7, $r8;
        java.io.File $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/user/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public abstract void addPackageToPreferred(java.lang.String);

    public abstract boolean addPermission(android.content.pm.PermissionInfo);

    public abstract boolean addPermissionAsync(android.content.pm.PermissionInfo);

    public abstract void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName);

    public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName, int)
    {
        android.content.pm.PackageManager r0;
        android.content.IntentFilter r1;
        int i0, i1;
        android.content.ComponentName[] r2;
        android.content.ComponentName r3;
        java.lang.RuntimeException $r4;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: android.content.IntentFilter;

        i0 := @parameter1: int;

        r2 := @parameter2: android.content.ComponentName[];

        r3 := @parameter3: android.content.ComponentName;

        i1 := @parameter4: int;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented. Must override in a subclass.");

        throw $r4;
    }

    public transient android.content.Intent buildPermissionRequestIntent(java.lang.String[])
    {
        android.content.pm.PackageManager r0;
        java.lang.String[] r1;
        int i0, i1;
        android.content.Intent r2, $r3;
        java.lang.String $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.NullPointerException $r8;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String[];

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("permissions cannot be null");

        throw $r8;

     label1:
        i0 = lengthof r1;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r6 = r1[i1];

        if $r6 != null goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("permissions cannot contain null");

        throw $r7;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.content.pm.action.REQUEST_PERMISSION");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("android.content.pm.extra.PERMISSION_LIST", r1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>("com.android.packageinstaller");

        return r2;
    }

    public abstract java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[]);

    public abstract int checkPermission(java.lang.String, java.lang.String);

    public abstract int checkSignatures(int, int);

    public abstract int checkSignatures(java.lang.String, java.lang.String);

    public abstract void clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver);

    public abstract void clearPackagePreferredActivities(java.lang.String);

    public abstract java.lang.String[] currentToCanonicalPackageNames(java.lang.String[]);

    public abstract void deleteApplicationCacheFiles(java.lang.String, android.content.pm.IPackageDataObserver);

    public abstract void deletePackage(java.lang.String, android.content.pm.IPackageDeleteObserver, int);

    public abstract void extendVerificationTimeout(int, int, long);

    public abstract void freeStorage(long, android.content.IntentSender);

    public abstract void freeStorageAndNotify(long, android.content.pm.IPackageDataObserver);

    public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityIcon(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.graphics.drawable.Drawable getActivityLogo(android.content.Intent) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.util.List getAllPermissionGroups(int);

    public abstract boolean getApplicationBlockedSettingAsUser(java.lang.String, android.os.UserHandle);

    public abstract int getApplicationEnabledSetting(java.lang.String);

    public abstract android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getApplicationIcon(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo);

    public abstract android.graphics.drawable.Drawable getApplicationLogo(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract int getComponentEnabledSetting(android.content.ComponentName);

    public abstract android.graphics.drawable.Drawable getDefaultActivityIcon();

    public abstract android.graphics.drawable.Drawable getDrawable(java.lang.String, int, android.content.pm.ApplicationInfo);

    public abstract android.content.ComponentName getHomeActivities(java.util.List);

    public abstract java.util.List getInstalledApplications(int);

    public abstract java.util.List getInstalledPackages(int);

    public abstract java.util.List getInstalledPackages(int, int);

    public abstract java.lang.String getInstallerPackageName(java.lang.String);

    public abstract android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.Intent getLaunchIntentForPackage(java.lang.String);

    public abstract java.lang.String getNameForUid(int);

    public android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String, int)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        int i0, $i1;
        android.content.pm.PackageParser r2, $r5;
        android.util.DisplayMetrics r3, $r6;
        android.content.pm.PackageParser$Package r4;
        java.io.File $r7;
        android.content.pm.PackageUserState $r8;
        android.content.pm.PackageInfo $r9;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r5 = new android.content.pm.PackageParser;

        specialinvoke $r5.<android.content.pm.PackageParser: void <init>(java.lang.String)>(r1);

        r2 = $r5;

        $r6 = new android.util.DisplayMetrics;

        specialinvoke $r6.<android.util.DisplayMetrics: void <init>()>();

        r3 = $r6;

        virtualinvoke r3.<android.util.DisplayMetrics: void setToDefaults()>();

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r1);

        r4 = virtualinvoke r2.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,java.lang.String,android.util.DisplayMetrics,int)>($r7, r1, r3, 0);

        if r4 != null goto label1;

        return null;

     label1:
        $i1 = i0 & 64;

        if $i1 == 0 goto label2;

        virtualinvoke r2.<android.content.pm.PackageParser: boolean collectCertificates(android.content.pm.PackageParser$Package,int)>(r4, 0);

     label2:
        $r8 = new android.content.pm.PackageUserState;

        specialinvoke $r8.<android.content.pm.PackageUserState: void <init>()>();

        $r9 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int[],int,long,long,java.util.HashSet,android.content.pm.PackageUserState)>(r4, null, i0, 0L, 0L, null, $r8);

        return $r9;
    }

    public abstract int[] getPackageGids(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.PackageInfo getPackageInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract void getPackageSizeInfo(java.lang.String, int, android.content.pm.IPackageStatsObserver);

    public void getPackageSizeInfo(java.lang.String, android.content.pm.IPackageStatsObserver)
    {
        android.content.pm.PackageManager r0;
        java.lang.String r1;
        android.content.pm.IPackageStatsObserver r2;
        int $i0;

        r0 := @this: android.content.pm.PackageManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.pm.IPackageStatsObserver;

        $i0 = staticinvoke <android.os.UserHandle: int myUserId()>();

        virtualinvoke r0.<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>(r1, $i0, r2);

        return;
    }

    public abstract int getPackageUid(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract java.lang.String[] getPackagesForUid(int);

    public abstract java.util.List getPackagesHoldingPermissions(java.lang.String[], int);

    public abstract android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.PermissionInfo getPermissionInfo(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract int getPreferredActivities(java.util.List, java.util.List, java.lang.String);

    public abstract java.util.List getPreferredPackages(int);

    public abstract android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForActivity(android.content.ComponentName) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForApplication(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.FeatureInfo[] getSystemAvailableFeatures();

    public abstract java.lang.String[] getSystemSharedLibraryNames();

    public abstract java.lang.CharSequence getText(java.lang.String, int, android.content.pm.ApplicationInfo);

    public abstract int getUidForSharedUser(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity();

    public abstract android.content.res.XmlResourceParser getXml(java.lang.String, int, android.content.pm.ApplicationInfo);

    public abstract void grantPermission(java.lang.String, java.lang.String);

    public abstract boolean hasSystemFeature(java.lang.String);

    public abstract int installExistingPackage(java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract void installPackage(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String);

    public abstract void installPackageWithVerification(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.net.Uri, android.content.pm.ManifestDigest, android.content.pm.ContainerEncryptionParams);

    public abstract void installPackageWithVerificationAndEncryption(android.net.Uri, android.content.pm.IPackageInstallObserver, int, java.lang.String, android.content.pm.VerificationParams, android.content.pm.ContainerEncryptionParams);

    public abstract boolean isSafeMode();

    public abstract void movePackage(java.lang.String, android.content.pm.IPackageMoveObserver, int);

    public abstract java.util.List queryBroadcastReceivers(android.content.Intent, int);

    public abstract java.util.List queryBroadcastReceivers(android.content.Intent, int, int);

    public abstract java.util.List queryContentProviders(java.lang.String, int, int);

    public abstract java.util.List queryInstrumentation(java.lang.String, int);

    public abstract java.util.List queryIntentActivities(android.content.Intent, int);

    public abstract java.util.List queryIntentActivitiesAsUser(android.content.Intent, int, int);

    public abstract java.util.List queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int);

    public abstract java.util.List queryIntentContentProviders(android.content.Intent, int);

    public abstract java.util.List queryIntentContentProvidersAsUser(android.content.Intent, int, int);

    public abstract java.util.List queryIntentServices(android.content.Intent, int);

    public abstract java.util.List queryIntentServicesAsUser(android.content.Intent, int, int);

    public abstract java.util.List queryPermissionsByGroup(java.lang.String, int) throws android.content.pm.PackageManager$NameNotFoundException;

    public abstract void removePackageFromPreferred(java.lang.String);

    public abstract void removePermission(java.lang.String);

    public abstract void replacePreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName);

    public abstract android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int);

    public abstract android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent, int, int);

    public abstract android.content.pm.ProviderInfo resolveContentProvider(java.lang.String, int);

    public abstract android.content.pm.ResolveInfo resolveService(android.content.Intent, int);

    public abstract void revokePermission(java.lang.String, java.lang.String);

    public abstract boolean setApplicationBlockedSettingAsUser(java.lang.String, boolean, android.os.UserHandle);

    public abstract void setApplicationEnabledSetting(java.lang.String, int, int);

    public abstract void setComponentEnabledSetting(android.content.ComponentName, int, int);

    public abstract void setInstallerPackageName(java.lang.String, java.lang.String);

    public abstract void verifyPendingInstall(int, int);

    public static void <clinit>()
    {
        <android.content.pm.PackageManager: int VERIFICATION_REJECT> = -1;

        <android.content.pm.PackageManager: int VERIFICATION_ALLOW_WITHOUT_SUFFICIENT> = 2;

        <android.content.pm.PackageManager: int VERIFICATION_ALLOW> = 1;

        <android.content.pm.PackageManager: int SIGNATURE_UNKNOWN_PACKAGE> = -4;

        <android.content.pm.PackageManager: int SIGNATURE_SECOND_NOT_SIGNED> = -2;

        <android.content.pm.PackageManager: int SIGNATURE_NO_MATCH> = -3;

        <android.content.pm.PackageManager: int SIGNATURE_NEITHER_SIGNED> = 1;

        <android.content.pm.PackageManager: int SIGNATURE_MATCH> = 0;

        <android.content.pm.PackageManager: int SIGNATURE_FIRST_NOT_SIGNED> = -1;

        <android.content.pm.PackageManager: int PERMISSION_GRANTED> = 0;

        <android.content.pm.PackageManager: int PERMISSION_DENIED> = -1;

        <android.content.pm.PackageManager: int MOVE_SUCCEEDED> = 1;

        <android.content.pm.PackageManager: int MOVE_INTERNAL> = 1;

        <android.content.pm.PackageManager: int MOVE_FAILED_SYSTEM_PACKAGE> = -3;

        <android.content.pm.PackageManager: int MOVE_FAILED_OPERATION_PENDING> = -7;

        <android.content.pm.PackageManager: int MOVE_FAILED_INVALID_LOCATION> = -5;

        <android.content.pm.PackageManager: int MOVE_FAILED_INTERNAL_ERROR> = -6;

        <android.content.pm.PackageManager: int MOVE_FAILED_INSUFFICIENT_STORAGE> = -1;

        <android.content.pm.PackageManager: int MOVE_FAILED_FORWARD_LOCKED> = -4;

        <android.content.pm.PackageManager: int MOVE_FAILED_DOESNT_EXIST> = -2;

        <android.content.pm.PackageManager: int MOVE_EXTERNAL_MEDIA> = 2;

        <android.content.pm.PackageManager: long MAXIMUM_VERIFICATION_TIMEOUT> = 3600000L;

        <android.content.pm.PackageManager: int MATCH_DEFAULT_ONLY> = 65536;

        <android.content.pm.PackageManager: int INSTALL_SUCCEEDED> = 1;

        <android.content.pm.PackageManager: int INSTALL_REPLACE_EXISTING> = 2;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION> = -102;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_NO_CERTIFICATES> = -103;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_NOT_APK> = -100;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_MANIFEST_MALFORMED> = -108;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_MANIFEST_EMPTY> = -109;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES> = -104;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING> = -105;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID> = -107;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME> = -106;

        <android.content.pm.PackageManager: int INSTALL_PARSE_FAILED_BAD_MANIFEST> = -101;

        <android.content.pm.PackageManager: int INSTALL_INTERNAL> = 16;

        <android.content.pm.PackageManager: int INSTALL_FROM_ADB> = 32;

        <android.content.pm.PackageManager: int INSTALL_FORWARD_LOCK> = 1;

        <android.content.pm.PackageManager: int INSTALL_FAILED_VERSION_DOWNGRADE> = -25;

        <android.content.pm.PackageManager: int INSTALL_FAILED_VERIFICATION_TIMEOUT> = -21;

        <android.content.pm.PackageManager: int INSTALL_FAILED_VERIFICATION_FAILURE> = -22;

        <android.content.pm.PackageManager: int INSTALL_FAILED_USER_RESTRICTED> = -111;

        <android.content.pm.PackageManager: int INSTALL_FAILED_UPDATE_INCOMPATIBLE> = -7;

        <android.content.pm.PackageManager: int INSTALL_FAILED_UID_CHANGED> = -24;

        <android.content.pm.PackageManager: int INSTALL_FAILED_TEST_ONLY> = -15;

        <android.content.pm.PackageManager: int INSTALL_FAILED_SHARED_USER_INCOMPATIBLE> = -8;

        <android.content.pm.PackageManager: int INSTALL_FAILED_REPLACE_COULDNT_DELETE> = -10;

        <android.content.pm.PackageManager: int INSTALL_FAILED_PACKAGE_CHANGED> = -23;

        <android.content.pm.PackageManager: int INSTALL_FAILED_OLDER_SDK> = -12;

        <android.content.pm.PackageManager: int INSTALL_FAILED_NO_SHARED_USER> = -6;

        <android.content.pm.PackageManager: int INSTALL_FAILED_NEWER_SDK> = -14;

        <android.content.pm.PackageManager: int INSTALL_FAILED_MISSING_SHARED_LIBRARY> = -9;

        <android.content.pm.PackageManager: int INSTALL_FAILED_MISSING_FEATURE> = -17;

        <android.content.pm.PackageManager: int INSTALL_FAILED_MEDIA_UNAVAILABLE> = -20;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INVALID_URI> = -3;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INVALID_INSTALL_LOCATION> = -19;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INVALID_APK> = -2;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INTERNAL_ERROR> = -110;

        <android.content.pm.PackageManager: int INSTALL_FAILED_INSUFFICIENT_STORAGE> = -4;

        <android.content.pm.PackageManager: int INSTALL_FAILED_DUPLICATE_PACKAGE> = -5;

        <android.content.pm.PackageManager: int INSTALL_FAILED_DEXOPT> = -11;

        <android.content.pm.PackageManager: int INSTALL_FAILED_CPU_ABI_INCOMPATIBLE> = -16;

        <android.content.pm.PackageManager: int INSTALL_FAILED_CONTAINER_ERROR> = -18;

        <android.content.pm.PackageManager: int INSTALL_FAILED_CONFLICTING_PROVIDER> = -13;

        <android.content.pm.PackageManager: int INSTALL_FAILED_ALREADY_EXISTS> = -1;

        <android.content.pm.PackageManager: int INSTALL_EXTERNAL> = 8;

        <android.content.pm.PackageManager: int INSTALL_ALL_USERS> = 64;

        <android.content.pm.PackageManager: int INSTALL_ALLOW_TEST> = 4;

        <android.content.pm.PackageManager: int INSTALL_ALLOW_DOWNGRADE> = 128;

        <android.content.pm.PackageManager: int GET_URI_PERMISSION_PATTERNS> = 2048;

        <android.content.pm.PackageManager: int GET_UNINSTALLED_PACKAGES> = 8192;

        <android.content.pm.PackageManager: int GET_SIGNATURES> = 64;

        <android.content.pm.PackageManager: int GET_SHARED_LIBRARY_FILES> = 1024;

        <android.content.pm.PackageManager: int GET_SERVICES> = 4;

        <android.content.pm.PackageManager: int GET_RESOLVED_FILTER> = 64;

        <android.content.pm.PackageManager: int GET_RECEIVERS> = 2;

        <android.content.pm.PackageManager: int GET_PROVIDERS> = 8;

        <android.content.pm.PackageManager: int GET_PERMISSIONS> = 4096;

        <android.content.pm.PackageManager: int GET_META_DATA> = 128;

        <android.content.pm.PackageManager: int GET_INTENT_FILTERS> = 32;

        <android.content.pm.PackageManager: int GET_INSTRUMENTATION> = 16;

        <android.content.pm.PackageManager: int GET_GIDS> = 256;

        <android.content.pm.PackageManager: int GET_DISABLED_UNTIL_USED_COMPONENTS> = 32768;

        <android.content.pm.PackageManager: int GET_DISABLED_COMPONENTS> = 512;

        <android.content.pm.PackageManager: int GET_CONFIGURATIONS> = 16384;

        <android.content.pm.PackageManager: int GET_ACTIVITIES> = 1;

        <android.content.pm.PackageManager: java.lang.String FEATURE_WIFI_DIRECT> = "android.hardware.wifi.direct";

        <android.content.pm.PackageManager: java.lang.String FEATURE_WIFI> = "android.hardware.wifi";

        <android.content.pm.PackageManager: java.lang.String FEATURE_USB_HOST> = "android.hardware.usb.host";

        <android.content.pm.PackageManager: java.lang.String FEATURE_USB_ACCESSORY> = "android.hardware.usb.accessory";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND> = "android.hardware.touchscreen.multitouch.jazzhand";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT> = "android.hardware.touchscreen.multitouch.distinct";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN_MULTITOUCH> = "android.hardware.touchscreen.multitouch";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TOUCHSCREEN> = "android.hardware.touchscreen";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEVISION> = "android.hardware.type.television";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_GSM> = "android.hardware.telephony.gsm";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY_CDMA> = "android.hardware.telephony.cdma";

        <android.content.pm.PackageManager: java.lang.String FEATURE_TELEPHONY> = "android.hardware.telephony";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SIP_VOIP> = "android.software.sip.voip";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SIP> = "android.software.sip";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_STEP_DETECTOR> = "android.hardware.sensor.stepdetector";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_STEP_COUNTER> = "android.hardware.sensor.stepcounter";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_PROXIMITY> = "android.hardware.sensor.proximity";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_LIGHT> = "android.hardware.sensor.light";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_GYROSCOPE> = "android.hardware.sensor.gyroscope";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_COMPASS> = "android.hardware.sensor.compass";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_BAROMETER> = "android.hardware.sensor.barometer";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SENSOR_ACCELEROMETER> = "android.hardware.sensor.accelerometer";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SCREEN_PORTRAIT> = "android.hardware.screen.portrait";

        <android.content.pm.PackageManager: java.lang.String FEATURE_SCREEN_LANDSCAPE> = "android.hardware.screen.landscape";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC_HOST_CARD_EMULATION> = "android.hardware.nfc.hce";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC_HCE> = "android.hardware.nfc.hce";

        <android.content.pm.PackageManager: java.lang.String FEATURE_NFC> = "android.hardware.nfc";

        <android.content.pm.PackageManager: java.lang.String FEATURE_MICROPHONE> = "android.hardware.microphone";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOCATION_NETWORK> = "android.hardware.location.network";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOCATION_GPS> = "android.hardware.location.gps";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LOCATION> = "android.hardware.location";

        <android.content.pm.PackageManager: java.lang.String FEATURE_LIVE_WALLPAPER> = "android.software.live_wallpaper";

        <android.content.pm.PackageManager: java.lang.String FEATURE_INPUT_METHODS> = "android.software.input_methods";

        <android.content.pm.PackageManager: java.lang.String FEATURE_HOME_SCREEN> = "android.software.home_screen";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND> = "android.hardware.faketouch.multitouch.jazzhand";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT> = "android.hardware.faketouch.multitouch.distinct";

        <android.content.pm.PackageManager: java.lang.String FEATURE_FAKETOUCH> = "android.hardware.faketouch";

        <android.content.pm.PackageManager: java.lang.String FEATURE_DEVICE_ADMIN> = "android.software.device_admin";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CONSUMER_IR> = "android.hardware.consumerir";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_FRONT> = "android.hardware.camera.front";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_FLASH> = "android.hardware.camera.flash";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_AUTOFOCUS> = "android.hardware.camera.autofocus";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA_ANY> = "android.hardware.camera.any";

        <android.content.pm.PackageManager: java.lang.String FEATURE_CAMERA> = "android.hardware.camera";

        <android.content.pm.PackageManager: java.lang.String FEATURE_BLUETOOTH_LE> = "android.hardware.bluetooth_le";

        <android.content.pm.PackageManager: java.lang.String FEATURE_BLUETOOTH> = "android.hardware.bluetooth";

        <android.content.pm.PackageManager: java.lang.String FEATURE_AUDIO_LOW_LATENCY> = "android.hardware.audio.low_latency";

        <android.content.pm.PackageManager: java.lang.String FEATURE_APP_WIDGETS> = "android.software.app_widgets";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_VERSION_CODE> = "android.content.pm.extra.VERIFICATION_VERSION_CODE";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_URI> = "android.content.pm.extra.VERIFICATION_URI";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_RESULT> = "android.content.pm.extra.VERIFICATION_RESULT";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_PACKAGE_NAME> = "android.content.pm.extra.VERIFICATION_PACKAGE_NAME";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_INSTALL_FLAGS> = "android.content.pm.extra.VERIFICATION_INSTALL_FLAGS";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_INSTALLER_UID> = "android.content.pm.extra.VERIFICATION_INSTALLER_UID";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_INSTALLER_PACKAGE> = "android.content.pm.extra.VERIFICATION_INSTALLER_PACKAGE";

        <android.content.pm.PackageManager: java.lang.String EXTRA_VERIFICATION_ID> = "android.content.pm.extra.VERIFICATION_ID";

        <android.content.pm.PackageManager: java.lang.String EXTRA_REQUEST_PERMISSION_PERMISSION_LIST> = "android.content.pm.extra.PERMISSION_LIST";

        <android.content.pm.PackageManager: int DONT_KILL_APP> = 1;

        <android.content.pm.PackageManager: int DELETE_SYSTEM_APP> = 4;

        <android.content.pm.PackageManager: int DELETE_SUCCEEDED> = 1;

        <android.content.pm.PackageManager: int DELETE_KEEP_DATA> = 1;

        <android.content.pm.PackageManager: int DELETE_FAILED_USER_RESTRICTED> = -3;

        <android.content.pm.PackageManager: int DELETE_FAILED_INTERNAL_ERROR> = -1;

        <android.content.pm.PackageManager: int DELETE_FAILED_DEVICE_POLICY_MANAGER> = -2;

        <android.content.pm.PackageManager: int DELETE_ALL_USERS> = 2;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_ENABLED> = 1;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DISABLED_USER> = 3;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DISABLED_UNTIL_USED> = 4;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DISABLED> = 2;

        <android.content.pm.PackageManager: int COMPONENT_ENABLED_STATE_DEFAULT> = 0;

        <android.content.pm.PackageManager: java.lang.String ACTION_REQUEST_PERMISSION> = "android.content.pm.action.REQUEST_PERMISSION";

        <android.content.pm.PackageManager: java.lang.String ACTION_CLEAN_EXTERNAL_STORAGE> = "android.content.pm.CLEAN_EXTERNAL_STORAGE";

        return;
    }
}
