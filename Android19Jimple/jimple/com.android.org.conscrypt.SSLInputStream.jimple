public abstract class com.android.org.conscrypt.SSLInputStream extends java.io.InputStream
{

    public void <init>()
    {
        com.android.org.conscrypt.SSLInputStream r0;

        r0 := @this: com.android.org.conscrypt.SSLInputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        return;
    }

    public abstract int available() throws java.io.IOException;

    public abstract int read() throws java.io.IOException;

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.android.org.conscrypt.SSLInputStream r0;
        byte[] r1;
        int i0, i1, i2, i3, $i5, $i6;
        byte $b4;

        r0 := @this: com.android.org.conscrypt.SSLInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

     label1:
        i3 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        if i3 != -1 goto label3;

        if i2 != 0 goto label2;

        return -1;

     label2:
        return i2;

     label3:
        $i5 = i0 + i2;

        $b4 = (byte) i3;

        r1[$i5] = $b4;

        i2 = i2 + 1;

        $i6 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int available()>();

        if $i6 == 0 goto label4;

        if i2 < i1 goto label1;

     label4:
        return i2;
    }

    public byte[] read(int) throws java.io.IOException
    {
        com.android.org.conscrypt.SSLInputStream r0;
        int i0, i1, $i2;
        byte[] r1;
        byte $b3;

        r0 := @this: com.android.org.conscrypt.SSLInputStream;

        i0 := @parameter0: int;

        r1 = newarray (byte)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i2 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $b3 = (byte) $i2;

        r1[i1] = $b3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public int readUint16() throws java.io.IOException
    {
        com.android.org.conscrypt.SSLInputStream r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.org.conscrypt.SSLInputStream;

        $i0 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i1 = $i0 << 8;

        $i2 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i3 = 255 & $i2;

        $i4 = $i1 | $i3;

        return $i4;
    }

    public int readUint24() throws java.io.IOException
    {
        com.android.org.conscrypt.SSLInputStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.android.org.conscrypt.SSLInputStream;

        $i0 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i1 = $i0 << 16;

        $i2 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i3 = $i2 << 8;

        $i4 = $i1 | $i3;

        $i5 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i6 = 255 & $i5;

        $i7 = $i4 | $i6;

        return $i7;
    }

    public long readUint32() throws java.io.IOException
    {
        com.android.org.conscrypt.SSLInputStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        long $l11;

        r0 := @this: com.android.org.conscrypt.SSLInputStream;

        $i0 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i1 = $i0 << 24;

        $i2 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i3 = $i2 << 16;

        $i4 = $i1 | $i3;

        $i5 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i6 = $i5 << 8;

        $i7 = $i4 | $i6;

        $i8 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i9 = 255 & $i8;

        $i10 = $i7 | $i9;

        $l11 = (long) $i10;

        return $l11;
    }

    public long readUint64() throws java.io.IOException
    {
        com.android.org.conscrypt.SSLInputStream r0;
        long l0, $l1, $l2, $l3;

        r0 := @this: com.android.org.conscrypt.SSLInputStream;

        l0 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: long readUint32()>();

        $l1 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: long readUint32()>();

        $l2 = l0 << 32;

        $l3 = $l1 | $l2;

        return $l3;
    }

    public int readUint8() throws java.io.IOException
    {
        com.android.org.conscrypt.SSLInputStream r0;
        int $i0, $i1;

        r0 := @this: com.android.org.conscrypt.SSLInputStream;

        $i0 = virtualinvoke r0.<com.android.org.conscrypt.SSLInputStream: int read()>();

        $i1 = 255 & $i0;

        return $i1;
    }
}
