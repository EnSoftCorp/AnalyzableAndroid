public class android.view.accessibility.AccessibilityNodeInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final int ACTION_ACCESSIBILITY_FOCUS;
    public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN;
    public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING;
    public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT;
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT;
    public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT;
    public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS;
    public static final int ACTION_CLEAR_FOCUS;
    public static final int ACTION_CLEAR_SELECTION;
    public static final int ACTION_CLICK;
    public static final int ACTION_COLLAPSE;
    public static final int ACTION_COPY;
    public static final int ACTION_CUT;
    public static final int ACTION_DISMISS;
    public static final int ACTION_EXPAND;
    public static final int ACTION_FOCUS;
    public static final int ACTION_LONG_CLICK;
    public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
    public static final int ACTION_NEXT_HTML_ELEMENT;
    public static final int ACTION_PASTE;
    public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
    public static final int ACTION_PREVIOUS_HTML_ELEMENT;
    public static final int ACTION_SCROLL_BACKWARD;
    public static final int ACTION_SCROLL_FORWARD;
    public static final int ACTION_SELECT;
    public static final int ACTION_SET_SELECTION;
    public static final int ACTIVE_WINDOW_ID;
    private static final int BOOLEAN_PROPERTY_ACCESSIBILITY_FOCUSED;
    private static final int BOOLEAN_PROPERTY_CHECKABLE;
    private static final int BOOLEAN_PROPERTY_CHECKED;
    private static final int BOOLEAN_PROPERTY_CLICKABLE;
    private static final int BOOLEAN_PROPERTY_CONTENT_INVALID;
    private static final int BOOLEAN_PROPERTY_DISMISSABLE;
    private static final int BOOLEAN_PROPERTY_EDITABLE;
    private static final int BOOLEAN_PROPERTY_ENABLED;
    private static final int BOOLEAN_PROPERTY_FOCUSABLE;
    private static final int BOOLEAN_PROPERTY_FOCUSED;
    private static final int BOOLEAN_PROPERTY_LONG_CLICKABLE;
    private static final int BOOLEAN_PROPERTY_MULTI_LINE;
    private static final int BOOLEAN_PROPERTY_OPENS_POPUP;
    private static final int BOOLEAN_PROPERTY_PASSWORD;
    private static final int BOOLEAN_PROPERTY_SCROLLABLE;
    private static final int BOOLEAN_PROPERTY_SELECTED;
    private static final int BOOLEAN_PROPERTY_VISIBLE_TO_USER;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final boolean DEBUG;
    public static final int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS;
    public static final int FLAG_PREFETCH_DESCENDANTS;
    public static final int FLAG_PREFETCH_PREDECESSORS;
    public static final int FLAG_PREFETCH_SIBLINGS;
    public static final int FLAG_REPORT_VIEW_IDS;
    public static final int FOCUS_ACCESSIBILITY;
    public static final int FOCUS_INPUT;
    private static final int MAX_POOL_SIZE;
    public static final int MOVEMENT_GRANULARITY_CHARACTER;
    public static final int MOVEMENT_GRANULARITY_LINE;
    public static final int MOVEMENT_GRANULARITY_PAGE;
    public static final int MOVEMENT_GRANULARITY_PARAGRAPH;
    public static final int MOVEMENT_GRANULARITY_WORD;
    public static final long ROOT_NODE_ID;
    public static final int UNDEFINED;
    private static final long VIRTUAL_DESCENDANT_ID_MASK;
    private static final int VIRTUAL_DESCENDANT_ID_SHIFT;
    private static final android.util.Pools$SynchronizedPool sPool;
    private int mActions;
    private int mBooleanProperties;
    private final android.graphics.Rect mBoundsInParent;
    private final android.graphics.Rect mBoundsInScreen;
    private final android.util.SparseLongArray mChildNodeIds;
    private java.lang.CharSequence mClassName;
    private android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo;
    private android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo;
    private int mConnectionId;
    private java.lang.CharSequence mContentDescription;
    private android.os.Bundle mExtras;
    private int mInputType;
    private long mLabelForId;
    private long mLabeledById;
    private int mLiveRegion;
    private int mMovementGranularities;
    private java.lang.CharSequence mPackageName;
    private long mParentNodeId;
    private android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo;
    private boolean mSealed;
    private long mSourceNodeId;
    private java.lang.CharSequence mText;
    private int mTextSelectionEnd;
    private int mTextSelectionStart;
    private java.lang.String mViewIdResourceName;
    private int mWindowId;

    static void <clinit>()
    {
        long $l0;
        android.util.Pools$SynchronizedPool $r0;
        android.view.accessibility.AccessibilityNodeInfo$1 $r1;

        <android.view.accessibility.AccessibilityNodeInfo: int VIRTUAL_DESCENDANT_ID_SHIFT> = 32;

        <android.view.accessibility.AccessibilityNodeInfo: long VIRTUAL_DESCENDANT_ID_MASK> = -4294967296L;

        <android.view.accessibility.AccessibilityNodeInfo: int UNDEFINED> = -1;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_WORD> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_PARAGRAPH> = 8;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_PAGE> = 16;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_LINE> = 4;

        <android.view.accessibility.AccessibilityNodeInfo: int MOVEMENT_GRANULARITY_CHARACTER> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int MAX_POOL_SIZE> = 50;

        <android.view.accessibility.AccessibilityNodeInfo: int FOCUS_INPUT> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int FOCUS_ACCESSIBILITY> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_REPORT_VIEW_IDS> = 16;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_PREFETCH_SIBLINGS> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_PREFETCH_PREDECESSORS> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_PREFETCH_DESCENDANTS> = 4;

        <android.view.accessibility.AccessibilityNodeInfo: int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS> = 8;

        <android.view.accessibility.AccessibilityNodeInfo: boolean DEBUG> = 0;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_VISIBLE_TO_USER> = 2048;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_SELECTED> = 16;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_SCROLLABLE> = 512;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_PASSWORD> = 256;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_OPENS_POPUP> = 8192;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_MULTI_LINE> = 32768;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_LONG_CLICKABLE> = 64;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_FOCUSED> = 8;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_FOCUSABLE> = 4;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_ENABLED> = 128;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_EDITABLE> = 4096;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_DISMISSABLE> = 16384;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_CONTENT_INVALID> = 65536;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_CLICKABLE> = 32;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_CHECKED> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_CHECKABLE> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int BOOLEAN_PROPERTY_ACCESSIBILITY_FOCUSED> = 1024;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTIVE_WINDOW_ID> = -1;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_SET_SELECTION> = 131072;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_SELECT> = 4;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_SCROLL_FORWARD> = 4096;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_SCROLL_BACKWARD> = 8192;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_PREVIOUS_HTML_ELEMENT> = 2048;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY> = 512;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_PASTE> = 32768;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_NEXT_HTML_ELEMENT> = 1024;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_NEXT_AT_MOVEMENT_GRANULARITY> = 256;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_LONG_CLICK> = 32;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_FOCUS> = 1;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_EXPAND> = 262144;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_DISMISS> = 1048576;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CUT> = 65536;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_COPY> = 16384;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_COLLAPSE> = 524288;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CLICK> = 16;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CLEAR_SELECTION> = 8;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CLEAR_FOCUS> = 2;

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_CLEAR_ACCESSIBILITY_FOCUS> = 128;

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_SELECTION_START_INT> = "ACTION_ARGUMENT_SELECTION_START_INT";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_SELECTION_END_INT> = "ACTION_ARGUMENT_SELECTION_END_INT";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT> = "ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING> = "ACTION_ARGUMENT_HTML_ELEMENT_STRING";

        <android.view.accessibility.AccessibilityNodeInfo: java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN> = "ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN";

        <android.view.accessibility.AccessibilityNodeInfo: int ACTION_ACCESSIBILITY_FOCUS> = 64;

        $l0 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(-1, -1);

        <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID> = $l0;

        $r0 = new android.util.Pools$SynchronizedPool;

        specialinvoke $r0.<android.util.Pools$SynchronizedPool: void <init>(int)>(50);

        <android.view.accessibility.AccessibilityNodeInfo: android.util.Pools$SynchronizedPool sPool> = $r0;

        $r1 = new android.view.accessibility.AccessibilityNodeInfo$1;

        specialinvoke $r1.<android.view.accessibility.AccessibilityNodeInfo$1: void <init>()>();

        <android.view.accessibility.AccessibilityNodeInfo: android.os.Parcelable$Creator CREATOR> = $r1;

        return;
    }

    private void <init>()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0, $l1, $l2, $l3;
        android.graphics.Rect $r1, $r2;
        android.util.SparseLongArray $r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = -1;

        $l0 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = $l0;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = $l1;

        $l2 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = $l2;

        $l3 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = $l3;

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent> = $r1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen> = $r2;

        $r3 = new android.util.SparseLongArray;

        specialinvoke $r3.<android.util.SparseLongArray: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds> = $r3;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = -1;

        return;
    }

    static void access$000(android.view.accessibility.AccessibilityNodeInfo, android.os.Parcel)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.Parcel r1;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter1: android.os.Parcel;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void initFromParcel(android.os.Parcel)>(r1);

        return;
    }

    private boolean canPerformRequestOverConnection(long)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long l0;
        int $i1, $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        l0 := @parameter0: long;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        if $i1 == -1 goto label1;

        $i2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        if $i2 == -1 goto label1;

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        if $i3 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void clear()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0, $l1, $l2, $l3;
        android.util.SparseLongArray $r1;
        android.graphics.Rect $r2, $r3;
        android.os.Bundle $r4, $r11;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo $r5, $r10;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r6, $r9;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r7, $r8;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r0.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed> = 0;

        $l0 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = $l0;

        $l1 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = $l1;

        $l2 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = $l2;

        $l3 = <android.view.accessibility.AccessibilityNodeInfo: long ROOT_NODE_ID>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = $l3;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities> = 0;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        virtualinvoke $r1.<android.util.SparseLongArray: void clear()>();

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName> = null;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName> = null;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText> = null;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription> = null;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName> = null;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mActions> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = -1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = 0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = 0;

        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        if $r4 == null goto label1;

        $r11 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        virtualinvoke $r11.<android.os.Bundle: void clear()>();

     label1:
        $r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        if $r5 == null goto label2;

        $r10 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        virtualinvoke $r10.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: void recycle()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo> = null;

     label2:
        $r6 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        if $r6 == null goto label3;

        $r9 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        virtualinvoke $r9.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: void recycle()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo> = null;

     label3:
        $r7 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        if $r7 == null goto label4;

        $r8 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        virtualinvoke $r8.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: void recycle()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo> = null;

     label4:
        return;
    }

    private void enforceValidFocusDirection(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 17: goto label2;
            case 33: goto label2;
            case 66: goto label2;
            case 130: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown direction: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        return;
    }

    private void enforceValidFocusType(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown focus type: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        return;
    }

    public static int getAccessibilityViewId(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = (int) l0;

        return $i1;
    }

    private static java.lang.String getActionSymbolicName(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 4: goto label04;
            case 8: goto label05;
            case 16: goto label06;
            case 32: goto label07;
            case 64: goto label08;
            case 128: goto label09;
            case 256: goto label10;
            case 512: goto label11;
            case 1024: goto label12;
            case 2048: goto label13;
            case 4096: goto label14;
            case 8192: goto label15;
            case 16384: goto label17;
            case 32768: goto label18;
            case 65536: goto label16;
            case 131072: goto label19;
            default: goto label01;
        };

     label01:
        return "ACTION_UNKNOWN";

     label02:
        return "ACTION_FOCUS";

     label03:
        return "ACTION_CLEAR_FOCUS";

     label04:
        return "ACTION_SELECT";

     label05:
        return "ACTION_CLEAR_SELECTION";

     label06:
        return "ACTION_CLICK";

     label07:
        return "ACTION_LONG_CLICK";

     label08:
        return "ACTION_ACCESSIBILITY_FOCUS";

     label09:
        return "ACTION_CLEAR_ACCESSIBILITY_FOCUS";

     label10:
        return "ACTION_NEXT_AT_MOVEMENT_GRANULARITY";

     label11:
        return "ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY";

     label12:
        return "ACTION_NEXT_HTML_ELEMENT";

     label13:
        return "ACTION_PREVIOUS_HTML_ELEMENT";

     label14:
        return "ACTION_SCROLL_FORWARD";

     label15:
        return "ACTION_SCROLL_BACKWARD";

     label16:
        return "ACTION_CUT";

     label17:
        return "ACTION_COPY";

     label18:
        return "ACTION_PASTE";

     label19:
        return "ACTION_SET_SELECTION";
    }

    private boolean getBooleanProperty(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i1, $i2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static java.lang.String getMovementGranularitySymbolicName(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 4: goto label4;
            case 8: goto label5;
            case 16: goto label6;
            default: goto label1;
        };

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown movement granularity: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        return "MOVEMENT_GRANULARITY_CHARACTER";

     label3:
        return "MOVEMENT_GRANULARITY_WORD";

     label4:
        return "MOVEMENT_GRANULARITY_LINE";

     label5:
        return "MOVEMENT_GRANULARITY_PARAGRAPH";

     label6:
        return "MOVEMENT_GRANULARITY_PAGE";
    }

    public static int getVirtualDescendantId(long)
    {
        long l0, $l1, $l2;
        int $i3;

        l0 := @parameter0: long;

        $l1 = -4294967296L & l0;

        $l2 = $l1 >> 32;

        $i3 = (int) $l2;

        return $i3;
    }

    private void init(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r1;
        int i0, i1, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r2, $r16, $r22;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r3, $r17, $r19;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo r4, r5, $r20;
        boolean $z0, $z1;
        long $l2, $l3, $l4, $l5, $l15;
        android.graphics.Rect $r6, $r7, $r8, $r10;
        java.lang.CharSequence $r9, $r11, $r12, $r14;
        java.lang.String $r13;
        android.util.SparseLongArray $r15, $r23, $r24;
        android.os.Bundle $r18, $r21, $r25, $r26;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = r1.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed> = $z0;

        $l2 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = $l2;

        $l3 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = $l3;

        $l4 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = $l4;

        $l5 = r1.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = $l5;

        $i6 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = $i6;

        $i7 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = $i7;

        $r8 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $r6 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        virtualinvoke $r8.<android.graphics.Rect: void set(android.graphics.Rect)>($r6);

        $r10 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $r7 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        virtualinvoke $r10.<android.graphics.Rect: void set(android.graphics.Rect)>($r7);

        $r9 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName> = $r9;

        $r12 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName> = $r12;

        $r11 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText> = $r11;

        $r14 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription> = $r14;

        $r13 = r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName> = $r13;

        $i9 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mActions>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mActions> = $i9;

        $i8 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties> = $i8;

        $i10 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities> = $i10;

        $r15 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        i0 = virtualinvoke $r15.<android.util.SparseLongArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r24 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        $r23 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        $l15 = virtualinvoke $r23.<android.util.SparseLongArray: long valueAt(int)>(i1);

        virtualinvoke $r24.<android.util.SparseLongArray: void put(int,long)>(i1, $l15);

        i1 = i1 + 1;

        goto label1;

     label2:
        $i11 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = $i11;

        $i13 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = $i13;

        $i12 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mInputType>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = $i12;

        $i14 = r1.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion>;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = $i14;

        $r18 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        if $r18 == null goto label3;

        $r21 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        $z1 = virtualinvoke $r21.<android.os.Bundle: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r25 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        $r26 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        virtualinvoke $r25.<android.os.Bundle: void putAll(android.os.Bundle)>($r26);

     label3:
        $r16 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        if $r16 == null goto label7;

        $r22 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        r2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)>($r22);

     label4:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo> = r2;

        $r17 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        if $r17 == null goto label8;

        $r19 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        r3 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)>($r19);

     label5:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo> = r3;

        r4 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        r5 = null;

        if r4 == null goto label6;

        $r20 = r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        r5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)>($r20);

     label6:
        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo> = r5;

        return;

     label7:
        r2 = null;

        goto label4;

     label8:
        r3 = null;

        goto label5;
    }

    private void initFromParcel(android.os.Parcel)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.Parcel r1;
        boolean z0, z1, z2;
        android.util.SparseLongArray r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i11, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, i38, i39, i40, i41, i42, i43, i44;
        long $l9, $l10, $l12, $l13, $l36;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.CharSequence $r11, $r12, $r13, $r14;
        java.lang.String $r15;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r16;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r17;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo $r18;
        android.os.Bundle $r19, $r20;
        float $f0, $f1, $f2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.os.Parcel;

        z0 = 1;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i38 = (int) 1;

        if $i8 != i38 goto label03;

        z1 = 1;

     label01:
        r0.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed> = z1;

        $l9 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = $l9;

        $i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = $i11;

        $l10 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = $l10;

        $l13 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = $l13;

        $l12 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = $l12;

        $i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = $i14;

        r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label04;

        $l36 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        virtualinvoke r2.<android.util.SparseLongArray: void put(int,long)>(i1, $l36);

        i1 = i1 + 1;

        goto label02;

     label03:
        z1 = 0;

        goto label01;

     label04:
        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r3.<android.graphics.Rect: int top> = $i15;

        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i16 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r4.<android.graphics.Rect: int bottom> = $i16;

        $r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r5.<android.graphics.Rect: int left> = $i17;

        $r6 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r6.<android.graphics.Rect: int right> = $i18;

        $r7 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i19 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r7.<android.graphics.Rect: int top> = $i19;

        $r9 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i21 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r9.<android.graphics.Rect: int bottom> = $i21;

        $r8 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i20 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r8.<android.graphics.Rect: int left> = $i20;

        $r10 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i24 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r10.<android.graphics.Rect: int right> = $i24;

        $i22 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mActions> = $i22;

        $i23 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities> = $i23;

        $i25 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties> = $i25;

        $r13 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName> = $r13;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName> = $r11;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText> = $r12;

        $r14 = virtualinvoke r1.<android.os.Parcel: java.lang.CharSequence readCharSequence()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription> = $r14;

        $r15 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName> = $r15;

        $i26 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = $i26;

        $i27 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = $i27;

        $i31 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = $i31;

        $i30 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = $i30;

        $i29 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i39 = (int) 1;

        if $i29 != i39 goto label05;

        $r19 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>();

        $r20 = virtualinvoke r1.<android.os.Parcel: android.os.Bundle readBundle()>();

        virtualinvoke $r19.<android.os.Bundle: void putAll(android.os.Bundle)>($r20);

     label05:
        $i28 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i40 = (int) 1;

        if $i28 != i40 goto label06;

        $i37 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $f0 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        $f1 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        $f2 = virtualinvoke r1.<android.os.Parcel: float readFloat()>();

        $r18 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$RangeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo obtain(int,float,float,float)>($i37, $f0, $f1, $f2);

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo> = $r18;

     label06:
        $i33 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i41 = (int) 1;

        if $i33 != i41 goto label08;

        i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i35 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i42 = (int) 1;

        if $i35 != i42 goto label11;

        z2 = 1;

     label07:
        $r17 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean)>(i6, i7, z2);

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo> = $r17;

     label08:
        $i32 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i43 = (int) 1;

        if $i32 != i43 goto label10;

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $i34 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i44 = (int) 1;

        if $i34 != i44 goto label12;

     label09:
        $r16 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean)>(i2, i3, i4, i5, z0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo> = $r16;

     label10:
        return;

     label11:
        z2 = 0;

        goto label07;

     label12:
        z0 = 0;

        goto label09;
    }

    public static long makeNodeId(int, int)
    {
        int i0, i1;
        long $l2, $l3, $l4, $l5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = (long) i1;

        $l4 = $l2 << 32;

        $l3 = (long) i0;

        $l5 = $l4 | $l3;

        return $l5;
    }

    public static android.view.accessibility.AccessibilityNodeInfo obtain()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r3;
        android.util.Pools$SynchronizedPool $r1;
        java.lang.Object $r2;

        $r1 = <android.view.accessibility.AccessibilityNodeInfo: android.util.Pools$SynchronizedPool sPool>;

        $r2 = virtualinvoke $r1.<android.util.Pools$SynchronizedPool: java.lang.Object acquire()>();

        r0 = (android.view.accessibility.AccessibilityNodeInfo) $r2;

        if r0 == null goto label1;

        return r0;

     label1:
        $r3 = new android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke $r3.<android.view.accessibility.AccessibilityNodeInfo: void <init>()>();

        return $r3;
    }

    public static android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)
    {
        android.view.View r0;
        android.view.accessibility.AccessibilityNodeInfo r1;

        r0 := @parameter0: android.view.View;

        r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>(r0);

        return r1;
    }

    public static android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View, int)
    {
        android.view.View r0;
        int i0;
        android.view.accessibility.AccessibilityNodeInfo r1;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>(r0, i0);

        return r1;
    }

    public static android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r1;

        r0 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>();

        specialinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void init(android.view.accessibility.AccessibilityNodeInfo)>(r0);

        return r1;
    }

    private void setBooleanProperty(int, boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if z0 == 0 goto label1;

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        $i5 = i0 | $i4;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties> = $i5;

        return;

     label1:
        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        $i1 = i0 ^ -1;

        $i3 = $i2 & $i1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties> = $i3;

        return;
    }

    public void addAction(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i1, $i2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $i1 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mActions>;

        $i2 = i0 | $i1;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mActions> = $i2;

        return;
    }

    public void addChild(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)>(r1, -1);

        return;
    }

    public void addChild(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i1, i2;
        long l3;
        android.util.SparseLongArray $r2, $r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        i1 = virtualinvoke $r2.<android.util.SparseLongArray: int size()>();

        if r1 == null goto label2;

        i2 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

     label1:
        l3 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i2, i0);

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        virtualinvoke $r3.<android.util.SparseLongArray: void put(int,long)>(i1, l3);

        return;

     label2:
        i2 = -1;

        goto label1;
    }

    public boolean canOpenPopup()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(8192);

        return $z0;
    }

    public int describeContents()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        return 0;
    }

    protected void enforceNotSealed()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot perform this action on a sealed instance.");

        throw $r1;

     label1:
        return;
    }

    protected void enforceSealed()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot perform this action on a not sealed instance.");

        throw $r1;

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        long $l0, $l1;
        byte $b2;
        int $i3, $i4;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label2;

     label1:
        return 1;

     label2:
        if r1 != null goto label3;

        return 0;

     label3:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label4;

        return 0;

     label4:
        r2 = (android.view.accessibility.AccessibilityNodeInfo) r1;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $l0 = r2.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label5;

        return 0;

     label5:
        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $i3 = r2.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        if $i4 == $i3 goto label1;

        return 0;
    }

    public java.util.List findAccessibilityNodeInfosByText(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.String r1;
        long $l0, $l1;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r2;
        int $i2, $i3;
        java.util.List $r3, $r4;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l0);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label1:
        $r2 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r3 = virtualinvoke $r2.<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByText(int,int,long,java.lang.String)>($i3, $i2, $l1, r1);

        return $r3;
    }

    public java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.String r1;
        long $l0, $l1;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r2;
        int $i2, $i3;
        java.util.List $r3, $r4;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l0);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label1:
        $r2 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r3 = virtualinvoke $r2.<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByViewId(int,int,long,java.lang.String)>($i3, $i2, $l1, r1);

        return $r3;
    }

    public android.view.accessibility.AccessibilityNodeInfo findFocus(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r2;
        int i0, $i3, $i4;
        long $l1, $l2;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceValidFocusType(int)>(i0);

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l2 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findFocus(int,int,long,int)>($i4, $i3, $l2, i0);

        return $r2;
    }

    public android.view.accessibility.AccessibilityNodeInfo focusSearch(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r2;
        int i0, $i3, $i4;
        long $l1, $l2;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceValidFocusDirection(int)>(i0);

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l2 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo focusSearch(int,int,long,int)>($i4, $i3, $l2, i0);

        return $r2;
    }

    public int getActions()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mActions>;

        return $i0;
    }

    public void getBoundsInParent(android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i3 = $r2.<android.graphics.Rect: int left>;

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i2 = $r3.<android.graphics.Rect: int top>;

        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i0 = $r5.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void getBoundsInScreen(android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.graphics.Rect r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i3 = $r2.<android.graphics.Rect: int left>;

        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i2 = $r3.<android.graphics.Rect: int top>;

        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i1 = $r4.<android.graphics.Rect: int right>;

        $r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i0 = $r5.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public android.view.accessibility.AccessibilityNodeInfo getChild(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r3;
        int i0, $i3, $i4;
        long l1, $l2;
        boolean $z0;
        android.util.SparseLongArray $r1;
        android.view.accessibility.AccessibilityInteractionClient $r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $l2 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        l1 = virtualinvoke $r1.<android.util.SparseLongArray: long get(int)>(i0);

        $r2 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $r3 = virtualinvoke $r2.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int)>($i4, $i3, l1, 0, 4);

        return $r3;
    }

    public int getChildCount()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.util.SparseLongArray $r1;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        $i0 = virtualinvoke $r1.<android.util.SparseLongArray: int size()>();

        return $i0;
    }

    public android.util.SparseLongArray getChildNodeIds()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.util.SparseLongArray $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        return $r1;
    }

    public java.lang.CharSequence getClassName()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo$CollectionInfo getCollectionInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo getCollectionItemInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        return $r1;
    }

    public java.lang.CharSequence getContentDescription()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        return $r1;
    }

    public android.os.Bundle getExtras()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.Bundle $r1, $r2, $r3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        if $r1 != null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras> = $r3;

     label1:
        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        return $r2;
    }

    public int getInputType()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType>;

        return $i0;
    }

    public android.view.accessibility.AccessibilityNodeInfo getLabelFor()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r2;
        long $l0, $l1;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        int $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int)>($i3, $i2, $l1, 0, 6);

        return $r2;
    }

    public android.view.accessibility.AccessibilityNodeInfo getLabeledBy()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r2;
        long $l0, $l1;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        int $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int)>($i3, $i2, $l1, 0, 6);

        return $r2;
    }

    public int getLiveRegion()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion>;

        return $i0;
    }

    public int getMovementGranularities()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities>;

        return $i0;
    }

    public java.lang.CharSequence getPackageName()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        return $r1;
    }

    public android.view.accessibility.AccessibilityNodeInfo getParent()
    {
        android.view.accessibility.AccessibilityNodeInfo r0, $r2;
        long $l0, $l1;
        boolean $z0;
        android.view.accessibility.AccessibilityInteractionClient $r1;
        int $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        $r2 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int)>($i3, $i2, $l1, 0, 6);

        return $r2;
    }

    public long getParentNodeId()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        return $l0;
    }

    public android.view.accessibility.AccessibilityNodeInfo$RangeInfo getRangeInfo()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        return $r1;
    }

    public long getSourceNodeId()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        return $l0;
    }

    public java.lang.CharSequence getText()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        return $r1;
    }

    public int getTextSelectionEnd()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd>;

        return $i0;
    }

    public int getTextSelectionStart()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart>;

        return $i0;
    }

    public java.lang.String getViewIdResourceName()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.String $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r1 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        return $r1;
    }

    public int getWindowId()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int $i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        return $i0;
    }

    public int hashCode()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        long $l0, $l3;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $i1 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>($l0);

        $i2 = 31 + $i1;

        $i4 = 31 * $i2;

        $l3 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>($l3);

        $i6 = $i4 + $i5;

        $i8 = 31 * $i6;

        $i7 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $i9 = $i8 + $i7;

        return $i9;
    }

    public boolean isAccessibilityFocused()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(1024);

        return $z0;
    }

    public boolean isCheckable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(1);

        return $z0;
    }

    public boolean isChecked()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(2);

        return $z0;
    }

    public boolean isClickable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(32);

        return $z0;
    }

    public boolean isContentInvalid()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(65536);

        return $z0;
    }

    public boolean isDismissable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(16384);

        return $z0;
    }

    public boolean isEditable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(4096);

        return $z0;
    }

    public boolean isEnabled()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(128);

        return $z0;
    }

    public boolean isFocusable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(4);

        return $z0;
    }

    public boolean isFocused()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(8);

        return $z0;
    }

    public boolean isLongClickable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(64);

        return $z0;
    }

    public boolean isMultiLine()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(32768);

        return $z0;
    }

    public boolean isPassword()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(256);

        return $z0;
    }

    public boolean isScrollable()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(512);

        return $z0;
    }

    public boolean isSealed()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = r0.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed>;

        return $z0;
    }

    public boolean isSelected()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(16);

        return $z0;
    }

    public boolean isVisibleToUser()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)>(2048);

        return $z0;
    }

    public boolean performAction(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i3, $i4;
        long $l1, $l2;
        boolean $z0, $z1;
        android.view.accessibility.AccessibilityInteractionClient $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l2 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z1 = virtualinvoke $r1.<android.view.accessibility.AccessibilityInteractionClient: boolean performAccessibilityAction(int,int,long,int,android.os.Bundle)>($i4, $i3, $l2, i0, null);

        return $z1;
    }

    public boolean performAction(int, android.os.Bundle)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, $i3, $i4;
        android.os.Bundle r1;
        long $l1, $l2;
        boolean $z0, $z1;
        android.view.accessibility.AccessibilityInteractionClient $r2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z0 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i4 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l2 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityInteractionClient: boolean performAccessibilityAction(int,int,long,int,android.os.Bundle)>($i4, $i3, $l2, i0, r1);

        return $z1;
    }

    public void recycle()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.util.Pools$SynchronizedPool $r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void clear()>();

        $r1 = <android.view.accessibility.AccessibilityNodeInfo: android.util.Pools$SynchronizedPool sPool>;

        virtualinvoke $r1.<android.util.Pools$SynchronizedPool: boolean release(java.lang.Object)>(r0);

        return;
    }

    public boolean refresh()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean $z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean refresh(boolean)>(0);

        return $z0;
    }

    public boolean refresh(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0, r1;
        boolean z0, $z1;
        long $l0, $l1;
        android.view.accessibility.AccessibilityInteractionClient $r2;
        int $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>();

        $l0 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        $z1 = specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)>($l0);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>();

        $i3 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        $i2 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        $l1 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        r1 = virtualinvoke $r2.<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int)>($i3, $i2, $l1, z0, 0);

        if r1 == null goto label1;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void init(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void recycle()>();

        return 1;
    }

    public void setAccessibilityFocused(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(1024, z0);

        return;
    }

    public void setBoundsInParent(android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.graphics.Rect r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void setBoundsInScreen(android.graphics.Rect)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.graphics.Rect r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.graphics.Rect;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        $r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i3 = r1.<android.graphics.Rect: int left>;

        $i2 = r1.<android.graphics.Rect: int top>;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int bottom>;

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void setCanOpenPopup(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(8192, z0);

        return;
    }

    public void setCheckable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(1, z0);

        return;
    }

    public void setChecked(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(2, z0);

        return;
    }

    public void setClassName(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName> = r1;

        return;
    }

    public void setClickable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(32, z0);

        return;
    }

    public void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo> = r1;

        return;
    }

    public void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo> = r1;

        return;
    }

    public void setConnectionId(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId> = i0;

        return;
    }

    public void setContentDescription(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription> = r1;

        return;
    }

    public void setContentInvalid(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(65536, z0);

        return;
    }

    public void setDismissable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(16384, z0);

        return;
    }

    public void setEditable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(4096, z0);

        return;
    }

    public void setEnabled(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(128, z0);

        return;
    }

    public void setFocusable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(4, z0);

        return;
    }

    public void setFocused(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(8, z0);

        return;
    }

    public void setInputType(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType> = i0;

        return;
    }

    public void setLabelFor(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)>(r1, -1);

        return;
    }

    public void setLabelFor(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i1;
        long $l2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label2;

        i1 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

     label1:
        $l2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i1, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId> = $l2;

        return;

     label2:
        i1 = -1;

        goto label1;
    }

    public void setLabeledBy(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)>(r1, -1);

        return;
    }

    public void setLabeledBy(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i1;
        long $l2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label2;

        i1 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

     label1:
        $l2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i1, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById> = $l2;

        return;

     label2:
        i1 = -1;

        goto label1;
    }

    public void setLiveRegion(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion> = i0;

        return;
    }

    public void setLongClickable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(64, z0);

        return;
    }

    public void setMovementGranularities(int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities> = i0;

        return;
    }

    public void setMultiLine(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(32768, z0);

        return;
    }

    public void setPackageName(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName> = r1;

        return;
    }

    public void setParent(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>(r1, -1);

        return;
    }

    public void setParent(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i1;
        long $l2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label2;

        i1 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

     label1:
        $l2 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i1, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId> = $l2;

        return;

     label2:
        i1 = -1;

        goto label1;
    }

    public void setPassword(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(256, z0);

        return;
    }

    public void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo$RangeInfo)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo$RangeInfo;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo> = r1;

        return;
    }

    public void setScrollable(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(512, z0);

        return;
    }

    public void setSealed(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        r0.<android.view.accessibility.AccessibilityNodeInfo: boolean mSealed> = z0;

        return;
    }

    public void setSelected(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(16, z0);

        return;
    }

    public void setSource(android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>(r1, -1);

        return;
    }

    public void setSource(android.view.View, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.view.View r1;
        int i0, i1, i2;
        long $l3;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        if r1 == null goto label3;

        i1 = virtualinvoke r1.<android.view.View: int getAccessibilityWindowId()>();

     label1:
        r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId> = i1;

        if r1 == null goto label4;

        i2 = virtualinvoke r1.<android.view.View: int getAccessibilityViewId()>();

     label2:
        $l3 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>(i2, i0);

        r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId> = $l3;

        return;

     label3:
        i1 = -1;

        goto label1;

     label4:
        i2 = -1;

        goto label2;
    }

    public void setText(java.lang.CharSequence)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.CharSequence r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.CharSequence;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText> = r1;

        return;
    }

    public void setTextSelection(int, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        int i0, i1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart> = i0;

        r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd> = i1;

        return;
    }

    public void setViewIdResourceName(java.lang.String)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.String r1;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>();

        r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName> = r1;

        return;
    }

    public void setVisibleToUser(boolean)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        boolean z0;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void setBooleanProperty(int,boolean)>(2048, z0);

        return;
    }

    public java.lang.String toString()
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        java.lang.StringBuilder r1, $r3, $r4, $r7, $r9, $r10, $r13, $r15, $r16, $r18, $r25, $r26, $r29, $r30, $r34, $r36, $r38, $r40, $r43, $r45, $r46, $r48, $r50, $r53, $r55;
        int i0, i1, $i2, $i3;
        java.lang.String $r2, $r8, $r17, $r32, $r49, $r56, $r59;
        android.graphics.Rect $r6, $r11;
        java.lang.CharSequence $r19, $r20, $r22, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; boundsInParent: ");

        $r6 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; boundsInScreen: ");

        $r11 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; packageName: ");

        $r20 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r20);

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; className: ");

        $r19 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r19);

        $r25 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; text: ");

        $r22 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r22);

        $r29 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; contentDescription: ");

        $r28 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r28);

        $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; viewIdResName: ");

        $r32 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; checkable: ");

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r34 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; checked: ");

        $z1 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>();

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r38 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; focusable: ");

        $z2 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r36 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; focused: ");

        $z4 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>();

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r43 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; selected: ");

        $z5 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r40 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; clickable: ");

        $z3 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r46 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; longClickable: ");

        $z8 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>();

        virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r48 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; enabled: ");

        $z6 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>();

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r45 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; password: ");

        $z7 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isPassword()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z7);

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; scrollable: ");

        $z9 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>();

        $r50 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z9);

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; [");

        i0 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mActions>;

     label1:
        if i0 == 0 goto label2;

        $i3 = staticinvoke <java.lang.Integer: int numberOfTrailingZeros(int)>(i0);

        i1 = 1 << $i3;

        $i2 = i1 ^ -1;

        i0 = i0 & $i2;

        $r56 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: java.lang.String getActionSymbolicName(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        if i0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r59 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r59;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.view.accessibility.AccessibilityNodeInfo r0;
        android.os.Parcel r1;
        int i0, i3, i4, $i7, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        byte b1, b2, b5;
        android.util.SparseLongArray r2;
        boolean $z0, $z1, $z2;
        long $l6, $l8, $l9, $l10, $l34;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.lang.CharSequence $r11, $r12, $r13, $r14;
        java.lang.String $r15;
        android.view.accessibility.AccessibilityNodeInfo$RangeInfo $r16, $r28, $r29, $r30, $r31;
        android.view.accessibility.AccessibilityNodeInfo$CollectionInfo $r17, $r24, $r26, $r27;
        android.os.Bundle $r18, $r32;
        android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo $r19, $r20, $r21, $r22, $r23, $r25;
        float $f0, $f1, $f2;

        r0 := @this: android.view.accessibility.AccessibilityNodeInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        b1 = 1;

        $z0 = virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>();

        if $z0 == 0 goto label03;

        b2 = 1;

     label01:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b2);

        $l6 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mSourceNodeId>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l6);

        $i7 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mWindowId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $l8 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mParentNodeId>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l8);

        $l9 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabelForId>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l9);

        $l10 = r0.<android.view.accessibility.AccessibilityNodeInfo: long mLabeledById>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l10);

        $i11 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mConnectionId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i11);

        r2 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray mChildNodeIds>;

        i3 = virtualinvoke r2.<android.util.SparseLongArray: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i3);

        i4 = 0;

     label02:
        if i4 >= i3 goto label04;

        $l34 = virtualinvoke r2.<android.util.SparseLongArray: long valueAt(int)>(i4);

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l34);

        i4 = i4 + 1;

        goto label02;

     label03:
        b2 = 0;

        goto label01;

     label04:
        $r3 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i12 = $r3.<android.graphics.Rect: int top>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i12);

        $r4 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i13 = $r4.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i13);

        $r5 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i14 = $r5.<android.graphics.Rect: int left>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i14);

        $r6 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInParent>;

        $i15 = $r6.<android.graphics.Rect: int right>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i15);

        $r7 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i16 = $r7.<android.graphics.Rect: int top>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i16);

        $r8 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i17 = $r8.<android.graphics.Rect: int bottom>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i17);

        $r9 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i18 = $r9.<android.graphics.Rect: int left>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i18);

        $r10 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.graphics.Rect mBoundsInScreen>;

        $i21 = $r10.<android.graphics.Rect: int right>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i21);

        $i22 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mActions>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i22);

        $i19 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mMovementGranularities>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i19);

        $i20 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mBooleanProperties>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i20);

        $r13 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mPackageName>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r13);

        $r14 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mClassName>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r14);

        $r11 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mText>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r11);

        $r12 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence mContentDescription>;

        virtualinvoke r1.<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>($r12);

        $r15 = r0.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String mViewIdResourceName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r15);

        $i25 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionStart>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i25);

        $i23 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mTextSelectionEnd>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i23);

        $i24 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mInputType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i24);

        $i26 = r0.<android.view.accessibility.AccessibilityNodeInfo: int mLiveRegion>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i26);

        $r18 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        if $r18 == null goto label11;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r32 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r32);

     label05:
        $r16 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        if $r16 == null goto label12;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r30 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $i33 = virtualinvoke $r30.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: int getType()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i33);

        $r31 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $f0 = virtualinvoke $r31.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMin()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f0);

        $r28 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $f1 = virtualinvoke $r28.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getMax()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f1);

        $r29 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$RangeInfo mRangeInfo>;

        $f2 = virtualinvoke $r29.<android.view.accessibility.AccessibilityNodeInfo$RangeInfo: float getCurrent()>();

        virtualinvoke r1.<android.os.Parcel: void writeFloat(float)>($f2);

     label06:
        $r17 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        if $r17 == null goto label14;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r24 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        $i32 = virtualinvoke $r24.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getRowCount()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i32);

        $r27 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        $i31 = virtualinvoke $r27.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: int getColumnCount()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i31);

        $r26 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionInfo mCollectionInfo>;

        $z2 = virtualinvoke $r26.<android.view.accessibility.AccessibilityNodeInfo$CollectionInfo: boolean isHierarchical()>();

        if $z2 == 0 goto label13;

        b5 = 1;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b5);

     label08:
        $r21 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        if $r21 == null goto label16;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r20 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $i27 = virtualinvoke $r20.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnIndex()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i27);

        $r19 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $i29 = virtualinvoke $r19.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getColumnSpan()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i29);

        $r23 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $i28 = virtualinvoke $r23.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowIndex()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i28);

        $r22 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $i30 = virtualinvoke $r22.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: int getRowSpan()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i30);

        $r25 = r0.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo mCollectionItemInfo>;

        $z1 = virtualinvoke $r25.<android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo: boolean isHeading()>();

        if $z1 == 0 goto label15;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(b1);

     label10:
        virtualinvoke r0.<android.view.accessibility.AccessibilityNodeInfo: void recycle()>();

        return;

     label11:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label05;

     label12:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label06;

     label13:
        b5 = 0;

        goto label07;

     label14:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label08;

     label15:
        b1 = 0;

        goto label09;

     label16:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        goto label10;
    }
}
