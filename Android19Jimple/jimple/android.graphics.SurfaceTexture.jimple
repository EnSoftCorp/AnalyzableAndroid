public class android.graphics.SurfaceTexture extends java.lang.Object
{
    private int mBufferQueue;
    private android.graphics.SurfaceTexture$EventHandler mEventHandler;
    private int mFrameAvailableListener;
    private android.graphics.SurfaceTexture$OnFrameAvailableListener mOnFrameAvailableListener;
    private int mSurfaceTexture;

    static void <clinit>()
    {
        staticinvoke <android.graphics.SurfaceTexture: void nativeClassInit()>();

        return;
    }

    public void <init>(int)
    {
        android.graphics.SurfaceTexture r0;
        int i0;

        r0 := @this: android.graphics.SurfaceTexture;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.graphics.SurfaceTexture: void init(int,boolean)>(i0, 0);

        return;
    }

    public void <init>(int, boolean)
    {
        android.graphics.SurfaceTexture r0;
        int i0;
        boolean z0;

        r0 := @this: android.graphics.SurfaceTexture;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.graphics.SurfaceTexture: void init(int,boolean)>(i0, z0);

        return;
    }

    static android.graphics.SurfaceTexture$OnFrameAvailableListener access$000(android.graphics.SurfaceTexture)
    {
        android.graphics.SurfaceTexture r0;
        android.graphics.SurfaceTexture$OnFrameAvailableListener $r1;

        r0 := @parameter0: android.graphics.SurfaceTexture;

        $r1 = r0.<android.graphics.SurfaceTexture: android.graphics.SurfaceTexture$OnFrameAvailableListener mOnFrameAvailableListener>;

        return $r1;
    }

    private void init(int, boolean) throws android.view.Surface$OutOfResourcesException
    {
        android.graphics.SurfaceTexture r0;
        int i0;
        boolean z0;
        android.os.Looper r1, r2;
        java.lang.ref.WeakReference $r3;
        android.graphics.SurfaceTexture$EventHandler $r4, $r5;

        r0 := @this: android.graphics.SurfaceTexture;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if r1 == null goto label2;

        $r5 = new android.graphics.SurfaceTexture$EventHandler;

        specialinvoke $r5.<android.graphics.SurfaceTexture$EventHandler: void <init>(android.graphics.SurfaceTexture,android.os.Looper)>(r0, r1);

        r0.<android.graphics.SurfaceTexture: android.graphics.SurfaceTexture$EventHandler mEventHandler> = $r5;

     label1:
        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0);

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeInit(int,boolean,java.lang.Object)>(i0, z0, $r3);

        return;

     label2:
        r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if r2 == null goto label3;

        $r4 = new android.graphics.SurfaceTexture$EventHandler;

        specialinvoke $r4.<android.graphics.SurfaceTexture$EventHandler: void <init>(android.graphics.SurfaceTexture,android.os.Looper)>(r0, r2);

        r0.<android.graphics.SurfaceTexture: android.graphics.SurfaceTexture$EventHandler mEventHandler> = $r4;

        goto label1;

     label3:
        r0.<android.graphics.SurfaceTexture: android.graphics.SurfaceTexture$EventHandler mEventHandler> = null;

        goto label1;
    }

    private native int nativeAttachToGLContext(int);

    private static native void nativeClassInit();

    private native int nativeDetachFromGLContext();

    private native void nativeFinalize();

    private native int nativeGetQueuedCount();

    private native long nativeGetTimestamp();

    private native void nativeGetTransformMatrix(float[]);

    private native void nativeInit(int, boolean, java.lang.Object) throws android.view.Surface$OutOfResourcesException;

    private native void nativeRelease();

    private native void nativeReleaseTexImage();

    private native void nativeSetDefaultBufferSize(int, int);

    private native void nativeUpdateTexImage();

    private static void postEventFromNative(java.lang.Object)
    {
        java.lang.Object r0, $r4;
        android.graphics.SurfaceTexture r1;
        android.os.Message r2;
        java.lang.ref.WeakReference $r3;
        android.graphics.SurfaceTexture$EventHandler $r5, $r6, $r7;

        r0 := @parameter0: java.lang.Object;

        $r3 = (java.lang.ref.WeakReference) r0;

        $r4 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        r1 = (android.graphics.SurfaceTexture) $r4;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $r5 = r1.<android.graphics.SurfaceTexture: android.graphics.SurfaceTexture$EventHandler mEventHandler>;

        if $r5 == null goto label1;

        $r6 = r1.<android.graphics.SurfaceTexture: android.graphics.SurfaceTexture$EventHandler mEventHandler>;

        r2 = virtualinvoke $r6.<android.graphics.SurfaceTexture$EventHandler: android.os.Message obtainMessage()>();

        $r7 = r1.<android.graphics.SurfaceTexture: android.graphics.SurfaceTexture$EventHandler mEventHandler>;

        virtualinvoke $r7.<android.graphics.SurfaceTexture$EventHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public void attachToGLContext(int)
    {
        android.graphics.SurfaceTexture r0;
        int i0, $i1;
        java.lang.RuntimeException $r1;

        r0 := @this: android.graphics.SurfaceTexture;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<android.graphics.SurfaceTexture: int nativeAttachToGLContext(int)>(i0);

        if $i1 == 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error during attachToGLContext (see logcat for details)");

        throw $r1;

     label1:
        return;
    }

    public void detachFromGLContext()
    {
        android.graphics.SurfaceTexture r0;
        int $i0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.graphics.SurfaceTexture;

        $i0 = specialinvoke r0.<android.graphics.SurfaceTexture: int nativeDetachFromGLContext()>();

        if $i0 == 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error during detachFromGLContext (see logcat for details)");

        throw $r1;

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.SurfaceTexture r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.graphics.SurfaceTexture;

     label1:
        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeFinalize()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public long getTimestamp()
    {
        android.graphics.SurfaceTexture r0;
        long $l0;

        r0 := @this: android.graphics.SurfaceTexture;

        $l0 = specialinvoke r0.<android.graphics.SurfaceTexture: long nativeGetTimestamp()>();

        return $l0;
    }

    public void getTransformMatrix(float[])
    {
        android.graphics.SurfaceTexture r0;
        float[] r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.graphics.SurfaceTexture;

        r1 := @parameter0: float[];

        $i0 = lengthof r1;

        if $i0 == 16 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeGetTransformMatrix(float[])>(r1);

        return;
    }

    public void release()
    {
        android.graphics.SurfaceTexture r0;

        r0 := @this: android.graphics.SurfaceTexture;

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeRelease()>();

        return;
    }

    public void releaseTexImage()
    {
        android.graphics.SurfaceTexture r0;

        r0 := @this: android.graphics.SurfaceTexture;

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeReleaseTexImage()>();

        return;
    }

    public void setDefaultBufferSize(int, int)
    {
        android.graphics.SurfaceTexture r0;
        int i0, i1;

        r0 := @this: android.graphics.SurfaceTexture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeSetDefaultBufferSize(int,int)>(i0, i1);

        return;
    }

    public void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)
    {
        android.graphics.SurfaceTexture r0;
        android.graphics.SurfaceTexture$OnFrameAvailableListener r1;

        r0 := @this: android.graphics.SurfaceTexture;

        r1 := @parameter0: android.graphics.SurfaceTexture$OnFrameAvailableListener;

        r0.<android.graphics.SurfaceTexture: android.graphics.SurfaceTexture$OnFrameAvailableListener mOnFrameAvailableListener> = r1;

        return;
    }

    public void updateTexImage()
    {
        android.graphics.SurfaceTexture r0;

        r0 := @this: android.graphics.SurfaceTexture;

        specialinvoke r0.<android.graphics.SurfaceTexture: void nativeUpdateTexImage()>();

        return;
    }
}
