final class android.view.AccessibilityInteractionController extends java.lang.Object
{
    private android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId;
    private final android.os.Handler mHandler;
    private final long mMyLooperThreadId;
    private final int mMyProcessId;
    private final android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher mPrefetcher;
    private final java.util.ArrayList mTempAccessibilityNodeInfoList;
    private final java.util.ArrayList mTempArrayList;
    private final android.graphics.Point mTempPoint;
    private final android.graphics.Rect mTempRect;
    private final android.graphics.Rect mTempRect1;
    private final android.graphics.Rect mTempRect2;
    private final android.view.ViewRootImpl mViewRootImpl;

    public void <init>(android.view.ViewRootImpl)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.ViewRootImpl r1;
        android.os.Looper r2;
        java.util.ArrayList $r3, $r4;
        android.graphics.Point $r5;
        android.graphics.Rect $r6, $r7, $r8;
        android.view.ViewRootImpl$ViewRootHandler $r9;
        java.lang.Thread $r10;
        long $l0;
        int $i1;
        android.view.AccessibilityInteractionController$PrivateHandler $r11;
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher $r12;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.ViewRootImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempArrayList> = $r4;

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect1> = $r7;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect2> = $r8;

        $r9 = r1.<android.view.ViewRootImpl: android.view.ViewRootImpl$ViewRootHandler mHandler>;

        r2 = virtualinvoke $r9.<android.view.ViewRootImpl$ViewRootHandler: android.os.Looper getLooper()>();

        $r10 = virtualinvoke r2.<android.os.Looper: java.lang.Thread getThread()>();

        $l0 = virtualinvoke $r10.<java.lang.Thread: long getId()>();

        r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId> = $l0;

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        r0.<android.view.AccessibilityInteractionController: int mMyProcessId> = $i1;

        $r11 = new android.view.AccessibilityInteractionController$PrivateHandler;

        specialinvoke $r11.<android.view.AccessibilityInteractionController$PrivateHandler: void <init>(android.view.AccessibilityInteractionController,android.os.Looper)>(r0, r2);

        r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler> = $r11;

        r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl> = r1;

        $r12 = new android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher;

        specialinvoke $r12.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController$1)>(r0, null);

        r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher mPrefetcher> = $r12;

        return;
    }

    static boolean access$200(android.view.AccessibilityInteractionController, android.view.View)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.View r1;
        boolean $z0;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.view.View;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r1);

        return $z0;
    }

    static void access$300(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfoByAccessibilityIdUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$400(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void perfromAccessibilityActionUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$500(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByViewIdUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$600(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByTextUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$700(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void findFocusUiThread(android.os.Message)>(r1);

        return;
    }

    static void access$800(android.view.AccessibilityInteractionController, android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;

        r0 := @parameter0: android.view.AccessibilityInteractionController;

        r1 := @parameter1: android.os.Message;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void focusSearchUiThread(android.os.Message)>(r1);

        return;
    }

    private void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        android.view.MagnificationSpec r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        android.graphics.Rect r3, r4, r6, r7;
        android.view.View$AttachInfo r5, $r9;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.view.ViewRootImpl $r8, $r11, $r12, $r13;
        boolean $z0, $z2;
        byte $b2;
        android.view.Display $r10, $r16;
        android.graphics.Point $r14, $r15, $r17;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        r2 := @parameter1: android.view.MagnificationSpec;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $r8 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r9 = $r8.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        f0 = $r9.<android.view.View$AttachInfo: float mApplicationScale>;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldApplyAppScaleAndMagnificationSpec(float,android.view.MagnificationSpec)>(f0, r2);

        if $z0 == 0 goto label1;

        r3 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect>;

        r4 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect1>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>(r3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>(r4);

        $b2 = f0 cmpl 1.0F;

        if $b2 == 0 goto label3;

        virtualinvoke r3.<android.graphics.Rect: void scale(float)>(f0);

        virtualinvoke r4.<android.graphics.Rect: void scale(float)>(f0);

     label3:
        if r2 == null goto label4;

        $f21 = r2.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r3.<android.graphics.Rect: void scale(float)>($f21);

        $f20 = r2.<android.view.MagnificationSpec: float scale>;

        virtualinvoke r4.<android.graphics.Rect: void scale(float)>($f20);

        $f23 = r2.<android.view.MagnificationSpec: float offsetX>;

        $i17 = (int) $f23;

        $f22 = r2.<android.view.MagnificationSpec: float offsetY>;

        $i18 = (int) $f22;

        virtualinvoke r4.<android.graphics.Rect: void offset(int,int)>($i17, $i18);

     label4:
        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>(r3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>(r4);

        if r2 == null goto label1;

        $r11 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r5 = $r11.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r10 = r5.<android.view.View$AttachInfo: android.view.Display mDisplay>;

        if $r10 == null goto label1;

        $f2 = r5.<android.view.View$AttachInfo: float mApplicationScale>;

        $f3 = r2.<android.view.MagnificationSpec: float scale>;

        f1 = $f2 * $f3;

        r6 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect1>;

        $i3 = r5.<android.view.View$AttachInfo: int mWindowLeft>;

        $f4 = (float) $i3;

        $f5 = f1 * $f4;

        $f6 = r2.<android.view.MagnificationSpec: float offsetX>;

        $f7 = $f5 + $f6;

        $i4 = (int) $f7;

        r6.<android.graphics.Rect: int left> = $i4;

        $i5 = r5.<android.view.View$AttachInfo: int mWindowTop>;

        $f8 = (float) $i5;

        $f9 = f1 * $f8;

        $f10 = r2.<android.view.MagnificationSpec: float offsetY>;

        $f11 = $f9 + $f10;

        $i6 = (int) $f11;

        r6.<android.graphics.Rect: int top> = $i6;

        $i8 = r6.<android.graphics.Rect: int left>;

        $f15 = (float) $i8;

        $r12 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $i7 = $r12.<android.view.ViewRootImpl: int mWidth>;

        $f12 = (float) $i7;

        $f14 = f1 * $f12;

        $f13 = $f15 + $f14;

        $i9 = (int) $f13;

        r6.<android.graphics.Rect: int right> = $i9;

        $i11 = r6.<android.graphics.Rect: int top>;

        $f19 = (float) $i11;

        $r13 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $i10 = $r13.<android.view.ViewRootImpl: int mHeight>;

        $f16 = (float) $i10;

        $f18 = f1 * $f16;

        $f17 = $f19 + $f18;

        $i12 = (int) $f17;

        r6.<android.graphics.Rect: int bottom> = $i12;

        $r16 = r5.<android.view.View$AttachInfo: android.view.Display mDisplay>;

        $r17 = r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint>;

        virtualinvoke $r16.<android.view.Display: void getRealSize(android.graphics.Point)>($r17);

        $r15 = r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint>;

        i0 = $r15.<android.graphics.Point: int x>;

        $r14 = r0.<android.view.AccessibilityInteractionController: android.graphics.Point mTempPoint>;

        i1 = $r14.<android.graphics.Point: int y>;

        r7 = r0.<android.view.AccessibilityInteractionController: android.graphics.Rect mTempRect2>;

        virtualinvoke r7.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, i0, i1);

        virtualinvoke r6.<android.graphics.Rect: boolean intersect(android.graphics.Rect)>(r7);

        $i16 = r4.<android.graphics.Rect: int left>;

        $i13 = r4.<android.graphics.Rect: int top>;

        $i14 = r4.<android.graphics.Rect: int right>;

        $i15 = r4.<android.graphics.Rect: int bottom>;

        $z2 = virtualinvoke r6.<android.graphics.Rect: boolean intersects(int,int,int,int)>($i16, $i13, $i14, $i15);

        if $z2 != 0 goto label1;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>(0);

        return;
    }

    private void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        java.util.List r1;
        android.view.MagnificationSpec r2;
        int i0, i1;
        android.view.ViewRootImpl $r3;
        android.view.View$AttachInfo $r4;
        float $f0;
        boolean $z0;
        java.lang.Object $r5;
        android.view.accessibility.AccessibilityNodeInfo $r6;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: android.view.MagnificationSpec;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r4 = $r3.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $f0 = $r4.<android.view.View$AttachInfo: float mApplicationScale>;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean shouldApplyAppScaleAndMagnificationSpec(float,android.view.MagnificationSpec)>($f0, r2);

        if $z0 == 0 goto label1;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (android.view.accessibility.AccessibilityNodeInfo) $r5;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>($r6, r2);

        i1 = i1 + 1;

        goto label3;
    }

    private void findAccessibilityNodeInfoByAccessibilityIdUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        java.util.ArrayList r5;
        java.lang.Throwable r6, $r29;
        android.view.View$AttachInfo r9, $r18, $r22, $r23, $r27;
        android.view.View r10, r13, $r16;
        java.lang.Object $r12, $r14, $r15;
        android.view.ViewRootImpl $r17, $r19, $r20, $r21, $r24, $r26, $r28;
        android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher $r25;
        boolean $z0;
        android.os.RemoteException $r30, $r31, $r32;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        $r12 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r12;

        i1 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r15 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r15;

        $r14 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.MagnificationSpec) $r14;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        r5 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList>;

        interfaceinvoke r5.<java.util.List: void clear()>();

     label01:
        $r17 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r16 = $r17.<android.view.ViewRootImpl: android.view.View mView>;

        if $r16 == null goto label03;

        $r21 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r9 = $r21.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

     label02:
        if r9 != null goto label08;

     label03:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r18 = $r19.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r18.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r5, r4);

     label04:
        if r4 == null goto label06;

     label05:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label06:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r5, i3);

        interfaceinvoke r5.<java.util.List: void clear()>();

     label07:
        return;

     label08:
        $r20 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r22 = $r20.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r22.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

     label09:
        if i1 != -1 goto label19;

     label10:
        $r28 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r10 = $r28.<android.view.ViewRootImpl: android.view.View mView>;

     label11:
        if r10 == null goto label13;

     label12:
        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r10);

        if $z0 == 0 goto label13;

        $r25 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher mPrefetcher>;

        virtualinvoke $r25.<android.view.AccessibilityInteractionController$AccessibilityNodePrefetcher: void prefetchAccessibilityNodeInfos(android.view.View,int,int,java.util.List)>(r10, i2, i0, r5);

     label13:
        $r24 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r23 = $r24.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r23.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r5, r4);

     label14:
        if r4 == null goto label16;

     label15:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label16:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r5, i3);

        interfaceinvoke r5.<java.util.List: void clear()>();

     label17:
        return;

     label18:
        $r32 := @caughtexception;

        return;

     label19:
        r13 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

     label20:
        r10 = r13;

        goto label11;

     label21:
        $r29 := @caughtexception;

        r6 = $r29;

     label22:
        $r26 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r27 = $r26.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r27.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r5, r4);

     label23:
        if r4 == null goto label25;

     label24:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label25:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r5, i3);

        interfaceinvoke r5.<java.util.List: void clear()>();

     label26:
        throw r6;

     label27:
        $r30 := @caughtexception;

        goto label26;

     label28:
        $r31 := @caughtexception;

        return;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch android.os.RemoteException from label03 to label04 with label28;
        catch android.os.RemoteException from label05 to label06 with label28;
        catch android.os.RemoteException from label06 to label07 with label28;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label21;
        catch java.lang.Throwable from label12 to label13 with label21;
        catch android.os.RemoteException from label13 to label14 with label18;
        catch android.os.RemoteException from label15 to label16 with label18;
        catch android.os.RemoteException from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch android.os.RemoteException from label22 to label23 with label27;
        catch android.os.RemoteException from label24 to label25 with label27;
        catch android.os.RemoteException from label25 to label26 with label27;
    }

    private void findAccessibilityNodeInfosByTextUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3, i4, i5;
        com.android.internal.os.SomeArgs r2;
        java.lang.String r3;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r4;
        android.view.MagnificationSpec r5;
        java.util.List r6, r14, r19;
        java.lang.Throwable r7, $r35;
        android.view.View$AttachInfo r10, $r24, $r31, $r32, $r39;
        android.view.View r11, r17, $r26;
        android.view.accessibility.AccessibilityNodeProvider r12, r16;
        boolean z0, z1, $z2;
        java.util.ArrayList r15;
        java.lang.Object $r18, $r20, $r21, $r23, $r33;
        android.view.ViewRootImpl $r22, $r25, $r27, $r28, $r29, $r30, $r40;
        android.view.accessibility.AccessibilityNodeInfo $r34;
        android.os.RemoteException $r36, $r37, $r38;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        $r18 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r18;

        $r21 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (java.lang.String) $r21;

        $r20 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r20;

        $r23 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r5 = (android.view.MagnificationSpec) $r23;

        i1 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        r6 = null;

     label01:
        $r22 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r26 = $r22.<android.view.ViewRootImpl: android.view.View mView>;

        if $r26 == null goto label03;

        $r25 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r10 = $r25.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

     label02:
        if r10 != null goto label08;

     label03:
        $r27 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r24 = $r27.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r24.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(null, r5);

     label04:
        if r5 == null goto label06;

     label05:
        virtualinvoke r5.<android.view.MagnificationSpec: void recycle()>();

     label06:
        interfaceinvoke r4.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(null, i3);

     label07:
        return;

     label08:
        $r30 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r31 = $r30.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r31.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

     label09:
        if i1 == -1 goto label24;

     label10:
        r11 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

     label11:
        r6 = null;

        if r11 == null goto label18;

     label12:
        z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r11);

     label13:
        r6 = null;

        if z0 == 0 goto label18;

     label14:
        r12 = virtualinvoke r11.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label15:
        if r12 == null goto label26;

     label16:
        r14 = virtualinvoke r12.<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>(r3, i2);

     label17:
        r6 = r14;

     label18:
        $r29 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r32 = $r29.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r32.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r6, r5);

     label19:
        if r5 == null goto label21;

     label20:
        virtualinvoke r5.<android.view.MagnificationSpec: void recycle()>();

     label21:
        interfaceinvoke r4.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r6, i3);

     label22:
        return;

     label23:
        $r37 := @caughtexception;

        return;

     label24:
        $r28 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r11 = $r28.<android.view.ViewRootImpl: android.view.View mView>;

     label25:
        goto label11;

     label26:
        r6 = null;

        if i2 != -1 goto label18;

     label27:
        r15 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempArrayList>;

        virtualinvoke r15.<java.util.ArrayList: void clear()>();

        virtualinvoke r11.<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>(r15, r3, 7);

        z1 = virtualinvoke r15.<java.util.ArrayList: boolean isEmpty()>();

     label28:
        r6 = null;

        if z1 != 0 goto label18;

     label29:
        r6 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList>;

        interfaceinvoke r6.<java.util.List: void clear()>();

        i5 = virtualinvoke r15.<java.util.ArrayList: int size()>();

     label30:
        i4 = 0;

     label31:
        if i4 >= i5 goto label18;

     label32:
        $r33 = virtualinvoke r15.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r17 = (android.view.View) $r33;

        $z2 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r17);

        if $z2 == 0 goto label48;

        r16 = virtualinvoke r17.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label33:
        if r16 == null goto label38;

     label34:
        r19 = virtualinvoke r16.<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>(r3, -1);

     label35:
        if r19 == null goto label48;

     label36:
        interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>(r19);

     label37:
        goto label48;

     label38:
        $r34 = virtualinvoke r17.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r34);

     label39:
        goto label48;

     label40:
        $r35 := @caughtexception;

        r7 = $r35;

     label41:
        $r40 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r39 = $r40.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r39.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r6, r5);

     label42:
        if r5 == null goto label44;

     label43:
        virtualinvoke r5.<android.view.MagnificationSpec: void recycle()>();

     label44:
        interfaceinvoke r4.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r6, i3);

     label45:
        throw r7;

     label46:
        $r36 := @caughtexception;

        goto label45;

     label47:
        $r38 := @caughtexception;

        return;

     label48:
        i4 = i4 + 1;

        goto label31;

        catch java.lang.Throwable from label01 to label02 with label40;
        catch android.os.RemoteException from label03 to label04 with label47;
        catch android.os.RemoteException from label05 to label06 with label47;
        catch android.os.RemoteException from label06 to label07 with label47;
        catch java.lang.Throwable from label08 to label09 with label40;
        catch java.lang.Throwable from label10 to label11 with label40;
        catch java.lang.Throwable from label12 to label13 with label40;
        catch java.lang.Throwable from label14 to label15 with label40;
        catch java.lang.Throwable from label16 to label17 with label40;
        catch android.os.RemoteException from label18 to label19 with label23;
        catch android.os.RemoteException from label20 to label21 with label23;
        catch android.os.RemoteException from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label40;
        catch java.lang.Throwable from label27 to label28 with label40;
        catch java.lang.Throwable from label29 to label30 with label40;
        catch java.lang.Throwable from label32 to label33 with label40;
        catch java.lang.Throwable from label34 to label35 with label40;
        catch java.lang.Throwable from label36 to label37 with label40;
        catch java.lang.Throwable from label38 to label39 with label40;
        catch android.os.RemoteException from label41 to label42 with label46;
        catch android.os.RemoteException from label43 to label44 with label46;
        catch android.os.RemoteException from label44 to label45 with label46;
    }

    private void findAccessibilityNodeInfosByViewIdUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        java.lang.String r5;
        java.util.ArrayList r6;
        java.lang.Throwable r7, $r44;
        android.view.View$AttachInfo r10, $r22, $r23, $r28, $r35, $r42;
        android.view.View r11, $r20;
        java.lang.Object $r13, $r15, $r16, $r18;
        android.view.ViewRootImpl $r17, $r19, $r21, $r24, $r25, $r26, $r34, $r43;
        android.content.res.Resources $r27;
        android.content.Context $r29;
        android.view.AccessibilityInteractionController$AddNodeInfosForViewId $r30, $r32, $r33, $r36, $r37;
        android.os.RemoteException $r38, $r39, $r40, $r41;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        $r13 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r13;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        $r16 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r16;

        $r15 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.MagnificationSpec) $r15;

        $r18 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r5 = (java.lang.String) $r18;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        r6 = r0.<android.view.AccessibilityInteractionController: java.util.ArrayList mTempAccessibilityNodeInfoList>;

        interfaceinvoke r6.<java.util.List: void clear()>();

     label01:
        $r17 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r20 = $r17.<android.view.ViewRootImpl: android.view.View mView>;

        if $r20 == null goto label03;

        $r21 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r10 = $r21.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

     label02:
        if r10 != null goto label08;

     label03:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r22 = $r19.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r22.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r6, r4);

     label04:
        if r4 == null goto label06;

     label05:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label06:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r6, i2);

     label07:
        return;

     label08:
        $r24 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r23 = $r24.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r23.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

     label09:
        if i1 == -1 goto label20;

     label10:
        r11 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

     label11:
        if r11 == null goto label24;

     label12:
        $r29 = virtualinvoke r11.<android.view.View: android.content.Context getContext()>();

        $r27 = virtualinvoke $r29.<android.content.Context: android.content.res.Resources getResources()>();

        i3 = virtualinvoke $r27.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(r5, null, null);

     label13:
        if i3 > 0 goto label22;

     label14:
        $r34 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r35 = $r34.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r35.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r6, r4);

     label15:
        if r4 == null goto label17;

     label16:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label17:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r6, i2);

     label18:
        return;

     label19:
        $r41 := @caughtexception;

        return;

     label20:
        $r26 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r11 = $r26.<android.view.ViewRootImpl: android.view.View mView>;

     label21:
        goto label11;

     label22:
        $r32 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        if $r32 != null goto label23;

        $r37 = new android.view.AccessibilityInteractionController$AddNodeInfosForViewId;

        specialinvoke $r37.<android.view.AccessibilityInteractionController$AddNodeInfosForViewId: void <init>(android.view.AccessibilityInteractionController,android.view.AccessibilityInteractionController$1)>(r0, null);

        r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId> = $r37;

     label23:
        $r33 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        virtualinvoke $r33.<android.view.AccessibilityInteractionController$AddNodeInfosForViewId: void init(int,java.util.List)>(i3, r6);

        $r30 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        virtualinvoke r11.<android.view.View: android.view.View findViewByPredicate(com.android.internal.util.Predicate)>($r30);

        $r36 = r0.<android.view.AccessibilityInteractionController: android.view.AccessibilityInteractionController$AddNodeInfosForViewId mAddNodeInfosForViewId>;

        virtualinvoke $r36.<android.view.AccessibilityInteractionController$AddNodeInfosForViewId: void reset()>();

     label24:
        $r25 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r28 = $r25.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r28.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r6, r4);

     label25:
        if r4 == null goto label27;

     label26:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label27:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r6, i2);

     label28:
        return;

     label29:
        $r38 := @caughtexception;

        return;

     label30:
        $r44 := @caughtexception;

        r7 = $r44;

     label31:
        $r43 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r42 = $r43.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r42.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(java.util.List,android.view.MagnificationSpec)>(r6, r4);

     label32:
        if r4 == null goto label34;

     label33:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label34:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>(r6, i2);

     label35:
        throw r7;

     label36:
        $r39 := @caughtexception;

        goto label35;

     label37:
        $r40 := @caughtexception;

        return;

        catch java.lang.Throwable from label01 to label02 with label30;
        catch android.os.RemoteException from label03 to label04 with label37;
        catch android.os.RemoteException from label05 to label06 with label37;
        catch android.os.RemoteException from label06 to label07 with label37;
        catch java.lang.Throwable from label08 to label09 with label30;
        catch java.lang.Throwable from label10 to label11 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch android.os.RemoteException from label14 to label15 with label19;
        catch android.os.RemoteException from label16 to label17 with label19;
        catch android.os.RemoteException from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label30;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch java.lang.Throwable from label23 to label24 with label30;
        catch android.os.RemoteException from label24 to label25 with label29;
        catch android.os.RemoteException from label26 to label27 with label29;
        catch android.os.RemoteException from label27 to label28 with label29;
        catch android.os.RemoteException from label31 to label32 with label36;
        catch android.os.RemoteException from label33 to label34 with label36;
        catch android.os.RemoteException from label34 to label35 with label36;
    }

    private void findFocusUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3, i4;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        android.view.accessibility.AccessibilityNodeInfo r5, r13, r16, $r39;
        java.lang.Throwable r6, $r41;
        android.view.View$AttachInfo r9, $r24, $r25, $r27, $r44;
        android.view.View r10, r12, r15, $r22;
        boolean z0, z1, z2, z3;
        android.view.accessibility.AccessibilityNodeProvider r14, $r38;
        java.lang.Object $r17, $r18, $r20;
        android.view.ViewRootImpl $r19, $r21, $r23, $r26, $r28, $r29, $r35, $r36, $r37, $r40;
        java.lang.StringBuilder $r30, $r31, $r33;
        java.lang.IllegalArgumentException $r32;
        java.lang.String $r34;
        android.os.RemoteException $r42, $r43, $r45;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        $r18 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r18;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i4 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r17 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r17;

        $r20 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.MagnificationSpec) $r20;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        r5 = null;

     label01:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r22 = $r19.<android.view.ViewRootImpl: android.view.View mView>;

        if $r22 == null goto label03;

        $r26 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r9 = $r26.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

     label02:
        if r9 != null goto label08;

     label03:
        $r21 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r25 = $r21.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r25.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(null, r4);

     label04:
        if r4 == null goto label06;

     label05:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label06:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(null, i2);

     label07:
        return;

     label08:
        $r23 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r24 = $r23.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r24.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

     label09:
        if i3 == -1 goto label21;

     label10:
        r10 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i3);

     label11:
        r5 = null;

        if r10 == null goto label27;

     label12:
        z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r10);

     label13:
        r5 = null;

        if z0 == 0 goto label27;

        tableswitch(i1)
        {
            case 1: goto label42;
            case 2: goto label23;
            default: goto label14;
        };

     label14:
        $r32 = new java.lang.IllegalArgumentException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown focus type: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34);

        throw $r32;

     label15:
        $r41 := @caughtexception;

        r6 = $r41;

     label16:
        $r40 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r44 = $r40.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r44.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r5, r4);

     label17:
        if r4 == null goto label19;

     label18:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label19:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r5, i2);

     label20:
        throw r6;

     label21:
        $r28 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r10 = $r28.<android.view.ViewRootImpl: android.view.View mView>;

     label22:
        goto label11;

     label23:
        $r35 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r15 = $r35.<android.view.ViewRootImpl: android.view.View mAccessibilityFocusedHost>;

     label24:
        r5 = null;

        if r15 == null goto label27;

     label25:
        z2 = staticinvoke <android.view.ViewRootImpl: boolean isViewDescendantOf(android.view.View,android.view.View)>(r15, r10);

     label26:
        r5 = null;

        if z2 != 0 goto label33;

     label27:
        $r29 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r27 = $r29.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r27.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r5, r4);

     label28:
        if r4 == null goto label30;

     label29:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label30:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r5, i2);

     label31:
        return;

     label32:
        $r42 := @caughtexception;

        return;

     label33:
        z3 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r15);

     label34:
        r5 = null;

        if z3 == 0 goto label27;

     label35:
        $r38 = virtualinvoke r15.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        if $r38 == null goto label39;

        $r37 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r16 = $r37.<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo mAccessibilityFocusedVirtualView>;

     label36:
        r5 = null;

        if r16 == null goto label27;

     label37:
        $r36 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r39 = $r36.<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo mAccessibilityFocusedVirtualView>;

        r5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>($r39);

     label38:
        goto label27;

     label39:
        r5 = null;

        if i4 != -1 goto label27;

     label40:
        r5 = virtualinvoke r15.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label41:
        goto label27;

     label42:
        r12 = virtualinvoke r10.<android.view.View: android.view.View findFocus()>();

     label43:
        r5 = null;

        if r12 == null goto label27;

     label44:
        z1 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r12);

     label45:
        r5 = null;

        if z1 == 0 goto label27;

     label46:
        r14 = virtualinvoke r12.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label47:
        r5 = null;

        if r14 == null goto label49;

     label48:
        r5 = virtualinvoke r14.<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>(i1);

     label49:
        if r5 != null goto label27;

     label50:
        r13 = virtualinvoke r12.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label51:
        r5 = r13;

        goto label27;

     label52:
        $r43 := @caughtexception;

        goto label20;

     label53:
        $r45 := @caughtexception;

        return;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch android.os.RemoteException from label03 to label04 with label53;
        catch android.os.RemoteException from label05 to label06 with label53;
        catch android.os.RemoteException from label06 to label07 with label53;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch android.os.RemoteException from label16 to label17 with label52;
        catch android.os.RemoteException from label18 to label19 with label52;
        catch android.os.RemoteException from label19 to label20 with label52;
        catch java.lang.Throwable from label21 to label22 with label15;
        catch java.lang.Throwable from label23 to label24 with label15;
        catch java.lang.Throwable from label25 to label26 with label15;
        catch android.os.RemoteException from label27 to label28 with label32;
        catch android.os.RemoteException from label29 to label30 with label32;
        catch android.os.RemoteException from label30 to label31 with label32;
        catch java.lang.Throwable from label33 to label34 with label15;
        catch java.lang.Throwable from label35 to label36 with label15;
        catch java.lang.Throwable from label37 to label38 with label15;
        catch java.lang.Throwable from label40 to label41 with label15;
        catch java.lang.Throwable from label42 to label43 with label15;
        catch java.lang.Throwable from label44 to label45 with label15;
        catch java.lang.Throwable from label46 to label47 with label15;
        catch java.lang.Throwable from label48 to label49 with label15;
        catch java.lang.Throwable from label50 to label51 with label15;
    }

    private android.view.View findViewByAccessibilityId(int)
    {
        android.view.AccessibilityInteractionController r0;
        int i0;
        android.view.View r1, r2;
        android.view.ViewRootImpl $r3;
        boolean $z0;

        r0 := @this: android.view.AccessibilityInteractionController;

        i0 := @parameter0: int;

        $r3 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r1 = $r3.<android.view.ViewRootImpl: android.view.View mView>;

        if r1 != null goto label2;

        r2 = null;

     label1:
        return r2;

     label2:
        r2 = virtualinvoke r1.<android.view.View: android.view.View findViewByAccessibilityId(int)>(i0);

        if r2 == null goto label1;

        $z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r2);

        if $z0 != 0 goto label1;

        return null;
    }

    private void focusSearchUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.view.MagnificationSpec r4;
        java.lang.Throwable r5, $r28;
        android.view.View$AttachInfo r8, $r19, $r24, $r25, $r32;
        android.view.View r9, r12, $r17;
        android.view.accessibility.AccessibilityNodeInfo r10, r11;
        boolean z0;
        java.lang.Object $r13, $r15, $r16;
        android.view.ViewRootImpl $r18, $r20, $r21, $r22, $r23, $r26, $r31;
        android.os.RemoteException $r27, $r29, $r30;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        $r13 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r13;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r16 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r16;

        $r15 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.view.MagnificationSpec) $r15;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

     label01:
        $r18 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r17 = $r18.<android.view.ViewRootImpl: android.view.View mView>;

        if $r17 == null goto label03;

        $r22 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r8 = $r22.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

     label02:
        if r8 != null goto label08;

     label03:
        $r20 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r19 = $r20.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r19.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(null, r4);

     label04:
        if r4 == null goto label06;

     label05:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label06:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(null, i3);

     label07:
        return;

     label08:
        $r21 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r24 = $r21.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r24.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

     label09:
        if i1 == -1 goto label24;

     label10:
        r9 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

     label11:
        r10 = null;

        if r9 == null goto label18;

     label12:
        z0 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r9);

     label13:
        r10 = null;

        if z0 == 0 goto label18;

     label14:
        r12 = virtualinvoke r9.<android.view.View: android.view.View focusSearch(int)>(i2);

     label15:
        r10 = null;

        if r12 == null goto label18;

     label16:
        r11 = virtualinvoke r12.<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>();

     label17:
        r10 = r11;

     label18:
        $r26 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r25 = $r26.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r25.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(r10, r4);

     label19:
        if r4 == null goto label21;

     label20:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label21:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(r10, i3);

     label22:
        return;

     label23:
        $r29 := @caughtexception;

        return;

     label24:
        $r23 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r9 = $r23.<android.view.ViewRootImpl: android.view.View mView>;

     label25:
        goto label11;

     label26:
        $r28 := @caughtexception;

        r5 = $r28;

     label27:
        $r31 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r32 = $r31.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r32.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        specialinvoke r0.<android.view.AccessibilityInteractionController: void applyAppScaleAndMagnificationSpecIfNeeded(android.view.accessibility.AccessibilityNodeInfo,android.view.MagnificationSpec)>(null, r4);

     label28:
        if r4 == null goto label30;

     label29:
        virtualinvoke r4.<android.view.MagnificationSpec: void recycle()>();

     label30:
        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>(null, i3);

     label31:
        throw r5;

     label32:
        $r30 := @caughtexception;

        goto label31;

     label33:
        $r27 := @caughtexception;

        return;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch android.os.RemoteException from label03 to label04 with label33;
        catch android.os.RemoteException from label05 to label06 with label33;
        catch android.os.RemoteException from label06 to label07 with label33;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label14 to label15 with label26;
        catch java.lang.Throwable from label16 to label17 with label26;
        catch android.os.RemoteException from label18 to label19 with label23;
        catch android.os.RemoteException from label20 to label21 with label23;
        catch android.os.RemoteException from label21 to label22 with label23;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch android.os.RemoteException from label27 to label28 with label32;
        catch android.os.RemoteException from label29 to label30 with label32;
        catch android.os.RemoteException from label30 to label31 with label32;
    }

    private boolean isShown(android.view.View)
    {
        android.view.AccessibilityInteractionController r0;
        android.view.View r1;
        android.view.View$AttachInfo $r2, $r3;
        int $i0;
        boolean $z0;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.view.View;

        $r2 = r1.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        if $r2 == null goto label1;

        $r3 = r1.<android.view.View: android.view.View$AttachInfo mAttachInfo>;

        $i0 = $r3.<android.view.View$AttachInfo: int mWindowVisibility>;

        if $i0 != 0 goto label1;

        $z0 = virtualinvoke r1.<android.view.View: boolean isShown()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void perfromAccessibilityActionUiThread(android.os.Message)
    {
        android.view.AccessibilityInteractionController r0;
        android.os.Message r1;
        int i0, i1, i2, i3, i4;
        com.android.internal.os.SomeArgs r2;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r3;
        android.os.Bundle r4;
        java.lang.Throwable r5, $r28;
        android.view.View$AttachInfo r8, $r17, $r22, $r24, $r26;
        android.view.View r9, $r15;
        boolean z0, z1, z2, z3;
        android.view.accessibility.AccessibilityNodeProvider r10;
        java.lang.Object $r12, $r13, $r14;
        android.view.ViewRootImpl $r16, $r18, $r19, $r20, $r21, $r23, $r29;
        android.os.RemoteException $r25, $r27, $r30;

        r0 := @this: android.view.AccessibilityInteractionController;

        r1 := @parameter0: android.os.Message;

        i0 = r1.<android.os.Message: int arg1>;

        i1 = r1.<android.os.Message: int arg2>;

        $r12 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r12;

        i2 = r2.<com.android.internal.os.SomeArgs: int argi1>;

        i3 = r2.<com.android.internal.os.SomeArgs: int argi2>;

        i4 = r2.<com.android.internal.os.SomeArgs: int argi3>;

        $r14 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.accessibility.IAccessibilityInteractionConnectionCallback) $r14;

        $r13 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.os.Bundle) $r13;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

     label01:
        $r16 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r15 = $r16.<android.view.ViewRootImpl: android.view.View mView>;

        if $r15 == null goto label03;

        $r20 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r8 = $r20.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

     label02:
        if r8 != null goto label05;

     label03:
        $r18 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r17 = $r18.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r17.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>(0, i4);

     label04:
        return;

     label05:
        $r19 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r22 = $r19.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r22.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = i0;

     label06:
        if i1 == -1 goto label18;

     label07:
        r9 = specialinvoke r0.<android.view.AccessibilityInteractionController: android.view.View findViewByAccessibilityId(int)>(i1);

     label08:
        z0 = 0;

        if r9 == null goto label15;

     label09:
        z1 = specialinvoke r0.<android.view.AccessibilityInteractionController: boolean isShown(android.view.View)>(r9);

     label10:
        z0 = 0;

        if z1 == 0 goto label15;

     label11:
        r10 = virtualinvoke r9.<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

     label12:
        if r10 == null goto label20;

     label13:
        z2 = virtualinvoke r10.<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>(i2, i3, r4);

     label14:
        z0 = z2;

     label15:
        $r23 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r24 = $r23.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r24.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>(z0, i4);

     label16:
        return;

     label17:
        $r25 := @caughtexception;

        return;

     label18:
        $r21 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        r9 = $r21.<android.view.ViewRootImpl: android.view.View mView>;

     label19:
        goto label08;

     label20:
        z0 = 0;

        if i2 != -1 goto label15;

     label21:
        z3 = virtualinvoke r9.<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>(i3, r4);

     label22:
        z0 = z3;

        goto label15;

     label23:
        $r28 := @caughtexception;

        r5 = $r28;

     label24:
        $r29 = r0.<android.view.AccessibilityInteractionController: android.view.ViewRootImpl mViewRootImpl>;

        $r26 = $r29.<android.view.ViewRootImpl: android.view.View$AttachInfo mAttachInfo>;

        $r26.<android.view.View$AttachInfo: int mAccessibilityFetchFlags> = 0;

        interfaceinvoke r3.<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>(0, i4);

     label25:
        throw r5;

     label26:
        $r30 := @caughtexception;

        goto label25;

     label27:
        $r27 := @caughtexception;

        return;

        catch java.lang.Throwable from label01 to label02 with label23;
        catch android.os.RemoteException from label03 to label04 with label27;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label10 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label23;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch android.os.RemoteException from label24 to label25 with label26;
    }

    private boolean shouldApplyAppScaleAndMagnificationSpec(float, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        float f0;
        android.view.MagnificationSpec r1;
        byte $b0;
        boolean $z0;

        r0 := @this: android.view.AccessibilityInteractionController;

        f0 := @parameter0: float;

        r1 := @parameter1: android.view.MagnificationSpec;

        $b0 = f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<android.view.MagnificationSpec: boolean isNop()>();

        if $z0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void findAccessibilityNodeInfoByAccessibilityIdClientThread(long, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l4, $l9;
        int i1, i2, i3, $i5, $i6, $i7;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.os.Message r3;
        com.android.internal.os.SomeArgs r4;
        android.os.Handler $r5, $r6;
        byte $b8;
        android.view.accessibility.AccessibilityInteractionClient $r7;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        l4 := @parameter5: long;

        r2 := @parameter6: android.view.MagnificationSpec;

        $r5 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r3 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage()>();

        r3.<android.os.Message: int what> = 2;

        r3.<android.os.Message: int arg1> = i2;

        r4 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r4.<com.android.internal.os.SomeArgs: int argi1> = $i5;

        $i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r4.<com.android.internal.os.SomeArgs: int argi2> = $i7;

        r4.<com.android.internal.os.SomeArgs: int argi3> = i1;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        r3.<android.os.Message: java.lang.Object obj> = r4;

        $i6 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i3 != $i6 goto label1;

        $l9 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b8 = l4 cmp $l9;

        if $b8 != 0 goto label1;

        $r7 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l4);

        virtualinvoke $r7.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r3);

        return;

     label1:
        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    public void findAccessibilityNodeInfosByTextClientThread(long, java.lang.String, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l4, $l8;
        java.lang.String r1;
        int i1, i2, i3, $i5, $i6, $i7;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Message r4;
        com.android.internal.os.SomeArgs r5;
        android.os.Handler $r6, $r7;
        android.view.accessibility.AccessibilityInteractionClient $r8;
        byte $b9;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        r3 := @parameter7: android.view.MagnificationSpec;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>();

        r4.<android.os.Message: int what> = 4;

        r4.<android.os.Message: int arg1> = i2;

        r5 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r3;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi1> = $i6;

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r5.<com.android.internal.os.SomeArgs: int argi2> = $i5;

        r5.<com.android.internal.os.SomeArgs: int argi3> = i1;

        r4.<android.os.Message: java.lang.Object obj> = r5;

        $i7 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i3 != $i7 goto label1;

        $l8 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b9 = l4 cmp $l8;

        if $b9 != 0 goto label1;

        $r8 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l4);

        virtualinvoke $r8.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r4);

        return;

     label1:
        $r7 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

        return;
    }

    public void findAccessibilityNodeInfosByViewIdClientThread(long, java.lang.String, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l4, $l8;
        java.lang.String r1;
        int i1, i2, i3, $i5, $i6;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.view.MagnificationSpec r3;
        android.os.Message r4;
        com.android.internal.os.SomeArgs r5;
        android.os.Handler $r6, $r7;
        byte $b7;
        android.view.accessibility.AccessibilityInteractionClient $r8;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        l4 := @parameter6: long;

        r3 := @parameter7: android.view.MagnificationSpec;

        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r4 = virtualinvoke $r6.<android.os.Handler: android.os.Message obtainMessage()>();

        r4.<android.os.Message: int what> = 3;

        r4.<android.os.Message: int arg1> = i2;

        $i5 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r4.<android.os.Message: int arg2> = $i5;

        r5 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r5.<com.android.internal.os.SomeArgs: int argi1> = i1;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r3;

        r5.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = r1;

        r4.<android.os.Message: java.lang.Object obj> = r5;

        $i6 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i3 != $i6 goto label1;

        $l8 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b7 = l4 cmp $l8;

        if $b7 != 0 goto label1;

        $r8 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l4);

        virtualinvoke $r8.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r4);

        return;

     label1:
        $r7 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r4);

        return;
    }

    public void findFocusClientThread(long, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l5, $l9;
        int i1, i2, i3, i4, $i6, $i7, $i8;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.os.Message r3;
        com.android.internal.os.SomeArgs r4;
        android.os.Handler $r5, $r6;
        android.view.accessibility.AccessibilityInteractionClient $r7;
        byte $b10;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        l5 := @parameter6: long;

        r2 := @parameter7: android.view.MagnificationSpec;

        $r5 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r3 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage()>();

        r3.<android.os.Message: int what> = 5;

        r3.<android.os.Message: int arg1> = i3;

        r3.<android.os.Message: int arg2> = i1;

        r4 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r4.<com.android.internal.os.SomeArgs: int argi1> = i2;

        $i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r4.<com.android.internal.os.SomeArgs: int argi2> = $i7;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r4.<com.android.internal.os.SomeArgs: int argi3> = $i6;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        r3.<android.os.Message: java.lang.Object obj> = r4;

        $i8 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i4 != $i8 goto label1;

        $l9 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b10 = l5 cmp $l9;

        if $b10 != 0 goto label1;

        $r7 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l5);

        virtualinvoke $r7.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r3);

        return;

     label1:
        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    public void focusSearchClientThread(long, int, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long, android.view.MagnificationSpec)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l5, $l9;
        int i1, i2, i3, i4, $i6, $i7;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r1;
        android.view.MagnificationSpec r2;
        android.os.Message r3;
        com.android.internal.os.SomeArgs r4;
        android.os.Handler $r5, $r6;
        byte $b8;
        android.view.accessibility.AccessibilityInteractionClient $r7;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        l5 := @parameter6: long;

        r2 := @parameter7: android.view.MagnificationSpec;

        $r5 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r3 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage()>();

        r3.<android.os.Message: int what> = 6;

        r3.<android.os.Message: int arg1> = i3;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r3.<android.os.Message: int arg2> = $i6;

        r4 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r4.<com.android.internal.os.SomeArgs: int argi2> = i1;

        r4.<com.android.internal.os.SomeArgs: int argi3> = i2;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r1;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r2;

        r3.<android.os.Message: java.lang.Object obj> = r4;

        $i7 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i4 != $i7 goto label1;

        $l9 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b8 = l5 cmp $l9;

        if $b8 != 0 goto label1;

        $r7 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l5);

        virtualinvoke $r7.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r3);

        return;

     label1:
        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    public void performAccessibilityActionClientThread(long, int, android.os.Bundle, int, android.view.accessibility.IAccessibilityInteractionConnectionCallback, int, int, long)
    {
        android.view.AccessibilityInteractionController r0;
        long l0, l5, $l9;
        int i1, i2, i3, i4, $i6, $i7, $i8;
        android.os.Bundle r1;
        android.view.accessibility.IAccessibilityInteractionConnectionCallback r2;
        android.os.Message r3;
        com.android.internal.os.SomeArgs r4;
        android.os.Handler $r5, $r6;
        android.view.accessibility.AccessibilityInteractionClient $r7;
        byte $b10;

        r0 := @this: android.view.AccessibilityInteractionController;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        i2 := @parameter3: int;

        r2 := @parameter4: android.view.accessibility.IAccessibilityInteractionConnectionCallback;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        l5 := @parameter7: long;

        $r5 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        r3 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage()>();

        r3.<android.os.Message: int what> = 1;

        r3.<android.os.Message: int arg1> = i3;

        $i6 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>(l0);

        r3.<android.os.Message: int arg2> = $i6;

        r4 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        $i7 = staticinvoke <android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>(l0);

        r4.<com.android.internal.os.SomeArgs: int argi1> = $i7;

        r4.<com.android.internal.os.SomeArgs: int argi2> = i1;

        r4.<com.android.internal.os.SomeArgs: int argi3> = i2;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r2;

        r4.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r1;

        r3.<android.os.Message: java.lang.Object obj> = r4;

        $i8 = r0.<android.view.AccessibilityInteractionController: int mMyProcessId>;

        if i4 != $i8 goto label1;

        $l9 = r0.<android.view.AccessibilityInteractionController: long mMyLooperThreadId>;

        $b10 = l5 cmp $l9;

        if $b10 != 0 goto label1;

        $r7 = staticinvoke <android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>(l5);

        virtualinvoke $r7.<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>(r3);

        return;

     label1:
        $r6 = r0.<android.view.AccessibilityInteractionController: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }
}
