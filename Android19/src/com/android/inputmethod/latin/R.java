/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.inputmethod.latin;

public final class R {
    public static final class anim {
        public static final int alt_code_key_while_typing_fadein=0x7f050000;
        public static final int alt_code_key_while_typing_fadeout=0x7f050001;
        public static final int language_on_spacebar_fadeout=0x7f050002;
        public static final int more_keys_keyboard_fadein=0x7f050003;
        public static final int more_keys_keyboard_fadeout=0x7f050004;
    }
    public static final class array {
        public static final int auto_correction_threshold_mode_indexes=0x7f0f0003;
        public static final int auto_correction_threshold_modes=0x7f0f0004;
        /** 
        Configuration for auto correction
     
         */
        public static final int auto_correction_threshold_values=0x7f0f0000;
        public static final int emoji_emoticons=0x7f0f0016;
        /**  HEAVY BLACK HEART 
 <item>1f450</item> 
         */
        public static final int emoji_faces=0x7f0f0013;
        /**  SNOWFLAKE 
 <item>1f30d</item> 
 <item>1f310</item> 
         */
        public static final int emoji_nature=0x7f0f0011;
        /**  BEAMED SIXTEENTH NOTES 
         */
        public static final int emoji_objects=0x7f0f0014;
        /**  HOT SPRINGS 
 TODO: fix support min sdk version (99) 
         */
        public static final int emoji_places=0x7f0f0015;
        /**  Dummy codeArrays for recents emoji keyboard.
         Do not remove these keys, because they are used as a template. 
         */
        public static final int emoji_recents=0x7f0f0010;
        /**  RIGHTWARDS ARROW WITH HOOK 
         */
        public static final int emoji_symbols=0x7f0f0012;
        /**  For keyboard color scheme option dialog. 
         */
        public static final int keyboard_color_schemes=0x7f0f000a;
        /**  An element must be an index of {@link KeyboardSwitcher#KEYBOARD_THEMES[]}. 
         */
        public static final int keyboard_color_schemes_values=0x7f0f000b;
        /**  Build condition,keyboard_height_in_dp 
 Build condition,keyboard_height_in_dp 
         */
        public static final int keyboard_heights=0x7f0f0017;
        /**  For keyboard theme switcher dialog 
         */
        public static final int keyboard_layout_modes=0x7f0f0008;
        /**  An element must be an index of {@link KeyboardSwitcher#KEYBOARD_THEMES[]}. 
         */
        public static final int keyboard_layout_modes_values=0x7f0f0009;
        /**  Build condition,duration_in_milliseconds 
         */
        public static final int keypress_vibration_durations=0x7f0f0018;
        /**  Build condition,volume 
         */
        public static final int keypress_volumes=0x7f0f0019;
        /**  Compatibility map from subtypeLocale:subtypeExtraValue to keyboardLayoutSet 
         */
        public static final int locale_and_extra_value_to_keyboard_layout_set_map=0x7f0f000f;
        public static final int phantom_sudden_move_event_device_list=0x7f0f001a;
        /**  Predefined keyboard layout display names 
         */
        public static final int predefined_layout_display_names=0x7f0f000e;
        /**  Predefined keyboard layouts for additional subtype 
         */
        public static final int predefined_layouts=0x7f0f000d;
        /**  Predefined subtypes (language:layout[:extraValue]) 
         */
        public static final int predefined_subtypes=0x7f0f001b;
        public static final int prefs_suggestion_visibilities=0x7f0f0002;
        /**   Option to show/hide the suggestion strip 
         */
        public static final int prefs_suggestion_visibility_values=0x7f0f0001;
        /**  Subtype locale display name exceptions.
         For each exception, there should be related string resources for display name that may have
         explicit keyboard layout. The string resource name must be "subtype_<locale>" or
         "subtype_with_layout_<locale>. Please refer to strings.xml for these resources. 
         */
        public static final int subtype_locale_exception_keys=0x7f0f000c;
        /**  Note that correctionX is obsolete (See com.android.inputmethod.keyboard.internal.TouchPositionCorrection)
        An entry of the touch_position_correction word should be:
        1. correctionX: (touch_center_x - hitbox_center_x) / hitbox_width
        2. correctionY: (touch_center_y - hitbox_center_y) / hitbox_height
        3. correctionR: sweet_spot_radius / sqrt(hitbox_width^2 + hitbox_height^2)
    
 The default touch position data (See com.android.inputmethod.keyboard.ProximityInfo)
             correctionX = 0.0f
             correctionY = 0.0f
             correctionR = DEFAULT_TOUCH_POSITION_CORRECTION_RADIUS
        
 Note that correctionX is obsolete (See com.android.inputmethod.keyboard.internal.TouchPositionCorrection)
        An entry of the touch_position_correction word should be:
        1. correctionX: (touch_center_x - hitbox_center_x) / hitbox_width
        2. correctionY: (touch_center_y - hitbox_center_y) / hitbox_height
        3. correctionR: sweet_spot_radius / sqrt(hitbox_width^2 + hitbox_height^2)
    
 The default touch position data (See com.android.inputmethod.keyboard.ProximityInfo)
             correctionX = 0.0f
             correctionY = 0.0f
             correctionR = DEFAULT_TOUCH_POSITION_CORRECTION_RADIUS
        
         */
        public static final int touch_position_correction_data_default=0x7f0f001c;
        /**  The default touch position data (See com.android.inputmethod.keyboard.ProximityInfo)
             correctionX = 0.0f
             correctionY = 0.0f
             correctionR = DEFAULT_TOUCH_POSITION_CORRECTION_RADIUS
        
         */
        public static final int touch_position_correction_data_gb=0x7f0f001d;
        /**  The default touch position data (See com.android.inputmethod.keyboard.ProximityInfo)
             correctionX = 0.0f
             correctionY = 0.0f
             correctionR = DEFAULT_TOUCH_POSITION_CORRECTION_RADIUS
        
         */
        public static final int touch_position_correction_data_holo=0x7f0f001e;
        /**  Array of Voice Input modes 
         */
        public static final int voice_input_modes=0x7f0f0006;
        /**  Array of Voice Input modes summary 
         */
        public static final int voice_input_modes_summary=0x7f0f0007;
        public static final int voice_input_modes_values=0x7f0f0005;
    }
    public static final class attr {
        /**  The keys to display in the more keys keyboard in addition to moreKeys.
             The additional more keys are inserted at the '%' markers in the moreKeys if any.
             They are inserted at the head of moreKeys if none.
             If there are remaining entries of additionalMoreKeys even after all '%' markers have
             been replaced, those remaining entries are appended at the end of moreKeys. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int additionalMoreKeys=0x7f01007d;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alphaObsoleted=0x7f010057;
        /**  The alternate unicode value that this key outputs while typing.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int altCode=0x7f01007b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int altCodeKeyWhileTypingFadeinAnimator=0x7f01001c;
        /**  Fadeout and fadein animator for altCodeWhileTyping keys. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int altCodeKeyWhileTypingFadeoutAnimator=0x7f01001b;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int autoCorrectionSpacebarLedEnabled=0x7f010014;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int autoCorrectionSpacebarLedIcon=0x7f010015;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int backgroundDimAlpha=0x7f01002f;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>empty</code></td><td>0</td><td> This should be aligned with Key.BACKGROUND_TYPE_* </td></tr>
<tr><td><code>normal</code></td><td>1</td><td></td></tr>
<tr><td><code>functional</code></td><td>2</td><td></td></tr>
<tr><td><code>action</code></td><td>3</td><td></td></tr>
<tr><td><code>stickyOff</code></td><td>4</td><td></td></tr>
<tr><td><code>stickyOn</code></td><td>5</td><td></td></tr>
</table>
         */
        public static final int backgroundType=0x7f01007f;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int centerSuggestionPercentile=0x7f010059;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clobberSettingsKey=0x7f0100a5;
        /**  The unicode value that this key outputs.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int code=0x7f01007a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int codesArray=0x7f010078;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorAutoCorrect=0x7f010055;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorSuggested=0x7f010056;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorTypedWord=0x7f010054;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int colorValidTypedWord=0x7f010053;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int countryCode=0x7f0100ae;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int elementKeyboard=0x7f0100b2;
        /**  This should be aligned with KeyboardId.ELEMENT_* 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
<tr><td><code>emojiRecents</code></td><td>10</td><td></td></tr>
<tr><td><code>emojiCategory1</code></td><td>11</td><td></td></tr>
<tr><td><code>emojiCategory2</code></td><td>12</td><td></td></tr>
<tr><td><code>emojiCategory3</code></td><td>13</td><td></td></tr>
<tr><td><code>emojiCategory4</code></td><td>14</td><td></td></tr>
<tr><td><code>emojiCategory5</code></td><td>15</td><td></td></tr>
<tr><td><code>emojiCategory6</code></td><td>16</td><td></td></tr>
</table>
         */
        public static final int elementName=0x7f0100b1;
        /**  EmojiPalettesView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int emojiPalettesViewStyle=0x7f010003;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int emojiTabLabelColor=0x7f010051;
        /**  Enable proximity characters correction. Disabled by default. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int enableProximityCharsCorrection=0x7f0100b3;
        /**  Static threshold for starting gesture detection (keyWidth%/sec) 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDetectFastMoveSpeedThreshold=0x7f010046;
        /**  Distance based threshold values for gesture detection (keyWidth%/sec) 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicDistanceThresholdFrom=0x7f01004a;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicDistanceThresholdTo=0x7f01004b;
        /**  Dynamic threshold for gesture after fast typing (msec) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicThresholdDecayDuration=0x7f010047;
        /**  Time based threshold values for gesture detection (msec) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicTimeThresholdFrom=0x7f010048;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureDynamicTimeThresholdTo=0x7f010049;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewColor=0x7f010041;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewHorizontalPadding=0x7f010042;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewRoundRadius=0x7f010044;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewTextColor=0x7f01003f;
        /**  Delay after gesture input and gesture floating preview text dismissing in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewTextLingerTimeout=0x7f01003d;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewTextOffset=0x7f010040;
        /**  Attributes for GestureFloatingPreviewText 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewTextSize=0x7f01003e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureFloatingPreviewVerticalPadding=0x7f010043;
        /**  Parameters for gesture recognition (msec) and (keyWidth%/sec) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureRecognitionMinimumTime=0x7f01004d;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureRecognitionSpeedThreshold=0x7f01004f;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureRecognitionUpdateTime=0x7f01004e;
        /**  Parameter for gesture sampling (keyWidth%/sec) 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureSamplingMinimumDistance=0x7f01004c;
        /**  Static threshold for gesture after fast typing (msec) 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureStaticTimeThresholdAfterFastTyping=0x7f010045;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailBodyRatio=0x7f01003b;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailColor=0x7f010038;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailEndWidth=0x7f01003a;
        /**  Duration while gesture trail is fading out in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailFadeoutDuration=0x7f010036;
        /**  Delay after gesture trail starts fading out in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailFadeoutStartDelay=0x7f010035;
        /**  Maximum angular threshold between gesture trail interpolation segments in degree. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailMaxInterpolationAngularThreshold=0x7f010032;
        /**  Maximum distance threshold between gesture trail interpolation segments. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailMaxInterpolationDistanceThreshold=0x7f010033;
        /**  Maximum number of gesture trail interpolation segments. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailMaxInterpolationSegments=0x7f010034;
        /**  Minimum distance between gesture trail sampling points. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailMinSamplingDistance=0x7f010031;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailShadowRatio=0x7f01003c;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailStartWidth=0x7f010039;
        /**  Interval of updating gesture trail in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int gestureTrailUpdateInterval=0x7f010037;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hasShortcutKey=0x7f0100a8;
        /**  Default horizontal gap between keys, in the proportion of keyboard width. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int horizontalGap=0x7f010063;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconDeleteKey=0x7f010067;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEmojiKey=0x7f010077;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconEnterKey=0x7f01006a;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconImeKey=0x7f010076;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconLanguageSwitchKey=0x7f010073;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSearchKey=0x7f01006b;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSettingsKey=0x7f010068;
        /**  Icon set for key top and key preview.
             These should be aligned with KeyboardIconsSet.NAMES_AND_ATTR_IDS[] 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShiftKey=0x7f010066;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShiftKeyShifted=0x7f010070;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShortcutForLabel=0x7f01006e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShortcutKey=0x7f01006d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconShortcutKeyDisabled=0x7f010071;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSpaceKey=0x7f010069;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconSpaceKeyForNumberLayout=0x7f01006f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconTabKey=0x7f01006c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconTabKeyPreview=0x7f010072;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconZwjKey=0x7f010075;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int iconZwnjKey=0x7f010074;
        /**  Ignore special key timeout while typing in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ignoreAltCodeKeyTimeout=0x7f010029;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>actionUnspecified</code></td><td>0</td><td> This should be aligned with EditorInfo.IME_ACTION_* </td></tr>
<tr><td><code>actionNone</code></td><td>1</td><td></td></tr>
<tr><td><code>actionGo</code></td><td>2</td><td></td></tr>
<tr><td><code>actionSearch</code></td><td>3</td><td></td></tr>
<tr><td><code>actionSend</code></td><td>4</td><td></td></tr>
<tr><td><code>actionNext</code></td><td>5</td><td></td></tr>
<tr><td><code>actionDone</code></td><td>6</td><td></td></tr>
<tr><td><code>actionPrevious</code></td><td>7</td><td></td></tr>
<tr><td><code>actionCustomLabel</code></td><td>0x100</td><td>  This should be aligned with KeyboardId.IME_ACTION_* </td></tr>
</table>
         */
        public static final int imeAction=0x7f0100ab;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isMultiLine=0x7f0100aa;
        /**  The key action flags. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>isRepeatable</code></td><td>0x01</td><td> This should be aligned with Key.ACTION_FLAGS_* </td></tr>
<tr><td><code>noKeyPreview</code></td><td>0x02</td><td></td></tr>
<tr><td><code>altCodeWhileTyping</code></td><td>0x04</td><td></td></tr>
<tr><td><code>enableLongPress</code></td><td>0x08</td><td></td></tr>
</table>
         */
        public static final int keyActionFlags=0x7f010080;
        /**  Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyBackground=0x7f010009;
        /**  Image for the functional key used in Emoji layout. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyBackgroundEmojiFunctional=0x7f01000a;
        /**  The hint label to display on the key in conjunction with the label. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabel=0x7f010083;
        /**  Key hint label color 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabelColor=0x7f010099;
        /**  Size of the text for hint label, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLabelRatio=0x7f010093;
        /**  Key hint letter (= one character hint label) color 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLetterColor=0x7f010098;
        /**  Right padding of hint letter to the edge of the key.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLetterPadding=0x7f01000c;
        /**  Size of the text for hint letter (= one character hint label), in the proportion of
             key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHintLetterRatio=0x7f010092;
        /**  Key detection hysteresis distance. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHysteresisDistance=0x7f01001d;
        /**  Key detection hysteresis distance for shift/symbols sliding input. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyHysteresisDistanceForSlidingModifier=0x7f01001e;
        /**  The icon to display on the key instead of the label. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyIcon=0x7f010085;
        /**  The icon for disabled key 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyIconDisabled=0x7f010086;
        /**  The icon to show in the popup preview. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyIconPreview=0x7f010087;
        /**  The label to display on the key. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabel=0x7f010082;
        /**  The key label flags. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignLeft</code></td><td>0x01</td><td> This should be aligned with Key.LABEL_FLAGS__* </td></tr>
<tr><td><code>alignRight</code></td><td>0x02</td><td></td></tr>
<tr><td><code>alignLeftOfCenter</code></td><td>0x08</td><td></td></tr>
<tr><td><code>fontNormal</code></td><td>0x10</td><td></td></tr>
<tr><td><code>fontMonoSpace</code></td><td>0x20</td><td></td></tr>
<tr><td><code>followKeyLargeLetterRatio</code></td><td>0x40</td><td></td></tr>
<tr><td><code>followKeyLetterRatio</code></td><td>0x80</td><td></td></tr>
<tr><td><code>followKeyLabelRatio</code></td><td>0xC0</td><td></td></tr>
<tr><td><code>followKeyLargeLabelRatio</code></td><td>0x100</td><td></td></tr>
<tr><td><code>followKeyHintLabelRatio</code></td><td>0x140</td><td></td></tr>
<tr><td><code>hasPopupHint</code></td><td>0x200</td><td></td></tr>
<tr><td><code>hasShiftedLetterHint</code></td><td>0x400</td><td></td></tr>
<tr><td><code>hasHintLabel</code></td><td>0x800</td><td></td></tr>
<tr><td><code>withIconLeft</code></td><td>0x1000</td><td></td></tr>
<tr><td><code>withIconRight</code></td><td>0x2000</td><td></td></tr>
<tr><td><code>autoXScale</code></td><td>0x4000</td><td></td></tr>
<tr><td><code>preserveCase</code></td><td>0x8000</td><td> If true, character case of code, altCode, moreKeys, keyOutputText, keyLabel,
                 or keyHintLabel will never be subject to change. </td></tr>
<tr><td><code>shiftedLetterActivated</code></td><td>0x10000</td><td> If true, use keyShiftedLetterHintActivatedColor for the shifted letter hint and
                 keyTextInactivatedColor for the primary key top label. </td></tr>
<tr><td><code>fromCustomActionLabel</code></td><td>0x20000</td><td> If true, use EditorInfo.actionLabel for the key label. </td></tr>
<tr><td><code>disableKeyHintLabel</code></td><td>0x40000000</td><td> If true, disable keyHintLabel. </td></tr>
<tr><td><code>disableAdditionalMoreKeys</code></td><td>0x80000000</td><td> If true, disable additionalMoreKeys. </td></tr>
</table>
         */
        public static final int keyLabelFlags=0x7f010084;
        /**  Horizontal padding of left/right aligned key label to the edge of the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabelHorizontalPadding=0x7f01000b;
        /**  Size of the text for keys with multiple letters. If specified as fraction, the text
             size is measured in the proportion of key height. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLabelSize=0x7f01008f;
        /**  Large size of the text for keys with multiple letters, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLargeLabelRatio=0x7f010091;
        /**  Large size of the text for one letter keys, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLargeLetterRatio=0x7f010090;
        /**  Size of the text for one letter keys. If specified as fraction, the text size is
             measured in the proportion of key height. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyLetterSize=0x7f01008e;
        /**  The string of characters to output when this key is pressed. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyOutputText=0x7f010081;
        /**  Bottom padding of popup hint letter "..." to the edge of the key.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPopupHintLetterPadding=0x7f01000d;
        /**  Height of the key press feedback popup. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewHeight=0x7f01002c;
        /**  Layout resource for key press feedback.
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyPreviewLayout=0x7f01002a;
        /**  Delay after key releasing and key press feedback dismissing in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewLingerTimeout=0x7f01002d;
        /**  Vertical offset of the key press feedback from the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewOffset=0x7f01002b;
        /**  Key preview visual parameters 
 The text color for key press feedback. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewTextColor=0x7f01009c;
        /**  Size of the text for key press feedback popup, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyPreviewTextRatio=0x7f01009d;
        /**  Key repeat interval in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyRepeatInterval=0x7f010027;
        /**  Key repeat start timeout 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyRepeatStartTimeout=0x7f010026;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintActivatedColor=0x7f01009b;
        /**  Shifted letter hint colors 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintInactivatedColor=0x7f01009a;
        /**  Right padding of shifted letter hint to the edge of the key.
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintPadding=0x7f01000e;
        /**  Size of the text for shifted letter hint, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyShiftedLetterHintRatio=0x7f010094;
        /**  The key style to specify a set of key attributes defined by <key_style/> 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyStyle=0x7f010088;
        /**  Color to use for the label in a key. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextColor=0x7f010095;
        /**  Color to use for the label in a key when in inactivated state. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextInactivatedColor=0x7f010097;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextShadowColor=0x7f010096;
        /**  Blur radius of key text shadow. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyTextShadowRadius=0x7f01000f;
        /**  Key top visual attributes 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> This should be aligned with Typeface.NORMAL etc. </td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
<tr><td><code>boldItalic</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int keyTypeface=0x7f01008d;
        /**  Width of the key, in the proportion of keyboard width.
             If the value is fillRight, the actual key width will be determined to fill out the
             area up to the right edge of the keyboard. 
 This should be aligned with KeyboardBuilder.Row.KEYWIDTH_* 
         <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fillRight</code></td><td>-1</td><td></td></tr>
</table>
         */
        public static final int keyWidth=0x7f01008b;
        /**  The X-coordinate of upper right corner of this key including horizontal gap, in the
             proportion of keyboard width.
             If the value is negative, the origin is the right edge of the keyboard. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyXPos=0x7f01008c;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardBottomPadding=0x7f01005f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardLayout=0x7f01009e;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardLayoutSet=0x7f01009f;
        /**  This should be aligned with KeyboardLayoutSet_Element's elementName. 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
<tr><td><code>emojiRecents</code></td><td>10</td><td></td></tr>
<tr><td><code>emojiCategory1</code></td><td>11</td><td></td></tr>
<tr><td><code>emojiCategory2</code></td><td>12</td><td></td></tr>
<tr><td><code>emojiCategory3</code></td><td>13</td><td></td></tr>
<tr><td><code>emojiCategory4</code></td><td>14</td><td></td></tr>
<tr><td><code>emojiCategory5</code></td><td>15</td><td></td></tr>
<tr><td><code>emojiCategory6</code></td><td>16</td><td></td></tr>
</table>
         */
        public static final int keyboardLayoutSetElement=0x7f0100a0;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardLeftPadding=0x7f010060;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardRightPadding=0x7f010061;
        /**  Keyboard style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardStyle=0x7f010000;
        /**  Keyboard top, bottom, left, right edges paddings, in propotion of keyboard height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keyboardTopPadding=0x7f01005e;
        /**  KeyboardView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int keyboardViewStyle=0x7f010001;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageCode=0x7f0100ad;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int languageOnSpacebarFadeoutAnimator=0x7f01001a;
        /**  Fadeout animator for spacebar language label. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageOnSpacebarFinalAlpha=0x7f010019;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int languageSwitchKeyEnabled=0x7f0100a9;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int localeCode=0x7f0100ac;
        /**  Long press timeout of shift key to shift lock in millisecond. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int longPressShiftLockTimeout=0x7f010028;
        /**  MainKeyboardView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int mainKeyboardViewStyle=0x7f010002;
        /**  Maximum column of more keys keyboard 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxMoreKeysColumn=0x7f01007e;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxMoreSuggestionsRow=0x7f01005a;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int maxValue=0x7f0100b4;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minMoreSuggestionsWidth=0x7f01005b;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minValue=0x7f0100b5;
        /**  This should be aligned with KeyboardId.MODE_* 
         <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>text</code></td><td>0</td><td></td></tr>
<tr><td><code>url</code></td><td>1</td><td></td></tr>
<tr><td><code>email</code></td><td>2</td><td></td></tr>
<tr><td><code>im</code></td><td>3</td><td></td></tr>
<tr><td><code>phone</code></td><td>4</td><td></td></tr>
<tr><td><code>number</code></td><td>5</td><td></td></tr>
</table>
         */
        public static final int mode=0x7f0100a1;
        /**  The keys to display in the more keys keyboard. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int moreKeys=0x7f01007c;
        /**  MoreKeysKeyboardView container style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardContainerStyle=0x7f010006;
        /**  Layout resource for more keys keyboard 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardLayout=0x7f01002e;
        /**  MoreKeysKeyboard style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardStyle=0x7f010004;
        /**  MoreKeysKeyboardView style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysKeyboardViewStyle=0x7f010005;
        /**  More keys keyboard layout template 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int moreKeysTemplate=0x7f010065;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int navigateNext=0x7f0100a2;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int navigatePrevious=0x7f0100a3;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int parentStyle=0x7f0100b0;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int passwordInput=0x7f0100a4;
        /**  Default height of a row (key height + vertical gap), in pixels or in the proportion of
             keyboard height. 
         <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rowHeight=0x7f010062;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shortcutKeyEnabled=0x7f0100a6;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int shortcutKeyOnSymbols=0x7f0100a7;
        /**  More keys keyboard will shown at touched point. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int showMoreKeysKeyboardAtTouchedPoint=0x7f010030;
        /**  Sliding key input enable 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputEnable=0x7f010021;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputPreviewBodyRatio=0x7f010024;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputPreviewColor=0x7f010022;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputPreviewShadowRatio=0x7f010025;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int slidingKeyInputPreviewWidth=0x7f010023;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spacebarTextColor=0x7f010017;
        /**  Size of the text for spacebar language label, in the proportion of key height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spacebarTextRatio=0x7f010016;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int spacebarTextShadowColor=0x7f010018;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_has_morekeys=0x7f010012;
        /**  Key preview background states 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_left_edge=0x7f010010;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_right_edge=0x7f010011;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stepValue=0x7f0100b6;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int styleName=0x7f0100af;
        /** <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>autoCorrectBold</code></td><td>0x01</td><td> This should be aligned with SuggestionStripLayoutHelper.AUTO_CORRECT_* and etc. </td></tr>
<tr><td><code>autoCorrectUnderline</code></td><td>0x02</td><td></td></tr>
<tr><td><code>validTypedWordBold</code></td><td>0x04</td><td></td></tr>
</table>
         */
        public static final int suggestionStripOption=0x7f010052;
        /**  Suggestions strip style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionStripViewStyle=0x7f010007;
        /**  Suggestion word style 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int suggestionWordStyle=0x7f010008;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suggestionsCountInStrip=0x7f010058;
        /**  Suppress showing key preview duration after batch input in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int suppressKeyPreviewAfterBatchInputDuration=0x7f010050;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textsArray=0x7f010079;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int themeId=0x7f01005c;
        /**  Touch noise threshold distance in millimeter 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int touchNoiseThresholdDistance=0x7f010020;
        /**  Touch noise threshold time in millisecond 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int touchNoiseThresholdTime=0x7f01001f;
        /**  Touch position correction 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int touchPositionCorrectionData=0x7f01005d;
        /**  Amount to offset the touch Y coordinate by, for bias correction. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalCorrection=0x7f010013;
        /**  Default vertical gap between rows of keys, in the proportion of keyboard height. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int verticalGap=0x7f010064;
        /**  Visual insets, in the proportion of keyboard width. 
         <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int visualInsetsLeft=0x7f010089;
        /** <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int visualInsetsRight=0x7f01008a;
    }
    public static final class bool {
        /**  Settings for the dictionary pack 
         */
        public static final int allow_over_metered=0x7f09000d;
        public static final int allow_over_roaming=0x7f09000e;
        public static final int config_auto_correction_spacebar_led_enabled=0x7f090014;
        public static final int config_block_potentially_offensive=0x7f09000c;
        /**  Whether or not Popup on key press is enabled by default 
 Whether or not Popup on key press is enabled by default 
 Whether or not Popup on key press is enabled by default 
         */
        public static final int config_default_key_preview_popup=0x7f090006;
        /**  Default value for next word prediction: after entering a word and a space only, should we look
         at input history to suggest a hopefully helpful suggestions for the next word? 
         */
        public static final int config_default_next_word_prediction=0x7f090007;
        /**  Whether phrase gestures are enabled by default 
         */
        public static final int config_default_phrase_gesture_enabled=0x7f090001;
        public static final int config_default_sound_enabled=0x7f090008;
        public static final int config_default_vibration_enabled=0x7f090009;
        public static final int config_enable_bigram_suggestions_option=0x7f090013;
        public static final int config_enable_show_option_of_key_preview_popup=0x7f090004;
        public static final int config_enable_show_voice_key_option=0x7f090003;
        /**  TODO: Disable the following configuration for production. 
         */
        public static final int config_enable_usability_study_mode_option=0x7f090005;
        public static final int config_gesture_input_enabled_by_build_config=0x7f090016;
        public static final int config_setup_wizard_available=0x7f090017;
        /**  milliseconds 
 Showing more keys keyboard, just above the touched point if true, aligned to the key if
         false 
 Showing more keys keyboard, just above the touched point if true, aligned to the key if
         false 
 Showing more keys keyboard, just above the touched point if true, aligned to the key if
         false 
         */
        public static final int config_show_more_keys_keyboard_at_touched_point=0x7f09000b;
        /** 
        Configuration for MainKeyboardView
    
         */
        public static final int config_sliding_key_input_enabled=0x7f09000a;
        public static final int config_use_fullscreen_mode=0x7f090002;
        /**  Whether this language uses spaces between words 
 Whether this language uses spaces between words 
 Whether this language uses spaces between words 
 Whether this language uses spaces between words 
         */
        public static final int current_language_has_spaces=0x7f090015;
        public static final int dict_downloads_visible_in_download_UI=0x7f09000f;
        public static final int display_notification_for_auto_update=0x7f090011;
        public static final int display_notification_for_user_requested_update=0x7f090012;
        /**  Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
 Whether this input method should be used as the default for a locale. Override it
         for supported languages. 
         */
        public static final int im_is_default=0x7f090000;
        public static final int metadata_downloads_visible_in_download_UI=0x7f090010;
    }
    public static final class color {
        public static final int emoji_category_page_id_view_background=0x7f0a0023;
        public static final int emoji_category_page_id_view_foreground=0x7f0a0024;
        /**  TODO: Color which should be included in the theme 
         */
        public static final int emoji_key_background_color=0x7f0a0025;
        public static final int emoji_key_pressed_background_color=0x7f0a0026;
        public static final int emoji_tab_label_color_gb=0x7f0a0029;
        public static final int emoji_tab_label_color_holo=0x7f0a002a;
        public static final int gesture_floating_preview_color_gb=0x7f0a000c;
        public static final int gesture_floating_preview_color_holo=0x7f0a0019;
        /**  Color resources for Gingerbread theme. 
         */
        public static final int highlight_color_gb=0x7f0a0000;
        /**  Color resources for IceCreamSandwich theme. Base color = 33B5E5 
 android:color/holo_blue_light value is #FF33B5E5 
         */
        public static final int highlight_color_ics=0x7f0a000d;
        /**  Color resources for KLP theme. Base color = F0F0F0 
         */
        public static final int highlight_color_klp=0x7f0a001a;
        public static final int highlight_translucent_color_gb=0x7f0a0002;
        public static final int highlight_translucent_color_ics=0x7f0a0010;
        public static final int highlight_translucent_color_klp=0x7f0a001d;
        public static final int key_hint_label_color_gb=0x7f0a0007;
        public static final int key_hint_label_color_holo=0x7f0a0014;
        public static final int key_hint_letter_color_gb=0x7f0a0006;
        public static final int key_hint_letter_color_holo=0x7f0a0013;
        public static final int key_shifted_letter_hint_activated_color_gb=0x7f0a0009;
        public static final int key_shifted_letter_hint_activated_color_holo=0x7f0a0016;
        public static final int key_shifted_letter_hint_inactivated_color_gb=0x7f0a0008;
        public static final int key_shifted_letter_hint_inactivated_color_holo=0x7f0a0015;
        public static final int key_text_color_functional_holo=0x7f0a0028;
        public static final int key_text_color_gb=0x7f0a0003;
        public static final int key_text_color_holo=0x7f0a002b;
        public static final int key_text_color_normal_holo=0x7f0a0027;
        public static final int key_text_inactivated_color_gb=0x7f0a0005;
        public static final int key_text_inactivated_color_holo=0x7f0a0012;
        public static final int key_text_shadow_color_gb=0x7f0a0004;
        public static final int key_text_shadow_color_holo=0x7f0a0011;
        /**  Color resources for setup wizard and tutorial 
         */
        public static final int setup_background=0x7f0a001e;
        public static final int setup_step_action_background=0x7f0a002c;
        public static final int setup_step_action_color=0x7f0a002d;
        public static final int setup_step_background=0x7f0a0021;
        public static final int setup_text_action=0x7f0a0020;
        public static final int setup_text_dark=0x7f0a001f;
        public static final int setup_welcome_video_margin_color=0x7f0a0022;
        public static final int spacebar_text_color_gb=0x7f0a000a;
        public static final int spacebar_text_color_holo=0x7f0a0017;
        public static final int spacebar_text_shadow_color_gb=0x7f0a000b;
        public static final int spacebar_text_shadow_color_holo=0x7f0a0018;
        public static final int suggested_word_color_ics=0x7f0a000f;
        public static final int suggested_word_color_klp=0x7f0a001c;
        public static final int typed_word_color_gb=0x7f0a0001;
        public static final int typed_word_color_ics=0x7f0a000e;
        public static final int typed_word_color_klp=0x7f0a001b;
    }
    public static final class dimen {
        /**  Inset used in Accessibility mode to avoid accidental key presses when a finger slides off the screen. 
         */
        public static final int accessibility_edge_slop=0x7f0d0027;
        /** 
         Configuration for MainKeyboardView
    

        Configuration for MainKeyboardView
    
         */
        public static final int config_key_hysteresis_distance=0x7f0d0000;
        public static final int config_key_hysteresis_distance_for_sliding_modifier=0x7f0d0001;
        /**  Sliding key input preview parameters 
         */
        public static final int config_sliding_key_input_preview_width=0x7f0d0003;
        public static final int config_touch_noise_threshold_distance=0x7f0d0002;
        public static final int emoji_category_page_id_height=0x7f0d0026;
        public static final int gesture_floating_preview_horizontal_padding=0x7f0d0023;
        public static final int gesture_floating_preview_round_radius=0x7f0d0025;
        public static final int gesture_floating_preview_text_offset=0x7f0d0022;
        /**  Gesture floating preview text parameters 
 Gesture floating preview text parameters 
 Gesture floating preview text parameters 
 Gesture floating preview text parameters 
 Gesture floating preview text parameters 
 Gesture floating preview text parameters 
         */
        public static final int gesture_floating_preview_text_size=0x7f0d0021;
        public static final int gesture_floating_preview_vertical_padding=0x7f0d0024;
        public static final int gesture_trail_end_width=0x7f0d0020;
        /**  Maximum distance threshold between gesture trails interpolation segments. 
         */
        public static final int gesture_trail_max_interpolation_distance_threshold=0x7f0d001e;
        /**  Gesture trail parameters 
 Minimum distance between gesture trail sampling points. 
         */
        public static final int gesture_trail_min_sampling_distance=0x7f0d001d;
        public static final int gesture_trail_start_width=0x7f0d001f;
        /**  Gesture trail parameters 
 Gesture trail parameters 
         */
        public static final int gesture_trail_width=0x7f0d0029;
        public static final int key_hint_letter_padding=0x7f0d000d;
        /**  left or right padding of label alignment 
 left or right padding of label alignment 
 left or right padding of label alignment 
 left or right padding of label alignment 
 left or right padding of label alignment 
         */
        public static final int key_label_horizontal_padding=0x7f0d000c;
        public static final int key_popup_hint_letter_padding=0x7f0d000e;
        public static final int key_preview_height=0x7f0d000a;
        public static final int key_preview_offset_gb=0x7f0d000b;
        public static final int key_preview_offset_holo=0x7f0d0010;
        public static final int key_uppercase_letter_padding=0x7f0d000f;
        /**  Preferable keyboard height in absolute scale: 1.285in 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 1.100in 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 48.0mm 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 45.0mm 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 48.0mm 
 This keyboardHeight value should match with keyboard-heights.xml 
 Preferable keyboard height in absolute scale: 58.0mm 
 This keyboardHeight value should match with keyboard-heights.xml 
         */
        public static final int keyboardHeight=0x7f0d0004;
        public static final int keyboard_vertical_correction=0x7f0d0009;
        public static final int language_on_spacebar_horizontal_margin=0x7f0d0028;
        public static final int more_keys_keyboard_key_horizontal_padding=0x7f0d0006;
        /**  Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.2 
 Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.2 
 Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.2 
 Amount of allowance for selecting keys in a mini popup keyboard by sliding finger. 
 popup_key_height x 1.2 
         */
        public static final int more_keys_keyboard_slide_allowance=0x7f0d0007;
        /**  popup_key_height x -1.0 
 popup_key_height x -1.0 
 popup_key_height x -1.0 
 popup_key_height x -1.0 
         */
        public static final int more_keys_keyboard_vertical_correction_gb=0x7f0d0008;
        /**  popup_key_height x -0.5 
 popup_key_height x -0.5 
 popup_key_height x -0.5 
 popup_key_height x -0.5 
         */
        public static final int more_keys_keyboard_vertical_correction_holo=0x7f0d0011;
        public static final int more_suggestions_bottom_gap=0x7f0d0015;
        public static final int more_suggestions_hint_text_size=0x7f0d001c;
        public static final int more_suggestions_key_horizontal_padding=0x7f0d0013;
        public static final int more_suggestions_modal_tolerance=0x7f0d0016;
        public static final int more_suggestions_row_height=0x7f0d0014;
        public static final int more_suggestions_slide_allowance=0x7f0d0017;
        /**  key_height + key_bottom_gap = popup_key_height 
         */
        public static final int popup_key_height=0x7f0d0005;
        public static final int setup_horizontal_padding=0x7f0d0033;
        public static final int setup_step_action_height=0x7f0d0034;
        public static final int setup_step_action_text_size=0x7f0d0031;
        public static final int setup_step_bullet_text_size=0x7f0d002c;
        public static final int setup_step_horizontal_line_height=0x7f0d0038;
        public static final int setup_step_horizontal_padding=0x7f0d0035;
        public static final int setup_step_horizontal_padding_half=0x7f0d0036;
        public static final int setup_step_indicator_height=0x7f0d002e;
        public static final int setup_step_instruction_text_size=0x7f0d0030;
        public static final int setup_step_title_text_size=0x7f0d002f;
        public static final int setup_step_triangle_indicator_height=0x7f0d002d;
        public static final int setup_step_vertical_padding=0x7f0d0037;
        public static final int setup_title_end_margin=0x7f0d0039;
        /**  Setup wizard dimensions for large-phone/landscape. 
 Setup wizard dimensions for large-phone/portrait. 
 Setup wizard dimensions for large-tablet/landscape. 
 Setup wizard dimensions for large-tablet/portrait. 
 Setup wizard dimensions for small-phone/landscape. 
 Setup wizard dimensions for small-phone/portrait. 
 Setup wizard dimensions for small-tablet/landscape. 
 Setup wizard dimensions for small-tablet/portrait. 
         */
        public static final int setup_title_text_size=0x7f0d002a;
        public static final int setup_vertical_padding=0x7f0d0032;
        public static final int setup_welcome_description_text_size=0x7f0d002b;
        public static final int setup_welcome_description_top_margin=0x7f0d003a;
        public static final int setup_welcome_video_bottom_padding=0x7f0d003c;
        public static final int setup_welcome_video_top_padding=0x7f0d003b;
        public static final int suggestion_min_width=0x7f0d0019;
        public static final int suggestion_padding=0x7f0d001a;
        public static final int suggestion_text_size=0x7f0d001b;
        public static final int suggestions_strip_height=0x7f0d0012;
        public static final int suggestions_strip_padding=0x7f0d0018;
    }
    public static final class drawable {
        public static final int btn_keyboard_key_dark_active_ics=0x7f020000;
        public static final int btn_keyboard_key_dark_active_klp=0x7f020001;
        public static final int btn_keyboard_key_dark_normal=0x7f020002;
        public static final int btn_keyboard_key_dark_normal_holo=0x7f020003;
        public static final int btn_keyboard_key_dark_normal_off=0x7f020004;
        public static final int btn_keyboard_key_dark_normal_off_holo=0x7f020005;
        public static final int btn_keyboard_key_dark_normal_on=0x7f020006;
        public static final int btn_keyboard_key_dark_normal_on_ics=0x7f020007;
        public static final int btn_keyboard_key_dark_normal_on_klp=0x7f020008;
        public static final int btn_keyboard_key_dark_pressed=0x7f020009;
        public static final int btn_keyboard_key_dark_pressed_ics=0x7f02000a;
        public static final int btn_keyboard_key_dark_pressed_klp=0x7f02000b;
        public static final int btn_keyboard_key_dark_pressed_off=0x7f02000c;
        public static final int btn_keyboard_key_dark_pressed_off_ics=0x7f02000d;
        public static final int btn_keyboard_key_dark_pressed_off_klp=0x7f02000e;
        public static final int btn_keyboard_key_dark_pressed_on=0x7f02000f;
        public static final int btn_keyboard_key_dark_pressed_on_ics=0x7f020010;
        public static final int btn_keyboard_key_dark_pressed_on_klp=0x7f020011;
        public static final int btn_keyboard_key_functional_gb=0x7f020012;
        public static final int btn_keyboard_key_functional_ics=0x7f020013;
        public static final int btn_keyboard_key_functional_klp=0x7f020014;
        public static final int btn_keyboard_key_gb=0x7f020015;
        public static final int btn_keyboard_key_ics=0x7f020016;
        public static final int btn_keyboard_key_klp=0x7f020017;
        public static final int btn_keyboard_key_light_normal=0x7f020018;
        public static final int btn_keyboard_key_light_normal_holo=0x7f020019;
        public static final int btn_keyboard_key_light_popup_selected=0x7f02001a;
        public static final int btn_keyboard_key_light_pressed=0x7f02001b;
        public static final int btn_keyboard_key_light_pressed_ics=0x7f02001c;
        public static final int btn_keyboard_key_light_pressed_klp=0x7f02001d;
        public static final int btn_keyboard_key_normal=0x7f02001e;
        public static final int btn_keyboard_key_normal_off=0x7f02001f;
        public static final int btn_keyboard_key_normal_on=0x7f020020;
        public static final int btn_keyboard_key_popup_gb=0x7f020021;
        public static final int btn_keyboard_key_popup_ics=0x7f020022;
        public static final int btn_keyboard_key_popup_klp=0x7f020023;
        public static final int btn_keyboard_key_popup_selected_ics=0x7f020024;
        public static final int btn_keyboard_key_popup_selected_klp=0x7f020025;
        public static final int btn_keyboard_key_pressed=0x7f020026;
        public static final int btn_keyboard_key_pressed_off=0x7f020027;
        public static final int btn_keyboard_key_pressed_on=0x7f020028;
        public static final int btn_suggestion_gb=0x7f020029;
        public static final int btn_suggestion_ics=0x7f02002a;
        public static final int btn_suggestion_klp=0x7f02002b;
        public static final int btn_suggestion_pressed=0x7f02002c;
        public static final int ic_emoji_nature_light=0x7f02002d;
        public static final int ic_emoji_nature_light_activated=0x7f02002e;
        public static final int ic_emoji_nature_light_normal=0x7f02002f;
        public static final int ic_emoji_objects_light=0x7f020030;
        public static final int ic_emoji_objects_light_activated=0x7f020031;
        public static final int ic_emoji_objects_light_normal=0x7f020032;
        public static final int ic_emoji_people_light=0x7f020033;
        public static final int ic_emoji_people_light_activated=0x7f020034;
        public static final int ic_emoji_people_light_normal=0x7f020035;
        public static final int ic_emoji_places_light=0x7f020036;
        public static final int ic_emoji_places_light_activated=0x7f020037;
        public static final int ic_emoji_places_light_normal=0x7f020038;
        public static final int ic_emoji_recent_light=0x7f020039;
        public static final int ic_emoji_recent_light_activated=0x7f02003a;
        public static final int ic_emoji_recent_light_normal=0x7f02003b;
        public static final int ic_emoji_symbols_light=0x7f02003c;
        public static final int ic_emoji_symbols_light_activated=0x7f02003d;
        public static final int ic_emoji_symbols_light_normal=0x7f02003e;
        public static final int ic_ime_switcher_dark=0x7f02003f;
        public static final int ic_menu_add=0x7f020040;
        public static final int ic_notify_dictionary=0x7f020041;
        public static final int ic_setup_finish=0x7f020042;
        public static final int ic_setup_step1=0x7f020043;
        public static final int ic_setup_step2=0x7f020044;
        public static final int ic_setup_step3=0x7f020045;
        public static final int ic_subtype_mic_dark=0x7f020046;
        public static final int keyboard_background_gb=0x7f020047;
        public static final int keyboard_background_holo=0x7f020048;
        public static final int keyboard_key_feedback_background=0x7f020049;
        public static final int keyboard_key_feedback_background_ics=0x7f02004a;
        public static final int keyboard_key_feedback_background_klp=0x7f02004b;
        public static final int keyboard_key_feedback_gb=0x7f02004c;
        public static final int keyboard_key_feedback_ics=0x7f02004d;
        public static final int keyboard_key_feedback_klp=0x7f02004e;
        public static final int keyboard_key_feedback_left_background_ics=0x7f02004f;
        public static final int keyboard_key_feedback_left_background_klp=0x7f020050;
        public static final int keyboard_key_feedback_left_more_background_ics=0x7f020051;
        public static final int keyboard_key_feedback_left_more_background_klp=0x7f020052;
        public static final int keyboard_key_feedback_more_background=0x7f020053;
        public static final int keyboard_key_feedback_more_background_ics=0x7f020054;
        public static final int keyboard_key_feedback_more_background_klp=0x7f020055;
        public static final int keyboard_key_feedback_right_background_ics=0x7f020056;
        public static final int keyboard_key_feedback_right_background_klp=0x7f020057;
        public static final int keyboard_key_feedback_right_more_background_ics=0x7f020058;
        public static final int keyboard_key_feedback_right_more_background_klp=0x7f020059;
        public static final int keyboard_popup_panel_background_gb=0x7f02005a;
        public static final int keyboard_popup_panel_background_ics=0x7f02005b;
        public static final int keyboard_popup_panel_background_klp=0x7f02005c;
        public static final int keyboard_suggest_strip_gb=0x7f02005d;
        public static final int keyboard_suggest_strip_holo=0x7f02005e;
        public static final int more_keys_divider=0x7f02005f;
        public static final int more_suggestions_divider=0x7f020060;
        public static final int setup_step_action_background=0x7f020061;
        public static final int suggestions_strip_divider=0x7f020062;
        public static final int sym_keyboard_delete_holo_dark=0x7f020063;
        public static final int sym_keyboard_feedback_tab=0x7f020064;
        public static final int sym_keyboard_label_mic_holo_dark=0x7f020065;
        public static final int sym_keyboard_language_switch_dark=0x7f020066;
        public static final int sym_keyboard_mic_holo_dark=0x7f020067;
        public static final int sym_keyboard_mic_holo_light=0x7f020068;
        public static final int sym_keyboard_return_holo_dark=0x7f020069;
        public static final int sym_keyboard_search_holo_dark=0x7f02006a;
        public static final int sym_keyboard_settings_holo_dark=0x7f02006b;
        public static final int sym_keyboard_shift_holo_dark=0x7f02006c;
        public static final int sym_keyboard_shift_locked_holo_dark=0x7f02006d;
        public static final int sym_keyboard_smiley_holo_dark=0x7f02006e;
        public static final int sym_keyboard_space=0x7f02006f;
        public static final int sym_keyboard_space_holo_dark=0x7f020070;
        public static final int sym_keyboard_space_led_gb=0x7f020071;
        public static final int sym_keyboard_space_led_holo=0x7f020072;
        public static final int sym_keyboard_tab_holo_dark=0x7f020073;
        public static final int sym_keyboard_voice_holo_dark=0x7f020074;
        public static final int sym_keyboard_voice_off_holo_dark=0x7f020075;
        public static final int sym_keyboard_zwj_holo_dark=0x7f020076;
        public static final int sym_keyboard_zwnj_holo_dark=0x7f020077;
        public static final int tab_selected=0x7f020078;
        public static final int tab_unselected=0x7f020079;
        public static final int transparent=0x7f02007a;
        public static final int unbundled_check_01=0x7f02007b;
        public static final int unbundled_check_02=0x7f02007c;
        public static final int unbundled_earth_01=0x7f02007d;
        public static final int unbundled_earth_02=0x7f02007e;
        public static final int unbundled_key_01=0x7f02007f;
        public static final int unbundled_key_02=0x7f020080;
        public static final int unbundled_select_01=0x7f020081;
        public static final int unbundled_select_02=0x7f020082;
    }
    public static final class fraction {
        public static final int center_suggestion_percentile=0x7f0e001f;
        /**  Static threshold for starting gesture detection (keyWidth%/sec) 
         */
        public static final int config_gesture_detect_fast_move_speed_threshold=0x7f0e0000;
        /**  Distance based threshold values for gesture detection (keyWidth%/sec) 
         */
        public static final int config_gesture_dynamic_distance_threshold_from=0x7f0e0001;
        public static final int config_gesture_dynamic_distance_threshold_to=0x7f0e0002;
        public static final int config_gesture_recognition_speed_threshold=0x7f0e0004;
        /**  Parameter for gesture sampling (keyWidth%/sec) 
         */
        public static final int config_gesture_sampling_minimum_distance=0x7f0e0003;
        public static final int emoji_keyboard_key_letter_size=0x7f0e0022;
        /**  Emoji keyboard 
 Emoji keyboard 
 Emoji keyboard 
 Emoji keyboard 
 Emoji keyboard 
 Emoji keyboard 
         */
        public static final int emoji_keyboard_key_width=0x7f0e0020;
        public static final int emoji_keyboard_row_height=0x7f0e0021;
        /**  For 5-row keyboard 
 For 5-row keyboard 
 For 5-row keyboard 
 For 5-row keyboard 
 For 5-row keyboard 
 For 5-row keyboard 
         */
        public static final int key_bottom_gap_5row=0x7f0e001a;
        public static final int key_bottom_gap_gb=0x7f0e000b;
        public static final int key_bottom_gap_holo=0x7f0e000f;
        public static final int key_hint_label_ratio=0x7f0e0016;
        public static final int key_hint_letter_ratio=0x7f0e0015;
        public static final int key_horizontal_gap_gb=0x7f0e000c;
        public static final int key_horizontal_gap_holo=0x7f0e0010;
        public static final int key_label_ratio=0x7f0e0013;
        public static final int key_large_label_ratio=0x7f0e0014;
        public static final int key_large_letter_ratio=0x7f0e0012;
        public static final int key_letter_ratio=0x7f0e0011;
        public static final int key_letter_ratio_5row=0x7f0e001b;
        public static final int key_preview_text_ratio=0x7f0e0018;
        public static final int key_uppercase_letter_ratio=0x7f0e0017;
        public static final int key_uppercase_letter_ratio_5row=0x7f0e001c;
        public static final int keyboard_bottom_padding_gb=0x7f0e000a;
        public static final int keyboard_bottom_padding_holo=0x7f0e000e;
        public static final int keyboard_left_padding=0x7f0e0007;
        public static final int keyboard_right_padding=0x7f0e0008;
        public static final int keyboard_top_padding_gb=0x7f0e0009;
        public static final int keyboard_top_padding_holo=0x7f0e000d;
        public static final int maxKeyboardHeight=0x7f0e0005;
        public static final int minKeyboardHeight=0x7f0e0006;
        public static final int min_more_suggestions_width=0x7f0e001d;
        public static final int more_suggestions_info_ratio=0x7f0e001e;
        public static final int spacebar_text_ratio=0x7f0e0019;
    }
    public static final class id {
        public static final int action=0x7f080006;
        public static final int actionCustomLabel=0x7f080043;
        public static final int actionDone=0x7f080041;
        public static final int actionGo=0x7f08003d;
        public static final int actionNext=0x7f080040;
        public static final int actionNone=0x7f08003c;
        public static final int actionPrevious=0x7f080042;
        public static final int actionSearch=0x7f08003e;
        public static final int actionSend=0x7f08003f;
        public static final int actionUnspecified=0x7f08003b;
        public static final int alignLeft=0x7f08000d;
        public static final int alignLeftOfCenter=0x7f08000f;
        public static final int alignRight=0x7f08000e;
        public static final int allow_button=0x7f08004a;
        public static final int alphabet=0x7f080026;
        public static final int alphabetAutomaticShifted=0x7f080028;
        public static final int alphabetManualShifted=0x7f080027;
        public static final int alphabetShiftLockShifted=0x7f08002a;
        public static final int alphabetShiftLocked=0x7f080029;
        public static final int altCodeWhileTyping=0x7f08000b;
        public static final int autoCorrectBold=0x7f080000;
        public static final int autoCorrectUnderline=0x7f080001;
        public static final int autoXScale=0x7f08001c;
        public static final int bold=0x7f080023;
        public static final int boldItalic=0x7f080025;
        public static final int buttons=0x7f080048;
        public static final int deny_button=0x7f080049;
        public static final int dict_cancel_button=0x01010002;
        public static final int dict_delete_button=0x01010003;
        public static final int dict_install_button=0x01010001;
        public static final int dictionary_line_progress_bar=0x7f080046;
        public static final int disableAdditionalMoreKeys=0x7f080021;
        public static final int disableKeyHintLabel=0x7f080020;
        public static final int download_over_metered_prompt=0x7f080047;
        public static final int email=0x7f080039;
        public static final int emojiCategory1=0x7f080031;
        public static final int emojiCategory2=0x7f080032;
        public static final int emojiCategory3=0x7f080033;
        public static final int emojiCategory4=0x7f080034;
        public static final int emojiCategory5=0x7f080035;
        public static final int emojiCategory6=0x7f080036;
        public static final int emojiRecents=0x7f080030;
        public static final int emoji_action_bar=0x7f080053;
        public static final int emoji_category_page_id_view=0x7f080052;
        public static final int emoji_category_tabhost=0x7f08004e;
        public static final int emoji_keyboard_alphabet=0x7f080054;
        public static final int emoji_keyboard_alphabet2=0x7f080056;
        public static final int emoji_keyboard_delete=0x7f080050;
        public static final int emoji_keyboard_dummy=0x7f08004f;
        public static final int emoji_keyboard_page=0x7f08004c;
        public static final int emoji_keyboard_pager=0x7f080051;
        public static final int emoji_keyboard_scroller=0x7f08004b;
        public static final int emoji_keyboard_space=0x7f080055;
        public static final int emoji_keyboard_view=0x7f08004d;
        public static final int empty=0x7f080003;
        public static final int enableLongPress=0x7f08000c;
        public static final int fillRight=0x7f080022;
        public static final int followKeyHintLabelRatio=0x7f080016;
        public static final int followKeyLabelRatio=0x7f080014;
        public static final int followKeyLargeLabelRatio=0x7f080015;
        public static final int followKeyLargeLetterRatio=0x7f080012;
        public static final int followKeyLetterRatio=0x7f080013;
        public static final int fontMonoSpace=0x7f080011;
        public static final int fontNormal=0x7f080010;
        public static final int fromCustomActionLabel=0x7f08001f;
        public static final int functional=0x7f080005;
        public static final int hasHintLabel=0x7f080019;
        public static final int hasPopupHint=0x7f080017;
        public static final int hasShiftedLetterHint=0x7f080018;
        public static final int im=0x7f08003a;
        public static final int isRepeatable=0x7f080009;
        public static final int italic=0x7f080024;
        public static final int key_preview_backing=0x7f080057;
        public static final int keyboard_layout_set_spinner=0x7f080045;
        public static final int keyboard_view=0x7f08005a;
        public static final int loading_container=0x7f08005b;
        public static final int loading_progress_bar=0x7f08005c;
        public static final int main_keyboard_frame=0x7f080058;
        public static final int more_keys_keyboard_view=0x7f08005d;
        public static final int more_suggestions_view=0x7f08005e;
        public static final int noKeyPreview=0x7f08000a;
        public static final int normal=0x7f080004;
        public static final int number=0x7f08002f;
        public static final int phone=0x7f08002d;
        public static final int phoneSymbols=0x7f08002e;
        public static final int preserveCase=0x7f08001d;
        public static final int research_feedback_cancel_button=0x7f080064;
        public static final int research_feedback_contents=0x7f080061;
        public static final int research_feedback_fragment=0x7f080060;
        public static final int research_feedback_include_account_name=0x7f080062;
        public static final int research_feedback_include_history=0x7f080066;
        public static final int research_feedback_include_recording_checkbox=0x7f080063;
        public static final int research_feedback_layout=0x7f08005f;
        public static final int research_feedback_send_button=0x7f080065;
        public static final int seek_bar_dialog_bar=0x7f080068;
        public static final int seek_bar_dialog_value=0x7f080067;
        public static final int setup_finish=0x7f080078;
        public static final int setup_next=0x7f080077;
        public static final int setup_start_indicator=0x7f08006a;
        public static final int setup_start_label=0x7f080069;
        public static final int setup_step1=0x7f080074;
        public static final int setup_step1_bullet=0x7f08006f;
        public static final int setup_step2=0x7f080075;
        public static final int setup_step2_bullet=0x7f080070;
        public static final int setup_step3=0x7f080076;
        public static final int setup_step3_bullet=0x7f080071;
        public static final int setup_step_action_label=0x7f08006d;
        public static final int setup_step_bullets=0x7f08006e;
        public static final int setup_step_indicator=0x7f080072;
        public static final int setup_step_instruction=0x7f08006c;
        public static final int setup_step_title=0x7f08006b;
        public static final int setup_steps_pane=0x7f080073;
        public static final int setup_steps_screen=0x7f080080;
        public static final int setup_title=0x7f080079;
        public static final int setup_welcome_description=0x7f08007b;
        public static final int setup_welcome_image=0x7f08007d;
        public static final int setup_welcome_screen=0x7f08007f;
        public static final int setup_welcome_title=0x7f08007a;
        public static final int setup_welcome_video=0x7f08007c;
        public static final int setup_wizard=0x7f08007e;
        public static final int shiftedLetterActivated=0x7f08001e;
        public static final int stickyOff=0x7f080007;
        public static final int stickyOn=0x7f080008;
        public static final int subtype_locale_spinner=0x7f080044;
        public static final int suggestion_strip_view=0x7f080059;
        public static final int suggestions_strip=0x7f080081;
        public static final int symbols=0x7f08002b;
        public static final int symbolsShifted=0x7f08002c;
        public static final int text=0x7f080037;
        public static final int url=0x7f080038;
        public static final int user_dict_settings_add_dialog_top=0x7f080082;
        public static final int user_dictionary_add_locale=0x7f080088;
        public static final int user_dictionary_add_locale_label=0x7f080087;
        public static final int user_dictionary_add_shortcut=0x7f080086;
        public static final int user_dictionary_add_shortcut_label=0x7f080085;
        public static final int user_dictionary_add_word_grid=0x7f080084;
        public static final int user_dictionary_add_word_text=0x7f080083;
        public static final int validTypedWordBold=0x7f080002;
        public static final int withIconLeft=0x7f08001a;
        public static final int withIconRight=0x7f08001b;
        public static final int wordlist_button_switcher=0x01010000;
    }
    public static final class integer {
        public static final int config_default_longpress_key_timeout=0x7f0b0011;
        /**  The language is never displayed if == 0, always displayed if < 0 
         */
        public static final int config_delay_before_fadeout_language_on_spacebar=0x7f0b0023;
        public static final int config_delay_update_old_suggestions=0x7f0b0002;
        public static final int config_delay_update_shift_state=0x7f0b0003;
        /**  milliseconds 
         */
        public static final int config_delay_update_suggestions=0x7f0b0001;
        public static final int config_double_space_period_timeout=0x7f0b0009;
        /**  Dynamic threshold for gesture after fast typing (msec) 
         */
        public static final int config_gesture_dynamic_threshold_decay_duration=0x7f0b001c;
        /**  Time based threshold values for gesture detection (msec) 
         */
        public static final int config_gesture_dynamic_time_threshold_from=0x7f0b001d;
        public static final int config_gesture_dynamic_time_threshold_to=0x7f0b001e;
        public static final int config_gesture_floating_preview_text_linger_timeout=0x7f0b0017;
        /**  Parameters for gesture recognition (msec) and (keyWidth%/sec) 
         */
        public static final int config_gesture_recognition_minimum_time=0x7f0b001f;
        public static final int config_gesture_recognition_update_time=0x7f0b0020;
        /**  Static threshold for gesture after fast typing (msec) 
         */
        public static final int config_gesture_static_time_threshold_after_fast_typing=0x7f0b001b;
        public static final int config_gesture_trail_fadeout_duration=0x7f0b0019;
        public static final int config_gesture_trail_fadeout_start_delay=0x7f0b0018;
        public static final int config_gesture_trail_update_interval=0x7f0b001a;
        /**  milliseconds 
         */
        public static final int config_ignore_alt_code_key_timeout=0x7f0b0016;
        public static final int config_key_preview_linger_timeout=0x7f0b000c;
        public static final int config_key_repeat_interval=0x7f0b0010;
        public static final int config_key_repeat_start_timeout=0x7f0b000f;
        public static final int config_keyboard_grid_height=0x7f0b0008;
        public static final int config_keyboard_grid_width=0x7f0b0007;
        public static final int config_language_on_spacebar_final_alpha=0x7f0b0004;
        /**  milliseconds 
 Long pressing shift will invoke caps-lock if > 0, never invoke caps-lock if == 0 
         */
        public static final int config_longpress_shift_lock_timeout=0x7f0b0015;
        /**  milliseconds 
         */
        public static final int config_longpress_timeout_step=0x7f0b0012;
        /**  milliseconds 
         */
        public static final int config_max_longpress_timeout=0x7f0b0014;
        public static final int config_max_more_keys_column=0x7f0b000a;
        public static final int config_max_vibration_duration=0x7f0b0000;
        /**  milliseconds 
         */
        public static final int config_min_longpress_timeout=0x7f0b0013;
        public static final int config_more_keys_keyboard_fadein_anim_time=0x7f0b0005;
        public static final int config_more_keys_keyboard_fadeout_anim_time=0x7f0b0006;
        /**  Percentages of sliding key input preview body and shadow, in proportion to the width.
         A negative value of the shadow ratio disables drawing shadow. 
 TODO: May use the shadow to alleviate rugged trail drawing. 
         */
        public static final int config_sliding_key_input_preview_body_ratio=0x7f0b000d;
        public static final int config_sliding_key_input_preview_shadow_ratio=0x7f0b000e;
        /**  Suppress showing key preview duration after batch input in millisecond 
         */
        public static final int config_suppress_key_preview_after_batch_input_duration=0x7f0b0021;
        public static final int config_touch_noise_threshold_time=0x7f0b000b;
        public static final int emoji_keyboard_max_key_count=0x7f0b002a;
        /**  Percentages of gesture preview taril body and shadow, in proportion to the trail width.
         A negative value of the shadow ratio disables drawing shadow. 
 TODO: May use the shadow to alleviate rugged trail drawing. 
         */
        public static final int gesture_trail_body_ratio=0x7f0b0028;
        /**  Maximum angular threshold between gesture trails interpolation segments in degree. 
         */
        public static final int gesture_trail_max_interpolation_angular_threshold=0x7f0b0026;
        /**  Maximum number of gesture trail interpolation segments. 
         */
        public static final int gesture_trail_max_interpolation_segments=0x7f0b0027;
        public static final int gesture_trail_shadow_ratio=0x7f0b0029;
        /**   Screen metrics for logging.
            0 = "mdpi phone screen"
            1 = "hdpi phone screen"
            2 = "mdpi 11 inch tablet screen"
            3 = "xhdpi phone screen?"
            4 = ?
    
  Screen metrics for logging.
            0 = "mdpi phone screen"
            1 = "hdpi phone screen"
            2 = "mdpi 11 inch tablet screen"
            3 = "xhdpi phone screen?"
            4 = ?
    
  Screen metrics for logging.
            0 = "mdpi phone screen"
            1 = "hdpi phone screen"
            2 = "mdpi 11 inch tablet screen"
            3 = "xhdpi phone screen?"
            4 = ?
    
         */
        public static final int log_screen_metrics=0x7f0b0022;
        public static final int max_more_suggestions_row=0x7f0b0024;
        /**  The sentence separator code point, for capitalization 
 U+002E: "." FULL STOP   ; 2Eh = 46d 
 The sentence separator code point, for capitalization 
 U+0589: "։" ARMENIAN FULL STOP   ; 589h = 1417d 
         */
        public static final int sentence_separator=0x7f0b002c;
        public static final int setup_body_weight_in_screen=0x7f0b002e;
        public static final int setup_title_weight_in_screen=0x7f0b002d;
        public static final int setup_welcome_video_end_padding_weight_in_screen=0x7f0b0030;
        public static final int setup_welcome_video_weight_in_screen=0x7f0b002f;
        public static final int suggestions_count_in_strip=0x7f0b0025;
        public static final int user_dictionary_max_word_length=0x7f0b002b;
    }
    public static final class layout {
        public static final int additional_subtype_dialog=0x7f040000;
        public static final int dictionary_line=0x7f040001;
        public static final int download_over_metered=0x7f040002;
        public static final int emoji_keyboard_page=0x7f040003;
        public static final int emoji_keyboard_tab_icon=0x7f040004;
        public static final int emoji_keyboard_tab_label=0x7f040005;
        public static final int emoji_palettes_view=0x7f040006;
        public static final int hint_add_to_dictionary=0x7f040007;
        public static final int input_view=0x7f040008;
        public static final int key_preview_gb=0x7f040009;
        public static final int key_preview_ics=0x7f04000a;
        public static final int key_preview_klp=0x7f04000b;
        public static final int loading_page=0x7f04000c;
        public static final int more_keys_keyboard=0x7f04000d;
        public static final int more_suggestions=0x7f04000e;
        public static final int research_feedback_activity=0x7f04000f;
        public static final int research_feedback_fragment_layout=0x7f040010;
        public static final int research_feedback_layout=0x7f040011;
        public static final int seek_bar_dialog=0x7f040012;
        public static final int setup_start_indicator_label=0x7f040013;
        public static final int setup_step=0x7f040014;
        public static final int setup_steps_cards=0x7f040015;
        public static final int setup_steps_screen=0x7f040016;
        public static final int setup_steps_title=0x7f040017;
        public static final int setup_welcome_screen=0x7f040018;
        public static final int setup_welcome_title=0x7f040019;
        public static final int setup_welcome_video=0x7f04001a;
        public static final int setup_wizard=0x7f04001b;
        public static final int suggestion_divider=0x7f04001c;
        public static final int suggestion_info=0x7f04001d;
        public static final int suggestion_word=0x7f04001e;
        public static final int suggestions_strip=0x7f04001f;
        public static final int user_dictionary_add_word=0x7f040020;
        public static final int user_dictionary_add_word_fullscreen=0x7f040021;
        public static final int user_dictionary_item=0x7f040022;
        public static final int user_dictionary_preference_list_fragment=0x7f040023;
    }
    public static final class mipmap {
        public static final int ic_launcher_keyboard=0x7f030000;
    }
    public static final class raw {
        public static final int empty=0x7f070000;
        public static final int main=0x7f070001;
        public static final int main_de=0x7f070002;
        public static final int main_en=0x7f070003;
        public static final int main_es=0x7f070004;
        public static final int main_fr=0x7f070005;
        public static final int main_it=0x7f070006;
        public static final int main_pt_br=0x7f070007;
        public static final int main_ru=0x7f070008;
        public static final int setup_welcome_image=0x7f070009;
        public static final int setup_welcome_video=0x7f07000a;
    }
    public static final class string {
        /**  Units abbreviation for the duration (milliseconds) [CHAR LIMIT=10] 
         */
        public static final int abbreviation_unit_milliseconds=0x7f0c004f;
        /**  Title of the button to add custom style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int add=0x7f0c00cf;
        /**  Title of the option menu to add a new style entry in the preference settings [CHAR LIMIT=16] 
         */
        public static final int add_style=0x7f0c00ce;
        /**  Indicates that a word has been added to the dictionary 
         */
        public static final int added_word=0x7f0c006e;
        /**  Option name for advanced settings screen [CHAR LIMIT=25] 
         */
        public static final int advanced_settings=0x7f0c0044;
        /**  Option summary for advanced settings screen [CHAR LIMIT=65 (two lines) or 30 (fits on one line, preferable)] 
         */
        public static final int advanced_settings_summary=0x7f0c0045;
        /**  Title for the spell checking service settings screen. AOSP(Android Open Source Project) should not be translated.
         This resource should be copied from msgid="2970535894327288421" 
         */
        public static final int android_spell_checker_settings=0x7f0c0038;
        /**  Spoken feedback when the keyboard is hidden. 
         */
        public static final int announce_keyboard_hidden=0x7f0c008e;
        /**  Spoken feedback when the keyboard mode changes. 
         */
        public static final int announce_keyboard_mode=0x7f0c008f;
        /**  The dictionary provider application name. Visible in Settings/Applications/Manage applications. 
         */
        public static final int app_name=0x7f0c00f9;
        public static final int authority=0x7f0c0005;
        /**  Option to enable auto capitalization of sentences 
         */
        public static final int auto_cap=0x7f0c0055;
        /**  Description for option to enable auto capitalization of sentences 
         */
        public static final int auto_cap_summary=0x7f0c0056;
        /**  Option to decide the auto correction threshold score 
 Option to enable auto correction [CHAR LIMIT=20]
         */
        public static final int auto_correction=0x7f0c0061;
        /**  Description for auto correction [CHAR LIMIT=65 (two lines) or 30 (fits on one line, preferable)] 
         */
        public static final int auto_correction_summary=0x7f0c0062;
        /**  Option to suggest auto correction suggestions aggressively. Auto-corrects to a word which has even large edit distance from typed word. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_aggressive=0x7f0c0065;
        public static final int auto_correction_threshold_mode_index_aggressive=0x7f0c0013;
        public static final int auto_correction_threshold_mode_index_modest=0x7f0c0012;
        public static final int auto_correction_threshold_mode_index_off=0x7f0c0011;
        public static final int auto_correction_threshold_mode_index_very_aggressive=0x7f0c0014;
        /**  Option to suggest auto correction suggestions modestly. Auto-corrects only to a word which has small edit distance from typed word. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_modest=0x7f0c0064;
        /**  Option to disable auto correction. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_off=0x7f0c0063;
        /**  Option to suggest auto correction suggestions very aggressively. Auto-corrects to a word which has even large edit distance from typed word. [CHAR LIMIT=20] 
         */
        public static final int auto_correction_threshold_mode_very_aggressive=0x7f0c0066;
        /**  Option to enable using next word suggestions. After the user types a space, with this option on, the keyboard will try to predict the next word. 
         */
        public static final int bigram_prediction=0x7f0c0067;
        /**  Description for "next word suggestion" option. This displays suggestions even when there is no input, based on the previous word. 
         */
        public static final int bigram_prediction_summary=0x7f0c0068;
        /**  Title of the button to revert to the default value of the device in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int button_default=0x7f0c00e3;
        /**  Standard message to dismiss a dialog box 
         */
        public static final int cancel=0x7f0c010d;
        /**  Action to cancel the ongoing download of a dictionary file [CHAR_LIMIT=25] 
         */
        public static final int cancel_download_dict=0x7f0c010f;
        /**  Message to display in the dictionaries setting screen when some error prevented us to list installed dictionaries [CHAR LIMIT=20] 
         */
        public static final int cannot_connect_to_dict_service=0x7f0c0106;
        /**  Title of the options to press to refresh the list (as in, check for updates now) [CHAR_LIMIT=50] 
         */
        public static final int check_for_updates_now=0x7f0c0108;
        /**  This configuration is an index of  {@link KeyboardSwitcher#KEYBOARD_THEMES[]}. 
         */
        public static final int config_default_keyboard_theme_index=0x7f0c0000;
        /**  Option to configure dictionaries 
         */
        public static final int configure_dictionaries_title=0x7f0c0058;
        /**  Title for configuring input method settings [CHAR LIMIT=35] 
         */
        public static final int configure_input_method=0x7f0c00a0;
        /**  Category title for text prediction 
         */
        public static final int correction_category=0x7f0c0041;
        /**  Toast text to describe the same input style already exists [CHAR LIMIT=64]
         */
        public static final int custom_input_style_already_exists=0x7f0c00d7;
        /**  The message of the dialog to note that a custom input style needs to be enabled. [CHAR LIMIT=130] 
         */
        public static final int custom_input_style_note_message=0x7f0c00d4;
        /**  Title of the preference settings for custom input styles (language and keyboard layout pairs) [CHAR LIMIT=35]
         */
        public static final int custom_input_styles_title=0x7f0c00cd;
        public static final int default_metadata_uri=0x7f0c0006;
        /**  Name for the "user dictionary" preference item when there is only one 
         */
        public static final int default_user_dict_pref_name=0x7f0c0101;
        /**  Action to delete a dictionary file [CHAR_LIMIT=15] 
         */
        public static final int delete_dict=0x7f0c0110;
        /**  The small subtext in the "dictionary available" notification. 
         */
        public static final int dict_available_notification_description=0x7f0c0115;
        /**  The text of the "dictionary available" notification. 
         */
        public static final int dict_available_notification_title=0x7f0c0114;
        /**  Message about some dictionary indicating it can be downloaded, but hasn't been yet 
         */
        public static final int dictionary_available=0x7f0c0102;
        /**  Message about some dictionary indicating the file is installed, but the dictionary is disabled 
         */
        public static final int dictionary_disabled=0x7f0c0105;
        /**  Message about some dictionary indicating it is downloading and should be available soon 
         */
        public static final int dictionary_downloading=0x7f0c0103;
        /**  Title for the prompt dialog which informs the user that a dictionary is available for the current language and asks to decide whether to download it over 3g 
         */
        public static final int dictionary_install_over_metered_network_prompt=0x7f0c00fe;
        /**  Message about some dictionary indicating it is already installed 
         */
        public static final int dictionary_installed=0x7f0c0104;
        public static final int dictionary_pack_client_id=0x7f0c0002;
        public static final int dictionary_pack_metadata_uri=0x7f0c0003;
        public static final int dictionary_pack_settings_activity=0x7f0c0004;
        /**  The dictionary provider ContentProvider name. Visible in Settings/Applications/Running services. 
         */
        public static final int dictionary_provider_name=0x7f0c00fa;
        /**  The dictionary provider Service name. Visible in Settings/Applications/Running services. 
         */
        public static final int dictionary_service_name=0x7f0c00fb;
        public static final int dictionary_settings_summary=0x7f0c00ff;
        /**  Title and summary of the dictionary settings screen 
         */
        public static final int dictionary_settings_title=0x7f0c00fd;
        public static final int do_not_download_over_metered=0x7f0c0113;
        /**  Downloadable dictionaries will get update information through the network. This describes the associated download. 
         */
        public static final int download_description=0x7f0c00fc;
        public static final int download_over_metered=0x7f0c0112;
        /**  Option to edit personal dictionary. [CHAR_LIMIT=30]
         */
        public static final int edit_personal_dictionary=0x7f0c0057;
        /**  Title of the button to enable a custom input style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int enable=0x7f0c00d5;
        /**  Title for Latin keyboard debug settings activity / dialog 
         */
        public static final int english_ime_debug_settings=0x7f0c0018;
        /**  Title for Latin keyboard input options dialog [CHAR LIMIT=25] 
         */
        public static final int english_ime_input_options=0x7f0c0039;
        /**  Application name for opensource Android keyboard. AOSP(Android Open Source Project) should not be translated.
         This resource should be copied from msgid="8250992613616792321" 
         */
        public static final int english_ime_name=0x7f0c0035;
        /**  Title for Latin keyboard research log dialog, which contains special commands for users that contribute data for research. [CHAR LIMIT=33] 
         */
        public static final int english_ime_research_log=0x7f0c003a;
        /**  Title for Android Keyboard settings screen. AOSP(Android Open Source Project) should not be translated.
         This resource should be copied from msgid="423615877174850267" 
         */
        public static final int english_ime_settings=0x7f0c0037;
        /**  Title for an error dialog that contains the details of the error in the body [CHAR LIMIT=80] 
         */
        public static final int error=0x7f0c00e2;
        /**  Category title for general settings for Android keyboard 
         */
        public static final int general_category=0x7f0c0040;
        /**  Option to enable gesture floating text preview. The user can see a suggested word floating under the moving finger during a gesture input. [CHAR LIMIT=30]
         */
        public static final int gesture_floating_preview_text=0x7f0c006c;
        /**  Description for "gesture_floating_preview_text" option. The user can see a suggested word floating under the moving finger during a gesture input. [CHAR LIMIT=65]
         */
        public static final int gesture_floating_preview_text_summary=0x7f0c006d;
        /**  Option to enable gesture input. The user can input a word by tracing the letters of a word without releasing the finger from the screen. [CHAR LIMIT=30]
         */
        public static final int gesture_input=0x7f0c0069;
        /**  Description for "gesture_input" option. The user can input a word by tracing the letters of a word without releasing the finger from the screen. [CHAR LIMIT=65]
         */
        public static final int gesture_input_summary=0x7f0c006a;
        /**  Option to enable gesture trail preview. The user can see a trail of the gesture during gesture input. [CHAR LIMIT=30]
         */
        public static final int gesture_preview_trail=0x7f0c006b;
        /**  Category title for gesture typing 
         */
        public static final int gesture_typing_category=0x7f0c0042;
        /**  Inform the user that a particular language has an available dictionary 
         */
        public static final int has_dictionary=0x7f0c00b7;
        /**  Add to dictionary hint 
         */
        public static final int hint_add_to_dictionary=0x7f0c00b6;
        /**  Option name for including other IMEs in the language switch list [CHAR LIMIT=30] 
         */
        public static final int include_other_imes_in_language_switch_list=0x7f0c0046;
        /**  Option summary for including other IMEs in the language switch list [CHAR LIMIT=65] 
         */
        public static final int include_other_imes_in_language_switch_list_summary=0x7f0c0047;
        /**  Action to download and install a dictionary [CHAR_LIMIT=15] 
         */
        public static final int install_dict=0x7f0c010e;
        /**  Description for delay for dismissing a popup on screen: default value of the delay [CHAR LIMIT=15] 
         */
        public static final int key_preview_popup_dismiss_default_delay=0x7f0c004e;
        /**  Option for the dismiss delay of the key popup [CHAR LIMIT=25] 
         */
        public static final int key_preview_popup_dismiss_delay=0x7f0c004c;
        /**  Description for delay for dismissing a popup on keypress: no delay [CHAR LIMIT=15] 
         */
        public static final int key_preview_popup_dismiss_no_delay=0x7f0c004d;
        /**  Title of the preference settings for switching keyboard color scheme [CHAR LIMIT=35] 
         */
        public static final int keyboard_color_scheme=0x7f0c00ca;
        /**  The keyboard color scheme name, Blue [CHAR LIMIT=16] 
         */
        public static final int keyboard_color_scheme_blue=0x7f0c00cc;
        /**  The keyboard color scheme name, White [CHAR LIMIT=16] 
         */
        public static final int keyboard_color_scheme_white=0x7f0c00cb;
        /**  Title of the item to change the keyboard theme [CHAR LIMIT=20]
         */
        public static final int keyboard_layout=0x7f0c00ba;
        /**  Title of the spinner for choosing a keyboard layout of custom style in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int keyboard_layout_set=0x7f0c00d3;
        /**  Description of the keyboard mode for entering dates. 
         */
        public static final int keyboard_mode_date=0x7f0c0090;
        /**  Description of the keyboard mode for entering dates and times. 
         */
        public static final int keyboard_mode_date_time=0x7f0c0091;
        /**  Description of the keyboard mode for entering email addresses. 
         */
        public static final int keyboard_mode_email=0x7f0c0092;
        /**  Description of the keyboard mode for entering text messages. 
         */
        public static final int keyboard_mode_im=0x7f0c0093;
        /**  Description of the keyboard mode for entering numbers. 
         */
        public static final int keyboard_mode_number=0x7f0c0094;
        /**  Description of the keyboard mode for entering phone numbers. 
         */
        public static final int keyboard_mode_phone=0x7f0c0095;
        /**  Description of the keyboard mode for entering generic text. 
         */
        public static final int keyboard_mode_text=0x7f0c0096;
        /**  Description of the keyboard mode for entering times. 
         */
        public static final int keyboard_mode_time=0x7f0c0097;
        /**  Description of the keyboard mode for entering URLs. 
         */
        public static final int keyboard_mode_url=0x7f0c0098;
        /**  Label for soft enter key when it performs DONE action.  Must be short to fit on key. 5 chars or less is preferable.  [CHAR LIMIT=7] 
         */
        public static final int label_done_key=0x7f0c0031;
        /**  Label for soft enter key when it performs GO action.  Must be short to fit on key. 5 chars or less is preferable. [CHAR LIMIT=7] 
         */
        public static final int label_go_key=0x7f0c002e;
        /**  Label for soft enter key when it performs NEXT action.  Must be short to fit on key. 5 chars or less is preferable.  [CHAR LIMIT=7] 
         */
        public static final int label_next_key=0x7f0c002f;
        /**  Label for "Pause" key of phone number keyboard.  Must be short to fit on key. 5 chars or less is preferable.  [CHAR LIMIT=7] 
         */
        public static final int label_pause_key=0x7f0c0033;
        /**  Label for soft enter key when it performs PREVIOUS action.  Must be short to fit on key. 5 chars or less is preferable.  [CHAR LIMIT=7] 
         */
        public static final int label_previous_key=0x7f0c0030;
        /**  Label for soft enter key when it performs SEND action.  Must be short to fit on key. 5 chars or less is preferable.  [CHAR LIMIT=7] 
         */
        public static final int label_send_key=0x7f0c0032;
        /**  Label for "Wait" key of phone number keyboard.  Must be short to fit on key. 5 chars or less is preferable.  [CHAR LIMIT=7]
         */
        public static final int label_wait_key=0x7f0c0034;
        /**  Title for input language selection screen 
         */
        public static final int language_selection_title=0x7f0c00a1;
        /**  Hint to tell when the data was last updated. Usage : "Last updated [date]", may contain a : or so. [CHAR LIMIT=45] 
         */
        public static final int last_update=0x7f0c0109;
        /**  Keyboard theme names 
         */
        public static final int layout_gingerbread=0x7f0c001b;
        public static final int layout_ics=0x7f0c001c;
        public static final int layout_klp=0x7f0c001d;
        public static final int local_metadata_filename=0x7f0c0007;
        /**  String to explain this dictionary is the main dictionary for this language [CHAR_LIMIT=30] 
         */
        public static final int main_dict_description=0x7f0c010c;
        /**  Name of the main dictionary, as opposed to auxiliary dictionaries (medical/entertainment/sports...) 
         */
        public static final int main_dictionary=0x7f0c0059;
        /**  Message to display while the add-on dictionary list is updating [no space constraints on this, there is plenty of space but shorter is better because it's only on the screen for a second] 
         */
        public static final int message_loading=0x7f0c010b;
        /**  Message to display in a dialog box while we are actively updating the word list [CHAR LIMIT=60] 
         */
        public static final int message_updating=0x7f0c010a;
        /**  Category title for misc options  
         */
        public static final int misc_category=0x7f0c0043;
        /**  Message to display in the dictionaries setting screen when we found that no dictionaries are available [CHAR LIMIT=20]
         */
        public static final int no_dictionaries_available=0x7f0c0107;
        /**  Title of the button to postpone enabling a custom input style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int not_now=0x7f0c00d6;
        /**  Option to control whether or not to show a popup with a larger font on each key press. 
         */
        public static final int popup_on_keypress=0x7f0c003f;
        /**  Summary for option to block potentially offensive words to be shown [CHAR_LIMIT=80 (two lines) or 40 (fits on one line, preferable)] 
         */
        public static final int prefs_block_potentially_offensive_summary=0x7f0c0060;
        /**  Option to block potentially offensive words to be shown [CHAR_LIMIT=30] 
         */
        public static final int prefs_block_potentially_offensive_title=0x7f0c005f;
        /**  Title of the settings for boosting personalization dictionary 
         */
        public static final int prefs_boost_personalization_dictionary=0x7f0c00de;
        public static final int prefs_debug_mode=0x7f0c0019;
        /**  Description for enabling to send user statistics for development only diagnostics 
         */
        public static final int prefs_description_log=0x7f0c00b9;
        /**  Preferences item for enabling to send user statistics for development only diagnostics 
         */
        public static final int prefs_enable_log=0x7f0c00b8;
        public static final int prefs_force_non_distinct_multitouch=0x7f0c001a;
        /**  Title of the settings for key long press delay [CHAR LIMIT=35] 
         */
        public static final int prefs_key_longpress_timeout_settings=0x7f0c00d9;
        /**  Title of the settings for keypress sound volume [CHAR LIMIT=35] 
         */
        public static final int prefs_keypress_sound_volume_settings=0x7f0c00db;
        /**  Title of the settings for keypress vibration duration [CHAR LIMIT=35] 
         */
        public static final int prefs_keypress_vibration_duration_settings=0x7f0c00da;
        /**  Title of the settings for reading an external dictionary file 
         */
        public static final int prefs_read_external_dictionary=0x7f0c00dc;
        /**  Option to enable showing suggestions 
         */
        public static final int prefs_show_suggestions=0x7f0c005a;
        /**  Description for show suggestions 
         */
        public static final int prefs_show_suggestions_summary=0x7f0c005b;
        /**   Default value of the visibility of the suggestion strip 
         */
        public static final int prefs_suggestion_visibility_default_value=0x7f0c0010;
        public static final int prefs_suggestion_visibility_hide_name=0x7f0c005e;
        /**   Always hide the suggestion strip 
         */
        public static final int prefs_suggestion_visibility_hide_value=0x7f0c000f;
        public static final int prefs_suggestion_visibility_show_name=0x7f0c005c;
        public static final int prefs_suggestion_visibility_show_only_portrait_name=0x7f0c005d;
        /**   Show the suggestion strip only on portrait mode 
         */
        public static final int prefs_suggestion_visibility_show_only_portrait_value=0x7f0c000e;
        /**   Always show the suggestion strip 
         */
        public static final int prefs_suggestion_visibility_show_value=0x7f0c000d;
        /**  Title of an option for usability study mode 
         */
        public static final int prefs_usability_study_mode=0x7f0c00d8;
        /**  Title of the settings for using only personalization dictionary 
         */
        public static final int prefs_use_only_personalization_dictionary=0x7f0c00dd;
        /**  Title of the confirmation dialog to install a file as an external dictionary [CHAR LIMIT=50] 
         */
        public static final int read_external_dictionary_confirm_install_message=0x7f0c00e1;
        /**  Title of the dialog that selects a file to install as an external dictionary [CHAR LIMIT=50] 
         */
        public static final int read_external_dictionary_multiple_files_title=0x7f0c00e0;
        /**  Message to show when there are no files to install as an external dictionary [CHAR LIMIT=100] 
         */
        public static final int read_external_dictionary_no_files_message=0x7f0c00df;
        /**  Title of the button to remove a custom style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int remove=0x7f0c00d0;
        /**  Account type allowed for inclusion in user-invoked feedback logs [CHAR LIMIT=38] 
         */
        public static final int research_account_type=0x7f0c0028;
        /**  Account domain allowed for inclusion in user-invoked feedback logs [CHAR LIMIT=38] 
         */
        public static final int research_allowed_account_domain=0x7f0c0029;
        /**  Title for dialog option to let users cancel logging and delete log for this session [CHAR LIMIT=35] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_do_not_log_this_session=0x7f0c00a2;
        /**  Title for dialog option to let users reenable logging [CHAR LIMIT=35] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_enable_session_logging=0x7f0c00a3;
        /**  Dialog button choice to cancel sending research feedback [CHAR LIMIT=35] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_cancel=0x7f0c00ac;
        /**  Temporary notification to provide user with instructions about stopping a recording
      - operation[CHAR LIMIT=100] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_demonstration_instructions=0x7f0c00ad;
        /**  Title of dialog box that lets user send feedback for research purposes about the IME [CHAR LIMIT=38] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_dialog_title=0x7f0c002b;
        /**  Message informing the user that the feedback string must not be empty [CHAR LIMIT=100] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_empty_feedback_error_message=0x7f0c002d;
        /**  Hint to user about the text entry field where they should enter research feedback [CHAR LIMIT=40] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_hint=0x7f0c002c;
        /**  Text for checkbox option to include user account name in feedback for research purposes [CHAR LIMIT=50] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_include_account_name_label=0x7f0c00a9;
        /**  Text for checkbox option to include user data in feedback for research purposes [CHAR LIMIT=50] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_include_history_label=0x7f0c00a8;
        /**  Text for checkbox option to include a recording in feedback for research purposes [CHAR LIMIT=50] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_include_recording_label=0x7f0c00aa;
        /**  Menu option that lets user send feedback for research purposes about the IME [CHAR LIMIT=38] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_menu_option=0x7f0c002a;
        /**  Temporary notification of recording failure [CHAR LIMIT=100] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_recording_failure=0x7f0c00af;
        /**  Dialog button choice to send research feedback [CHAR LIMIT=35] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_feedback_send=0x7f0c00ab;
        /**  Name for the research replaying service to be displayed to users.  [CHAR LIMIT=50] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_log_replayer_name=0x7f0c00b4;
        /**  Name for the research uploading service to be displayed to users.  [CHAR LIMIT=50] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_log_uploader_name=0x7f0c00b3;
        public static final int research_logger_upload_url=0x7f0c012c;
        /**  Toast message informing users that logging has been disabled 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_logging_disabled=0x7f0c00b2;
        /**  Toast notification that the system has successfully deleted the log for this session [CHAR LIMIT=35] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_notify_logging_suspended=0x7f0c00a5;
        /**  Toast notification that the system is processing the request to delete the log for this session [CHAR LIMIT=35] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_notify_session_log_deleting=0x7f0c00a4;
        /**  Toast notification that the system has failed to delete the log for this session [CHAR LIMIT=35] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_notify_session_log_not_deleted=0x7f0c00a6;
        /**  Toast notification that the system is enabling logging [CHAR LIMIT=35] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_notify_session_logging_enabled=0x7f0c00a7;
        /**  Toast notification to ask user to quit the research feedback dialog to perform this operation [CHAR LIMIT=100] 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_please_exit_feedback_form=0x7f0c00b0;
        /**  Contents of note explaining what data is collected and how. 
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_splash_content=0x7f0c0027;
        /**  Title of dialog shown at start informing users about contributing research usage data
 TODO: remove translatable=false attribute once text is stable 
         */
        public static final int research_splash_title=0x7f0c00b1;
        /**  Title of the button to save a custom style entry in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int save=0x7f0c00d1;
        /**  Preference for input language selection 
         */
        public static final int select_language=0x7f0c00b5;
        /**  Title of a preference to send feedback. [CHAR LIMIT=30]
         */
        public static final int send_feedback=0x7f0c00ae;
        /**  The text that represents the current settings value is the system default [CHAR LIMIT=25] 
         */
        public static final int settings_system_default=0x7f0c0050;
        public static final int settings_warning_researcher_mode=0x7f0c0026;
        /**  The label of the button that finishes the setup wizard. [CHAR_LIMIT=64] 
         */
        public static final int setup_finish_action=0x7f0c00f6;
        /**  The label of the button that navigates the user to the next step of the setup wizard. [CHAR_LIMIT=64] 
         */
        public static final int setup_next_action=0x7f0c00e7;
        /**  The label of the button that starts the setup wizard. [CHAR_LIMIT=64] 
         */
        public static final int setup_start_action=0x7f0c00e6;
        /**  The label of the button that triggers the Language & input settings in order to enable the keyboard. [CHAR_LIMIT=64] 
         */
        public static final int setup_step1_action=0x7f0c00ed;
        /**  Ordinal number of the 1st step in the setup wizard. [CHAR LIMIT=5] 
         */
        public static final int setup_step1_bullet=0x7f0c00e9;
        /**  Detailed instruction of the already finished 1st step in the setup wizard. [CHAR LIMIT=120] 
         */
        public static final int setup_step1_finished_instruction=0x7f0c00ec;
        /**  Detailed instruction of the 1st step in the setup wizard. [CHAR LIMIT=120] 
         */
        public static final int setup_step1_instruction=0x7f0c00eb;
        /**  Title of the 1st step in the setup wizard. [CHAR LIMIT=64] 
         */
        public static final int setup_step1_title=0x7f0c00ea;
        /**  The label of the button that triggers the choose input method dialog in order to select the keyboard. [CHAR_LIMIT=64] 
         */
        public static final int setup_step2_action=0x7f0c00f1;
        /**  Ordinal number of the 2nd step in the setup wizard. [CHAR LIMIT=5] 
         */
        public static final int setup_step2_bullet=0x7f0c00ee;
        /**  Detailed instruction of the 2nd step in the setup wizard. [CHAR LIMIT=120] 
         */
        public static final int setup_step2_instruction=0x7f0c00f0;
        /**  Title of the 2nd step in the setup wizard. [CHAR LIMIT=64] 
         */
        public static final int setup_step2_title=0x7f0c00ef;
        /**  The label of the button that triggers the screen for configuaring additional languages of the keyboard. [CHAR_LIMIT=64] 
         */
        public static final int setup_step3_action=0x7f0c00f5;
        /**  Ordinal number of the 3rd step in the setup wizard. [CHAR LIMIT=5] 
         */
        public static final int setup_step3_bullet=0x7f0c00f2;
        /**  Detailed instruction of the 3rd step in the setup wizard. [CHAR LIMIT=120] 
         */
        public static final int setup_step3_instruction=0x7f0c00f4;
        /**  Title of the 3rd step in the setup wizard. [CHAR LIMIT=64] 
         */
        public static final int setup_step3_title=0x7f0c00f3;
        /**  Title of the setup wizard. [CHAR LIMT=40] 
         */
        public static final int setup_steps_title=0x7f0c00e8;
        /**  Additional title of the setup wizard welcome screen, just below the setup_welcome_title. [CHAR_LIMIT=64] 
         */
        public static final int setup_welcome_additional_description=0x7f0c00e5;
        /**  Title of the setup wizard welcome screen. [CHAR LIMT=40] 
         */
        public static final int setup_welcome_title=0x7f0c00e4;
        /**  Message in the popup informing the user a dictionary is available for their language, and asking for a decision to download over their mobile data plan or not. The reason we ask for this is, the data is large and may be downloaded over a paid-per-megabyte connection but a dictionary is also essential to type comfortably, so we ask the user. This only pops in selected cases, when there is no dictionary at all currently, and the only available network seems to be metered. The "Language & input" part should be set to the actual name of the option (message ID 5292716747264442359 in the translation console). [CHAR_LIMIT=700] 
         */
        public static final int should_download_over_metered_prompt=0x7f0c0111;
        /**  Option to show language switch key [CHAR LIMIT=30] 
         */
        public static final int show_language_switch_key=0x7f0c0048;
        /**  Option summary for showing language switch key [CHAR LIMIT=65] 
         */
        public static final int show_language_switch_key_summary=0x7f0c0049;
        /**  Option to show setup wizard icon. [CHAR LIMIT=30]
         */
        public static final int show_setup_wizard_icon=0x7f0c00f7;
        /**  Description for the option to show setup wizard application icon of this IME in the laucher. [CHAR_LIMIT=65] 
         */
        public static final int show_setup_wizard_icon_summary=0x7f0c00f8;
        /**  Option to enable sliding key input indicator. The user can see a rubber band-like effect during sliding key input. [CHAR LIMIT=30]
         */
        public static final int sliding_key_input_preview=0x7f0c004a;
        /**  Option summary to enable sliding key input indicator. The user can see a rubber band-like effect during sliding key input. [CHAR LIMIT=66]
         */
        public static final int sliding_key_input_preview_summary=0x7f0c004b;
        /**  Option to play back sound on keypress in soft keyboard 
         */
        public static final int sound_on_keypress=0x7f0c003e;
        /**  Name of Android spell checker service. AOSP(Android Open Source Project) should not be translated.
         This resource should be copied from msgid="511950477199948048" 
         */
        public static final int spell_checker_service_name=0x7f0c0036;
        /**  Threshold of the normalized score of the best suggestion for the spell checker to declare
         a word to be "recommended" 
         */
        public static final int spellchecker_recommended_threshold_value=0x7f0c0001;
        /**  Spoken description to let the user know what auto-correction will be performed when a key is pressed. An auto-correction replaces a single word with one or more words. 
         */
        public static final int spoken_auto_correct=0x7f0c0072;
        /**  Spoken description used during obscured (e.g. password) entry to let the user know that auto-correction will be performed when a key is pressed. 
         */
        public static final int spoken_auto_correct_obscured=0x7f0c0073;
        /**  Spoken description for the currently entered text 
         */
        public static final int spoken_current_text_is=0x7f0c0070;
        /**  Spoken description for the "Next" action keyboard key. 
         */
        public static final int spoken_description_action_next=0x7f0c0085;
        /**  Spoken description for the "Previous" action keyboard key. 
         */
        public static final int spoken_description_action_previous=0x7f0c0086;
        /**  Spoken description for the "Shift" keyboard key when "Caps lock" is on. 
         */
        public static final int spoken_description_caps_lock=0x7f0c0077;
        /**  Spoken description for the "Delete" keyboard key. 
         */
        public static final int spoken_description_delete=0x7f0c0078;
        /**  Spoken description for the "U+2022" (BULLET) keyboard key. 
         */
        public static final int spoken_description_dot=0x7f0c0083;
        /**  Spoken description for the "Switch language" keyboard key. 
         */
        public static final int spoken_description_language_switch=0x7f0c0084;
        /**  Spoken description for the "Mic" keyboard key. 
         */
        public static final int spoken_description_mic=0x7f0c007f;
        /**  Spoken feedback after changing to the alphanumeric keyboard. 
         */
        public static final int spoken_description_mode_alpha=0x7f0c008b;
        /**  Spoken feedback after changing to the phone dialer keyboard. 
         */
        public static final int spoken_description_mode_phone=0x7f0c008c;
        /**  Spoken feedback after changing to the shifted phone dialer (symbols) keyboard. 
         */
        public static final int spoken_description_mode_phone_shift=0x7f0c008d;
        /**  Spoken feedback after changing to the symbols keyboard. 
         */
        public static final int spoken_description_mode_symbol=0x7f0c008a;
        /**  Spoken description for the "Return" keyboard key. 
         */
        public static final int spoken_description_return=0x7f0c0081;
        /**  Spoken description for the "Search" keyboard key. 
         */
        public static final int spoken_description_search=0x7f0c0082;
        /**  Spoken description for the "Settings" keyboard key. 
         */
        public static final int spoken_description_settings=0x7f0c007c;
        /**  Spoken description for the "Shift" keyboard key when "Shift" is off. 
         */
        public static final int spoken_description_shift=0x7f0c0075;
        /**  Spoken description for the "Shift" keyboard key when "Shift" is on. 
         */
        public static final int spoken_description_shift_shifted=0x7f0c0076;
        /**  Spoken feedback after turning "Caps lock" mode on. 
         */
        public static final int spoken_description_shiftmode_locked=0x7f0c0088;
        /**  Spoken feedback after turning "Shift" mode off. 
         */
        public static final int spoken_description_shiftmode_off=0x7f0c0089;
        /**  Spoken feedback after turning "Shift" mode on. 
         */
        public static final int spoken_description_shiftmode_on=0x7f0c0087;
        /**  Spoken description for the "Smiley" keyboard key. 
         */
        public static final int spoken_description_smiley=0x7f0c0080;
        /**  Spoken description for the "Space" keyboard key. 
         */
        public static final int spoken_description_space=0x7f0c007e;
        /**  Spoken description for the "Tab" keyboard key. 
         */
        public static final int spoken_description_tab=0x7f0c007d;
        /**  Spoken description for the "To Alpha" keyboard key. 
         */
        public static final int spoken_description_to_alpha=0x7f0c007a;
        /**  Spoken description for the "To Numbers" keyboard key. 
         */
        public static final int spoken_description_to_numeric=0x7f0c007b;
        /**  Spoken description for the "To Symbol" keyboard key. 
         */
        public static final int spoken_description_to_symbol=0x7f0c0079;
        /**  Spoken description for unknown keyboard keys. 
         */
        public static final int spoken_description_unknown=0x7f0c0074;
        /**  Spoken description when there is no text entered 
         */
        public static final int spoken_no_text_entered=0x7f0c0071;
        /**  Spoken description to let the user know that when typing in a password, they can plug in a headset in to hear spoken descriptions of the keys they type. [CHAR LIMIT=NONE] 
         */
        public static final int spoken_use_headphones=0x7f0c006f;
        /**  Description for Bulgarian (BDS) subtype. 
         */
        public static final int subtype_bulgarian_bds=0x7f0c0025;
        /**  Description for Emoji keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_emoji=0x7f0c00c9;
        /**  Description for English (United Kingdom) keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_en_GB=0x7f0c00bb;
        /**  Description for English (United States) keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_en_US=0x7f0c00bc;
        /**  Description for Spanish (United States) keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_es_US=0x7f0c00bd;
        /**  Generic subtype label 
         */
        public static final int subtype_generic=0x7f0c001e;
        public static final int subtype_generic_azerty=0x7f0c0021;
        public static final int subtype_generic_colemak=0x7f0c0023;
        public static final int subtype_generic_dvorak=0x7f0c0022;
        public static final int subtype_generic_pcqwerty=0x7f0c0024;
        /**  Description for generic subtype that has predefined layout.
         The string resource name must be "subtype_generic_<layout name>".
         The string resource with "No language" also must be added to strings.xml and the resource
         name must be "subtype_no_language_<layout name>" 
         */
        public static final int subtype_generic_qwerty=0x7f0c001f;
        public static final int subtype_generic_qwertz=0x7f0c0020;
        /**  Title of the spinner for choosing a language of custom style in the settings dialog [CHAR LIMIT=15] 
         */
        public static final int subtype_locale=0x7f0c00d2;
        /**  Description for Nepali (Traditional) keyboard subtype [CHAR LIMIT=25] 
         */
        public static final int subtype_nepali_traditional=0x7f0c00c1;
        /**  TODO: Uncomment once we can handle IETF language tag with script name specified.
         Description for Serbian Cyrillic keyboard subtype [CHAR LIMIT=25]
    <string name="subtype_serbian_cyrillic">Serbian (Cyrillic)</string>
         Description for Serbian Latin keyboard subtype [CHAR LIMIT=25]
    <string name="subtype_serbian_latin">Serbian (Latin)</string>
         Description for Serbian Latin keyboard subtype with explicit keyboard layout [CHAR LIMIT=25]
         This should be identical to subtype_serbian_latin aside from the trailing (%s).
    <string name="subtype_with_layout_sr-Latn">Serbian (Latin) (<xliff:g id="layout">%s</xliff:g>)</string>
    
 This string is displayed in a language list that allows to choose a language for
suggestions in a software keyboard. This setting won't give suggestions in any particular
language, hence "No language".
As for the "alphabet" mention, it refers specifically to the Latin alphabet, as opposed to
Cyrillic, Arabic, Hebrew or other scripts. This keyboard offers no suggestions, but it will
be a QWERTY, or AZERTY, or any other disposition that only offers Latin characters, so
you wouldn't be able to type, say, Arabic on it. Please translate it in a way that "alphabet"
would be understood to mean specifically the Latin alphabet, rather than any other
alphabet. [CHAR LIMIT=29] 
         */
        public static final int subtype_no_language=0x7f0c00c2;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the Latin alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the Latin alphabet, the
user still needs a keyboard that can input Latin characters for passwords or login names for
example, and a way to switch to this Latin alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter Latin characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the Latin alphabet. This keyboard is laid out in the AZERTY
disposition rather than other common dispositions for Latin languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_azerty=0x7f0c00c5;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the Latin alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the Latin alphabet, the
user still needs a keyboard that can input Latin characters for passwords or login names for
example, and a way to switch to this Latin alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter Latin characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the Latin alphabet. This keyboard is laid out in the Colemak
disposition rather than other common dispositions for Latin languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_colemak=0x7f0c00c7;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the Latin alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the Latin alphabet, the
user still needs a keyboard that can input Latin characters for passwords or login names for
example, and a way to switch to this Latin alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter Latin characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the Latin alphabet. This keyboard is laid out in the Dvorak
disposition rather than other common dispositions for Latin languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_dvorak=0x7f0c00c6;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the Latin alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the Latin alphabet, the
user still needs a keyboard that can input Latin characters for passwords or login names for
example, and a way to switch to this Latin alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter Latin characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the Latin alphabet. This keyboard is laid out in the QWERTY PC
disposition that offers additional keys, but smaller keys compared to other common dispositions for
mobile devices. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_pcqwerty=0x7f0c00c8;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the Latin alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the Latin alphabet, the
user still needs a keyboard that can input Latin characters for passwords or login names for
example, and a way to switch to this Latin alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter Latin characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the Latin alphabet. This keyboard is laid out in the QWERTY
disposition rather than other common dispositions for Latin languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_qwerty=0x7f0c00c3;
        /**  This string is displayed in the description for a keyboard type. It refers specifically to
the Latin alphabet, as opposed to Cyrillic, Arabic, Hebrew or other scripts.
When the device is configured to use a language using a script other than the Latin alphabet, the
user still needs a keyboard that can input Latin characters for passwords or login names for
example, and a way to switch to this Latin alphabet keyboard. This string is the description for
this keyboard, so users of other scripts should understand when they read this that it represents a
keyboard that is meant for them to be able to enter Latin characters as opposed to the script they
are used to. This keyboard does not provide a dictionary, and it is not tied to any specific
language among those that use the Latin alphabet. This keyboard is laid out in the QWERTZ
disposition rather than other common dispositions for Latin languages. [CHAR LIMIT=25] 
         */
        public static final int subtype_no_language_qwertz=0x7f0c00c4;
        /**  Description for English (United Kingdom) keyboard subtype with explicit keyboard layout [CHAR LIMIT=25]
         This should be identical to subtype_en_GB aside from the trailing (%s). 
         */
        public static final int subtype_with_layout_en_GB=0x7f0c00be;
        /**  Description for English (United States) keyboard subtype with explicit keyboard layout [CHAR LIMIT=25]
         This should be identical to subtype_en_US aside from the trailing (%s). 
         */
        public static final int subtype_with_layout_en_US=0x7f0c00bf;
        /**  Description for Spanish (United States) keyboard subtype with explicit keyboard layout [CHAR LIMIT=25]
         This should be identical to subtype_es_US aside from the trailing (%s). 
         */
        public static final int subtype_with_layout_es_US=0x7f0c00c0;
        /**  TODO: these settings depend on the language. They should be put either in the dictionary
         header, or in the subtype maybe? 
 Symbols that are suggested between words 
 The all letters need to be mirrored are found at
         http://www.unicode.org/Public/6.1.0/ucd/BidiMirroring.txt 
 Symbols that are suggested between words 
 The all letters need to be mirrored are found at
         http://www.unicode.org/Public/6.1.0/ucd/BidiMirroring.txt 
 Symbols that are suggested between words 
 The all letters need to be mirrored are found at
         http://www.unicode.org/Public/6.1.0/ucd/BidiMirroring.txt 
 Symbols that are suggested between words 
         */
        public static final int suggested_punctuations=0x7f0c0008;
        /**  Symbols that are normally followed by a space (used to add an auto-space after these) 
 Symbols that are normally followed by a space (used to add an auto-space after these) 
 Symbols that are normally followed by a space (used to add an auto-space after these) 
 Same list as in English, but add armenian period and comma: 
 U+055D: "՝" ARMENIAN COMMA 
 U+0589: "։" ARMENIAN FULL STOP 
 Symbols that are normally followed by a space (used to add an auto-space after these) 
         */
        public static final int symbols_followed_by_space=0x7f0c000a;
        /**  Symbols that are normally preceded by a space (used to add an auto-space before these) 
 Symbols that are normally preceded by a space (used to add an auto-space before these) 
 Symbols that are normally preceded by a space (used to add an auto-space before these) 
 This is similar to French with the exception of "!" "?" and ";" which do not take a space before in Canadian French. Note that ":" does take a space before according to Canadian rules. 
         */
        public static final int symbols_preceded_by_space=0x7f0c0009;
        /**  Word connectors 
 Word connectors 
 Word connectors 
         */
        public static final int symbols_word_connectors=0x7f0c000c;
        /**  Symbols that separate words 
 Don't remove the enclosing double quotes, they protect whitespace (not just U+0020) 
 Symbols that separate words 
 Don't remove the enclosing double quotes, they protect whitespace (not just U+0020) 
 Symbols that separate words 
 Don't remove the enclosing double quotes, they protect whitespace (not just U+0020) 
 Symbols that separate words. Adding armenian period and comma. 
 Don't remove the enclosing double quotes, they protect whitespace (not just U+0020) 
         */
        public static final int symbols_word_separators=0x7f0c000b;
        /**  The text of the toast warning a download is starting automatically to enable suggestions for the selected language [CHAR LIMIT=100] 
         */
        public static final int toast_downloading_suggestions=0x7f0c0116;
        /**  Option name for enabling or disabling the use of names of people in Contacts for suggestion and correction [CHAR LIMIT=25] 
         */
        public static final int use_contacts_dict=0x7f0c0051;
        /**  Description for option enabling or disabling the use of names of people in Contacts for suggestion and correction [CHAR LIMIT=65] 
         */
        public static final int use_contacts_dict_summary=0x7f0c0052;
        /**  Description for the spell checker option to turn on/off contact names lookup. [CHAR LIMIT=65] 
         */
        public static final int use_contacts_for_spellchecking_option_summary=0x7f0c003c;
        /**  Title for the spell checker option to turn on/off contact names lookup [CHAR LIMIT=25] 
         */
        public static final int use_contacts_for_spellchecking_option_title=0x7f0c003b;
        /**  Option name for enabling or disabling the double-space period feature that lets double tap on spacebar insert a period followed by a space [CHAR LIMIT=30] 
         */
        public static final int use_double_space_period=0x7f0c0053;
        /**  Description for option enabling or disabling the double-space period feature that lets double tap on spacebar insert a period followed by a space [CHAR LIMIT=65] 
         */
        public static final int use_double_space_period_summary=0x7f0c0054;
        /**  User dictionary settings. Index of the user dictionary [CHAR LIMIT=30]
         This resource is copied from packages/apps/Settings/res/values/strings.xml 
 This resource is corresponding to msgid="5433275485499039199" 
         */
        public static final int user_dict_fast_scroll_alphabet=0x7f0c012b;
        /**  User dictionary settings. Text on the dialog button to confirm adding a word. [CHAR LIMIT=15] 
 This resource is corresponding to msgid="6225823625332416144" 
         */
        public static final int user_dict_settings_add_dialog_confirm=0x7f0c011e;
        /**  User dictionary settings. Text on the dialog button mask advanced options. [CHAR LIMIT=15] 
 This resource is corresponding to msgid="2441785268726036101" 
         */
        public static final int user_dict_settings_add_dialog_less_options=0x7f0c011d;
        /**  User dictionary settings. Text on the dialog button to pop more options for adding a word. [CHAR LIMIT=16] 
 This resource is corresponding to msgid="8848798370746019825" 
         */
        public static final int user_dict_settings_add_dialog_more_options=0x7f0c011c;
        /**  User dictionary settings. The title of the dialog to add a new word to the user dictionary. [CHAR LIMIT=25] 
 This resource is corresponding to msgid="4702613990174126482" 
         */
        public static final int user_dict_settings_add_dialog_title=0x7f0c011a;
        /**  User dictionary settings. Label to put before the language field. [CHAR LIMIT=20] 
 This resource is corresponding to msgid="5696358317061318532" 
         */
        public static final int user_dict_settings_add_locale_option_name=0x7f0c0121;
        /**  User dictionary settings. The title of the menu item to add a new word to the user dictionary. 
 This resource is corresponding to  msgid="4056762757149923551" 
         */
        public static final int user_dict_settings_add_menu_title=0x7f0c0119;
        /**  User dictionary settings. The title of the screen to add/edit a new word to the user dictionary; it describes the phrase that will be added to the user dictionary. [CHAR LIMIT=25] 
 This resource is corresponding to msgid="742580720124344291" 
         */
        public static final int user_dict_settings_add_screen_title=0x7f0c011b;
        /**  User dictionary settings. Hint for the text field to type the optional shortcut to add to the user dictionary. [CHAR LIMIT=35] 
 This resource is corresponding to msgid="7333763456561873445" 
         */
        public static final int user_dict_settings_add_shortcut_hint=0x7f0c0123;
        /**  User dictionary settings. Label to put before the shortcut field (once a shortcut is registered, the user can type the shortcut and get the word it points to in the suggestions). [CHAR LIMIT=20] 
 This resource is corresponding to msgid="660089258866063925" 
         */
        public static final int user_dict_settings_add_shortcut_option_name=0x7f0c0120;
        /**  User dictionary settings. Hint for the text field to type the word to add to the user dictionary. [CHAR LIMIT=35] 
 This resource is corresponding to msgid="5725254076556821247" 
         */
        public static final int user_dict_settings_add_word_hint=0x7f0c0122;
        /**  User dictionary settings. Label to put before the word field (that's the word that will actually be added to the user dictionary when OK is pressed). [CHAR LIMIT=20] 
 This resource is corresponding to msgid="7868879174905963135" 
         */
        public static final int user_dict_settings_add_word_option_name=0x7f0c011f;
        /**  User dictionary settings. The list item to choose to insert a word into the user dictionary for all languages 
 This resource is corresponding to msgid="6742000040975959247" 
         */
        public static final int user_dict_settings_all_languages=0x7f0c0128;
        /**  User dictionary settings. The title of the context menu item to delete the current word 
 This resource is corresponding to msgid="9140703913776549054" 
         */
        public static final int user_dict_settings_context_menu_delete_title=0x7f0c0126;
        /**  User dictionary settings. The title of the context menu item to edit the current word 
 This resource is corresponding to msgid="2210564879320004837" 
         */
        public static final int user_dict_settings_context_menu_edit_title=0x7f0c0125;
        /**  User dictionary settings. Label to delete an entry in the user dictionary [CHAR LIMIT=30]
         This resource is copied from packages/apps/Settings/res/values/strings.xml 
 This resource is corresponding to msgid="4219243412325163003" 
         */
        public static final int user_dict_settings_delete=0x7f0c012a;
        /**  User dictionary settings. The title of the dialog to edit an existing word in the user dictionary. 
 This resource is corresponding to msgid="8967476444840548674" 
         */
        public static final int user_dict_settings_edit_dialog_title=0x7f0c0124;
        /**  User dictionary settings. The text to show when there are no user-defined words in the dictionary  [CHAR LIMIT=200] 
 This resource is corresponding to msgid="8165273379942105271" 
         */
        public static final int user_dict_settings_empty_text=0x7f0c0127;
        /**  User dictionary settings. The text to show for the option that shows the entire list of supported locales to choose one [CHAR LIMIT=30] 
 This resource is corresponding to msgid="7316375944684977910" 
         */
        public static final int user_dict_settings_more_languages=0x7f0c0129;
        /**  User dictionary settings 
 User dictionary settings.  The summary of the listem item to go into the User dictionary settings screen. 
         */
        public static final int user_dict_settings_summary=0x7f0c0118;
        /**  Name of the user dictionaries settings category 
         */
        public static final int user_dictionaries=0x7f0c0100;
        /**  Version text [CHAR LIMIT=30]
         */
        public static final int version_text=0x7f0c0117;
        /**  Option to provide vibrate/haptic feedback on keypress 
         */
        public static final int vibrate_on_keypress=0x7f0c003d;
        /**  Preferences item for enabling speech input 
         */
        public static final int voice_input=0x7f0c0099;
        /**  Voice Input modes 
 On settings screen, voice input pop-up menu option to show voice key on main keyboard [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_main_keyboard=0x7f0c009a;
        /**  On settings screen, voice input pop-up menu option to never show voice key [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_off=0x7f0c009c;
        /**  Voice Input modes summary 
 On settings screen, voice input pop-up menu summary text to show voice key on main keyboard [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_summary_main_keyboard=0x7f0c009d;
        /**  On settings screen, voice input pop-up menu summary text to never show voice key [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_summary_off=0x7f0c009f;
        /**  On settings screen, voice input pop-up menu summary text to show voice key on symbols keyboard [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_summary_symbols_keyboard=0x7f0c009e;
        /**  On settings screen, voice input pop-up menu option to show voice key on symbols keyboard [CHAR LIMIT=20] 
         */
        public static final int voice_input_modes_symbols_keyboard=0x7f0c009b;
        public static final int voice_mode_main=0x7f0c0015;
        public static final int voice_mode_off=0x7f0c0017;
        public static final int voice_mode_symbols=0x7f0c0016;
    }
    public static final class style {
        /**  Though {@link EmojiPalettesView} doesn't extend {@link KeyboardView}, some views inside it,
         for instance delete button, need themed {@link KeyboardView} attributes. 
         */
        public static final int EmojiPalettesView=0x7f100011;
        /**  Though {@link EmojiPalettesView} doesn't extend {@link KeyboardView}, some views inside it,
         for instance delete button, need themed {@link KeyboardView} attributes. 
         */
        public static final int EmojiPalettesView_GB=0x7f10001d;
        /**  Though {@link EmojiPalettesView} doesn't extend {@link KeyboardView}, some views inside it,
         for instance delete button, need themed {@link KeyboardView} attributes. 
         */
        public static final int EmojiPalettesView_ICS=0x7f100027;
        /**  Though {@link EmojiPalettesView} doesn't extend {@link KeyboardView}, some views inside it,
         for instance delete button, need themed {@link KeyboardView} attributes. 
         */
        public static final int EmojiPalettesView_KLP=0x7f100031;
        /**  Default theme values 
         */
        public static final int Keyboard=0x7f10000e;
        public static final int Keyboard_GB=0x7f10001a;
        public static final int Keyboard_ICS=0x7f100024;
        public static final int Keyboard_KLP=0x7f10002e;
        public static final int KeyboardIcons=0x7f10000d;
        public static final int KeyboardIcons_GB=0x7f100019;
        public static final int KeyboardIcons_Holo=0x7f100000;
        public static final int KeyboardTheme_GB=0x7f100018;
        public static final int KeyboardTheme_ICS=0x7f100023;
        public static final int KeyboardTheme_KLP=0x7f10002d;
        public static final int KeyboardView=0x7f10000f;
        public static final int KeyboardView_GB=0x7f10001b;
        public static final int KeyboardView_ICS=0x7f100025;
        public static final int KeyboardView_KLP=0x7f10002f;
        public static final int MainKeyboardView=0x7f100010;
        public static final int MainKeyboardView_GB=0x7f10001c;
        public static final int MainKeyboardView_ICS=0x7f100026;
        public static final int MainKeyboardView_KLP=0x7f100030;
        public static final int MoreKeysKeyboard=0x7f100012;
        public static final int MoreKeysKeyboard_GB=0x7f10001e;
        public static final int MoreKeysKeyboard_ICS=0x7f100028;
        public static final int MoreKeysKeyboard_KLP=0x7f100032;
        public static final int MoreKeysKeyboardAnimation=0x7f100017;
        public static final int MoreKeysKeyboardContainer=0x7f100014;
        public static final int MoreKeysKeyboardContainer_GB=0x7f100020;
        public static final int MoreKeysKeyboardContainer_ICS=0x7f10002a;
        public static final int MoreKeysKeyboardContainer_KLP=0x7f100034;
        public static final int MoreKeysKeyboardView=0x7f100013;
        public static final int MoreKeysKeyboardView_GB=0x7f10001f;
        public static final int MoreKeysKeyboardView_ICS=0x7f100029;
        public static final int MoreKeysKeyboardView_KLP=0x7f100033;
        public static final int SuggestionStripView=0x7f100015;
        public static final int SuggestionStripView_GB=0x7f100021;
        public static final int SuggestionStripView_ICS=0x7f10002b;
        public static final int SuggestionStripView_KLP=0x7f100035;
        public static final int SuggestionWord=0x7f100016;
        public static final int SuggestionWord_GB=0x7f100022;
        public static final int SuggestionWord_ICS=0x7f10002c;
        public static final int SuggestionWord_KLP=0x7f100036;
        public static final int setupStepActionLabelStyle=0x7f10000c;
        public static final int setupStepActionLabelStyleCommon=0x7f100009;
        public static final int setupStepBaseStyle=0x7f100005;
        public static final int setupStepBulletStyle=0x7f100004;
        public static final int setupStepIndicatorStyle=0x7f100003;
        public static final int setupStepInstructionStyle=0x7f100007;
        public static final int setupStepStartActionLabelStyleCommon=0x7f10000a;
        public static final int setupStepStartIndicatorStyle=0x7f100008;
        public static final int setupStepTitleStyle=0x7f100006;
        public static final int setupTitleStyle=0x7f10000b;
        public static final int setupTitleStyleCommon=0x7f100001;
        public static final int setupWelcomeDescritpionStyle=0x7f100002;
    }
    public static final class xml {
        public static final int additional_subtype_settings=0x7f060000;
        public static final int dictionary_settings=0x7f060001;
        public static final int kbd_arabic=0x7f060002;
        public static final int kbd_armenian_phonetic=0x7f060003;
        public static final int kbd_azerty=0x7f060004;
        public static final int kbd_bulgarian=0x7f060005;
        public static final int kbd_bulgarian_bds=0x7f060006;
        public static final int kbd_colemak=0x7f060007;
        public static final int kbd_dvorak=0x7f060008;
        public static final int kbd_east_slavic=0x7f060009;
        public static final int kbd_emoji_category1=0x7f06000a;
        public static final int kbd_emoji_category2=0x7f06000b;
        public static final int kbd_emoji_category3=0x7f06000c;
        public static final int kbd_emoji_category4=0x7f06000d;
        public static final int kbd_emoji_category5=0x7f06000e;
        public static final int kbd_emoji_category6=0x7f06000f;
        public static final int kbd_emoji_recents=0x7f060010;
        public static final int kbd_farsi=0x7f060011;
        public static final int kbd_georgian=0x7f060012;
        public static final int kbd_greek=0x7f060013;
        public static final int kbd_hebrew=0x7f060014;
        public static final int kbd_hindi=0x7f060015;
        public static final int kbd_khmer=0x7f060016;
        public static final int kbd_lao=0x7f060017;
        public static final int kbd_mongolian=0x7f060018;
        public static final int kbd_more_keys_keyboard_template=0x7f060019;
        public static final int kbd_nepali_romanized=0x7f06001a;
        public static final int kbd_nepali_traditional=0x7f06001b;
        public static final int kbd_nordic=0x7f06001c;
        public static final int kbd_number=0x7f06001d;
        public static final int kbd_pcqwerty=0x7f06001e;
        public static final int kbd_phone=0x7f06001f;
        public static final int kbd_phone_symbols=0x7f060020;
        public static final int kbd_qwerty=0x7f060021;
        public static final int kbd_qwertz=0x7f060022;
        public static final int kbd_south_slavic=0x7f060023;
        public static final int kbd_spanish=0x7f060024;
        public static final int kbd_suggestions_pane_template=0x7f060025;
        public static final int kbd_symbols=0x7f060026;
        public static final int kbd_symbols_shift=0x7f060027;
        public static final int kbd_thai=0x7f060028;
        public static final int key_armenian_sha=0x7f060029;
        public static final int key_armenian_xeh=0x7f06002a;
        public static final int key_azerty3_right=0x7f06002b;
        public static final int key_colemak_colon=0x7f06002c;
        public static final int key_devanagari_sign_anusvara=0x7f06002d;
        public static final int key_devanagari_sign_candrabindu=0x7f06002e;
        public static final int key_devanagari_sign_nukta=0x7f06002f;
        public static final int key_devanagari_vowel_sign_candra_o=0x7f060030;
        public static final int key_devanagari_vowel_sign_vocalic_r=0x7f060031;
        public static final int key_f1=0x7f060032;
        public static final int key_f2=0x7f060033;
        public static final int key_greek_semicolon=0x7f060034;
        public static final int key_nepali_traditional_period=0x7f060035;
        public static final int key_question_exclamation=0x7f060036;
        public static final int key_shortcut=0x7f060037;
        public static final int key_space_3kw=0x7f060038;
        public static final int key_space_5kw=0x7f060039;
        public static final int key_space_symbols=0x7f06003a;
        public static final int key_styles_common=0x7f06003b;
        public static final int key_styles_currency=0x7f06003c;
        public static final int key_styles_currency_dollar=0x7f06003d;
        public static final int key_styles_currency_euro=0x7f06003e;
        public static final int key_styles_enter=0x7f06003f;
        public static final int key_styles_f1=0x7f060040;
        public static final int key_styles_number=0x7f060041;
        public static final int key_symbols_period=0x7f060042;
        public static final int key_thai_kho_khuat=0x7f060043;
        public static final int keyboard_layout_set_arabic=0x7f060044;
        public static final int keyboard_layout_set_armenian_phonetic=0x7f060045;
        public static final int keyboard_layout_set_azerty=0x7f060046;
        public static final int keyboard_layout_set_bulgarian=0x7f060047;
        public static final int keyboard_layout_set_bulgarian_bds=0x7f060048;
        public static final int keyboard_layout_set_colemak=0x7f060049;
        public static final int keyboard_layout_set_dvorak=0x7f06004a;
        public static final int keyboard_layout_set_east_slavic=0x7f06004b;
        public static final int keyboard_layout_set_emoji=0x7f06004c;
        public static final int keyboard_layout_set_farsi=0x7f06004d;
        public static final int keyboard_layout_set_georgian=0x7f06004e;
        public static final int keyboard_layout_set_greek=0x7f06004f;
        public static final int keyboard_layout_set_hebrew=0x7f060050;
        public static final int keyboard_layout_set_hindi=0x7f060051;
        public static final int keyboard_layout_set_khmer=0x7f060052;
        public static final int keyboard_layout_set_lao=0x7f060053;
        public static final int keyboard_layout_set_mongolian=0x7f060054;
        public static final int keyboard_layout_set_nepali_romanized=0x7f060055;
        public static final int keyboard_layout_set_nepali_traditional=0x7f060056;
        public static final int keyboard_layout_set_nordic=0x7f060057;
        public static final int keyboard_layout_set_pcqwerty=0x7f060058;
        public static final int keyboard_layout_set_qwerty=0x7f060059;
        public static final int keyboard_layout_set_qwertz=0x7f06005a;
        public static final int keyboard_layout_set_south_slavic=0x7f06005b;
        public static final int keyboard_layout_set_spanish=0x7f06005c;
        public static final int keyboard_layout_set_thai=0x7f06005d;
        public static final int keys_arabic3_left=0x7f06005e;
        public static final int keys_comma_period=0x7f06005f;
        public static final int keys_curly_brackets=0x7f060060;
        public static final int keys_dvorak_123=0x7f060061;
        public static final int keys_exclamation_question=0x7f060062;
        public static final int keys_farsi3_right=0x7f060063;
        public static final int keys_less_greater=0x7f060064;
        public static final int keys_parentheses=0x7f060065;
        public static final int keys_pcqwerty2_right3=0x7f060066;
        public static final int keys_pcqwerty3_right2=0x7f060067;
        public static final int keys_pcqwerty4_right3=0x7f060068;
        public static final int keys_square_brackets=0x7f060069;
        public static final int keystyle_devanagari_sign_virama=0x7f06006a;
        public static final int keystyle_devanagari_sign_visarga=0x7f06006b;
        public static final int keystyle_devanagari_vowel_sign_aa=0x7f06006c;
        public static final int keystyle_devanagari_vowel_sign_ai=0x7f06006d;
        public static final int keystyle_devanagari_vowel_sign_au=0x7f06006e;
        public static final int keystyle_devanagari_vowel_sign_e=0x7f06006f;
        public static final int keystyle_devanagari_vowel_sign_i=0x7f060070;
        public static final int keystyle_devanagari_vowel_sign_ii=0x7f060071;
        public static final int keystyle_devanagari_vowel_sign_o=0x7f060072;
        public static final int keystyle_devanagari_vowel_sign_u=0x7f060073;
        public static final int keystyle_devanagari_vowel_sign_uu=0x7f060074;
        public static final int method=0x7f060075;
        public static final int prefs=0x7f060076;
        public static final int prefs_for_debug=0x7f060077;
        public static final int row_dvorak4=0x7f060078;
        public static final int row_pcqwerty5=0x7f060079;
        public static final int row_qwerty4=0x7f06007a;
        public static final int row_symbols4=0x7f06007b;
        public static final int row_symbols_shift4=0x7f06007c;
        public static final int rowkeys_arabic1=0x7f06007d;
        public static final int rowkeys_arabic2=0x7f06007e;
        public static final int rowkeys_arabic3=0x7f06007f;
        public static final int rowkeys_armenian_phonetic1=0x7f060080;
        public static final int rowkeys_armenian_phonetic2=0x7f060081;
        public static final int rowkeys_armenian_phonetic3=0x7f060082;
        public static final int rowkeys_armenian_phonetic4=0x7f060083;
        public static final int rowkeys_azerty1=0x7f060084;
        public static final int rowkeys_azerty2=0x7f060085;
        public static final int rowkeys_azerty3=0x7f060086;
        public static final int rowkeys_bulgarian1=0x7f060087;
        public static final int rowkeys_bulgarian2=0x7f060088;
        public static final int rowkeys_bulgarian3=0x7f060089;
        public static final int rowkeys_bulgarian_bds1=0x7f06008a;
        public static final int rowkeys_bulgarian_bds2=0x7f06008b;
        public static final int rowkeys_bulgarian_bds3=0x7f06008c;
        public static final int rowkeys_colemak1=0x7f06008d;
        public static final int rowkeys_colemak2=0x7f06008e;
        public static final int rowkeys_colemak3=0x7f06008f;
        public static final int rowkeys_dvorak1=0x7f060090;
        public static final int rowkeys_dvorak2=0x7f060091;
        public static final int rowkeys_dvorak3=0x7f060092;
        public static final int rowkeys_east_slavic1=0x7f060093;
        public static final int rowkeys_east_slavic2=0x7f060094;
        public static final int rowkeys_east_slavic3=0x7f060095;
        public static final int rowkeys_farsi1=0x7f060096;
        public static final int rowkeys_farsi2=0x7f060097;
        public static final int rowkeys_farsi3=0x7f060098;
        public static final int rowkeys_georgian1=0x7f060099;
        public static final int rowkeys_georgian2=0x7f06009a;
        public static final int rowkeys_georgian3=0x7f06009b;
        public static final int rowkeys_greek1=0x7f06009c;
        public static final int rowkeys_greek2=0x7f06009d;
        public static final int rowkeys_greek3=0x7f06009e;
        public static final int rowkeys_hebrew1=0x7f06009f;
        public static final int rowkeys_hebrew2=0x7f0600a0;
        public static final int rowkeys_hebrew3=0x7f0600a1;
        public static final int rowkeys_hindi1=0x7f0600a2;
        public static final int rowkeys_hindi2=0x7f0600a3;
        public static final int rowkeys_hindi3=0x7f0600a4;
        public static final int rowkeys_khmer1=0x7f0600a5;
        public static final int rowkeys_khmer2=0x7f0600a6;
        public static final int rowkeys_khmer3=0x7f0600a7;
        public static final int rowkeys_khmer4=0x7f0600a8;
        public static final int rowkeys_lao1=0x7f0600a9;
        public static final int rowkeys_lao2=0x7f0600aa;
        public static final int rowkeys_lao3=0x7f0600ab;
        public static final int rowkeys_lao4=0x7f0600ac;
        public static final int rowkeys_mongolian1=0x7f0600ad;
        public static final int rowkeys_mongolian2=0x7f0600ae;
        public static final int rowkeys_mongolian3=0x7f0600af;
        public static final int rowkeys_nepali_romanized1=0x7f0600b0;
        public static final int rowkeys_nepali_romanized2=0x7f0600b1;
        public static final int rowkeys_nepali_romanized3=0x7f0600b2;
        public static final int rowkeys_nepali_traditional1=0x7f0600b3;
        public static final int rowkeys_nepali_traditional2=0x7f0600b4;
        public static final int rowkeys_nepali_traditional3_left6=0x7f0600b5;
        public static final int rowkeys_nepali_traditional3_right3=0x7f0600b6;
        public static final int rowkeys_nepali_traditional3_right5=0x7f0600b7;
        public static final int rowkeys_nordic1=0x7f0600b8;
        public static final int rowkeys_nordic2=0x7f0600b9;
        public static final int rowkeys_pcqwerty1=0x7f0600ba;
        public static final int rowkeys_pcqwerty1_shift=0x7f0600bb;
        public static final int rowkeys_pcqwerty2=0x7f0600bc;
        public static final int rowkeys_pcqwerty3=0x7f0600bd;
        public static final int rowkeys_pcqwerty4=0x7f0600be;
        public static final int rowkeys_qwerty1=0x7f0600bf;
        public static final int rowkeys_qwerty2=0x7f0600c0;
        public static final int rowkeys_qwerty3=0x7f0600c1;
        public static final int rowkeys_qwertz1=0x7f0600c2;
        public static final int rowkeys_qwertz3=0x7f0600c3;
        public static final int rowkeys_south_slavic1=0x7f0600c4;
        public static final int rowkeys_south_slavic2=0x7f0600c5;
        public static final int rowkeys_south_slavic3=0x7f0600c6;
        public static final int rowkeys_spanish2=0x7f0600c7;
        public static final int rowkeys_symbols1=0x7f0600c8;
        public static final int rowkeys_symbols2=0x7f0600c9;
        public static final int rowkeys_symbols3=0x7f0600ca;
        public static final int rowkeys_symbols_shift1=0x7f0600cb;
        public static final int rowkeys_symbols_shift2=0x7f0600cc;
        public static final int rowkeys_symbols_shift3=0x7f0600cd;
        public static final int rowkeys_thai1=0x7f0600ce;
        public static final int rowkeys_thai2=0x7f0600cf;
        public static final int rowkeys_thai3=0x7f0600d0;
        public static final int rowkeys_thai4=0x7f0600d1;
        public static final int rows_arabic=0x7f0600d2;
        public static final int rows_armenian_phonetic=0x7f0600d3;
        public static final int rows_azerty=0x7f0600d4;
        public static final int rows_bulgarian=0x7f0600d5;
        public static final int rows_bulgarian_bds=0x7f0600d6;
        public static final int rows_colemak=0x7f0600d7;
        public static final int rows_dvorak=0x7f0600d8;
        public static final int rows_east_slavic=0x7f0600d9;
        public static final int rows_farsi=0x7f0600da;
        public static final int rows_georgian=0x7f0600db;
        public static final int rows_greek=0x7f0600dc;
        public static final int rows_hebrew=0x7f0600dd;
        public static final int rows_hindi=0x7f0600de;
        public static final int rows_khmer=0x7f0600df;
        public static final int rows_lao=0x7f0600e0;
        public static final int rows_mongolian=0x7f0600e1;
        public static final int rows_nepali_romanized=0x7f0600e2;
        public static final int rows_nepali_traditional=0x7f0600e3;
        public static final int rows_nordic=0x7f0600e4;
        public static final int rows_number=0x7f0600e5;
        public static final int rows_number_normal=0x7f0600e6;
        public static final int rows_number_password=0x7f0600e7;
        public static final int rows_pcqwerty=0x7f0600e8;
        public static final int rows_phone=0x7f0600e9;
        public static final int rows_phone_symbols=0x7f0600ea;
        public static final int rows_qwerty=0x7f0600eb;
        public static final int rows_qwertz=0x7f0600ec;
        public static final int rows_south_slavic=0x7f0600ed;
        public static final int rows_spanish=0x7f0600ee;
        public static final int rows_symbols=0x7f0600ef;
        public static final int rows_symbols_shift=0x7f0600f0;
        public static final int rows_thai=0x7f0600f1;
        public static final int spell_checker_settings=0x7f0600f2;
        public static final int spellchecker=0x7f0600f3;
    }
    public static final class styleable {
        /** Attributes that can be used with a EmojiPalettesView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #EmojiPalettesView_emojiTabLabelColor com.android.inputmethod.latin:emojiTabLabelColor}</code></td><td></td></tr>
           </table>
           @see #EmojiPalettesView_emojiTabLabelColor
         */
        public static final int[] EmojiPalettesView = {
            0x7f010051
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#emojiTabLabelColor}
          attribute's value can be found in the {@link #EmojiPalettesView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:emojiTabLabelColor
        */
        public static final int EmojiPalettesView_emojiTabLabelColor = 0;
        /** Attributes that can be used with a Keyboard.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_horizontalGap com.android.inputmethod.latin:horizontalGap}</code></td><td> Default horizontal gap between keys, in the proportion of keyboard width.</td></tr>
           <tr><td><code>{@link #Keyboard_iconDeleteKey com.android.inputmethod.latin:iconDeleteKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconEmojiKey com.android.inputmethod.latin:iconEmojiKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconEnterKey com.android.inputmethod.latin:iconEnterKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconImeKey com.android.inputmethod.latin:iconImeKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconLanguageSwitchKey com.android.inputmethod.latin:iconLanguageSwitchKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSearchKey com.android.inputmethod.latin:iconSearchKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSettingsKey com.android.inputmethod.latin:iconSettingsKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShiftKey com.android.inputmethod.latin:iconShiftKey}</code></td><td> Icon set for key top and key preview.</td></tr>
           <tr><td><code>{@link #Keyboard_iconShiftKeyShifted com.android.inputmethod.latin:iconShiftKeyShifted}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShortcutForLabel com.android.inputmethod.latin:iconShortcutForLabel}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShortcutKey com.android.inputmethod.latin:iconShortcutKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconShortcutKeyDisabled com.android.inputmethod.latin:iconShortcutKeyDisabled}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSpaceKey com.android.inputmethod.latin:iconSpaceKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconSpaceKeyForNumberLayout com.android.inputmethod.latin:iconSpaceKeyForNumberLayout}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconTabKey com.android.inputmethod.latin:iconTabKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconTabKeyPreview com.android.inputmethod.latin:iconTabKeyPreview}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconZwjKey com.android.inputmethod.latin:iconZwjKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_iconZwnjKey com.android.inputmethod.latin:iconZwnjKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardBottomPadding com.android.inputmethod.latin:keyboardBottomPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardLeftPadding com.android.inputmethod.latin:keyboardLeftPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardRightPadding com.android.inputmethod.latin:keyboardRightPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_keyboardTopPadding com.android.inputmethod.latin:keyboardTopPadding}</code></td><td> Keyboard top, bottom, left, right edges paddings, in propotion of keyboard height.</td></tr>
           <tr><td><code>{@link #Keyboard_moreKeysTemplate com.android.inputmethod.latin:moreKeysTemplate}</code></td><td> More keys keyboard layout template </td></tr>
           <tr><td><code>{@link #Keyboard_rowHeight com.android.inputmethod.latin:rowHeight}</code></td><td> Default height of a row (key height + vertical gap), in pixels or in the proportion of
             keyboard height.</td></tr>
           <tr><td><code>{@link #Keyboard_themeId com.android.inputmethod.latin:themeId}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_touchPositionCorrectionData com.android.inputmethod.latin:touchPositionCorrectionData}</code></td><td> Touch position correction </td></tr>
           <tr><td><code>{@link #Keyboard_verticalGap com.android.inputmethod.latin:verticalGap}</code></td><td> Default vertical gap between rows of keys, in the proportion of keyboard height.</td></tr>
           </table>
           @see #Keyboard_horizontalGap
           @see #Keyboard_iconDeleteKey
           @see #Keyboard_iconEmojiKey
           @see #Keyboard_iconEnterKey
           @see #Keyboard_iconImeKey
           @see #Keyboard_iconLanguageSwitchKey
           @see #Keyboard_iconSearchKey
           @see #Keyboard_iconSettingsKey
           @see #Keyboard_iconShiftKey
           @see #Keyboard_iconShiftKeyShifted
           @see #Keyboard_iconShortcutForLabel
           @see #Keyboard_iconShortcutKey
           @see #Keyboard_iconShortcutKeyDisabled
           @see #Keyboard_iconSpaceKey
           @see #Keyboard_iconSpaceKeyForNumberLayout
           @see #Keyboard_iconTabKey
           @see #Keyboard_iconTabKeyPreview
           @see #Keyboard_iconZwjKey
           @see #Keyboard_iconZwnjKey
           @see #Keyboard_keyboardBottomPadding
           @see #Keyboard_keyboardLeftPadding
           @see #Keyboard_keyboardRightPadding
           @see #Keyboard_keyboardTopPadding
           @see #Keyboard_moreKeysTemplate
           @see #Keyboard_rowHeight
           @see #Keyboard_themeId
           @see #Keyboard_touchPositionCorrectionData
           @see #Keyboard_verticalGap
         */
        public static final int[] Keyboard = {
            0x7f01005c, 0x7f01005d, 0x7f01005e, 0x7f01005f,
            0x7f010060, 0x7f010061, 0x7f010062, 0x7f010063,
            0x7f010064, 0x7f010065, 0x7f010066, 0x7f010067,
            0x7f010068, 0x7f010069, 0x7f01006a, 0x7f01006b,
            0x7f01006c, 0x7f01006d, 0x7f01006e, 0x7f01006f,
            0x7f010070, 0x7f010071, 0x7f010072, 0x7f010073,
            0x7f010074, 0x7f010075, 0x7f010076, 0x7f010077
        };
        /**
          <p>
          @attr description
           Default horizontal gap between keys, in the proportion of keyboard width. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:horizontalGap
        */
        public static final int Keyboard_horizontalGap = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconDeleteKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconDeleteKey
        */
        public static final int Keyboard_iconDeleteKey = 11;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconEmojiKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconEmojiKey
        */
        public static final int Keyboard_iconEmojiKey = 27;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconEnterKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconEnterKey
        */
        public static final int Keyboard_iconEnterKey = 14;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconImeKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconImeKey
        */
        public static final int Keyboard_iconImeKey = 26;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconLanguageSwitchKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconLanguageSwitchKey
        */
        public static final int Keyboard_iconLanguageSwitchKey = 23;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconSearchKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconSearchKey
        */
        public static final int Keyboard_iconSearchKey = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconSettingsKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconSettingsKey
        */
        public static final int Keyboard_iconSettingsKey = 12;
        /**
          <p>
          @attr description
           Icon set for key top and key preview.
             These should be aligned with KeyboardIconsSet.NAMES_AND_ATTR_IDS[] 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:iconShiftKey
        */
        public static final int Keyboard_iconShiftKey = 10;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconShiftKeyShifted}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconShiftKeyShifted
        */
        public static final int Keyboard_iconShiftKeyShifted = 20;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconShortcutForLabel}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconShortcutForLabel
        */
        public static final int Keyboard_iconShortcutForLabel = 18;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconShortcutKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconShortcutKey
        */
        public static final int Keyboard_iconShortcutKey = 17;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconShortcutKeyDisabled}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconShortcutKeyDisabled
        */
        public static final int Keyboard_iconShortcutKeyDisabled = 21;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconSpaceKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconSpaceKey
        */
        public static final int Keyboard_iconSpaceKey = 13;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconSpaceKeyForNumberLayout}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconSpaceKeyForNumberLayout
        */
        public static final int Keyboard_iconSpaceKeyForNumberLayout = 19;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconTabKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconTabKey
        */
        public static final int Keyboard_iconTabKey = 16;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconTabKeyPreview}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconTabKeyPreview
        */
        public static final int Keyboard_iconTabKeyPreview = 22;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconZwjKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconZwjKey
        */
        public static final int Keyboard_iconZwjKey = 25;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#iconZwnjKey}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:iconZwnjKey
        */
        public static final int Keyboard_iconZwnjKey = 24;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyboardBottomPadding}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:keyboardBottomPadding
        */
        public static final int Keyboard_keyboardBottomPadding = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyboardLeftPadding}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:keyboardLeftPadding
        */
        public static final int Keyboard_keyboardLeftPadding = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyboardRightPadding}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:keyboardRightPadding
        */
        public static final int Keyboard_keyboardRightPadding = 5;
        /**
          <p>
          @attr description
           Keyboard top, bottom, left, right edges paddings, in propotion of keyboard height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyboardTopPadding
        */
        public static final int Keyboard_keyboardTopPadding = 2;
        /**
          <p>
          @attr description
           More keys keyboard layout template 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:moreKeysTemplate
        */
        public static final int Keyboard_moreKeysTemplate = 9;
        /**
          <p>
          @attr description
           Default height of a row (key height + vertical gap), in pixels or in the proportion of
             keyboard height. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:rowHeight
        */
        public static final int Keyboard_rowHeight = 6;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#themeId}
          attribute's value can be found in the {@link #Keyboard} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:themeId
        */
        public static final int Keyboard_themeId = 0;
        /**
          <p>
          @attr description
           Touch position correction 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:touchPositionCorrectionData
        */
        public static final int Keyboard_touchPositionCorrectionData = 1;
        /**
          <p>
          @attr description
           Default vertical gap between rows of keys, in the proportion of keyboard height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:verticalGap
        */
        public static final int Keyboard_verticalGap = 8;
        /** Attributes that can be used with a KeyboardLayoutSet_Element.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Element_elementKeyboard com.android.inputmethod.latin:elementKeyboard}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Element_elementName com.android.inputmethod.latin:elementName}</code></td><td> This should be aligned with KeyboardId.</td></tr>
           <tr><td><code>{@link #KeyboardLayoutSet_Element_enableProximityCharsCorrection com.android.inputmethod.latin:enableProximityCharsCorrection}</code></td><td> Enable proximity characters correction.</td></tr>
           </table>
           @see #KeyboardLayoutSet_Element_elementKeyboard
           @see #KeyboardLayoutSet_Element_elementName
           @see #KeyboardLayoutSet_Element_enableProximityCharsCorrection
         */
        public static final int[] KeyboardLayoutSet_Element = {
            0x7f0100b1, 0x7f0100b2, 0x7f0100b3
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#elementKeyboard}
          attribute's value can be found in the {@link #KeyboardLayoutSet_Element} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:elementKeyboard
        */
        public static final int KeyboardLayoutSet_Element_elementKeyboard = 1;
        /**
          <p>
          @attr description
           This should be aligned with KeyboardId.ELEMENT_* 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
<tr><td><code>emojiRecents</code></td><td>10</td><td></td></tr>
<tr><td><code>emojiCategory1</code></td><td>11</td><td></td></tr>
<tr><td><code>emojiCategory2</code></td><td>12</td><td></td></tr>
<tr><td><code>emojiCategory3</code></td><td>13</td><td></td></tr>
<tr><td><code>emojiCategory4</code></td><td>14</td><td></td></tr>
<tr><td><code>emojiCategory5</code></td><td>15</td><td></td></tr>
<tr><td><code>emojiCategory6</code></td><td>16</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:elementName
        */
        public static final int KeyboardLayoutSet_Element_elementName = 0;
        /**
          <p>
          @attr description
           Enable proximity characters correction. Disabled by default. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:enableProximityCharsCorrection
        */
        public static final int KeyboardLayoutSet_Element_enableProximityCharsCorrection = 2;
        /** Attributes that can be used with a KeyboardTheme.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardTheme_emojiPalettesViewStyle com.android.inputmethod.latin:emojiPalettesViewStyle}</code></td><td> EmojiPalettesView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_keyboardStyle com.android.inputmethod.latin:keyboardStyle}</code></td><td> Keyboard style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_keyboardViewStyle com.android.inputmethod.latin:keyboardViewStyle}</code></td><td> KeyboardView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_mainKeyboardViewStyle com.android.inputmethod.latin:mainKeyboardViewStyle}</code></td><td> MainKeyboardView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardContainerStyle com.android.inputmethod.latin:moreKeysKeyboardContainerStyle}</code></td><td> MoreKeysKeyboardView container style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardStyle com.android.inputmethod.latin:moreKeysKeyboardStyle}</code></td><td> MoreKeysKeyboard style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_moreKeysKeyboardViewStyle com.android.inputmethod.latin:moreKeysKeyboardViewStyle}</code></td><td> MoreKeysKeyboardView style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_suggestionStripViewStyle com.android.inputmethod.latin:suggestionStripViewStyle}</code></td><td> Suggestions strip style </td></tr>
           <tr><td><code>{@link #KeyboardTheme_suggestionWordStyle com.android.inputmethod.latin:suggestionWordStyle}</code></td><td> Suggestion word style </td></tr>
           </table>
           @see #KeyboardTheme_emojiPalettesViewStyle
           @see #KeyboardTheme_keyboardStyle
           @see #KeyboardTheme_keyboardViewStyle
           @see #KeyboardTheme_mainKeyboardViewStyle
           @see #KeyboardTheme_moreKeysKeyboardContainerStyle
           @see #KeyboardTheme_moreKeysKeyboardStyle
           @see #KeyboardTheme_moreKeysKeyboardViewStyle
           @see #KeyboardTheme_suggestionStripViewStyle
           @see #KeyboardTheme_suggestionWordStyle
         */
        public static final int[] KeyboardTheme = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008
        };
        /**
          <p>
          @attr description
           EmojiPalettesView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:emojiPalettesViewStyle
        */
        public static final int KeyboardTheme_emojiPalettesViewStyle = 3;
        /**
          <p>
          @attr description
           Keyboard style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyboardStyle
        */
        public static final int KeyboardTheme_keyboardStyle = 0;
        /**
          <p>
          @attr description
           KeyboardView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyboardViewStyle
        */
        public static final int KeyboardTheme_keyboardViewStyle = 1;
        /**
          <p>
          @attr description
           MainKeyboardView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:mainKeyboardViewStyle
        */
        public static final int KeyboardTheme_mainKeyboardViewStyle = 2;
        /**
          <p>
          @attr description
           MoreKeysKeyboardView container style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:moreKeysKeyboardContainerStyle
        */
        public static final int KeyboardTheme_moreKeysKeyboardContainerStyle = 6;
        /**
          <p>
          @attr description
           MoreKeysKeyboard style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:moreKeysKeyboardStyle
        */
        public static final int KeyboardTheme_moreKeysKeyboardStyle = 4;
        /**
          <p>
          @attr description
           MoreKeysKeyboardView style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:moreKeysKeyboardViewStyle
        */
        public static final int KeyboardTheme_moreKeysKeyboardViewStyle = 5;
        /**
          <p>
          @attr description
           Suggestions strip style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:suggestionStripViewStyle
        */
        public static final int KeyboardTheme_suggestionStripViewStyle = 7;
        /**
          <p>
          @attr description
           Suggestion word style 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:suggestionWordStyle
        */
        public static final int KeyboardTheme_suggestionWordStyle = 8;
        /** Attributes that can be used with a KeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardView_keyBackground com.android.inputmethod.latin:keyBackground}</code></td><td> Image for the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyBackgroundEmojiFunctional com.android.inputmethod.latin:keyBackgroundEmojiFunctional}</code></td><td> Image for the functional key used in Emoji layout.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyHintLetterPadding com.android.inputmethod.latin:keyHintLetterPadding}</code></td><td> Right padding of hint letter to the edge of the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyLabelHorizontalPadding com.android.inputmethod.latin:keyLabelHorizontalPadding}</code></td><td> Horizontal padding of left/right aligned key label to the edge of the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyPopupHintLetterPadding com.android.inputmethod.latin:keyPopupHintLetterPadding}</code></td><td> Bottom padding of popup hint letter ".</td></tr>
           <tr><td><code>{@link #KeyboardView_keyShiftedLetterHintPadding com.android.inputmethod.latin:keyShiftedLetterHintPadding}</code></td><td> Right padding of shifted letter hint to the edge of the key.</td></tr>
           <tr><td><code>{@link #KeyboardView_keyTextShadowRadius com.android.inputmethod.latin:keyTextShadowRadius}</code></td><td> Blur radius of key text shadow.</td></tr>
           <tr><td><code>{@link #KeyboardView_state_has_morekeys com.android.inputmethod.latin:state_has_morekeys}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_state_left_edge com.android.inputmethod.latin:state_left_edge}</code></td><td> Key preview background states </td></tr>
           <tr><td><code>{@link #KeyboardView_state_right_edge com.android.inputmethod.latin:state_right_edge}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardView_verticalCorrection com.android.inputmethod.latin:verticalCorrection}</code></td><td> Amount to offset the touch Y coordinate by, for bias correction.</td></tr>
           </table>
           @see #KeyboardView_keyBackground
           @see #KeyboardView_keyBackgroundEmojiFunctional
           @see #KeyboardView_keyHintLetterPadding
           @see #KeyboardView_keyLabelHorizontalPadding
           @see #KeyboardView_keyPopupHintLetterPadding
           @see #KeyboardView_keyShiftedLetterHintPadding
           @see #KeyboardView_keyTextShadowRadius
           @see #KeyboardView_state_has_morekeys
           @see #KeyboardView_state_left_edge
           @see #KeyboardView_state_right_edge
           @see #KeyboardView_verticalCorrection
         */
        public static final int[] KeyboardView = {
            0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c,
            0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010,
            0x7f010011, 0x7f010012, 0x7f010013
        };
        /**
          <p>
          @attr description
           Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyBackground
        */
        public static final int KeyboardView_keyBackground = 0;
        /**
          <p>
          @attr description
           Image for the functional key used in Emoji layout. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyBackgroundEmojiFunctional
        */
        public static final int KeyboardView_keyBackgroundEmojiFunctional = 1;
        /**
          <p>
          @attr description
           Right padding of hint letter to the edge of the key.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyHintLetterPadding
        */
        public static final int KeyboardView_keyHintLetterPadding = 3;
        /**
          <p>
          @attr description
           Horizontal padding of left/right aligned key label to the edge of the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyLabelHorizontalPadding
        */
        public static final int KeyboardView_keyLabelHorizontalPadding = 2;
        /**
          <p>
          @attr description
           Bottom padding of popup hint letter "..." to the edge of the key.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyPopupHintLetterPadding
        */
        public static final int KeyboardView_keyPopupHintLetterPadding = 4;
        /**
          <p>
          @attr description
           Right padding of shifted letter hint to the edge of the key.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyShiftedLetterHintPadding
        */
        public static final int KeyboardView_keyShiftedLetterHintPadding = 5;
        /**
          <p>
          @attr description
           Blur radius of key text shadow. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyTextShadowRadius
        */
        public static final int KeyboardView_keyTextShadowRadius = 6;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#state_has_morekeys}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:state_has_morekeys
        */
        public static final int KeyboardView_state_has_morekeys = 9;
        /**
          <p>
          @attr description
           Key preview background states 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:state_left_edge
        */
        public static final int KeyboardView_state_left_edge = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#state_right_edge}
          attribute's value can be found in the {@link #KeyboardView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:state_right_edge
        */
        public static final int KeyboardView_state_right_edge = 8;
        /**
          <p>
          @attr description
           Amount to offset the touch Y coordinate by, for bias correction. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:verticalCorrection
        */
        public static final int KeyboardView_verticalCorrection = 10;
        /** Attributes that can be used with a Keyboard_Case.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Case_clobberSettingsKey com.android.inputmethod.latin:clobberSettingsKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_countryCode com.android.inputmethod.latin:countryCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_hasShortcutKey com.android.inputmethod.latin:hasShortcutKey}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_imeAction com.android.inputmethod.latin:imeAction}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_isMultiLine com.android.inputmethod.latin:isMultiLine}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_keyboardLayoutSet com.android.inputmethod.latin:keyboardLayoutSet}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_keyboardLayoutSetElement com.android.inputmethod.latin:keyboardLayoutSetElement}</code></td><td> This should be aligned with KeyboardLayoutSet_Element's elementName.</td></tr>
           <tr><td><code>{@link #Keyboard_Case_languageCode com.android.inputmethod.latin:languageCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_languageSwitchKeyEnabled com.android.inputmethod.latin:languageSwitchKeyEnabled}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_localeCode com.android.inputmethod.latin:localeCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_mode com.android.inputmethod.latin:mode}</code></td><td> This should be aligned with KeyboardId.</td></tr>
           <tr><td><code>{@link #Keyboard_Case_navigateNext com.android.inputmethod.latin:navigateNext}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_navigatePrevious com.android.inputmethod.latin:navigatePrevious}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_passwordInput com.android.inputmethod.latin:passwordInput}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_shortcutKeyEnabled com.android.inputmethod.latin:shortcutKeyEnabled}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Case_shortcutKeyOnSymbols com.android.inputmethod.latin:shortcutKeyOnSymbols}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Case_clobberSettingsKey
           @see #Keyboard_Case_countryCode
           @see #Keyboard_Case_hasShortcutKey
           @see #Keyboard_Case_imeAction
           @see #Keyboard_Case_isMultiLine
           @see #Keyboard_Case_keyboardLayoutSet
           @see #Keyboard_Case_keyboardLayoutSetElement
           @see #Keyboard_Case_languageCode
           @see #Keyboard_Case_languageSwitchKeyEnabled
           @see #Keyboard_Case_localeCode
           @see #Keyboard_Case_mode
           @see #Keyboard_Case_navigateNext
           @see #Keyboard_Case_navigatePrevious
           @see #Keyboard_Case_passwordInput
           @see #Keyboard_Case_shortcutKeyEnabled
           @see #Keyboard_Case_shortcutKeyOnSymbols
         */
        public static final int[] Keyboard_Case = {
            0x7f01009f, 0x7f0100a0, 0x7f0100a1, 0x7f0100a2,
            0x7f0100a3, 0x7f0100a4, 0x7f0100a5, 0x7f0100a6,
            0x7f0100a7, 0x7f0100a8, 0x7f0100a9, 0x7f0100aa,
            0x7f0100ab, 0x7f0100ac, 0x7f0100ad, 0x7f0100ae
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#clobberSettingsKey}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:clobberSettingsKey
        */
        public static final int Keyboard_Case_clobberSettingsKey = 6;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#countryCode}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:countryCode
        */
        public static final int Keyboard_Case_countryCode = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#hasShortcutKey}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:hasShortcutKey
        */
        public static final int Keyboard_Case_hasShortcutKey = 9;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#imeAction}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>actionUnspecified</code></td><td>0</td><td> This should be aligned with EditorInfo.IME_ACTION_* </td></tr>
<tr><td><code>actionNone</code></td><td>1</td><td></td></tr>
<tr><td><code>actionGo</code></td><td>2</td><td></td></tr>
<tr><td><code>actionSearch</code></td><td>3</td><td></td></tr>
<tr><td><code>actionSend</code></td><td>4</td><td></td></tr>
<tr><td><code>actionNext</code></td><td>5</td><td></td></tr>
<tr><td><code>actionDone</code></td><td>6</td><td></td></tr>
<tr><td><code>actionPrevious</code></td><td>7</td><td></td></tr>
<tr><td><code>actionCustomLabel</code></td><td>0x100</td><td>  This should be aligned with KeyboardId.IME_ACTION_* </td></tr>
</table>
          @attr name com.android.inputmethod.latin:imeAction
        */
        public static final int Keyboard_Case_imeAction = 12;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#isMultiLine}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:isMultiLine
        */
        public static final int Keyboard_Case_isMultiLine = 11;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyboardLayoutSet}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:keyboardLayoutSet
        */
        public static final int Keyboard_Case_keyboardLayoutSet = 0;
        /**
          <p>
          @attr description
           This should be aligned with KeyboardLayoutSet_Element's elementName. 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alphabet</code></td><td>0</td><td></td></tr>
<tr><td><code>alphabetManualShifted</code></td><td>1</td><td></td></tr>
<tr><td><code>alphabetAutomaticShifted</code></td><td>2</td><td></td></tr>
<tr><td><code>alphabetShiftLocked</code></td><td>3</td><td></td></tr>
<tr><td><code>alphabetShiftLockShifted</code></td><td>4</td><td></td></tr>
<tr><td><code>symbols</code></td><td>5</td><td></td></tr>
<tr><td><code>symbolsShifted</code></td><td>6</td><td></td></tr>
<tr><td><code>phone</code></td><td>7</td><td></td></tr>
<tr><td><code>phoneSymbols</code></td><td>8</td><td></td></tr>
<tr><td><code>number</code></td><td>9</td><td></td></tr>
<tr><td><code>emojiRecents</code></td><td>10</td><td></td></tr>
<tr><td><code>emojiCategory1</code></td><td>11</td><td></td></tr>
<tr><td><code>emojiCategory2</code></td><td>12</td><td></td></tr>
<tr><td><code>emojiCategory3</code></td><td>13</td><td></td></tr>
<tr><td><code>emojiCategory4</code></td><td>14</td><td></td></tr>
<tr><td><code>emojiCategory5</code></td><td>15</td><td></td></tr>
<tr><td><code>emojiCategory6</code></td><td>16</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyboardLayoutSetElement
        */
        public static final int Keyboard_Case_keyboardLayoutSetElement = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#languageCode}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:languageCode
        */
        public static final int Keyboard_Case_languageCode = 14;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#languageSwitchKeyEnabled}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:languageSwitchKeyEnabled
        */
        public static final int Keyboard_Case_languageSwitchKeyEnabled = 10;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#localeCode}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:localeCode
        */
        public static final int Keyboard_Case_localeCode = 13;
        /**
          <p>
          @attr description
           This should be aligned with KeyboardId.MODE_* 


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>text</code></td><td>0</td><td></td></tr>
<tr><td><code>url</code></td><td>1</td><td></td></tr>
<tr><td><code>email</code></td><td>2</td><td></td></tr>
<tr><td><code>im</code></td><td>3</td><td></td></tr>
<tr><td><code>phone</code></td><td>4</td><td></td></tr>
<tr><td><code>number</code></td><td>5</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:mode
        */
        public static final int Keyboard_Case_mode = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#navigateNext}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:navigateNext
        */
        public static final int Keyboard_Case_navigateNext = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#navigatePrevious}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:navigatePrevious
        */
        public static final int Keyboard_Case_navigatePrevious = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#passwordInput}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:passwordInput
        */
        public static final int Keyboard_Case_passwordInput = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#shortcutKeyEnabled}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:shortcutKeyEnabled
        */
        public static final int Keyboard_Case_shortcutKeyEnabled = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#shortcutKeyOnSymbols}
          attribute's value can be found in the {@link #Keyboard_Case} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:shortcutKeyOnSymbols
        */
        public static final int Keyboard_Case_shortcutKeyOnSymbols = 8;
        /** Attributes that can be used with a Keyboard_GridRows.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_GridRows_codesArray com.android.inputmethod.latin:codesArray}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_GridRows_textsArray com.android.inputmethod.latin:textsArray}</code></td><td></td></tr>
           </table>
           @see #Keyboard_GridRows_codesArray
           @see #Keyboard_GridRows_textsArray
         */
        public static final int[] Keyboard_GridRows = {
            0x7f010078, 0x7f010079
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#codesArray}
          attribute's value can be found in the {@link #Keyboard_GridRows} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:codesArray
        */
        public static final int Keyboard_GridRows_codesArray = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#textsArray}
          attribute's value can be found in the {@link #Keyboard_GridRows} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:textsArray
        */
        public static final int Keyboard_GridRows_textsArray = 1;
        /** Attributes that can be used with a Keyboard_Include.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Include_keyboardLayout com.android.inputmethod.latin:keyboardLayout}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Include_keyboardLayout
         */
        public static final int[] Keyboard_Include = {
            0x7f01009e
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyboardLayout}
          attribute's value can be found in the {@link #Keyboard_Include} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:keyboardLayout
        */
        public static final int Keyboard_Include_keyboardLayout = 0;
        /** Attributes that can be used with a Keyboard_Key.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_additionalMoreKeys com.android.inputmethod.latin:additionalMoreKeys}</code></td><td> The keys to display in the more keys keyboard in addition to moreKeys.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_altCode com.android.inputmethod.latin:altCode}</code></td><td> The alternate unicode value that this key outputs while typing.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_backgroundType com.android.inputmethod.latin:backgroundType}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_code com.android.inputmethod.latin:code}</code></td><td> The unicode value that this key outputs.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyActionFlags com.android.inputmethod.latin:keyActionFlags}</code></td><td> The key action flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLabel com.android.inputmethod.latin:keyHintLabel}</code></td><td> The hint label to display on the key in conjunction with the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLabelColor com.android.inputmethod.latin:keyHintLabelColor}</code></td><td> Key hint label color </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLabelRatio com.android.inputmethod.latin:keyHintLabelRatio}</code></td><td> Size of the text for hint label, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLetterColor com.android.inputmethod.latin:keyHintLetterColor}</code></td><td> Key hint letter (= one character hint label) color </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyHintLetterRatio com.android.inputmethod.latin:keyHintLetterRatio}</code></td><td> Size of the text for hint letter (= one character hint label), in the proportion of
             key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIcon com.android.inputmethod.latin:keyIcon}</code></td><td> The icon to display on the key instead of the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIconDisabled com.android.inputmethod.latin:keyIconDisabled}</code></td><td> The icon for disabled key </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyIconPreview com.android.inputmethod.latin:keyIconPreview}</code></td><td> The icon to show in the popup preview.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabel com.android.inputmethod.latin:keyLabel}</code></td><td> The label to display on the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabelFlags com.android.inputmethod.latin:keyLabelFlags}</code></td><td> The key label flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLabelSize com.android.inputmethod.latin:keyLabelSize}</code></td><td> Size of the text for keys with multiple letters.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLargeLabelRatio com.android.inputmethod.latin:keyLargeLabelRatio}</code></td><td> Large size of the text for keys with multiple letters, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLargeLetterRatio com.android.inputmethod.latin:keyLargeLetterRatio}</code></td><td> Large size of the text for one letter keys, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyLetterSize com.android.inputmethod.latin:keyLetterSize}</code></td><td> Size of the text for one letter keys.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyOutputText com.android.inputmethod.latin:keyOutputText}</code></td><td> The string of characters to output when this key is pressed.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyPreviewTextColor com.android.inputmethod.latin:keyPreviewTextColor}</code></td><td> Key preview visual parameters 
 The text color for key press feedback.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyPreviewTextRatio com.android.inputmethod.latin:keyPreviewTextRatio}</code></td><td> Size of the text for key press feedback popup, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyShiftedLetterHintActivatedColor com.android.inputmethod.latin:keyShiftedLetterHintActivatedColor}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyShiftedLetterHintInactivatedColor com.android.inputmethod.latin:keyShiftedLetterHintInactivatedColor}</code></td><td> Shifted letter hint colors </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyShiftedLetterHintRatio com.android.inputmethod.latin:keyShiftedLetterHintRatio}</code></td><td> Size of the text for shifted letter hint, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyStyle com.android.inputmethod.latin:keyStyle}</code></td><td> The key style to specify a set of key attributes defined by <key_style/> </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyTextColor com.android.inputmethod.latin:keyTextColor}</code></td><td> Color to use for the label in a key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyTextInactivatedColor com.android.inputmethod.latin:keyTextInactivatedColor}</code></td><td> Color to use for the label in a key when in inactivated state.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyTextShadowColor com.android.inputmethod.latin:keyTextShadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyTypeface com.android.inputmethod.latin:keyTypeface}</code></td><td> Key top visual attributes </td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyWidth com.android.inputmethod.latin:keyWidth}</code></td><td> Width of the key, in the proportion of keyboard width.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_keyXPos com.android.inputmethod.latin:keyXPos}</code></td><td> The X-coordinate of upper right corner of this key including horizontal gap, in the
             proportion of keyboard width.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_maxMoreKeysColumn com.android.inputmethod.latin:maxMoreKeysColumn}</code></td><td> Maximum column of more keys keyboard </td></tr>
           <tr><td><code>{@link #Keyboard_Key_moreKeys com.android.inputmethod.latin:moreKeys}</code></td><td> The keys to display in the more keys keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_visualInsetsLeft com.android.inputmethod.latin:visualInsetsLeft}</code></td><td> Visual insets, in the proportion of keyboard width.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_visualInsetsRight com.android.inputmethod.latin:visualInsetsRight}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Key_additionalMoreKeys
           @see #Keyboard_Key_altCode
           @see #Keyboard_Key_backgroundType
           @see #Keyboard_Key_code
           @see #Keyboard_Key_keyActionFlags
           @see #Keyboard_Key_keyHintLabel
           @see #Keyboard_Key_keyHintLabelColor
           @see #Keyboard_Key_keyHintLabelRatio
           @see #Keyboard_Key_keyHintLetterColor
           @see #Keyboard_Key_keyHintLetterRatio
           @see #Keyboard_Key_keyIcon
           @see #Keyboard_Key_keyIconDisabled
           @see #Keyboard_Key_keyIconPreview
           @see #Keyboard_Key_keyLabel
           @see #Keyboard_Key_keyLabelFlags
           @see #Keyboard_Key_keyLabelSize
           @see #Keyboard_Key_keyLargeLabelRatio
           @see #Keyboard_Key_keyLargeLetterRatio
           @see #Keyboard_Key_keyLetterSize
           @see #Keyboard_Key_keyOutputText
           @see #Keyboard_Key_keyPreviewTextColor
           @see #Keyboard_Key_keyPreviewTextRatio
           @see #Keyboard_Key_keyShiftedLetterHintActivatedColor
           @see #Keyboard_Key_keyShiftedLetterHintInactivatedColor
           @see #Keyboard_Key_keyShiftedLetterHintRatio
           @see #Keyboard_Key_keyStyle
           @see #Keyboard_Key_keyTextColor
           @see #Keyboard_Key_keyTextInactivatedColor
           @see #Keyboard_Key_keyTextShadowColor
           @see #Keyboard_Key_keyTypeface
           @see #Keyboard_Key_keyWidth
           @see #Keyboard_Key_keyXPos
           @see #Keyboard_Key_maxMoreKeysColumn
           @see #Keyboard_Key_moreKeys
           @see #Keyboard_Key_visualInsetsLeft
           @see #Keyboard_Key_visualInsetsRight
         */
        public static final int[] Keyboard_Key = {
            0x7f01007a, 0x7f01007b, 0x7f01007c, 0x7f01007d,
            0x7f01007e, 0x7f01007f, 0x7f010080, 0x7f010081,
            0x7f010082, 0x7f010083, 0x7f010084, 0x7f010085,
            0x7f010086, 0x7f010087, 0x7f010088, 0x7f010089,
            0x7f01008a, 0x7f01008b, 0x7f01008c, 0x7f01008d,
            0x7f01008e, 0x7f01008f, 0x7f010090, 0x7f010091,
            0x7f010092, 0x7f010093, 0x7f010094, 0x7f010095,
            0x7f010096, 0x7f010097, 0x7f010098, 0x7f010099,
            0x7f01009a, 0x7f01009b, 0x7f01009c, 0x7f01009d
        };
        /**
          <p>
          @attr description
           The keys to display in the more keys keyboard in addition to moreKeys.
             The additional more keys are inserted at the '%' markers in the moreKeys if any.
             They are inserted at the head of moreKeys if none.
             If there are remaining entries of additionalMoreKeys even after all '%' markers have
             been replaced, those remaining entries are appended at the end of moreKeys. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:additionalMoreKeys
        */
        public static final int Keyboard_Key_additionalMoreKeys = 3;
        /**
          <p>
          @attr description
           The alternate unicode value that this key outputs while typing.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:altCode
        */
        public static final int Keyboard_Key_altCode = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#backgroundType}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>empty</code></td><td>0</td><td> This should be aligned with Key.BACKGROUND_TYPE_* </td></tr>
<tr><td><code>normal</code></td><td>1</td><td></td></tr>
<tr><td><code>functional</code></td><td>2</td><td></td></tr>
<tr><td><code>action</code></td><td>3</td><td></td></tr>
<tr><td><code>stickyOff</code></td><td>4</td><td></td></tr>
<tr><td><code>stickyOn</code></td><td>5</td><td></td></tr>
</table>
          @attr name com.android.inputmethod.latin:backgroundType
        */
        public static final int Keyboard_Key_backgroundType = 5;
        /**
          <p>
          @attr description
           The unicode value that this key outputs.
             Code value represented in hexadecimal prefixed with "0x" or code value reference using
             "!code/<code_name>" notation. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:code
        */
        public static final int Keyboard_Key_code = 0;
        /**
          <p>
          @attr description
           The key action flags. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>isRepeatable</code></td><td>0x01</td><td> This should be aligned with Key.ACTION_FLAGS_* </td></tr>
<tr><td><code>noKeyPreview</code></td><td>0x02</td><td></td></tr>
<tr><td><code>altCodeWhileTyping</code></td><td>0x04</td><td></td></tr>
<tr><td><code>enableLongPress</code></td><td>0x08</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyActionFlags
        */
        public static final int Keyboard_Key_keyActionFlags = 6;
        /**
          <p>
          @attr description
           The hint label to display on the key in conjunction with the label. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyHintLabel
        */
        public static final int Keyboard_Key_keyHintLabel = 9;
        /**
          <p>
          @attr description
           Key hint label color 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyHintLabelColor
        */
        public static final int Keyboard_Key_keyHintLabelColor = 31;
        /**
          <p>
          @attr description
           Size of the text for hint label, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyHintLabelRatio
        */
        public static final int Keyboard_Key_keyHintLabelRatio = 25;
        /**
          <p>
          @attr description
           Key hint letter (= one character hint label) color 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyHintLetterColor
        */
        public static final int Keyboard_Key_keyHintLetterColor = 30;
        /**
          <p>
          @attr description
           Size of the text for hint letter (= one character hint label), in the proportion of
             key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyHintLetterRatio
        */
        public static final int Keyboard_Key_keyHintLetterRatio = 24;
        /**
          <p>
          @attr description
           The icon to display on the key instead of the label. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyIcon
        */
        public static final int Keyboard_Key_keyIcon = 11;
        /**
          <p>
          @attr description
           The icon for disabled key 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyIconDisabled
        */
        public static final int Keyboard_Key_keyIconDisabled = 12;
        /**
          <p>
          @attr description
           The icon to show in the popup preview. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyIconPreview
        */
        public static final int Keyboard_Key_keyIconPreview = 13;
        /**
          <p>
          @attr description
           The label to display on the key. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyLabel
        */
        public static final int Keyboard_Key_keyLabel = 8;
        /**
          <p>
          @attr description
           The key label flags. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>alignLeft</code></td><td>0x01</td><td> This should be aligned with Key.LABEL_FLAGS__* </td></tr>
<tr><td><code>alignRight</code></td><td>0x02</td><td></td></tr>
<tr><td><code>alignLeftOfCenter</code></td><td>0x08</td><td></td></tr>
<tr><td><code>fontNormal</code></td><td>0x10</td><td></td></tr>
<tr><td><code>fontMonoSpace</code></td><td>0x20</td><td></td></tr>
<tr><td><code>followKeyLargeLetterRatio</code></td><td>0x40</td><td></td></tr>
<tr><td><code>followKeyLetterRatio</code></td><td>0x80</td><td></td></tr>
<tr><td><code>followKeyLabelRatio</code></td><td>0xC0</td><td></td></tr>
<tr><td><code>followKeyLargeLabelRatio</code></td><td>0x100</td><td></td></tr>
<tr><td><code>followKeyHintLabelRatio</code></td><td>0x140</td><td></td></tr>
<tr><td><code>hasPopupHint</code></td><td>0x200</td><td></td></tr>
<tr><td><code>hasShiftedLetterHint</code></td><td>0x400</td><td></td></tr>
<tr><td><code>hasHintLabel</code></td><td>0x800</td><td></td></tr>
<tr><td><code>withIconLeft</code></td><td>0x1000</td><td></td></tr>
<tr><td><code>withIconRight</code></td><td>0x2000</td><td></td></tr>
<tr><td><code>autoXScale</code></td><td>0x4000</td><td></td></tr>
<tr><td><code>preserveCase</code></td><td>0x8000</td><td> If true, character case of code, altCode, moreKeys, keyOutputText, keyLabel,
                 or keyHintLabel will never be subject to change. </td></tr>
<tr><td><code>shiftedLetterActivated</code></td><td>0x10000</td><td> If true, use keyShiftedLetterHintActivatedColor for the shifted letter hint and
                 keyTextInactivatedColor for the primary key top label. </td></tr>
<tr><td><code>fromCustomActionLabel</code></td><td>0x20000</td><td> If true, use EditorInfo.actionLabel for the key label. </td></tr>
<tr><td><code>disableKeyHintLabel</code></td><td>0x40000000</td><td> If true, disable keyHintLabel. </td></tr>
<tr><td><code>disableAdditionalMoreKeys</code></td><td>0x80000000</td><td> If true, disable additionalMoreKeys. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyLabelFlags
        */
        public static final int Keyboard_Key_keyLabelFlags = 10;
        /**
          <p>
          @attr description
           Size of the text for keys with multiple letters. If specified as fraction, the text
             size is measured in the proportion of key height. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyLabelSize
        */
        public static final int Keyboard_Key_keyLabelSize = 21;
        /**
          <p>
          @attr description
           Large size of the text for keys with multiple letters, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyLargeLabelRatio
        */
        public static final int Keyboard_Key_keyLargeLabelRatio = 23;
        /**
          <p>
          @attr description
           Large size of the text for one letter keys, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyLargeLetterRatio
        */
        public static final int Keyboard_Key_keyLargeLetterRatio = 22;
        /**
          <p>
          @attr description
           Size of the text for one letter keys. If specified as fraction, the text size is
             measured in the proportion of key height. 


          <p>May be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyLetterSize
        */
        public static final int Keyboard_Key_keyLetterSize = 20;
        /**
          <p>
          @attr description
           The string of characters to output when this key is pressed. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyOutputText
        */
        public static final int Keyboard_Key_keyOutputText = 7;
        /**
          <p>
          @attr description
           Key preview visual parameters 
 The text color for key press feedback. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyPreviewTextColor
        */
        public static final int Keyboard_Key_keyPreviewTextColor = 34;
        /**
          <p>
          @attr description
           Size of the text for key press feedback popup, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyPreviewTextRatio
        */
        public static final int Keyboard_Key_keyPreviewTextRatio = 35;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyShiftedLetterHintActivatedColor}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:keyShiftedLetterHintActivatedColor
        */
        public static final int Keyboard_Key_keyShiftedLetterHintActivatedColor = 33;
        /**
          <p>
          @attr description
           Shifted letter hint colors 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyShiftedLetterHintInactivatedColor
        */
        public static final int Keyboard_Key_keyShiftedLetterHintInactivatedColor = 32;
        /**
          <p>
          @attr description
           Size of the text for shifted letter hint, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyShiftedLetterHintRatio
        */
        public static final int Keyboard_Key_keyShiftedLetterHintRatio = 26;
        /**
          <p>
          @attr description
           The key style to specify a set of key attributes defined by <key_style/> 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyStyle
        */
        public static final int Keyboard_Key_keyStyle = 14;
        /**
          <p>
          @attr description
           Color to use for the label in a key. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyTextColor
        */
        public static final int Keyboard_Key_keyTextColor = 27;
        /**
          <p>
          @attr description
           Color to use for the label in a key when in inactivated state. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyTextInactivatedColor
        */
        public static final int Keyboard_Key_keyTextInactivatedColor = 29;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#keyTextShadowColor}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:keyTextShadowColor
        */
        public static final int Keyboard_Key_keyTextShadowColor = 28;
        /**
          <p>
          @attr description
           Key top visual attributes 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td> This should be aligned with Typeface.NORMAL etc. </td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
<tr><td><code>boldItalic</code></td><td>3</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyTypeface
        */
        public static final int Keyboard_Key_keyTypeface = 19;
        /**
          <p>
          @attr description
           Width of the key, in the proportion of keyboard width.
             If the value is fillRight, the actual key width will be determined to fill out the
             area up to the right edge of the keyboard. 
 This should be aligned with KeyboardBuilder.Row.KEYWIDTH_* 


          <p>May be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>fillRight</code></td><td>-1</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyWidth
        */
        public static final int Keyboard_Key_keyWidth = 17;
        /**
          <p>
          @attr description
           The X-coordinate of upper right corner of this key including horizontal gap, in the
             proportion of keyboard width.
             If the value is negative, the origin is the right edge of the keyboard. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyXPos
        */
        public static final int Keyboard_Key_keyXPos = 18;
        /**
          <p>
          @attr description
           Maximum column of more keys keyboard 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:maxMoreKeysColumn
        */
        public static final int Keyboard_Key_maxMoreKeysColumn = 4;
        /**
          <p>
          @attr description
           The keys to display in the more keys keyboard. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:moreKeys
        */
        public static final int Keyboard_Key_moreKeys = 2;
        /**
          <p>
          @attr description
           Visual insets, in the proportion of keyboard width. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:visualInsetsLeft
        */
        public static final int Keyboard_Key_visualInsetsLeft = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#visualInsetsRight}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:visualInsetsRight
        */
        public static final int Keyboard_Key_visualInsetsRight = 16;
        /** Attributes that can be used with a Keyboard_KeyStyle.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_KeyStyle_parentStyle com.android.inputmethod.latin:parentStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_KeyStyle_styleName com.android.inputmethod.latin:styleName}</code></td><td></td></tr>
           </table>
           @see #Keyboard_KeyStyle_parentStyle
           @see #Keyboard_KeyStyle_styleName
         */
        public static final int[] Keyboard_KeyStyle = {
            0x7f0100af, 0x7f0100b0
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#parentStyle}
          attribute's value can be found in the {@link #Keyboard_KeyStyle} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:parentStyle
        */
        public static final int Keyboard_KeyStyle_parentStyle = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#styleName}
          attribute's value can be found in the {@link #Keyboard_KeyStyle} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:styleName
        */
        public static final int Keyboard_KeyStyle_styleName = 0;
        /** Attributes that can be used with a MainKeyboardView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MainKeyboardView_altCodeKeyWhileTypingFadeinAnimator com.android.inputmethod.latin:altCodeKeyWhileTypingFadeinAnimator}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_altCodeKeyWhileTypingFadeoutAnimator com.android.inputmethod.latin:altCodeKeyWhileTypingFadeoutAnimator}</code></td><td> Fadeout and fadein animator for altCodeWhileTyping keys.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_autoCorrectionSpacebarLedEnabled com.android.inputmethod.latin:autoCorrectionSpacebarLedEnabled}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_autoCorrectionSpacebarLedIcon com.android.inputmethod.latin:autoCorrectionSpacebarLedIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_backgroundDimAlpha com.android.inputmethod.latin:backgroundDimAlpha}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDetectFastMoveSpeedThreshold com.android.inputmethod.latin:gestureDetectFastMoveSpeedThreshold}</code></td><td> Static threshold for starting gesture detection (keyWidth%/sec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicDistanceThresholdFrom com.android.inputmethod.latin:gestureDynamicDistanceThresholdFrom}</code></td><td> Distance based threshold values for gesture detection (keyWidth%/sec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicDistanceThresholdTo com.android.inputmethod.latin:gestureDynamicDistanceThresholdTo}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicThresholdDecayDuration com.android.inputmethod.latin:gestureDynamicThresholdDecayDuration}</code></td><td> Dynamic threshold for gesture after fast typing (msec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicTimeThresholdFrom com.android.inputmethod.latin:gestureDynamicTimeThresholdFrom}</code></td><td> Time based threshold values for gesture detection (msec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureDynamicTimeThresholdTo com.android.inputmethod.latin:gestureDynamicTimeThresholdTo}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewColor com.android.inputmethod.latin:gestureFloatingPreviewColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewHorizontalPadding com.android.inputmethod.latin:gestureFloatingPreviewHorizontalPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewRoundRadius com.android.inputmethod.latin:gestureFloatingPreviewRoundRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewTextColor com.android.inputmethod.latin:gestureFloatingPreviewTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewTextLingerTimeout com.android.inputmethod.latin:gestureFloatingPreviewTextLingerTimeout}</code></td><td> Delay after gesture input and gesture floating preview text dismissing in millisecond </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewTextOffset com.android.inputmethod.latin:gestureFloatingPreviewTextOffset}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewTextSize com.android.inputmethod.latin:gestureFloatingPreviewTextSize}</code></td><td> Attributes for GestureFloatingPreviewText </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureFloatingPreviewVerticalPadding com.android.inputmethod.latin:gestureFloatingPreviewVerticalPadding}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureRecognitionMinimumTime com.android.inputmethod.latin:gestureRecognitionMinimumTime}</code></td><td> Parameters for gesture recognition (msec) and (keyWidth%/sec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureRecognitionSpeedThreshold com.android.inputmethod.latin:gestureRecognitionSpeedThreshold}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureRecognitionUpdateTime com.android.inputmethod.latin:gestureRecognitionUpdateTime}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureSamplingMinimumDistance com.android.inputmethod.latin:gestureSamplingMinimumDistance}</code></td><td> Parameter for gesture sampling (keyWidth%/sec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureStaticTimeThresholdAfterFastTyping com.android.inputmethod.latin:gestureStaticTimeThresholdAfterFastTyping}</code></td><td> Static threshold for gesture after fast typing (msec) </td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailBodyRatio com.android.inputmethod.latin:gestureTrailBodyRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailColor com.android.inputmethod.latin:gestureTrailColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailEndWidth com.android.inputmethod.latin:gestureTrailEndWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailFadeoutDuration com.android.inputmethod.latin:gestureTrailFadeoutDuration}</code></td><td> Duration while gesture trail is fading out in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailFadeoutStartDelay com.android.inputmethod.latin:gestureTrailFadeoutStartDelay}</code></td><td> Delay after gesture trail starts fading out in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailMaxInterpolationAngularThreshold com.android.inputmethod.latin:gestureTrailMaxInterpolationAngularThreshold}</code></td><td> Maximum angular threshold between gesture trail interpolation segments in degree.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailMaxInterpolationDistanceThreshold com.android.inputmethod.latin:gestureTrailMaxInterpolationDistanceThreshold}</code></td><td> Maximum distance threshold between gesture trail interpolation segments.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailMaxInterpolationSegments com.android.inputmethod.latin:gestureTrailMaxInterpolationSegments}</code></td><td> Maximum number of gesture trail interpolation segments.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailMinSamplingDistance com.android.inputmethod.latin:gestureTrailMinSamplingDistance}</code></td><td> Minimum distance between gesture trail sampling points.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailShadowRatio com.android.inputmethod.latin:gestureTrailShadowRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailStartWidth com.android.inputmethod.latin:gestureTrailStartWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_gestureTrailUpdateInterval com.android.inputmethod.latin:gestureTrailUpdateInterval}</code></td><td> Interval of updating gesture trail in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_ignoreAltCodeKeyTimeout com.android.inputmethod.latin:ignoreAltCodeKeyTimeout}</code></td><td> Ignore special key timeout while typing in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyHysteresisDistance com.android.inputmethod.latin:keyHysteresisDistance}</code></td><td> Key detection hysteresis distance.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyHysteresisDistanceForSlidingModifier com.android.inputmethod.latin:keyHysteresisDistanceForSlidingModifier}</code></td><td> Key detection hysteresis distance for shift/symbols sliding input.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewHeight com.android.inputmethod.latin:keyPreviewHeight}</code></td><td> Height of the key press feedback popup.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewLayout com.android.inputmethod.latin:keyPreviewLayout}</code></td><td> Layout resource for key press feedback.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewLingerTimeout com.android.inputmethod.latin:keyPreviewLingerTimeout}</code></td><td> Delay after key releasing and key press feedback dismissing in millisecond </td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyPreviewOffset com.android.inputmethod.latin:keyPreviewOffset}</code></td><td> Vertical offset of the key press feedback from the key.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyRepeatInterval com.android.inputmethod.latin:keyRepeatInterval}</code></td><td> Key repeat interval in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_keyRepeatStartTimeout com.android.inputmethod.latin:keyRepeatStartTimeout}</code></td><td> Key repeat start timeout </td></tr>
           <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarFadeoutAnimator com.android.inputmethod.latin:languageOnSpacebarFadeoutAnimator}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_languageOnSpacebarFinalAlpha com.android.inputmethod.latin:languageOnSpacebarFinalAlpha}</code></td><td> Fadeout animator for spacebar language label.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_longPressShiftLockTimeout com.android.inputmethod.latin:longPressShiftLockTimeout}</code></td><td> Long press timeout of shift key to shift lock in millisecond.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_moreKeysKeyboardLayout com.android.inputmethod.latin:moreKeysKeyboardLayout}</code></td><td> Layout resource for more keys keyboard </td></tr>
           <tr><td><code>{@link #MainKeyboardView_showMoreKeysKeyboardAtTouchedPoint com.android.inputmethod.latin:showMoreKeysKeyboardAtTouchedPoint}</code></td><td> More keys keyboard will shown at touched point.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_slidingKeyInputEnable com.android.inputmethod.latin:slidingKeyInputEnable}</code></td><td> Sliding key input enable </td></tr>
           <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewBodyRatio com.android.inputmethod.latin:slidingKeyInputPreviewBodyRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewColor com.android.inputmethod.latin:slidingKeyInputPreviewColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewShadowRatio com.android.inputmethod.latin:slidingKeyInputPreviewShadowRatio}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_slidingKeyInputPreviewWidth com.android.inputmethod.latin:slidingKeyInputPreviewWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_spacebarTextColor com.android.inputmethod.latin:spacebarTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_spacebarTextRatio com.android.inputmethod.latin:spacebarTextRatio}</code></td><td> Size of the text for spacebar language label, in the proportion of key height.</td></tr>
           <tr><td><code>{@link #MainKeyboardView_spacebarTextShadowColor com.android.inputmethod.latin:spacebarTextShadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #MainKeyboardView_suppressKeyPreviewAfterBatchInputDuration com.android.inputmethod.latin:suppressKeyPreviewAfterBatchInputDuration}</code></td><td> Suppress showing key preview duration after batch input in millisecond </td></tr>
           <tr><td><code>{@link #MainKeyboardView_touchNoiseThresholdDistance com.android.inputmethod.latin:touchNoiseThresholdDistance}</code></td><td> Touch noise threshold distance in millimeter </td></tr>
           <tr><td><code>{@link #MainKeyboardView_touchNoiseThresholdTime com.android.inputmethod.latin:touchNoiseThresholdTime}</code></td><td> Touch noise threshold time in millisecond </td></tr>
           </table>
           @see #MainKeyboardView_altCodeKeyWhileTypingFadeinAnimator
           @see #MainKeyboardView_altCodeKeyWhileTypingFadeoutAnimator
           @see #MainKeyboardView_autoCorrectionSpacebarLedEnabled
           @see #MainKeyboardView_autoCorrectionSpacebarLedIcon
           @see #MainKeyboardView_backgroundDimAlpha
           @see #MainKeyboardView_gestureDetectFastMoveSpeedThreshold
           @see #MainKeyboardView_gestureDynamicDistanceThresholdFrom
           @see #MainKeyboardView_gestureDynamicDistanceThresholdTo
           @see #MainKeyboardView_gestureDynamicThresholdDecayDuration
           @see #MainKeyboardView_gestureDynamicTimeThresholdFrom
           @see #MainKeyboardView_gestureDynamicTimeThresholdTo
           @see #MainKeyboardView_gestureFloatingPreviewColor
           @see #MainKeyboardView_gestureFloatingPreviewHorizontalPadding
           @see #MainKeyboardView_gestureFloatingPreviewRoundRadius
           @see #MainKeyboardView_gestureFloatingPreviewTextColor
           @see #MainKeyboardView_gestureFloatingPreviewTextLingerTimeout
           @see #MainKeyboardView_gestureFloatingPreviewTextOffset
           @see #MainKeyboardView_gestureFloatingPreviewTextSize
           @see #MainKeyboardView_gestureFloatingPreviewVerticalPadding
           @see #MainKeyboardView_gestureRecognitionMinimumTime
           @see #MainKeyboardView_gestureRecognitionSpeedThreshold
           @see #MainKeyboardView_gestureRecognitionUpdateTime
           @see #MainKeyboardView_gestureSamplingMinimumDistance
           @see #MainKeyboardView_gestureStaticTimeThresholdAfterFastTyping
           @see #MainKeyboardView_gestureTrailBodyRatio
           @see #MainKeyboardView_gestureTrailColor
           @see #MainKeyboardView_gestureTrailEndWidth
           @see #MainKeyboardView_gestureTrailFadeoutDuration
           @see #MainKeyboardView_gestureTrailFadeoutStartDelay
           @see #MainKeyboardView_gestureTrailMaxInterpolationAngularThreshold
           @see #MainKeyboardView_gestureTrailMaxInterpolationDistanceThreshold
           @see #MainKeyboardView_gestureTrailMaxInterpolationSegments
           @see #MainKeyboardView_gestureTrailMinSamplingDistance
           @see #MainKeyboardView_gestureTrailShadowRatio
           @see #MainKeyboardView_gestureTrailStartWidth
           @see #MainKeyboardView_gestureTrailUpdateInterval
           @see #MainKeyboardView_ignoreAltCodeKeyTimeout
           @see #MainKeyboardView_keyHysteresisDistance
           @see #MainKeyboardView_keyHysteresisDistanceForSlidingModifier
           @see #MainKeyboardView_keyPreviewHeight
           @see #MainKeyboardView_keyPreviewLayout
           @see #MainKeyboardView_keyPreviewLingerTimeout
           @see #MainKeyboardView_keyPreviewOffset
           @see #MainKeyboardView_keyRepeatInterval
           @see #MainKeyboardView_keyRepeatStartTimeout
           @see #MainKeyboardView_languageOnSpacebarFadeoutAnimator
           @see #MainKeyboardView_languageOnSpacebarFinalAlpha
           @see #MainKeyboardView_longPressShiftLockTimeout
           @see #MainKeyboardView_moreKeysKeyboardLayout
           @see #MainKeyboardView_showMoreKeysKeyboardAtTouchedPoint
           @see #MainKeyboardView_slidingKeyInputEnable
           @see #MainKeyboardView_slidingKeyInputPreviewBodyRatio
           @see #MainKeyboardView_slidingKeyInputPreviewColor
           @see #MainKeyboardView_slidingKeyInputPreviewShadowRatio
           @see #MainKeyboardView_slidingKeyInputPreviewWidth
           @see #MainKeyboardView_spacebarTextColor
           @see #MainKeyboardView_spacebarTextRatio
           @see #MainKeyboardView_spacebarTextShadowColor
           @see #MainKeyboardView_suppressKeyPreviewAfterBatchInputDuration
           @see #MainKeyboardView_touchNoiseThresholdDistance
           @see #MainKeyboardView_touchNoiseThresholdTime
         */
        public static final int[] MainKeyboardView = {
            0x7f010014, 0x7f010015, 0x7f010016, 0x7f010017,
            0x7f010018, 0x7f010019, 0x7f01001a, 0x7f01001b,
            0x7f01001c, 0x7f01001d, 0x7f01001e, 0x7f01001f,
            0x7f010020, 0x7f010021, 0x7f010022, 0x7f010023,
            0x7f010024, 0x7f010025, 0x7f010026, 0x7f010027,
            0x7f010028, 0x7f010029, 0x7f01002a, 0x7f01002b,
            0x7f01002c, 0x7f01002d, 0x7f01002e, 0x7f01002f,
            0x7f010030, 0x7f010031, 0x7f010032, 0x7f010033,
            0x7f010034, 0x7f010035, 0x7f010036, 0x7f010037,
            0x7f010038, 0x7f010039, 0x7f01003a, 0x7f01003b,
            0x7f01003c, 0x7f01003d, 0x7f01003e, 0x7f01003f,
            0x7f010040, 0x7f010041, 0x7f010042, 0x7f010043,
            0x7f010044, 0x7f010045, 0x7f010046, 0x7f010047,
            0x7f010048, 0x7f010049, 0x7f01004a, 0x7f01004b,
            0x7f01004c, 0x7f01004d, 0x7f01004e, 0x7f01004f,
            0x7f010050
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#altCodeKeyWhileTypingFadeinAnimator}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:altCodeKeyWhileTypingFadeinAnimator
        */
        public static final int MainKeyboardView_altCodeKeyWhileTypingFadeinAnimator = 8;
        /**
          <p>
          @attr description
           Fadeout and fadein animator for altCodeWhileTyping keys. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:altCodeKeyWhileTypingFadeoutAnimator
        */
        public static final int MainKeyboardView_altCodeKeyWhileTypingFadeoutAnimator = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#autoCorrectionSpacebarLedEnabled}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:autoCorrectionSpacebarLedEnabled
        */
        public static final int MainKeyboardView_autoCorrectionSpacebarLedEnabled = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#autoCorrectionSpacebarLedIcon}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:autoCorrectionSpacebarLedIcon
        */
        public static final int MainKeyboardView_autoCorrectionSpacebarLedIcon = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#backgroundDimAlpha}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:backgroundDimAlpha
        */
        public static final int MainKeyboardView_backgroundDimAlpha = 27;
        /**
          <p>
          @attr description
           Static threshold for starting gesture detection (keyWidth%/sec) 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureDetectFastMoveSpeedThreshold
        */
        public static final int MainKeyboardView_gestureDetectFastMoveSpeedThreshold = 50;
        /**
          <p>
          @attr description
           Distance based threshold values for gesture detection (keyWidth%/sec) 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureDynamicDistanceThresholdFrom
        */
        public static final int MainKeyboardView_gestureDynamicDistanceThresholdFrom = 54;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureDynamicDistanceThresholdTo}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureDynamicDistanceThresholdTo
        */
        public static final int MainKeyboardView_gestureDynamicDistanceThresholdTo = 55;
        /**
          <p>
          @attr description
           Dynamic threshold for gesture after fast typing (msec) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureDynamicThresholdDecayDuration
        */
        public static final int MainKeyboardView_gestureDynamicThresholdDecayDuration = 51;
        /**
          <p>
          @attr description
           Time based threshold values for gesture detection (msec) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureDynamicTimeThresholdFrom
        */
        public static final int MainKeyboardView_gestureDynamicTimeThresholdFrom = 52;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureDynamicTimeThresholdTo}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureDynamicTimeThresholdTo
        */
        public static final int MainKeyboardView_gestureDynamicTimeThresholdTo = 53;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureFloatingPreviewColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureFloatingPreviewColor
        */
        public static final int MainKeyboardView_gestureFloatingPreviewColor = 45;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureFloatingPreviewHorizontalPadding}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureFloatingPreviewHorizontalPadding
        */
        public static final int MainKeyboardView_gestureFloatingPreviewHorizontalPadding = 46;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureFloatingPreviewRoundRadius}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureFloatingPreviewRoundRadius
        */
        public static final int MainKeyboardView_gestureFloatingPreviewRoundRadius = 48;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureFloatingPreviewTextColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureFloatingPreviewTextColor
        */
        public static final int MainKeyboardView_gestureFloatingPreviewTextColor = 43;
        /**
          <p>
          @attr description
           Delay after gesture input and gesture floating preview text dismissing in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureFloatingPreviewTextLingerTimeout
        */
        public static final int MainKeyboardView_gestureFloatingPreviewTextLingerTimeout = 41;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureFloatingPreviewTextOffset}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureFloatingPreviewTextOffset
        */
        public static final int MainKeyboardView_gestureFloatingPreviewTextOffset = 44;
        /**
          <p>
          @attr description
           Attributes for GestureFloatingPreviewText 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureFloatingPreviewTextSize
        */
        public static final int MainKeyboardView_gestureFloatingPreviewTextSize = 42;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureFloatingPreviewVerticalPadding}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureFloatingPreviewVerticalPadding
        */
        public static final int MainKeyboardView_gestureFloatingPreviewVerticalPadding = 47;
        /**
          <p>
          @attr description
           Parameters for gesture recognition (msec) and (keyWidth%/sec) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureRecognitionMinimumTime
        */
        public static final int MainKeyboardView_gestureRecognitionMinimumTime = 57;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureRecognitionSpeedThreshold}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureRecognitionSpeedThreshold
        */
        public static final int MainKeyboardView_gestureRecognitionSpeedThreshold = 59;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureRecognitionUpdateTime}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureRecognitionUpdateTime
        */
        public static final int MainKeyboardView_gestureRecognitionUpdateTime = 58;
        /**
          <p>
          @attr description
           Parameter for gesture sampling (keyWidth%/sec) 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureSamplingMinimumDistance
        */
        public static final int MainKeyboardView_gestureSamplingMinimumDistance = 56;
        /**
          <p>
          @attr description
           Static threshold for gesture after fast typing (msec) 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureStaticTimeThresholdAfterFastTyping
        */
        public static final int MainKeyboardView_gestureStaticTimeThresholdAfterFastTyping = 49;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureTrailBodyRatio}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureTrailBodyRatio
        */
        public static final int MainKeyboardView_gestureTrailBodyRatio = 39;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureTrailColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureTrailColor
        */
        public static final int MainKeyboardView_gestureTrailColor = 36;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureTrailEndWidth}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureTrailEndWidth
        */
        public static final int MainKeyboardView_gestureTrailEndWidth = 38;
        /**
          <p>
          @attr description
           Duration while gesture trail is fading out in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureTrailFadeoutDuration
        */
        public static final int MainKeyboardView_gestureTrailFadeoutDuration = 34;
        /**
          <p>
          @attr description
           Delay after gesture trail starts fading out in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureTrailFadeoutStartDelay
        */
        public static final int MainKeyboardView_gestureTrailFadeoutStartDelay = 33;
        /**
          <p>
          @attr description
           Maximum angular threshold between gesture trail interpolation segments in degree. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureTrailMaxInterpolationAngularThreshold
        */
        public static final int MainKeyboardView_gestureTrailMaxInterpolationAngularThreshold = 30;
        /**
          <p>
          @attr description
           Maximum distance threshold between gesture trail interpolation segments. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureTrailMaxInterpolationDistanceThreshold
        */
        public static final int MainKeyboardView_gestureTrailMaxInterpolationDistanceThreshold = 31;
        /**
          <p>
          @attr description
           Maximum number of gesture trail interpolation segments. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureTrailMaxInterpolationSegments
        */
        public static final int MainKeyboardView_gestureTrailMaxInterpolationSegments = 32;
        /**
          <p>
          @attr description
           Minimum distance between gesture trail sampling points. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureTrailMinSamplingDistance
        */
        public static final int MainKeyboardView_gestureTrailMinSamplingDistance = 29;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureTrailShadowRatio}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureTrailShadowRatio
        */
        public static final int MainKeyboardView_gestureTrailShadowRatio = 40;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#gestureTrailStartWidth}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:gestureTrailStartWidth
        */
        public static final int MainKeyboardView_gestureTrailStartWidth = 37;
        /**
          <p>
          @attr description
           Interval of updating gesture trail in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:gestureTrailUpdateInterval
        */
        public static final int MainKeyboardView_gestureTrailUpdateInterval = 35;
        /**
          <p>
          @attr description
           Ignore special key timeout while typing in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:ignoreAltCodeKeyTimeout
        */
        public static final int MainKeyboardView_ignoreAltCodeKeyTimeout = 21;
        /**
          <p>
          @attr description
           Key detection hysteresis distance. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyHysteresisDistance
        */
        public static final int MainKeyboardView_keyHysteresisDistance = 9;
        /**
          <p>
          @attr description
           Key detection hysteresis distance for shift/symbols sliding input. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyHysteresisDistanceForSlidingModifier
        */
        public static final int MainKeyboardView_keyHysteresisDistanceForSlidingModifier = 10;
        /**
          <p>
          @attr description
           Height of the key press feedback popup. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyPreviewHeight
        */
        public static final int MainKeyboardView_keyPreviewHeight = 24;
        /**
          <p>
          @attr description
           Layout resource for key press feedback.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyPreviewLayout
        */
        public static final int MainKeyboardView_keyPreviewLayout = 22;
        /**
          <p>
          @attr description
           Delay after key releasing and key press feedback dismissing in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyPreviewLingerTimeout
        */
        public static final int MainKeyboardView_keyPreviewLingerTimeout = 25;
        /**
          <p>
          @attr description
           Vertical offset of the key press feedback from the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyPreviewOffset
        */
        public static final int MainKeyboardView_keyPreviewOffset = 23;
        /**
          <p>
          @attr description
           Key repeat interval in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyRepeatInterval
        */
        public static final int MainKeyboardView_keyRepeatInterval = 19;
        /**
          <p>
          @attr description
           Key repeat start timeout 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:keyRepeatStartTimeout
        */
        public static final int MainKeyboardView_keyRepeatStartTimeout = 18;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#languageOnSpacebarFadeoutAnimator}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.inputmethod.latin:languageOnSpacebarFadeoutAnimator
        */
        public static final int MainKeyboardView_languageOnSpacebarFadeoutAnimator = 6;
        /**
          <p>
          @attr description
           Fadeout animator for spacebar language label. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:languageOnSpacebarFinalAlpha
        */
        public static final int MainKeyboardView_languageOnSpacebarFinalAlpha = 5;
        /**
          <p>
          @attr description
           Long press timeout of shift key to shift lock in millisecond. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:longPressShiftLockTimeout
        */
        public static final int MainKeyboardView_longPressShiftLockTimeout = 20;
        /**
          <p>
          @attr description
           Layout resource for more keys keyboard 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:moreKeysKeyboardLayout
        */
        public static final int MainKeyboardView_moreKeysKeyboardLayout = 26;
        /**
          <p>
          @attr description
           More keys keyboard will shown at touched point. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:showMoreKeysKeyboardAtTouchedPoint
        */
        public static final int MainKeyboardView_showMoreKeysKeyboardAtTouchedPoint = 28;
        /**
          <p>
          @attr description
           Sliding key input enable 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:slidingKeyInputEnable
        */
        public static final int MainKeyboardView_slidingKeyInputEnable = 13;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#slidingKeyInputPreviewBodyRatio}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:slidingKeyInputPreviewBodyRatio
        */
        public static final int MainKeyboardView_slidingKeyInputPreviewBodyRatio = 16;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#slidingKeyInputPreviewColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:slidingKeyInputPreviewColor
        */
        public static final int MainKeyboardView_slidingKeyInputPreviewColor = 14;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#slidingKeyInputPreviewShadowRatio}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:slidingKeyInputPreviewShadowRatio
        */
        public static final int MainKeyboardView_slidingKeyInputPreviewShadowRatio = 17;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#slidingKeyInputPreviewWidth}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:slidingKeyInputPreviewWidth
        */
        public static final int MainKeyboardView_slidingKeyInputPreviewWidth = 15;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#spacebarTextColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:spacebarTextColor
        */
        public static final int MainKeyboardView_spacebarTextColor = 3;
        /**
          <p>
          @attr description
           Size of the text for spacebar language label, in the proportion of key height. 


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:spacebarTextRatio
        */
        public static final int MainKeyboardView_spacebarTextRatio = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#spacebarTextShadowColor}
          attribute's value can be found in the {@link #MainKeyboardView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:spacebarTextShadowColor
        */
        public static final int MainKeyboardView_spacebarTextShadowColor = 4;
        /**
          <p>
          @attr description
           Suppress showing key preview duration after batch input in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:suppressKeyPreviewAfterBatchInputDuration
        */
        public static final int MainKeyboardView_suppressKeyPreviewAfterBatchInputDuration = 60;
        /**
          <p>
          @attr description
           Touch noise threshold distance in millimeter 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:touchNoiseThresholdDistance
        */
        public static final int MainKeyboardView_touchNoiseThresholdDistance = 12;
        /**
          <p>
          @attr description
           Touch noise threshold time in millisecond 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.inputmethod.latin:touchNoiseThresholdTime
        */
        public static final int MainKeyboardView_touchNoiseThresholdTime = 11;
        /** Attributes that can be used with a SeekBarDialogPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SeekBarDialogPreference_maxValue com.android.inputmethod.latin:maxValue}</code></td><td></td></tr>
           <tr><td><code>{@link #SeekBarDialogPreference_minValue com.android.inputmethod.latin:minValue}</code></td><td></td></tr>
           <tr><td><code>{@link #SeekBarDialogPreference_stepValue com.android.inputmethod.latin:stepValue}</code></td><td></td></tr>
           </table>
           @see #SeekBarDialogPreference_maxValue
           @see #SeekBarDialogPreference_minValue
           @see #SeekBarDialogPreference_stepValue
         */
        public static final int[] SeekBarDialogPreference = {
            0x7f0100b4, 0x7f0100b5, 0x7f0100b6
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#maxValue}
          attribute's value can be found in the {@link #SeekBarDialogPreference} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:maxValue
        */
        public static final int SeekBarDialogPreference_maxValue = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#minValue}
          attribute's value can be found in the {@link #SeekBarDialogPreference} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:minValue
        */
        public static final int SeekBarDialogPreference_minValue = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#stepValue}
          attribute's value can be found in the {@link #SeekBarDialogPreference} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:stepValue
        */
        public static final int SeekBarDialogPreference_stepValue = 2;
        /** Attributes that can be used with a SuggestionStripView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SuggestionStripView_alphaObsoleted com.android.inputmethod.latin:alphaObsoleted}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_centerSuggestionPercentile com.android.inputmethod.latin:centerSuggestionPercentile}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_colorAutoCorrect com.android.inputmethod.latin:colorAutoCorrect}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_colorSuggested com.android.inputmethod.latin:colorSuggested}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_colorTypedWord com.android.inputmethod.latin:colorTypedWord}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_colorValidTypedWord com.android.inputmethod.latin:colorValidTypedWord}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_maxMoreSuggestionsRow com.android.inputmethod.latin:maxMoreSuggestionsRow}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_minMoreSuggestionsWidth com.android.inputmethod.latin:minMoreSuggestionsWidth}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_suggestionStripOption com.android.inputmethod.latin:suggestionStripOption}</code></td><td></td></tr>
           <tr><td><code>{@link #SuggestionStripView_suggestionsCountInStrip com.android.inputmethod.latin:suggestionsCountInStrip}</code></td><td></td></tr>
           </table>
           @see #SuggestionStripView_alphaObsoleted
           @see #SuggestionStripView_centerSuggestionPercentile
           @see #SuggestionStripView_colorAutoCorrect
           @see #SuggestionStripView_colorSuggested
           @see #SuggestionStripView_colorTypedWord
           @see #SuggestionStripView_colorValidTypedWord
           @see #SuggestionStripView_maxMoreSuggestionsRow
           @see #SuggestionStripView_minMoreSuggestionsWidth
           @see #SuggestionStripView_suggestionStripOption
           @see #SuggestionStripView_suggestionsCountInStrip
         */
        public static final int[] SuggestionStripView = {
            0x7f010052, 0x7f010053, 0x7f010054, 0x7f010055,
            0x7f010056, 0x7f010057, 0x7f010058, 0x7f010059,
            0x7f01005a, 0x7f01005b
        };
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#alphaObsoleted}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:alphaObsoleted
        */
        public static final int SuggestionStripView_alphaObsoleted = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#centerSuggestionPercentile}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a fractional value, which is a floating point number appended with either % or %p, such as "<code>14.5%</code>".
The % suffix always means a percentage of the base size; the optional %p suffix provides a size relative to
some parent container.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:centerSuggestionPercentile
        */
        public static final int SuggestionStripView_centerSuggestionPercentile = 7;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#colorAutoCorrect}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:colorAutoCorrect
        */
        public static final int SuggestionStripView_colorAutoCorrect = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#colorSuggested}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:colorSuggested
        */
        public static final int SuggestionStripView_colorSuggested = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#colorTypedWord}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:colorTypedWord
        */
        public static final int SuggestionStripView_colorTypedWord = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#colorValidTypedWord}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:colorValidTypedWord
        */
        public static final int SuggestionStripView_colorValidTypedWord = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#maxMoreSuggestionsRow}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:maxMoreSuggestionsRow
        */
        public static final int SuggestionStripView_maxMoreSuggestionsRow = 8;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#minMoreSuggestionsWidth}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:minMoreSuggestionsWidth
        */
        public static final int SuggestionStripView_minMoreSuggestionsWidth = 9;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#suggestionStripOption}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>autoCorrectBold</code></td><td>0x01</td><td> This should be aligned with SuggestionStripLayoutHelper.AUTO_CORRECT_* and etc. </td></tr>
<tr><td><code>autoCorrectUnderline</code></td><td>0x02</td><td></td></tr>
<tr><td><code>validTypedWordBold</code></td><td>0x04</td><td></td></tr>
</table>
          @attr name com.android.inputmethod.latin:suggestionStripOption
        */
        public static final int SuggestionStripView_suggestionStripOption = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.inputmethod.latin.R.attr#suggestionsCountInStrip}
          attribute's value can be found in the {@link #SuggestionStripView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.inputmethod.latin:suggestionsCountInStrip
        */
        public static final int SuggestionStripView_suggestionsCountInStrip = 6;
    };
}
