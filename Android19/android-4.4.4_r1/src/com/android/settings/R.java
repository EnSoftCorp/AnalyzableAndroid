/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.settings;

public final class R {
    public static final class array {
        /**  Titles for animator duration scale preference. [CHAR LIMIT=35] 
         */
        public static final int animator_duration_scale_entries=0x7f07004e;
        /**  Values for animator duration scale preference. 
         */
        public static final int animator_duration_scale_values=0x7f07004f;
        /**  Authentication Types used in APN editor 
         */
        public static final int apn_auth_entries=0x7f070029;
        public static final int apn_auth_values=0x7f07002a;
        /**  Authentication Types used in APN editor 
         */
        public static final int apn_protocol_entries=0x7f07002b;
        public static final int apn_protocol_values=0x7f07002c;
        /**  Apps on SD installation location options in ApplicationSettings 
 no translation found for apn_protocol_entries:0 (4852355456199302715) 
 no translation found for apn_protocol_entries:1 (4394161344888484571) 
 no translation found for apn_protocol_entries:2 (8084938354605535381) 
 no translation found for bearer_entries:0 (1770285336669531300) 
 no translation found for bearer_entries:1 (3044323519470167625) 
 no translation found for bearer_entries:2 (6848428671997893147) 
 no translation found for mvno_type_entries:0 (4367119357633573465) 
 no translation found for mvno_type_entries:1 (6062567900587138000) 
 no translation found for mvno_type_entries:2 (2454085083342423481) 
 no translation found for mvno_type_entries:3 (2681427309183221543) 
         */
        public static final int app_install_location_entries=0x7f070031;
        /**  Do not translate. 
         */
        public static final int app_install_location_values=0x7f070032;
        /**  Names of categories of app ops tabs 
         */
        public static final int app_ops_categories=0x7f070033;
        /**  User display names for app ops codes 
         */
        public static final int app_ops_labels=0x7f070035;
        /**  User display names for app ops codes 
         */
        public static final int app_ops_summaries=0x7f070034;
        /**  Titles for app process limit preference. [CHAR LIMIT=35] 
 no translation found for debug_hw_overdraw_entries:2 (2290859360633824369) 
 no translation found for debug_hw_overdraw_entries:3 (3448087929560624983) 
         */
        public static final int app_process_limit_entries=0x7f07005a;
        /**  Values for app process limit preference. 
         */
        public static final int app_process_limit_values=0x7f07005b;
        /**  Bearer Info used in APN editor 
         */
        public static final int bearer_entries=0x7f07002d;
        public static final int bearer_values=0x7f07002e;
        /**  Bluetooth Settings 
 Discoverable mode timeout options 
         */
        public static final int bluetooth_visibility_timeout_entries=0x7f070018;
        /**  Titles for captioning color preference. 
         */
        public static final int captioning_color_selector_titles=0x7f07003e;
        /**  Values for captioning color preference. 
         */
        public static final int captioning_color_selector_values=0x7f07003f;
        /**  Titles for captioning character edge type preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_edge_type_selector_titles=0x7f07003c;
        /**  Values for captioning character edge type preference. 
         */
        public static final int captioning_edge_type_selector_values=0x7f07003d;
        /**  Titles for captioning font size preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_font_size_selector_titles=0x7f07003a;
        /**  Values for captioning font size preference. 
         */
        public static final int captioning_font_size_selector_values=0x7f07003b;
        /**  Titles for captioning opacity preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_opacity_selector_titles=0x7f070040;
        /**  Values for captioning opacity preference. 
         */
        public static final int captioning_opacity_selector_values=0x7f070041;
        /**  Titles for captioning text style preset preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_preset_selector_titles=0x7f070042;
        /**  Values for captioning text style preset preference. 
         */
        public static final int captioning_preset_selector_values=0x7f070043;
        /**  Titles for captioning typeface preference. [CHAR LIMIT=35] 
         */
        public static final int captioning_typeface_selector_titles=0x7f070038;
        /**  Values for captioning typeface preference. 
         */
        public static final int captioning_typeface_selector_values=0x7f070039;
        /**  There is a setting to control the format of dates displayed throughout the system.  This is in the Date & Time Settings screen.  These will be adjusted to use punctuation appropriate to the user's locale. 
         */
        public static final int date_format_values=0x7f070001;
        /**  Titles for debug overdraw preference. [CHAR LIMIT=50] 
         */
        public static final int debug_hw_overdraw_entries=0x7f070058;
        /**  Values for debug overdraw preference. 
         */
        public static final int debug_hw_overdraw_values=0x7f070059;
        /**  Display settings.  The delay in inactivity before the dream is shown. These are shown in a list dialog. 
         */
        public static final int dream_timeout_entries=0x7f070004;
        /**  Do not translate. 
         */
        public static final int dream_timeout_values=0x7f070005;
        /**  Sound settings for emergency tone. 
 no translation found for wifi_ip_settings:0 (3906714200993111074) 
 no translation found for wifi_ip_settings:1 (628395202971532382) 
 no translation found for wifi_proxy_settings:0 (4473276491748503377) 
 no translation found for wifi_proxy_settings:1 (8673874894887358090) 
         */
        public static final int emergency_tone_entries=0x7f070025;
        /**  Do not translate. 
         */
        public static final int emergency_tone_values=0x7f070026;
        /**  Titles for OpenGL traces preference. [CHAR LIMIT=35] 
 no translation found for overlay_display_devices_entries:2 (6027541158956821790) 
 no translation found for overlay_display_devices_entries:3 (8181151155909301030) 
 no translation found for overlay_display_devices_entries:4 (2920655562462493148) 
 no translation found for overlay_display_devices_entries:5 (8910371271391940941) 
 no translation found for overlay_display_devices_entries:6 (4171600481380800455) 
 no translation found for overlay_display_devices_entries:7 (1937752114395156918) 
         */
        public static final int enable_opengl_traces_entries=0x7f070052;
        /**  Values for OpenGL traces preference. 
         */
        public static final int enable_opengl_traces_values=0x7f070053;
        public static final int entries_font_size=0x7f070008;
        public static final int entryvalues_font_size=0x7f070009;
        /**  Summaries for HDCP checking preference. [CHAR LIMIT=100]
         */
        public static final int hdcp_checking_summaries=0x7f070049;
        /**  Titles for HDCP checking preference. [CHAR LIMIT=35] 
 no translation found for captioning_typeface_selector_titles:0 (1319652728542138112) 
 no translation found for captioning_typeface_selector_titles:1 (1016452621833735880) 
 no translation found for captioning_typeface_selector_titles:2 (2496277987934654454) 
 no translation found for captioning_typeface_selector_titles:3 (4406003087391086325) 
 no translation found for captioning_typeface_selector_titles:4 (1558362802170124073) 
 no translation found for captioning_font_size_selector_titles:0 (4800919809575254054) 
 no translation found for captioning_font_size_selector_titles:1 (6781094565687692782) 
 no translation found for captioning_font_size_selector_titles:2 (8222123259497646551) 
 no translation found for captioning_font_size_selector_titles:3 (5813217276778560466) 
 no translation found for captioning_font_size_selector_titles:4 (9044232017390975191) 
 no translation found for captioning_edge_type_selector_titles:0 (6022616153255438487) 
 no translation found for captioning_edge_type_selector_titles:1 (1352974708028506778) 
 no translation found for captioning_edge_type_selector_titles:2 (5850876295428722675) 
 no translation found for captioning_opacity_selector_titles:0 (7622491218136667566) 
 no translation found for captioning_opacity_selector_titles:1 (2367156416247936773) 
 no translation found for captioning_opacity_selector_titles:2 (5395560410107149298) 
 no translation found for captioning_opacity_selector_titles:3 (8342334626783983353) 
 no translation found for captioning_preset_selector_titles:0 (1630625150404038035) 
 no translation found for captioning_preset_selector_titles:1 (4589278788192525675) 
 no translation found for captioning_preset_selector_titles:2 (1309255027325660115) 
 no translation found for captioning_preset_selector_titles:3 (2985943780939258562) 
 no translation found for captioning_preset_selector_titles:4 (7520438652121629055) 
 no translation found for select_runtime_titles:0 (3574453009229338122) 
 no translation found for select_runtime_titles:1 (8978402910750533864) 
 no translation found for select_runtime_titles:2 (7839859333977894115) 
 no translation found for select_runtime_summaries:0 (6412880178297884701) 
 no translation found for select_runtime_summaries:1 (5131846588686178907) 
 no translation found for select_runtime_summaries:2 (4530003713865319928) 
         */
        public static final int hdcp_checking_titles=0x7f070047;
        /**  Values for HDCP checking preference. 
         */
        public static final int hdcp_checking_values=0x7f070048;
        public static final int input_method_selector_titles=0x7f070063;
        public static final int input_method_selector_values=0x7f070064;
        /**  Security settings.  The delay after screen is turned off until device locks.
         These are shown in a list dialog. 
         */
        public static final int lock_after_timeout_entries=0x7f070006;
        /**  Do not translate. 
         */
        public static final int lock_after_timeout_values=0x7f070007;
        /**  Titles for the list of long press timeout options. 
 no translation found for app_ops_labels:14 (2623604824935968113) 
 no translation found for app_ops_labels:15 (4420177125221176306) 
 no translation found for app_ops_labels:21 (3527273606643794973) 
 no translation found for app_ops_labels:22 (4370895547001583812) 
 no translation found for app_ops_summaries:41 (26109888160231211) 
 no translation found for app_ops_summaries:42 (5753382310468855812) 
 no translation found for app_ops_labels:14 (2623604824935968113) 
 no translation found for app_ops_labels:15 (4420177125221176306) 
 no translation found for app_ops_labels:21 (3527273606643794973) 
 no translation found for app_ops_labels:22 (4370895547001583812) 
 no translation found for app_ops_labels:41 (8584357129746649222) 
 no translation found for app_ops_labels:42 (7669257279311110599) 
 no translation found for app_ops_labels:14 (2623604824935968113) 
 no translation found for app_ops_labels:15 (4420177125221176306) 
 no translation found for app_ops_labels:21 (3527273606643794973) 
 no translation found for app_ops_labels:22 (4370895547001583812) 
 no translation found for app_ops_labels:14 (2623604824935968113) 
 no translation found for app_ops_labels:15 (4420177125221176306) 
 no translation found for app_ops_labels:21 (3527273606643794973) 
 no translation found for app_ops_labels:22 (4370895547001583812) 
         */
        public static final int long_press_timeout_selector_titles=0x7f070036;
        /**  Values for the list of long press timeout options. 
         */
        public static final int long_press_timeout_selector_values=0x7f070037;
        /**  MVNO Info used in APN editor 
         */
        public static final int mvno_type_entries=0x7f07002f;
        public static final int mvno_type_values=0x7f070030;
        /**  Titles for overlay display devices preference. [CHAR LIMIT=35] 
         */
        public static final int overlay_display_devices_entries=0x7f070050;
        /**  Values for overlay display devices preference. 
         */
        public static final int overlay_display_devices_values=0x7f070051;
        /**  [CHAR LIMIT=30] Labels for memory states 
         */
        public static final int ram_states=0x7f070062;
        /**  Display settings.  The delay in inactivity before the screen is turned off. These are shown in a list dialog. 
         */
        public static final int screen_timeout_entries=0x7f070002;
        /**  Do not translate. 
         */
        public static final int screen_timeout_values=0x7f070003;
        /**  Values for premium SMS permission selector [CHAR LIMIT=30] 
         */
        public static final int security_settings_premium_sms_values=0x7f070061;
        /**  Summaries for runtime selection preference. [CHAR LIMIT=100]
         */
        public static final int select_runtime_summaries=0x7f070046;
        /**  Titles for runtime selection preference. [CHAR LIMIT=35] 
 no translation found for captioning_preset_selector_titles:0 (1630625150404038035) 
 no translation found for captioning_preset_selector_titles:1 (4589278788192525675) 
 no translation found for captioning_preset_selector_titles:0 (1630625150404038035) 
 no translation found for captioning_preset_selector_titles:1 (4589278788192525675) 
 no translation found for captioning_preset_selector_titles:0 (1630625150404038035) 
 no translation found for captioning_preset_selector_titles:1 (4589278788192525675) 
 no translation found for captioning_preset_selector_titles:0 (1630625150404038035) 
 no translation found for captioning_preset_selector_titles:1 (4589278788192525675) 
 no translation found for captioning_preset_selector_titles:0 (1630625150404038035) 
 no translation found for captioning_preset_selector_titles:1 (4589278788192525675) 
 no translation found for captioning_preset_selector_titles:0 (1630625150404038035) 
 no translation found for captioning_preset_selector_titles:1 (4589278788192525675) 
 no translation found for captioning_preset_selector_titles:0 (1630625150404038035) 
 no translation found for captioning_preset_selector_titles:1 (4589278788192525675) 
         */
        public static final int select_runtime_titles=0x7f070044;
        /**  Values for runtime selection preference. 
         */
        public static final int select_runtime_values=0x7f070045;
        /**  Titles for non-rectangular clipping preference. [CHAR LIMIT=35] 
         */
        public static final int show_non_rect_clip_entries=0x7f070054;
        /**  Values for non-rectangular clipping preference. 
         */
        public static final int show_non_rect_clip_values=0x7f070055;
        /**  Locales in this list are displayed with the corresponding
         name from special_locale_names instead of using the name
         from Locale.getDisplayName(). 
         */
        public static final int special_locale_codes=0x7f070027;
        public static final int special_locale_names=0x7f070028;
        /**  The time zone picker screen has two levels.  The first level allows the user to choose a region. 
         */
        public static final int timezone_filters=0x7f070000;
        /**  Titles for frame time tracking preference. [CHAR LIMIT=35] 
         */
        public static final int track_frame_time_entries=0x7f070056;
        /**  Values for frame time tracking preference. 
         */
        public static final int track_frame_time_values=0x7f070057;
        /**  Titles for transition animation scale preference. [CHAR LIMIT=35] 
         */
        public static final int transition_animation_scale_entries=0x7f07004c;
        /**  Values for transition animation scale preference. 
         */
        public static final int transition_animation_scale_values=0x7f07004d;
        public static final int tts_demo_string_langs=0x7f07000f;
        /**  Do not translate. 
         */
        public static final int tts_demo_strings=0x7f07000e;
        /**  Default pitch choices 
 no translation found for screen_timeout_entries:4 (7489864775127957179) 
 no translation found for screen_timeout_entries:5 (2314124409517439288) 
 no translation found for screen_timeout_entries:6 (6864027152847611413) 
 no translation found for dream_timeout_entries:0 (3149294732238283185) 
 no translation found for dream_timeout_entries:1 (2194151041885903260) 
 no translation found for dream_timeout_entries:2 (5892295237131074341) 
 no translation found for dream_timeout_entries:3 (3538441365970038213) 
 no translation found for dream_timeout_entries:4 (412343871668955639) 
 no translation found for dream_timeout_entries:5 (5076853889688991690) 
 no translation found for dream_timeout_entries:6 (1903860996174927898) 
 no translation found for dream_timeout_entries:7 (6415509612413178727) 
 no translation found for lock_after_timeout_entries:0 (8929270399652145290) 
 no translation found for lock_after_timeout_entries:1 (6736512735606834431) 
 no translation found for lock_after_timeout_entries:2 (8044619388267891375) 
 no translation found for lock_after_timeout_entries:3 (1822002388249545488) 
 no translation found for lock_after_timeout_entries:4 (8538071621211916519) 
 no translation found for lock_after_timeout_entries:5 (5663439580228932882) 
 no translation found for lock_after_timeout_entries:6 (49888496216106852) 
 no translation found for lock_after_timeout_entries:7 (9002737361305019353) 
 no translation found for lock_after_timeout_entries:8 (4322676235684793329) 
 no translation found for entries_font_size:0 (8166647333858618801) 
 no translation found for entries_font_size:0 (6490061470416867723) 
 no translation found for entries_font_size:1 (1932071435506638315) 
 no translation found for entries_font_size:1 (3579015730662088893) 
 no translation found for entries_font_size:2 (38373998008112077) 
 no translation found for entries_font_size:2 (1678068858001018666) 
 no translation found for entries_font_size:3 (7786168277516233536) 
 no translation found for entries_font_size:3 (490158884605093126) 
 no translation found for tts_rate_entries:4 (1370673569131070146) 
 no translation found for tts_rate_entries:5 (4648206845228970803) 
 no translation found for tts_rate_entries:6 (4977949754169483251) 
 no translation found for tts_rate_entries:7 (6106302964845503577) 
 no translation found for tts_rate_entries:8 (6800277205640837264) 
         */
        public static final int tts_pitch_entries=0x7f07000c;
        /**  Do not translate. 
         */
        public static final int tts_pitch_values=0x7f07000d;
        /**  TTS settings 
 Default speech rate choices 
         */
        public static final int tts_rate_entries=0x7f07000a;
        /**  Do not translate. 
         */
        public static final int tts_rate_values=0x7f07000b;
        /**  Display options for UsageStats class 
         */
        public static final int usage_stats_display_order_types=0x7f07001f;
        /**  User content ratings for restricted users [CHAR LIMIT=30] 
         */
        public static final int user_content_ratings_entries=0x7f07005f;
        /**  Values for user content ratings for restricted users 
         */
        public static final int user_content_ratings_values=0x7f070060;
        /**  Status for a VPN network. [CHAR LIMIT=100] 
         */
        public static final int vpn_states=0x7f07005e;
        /**  Short names for each VPN type, not really translatable. [CHAR LIMIT=20] 
         */
        public static final int vpn_types=0x7f07005c;
        /**  Longer descriptions for each VPN type. [CHAR LIMIT=100] 
         */
        public static final int vpn_types_long=0x7f07005d;
        /**  Wi-Fi AP settings.  The type of security a Wi-Fi AP supports. 
 Note that adding/removing/moving the items will need wifi settings code change. 
         */
        public static final int wifi_ap_security=0x7f070014;
        /**  EAP method 
         */
        public static final int wifi_eap_entries=0x7f070020;
        /**  Wi-Fi settings.  The type of EAP method a Wi-Fi network has. 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
         */
        public static final int wifi_eap_method=0x7f070015;
        /**  Wi-Fi settings. Presented as a list dialog to the user to choose the Wi-Fi frequency band. 
         */
        public static final int wifi_frequency_band_entries=0x7f07001d;
        /**  Match with wifi_frequency_band_entries and the values of the settings in WifiManager. 
 Do not translate. 
         */
        public static final int wifi_frequency_band_values=0x7f07001e;
        /**  Wi-Fi IP settings. 
 Note that adding/removing/moving the items will need wifi settings code change. 
         */
        public static final int wifi_ip_settings=0x7f070023;
        /**  Match this with the order of WifiP2pDevice.Status 
 Wi-Fi p2p settings device status message 
         */
        public static final int wifi_p2p_status=0x7f070017;
        /**  Wi-Fi WPS setup for p2p connections.  
 Note that adding/removing/moving the items will need wifi settings code change. 
         */
        public static final int wifi_p2p_wps_setup=0x7f070016;
        /**  Phase 2 options for PEAP 
         */
        public static final int wifi_peap_phase2_entries=0x7f070021;
        /**  Phase 2 options for rest of EAP methods 
 no translation found for wifi_sleep_policy_entries:0 (3269131034472904310) 
 no translation found for wifi_sleep_policy_entries:1 (844721238536786870) 
 no translation found for wifi_sleep_policy_entries:2 (2990218920631468642) 
 no translation found for wifi_sleep_policy_entries_wifi_only:0 (2124319326282651391) 
 no translation found for wifi_sleep_policy_entries_wifi_only:1 (7433294150916905997) 
 no translation found for wifi_sleep_policy_entries_wifi_only:2 (1390404486722375028) 
 no translation found for wifi_frequency_band_entries:0 (624340809384223320) 
 no translation found for wifi_frequency_band_entries:1 (6670588712989942178) 
 no translation found for wifi_frequency_band_entries:2 (2715516524973207876) 
 no translation found for usage_stats_display_order_types:0 (2100172576767439288) 
 no translation found for usage_stats_display_order_types:1 (3703676222230317933) 
 no translation found for usage_stats_display_order_types:2 (2502754479975776899) 
 no translation found for wifi_eap_entries:3 (2318274046749286642) 
 no translation found for wifi_peap_phase2_entries:0 (2577747762745812488) 
 no translation found for wifi_peap_phase2_entries:1 (937786527870979616) 
 no translation found for wifi_peap_phase2_entries:2 (5302613883318643629) 
         */
        public static final int wifi_phase2_entries=0x7f070022;
        /**  Wi-Fi proxy settings. 
 Note that adding/removing/moving the items will need wifi settings code change. 
         */
        public static final int wifi_proxy_settings=0x7f070024;
        /**  Wi-Fi security choices used when manually added a Wi-Fi network 
         */
        public static final int wifi_security=0x7f070012;
        /**  Wi-Fi security types for New User Dialog. EAP is not configurable. 
         */
        public static final int wifi_security_no_eap=0x7f070013;
        /**  Wi-Fi settings. The signal strength a Wi-Fi network has. 
 no translation found for wifi_status:10 (6367044185730295334) 
 no translation found for wifi_status:11 (503942654197908005) 
 no translation found for wifi_status_with_ssid:10 (5660739516542454527) 
 no translation found for wifi_status_with_ssid:11 (1805837518286731242) 
 no translation found for wifi_security:0 (8491993170197127709) 
 no translation found for wifi_security:1 (6524315248437318854) 
 no translation found for wifi_security:2 (1532568756571457140) 
 no translation found for wifi_security:3 (3620707702811709779) 
 no translation found for wifi_security_no_eap:0 (2084555984818107151) 
 no translation found for wifi_security_no_eap:1 (397579322683471524) 
 no translation found for wifi_security_no_eap:2 (1968820975358150484) 
 no translation found for wifi_ap_security:0 (5251664683198623324) 
 no translation found for wifi_ap_security:1 (7989073072260294673) 
 no translation found for wifi_ap_security:2 (3112452131886885338) 
 no translation found for wifi_eap_method:3 (435667726254379514) 
 no translation found for wifi_p2p_wps_setup:0 (5085064298144493867) 
 no translation found for wifi_p2p_wps_setup:1 (1624323946324499595) 
 no translation found for wifi_p2p_wps_setup:2 (5366790421523328066) 
 no translation found for wifi_p2p_status:0 (1701505390737218306) 
 no translation found for wifi_p2p_status:1 (3189211552661432651) 
 no translation found for wifi_p2p_status:2 (3206450250360237549) 
 no translation found for wifi_p2p_status:3 (7785896708926971207) 
 no translation found for wifi_p2p_status:4 (2330782789550628803) 
 no translation found for bluetooth_visibility_timeout_entries:0 (8151962652413645395) 
 no translation found for bluetooth_visibility_timeout_entries:1 (8675215713017289017) 
 no translation found for bluetooth_visibility_timeout_entries:2 (477015974247590543) 
 no translation found for bluetooth_visibility_timeout_entries:3 (5198271470953124739) 
         */
        public static final int wifi_signal=0x7f070019;
        /**  Wi-Fi settings. Presented as a list dialog to the user to choose the Wi-Fi sleep policy. 
         */
        public static final int wifi_sleep_policy_entries=0x7f07001a;
        /**  Wi-Fi settings. Presented as a list dialog to the user to choose the Wi-Fi sleep policy. Used when
         the device is Wi-Fi-only. [CHAR LIMIT=30] 
         */
        public static final int wifi_sleep_policy_entries_wifi_only=0x7f07001b;
        /**  Do not translate. 
         */
        public static final int wifi_sleep_policy_values=0x7f07001c;
        /**  Wi-Fi settings. The status messages when the network is unknown. 
         */
        public static final int wifi_status=0x7f070010;
        /**  Wi-Fi settings. The status messages when the network is known. 
         */
        public static final int wifi_status_with_ssid=0x7f070011;
        /**  Titles for window animation scale preference. [CHAR LIMIT=35] 
         */
        public static final int window_animation_scale_entries=0x7f07004a;
        /**  Values for window animation scale preference. 
         */
        public static final int window_animation_scale_values=0x7f07004b;
    }
    public static final class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int apnPreferenceStyle=0x7f010012;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int borderDrawable=0x7f01000e;
        /**  Background color 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int emptyColor=0x7f010002;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillColor=0x7f010010;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fillColorSecondary=0x7f010011;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int followAxis=0x7f010007;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ic_menu_add=0x7f010013;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ic_menu_moreoverflow=0x7f010014;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ic_wps=0x7f010015;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int icon=0x7f010001;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelColor=0x7f01000b;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int labelSize=0x7f010009;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int labelTemplate=0x7f01000a;
        /**  Minimum tick width for each slice in the bar chart. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minTickWidth=0x7f010003;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int neighborMargin=0x7f010008;
        /**  optimal width of the chart 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int optimalWidth=0x7f010004;
        /**  how to weight extra space beyond optimal width 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int optimalWidthWeight=0x7f010005;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int primaryDrawable=0x7f01000c;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int secondaryDrawable=0x7f01000d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int setup_divider_color=0x7f010016;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_encrypted=0x7f010000;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int strokeColor=0x7f01000f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int sweepDrawable=0x7f010006;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int wifi_signal=0x7f010017;
    }
    public static final class bool {
        /**  Whether the bluetooth activation confirmation dialogs should be auto dismissed.
         Can be overridden for specific product builds. 
         */
        public static final int auto_confirm_bluetooth_activation_dialog=0x7f090004;
        /**  Display additional System Update menu if true 
         */
        public static final int config_additional_system_update_setting_enable=0x7f090003;
        /**  If false, MIN is displayed. If true, MSID is displayed. 
         */
        public static final int config_msid_enable=0x7f090007;
        /**  Whether to show a preference item for mobile plan 
         */
        public static final int config_show_mobile_plan=0x7f090006;
        /**  Whether to show a preference item for regulatory information in About phone 
         */
        public static final int config_show_regulatory_info=0x7f090005;
        /**  Whether or not the dock settings are to be displayed for this device when docked 
         */
        public static final int has_dock_settings=0x7f090000;
        /**  Whether the power control widget is enabled for this device. Should be overridden for 
         specific product builds. 
         */
        public static final int has_powercontrol_widget=0x7f090002;
        /**  Whether there is a silent mode checkbox  
 Whether there is a silent mode checkbox  
         */
        public static final int has_silent_mode=0x7f090001;
    }
    public static final class color {
        public static final int black=0x7f0a0000;
        public static final int circle_avatar_frame_color=0x7f0a0013;
        public static final int circle_avatar_frame_pressed_color=0x7f0a0015;
        public static final int circle_avatar_frame_shadow_color=0x7f0a0014;
        public static final int crypt_keeper_clock_am_pm=0x7f0a000e;
        public static final int crypt_keeper_clock_background=0x7f0a000c;
        public static final int crypt_keeper_clock_foreground=0x7f0a000d;
        public static final int divider_color=0x7f0a000f;
        public static final int memory_apps_usage=0x7f0a0004;
        public static final int memory_avail=0x7f0a0003;
        public static final int memory_cache=0x7f0a0008;
        public static final int memory_dcim=0x7f0a0006;
        public static final int memory_downloads=0x7f0a0005;
        public static final int memory_misc=0x7f0a0009;
        public static final int memory_music=0x7f0a0007;
        public static final int memory_used=0x7f0a0002;
        public static final int memory_user_dark=0x7f0a000b;
        public static final int memory_user_light=0x7f0a000a;
        public static final int red=0x7f0a0001;
        public static final int setup_divider_color_dark=0x7f0a0011;
        public static final int setup_divider_color_light=0x7f0a0012;
        public static final int title_color=0x7f0a0010;
    }
    public static final class dimen {
        public static final int action_bar_switch_padding=0x7f0d0002;
        public static final int app_icon_size=0x7f0d0003;
        public static final int appwidget_height=0x7f0d002a;
        public static final int appwidget_min_height=0x7f0d001c;
        public static final int appwidget_min_width=0x7f0d001b;
        public static final int appwidget_preview_height=0x7f0d001f;
        /**  Size of AppWidget previews in KeyguardAppWidgetPickActivity 
         */
        public static final int appwidget_preview_width=0x7f0d001e;
        public static final int appwidget_width=0x7f0d0029;
        public static final int bind_app_widget_dialog_checkbox_bottom_padding=0x7f0d000a;
        public static final int captioning_preview_height=0x7f0d0027;
        public static final int circle_avatar_frame_shadow_radius=0x7f0d0025;
        public static final int circle_avatar_frame_stroke_width=0x7f0d0024;
        public static final int circle_avatar_size=0x7f0d0023;
        public static final int content_margin_left=0x7f0d0007;
        public static final int crypt_clock_size=0x7f0d000f;
        public static final int data_usage_chart_height=0x7f0d000c;
        public static final int data_usage_chart_optimalWidth=0x7f0d000d;
        public static final int datetime_margin_bottom=0x7f0d002c;
        public static final int datetime_margin_top=0x7f0d002b;
        public static final int description_margin_sides=0x7f0d0009;
        public static final int description_margin_top=0x7f0d0008;
        public static final int device_memory_usage_button_height=0x7f0d0001;
        public static final int device_memory_usage_button_width=0x7f0d0000;
        public static final int divider_height=0x7f0d0016;
        public static final int divider_margin_bottom=0x7f0d0018;
        public static final int divider_margin_top=0x7f0d0017;
        /**   Size of icons in the top-level of settings  
         */
        public static final int header_icon_width=0x7f0d001a;
        public static final int installed_app_details_bullet_offset=0x7f0d000b;
        public static final int keyguard_appwidget_picker_margin_left=0x7f0d0021;
        public static final int keyguard_appwidget_picker_margin_right=0x7f0d0022;
        public static final int keyguard_appwidget_picker_max_width=0x7f0d0020;
        public static final int keyguard_appwidget_picker_width=0x7f0d002d;
        public static final int pager_tabs_padding=0x7f0d001d;
        public static final int screen_margin_bottom=0x7f0d0006;
        public static final int screen_margin_sides=0x7f0d0004;
        public static final int screen_margin_top=0x7f0d0005;
        public static final int settings_side_margin=0x7f0d0028;
        public static final int setup_border_width=0x7f0d0011;
        public static final int setup_button_size=0x7f0d0014;
        public static final int setup_item_margin=0x7f0d0015;
        public static final int setup_margin_bottom=0x7f0d0012;
        public static final int setup_title_height=0x7f0d0010;
        public static final int setup_title_size=0x7f0d0013;
        /**  Minimum width for the popup for updating a user's photo. 
         */
        public static final int update_user_photo_popup_min_width=0x7f0d0026;
        public static final int vert_divider_width=0x7f0d0019;
        public static final int volume_seekbar_side_margin=0x7f0d000e;
    }
    public static final class drawable {
        public static final int appwidget_bg_holo=0x7f020000;
        public static final int appwidget_button_center=0x7f020001;
        public static final int appwidget_button_left=0x7f020002;
        public static final int appwidget_button_right=0x7f020003;
        public static final int appwidget_inner_focused_c_holo=0x7f020004;
        public static final int appwidget_inner_focused_l_holo=0x7f020005;
        public static final int appwidget_inner_focused_r_holo=0x7f020006;
        public static final int appwidget_inner_pressed_c_holo=0x7f020007;
        public static final int appwidget_inner_pressed_l_holo=0x7f020008;
        public static final int appwidget_inner_pressed_r_holo=0x7f020009;
        public static final int appwidget_item_bg=0x7f02000a;
        public static final int appwidget_item_bg_normal=0x7f02000b;
        public static final int appwidget_item_bg_pressed=0x7f02000c;
        public static final int appwidget_settings_divider_holo=0x7f02000d;
        public static final int appwidget_settings_ind_mid_c_holo=0x7f02000e;
        public static final int appwidget_settings_ind_mid_l_holo=0x7f02000f;
        public static final int appwidget_settings_ind_mid_r_holo=0x7f020010;
        public static final int appwidget_settings_ind_off_c_holo=0x7f020011;
        public static final int appwidget_settings_ind_off_l_holo=0x7f020012;
        public static final int appwidget_settings_ind_off_r_holo=0x7f020013;
        public static final int appwidget_settings_ind_on_c_holo=0x7f020014;
        public static final int appwidget_settings_ind_on_l_holo=0x7f020015;
        public static final int appwidget_settings_ind_on_r_holo=0x7f020016;
        public static final int avatar_default_1=0x7f020017;
        public static final int avatar_default_2=0x7f020018;
        public static final int avatar_default_3=0x7f020019;
        public static final int avatar_default_4=0x7f02001a;
        public static final int avatar_default_5=0x7f02001b;
        public static final int avatar_default_6=0x7f02001c;
        public static final int avatar_default_7=0x7f02001d;
        public static final int avatar_default_8=0x7f02001e;
        public static final int caption_background=0x7f02001f;
        public static final int data_grid_border=0x7f020020;
        public static final int data_grid_primary=0x7f020021;
        public static final int data_grid_secondary=0x7f020022;
        public static final int data_sweep_left=0x7f020023;
        public static final int data_sweep_left_activated=0x7f020024;
        public static final int data_sweep_left_default=0x7f020025;
        public static final int data_sweep_limit=0x7f020026;
        public static final int data_sweep_limit_activated=0x7f020027;
        public static final int data_sweep_limit_default=0x7f020028;
        public static final int data_sweep_right=0x7f020029;
        public static final int data_sweep_right_activated=0x7f02002a;
        public static final int data_sweep_right_default=0x7f02002b;
        public static final int data_sweep_warning=0x7f02002c;
        public static final int data_sweep_warning_activated=0x7f02002d;
        public static final int data_sweep_warning_default=0x7f02002e;
        public static final int data_usage_bar=0x7f02002f;
        public static final int data_usage_sweep_background=0x7f020030;
        public static final int dotted_line_480px=0x7f020031;
        public static final int empty_icon=0x7f020032;
        public static final int encroid_progress=0x7f020033;
        public static final int encroid_resignin=0x7f020034;
        public static final int encroid_waiting=0x7f020035;
        public static final int ic_appwidget_settings_bluetooth_off_holo=0x7f020036;
        public static final int ic_appwidget_settings_bluetooth_on_holo=0x7f020037;
        public static final int ic_appwidget_settings_brightness_auto_holo=0x7f020038;
        public static final int ic_appwidget_settings_brightness_full_holo=0x7f020039;
        public static final int ic_appwidget_settings_brightness_half_holo=0x7f02003a;
        public static final int ic_appwidget_settings_brightness_off_holo=0x7f02003b;
        public static final int ic_appwidget_settings_location_off_holo=0x7f02003c;
        public static final int ic_appwidget_settings_location_on_holo=0x7f02003d;
        public static final int ic_appwidget_settings_location_saving_holo=0x7f02003e;
        public static final int ic_appwidget_settings_sync_off_holo=0x7f02003f;
        public static final int ic_appwidget_settings_sync_on_holo=0x7f020040;
        public static final int ic_appwidget_settings_wifi_off_holo=0x7f020041;
        public static final int ic_appwidget_settings_wifi_on_holo=0x7f020042;
        public static final int ic_bt_cellphone=0x7f020043;
        public static final int ic_bt_config=0x7f020044;
        public static final int ic_bt_headphones_a2dp=0x7f020045;
        public static final int ic_bt_headset_hfp=0x7f020046;
        public static final int ic_bt_imaging=0x7f020047;
        public static final int ic_bt_keyboard_hid=0x7f020048;
        public static final int ic_bt_laptop=0x7f020049;
        public static final int ic_bt_misc_hid=0x7f02004a;
        public static final int ic_bt_network_pan=0x7f02004b;
        public static final int ic_bt_pointing_hid=0x7f02004c;
        public static final int ic_btn_next=0x7f02004d;
        public static final int ic_default_user=0x7f02004e;
        public static final int ic_emergency=0x7f02004f;
        public static final int ic_grayedout_printer=0x7f020050;
        public static final int ic_item_delete=0x7f020051;
        public static final int ic_list_sync_anim=0x7f020052;
        public static final int ic_lockscreen_ime=0x7f020053;
        public static final int ic_menu_3d_globe=0x7f020054;
        public static final int ic_menu_add_dark=0x7f020055;
        public static final int ic_menu_add_light=0x7f020056;
        public static final int ic_menu_delete_holo_dark=0x7f020057;
        public static final int ic_menu_refresh_holo_dark=0x7f020058;
        public static final int ic_menu_scan_network=0x7f020059;
        public static final int ic_network_signal_0=0x7f02005a;
        public static final int ic_network_signal_1=0x7f02005b;
        public static final int ic_network_signal_2=0x7f02005c;
        public static final int ic_network_signal_3=0x7f02005d;
        public static final int ic_network_signal_4=0x7f02005e;
        public static final int ic_power_system=0x7f02005f;
        public static final int ic_settings_about=0x7f020060;
        public static final int ic_settings_accessibility=0x7f020061;
        public static final int ic_settings_applications=0x7f020062;
        public static final int ic_settings_backup=0x7f020063;
        public static final int ic_settings_battery=0x7f020064;
        public static final int ic_settings_bluetooth=0x7f020065;
        public static final int ic_settings_bluetooth2=0x7f020066;
        public static final int ic_settings_cell_standby=0x7f020067;
        public static final int ic_settings_data_usage=0x7f020068;
        public static final int ic_settings_date_time=0x7f020069;
        public static final int ic_settings_development=0x7f02006a;
        public static final int ic_settings_display=0x7f02006b;
        public static final int ic_settings_dock=0x7f02006c;
        public static final int ic_settings_home=0x7f02006d;
        public static final int ic_settings_language=0x7f02006e;
        public static final int ic_settings_location=0x7f02006f;
        public static final int ic_settings_multiuser=0x7f020070;
        public static final int ic_settings_nfc_payment=0x7f020071;
        public static final int ic_settings_notifications=0x7f020072;
        public static final int ic_settings_phone_idle=0x7f020073;
        public static final int ic_settings_security=0x7f020074;
        public static final int ic_settings_sound=0x7f020075;
        public static final int ic_settings_storage=0x7f020076;
        public static final int ic_settings_sync=0x7f020077;
        public static final int ic_settings_voice_calls=0x7f020078;
        public static final int ic_settings_wifi=0x7f020079;
        public static final int ic_settings_wireless=0x7f02007a;
        public static final int ic_sync_anim_holo=0x7f02007b;
        public static final int ic_sync_error_holo=0x7f02007c;
        public static final int ic_sync_green=0x7f02007d;
        public static final int ic_sync_green_holo=0x7f02007e;
        public static final int ic_sync_grey=0x7f02007f;
        public static final int ic_sync_grey_holo=0x7f020080;
        public static final int ic_sync_red=0x7f020081;
        public static final int ic_sync_red_holo=0x7f020082;
        public static final int ic_sysbar_quicksettings=0x7f020083;
        public static final int ic_tab_all=0x7f020084;
        public static final int ic_tab_download=0x7f020085;
        public static final int ic_tab_running=0x7f020086;
        public static final int ic_tab_sdcard=0x7f020087;
        public static final int ic_tab_selected_all=0x7f020088;
        public static final int ic_tab_selected_download=0x7f020089;
        public static final int ic_tab_selected_running=0x7f02008a;
        public static final int ic_tab_selected_sdcard=0x7f02008b;
        public static final int ic_tab_unselected_all=0x7f02008c;
        public static final int ic_tab_unselected_download=0x7f02008d;
        public static final int ic_tab_unselected_running=0x7f02008e;
        public static final int ic_tab_unselected_sdcard=0x7f02008f;
        public static final int ic_wifi_lock_signal_1_dark=0x7f020090;
        public static final int ic_wifi_lock_signal_1_light=0x7f020091;
        public static final int ic_wifi_lock_signal_2_dark=0x7f020092;
        public static final int ic_wifi_lock_signal_2_light=0x7f020093;
        public static final int ic_wifi_lock_signal_3_dark=0x7f020094;
        public static final int ic_wifi_lock_signal_3_light=0x7f020095;
        public static final int ic_wifi_lock_signal_4_dark=0x7f020096;
        public static final int ic_wifi_lock_signal_4_light=0x7f020097;
        public static final int ic_wifi_signal_1_dark=0x7f020098;
        public static final int ic_wifi_signal_1_light=0x7f020099;
        public static final int ic_wifi_signal_2_dark=0x7f02009a;
        public static final int ic_wifi_signal_2_light=0x7f02009b;
        public static final int ic_wifi_signal_3_dark=0x7f02009c;
        public static final int ic_wifi_signal_3_light=0x7f02009d;
        public static final int ic_wifi_signal_4_dark=0x7f02009e;
        public static final int ic_wifi_signal_4_light=0x7f02009f;
        public static final int ic_wps_dark=0x7f0200a0;
        public static final int ic_wps_light=0x7f0200a1;
        public static final int lock_anim=0x7f0200a2;
        public static final int lock_anim_0=0x7f0200a3;
        public static final int lock_anim_1=0x7f0200a4;
        public static final int lock_anim_10=0x7f0200a5;
        public static final int lock_anim_11=0x7f0200a6;
        public static final int lock_anim_12=0x7f0200a7;
        public static final int lock_anim_13=0x7f0200a8;
        public static final int lock_anim_14=0x7f0200a9;
        public static final int lock_anim_2=0x7f0200aa;
        public static final int lock_anim_3=0x7f0200ab;
        public static final int lock_anim_4=0x7f0200ac;
        public static final int lock_anim_5=0x7f0200ad;
        public static final int lock_anim_6=0x7f0200ae;
        public static final int lock_anim_7=0x7f0200af;
        public static final int lock_anim_8=0x7f0200b0;
        public static final int lock_anim_9=0x7f0200b1;
        public static final int nav_divider=0x7f0200b2;
        public static final int nfc_payment_empty_state=0x7f0200b3;
        public static final int password_field_default=0x7f0200b4;
        public static final int preview=0x7f0200b5;
        public static final int regulatory_info=0x7f0200b6;
        public static final int signal=0x7f0200b7;
        public static final int stat_sys_phone_call=0x7f0200b8;
        public static final int transparency=0x7f0200b9;
        public static final int transparency_tileable=0x7f0200ba;
        public static final int wifi_signal_dark=0x7f0200bb;
        public static final int wifi_signal_light=0x7f0200bc;
        public static final int wifi_signal_lock_dark=0x7f0200bd;
        public static final int wifi_signal_lock_light=0x7f0200be;
        public static final int wifi_signal_open_dark=0x7f0200bf;
        public static final int wifi_signal_open_light=0x7f0200c0;
    }
    public static final class id {
        public static final int about_settings=0x7f080218;
        public static final int accessibility_settings=0x7f080215;
        public static final int account=0x7f0800a7;
        public static final int account_add=0x7f080212;
        public static final int account_settings=0x7f080211;
        public static final int accounts=0x7f0800bb;
        public static final int accounts_label=0x7f0800ba;
        public static final int action=0x7f08010c;
        public static final int action_button=0x7f080073;
        public static final int action_delete=0x7f080221;
        public static final int action_select_all=0x7f080222;
        public static final int active_layout=0x7f080069;
        public static final int add_icon=0x7f080150;
        public static final int add_msg=0x7f08006e;
        public static final int add_msg_expander=0x7f08006d;
        public static final int admin_description=0x7f08006c;
        public static final int admin_icon=0x7f08006a;
        public static final int admin_name=0x7f08006b;
        public static final int admin_policies=0x7f080070;
        public static final int admin_warning=0x7f08006f;
        public static final int alarm_mute_button=0x7f0800e9;
        public static final int alarm_section=0x7f0800e8;
        public static final int alarm_volume_seekbar=0x7f0800ea;
        public static final int all_details=0x7f080008;
        public static final int alphanumeric_pin=0x7f080021;
        public static final int also_erases_external=0x7f0800b9;
        public static final int android_beam_explained=0x7f080006;
        public static final int android_beam_image=0x7f080007;
        public static final int anonymous=0x7f0801bb;
        public static final int apn_radiobutton=0x01010001;
        public static final int app_background=0x7f080055;
        public static final int app_detail=0x7f080052;
        public static final int app_disabled=0x7f0800b7;
        public static final int app_foreground=0x7f080054;
        public static final int app_icon=0x7f08000f;
        public static final int app_name=0x7f080010;
        public static final int app_on_sdcard=0x7f0800b5;
        public static final int app_pie_chart=0x7f080056;
        public static final int app_restrictions_pref=0x7f0800d7;
        public static final int app_restrictions_settings=0x7f0800d8;
        public static final int app_settings=0x7f080057;
        public static final int app_size=0x7f0800b6;
        public static final int app_snippet=0x7f080009;
        public static final int app_switches=0x7f080058;
        public static final int app_titles=0x7f080053;
        public static final int application_settings=0x7f080208;
        public static final int application_size_prefix=0x7f08008a;
        public static final int application_size_text=0x7f08008b;
        public static final int ask_compatibility_cb=0x7f08009d;
        public static final int attempts=0x7f080122;
        public static final int auto_launch=0x7f08009a;
        public static final int auto_launch_title=0x7f080099;
        public static final int back_button=0x7f080153;
        public static final int backgroundText=0x7f08013a;
        public static final int backup_pw_cancel_button=0x7f080144;
        public static final int backup_pw_set_button=0x7f080145;
        public static final int band=0x7f080013;
        public static final int banner=0x7f0800c7;
        public static final int battery_history_chart=0x01010002;
        public static final int battery_settings=0x7f080207;
        public static final int bluetooth_device_picker_fragment=0x7f08001e;
        public static final int bluetooth_settings=0x7f0801fe;
        public static final int bottom_buttons=0x7f0801e6;
        public static final int bottom_divider=0x7f080042;
        public static final int bottom_padding=0x7f0801e5;
        public static final int bottom_padding_layout=0x7f0801e4;
        public static final int bssid=0x7f0801f1;
        public static final int btn_bluetooth=0x7f080199;
        public static final int btn_brightness=0x7f0801a2;
        public static final int btn_location=0x7f08019c;
        public static final int btn_sync=0x7f08019f;
        public static final int btn_wifi=0x7f080196;
        public static final int buttonContainer=0x7f080032;
        public static final int buttonPanel=0x7f080071;
        public static final int buttonWidget=0x7f0800eb;
        public static final int button_bar=0x7f080152;
        public static final int buttons_spacer_left=0x7f0800cf;
        public static final int bytes=0x7f080046;
        public static final int ca_cert=0x7f0801b8;
        public static final int cache_header=0x7f080095;
        public static final int cache_panel=0x7f080094;
        public static final int cache_size=0x7f080096;
        public static final int cache_size_text=0x7f080097;
        public static final int call=0x7f080120;
        public static final int cancel=0x7f080170;
        public static final int cancel_button=0x7f08002a;
        public static final int capabilities=0x7f080083;
        public static final int capabilities_header=0x7f080082;
        public static final int cell_info_list_rate=0x7f08012a;
        public static final int cellinfo=0x7f080119;
        public static final int center_divider=0x7f080066;
        public static final int cert_remove_button=0x7f08015e;
        public static final int cfi=0x7f08011f;
        public static final int chart=0x7f080047;
        public static final int checkbox=0x7f080077;
        public static final int clear=0x7f08010d;
        public static final int clear_activities_button=0x7f08009b;
        public static final int clear_cache_button=0x7f080098;
        public static final int color_bar=0x7f080138;
        public static final int color_preview=0x7f0800dc;
        public static final int color_swatch=0x7f080033;
        public static final int comp_description=0x7f08013d;
        public static final int config_list=0x7f0801aa;
        public static final int confirm_new_backup_pw=0x7f080143;
        public static final int connecting_status=0x7f0801e3;
        public static final int connecting_status_layout=0x7f0801e2;
        public static final int content=0x7f0801dd;
        public static final int content_padding=0x7f0801de;
        public static final int control_buttons_panel=0x7f080084;
        public static final int controls=0x7f0800d3;
        public static final int controls_title=0x7f0800d4;
        public static final int current_backup_pw=0x7f08013f;
        public static final int custom_button=0x7f080154;
        public static final int cycle_day=0x7f08004f;
        public static final int cycles=0x7f080050;
        public static final int cycles_spinner=0x7f080051;
        public static final int data=0x7f0800a6;
        public static final int data_buttons_panel=0x7f080093;
        public static final int data_size_prefix=0x7f08008f;
        public static final int data_size_text=0x7f080090;
        public static final int data_usage_menu_auto_sync=0x7f08021c;
        public static final int data_usage_menu_help=0x7f080220;
        public static final int data_usage_menu_metered=0x7f08021f;
        public static final int data_usage_menu_restrict_background=0x7f08021a;
        public static final int data_usage_menu_roaming=0x7f080219;
        public static final int data_usage_menu_show_ethernet=0x7f08021e;
        public static final int data_usage_menu_show_wifi=0x7f08021d;
        public static final int data_usage_menu_split_4g=0x7f08021b;
        public static final int data_usage_settings=0x7f0801ff;
        public static final int date_picker=0x7f080065;
        public static final int date_picker_title=0x7f080064;
        public static final int date_time_auto=0x7f080062;
        public static final int date_time_auto_button=0x7f080063;
        public static final int date_time_settings=0x7f080214;
        public static final int date_time_settings_fragment=0x7f08005f;
        public static final int dbm=0x7f080116;
        public static final int defaultView=0x7f08010e;
        public static final int description=0x7f080076;
        public static final int detail_series=0x7f08004a;
        public static final int details=0x7f0800d2;
        public static final int development_settings=0x7f080217;
        public static final int deviceDetails=0x7f0800da;
        public static final int device_section=0x7f080202;
        public static final int disconnects=0x7f080124;
        public static final int display_settings=0x7f080205;
        public static final int divider=0x7f08007d;
        public static final int divider_delete=0x7f080101;
        public static final int divider_manage=0x7f0800ff;
        public static final int dns1=0x7f0801ca;
        public static final int dns2=0x7f0801cb;
        public static final int dnsCheckState=0x7f080133;
        public static final int dns_check_toggle=0x7f080132;
        public static final int dns_servers=0x7f08018f;
        public static final int dock_audio_media_enable_cb=0x7f08007c;
        public static final int dummy_for_left_edge=0x7f0801dc;
        public static final int eap=0x7f0801b5;
        public static final int eap_not_supported=0x7f0801ab;
        public static final int eap_not_supported_for_add_network=0x7f0801ac;
        public static final int editor=0x7f08017e;
        public static final int edittext=0x7f080078;
        public static final int eight=0x7f08016c;
        public static final int emergencyCallButton=0x7f08003a;
        public static final int empty_print_state=0x7f080080;
        public static final int empty_printers_list_service_enabled=0x7f080081;
        public static final int enable_compatibility_cb=0x7f08009e;
        public static final int encroid=0x7f08003b;
        public static final int erase_external=0x7f0800be;
        public static final int erase_external_container=0x7f0800bd;
        public static final int erase_external_option_text=0x7f0800bc;
        public static final int error=0x7f080036;
        public static final int exclusionlist=0x7f08010b;
        public static final int execute_encrypt=0x7f080039;
        public static final int execute_master_clear=0x7f0800c0;
        public static final int execute_media_format=0x7f0800c1;
        public static final int external_code_size_prefix=0x7f08008c;
        public static final int external_code_size_text=0x7f08008d;
        public static final int external_data_size_prefix=0x7f080091;
        public static final int external_data_size_text=0x7f080092;
        public static final int extra=0x7f0800ca;
        public static final int factory_reset=0x7f080041;
        public static final int fields=0x7f0801a8;
        public static final int finish_button=0x7f080005;
        public static final int finish_button_area=0x7f080004;
        public static final int five=0x7f080169;
        public static final int fontSize=0x7f080079;
        public static final int footerLeftButton=0x7f080030;
        public static final int footerRightButton=0x7f080031;
        public static final int footerText=0x7f08002f;
        public static final int foregroundText=0x7f080139;
        public static final int four=0x7f080168;
        public static final int freeStorageText=0x7f0800b3;
        public static final int gateway=0x7f0801c8;
        public static final int gprs=0x7f08011c;
        public static final int grid=0x7f080048;
        public static final int gsm=0x7f08011b;
        public static final int headerText=0x7f080027;
        public static final int health=0x7f080018;
        public static final int hidden_ssid=0x7f0801f2;
        public static final int hint=0x7f080035;
        public static final int home_app_pref=0x7f0800ec;
        public static final int home_app_uninstall=0x7f0800ef;
        public static final int home_divider=0x7f0800ee;
        public static final int home_radio=0x7f0800ed;
        public static final int home_settings=0x7f080203;
        public static final int horizontal=0x7f080000;
        public static final int hostname=0x7f080109;
        public static final int httpClientTest=0x7f080115;
        public static final int icon=0x7f080023;
        public static final int identity=0x7f0801ba;
        public static final int imei=0x7f08010f;
        public static final int img_bluetooth=0x7f08019a;
        public static final int img_brightness=0x7f0801a3;
        public static final int img_location=0x7f08019d;
        public static final int img_sync=0x7f0801a0;
        public static final int img_wifi=0x7f080197;
        public static final int ims_reg_required=0x7f08012b;
        public static final int ind_bluetooth=0x7f08019b;
        public static final int ind_brightness=0x7f0801a4;
        public static final int ind_location=0x7f08019e;
        public static final int ind_sync=0x7f0801a1;
        public static final int ind_wifi=0x7f080198;
        public static final int info=0x7f0801a5;
        public static final int info_size=0x7f08008e;
        public static final int info_size_dots=0x7f080088;
        public static final int initiate_encrypt=0x7f080045;
        public static final int initiate_master_clear=0x7f0800bf;
        public static final int initiate_media_format=0x7f0800c2;
        public static final int inputmethod_pref=0x7f0800f0;
        public static final int inputmethod_settings=0x7f0800f1;
        public static final int intent=0x7f0800a5;
        public static final int ip_fields=0x7f0801c4;
        public static final int ip_settings=0x7f0801c5;
        public static final int ipaddr=0x7f0801f3;
        public static final int ipaddress=0x7f0801c7;
        public static final int ipsec_ca_cert=0x7f08018a;
        public static final int ipsec_identifier=0x7f080185;
        public static final int ipsec_peer=0x7f080189;
        public static final int ipsec_psk=0x7f080184;
        public static final int ipsec_secret=0x7f080186;
        public static final int ipsec_server_cert=0x7f08018b;
        public static final int ipsec_user=0x7f080187;
        public static final int ipsec_user_cert=0x7f080188;
        public static final int keyboard=0x7f08002c;
        public static final int l2tp=0x7f080182;
        public static final int l2tp_secret=0x7f080183;
        public static final int l_anonymous=0x7f0801d1;
        public static final int l_ca_cert=0x7f0801ce;
        public static final int l_identity=0x7f0801d0;
        public static final int l_method=0x7f0801cc;
        public static final int l_phase2=0x7f0801cd;
        public static final int l_user_cert=0x7f0801cf;
        public static final int label=0x7f0800ac;
        public static final int language_settings=0x7f08020f;
        public static final int launch_count=0x7f080176;
        public static final int layout_root=0x7f08005d;
        public static final int leftSpacer=0x7f080072;
        public static final int left_button=0x7f080171;
        public static final int level=0x7f080016;
        public static final int linear_color_bar=0x01010003;
        public static final int link_speed=0x7f0801f6;
        public static final int list_container=0x7f0800af;
        public static final int loading_container=0x7f0800b4;
        public static final int locale_picker_fragment=0x7f0800ae;
        public static final int location=0x7f080117;
        public static final int location_settings=0x7f08020d;
        public static final int lockPattern=0x7f08002e;
        public static final int login=0x7f080191;
        public static final int lte_ram_dump=0x7f08012d;
        public static final int macaddr=0x7f0801f4;
        public static final int main=0x7f080195;
        public static final int manage_user=0x7f080100;
        public static final int manufacturer_settings=0x7f08020b;
        public static final int media_mute_button=0x7f0800de;
        public static final int media_section=0x7f0800dd;
        public static final int media_volume_seekbar=0x7f0800df;
        public static final int message=0x7f08001d;
        public static final int message_below_pin=0x7f080022;
        public static final int method=0x7f0801b6;
        public static final int misc_checkbox=0x7f080146;
        public static final int misc_filename=0x7f080147;
        public static final int misc_filesize=0x7f080148;
        public static final int more=0x7f08014d;
        public static final int more_control_buttons_panel=0x7f080085;
        public static final int mppe=0x7f080181;
        public static final int mwi=0x7f08011e;
        public static final int name=0x7f080075;
        public static final int neighboring=0x7f080118;
        public static final int network=0x7f08011d;
        public static final int network_prefix_length=0x7f0801c9;
        public static final int network_state=0x7f0801ee;
        public static final int network_switches=0x7f08005a;
        public static final int network_switches_container=0x7f080059;
        public static final int networkid=0x7f0801f5;
        public static final int new_backup_pw=0x7f080141;
        public static final int next_button=0x7f08002b;
        public static final int nfc_payment_empty_text=0x7f0800c4;
        public static final int nfc_payment_learn_more=0x7f0800c5;
        public static final int nfc_payment_pref=0x7f0800c6;
        public static final int nfc_payment_settings=0x7f08020a;
        public static final int nfc_payment_tap_image=0x7f0800c3;
        public static final int nine=0x7f08016d;
        public static final int notification_description_text=0x7f0800e5;
        public static final int notification_mute_button=0x7f0800e6;
        public static final int notification_section=0x7f0800e4;
        public static final int notification_switch=0x7f080086;
        public static final int notification_volume_seekbar=0x7f0800e7;
        public static final int number=0x7f080110;
        public static final int oem_info=0x7f080134;
        public static final int ok=0x7f08016e;
        public static final int old_password=0x7f080038;
        public static final int old_password_prompt=0x7f080037;
        public static final int one=0x7f080165;
        public static final int op_icon=0x7f08000b;
        public static final int op_name=0x7f08000c;
        public static final int op_time=0x7f08000d;
        public static final int operations_section=0x7f08000a;
        public static final int operator=0x7f080111;
        public static final int operator_settings=0x7f080200;
        public static final int options=0x7f08018d;
        public static final int other=0x7f080151;
        public static final int other_network=0x7f08014f;
        public static final int owner_info_edit_text=0x7f0800ce;
        public static final int owner_info_nickname=0x7f0800cc;
        public static final int package_name=0x7f080175;
        public static final int packages_section=0x7f0800d6;
        public static final int packages_section_title=0x7f0800d5;
        public static final int pager=0x7f080011;
        public static final int password=0x7f080193;
        public static final int passwordEntry=0x7f08003d;
        public static final int passwordLabel=0x7f08003c;
        public static final int password_entry=0x7f080029;
        public static final int password_layout=0x7f0801b2;
        public static final int password_text=0x7f0801b1;
        public static final int percentage_bar_chart=0x7f0800f2;
        public static final int permissions_section=0x7f08009f;
        public static final int personal_section=0x7f08020c;
        public static final int phase2=0x7f0801b7;
        public static final int pin_values_hint=0x7f080020;
        public static final int pingHostname=0x7f080114;
        public static final int pingIpAddr=0x7f080113;
        public static final int ping_test=0x7f080112;
        public static final int pkg_list=0x7f080174;
        public static final int pkgicon=0x7f0800c8;
        public static final int pkgname=0x7f0800cb;
        public static final int port=0x7f08010a;
        public static final int power=0x7f080015;
        public static final int pref_all=0x7f0800f5;
        public static final int pref_left_button=0x7f0800f6;
        public static final int pref_radio=0x7f0800f7;
        public static final int pref_right_button1=0x7f0800f8;
        public static final int pref_right_button2=0x7f0800fa;
        public static final int pref_right_separator2=0x7f0800f9;
        public static final int preferredNetworkType=0x7f080128;
        public static final int prefs=0x7f08014a;
        public static final int preview=0x7f08007a;
        public static final int preview_text=0x7f080025;
        public static final int print_menu_item_add_printer=0x7f080224;
        public static final int print_menu_item_search=0x7f080223;
        public static final int print_menu_item_settings=0x7f080225;
        public static final int print_settings=0x7f080216;
        public static final int privacy_settings=0x7f080210;
        public static final int profileExpand=0x7f0800db;
        public static final int progress_bar=0x7f080040;
        public static final int prompt1=0x7f08013e;
        public static final int prompt2=0x7f080140;
        public static final int prompt3=0x7f080142;
        public static final int properties_fragment=0x7f080026;
        public static final int provider_icon=0x7f080158;
        public static final int provider_id=0x7f08015a;
        public static final int proxy_exclusionlist=0x7f0801c3;
        public static final int proxy_fields=0x7f0801c0;
        public static final int proxy_hostname=0x7f0801c1;
        public static final int proxy_pac_info=0x7f0801d6;
        public static final int proxy_port=0x7f0801c2;
        public static final int proxy_settings=0x7f0801be;
        public static final int proxy_settings_fields=0x7f0801bc;
        public static final int proxy_settings_title=0x7f0801bd;
        public static final int proxy_warning_limited_support=0x7f0801bf;
        public static final int radio_power=0x7f080129;
        public static final int received=0x7f080126;
        public static final int refresh_smsc=0x7f080130;
        public static final int regulatoryInfo=0x7f080135;
        public static final int remember=0x7f080136;
        public static final int resets=0x7f080121;
        public static final int resource=0x7f0800a8;
        public static final int rightSpacer=0x7f080074;
        public static final int right_button=0x7f080172;
        public static final int ringer_description_text=0x7f0800e1;
        public static final int ringer_mute_button=0x7f0800e2;
        public static final int ringer_section=0x7f0800e0;
        public static final int ringer_volume_seekbar=0x7f0800e3;
        public static final int roaming=0x7f08011a;
        public static final int routes=0x7f080190;
        public static final int rssi=0x7f0801f0;
        public static final int running_processes=0x7f0800b8;
        public static final int save=0x7f08007b;
        public static final int save_login=0x7f080194;
        public static final int scale=0x7f080017;
        public static final int scan_list=0x7f0801f7;
        public static final int scanning_progress=0x7f0800f3;
        public static final int scanning_progress_bar=0x7f0801da;
        public static final int screen_compatibility_section=0x7f08009c;
        public static final int search_domains=0x7f08018e;
        public static final int security=0x7f0801a7;
        public static final int security_fields=0x7f0801b0;
        public static final int security_settings=0x7f08020e;
        public static final int security_settings_billing_desc=0x7f0800a0;
        public static final int security_settings_billing_list=0x7f0800a1;
        public static final int security_settings_desc=0x7f0800a3;
        public static final int security_settings_list=0x7f0800a4;
        public static final int security_settings_premium_sms_list=0x7f0800a2;
        public static final int security_text=0x7f0801b4;
        public static final int sendbroadcast=0x7f0800a9;
        public static final int sent=0x7f080125;
        public static final int sentSinceReceived=0x7f080127;
        public static final int series=0x7f080049;
        public static final int server=0x7f080180;
        public static final int service=0x7f08013c;
        public static final int services=0x7f080108;
        public static final int settings_button=0x7f0800f4;
        public static final int settings_divider=0x7f0800d9;
        public static final int seven=0x7f08016b;
        public static final int shortcut=0x7f080103;
        public static final int show_options=0x7f08018c;
        public static final int show_owner_info_on_lockscreen_checkbox=0x7f0800cd;
        public static final int show_password=0x7f0801a9;
        public static final int show_password_layout=0x7f0801d2;
        public static final int signal=0x7f080106;
        public static final int six=0x7f08016a;
        public static final int size=0x7f080137;
        public static final int skip_button=0x7f080155;
        public static final int sms_image=0x7f080156;
        public static final int sms_over_ims=0x7f08012c;
        public static final int sms_text=0x7f080157;
        public static final int smsc=0x7f080131;
        public static final int smsc_label=0x7f08012e;
        public static final int snippet=0x7f08013b;
        public static final int sound_settings=0x7f080204;
        public static final int spacerBottom=0x7f080028;
        public static final int ssid=0x7f0801a6;
        public static final int ssid_layout=0x7f0801af;
        public static final int ssid_text=0x7f0801ae;
        public static final int startactivity=0x7f0800aa;
        public static final int staticip=0x7f0801c6;
        public static final int status=0x7f080014;
        public static final int storageChartLabel=0x7f0800b2;
        public static final int storage_color_bar=0x7f0800b0;
        public static final int storage_settings=0x7f080206;
        public static final int storage_usb=0x7f080226;
        public static final int subtitle=0x7f080107;
        public static final int successes=0x7f080123;
        public static final int summary=0x7f080034;
        public static final int supplicant_state=0x7f0801ef;
        public static final int sweep_left=0x7f08004b;
        public static final int sweep_limit=0x7f08004e;
        public static final int sweep_right=0x7f08004c;
        public static final int sweep_warning=0x7f08004d;
        public static final int switchWidget=0x7f08000e;
        public static final int switch_ime_button=0x7f08003e;
        public static final int syncStatusIcon=0x7f080002;
        public static final int sync_active=0x7f080105;
        public static final int sync_failed=0x7f080104;
        public static final int sync_settings_error_info=0x7f080003;
        public static final int system_list=0x7f080161;
        public static final int system_progress=0x7f080160;
        public static final int system_section=0x7f080213;
        public static final int system_tab=0x7f08015f;
        public static final int tabs=0x7f080012;
        public static final int tabs_container=0x7f08005c;
        public static final int technology=0x7f08001b;
        public static final int temperature=0x7f08001a;
        public static final int text=0x7f08001f;
        public static final int text_layout=0x01010000;
        public static final int three=0x7f080167;
        public static final int time_picker=0x7f080068;
        public static final int time_picker_title=0x7f080067;
        public static final int time_zone_button=0x7f080061;
        public static final int timestamp=0x7f0800c9;
        public static final int timezone_auto_time=0x7f080060;
        public static final int timezone_dropdown_anchor=0x7f08005e;
        public static final int title=0x7f080024;
        public static final int titleDivider=0x7f0800ab;
        public static final int title_area=0x7f08014b;
        public static final int title_bar=0x7f08014c;
        public static final int topLayout=0x7f08002d;
        public static final int top_divider=0x7f08003f;
        public static final int top_divider_no_progress=0x7f0801db;
        public static final int top_level=0x7f080149;
        public static final int top_padding=0x7f0801d8;
        public static final int top_padding_layout=0x7f0801d7;
        public static final int total_size_prefix=0x7f080087;
        public static final int total_size_text=0x7f080089;
        public static final int trash_user=0x7f080102;
        public static final int trusted_credential_status=0x7f08015d;
        public static final int trusted_credential_subject_primary=0x7f08015b;
        public static final int trusted_credential_subject_secondary=0x7f08015c;
        public static final int tts_engine_pref=0x7f0800fb;
        public static final int tts_engine_pref_text=0x7f0800fd;
        public static final int tts_engine_radiobutton=0x7f0800fc;
        public static final int tts_engine_settings=0x7f0800fe;
        public static final int two=0x7f080166;
        public static final int two_buttons_panel=0x7f0800d1;
        public static final int type=0x7f08017f;
        public static final int typeSpinner=0x7f080173;
        public static final int type_security=0x7f0801b3;
        public static final int type_ssid=0x7f0801ad;
        public static final int update=0x7f0801ec;
        public static final int update_smsc=0x7f08012f;
        public static final int uptime=0x7f08001c;
        public static final int usage_summary=0x7f08005b;
        public static final int usage_time=0x7f080177;
        public static final int usedStorageText=0x7f0800b1;
        public static final int user_cert=0x7f0801b9;
        public static final int user_dict_settings_add_dialog_top=0x7f080178;
        public static final int user_dictionary_add_shortcut=0x7f08017c;
        public static final int user_dictionary_add_shortcut_label=0x7f08017b;
        public static final int user_dictionary_add_word_grid=0x7f08017a;
        public static final int user_dictionary_add_word_text=0x7f080179;
        public static final int user_id=0x7f080159;
        public static final int user_limits_fragment=0x7f08017d;
        public static final int user_list=0x7f080164;
        public static final int user_name=0x7f08007f;
        public static final int user_photo=0x7f08007e;
        public static final int user_progress=0x7f080163;
        public static final int user_settings=0x7f080209;
        public static final int user_tab=0x7f080162;
        public static final int username=0x7f080192;
        public static final int value=0x7f0800d0;
        public static final int vertical=0x7f080001;
        public static final int voltage=0x7f080019;
        public static final int vpn_create=0x7f080227;
        public static final int vpn_lockdown=0x7f080228;
        public static final int warning_low_charge=0x7f080043;
        public static final int warning_unplugged=0x7f080044;
        public static final int widget_list=0x7f0800ad;
        public static final int wifi_advanced_fields=0x7f0801d5;
        public static final int wifi_advanced_toggle=0x7f0801d3;
        public static final int wifi_advanced_togglebox=0x7f0801d4;
        public static final int wifi_config_ui=0x7f0801e1;
        public static final int wifi_required_info=0x7f08014e;
        public static final int wifi_settings=0x7f0801fd;
        public static final int wifi_settings_fragment_layout=0x7f0801df;
        public static final int wifi_setup_add_network=0x7f0801e7;
        public static final int wifi_setup_cancel=0x7f0801e8;
        public static final int wifi_setup_connect=0x7f0801e9;
        public static final int wifi_setup_fragment=0x7f0801e0;
        public static final int wifi_setup_refresh_list=0x7f0801eb;
        public static final int wifi_setup_skip_or_next=0x7f0801ea;
        public static final int wifi_setup_title=0x7f0801d9;
        public static final int wifi_state=0x7f0801ed;
        public static final int wifi_wps=0x7f080229;
        public static final int wireless_section=0x7f0801fc;
        public static final int wireless_settings=0x7f080201;
        public static final int wps_dialog_btn=0x7f0801fb;
        public static final int wps_dialog_txt=0x7f0801f8;
        public static final int wps_progress_bar=0x7f0801fa;
        public static final int wps_timeout_bar=0x7f0801f9;
        public static final int zero=0x7f08016f;
    }
    public static final class integer {
        public static final int keyguard_appwidget_picker_cols=0x7f0c0001;
        /**  TODO: This is purely enforced by the interface, and does not affect what
         strings may be inserted into the actual content provider.
         With the addition of shortcuts, it seems more likely that users will
         find this limiting; it would be good to have the interface work with
         very long strings too. 
         */
        public static final int maximum_user_dictionary_word_length=0x7f0c0000;
        /**  Scrollbar style OUTSIDE_OVERLAY 
         */
        public static final int preference_scrollbar_style=0x7f0c0002;
    }
    public static final class layout {
        public static final int access_point_category_for_setup_wizard_xl=0x7f040000;
        public static final int account_preference=0x7f040001;
        public static final int account_sync_screen=0x7f040002;
        public static final int add_account_screen=0x7f040003;
        public static final int android_beam=0x7f040004;
        public static final int apn_preference_layout=0x7f040005;
        public static final int app_ops_details=0x7f040006;
        public static final int app_ops_details_item=0x7f040007;
        public static final int app_ops_item=0x7f040008;
        public static final int app_ops_summary=0x7f040009;
        public static final int app_percentage_item=0x7f04000a;
        public static final int apps_spinner_dropdown_item=0x7f04000b;
        public static final int apps_spinner_item=0x7f04000c;
        public static final int band_mode=0x7f04000d;
        public static final int battery_info=0x7f04000e;
        public static final int bluetooth_access=0x7f04000f;
        public static final int bluetooth_device_picker=0x7f040010;
        public static final int bluetooth_pin_confirm=0x7f040011;
        public static final int bluetooth_pin_entry=0x7f040012;
        public static final int bookmark_picker_item=0x7f040013;
        public static final int captioning_preview=0x7f040014;
        public static final int choose_lock_password=0x7f040015;
        public static final int choose_lock_pattern=0x7f040016;
        public static final int color_picker_item=0x7f040017;
        public static final int confirm_lock_password=0x7f040018;
        public static final int confirm_lock_pattern=0x7f040019;
        public static final int credentials_dialog=0x7f04001a;
        public static final int crypt_keeper_blank=0x7f04001b;
        public static final int crypt_keeper_confirm=0x7f04001c;
        public static final int crypt_keeper_password_entry=0x7f04001d;
        public static final int crypt_keeper_password_field=0x7f04001e;
        public static final int crypt_keeper_progress=0x7f04001f;
        public static final int crypt_keeper_settings=0x7f040020;
        public static final int crypt_keeper_status=0x7f040021;
        public static final int custom_preference=0x7f040022;
        public static final int data_usage_app_title=0x7f040023;
        public static final int data_usage_bytes_editor=0x7f040024;
        public static final int data_usage_chart=0x7f040025;
        public static final int data_usage_cycle_editor=0x7f040026;
        public static final int data_usage_cycles=0x7f040027;
        public static final int data_usage_detail=0x7f040028;
        public static final int data_usage_header=0x7f040029;
        public static final int data_usage_item=0x7f04002a;
        public static final int data_usage_summary=0x7f04002b;
        public static final int date_time_settings_setupwizard=0x7f04002c;
        public static final int date_time_setup_custom_list_item_2=0x7f04002d;
        public static final int device_admin_add=0x7f04002e;
        public static final int device_admin_item=0x7f04002f;
        public static final int device_admin_settings=0x7f040030;
        public static final int dialog_edittext=0x7f040031;
        public static final int display=0x7f040032;
        public static final int dock_audio_media_enable_dialog=0x7f040033;
        public static final int dream_info_row=0x7f040034;
        public static final int edit_user_info_dialog_content=0x7f040035;
        public static final int edit_user_photo_popup_item=0x7f040036;
        public static final int empty_print_state=0x7f040037;
        public static final int empty_printers_list_service_enabled=0x7f040038;
        public static final int enable_accessibility_service_dialog_content=0x7f040039;
        public static final int grid_picker_dialog=0x7f04003a;
        public static final int installed_app_details=0x7f04003b;
        public static final int intent_sender=0x7f04003c;
        public static final int keyboard_layout_dialog_switch_hint=0x7f04003d;
        public static final int keyguard_appwidget_item=0x7f04003e;
        public static final int keyguard_appwidget_picker_layout=0x7f04003f;
        public static final int locale_picker=0x7f040040;
        public static final int location_list_no_item=0x7f040041;
        public static final int manage_accounts_screen=0x7f040042;
        public static final int manage_applications_apps=0x7f040043;
        public static final int manage_applications_content=0x7f040044;
        public static final int manage_applications_item=0x7f040045;
        public static final int manage_applications_running=0x7f040046;
        public static final int master_clear=0x7f040047;
        public static final int master_clear_account=0x7f040048;
        public static final int master_clear_confirm=0x7f040049;
        public static final int media_format_final=0x7f04004a;
        public static final int media_format_primary=0x7f04004b;
        public static final int nfc_payment=0x7f04004c;
        public static final int nfc_payment_option=0x7f04004d;
        public static final int notification_access_settings=0x7f04004e;
        public static final int notification_info_row=0x7f04004f;
        public static final int notification_listener_item=0x7f040050;
        public static final int notification_log_row=0x7f040051;
        public static final int ownerinfo=0x7f040052;
        public static final int pick_item=0x7f040053;
        public static final int power_usage_action_item=0x7f040054;
        public static final int power_usage_detail_item_text=0x7f040055;
        public static final int power_usage_details=0x7f040056;
        public static final int power_usage_package_item=0x7f040057;
        public static final int preference=0x7f040058;
        public static final int preference_app_restrictions=0x7f040059;
        public static final int preference_batteryhistory=0x7f04005a;
        public static final int preference_bluetooth=0x7f04005b;
        public static final int preference_bluetooth_profile=0x7f04005c;
        public static final int preference_color=0x7f04005d;
        public static final int preference_dialog_ringervolume=0x7f04005e;
        public static final int preference_empty_list=0x7f04005f;
        public static final int preference_header_button_item=0x7f040060;
        public static final int preference_header_item=0x7f040061;
        public static final int preference_header_switch_item=0x7f040062;
        public static final int preference_home_app=0x7f040063;
        public static final int preference_icon=0x7f040064;
        public static final int preference_inputmethod=0x7f040065;
        public static final int preference_inputmethod_widget=0x7f040066;
        public static final int preference_linearcolor=0x7f040067;
        public static final int preference_memoryusage=0x7f040068;
        public static final int preference_progress_category=0x7f040069;
        public static final int preference_rename_widget=0x7f04006a;
        public static final int preference_settings_checkbox_widget=0x7f04006b;
        public static final int preference_spellchecker=0x7f04006c;
        public static final int preference_tts_engine=0x7f04006d;
        public static final int preference_user_delete_widget=0x7f04006e;
        public static final int preference_widget_radiobutton=0x7f04006f;
        public static final int preference_widget_shortcut=0x7f040070;
        public static final int preference_widget_sync_toggle=0x7f040071;
        public static final int preference_widget_wifi_signal=0x7f040072;
        public static final int preset_picker_item=0x7f040073;
        public static final int print_job_summary=0x7f040074;
        public static final int printer_dropdown_item=0x7f040075;
        public static final int process_stats_details=0x7f040076;
        public static final int profile_icon_small=0x7f040077;
        public static final int proxy=0x7f040078;
        public static final int radio_info=0x7f040079;
        public static final int regulatory_info=0x7f04007a;
        public static final int remember_dock_setting=0x7f04007b;
        public static final int running_processes_item=0x7f04007c;
        public static final int running_processes_view=0x7f04007d;
        public static final int running_service_details=0x7f04007e;
        public static final int running_service_details_process=0x7f04007f;
        public static final int running_service_details_service=0x7f040080;
        public static final int separator_label=0x7f040081;
        public static final int set_backup_pw=0x7f040082;
        public static final int settings_storage_miscfiles=0x7f040083;
        public static final int settings_storage_miscfiles_list=0x7f040084;
        public static final int settings_top_level=0x7f040085;
        public static final int setup_preference=0x7f040086;
        public static final int sms_preference_item=0x7f040087;
        public static final int tab_widget=0x7f040088;
        public static final int text_description_preference=0x7f040089;
        public static final int title=0x7f04008a;
        public static final int trusted_credential=0x7f04008b;
        public static final int trusted_credential_details=0x7f04008c;
        public static final int trusted_credentials=0x7f04008d;
        public static final int twelve_key_entry=0x7f04008e;
        public static final int two_buttons_panel=0x7f04008f;
        public static final int two_line_list_item=0x7f040090;
        public static final int usage_stats=0x7f040091;
        public static final int usage_stats_item=0x7f040092;
        public static final int user_dictionary_add_word=0x7f040093;
        public static final int user_dictionary_add_word_fullscreen=0x7f040094;
        public static final int user_dictionary_item=0x7f040095;
        public static final int user_info_header=0x7f040096;
        public static final int user_limits=0x7f040097;
        public static final int vpn_dialog=0x7f040098;
        public static final int vpn_lockdown_editor=0x7f040099;
        public static final int weak_biometric_fallback_header=0x7f04009a;
        public static final int widget=0x7f04009b;
        public static final int wifi_ap_dialog=0x7f04009c;
        public static final int wifi_api_test=0x7f04009d;
        public static final int wifi_config_info=0x7f04009e;
        public static final int wifi_config_ui_for_setup_wizard=0x7f04009f;
        public static final int wifi_dialog=0x7f0400a0;
        public static final int wifi_dialog_row=0x7f0400a1;
        public static final int wifi_display_options=0x7f0400a2;
        public static final int wifi_display_preference=0x7f0400a3;
        public static final int wifi_notify_scan_mode=0x7f0400a4;
        public static final int wifi_settings_for_setup_wizard_xl=0x7f0400a5;
        public static final int wifi_setup_custom_list_item_1=0x7f0400a6;
        public static final int wifi_status_test=0x7f0400a7;
        public static final int wifi_wps_dialog=0x7f0400a8;
    }
    public static final class menu {
        public static final int data_usage=0x7f100000;
        public static final int misc_files_menu=0x7f100001;
        public static final int print_service_settings=0x7f100002;
        public static final int storage=0x7f100003;
        public static final int vpn=0x7f100004;
        public static final int wifi_setup=0x7f100005;
    }
    public static final class mipmap {
        public static final int ic_launcher_settings=0x7f030000;
    }
    public static final class plurals {
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of letters 
         */
        public static final int lockpassword_password_requires_letters=0x7f0e0001;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of lowercase letters 
         */
        public static final int lockpassword_password_requires_lowercase=0x7f0e0002;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of non-letter characters 
         */
        public static final int lockpassword_password_requires_nonletter=0x7f0e0006;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of numerical digits 
         */
        public static final int lockpassword_password_requires_numeric=0x7f0e0004;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of special symbols 
         */
        public static final int lockpassword_password_requires_symbols=0x7f0e0005;
        /**  Error shown when in PASSWORD mode and password doesn't contain the required number of uppercase letters 
         */
        public static final int lockpassword_password_requires_uppercase=0x7f0e0003;
        /**  Summary of preference to manage notification listeners, when one or more are enabled
         and are therefore able to read the user's notifications 
         */
        public static final int manage_notification_access_summary_nonzero=0x7f0e0007;
        /**  Utterance to announce a change in the number of matches during a search. This is spoken to a blind user. [CHAR LIMIT=none] 
         */
        public static final int print_search_result_count_utterance=0x7f0e0009;
        /**  [CHAR LIMIT=NONE] Device Info screen. Countdown for user taps to enable development settings 
         */
        public static final int show_dev_countdown=0x7f0e0000;
        /**  Instructions telling the user that they entered the wrong SIM PIN while trying
         to unlock the keyguard.  Displayed in a dialog box.  
         */
        public static final int wrong_pin_code=0x7f0e0008;
    }
    public static final class raw {
        public static final int media_volume=0x7f060000;
    }
    public static final class string {
        /**  Main settings screen, setting title for the user to go into the About phone screen 
         */
        public static final int about_settings=0x7f0b03c8;
        /**  Main settings screen, setting summary for the user to go into the About phone screen
         */
        public static final int about_settings_summary=0x7f0b03c9;
        /**  Sound & display settings screen, accelerometer-based rotation summary text when check box is clear 
         */
        public static final int accelerometer_summary_off=0x7f0b02cd;
        /**  Sound & display settings screen, accelerometer-based rotation summary text when check box is selected 
         */
        public static final int accelerometer_summary_on=0x7f0b02cc;
        /**  Sound & display settings screen, accelerometer-based rotation check box label 
         */
        public static final int accelerometer_title=0x7f0b02cb;
        /**  Title for the accessibility preference screen to enable video captioning. [CHAR LIMIT=35] 
         */
        public static final int accessibility_captioning_title=0x7f0b0519;
        /**  Summary for the disabled state of an accessibility feature. [CHAR LIMIT=10] 
         */
        public static final int accessibility_feature_state_off=0x7f0b0529;
        /**  Summary for the enabled state of an accessibility feature. [CHAR LIMIT=10] 
         */
        public static final int accessibility_feature_state_on=0x7f0b0528;
        /**   Description for the preference screen to enable the global geture taht turns on accessibility. [CHAR LIMIT=none] 
         */
        public static final int accessibility_global_gesture_preference_description=0x7f0b051f;
        /**  Summary for the preference screen to enable the global geture that turns on accessibility (off state). [CHAR LIMIT=35] 
         */
        public static final int accessibility_global_gesture_preference_summary_off=0x7f0b051e;
        /**  Summary for the preference to enable the global geture that turns on accessibility (on state). [CHAR LIMIT=60] 
         */
        public static final int accessibility_global_gesture_preference_summary_on=0x7f0b051d;
        /**  Title for the preference to enable the global geture that turns on accessibility. [CHAR LIMIT=35] 
         */
        public static final int accessibility_global_gesture_preference_title=0x7f0b051c;
        /**  Title for accessibility preference to choose long-press delay i.e. timeout before it is detected. [CHAR LIMIT=35] 
         */
        public static final int accessibility_long_press_timeout_preference_title=0x7f0b0526;
        /**  Title for accessibility menu item to lauch a settings activity. [CHAR LIMIT=15] 
         */
        public static final int accessibility_menu_item_settings=0x7f0b0527;
        /**  Title for the prompt shown as a placeholder if no accessibility serivices are installed. [CHAR LIMIT=50] 
         */
        public static final int accessibility_no_services_installed=0x7f0b054b;
        /**  Title for the accessibility preference to power button to end a call. [CHAR LIMIT=35] 
         */
        public static final int accessibility_power_button_ends_call_prerefence_title=0x7f0b0524;
        /**  Summary for the accessibility preference screen to enable screen magnification. [CHAR LIMIT=none] 
         */
        public static final int accessibility_screen_magnification_summary=0x7f0b051b;
        /**  Title for the accessibility preference screen to enable screen magnification. [CHAR LIMIT=35] 
         */
        public static final int accessibility_screen_magnification_title=0x7f0b051a;
        /**  Default description for an accessibility serivice if the latter doesn't provide one. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_service_default_description=0x7f0b054e;
        /**  Message for the prompt that lets users know that they have no accessibility related apps
         installed and that they can install TalkBack from Market. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_service_no_apps_message=0x7f0b054d;
        /**  Title for the prompt that lets users know that they have no accessibility related apps
         installed and that they can install TalkBack from Market. [CHAR LIMIT=50] 
         */
        public static final int accessibility_service_no_apps_title=0x7f0b054c;
        /**  Title for the accessibility preference category of accessibility services. [CHAR LIMIT=25] 
         */
        public static final int accessibility_services_title=0x7f0b0517;
        /**  Settings title in main settings screen for accessibility settings 
         */
        public static final int accessibility_settings=0x7f0b0515;
        /**  Settings title for accessibility settings screen 
         */
        public static final int accessibility_settings_title=0x7f0b0516;
        /**  Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_disabled=0x7f0b066b;
        /**  Content description of the enabled sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_enabled=0x7f0b066a;
        /**  Content description of the disabled sync icon for accessibility. [CHAR LIMIT=NONE] 
         */
        public static final int accessibility_sync_error=0x7f0b066c;
        /**  Title for the accessibility preference category of system related preferences. [CHAR LIMIT=25] 
         */
        public static final int accessibility_system_title=0x7f0b0518;
        /**  Title for the accessibility preference to enable large text. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_large_text_preference_title=0x7f0b0520;
        /**  Summary for the accessibility preference to auto update screen magnification. [CHAR LIMIT=50] 
         */
        public static final int accessibility_toggle_screen_magnification_auto_update_preference_summary=0x7f0b0523;
        /**  Title for the accessibility preference to auto update screen magnification. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_screen_magnification_auto_update_preference_title=0x7f0b0522;
        /**  Title for the accessibility preference to enable screen magnification. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_screen_magnification_preference_title=0x7f0b0521;
        /**  Title for the accessibility preference to speak passwords. [CHAR LIMIT=35] 
         */
        public static final int accessibility_toggle_speak_password_preference_title=0x7f0b0525;
        /**  Account settings header. [CHAR LIMIT=30] 
         */
        public static final int account_settings=0x7f0b02c7;
        /**  Account specific sync settings title [CHAR LIMIT=35] 
         */
        public static final int account_sync_settings_title=0x7f0b066f;
        /**  Label for screen showing the active device policy 
         */
        public static final int active_device_admin_msg=0x7f0b063f;
        /**  Title for settings of active input methods in each IME [CHAR LIMIT=35] 
         */
        public static final int active_input_method_subtypes=0x7f0b04dc;
        /**  Displayed when user launches a widget configuration activity that was uninstalled 
         */
        public static final int activity_not_found=0x7f0b0400;
        /**  The title of the dialog to pick an activity.  This is shown when there are multiple activities that can do a particular action.  For example, suppose you click on the "Share" menu item in the Browser.  Since you can share the webpage URL via many communication methods, this dialog would come up with choices like "Email", "IM", etc.  This is a generic message, and the previous example is a single possible scenario (so please don't assume it's for the browser or anything :) ). 
         */
        public static final int activity_picker_label=0x7f0b00e7;
        /**  Message of dialog confirming that user wants to revoke access to adb from all computers they have authorized 
         */
        public static final int adb_keys_warning_message=0x7f0b04f8;
        /**  Warning text to user about the implications of enabling USB debugging 
         */
        public static final int adb_warning_message=0x7f0b04f7;
        /**  Title of warning dialog about the implications of enabling USB debugging 
         */
        public static final int adb_warning_title=0x7f0b04f6;
        /**  Button label to add an account [CHAR LIMIT=20] 
         */
        public static final int add_account_label=0x7f0b0671;
        /**  Label for button to set the active device admin 
         */
        public static final int add_device_admin=0x7f0b0644;
        /**  Label for screen showing to add device policy 
         */
        public static final int add_device_admin_msg=0x7f0b0643;
        public static final int additional_system_update=0x7f0b0000;
        public static final int additional_system_update_menu=0x7f0b0001;
        /**  A menu item in "About phone" that allows the user to update the phone with settings
    from their cell phone carrier. The use of the string is similar to the string
    "system_update_settings_list_item_title" in this project. [CHAR LIMIT=25] 
         */
        public static final int additional_system_update_settings_list_item_title=0x7f0b0743;
        /**  Applications settings screen, setting check box title. If checked, applications show more settings options. 
         */
        public static final int advanced_settings=0x7f0b040b;
        /**  Applications settings screen, setting check box summary.  This is the summary for "Advanced settings" checkbox  
         */
        public static final int advanced_settings_summary=0x7f0b040c;
        /**  Wireless controls settings screen, setting check box label 
         */
        public static final int airplane_mode=0x7f0b00f3;
        /**  Sound settings screen, alarm volume slider title 
         */
        public static final int alarm_volume_title=0x7f0b02ab;
        /**  Sound settings screen, volume title 
         */
        public static final int all_volume_title=0x7f0b029f;
        /**  Strings for Dialog allow button 
         */
        public static final int allow=0x7f0b0009;
        /**  Message in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE] 
         */
        public static final int allow_bind_app_widget_activity_allow_bind=0x7f0b0506;
        /**  Title in dialog that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE] 
         */
        public static final int allow_bind_app_widget_activity_allow_bind_title=0x7f0b0505;
        /**  Text for checkbox that pops up when an app requests permission to bind a widget [CHAR LIMIT=NONE] 
         */
        public static final int allow_bind_app_widget_activity_always_allow_bind=0x7f0b0507;
        /**  Setting Checkbox title whether to allow mock locations 
         */
        public static final int allow_mock_location=0x7f0b04f4;
        /**  setting Checkbox summary whether to allow mock locations  
         */
        public static final int allow_mock_location_summary=0x7f0b04f5;
        /**  Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app was given user permission to create widgets. 
         */
        public static final int always_allow_bind_appwidgets_text=0x7f0b0425;
        /**  Used to describe the enabled state of the Android Beam feature when NFC, which it relies on, is turned off [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_disabled_summary=0x7f0b01db;
        /**  Explanation of the Android Beam feature in the Android Beam settings panel. The use of "beam" here is as a verb and not considered trademarked. [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_explained=0x7f0b01dd;
        /**  Used in the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32] 
         */
        public static final int android_beam_label=0x7f0b01dc;
        /**  Used to describe the off state of the Android Beam feature [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_off_summary=0x7f0b01da;
        /**  Used to describe the on state of the Android Beam feature [CHAR LIMIT=NONE] 
         */
        public static final int android_beam_on_summary=0x7f0b01d9;
        /**  Used to enter the Android Beam sharing preferences screen. This phrase is a trademark. [CHAR LIMIT=32] 
         */
        public static final int android_beam_settings_title=0x7f0b01d8;
        /**  UI debug setting: scaling factor for all Animator-based animations [CHAR LIMIT=25] 
         */
        public static final int animator_duration_scale_title=0x7f0b06c8;
        /**  Edit access point labels: The actual access point name
         */
        public static final int apn_apn=0x7f0b034e;
        /**  Edit acces  point labels: Authenticaton type
         */
        public static final int apn_auth_type=0x7f0b0359;
        /**  Authentication Typs: CHAP 
         */
        public static final int apn_auth_type_chap=0x7f0b035c;
        /**  Authentication Typs: None 
         */
        public static final int apn_auth_type_none=0x7f0b035a;
        /**  Authentication Typs: PAP 
         */
        public static final int apn_auth_type_pap=0x7f0b035b;
        /**  Authentication Typs: PAP or CHAP 
         */
        public static final int apn_auth_type_pap_chap=0x7f0b035d;
        /**  Screen title after user selects APNs setting option 
         */
        public static final int apn_edit=0x7f0b034b;
        /**  Edit access point labels: The port number of the proxy to use for this APN 
         */
        public static final int apn_http_port=0x7f0b0350;
        /**  Edit access point labels: The addess of the proxy to use for this APN 
         */
        public static final int apn_http_proxy=0x7f0b034f;
        /**  Edit access point labels: 
         */
        public static final int apn_mcc=0x7f0b0357;
        /**  Edit access point labels: The port on the proxy used for MMS
         */
        public static final int apn_mms_port=0x7f0b0356;
        /**  Edit access point labels: The proxy to use for MMS (multimedia messages)
         */
        public static final int apn_mms_proxy=0x7f0b0355;
        /**  Edit access point labels: 
         */
        public static final int apn_mmsc=0x7f0b0354;
        /**  Edit access point labels: 
         */
        public static final int apn_mnc=0x7f0b0358;
        /**  Edit access point labels: A label the user can give to the APN to allow him to differentiate it from the others 
         */
        public static final int apn_name=0x7f0b034d;
        /**  Edit access point label summary text when no value has been set 
 unknown quoting pattern: original -1, translation 1 
         */
        public static final int apn_not_set=0x7f0b034c;
        /**  Edit access point labels: The password that will be used when connecting to this APN 
         */
        public static final int apn_password=0x7f0b0352;
        /**  Edit access point labels: The protocol of the APN, e.g., "IPv4", "IPv6", or "IPv4/IPv6". 
         */
        public static final int apn_protocol=0x7f0b035f;
        /**  Edit access point labels: The protocol of the APN when roaming, e.g., "IPv4", "IPv6", or "IPv4/IPv6". 
         */
        public static final int apn_roaming_protocol=0x7f0b0360;
        /**  Edit access point labels: The server address to conenct to for this APN 
         */
        public static final int apn_server=0x7f0b0353;
        /**  APN Settings 
 APN settings screen title 
         */
        public static final int apn_settings=0x7f0b034a;
        /**  Edit access point labels: The type of APN 
         */
        public static final int apn_type=0x7f0b035e;
        /**  Edit access point labels: The username that will be used when conencting to this APN
         */
        public static final int apn_user=0x7f0b0351;
        /**  [CHAR LIMIT=200] Manage applications, text for dialog when disabling apps 
         */
        public static final int app_disable_dlg_text=0x7f0b0469;
        /**  [CHAR LIMIT=30] Manage applications, title for dialog when disabling apps 
         */
        public static final int app_disable_dlg_title=0x7f0b0468;
        /**  [CHAR LIMIT=200] Manage applications, text for dialog when disabling notifications for an app 
         */
        public static final int app_disable_notifications_dlg_text=0x7f0b046d;
        /**  [CHAR LIMIT=30] Manage applications, title for dialog when disabling notifications for an app 
         */
        public static final int app_disable_notifications_dlg_title=0x7f0b046c;
        /**  Manage applications, restore updated system application to factory version 
         */
        public static final int app_factory_reset=0x7f0b0423;
        /**  Manage applications, factory reset option dialog text for system applications. 
         */
        public static final int app_factory_reset_dlg_text=0x7f0b044a;
        /**  Manage applications, factory reset dialog title for system applications. 
         */
        public static final int app_factory_reset_dlg_title=0x7f0b0449;
        public static final int app_forward_locked=0x7f0b045f;
        /**  Manage applications. application installation location summary 
         */
        public static final int app_install_location_summary=0x7f0b0467;
        /**  Manage applications, application installation location title 
         */
        public static final int app_install_location_title=0x7f0b0466;
        /**  [CHAR LIMIT=NONE] Label for amount of memory use 
         */
        public static final int app_memory_use=0x7f0b05b4;
        /**  label for application name 
         */
        public static final int app_name_label=0x7f0b0512;
        /**  Manage applications, individual application dialog box message. Shown when the user somehow got into a state where it wants to manage some app that isn't found. 
         */
        public static final int app_not_found_dlg_text=0x7f0b0447;
        /**  Manage applications, individual application dialog box title. Shown when the user somehow got into a state where it wants to manage some app that isn't found. 
         */
        public static final int app_not_found_dlg_title=0x7f0b0446;
        /**  Summary for apps that aren't supported in limited users [CHAR LIMIT=none] 
         */
        public static final int app_not_supported_in_limited=0x7f0b079f;
        /**  Label for are-notifications-enabled checkbox in app details [CHAR LIMIT=20] 
         */
        public static final int app_notifications_switch_label=0x7f0b0785;
        /**  [CHAR LIMIT=NONE] Time label for an operation that has never executed. 
         */
        public static final int app_ops_never_used=0x7f0b0470;
        /**  [CHAR LIMIT=NONE] Time label for an operation that is currently running. 
         */
        public static final int app_ops_running=0x7f0b046f;
        /**  [CHAR LIMIT=NONE] App ops settings title, on main settings screen. If clicked, the user is taken to a settings screen for app operations 
         */
        public static final int app_ops_settings=0x7f0b046e;
        /**  UI debug setting: limit number of running background processes [CHAR LIMIT=25] 
         */
        public static final int app_process_limit_title=0x7f0b06cd;
        /**  Preference label for custom restrictions [CHAR LIMIT=35] 
         */
        public static final int app_restrictions_custom_label=0x7f0b079d;
        /**  Summary text for apps that are allowed to access accounts from the primary user [CHAR LIMIT=none] 
         */
        public static final int app_sees_restricted_accounts=0x7f0b07a0;
        /**  [CHAR LIMIT=NONE] Manage applications, text for dialog when disabling update apps 
         */
        public static final int app_special_disable_dlg_text=0x7f0b046b;
        /**  [CHAR LIMIT=NONE] Manage applications, title for dialog when disabling updated apps 
         */
        public static final int app_special_disable_dlg_title=0x7f0b046a;
        /**  Manage applications, individual application info screen title. For example, if they click on "Browser" in "Manage applications", the title of the next screen will be this 
         */
        public static final int application_info_label=0x7f0b040d;
        /**  Application Restrictions screen title [CHAR LIMIT=45] 
         */
        public static final int application_restrictions=0x7f0b0773;
        /**  Manage applications, individual application info screen, label under Storage heading. The amount of space taken up by the application itself (for example, the java compield files and things like that) 
         */
        public static final int application_size_label=0x7f0b0419;
        /**  Applications settings title, on main settings screen. If clicked, the user is taken to a settings screen full of application settings
         */
        public static final int applications_settings=0x7f0b0403;
        /**  Applications settings screen heading. The header for the Application settings screen. 
         */
        public static final int applications_settings_header=0x7f0b0405;
        /**  Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen. 
 Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen. This is the string to use for devices without a keyboard (so for example, there is no "Quick launch" settings here since that feature requires a keyboard) 
         */
        public static final int applications_settings_summary=0x7f0b0404;
        /**  Applications with restrictions header [CHAR LIMIT=45] 
         */
        public static final int apps_with_restrictions_header=0x7f0b0774;
        /**  Applicaitons with restrictions - settings button [CHAR LIMIT=30] 
         */
        public static final int apps_with_restrictions_settings_button=0x7f0b0775;
        /**  Manage applications, individual application screen, checkbox to control asking for compatibility mode.  
         */
        public static final int ask_compatibility=0x7f0b0429;
        /**  Security & location settings screen, setting check box label if Assisted GPS should be enabled 
         */
        public static final int assisted_gps=0x7f0b03c0;
        /**  Security & location settings screen, setting summary when Assisted GPS check box is clear 
         */
        public static final int assisted_gps_disabled=0x7f0b03c2;
        /**  Security & location settings screen, setting summary when Assisted GPS check box is selected 
         */
        public static final int assisted_gps_enabled=0x7f0b03c1;
        /**  Sound settings screen, setting option name checkbox to enable/disable audio recording features that improve audio recording in noisy environments 
         */
        public static final int audio_record_proc_title=0x7f0b02b1;
        /**  On Text & language settings screen, setting option name.  title of the setting to enable autocapitalization of entered text.  for example, after the user finishes a sentence, the next letter he types will automatically be capitalizated. [CHAR LIMIT=25] 
         */
        public static final int auto_caps=0x7f0b049b;
        /**  On Text & language settings screen, setting summary. Summary for the Auto-cap setting. [CHAR LIMIT=100]
         */
        public static final int auto_caps_summary=0x7f0b049c;
        /**  Manage applications, individual application screen, text under Launch by default heading if the app is NOT a default for actions 
         */
        public static final int auto_launch_disable_text=0x7f0b0426;
        /**  Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app is set as a default for some actions. 
         */
        public static final int auto_launch_enable_text=0x7f0b0424;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions 
         */
        public static final int auto_launch_label=0x7f0b040f;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions *and* whether the app was given permission by the user to create widgets 
         */
        public static final int auto_launch_label_generic=0x7f0b0410;
        /**  On Text & language settings screen, setting option name. title of the setting to enable automatic punctuation of entered text.  for example, it will change an entered "youre" to "you're". 
         */
        public static final int auto_punctuate=0x7f0b049d;
        /**  On Text & language settings screen, setting summary for the Auto-punctuate setting. 
         */
        public static final int auto_punctuate_summary=0x7f0b049f;
        /**  On Text & language settings screen, setting option name. title of the setting to enable autoreplace of entered text. auto replace is a feature that will automatically correct mistyped words. 
         */
        public static final int auto_replace=0x7f0b0499;
        /**  On Text & language settings screen, setting summary.  This is the summary for the "Auto-replace" setting. 
         */
        public static final int auto_replace_summary=0x7f0b049a;
        /**  Summary text of the "automatic restore" setting 
         */
        public static final int auto_restore_summary=0x7f0b0635;
        /**  Auto-restore menu title 
         */
        public static final int auto_restore_title=0x7f0b0634;
        /**  Sound & display settings screen, setting option name to change whether the screen adjusts automatically based on lighting conditions 
         */
        public static final int automatic_brightness=0x7f0b02de;
        /**  CPU awake time title 
         */
        public static final int awake=0x7f0b0579;
        /**  Data synchronization settings screen, title of setting that controls whether background data should be used [CHAR LIMIT=30] 
         */
        public static final int background_data=0x7f0b0672;
        /**  Data synchronization settings screen, message of dialog that confirms the user's unchecking of background data [CHAR LIMIT=200] 
         */
        public static final int background_data_dialog_message=0x7f0b0675;
        /**  Data synchronization settings screen, title of dialog that confirms the user's unchecking of background data [CHAR LIMIT=20] 
         */
        public static final int background_data_dialog_title=0x7f0b0674;
        /**  Data synchronization settings screen, summary of setting that controls whether background data should be used [CHAR LIMIT=60] 
         */
        public static final int background_data_summary=0x7f0b0673;
        /**  Running service details, description for background process. 
         */
        public static final int background_process_stop_description=0x7f0b048c;
        /**  Default summary text of the "Configure backup account" setting [CHAR LIMIT=80]
         */
        public static final int backup_configure_account_default_summary=0x7f0b0633;
        /**  Configure backup account options menu title [CHAR LIMIT=25]
         */
        public static final int backup_configure_account_title=0x7f0b0632;
        /**  Summary text of the "back up data" setting 
         */
        public static final int backup_data_summary=0x7f0b0631;
        /**  Backup data menu title 
         */
        public static final int backup_data_title=0x7f0b0630;
        /**  Dialog title for confirmation to erase backup data from server 
         */
        public static final int backup_erase_dialog_message=0x7f0b063d;
        /**  Dialog title for confirmation to erase backup data from server 
         */
        public static final int backup_erase_dialog_title=0x7f0b063c;
        /**   Title for security picker when choosing a facelock's backup unlock method: Pattern/PIN [CHAR LIMIT=22] 
         */
        public static final int backup_lock_settings_picker_title=0x7f0b013b;
        /**  Button label for cancelling the new-password operation and retaining the user's previous full-backup password 
         */
        public static final int backup_pw_cancel_button_text=0x7f0b0741;
        /**  Button label for setting the user's new full-backup password 
         */
        public static final int backup_pw_set_button_text=0x7f0b0740;
        /**  Backup section title 
         */
        public static final int backup_section_title=0x7f0b062e;
        /**  Band mode screen. Status message when unsuccessful. 
         */
        public static final int band_mode_failed=0x7f0b00d7;
        /**  Band mode screen.  Loading message. 
         */
        public static final int band_mode_loading=0x7f0b00d5;
        /**  Band mode screen. Button caption to set the bandmode. 
         */
        public static final int band_mode_set=0x7f0b00d6;
        /**  Band mode screen. Statusm essage when successful. 
         */
        public static final int band_mode_succeeded=0x7f0b00d8;
        /**  Band Mode Selection 
 Band mode screen.  Title of activity. 
         */
        public static final int band_mode_title=0x7f0b00d4;
        /**  About phone screen,  setting option name
         */
        public static final int baseband_version=0x7f0b02ff;
        /**  Label for app details action 
         */
        public static final int battery_action_app_details=0x7f0b0597;
        /**  Label for app settings action 
         */
        public static final int battery_action_app_settings=0x7f0b0598;
        /**  Label for bluetooth settings 
         */
        public static final int battery_action_bluetooth=0x7f0b059b;
        /**  Label for display settings 
         */
        public static final int battery_action_display=0x7f0b0599;
        /**  Label for force stop action 
         */
        public static final int battery_action_stop=0x7f0b0596;
        /**  Label for wifi settings 
         */
        public static final int battery_action_wifi=0x7f0b059a;
        /**  [CHAR LIMIT=50] Description for power consumed by applications 
         */
        public static final int battery_desc_apps=0x7f0b05a7;
        /**  Description for bluetooth power consumption detail 
         */
        public static final int battery_desc_bluetooth=0x7f0b05a4;
        /**  Description for power consumed by display 
         */
        public static final int battery_desc_display=0x7f0b05a0;
        /**  Description for cell radio detail 
         */
        public static final int battery_desc_radio=0x7f0b059e;
        /**  Description for standby detail 
         */
        public static final int battery_desc_standby=0x7f0b059d;
        /**  [CHAR LIMIT=50] Description for power consumed by users 
         */
        public static final int battery_desc_users=0x7f0b05ab;
        /**  Description for voice call detail 
         */
        public static final int battery_desc_voice=0x7f0b059c;
        /**  Description for wifi connectivity 
         */
        public static final int battery_desc_wifi=0x7f0b05a2;
        /**  Used to show an amount of time in the form "d days, h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_days=0x7f0b0508;
        /**  Used to show an amount of time in the form "d days, h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_days_no_seconds=0x7f0b050c;
        /**  Used to show an amount of time in the form "h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_hours=0x7f0b0509;
        /**  Used to show an amount of time in the form "h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_hours_no_seconds=0x7f0b050d;
        /**  Used to show an amount of time in the form "m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_minutes=0x7f0b050a;
        /**  Used to show an amount of time in the form "m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_minutes_no_seconds=0x7f0b050e;
        /**  Used to show an amount of time in the form "s seconds" in BatteryHistory 
         */
        public static final int battery_history_seconds=0x7f0b050b;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_awake_battery=0x7f0b0045;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_awake_plugged=0x7f0b0046;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_cold=0x7f0b005c;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_dead=0x7f0b0059;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_good=0x7f0b0057;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_label=0x7f0b003e;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_over_voltage=0x7f0b005a;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_overheat=0x7f0b0058;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_unknown=0x7f0b0056;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_unspecified_failure=0x7f0b005b;
        /**  The title of the activity to see battery info. 
         */
        public static final int battery_info_label=0x7f0b00ea;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_level_label=0x7f0b003d;
        public static final int battery_info_power_ac=0x7f0b0051;
        public static final int battery_info_power_ac_usb=0x7f0b0054;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_power_label=0x7f0b003b;
        public static final int battery_info_power_unknown=0x7f0b0055;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_power_unplugged=0x7f0b0050;
        public static final int battery_info_power_usb=0x7f0b0052;
        public static final int battery_info_power_wireless=0x7f0b0053;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_scale_label=0x7f0b003c;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_screen_on=0x7f0b0047;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging=0x7f0b0049;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging_ac=0x7f0b004a;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging_usb=0x7f0b004b;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging_wireless=0x7f0b004c;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_discharging=0x7f0b004d;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_full=0x7f0b004f;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_label=0x7f0b003a;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_not_charging=0x7f0b004e;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_unknown=0x7f0b0048;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_technology_label=0x7f0b003f;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_temperature_label=0x7f0b0042;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_temperature_units=0x7f0b0043;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_uptime=0x7f0b0044;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_voltage_label=0x7f0b0040;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_voltage_units=0x7f0b0041;
        /**  Phone info screen, section titles: 
         */
        public static final int battery_level_title=0x7f0b0349;
        /**  Battery usage since user reset the stats 
         */
        public static final int battery_since_reset=0x7f0b056f;
        /**  Battery usage since unplugged 
         */
        public static final int battery_since_unplugged=0x7f0b056e;
        /**  [CHAR LIMIT=25] Label for battery stats charging state graph 
         */
        public static final int battery_stats_charging_label=0x7f0b0572;
        /**  Battery usage duration 
         */
        public static final int battery_stats_duration=0x7f0b0571;
        /**  [CHAR LIMIT=25] Label for battery stats gps on state graph 
         */
        public static final int battery_stats_gps_on_label=0x7f0b0574;
        /**  Battery usage during last unplugged period 
         */
        public static final int battery_stats_last_duration=0x7f0b0578;
        /**  Battery usage on battery duration 
         */
        public static final int battery_stats_on_battery=0x7f0b0570;
        /**  [CHAR LIMIT=25] Label for battery stats phone signal strength graph 
         */
        public static final int battery_stats_phone_signal_label=0x7f0b0577;
        /**  [CHAR LIMIT=25] Label for battery stats screen on state graph 
         */
        public static final int battery_stats_screen_on_label=0x7f0b0573;
        /**  [CHAR LIMIT=25] Label for battery stats wake lock state graph 
         */
        public static final int battery_stats_wake_lock_label=0x7f0b0576;
        /**  [CHAR LIMIT=25] Label for battery stats wifi running state graph 
         */
        public static final int battery_stats_wifi_running_label=0x7f0b0575;
        /**  Phone info screen, section titles: 
         */
        public static final int battery_status_title=0x7f0b0348;
        /**  [CHAR LIMIT=100] Suggestion for getting apps to consume less power due to GPS
         */
        public static final int battery_sugg_apps_gps=0x7f0b05a9;
        /**  Suggestion for exploring application info to stop or uninstall 
         */
        public static final int battery_sugg_apps_info=0x7f0b05a8;
        /**  Suggestion for getting apps to consume less power 
         */
        public static final int battery_sugg_apps_settings=0x7f0b05aa;
        /**  Suggestion for bluetooth 
         */
        public static final int battery_sugg_bluetooth_basic=0x7f0b05a5;
        /**  Suggestion for bluetooth headset 
         */
        public static final int battery_sugg_bluetooth_headset=0x7f0b05a6;
        /**  Suggestion for reducing display power 
         */
        public static final int battery_sugg_display=0x7f0b05a1;
        /**  Suggestion to switch to airplane mode to save power 
         */
        public static final int battery_sugg_radio=0x7f0b059f;
        /**  Suggestion for wifi connectivity power drain 
         */
        public static final int battery_sugg_wifi=0x7f0b05a3;
        /**  Edit Beaerer Info of APN 
         */
        public static final int bearer=0x7f0b0364;
        /**  Security settings screen when using face unlock, setting option name to start an activity that allows the user to improve accuracy by adding additional enrollment faces 
         */
        public static final int biometric_weak_improve_matching_title=0x7f0b0113;
        /**  On the security settings screen when using face unlock.  The summary of the liveliness checkbox 
         */
        public static final int biometric_weak_liveliness_summary=0x7f0b0115;
        /**  On the security settings screen when using face unlock.  This checkbox is used to toggle whether liveliness detection is required.  If it is checked the user must blink during unlock to prove it's not a photo  
         */
        public static final int biometric_weak_liveliness_title=0x7f0b0114;
        /**  Used as setting title (for checkbox) on second screen after selecting Bluetooth settings 
         */
        public static final int bluetooth=0x7f0b005d;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. 
         */
        public static final int bluetooth_a2dp_profile_summary_connected=0x7f0b01ae;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. 
         */
        public static final int bluetooth_a2dp_profile_summary_use_for=0x7f0b01b6;
        /**  Bluetooth settings. Title of the advanced bluetooth settings screen [CHAR LIMIT=30]
         */
        public static final int bluetooth_advanced_titlebar=0x7f0b0199;
        /**  Strings for asking to the user whether to allow an app to enable discovery mode 
         */
        public static final int bluetooth_ask_discovery=0x7f0b0085;
        /**  Strings for asking to the user whether to allow an app to enable bluetooth 
         */
        public static final int bluetooth_ask_enablement=0x7f0b0084;
        /**  Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode 
         */
        public static final int bluetooth_ask_enablement_and_discovery=0x7f0b0087;
        public static final int bluetooth_ask_enablement_and_lasting_discovery=0x7f0b0088;
        public static final int bluetooth_ask_lasting_discovery=0x7f0b0086;
        /**  Strings for device profile auto connect setting 
         */
        public static final int bluetooth_auto_connect=0x7f0b008b;
        /**  Message for confirmation of passkey to complete pairing. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_confirm_passkey_msg=0x7f0b0181;
        /**  Bluetooth settings.  The title of the screen to pick which profiles to connect to on the device.  For example, headphones may have both A2DP and headset, this allows the user to choose which one he wants to connect to. 
         */
        public static final int bluetooth_connect_specific_profiles_title=0x7f0b019b;
        /**  Bluetooth settings.  Message when connected to a device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected=0x7f0b0071;
        /**  Bluetooth settings.  Message when connected to a device, except for media audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_a2dp=0x7f0b0073;
        /**  Bluetooth settings.  Message when connected to a device, except for phone audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_headset=0x7f0b0072;
        /**  Bluetooth settings.  Message when connected to a device, except for phone/media audio. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_headset_no_a2dp=0x7f0b0075;
        /**  Bluetooth settings.  Message when connected to a device, except for map. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_connected_no_map=0x7f0b0074;
        /**  Bluetooth settings.  Message when connecting to a device 
         */
        public static final int bluetooth_connecting=0x7f0b0078;
        /**  Message for the error dialog when BT connecting operation fails generically. 
         */
        public static final int bluetooth_connecting_error_message=0x7f0b018b;
        /**  Bluetooth connection permission Alert Activity text [CHAR LIMIT=none]
         */
        public static final int bluetooth_connection_dialog_text=0x7f0b008e;
        /**  Notification message when a remote Bluetooth device wants to connect to a Bluetooth profile [CHAR LIMIT=none]
         */
        public static final int bluetooth_connection_notif_message=0x7f0b008d;
        /**  Activity label of BluetoothPermissionActivity [CHAR LIMIT=none]
         */
        public static final int bluetooth_connection_permission_request=0x7f0b008c;
        /** Bluetooth settings screen, summary text for Bluetooth device with no name 
         */
        public static final int bluetooth_device=0x7f0b007b;
        /**  Bluetooth settings. Connection options screen. Title for checkbox to enable incoming file transfers [CHAR LIMIT=30] 
         */
        public static final int bluetooth_device_advanced_enable_opp_title=0x7f0b01ad;
        /**  Bluetooth settings.  Connection options screen.  The summary of the online mode checkbox.  This describes what the setting does in the context of the screen. 
         */
        public static final int bluetooth_device_advanced_online_mode_summary=0x7f0b01aa;
        /**  Bluetooth settings.  Connection options screen.  The title of the checkbox that controls whether the device is in "online" mode or "offline" mode.  This essentially is the checkbox that controls whether any checks / unchecks on a profile should be applied immediately, or next time the device is connected. 
         */
        public static final int bluetooth_device_advanced_online_mode_title=0x7f0b01a9;
        /**  Bluetooth settings.  Connection options screen.  The title of the header that is above all of the profiles. 
         */
        public static final int bluetooth_device_advanced_profile_header_title=0x7f0b01ab;
        /**  Bluetooth settings. Connection options screen. Title for option to rename the device. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_device_advanced_rename_device=0x7f0b01ac;
        /**  Bluetooth settings.  Connection options screen.  The title of the screen. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_device_advanced_title=0x7f0b01a8;
        /**  Bluetooth settings.  Context menu item for a device.  Action will connect to all profiles on the device. 
         */
        public static final int bluetooth_device_context_connect=0x7f0b0192;
        /**  Bluetooth settings.  Context menu item for a device.  Action will take the user to another screen where they can choose exactly which profiles to connect to. 
         */
        public static final int bluetooth_device_context_connect_advanced=0x7f0b0197;
        /**  Bluetooth settings.  Context menu item for a device.  Action will disconnect from all profiles on the device. 
         */
        public static final int bluetooth_device_context_disconnect=0x7f0b0193;
        /**  Bluetooth settings.  Context menu item for a device.  Action will disconnect and remove pairing with the device. 
         */
        public static final int bluetooth_device_context_disconnect_unpair=0x7f0b0196;
        /**  Bluetooth settings.  Context menu item for a device.  Action will first pair, and then connect to all profiles on the device. 
         */
        public static final int bluetooth_device_context_pair_connect=0x7f0b0194;
        /**  Bluetooth settings.  Context menu item for a device.  Action will remove pairing with the device. 
         */
        public static final int bluetooth_device_context_unpair=0x7f0b0195;
        /**  Bluetooth settings screen, image description for device details button. This opens the screen to rename, unpair, etc. a single device. 
         */
        public static final int bluetooth_device_details=0x7f0b0067;
        /**  Bluetooth settings screen, title for the current bluetooth name setting 
         */
        public static final int bluetooth_device_name=0x7f0b0066;
        /**  Bluetooth settings screen, heading above the list of nearby bluetooth devices 
         */
        public static final int bluetooth_devices=0x7f0b0065;
        /**  Bluetooth settings.  Message for disabling a profile of a bluetooth device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_disable_profile_message=0x7f0b0070;
        /**  Bluetooth settings.  Dialog title to disable a single profile of a device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_disable_profile_title=0x7f0b006f;
        /**  Bluetooth settings.  Message for disconnecting from the A2DP profile. [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_a2dp_profile=0x7f0b01a3;
        /**  Bluetooth settings.  Message for disconnecting from all profiles of a bluetooth device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_disconnect_all_profiles=0x7f0b006e;
        /**  Bluetooth settings.  Message for disconnecting from the headset profile. [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_headset_profile=0x7f0b01a4;
        /**  Bluetooth settings.  Message for disconnecting from the HID profile. [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_hid_profile=0x7f0b01a5;
        /**  Bluetooth settings.  Message for disconnecting from the PAN profile (NAP role). [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_pan_nap_profile=0x7f0b01a7;
        /**  Bluetooth settings.  Message for disconnecting from the PAN profile (user role). [CHAR LIMIT=80] 
         */
        public static final int bluetooth_disconnect_pan_user_profile=0x7f0b01a6;
        /**  Bluetooth settings.  Dialog title to confirm disconnecting from all profiles of a device. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_disconnect_title=0x7f0b006d;
        /**  Bluetooth settings.  Message when a device is disconnected 
         */
        public static final int bluetooth_disconnected=0x7f0b0076;
        /**  Bluetooth settings.  Message when disconnecting from a device 
         */
        public static final int bluetooth_disconnecting=0x7f0b0077;
        /**  Message when bluetooth dialog when passkey or pin needs to be displayed. 
         */
        public static final int bluetooth_display_passkey_pin_msg=0x7f0b0183;
        /**  Bluetooth settings.  Dock Setting Title 
         */
        public static final int bluetooth_dock_settings=0x7f0b01bc;
        /**  Bluetooth settings.  Dock Setting Dialog - Checkbox selection 2: Use dock for media audio 
         */
        public static final int bluetooth_dock_settings_a2dp=0x7f0b01bf;
        /**  Bluetooth settings.  Dock Setting Dialog - Checkbox selection 1: Use dock as speaker phone 
         */
        public static final int bluetooth_dock_settings_headset=0x7f0b01be;
        /**  Bluetooth settings.  Dock Setting Dialog - Remember setting and don't ask user again 
         */
        public static final int bluetooth_dock_settings_remember=0x7f0b01c0;
        /**  Bluetooth settings.  Dock Setting Dialog Title 
         */
        public static final int bluetooth_dock_settings_title=0x7f0b01bd;
        /**  Bluetooth settings. Text displayed when Bluetooth is off and device list is empty [CHAR LIMIT=50]
         */
        public static final int bluetooth_empty_list_bluetooth_off=0x7f0b019a;
        /**  Checkbox label for alphanumeric PIN entry (default is numeric PIN). [CHAR LIMIT=50] 
         */
        public static final int bluetooth_enable_alphanumeric_pin=0x7f0b017d;
        /**  Message when bluetooth dialog for passkey entry is showing. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_passkey_msg=0x7f0b017c;
        /**  Pairing dialog text to remind user to enter the passkey on the other device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_passkey_other_device=0x7f0b0180;
        /**  Message when bluetooth dialog for pin entry is showing. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_pin_msg=0x7f0b017b;
        /**  Pairing dialog text to remind user to enter the PIN on the other device. [CHAR LIMIT=NONE] 
         */
        public static final int bluetooth_enter_pin_other_device=0x7f0b017f;
        /**  Title for BT error dialogs. 
         */
        public static final int bluetooth_error_title=0x7f0b0186;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. 
         */
        public static final int bluetooth_headset_profile_summary_connected=0x7f0b01af;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. 
         */
        public static final int bluetooth_headset_profile_summary_use_for=0x7f0b01b7;
        /**  Bluetooth settings. Connection options screen. The summary for the HID checkbox preference when HID is connected. 
         */
        public static final int bluetooth_hid_profile_summary_connected=0x7f0b01b3;
        /**  Bluetooth settings. Connection options screen. The summary
         for the HID checkbox preference that describes how checking it
         will set the HID profile as preferred. 
         */
        public static final int bluetooth_hid_profile_summary_use_for=0x7f0b01b9;
        /**  Message when bluetooth incoming pairing request for (2.1 devices) dialog is showing 
 syntax error in translation for bluetooth_confirm_passkey_msg (3708312912841950052) org.xmlpull.v1.XmlPullParserException: name expected (position:START_TAG <null>@1:241 in     <string name="bluetooth_confirm_passkey_msg" msgid="3708312912841950052">"Zum Pairing mit:&gt;&lt;b&gt;<xliff:g id="DEVICE_NAME">%1$s</xliff:g>&lt;/b&gt;&lt;br&gt;&lt;br&gt;Vergewissern Sie sich, dass folgender Schlüssel angezeigt wird:<&lt;br&gt;&lt;b&gt;P<xliff:g id="PASSKEY">%2$s</xliff:g>&lt;/b&gt;."</string>
)  
         */
        public static final int bluetooth_incoming_pairing_msg=0x7f0b0182;
        /**  Bluetooth settings screen, summary after selecting Discoverable check box [CHAR LIMIT=50] 
         */
        public static final int bluetooth_is_discoverable=0x7f0b005e;
        /**  Bluetooth settings screen, summary when Discoverable duration is set to "forever" [CHAR LIMIT=50] 
         */
        public static final int bluetooth_is_discoverable_always=0x7f0b005f;
        /**  Bluetooth settings screen, check box label whether or not to allow
        bluetooth voice dialing when lock screen is up
         */
        public static final int bluetooth_lock_voice_dialing=0x7f0b0063;
        /**  Bluetooth settings screen, lock voice dialing checkbox summary text 
         */
        public static final int bluetooth_lock_voice_dialing_summary=0x7f0b0064;
        /**  Bluetooth message permission Alert Activity text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_map_acceptance_dialog_text=0x7f0b0094;
        /**  Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference when map is connected. 
         */
        public static final int bluetooth_map_profile_summary_connected=0x7f0b01b1;
        /**  Bluetooth settings.  Connection options screen.  The summary for the map checkbox preference that describes how checking it will set the map profile as preferred. 
         */
        public static final int bluetooth_map_profile_summary_use_for=0x7f0b01bb;
        /**  Activity label of BluetoothMessagePermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none] 
         */
        public static final int bluetooth_map_request=0x7f0b0093;
        /**  Bluetooth settings.  Menu option to Bluetooth advanced settings [CHAR LIMIT=20]
         */
        public static final int bluetooth_menu_advanced=0x7f0b0198;
        /**  Bluetooth settings screen, summary text when there isn't a name set (for the name setting) 
         */
        public static final int bluetooth_name_not_set=0x7f0b0069;
        /** Bluetooth settings screen, text that appears when scanning for devices is finished and no nearby bluetooth device was found [CHAR LIMIT=40]
         */
        public static final int bluetooth_no_devices_found=0x7f0b007d;
        /**  Bluetooth settings screen, summary text when not discoverable and no paired devices [CHAR LIMIT=50] 
         */
        public static final int bluetooth_not_visible_to_other_devices=0x7f0b0060;
        /**  Notification message when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_message=0x7f0b0080;
        /**  Notification ticker text (shown in the status bar) when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_ticker=0x7f0b007e;
        /**  Notification title when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_title=0x7f0b007f;
        /**  Bluetooth on time 
         */
        public static final int bluetooth_on_time=0x7f0b057b;
        /**  Bluetooth settings screen, summary text when not discoverable with paired devices [CHAR LIMIT=50] 
         */
        public static final int bluetooth_only_visible_to_paired_devices=0x7f0b0061;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. 
         */
        public static final int bluetooth_opp_profile_summary_connected=0x7f0b01b0;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. 
         */
        public static final int bluetooth_opp_profile_summary_not_connected=0x7f0b01b2;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. 
         */
        public static final int bluetooth_opp_profile_summary_use_for=0x7f0b01b8;
        /** Bluetooth settings screen, summary text under individual Bluetooth devices when pairing 
         */
        public static final int bluetooth_pairing=0x7f0b007a;
        /**  Button text for accepting an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_accept=0x7f0b0184;
        /**  Button text for declining an incoming pairing request. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_pairing_decline=0x7f0b0185;
        /**  Message for the error dialog when BT pairing fails because the other device is down. 
         */
        public static final int bluetooth_pairing_device_down_error_message=0x7f0b0189;
        /**  Message for the error dialog when BT pairing fails generically. 
         */
        public static final int bluetooth_pairing_error_message=0x7f0b0187;
        /**  Message for the error dialog when BT pairing fails because the PIN /
    Passkey entered is incorrect. 
         */
        public static final int bluetooth_pairing_pin_error_message=0x7f0b0188;
        /**  Message for the error dialog when BT pairing fails because the other device rejected the pairing. 
         */
        public static final int bluetooth_pairing_rejected_error_message=0x7f0b018a;
        /**  ======================================================================================= 
 Note: The opening brackets of HTML style tags are escaped (e.g. "<b>" is "&lt;b>") in   
   the following resources to enable formatting followed by HTML styling, as described   
   here:  http://developer.android.com/guide/topics/resources/string-resource.html       
 ======================================================================================= 
 Title for the dialog to enter PIN. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_pairing_request=0x7f0b017a;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (NAP role). [CHAR LIMIT=25]
         */
        public static final int bluetooth_pan_nap_profile_summary_connected=0x7f0b01b5;
        /**  Bluetooth settings. Connection options screen. The summary
         for the PAN checkbox preference that describes how checking it
         will set the PAN profile as preferred. 
         */
        public static final int bluetooth_pan_profile_summary_use_for=0x7f0b01ba;
        /**  Bluetooth settings. Connection options screen. The summary for the checkbox preference when PAN is connected (user role). [CHAR LIMIT=25]
         */
        public static final int bluetooth_pan_user_profile_summary_connected=0x7f0b01b4;
        /**  Bluetooth phone book permission Alert Activity text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_pb_acceptance_dialog_text=0x7f0b0090;
        /** FIXME SHOULD BE REMOVED AND ALL LANG VERSIONS FIXED TO ABOVE NAME 
         */
        public static final int bluetooth_pb_remember_choice=0x7f0b0092;
        /**  Strings for dialog title when asking to the user whether to allow an app to enable discovery mode 
         */
        public static final int bluetooth_permission_request=0x7f0b0083;
        /**  Activity label of BluetoothPbPermissionActivity, also used as Strings in the permission dialog [CHAR LIMIT=none] 
         */
        public static final int bluetooth_phonebook_request=0x7f0b008f;
        /**  Bluetooth PIN hint text (below the text entry box). [CHAR LIMIT=30] 
         */
        public static final int bluetooth_pin_values_hint=0x7f0b017e;
        /**  Bluetooth settings: The sub heading for device settings. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_preference_device_settings=0x7f0b018f;
        /**  Bluetooth settings: The sub heading for available devices during and after scanning. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_found_devices=0x7f0b0191;
        /**  Bluetooth settings: The sub heading for devices which have already been paired with this device. [CHAR LIMIT=40] 
         */
        public static final int bluetooth_preference_paired_devices=0x7f0b0190;
        /**  Bluetooth settings: The title of the preference (list item) that initiates a scan for devices 
         */
        public static final int bluetooth_preference_scan_title=0x7f0b018c;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. 
         */
        public static final int bluetooth_profile_a2dp=0x7f0b019c;
        /**  Bluetooth settings screen, image description for profile of a device details button. 
         */
        public static final int bluetooth_profile_details=0x7f0b0068;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. 
         */
        public static final int bluetooth_profile_headset=0x7f0b019d;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the HID profile. 
         */
        public static final int bluetooth_profile_hid=0x7f0b019f;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the map profile. 
         */
        public static final int bluetooth_profile_map=0x7f0b01a2;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. 
         */
        public static final int bluetooth_profile_opp=0x7f0b019e;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (accessing Internet through remote device). [CHAR LIMIT=40]
         */
        public static final int bluetooth_profile_pan=0x7f0b01a0;
        /**  Bluetooth settings. The user-visible string that is used whenever referring to the PAN profile (sharing this device's Internet connection). [CHAR LIMIT=40]
         */
        public static final int bluetooth_profile_pan_nap=0x7f0b01a1;
        /**  Bluetooth settings check box summary for turning on bluetooth 
         */
        public static final int bluetooth_quick_toggle_summary=0x7f0b0176;
        /**  Bluetooth settings 
 Bluetooth settings check box title on Main Settings screen 
         */
        public static final int bluetooth_quick_toggle_title=0x7f0b0175;
        /**  Bluetooth phone book permission Alert Activity checkbox text [CHAR LIMIT=none] 
         */
        public static final int bluetooth_remember_choice=0x7f0b0091;
        /**  Bluetooth settings screen, confirmation button for rename device dialog. [CHAR LIMIT=20] 
         */
        public static final int bluetooth_rename_button=0x7f0b006c;
        /**  Bluetooth settings screen, menu item to change this device's Bluetooth name. [CHAR LIMIT=30] 
         */
        public static final int bluetooth_rename_device=0x7f0b006b;
        /**  Bluetooth settings screen, menu item to scan for nearby bluetooth devices 
         */
        public static final int bluetooth_scan_for_devices=0x7f0b006a;
        /**  Bluetooth settings: The title of the action button that initiates a search for nearby devices [CHAR LIMIT=20] 
         */
        public static final int bluetooth_search_for_devices=0x7f0b018d;
        /**  Bluetooth settings: The title of the action button while a search for nearby devices is in progress [CHAR LIMIT=20] 
         */
        public static final int bluetooth_searching_for_devices=0x7f0b018e;
        /** Used as title on second screen after selecting Bluetooth settings 
         */
        public static final int bluetooth_settings=0x7f0b0177;
        /** Wireless controls screen, settings summary for the item tot ake you to the bluetooth settings screen 
         */
        public static final int bluetooth_settings_summary=0x7f0b0179;
        /** Wireless controls screen, settings title for the item to take you to the bluetooth settings screen 
         */
        public static final int bluetooth_settings_title=0x7f0b0178;
        /**  Bluetooth settings screen, menu to show the list of received files [CHAR LIMIT=30] 
         */
        public static final int bluetooth_show_received_files=0x7f0b0081;
        /**  Bluetooth Tethering settings
 Label for bluetooth tether checkbox [CHAR LIMIT=25]
         */
        public static final int bluetooth_tether_checkbox_text=0x7f0b0398;
        /**  Bluetooth available subtext - shown when Bluetooth tethering is turned on but it is not currently tethered to any devices [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_available_subtext=0x7f0b0399;
        /**  Bluetooth connected subtext - shown when a device is tethered over Bluetooth [CHAR LIMIT=60]
         */
        public static final int bluetooth_tethering_device_connected_subtext=0x7f0b039a;
        /**  Bluetooth connected subtext - shown when multiple devices are tethered over Bluetooth [CHAR LIMIT=60]
         */
        public static final int bluetooth_tethering_devices_connected_subtext=0x7f0b039b;
        /**  Bluetooth errored subtext - shown when Bluetooth is broken for some reason [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_errored_subtext=0x7f0b039d;
        /**  Bluetooth tethering off subtext - shown when Bluetooth Tethering is turned off [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_off_subtext=0x7f0b039c;
        /**  Bluetooth Tethering settings. Error message shown when trying to connect an 8th device [CHAR LIMIT=50]
         */
        public static final int bluetooth_tethering_overflow_error=0x7f0b039e;
        /**  Strings for msg to display to user while bluetooth is turning off [CHAR LIMIT=60] 
         */
        public static final int bluetooth_turning_off=0x7f0b008a;
        /**  Strings for msg to display to user while bluetooth is turning on [CHAR LIMIT=60] 
         */
        public static final int bluetooth_turning_on=0x7f0b0089;
        /**  Bluetooth settings.  Message when the device state is unknown 
         */
        public static final int bluetooth_unknown=0x7f0b0079;
        /**  Bluetooth Tethering settings.  Message for untethering from a bluetooth device [CHAR LIMIT=50]
         */
        public static final int bluetooth_untether_blank=0x7f0b039f;
        /**  Bluetooth settings screen, option name to pick discoverability timeout duration (a list dialog comes up) 
         */
        public static final int bluetooth_visibility_timeout=0x7f0b0062;
        /**  Sound & display settings screen, setting option name to change brightness 
         */
        public static final int brightness=0x7f0b02ce;
        /**  Sound & display settings screen, setting option summary to change brightness 
         */
        public static final int brightness_summary=0x7f0b02cf;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int bssid_label=0x7f0b028b;
        /**  Setting Checkbox title whether to enable bluetooth HCI snoop log 
         */
        public static final int bt_hci_snoop_log=0x7f0b04ed;
        /**  setting Checkbox summary whether to capture all bluetooth HCI packets in a file 
         */
        public static final int bt_hci_snoop_log_summary=0x7f0b04ee;
        /**  [CHAR LIMIT=NONE] Setting checkbox title for Whether to include bug report item in power menu. 
         */
        public static final int bugreport_in_power=0x7f0b04e9;
        /**  [CHAR LIMIT=NONE] Setting checkbox summary for Whether to include bug report item in power 
         */
        public static final int bugreport_in_power_summary=0x7f0b04ea;
        /**  About phone screen,  setting option name
         */
        public static final int build_number=0x7f0b0301;
        /**  Summary for built-in keyboard settings 
         */
        public static final int builtin_keyboard_settings_summary=0x7f0b04e2;
        /**  Title for built-in keyboard settings 
         */
        public static final int builtin_keyboard_settings_title=0x7f0b04e1;
        /**  Manage applications, Header name used for cache information 
         */
        public static final int cache_header_label=0x7f0b0413;
        /**  Manage applications, label that appears next to the cache size 
         */
        public static final int cache_size_label=0x7f0b0415;
        /**  Label for a process item representing a background process 
         */
        public static final int cached=0x7f0b0476;
        /**  Main settings screen, Call settings summary for item to go into call settings 
         */
        public static final int call_settings_summary=0x7f0b038b;
        /**  Main settings screen, Call settings title for item to go into the call settings 
         */
        public static final int call_settings_title=0x7f0b038a;
        /**  ======================================================================================= 
 NEW STUFF 
 ======================================================================================= 
 Button label for generic cancel action 
         */
        public static final int cancel=0x7f0b00ef;
        /**  Messaage shown in dialog when you can't manually sync 
         */
        public static final int cant_sync_dialog_message=0x7f0b0692;
        /**  Title of dialog shown when you can't manually sync an item because it's disabled 
         */
        public static final int cant_sync_dialog_title=0x7f0b0691;
        /**  Title for the list of capabilities of an accessibility service. 
         */
        public static final int capabilities_list_title=0x7f0b0546;
        /**  Description for the capability of an accessibility service to receive events and keys. 
         */
        public static final int capability_desc_receiveAccessibilityEvents=0x7f0b0548;
        /**  Title for the capability of an accessibility service to receive events and keys. 
         */
        public static final int capability_title_receiveAccessibilityEvents=0x7f0b0547;
        /**  Title for the preference to change video caption background color. [CHAR LIMIT=35] 
         */
        public static final int captioning_background_color=0x7f0b0530;
        /**  Title for the preference to change video caption background opacity. [CHAR LIMIT=35] 
         */
        public static final int captioning_background_opacity=0x7f0b0531;
        /**  Title for the preference catgeory containing custom video caption properties. [CHAR LIMIT=35] 
         */
        public static final int captioning_custom_options_title=0x7f0b052f;
        /**  Title for the preference to change video caption edge color. [CHAR LIMIT=35] 
         */
        public static final int captioning_edge_color=0x7f0b0534;
        /**  Title for the preference to change video caption edge type. [CHAR LIMIT=35] 
         */
        public static final int captioning_edge_type=0x7f0b0535;
        /**  Title for the preference to change video caption text color. [CHAR LIMIT=35] 
         */
        public static final int captioning_foreground_color=0x7f0b0532;
        /**  Title for the preference to change video caption text opacity. [CHAR LIMIT=35] 
         */
        public static final int captioning_foreground_opacity=0x7f0b0533;
        /**  Title for the preference to change video caption locale. [CHAR LIMIT=35] 
         */
        public static final int captioning_locale=0x7f0b052c;
        /**  Title for the preference category containing video caption property presets. [CHAR LIMIT=35] 
         */
        public static final int captioning_preset=0x7f0b052e;
        /**  Sample characters for previewing video caption preferences. [CHAR LIMIT=2] 
         */
        public static final int captioning_preview_characters=0x7f0b0538;
        /**  Sample text for previewing video caption preferences. [CHAR LIMIT=NONE] 
         */
        public static final int captioning_preview_text=0x7f0b0537;
        /**  Title for the preference category containing the video caption preview. [CHAR LIMIT=35] 
         */
        public static final int captioning_preview_title=0x7f0b052a;
        /**  Title for the preference catgeory containing standard video caption options. [CHAR LIMIT=35] 
         */
        public static final int captioning_standard_options_title=0x7f0b052b;
        /**  Title for the preference to change video caption text size. [CHAR LIMIT=35] 
         */
        public static final int captioning_text_size=0x7f0b052d;
        /**  Title for the preference to change video caption font family (ex. monospace, sans-serif). [CHAR LIMIT=35] 
         */
        public static final int captioning_typeface=0x7f0b0536;
        /**  Edit enable/disable of APN 
         */
        public static final int carrier_enabled=0x7f0b0361;
        public static final int carrier_enabled_summaryOff=0x7f0b0363;
        public static final int carrier_enabled_summaryOn=0x7f0b0362;
        public static final int category_printers=0x7f0b07c2;
        /**  Main Settings screen setting option summary text for the item to take you to the CDMA security and location screen 
         */
        public static final int cdma_security_settings_summary=0x7f0b0125;
        /**  Cell Broadcast settings title [CHAR LIMIT=50] 
         */
        public static final int cell_broadcast_settings=0x7f0b079a;
        public static final int cell_broadcast_settings_summary=0x7f0b07c0;
        /**  Sound settings screen, the caption of the checkbox for having the notification volume be
         the same as the incoming call volume. 
         */
        public static final int checkbox_notification_same_as_incoming_call=0x7f0b02a7;
        /**  The title of the activity to pick a time zone. 
         */
        public static final int choose_timezone=0x7f0b0096;
        /**  Manage applications, individual application screen, button label under Launch by default heading.  This is used to clear any default actions that may be assigned to this app.  
         */
        public static final int clear_activities=0x7f0b0427;
        /**  Setting title to revoke secure USB debugging authorizations 
         */
        public static final int clear_adb_keys=0x7f0b04e8;
        /**  Manage applications, text label for button 
         */
        public static final int clear_cache_btn_text=0x7f0b0414;
        /**  Manage applications, individual application screen, confirmation dialog message. Displays when user selects to "Clear data". It warns the user of the consequences of clearing the data for an app. 
         */
        public static final int clear_data_dlg_text=0x7f0b0443;
        /**  Manage applications, individual application screen, confirmation dialog title. Displays when user selects to "Clear data". 
         */
        public static final int clear_data_dlg_title=0x7f0b0442;
        /**  Manage applications, individual application dialog box message. Shown when there was an error trying to clear the data. 
         */
        public static final int clear_data_failed=0x7f0b0448;
        /**  Manage applications, text for dialog if clear data fails
         */
        public static final int clear_failed_dlg_text=0x7f0b044c;
        /**  Manage applications, title for dialog if clear data fails
         */
        public static final int clear_failed_dlg_title=0x7f0b044b;
        /**  Manage applications, individual application info screen, button label under Storage heading. Button to clear all data associated with tis app (for exampel, remove all cached emails for an Email app) 
         */
        public static final int clear_user_data_text=0x7f0b0422;
        /**  Label for the color black. [CHAR LIMIT=35] 
         */
        public static final int color_black=0x7f0b053d;
        /**  Label for the color blue. [CHAR LIMIT=35] 
         */
        public static final int color_blue=0x7f0b0540;
        /**  Label for custom colors, formats as a HTML color. 
         */
        public static final int color_custom=0x7f0b0544;
        /**  Label for the color cyan. [CHAR LIMIT=35] 
         */
        public static final int color_cyan=0x7f0b0541;
        /**  Label for the color gray. [CHAR LIMIT=35] 
         */
        public static final int color_gray=0x7f0b053c;
        /**  Label for the color green. [CHAR LIMIT=35] 
         */
        public static final int color_green=0x7f0b053f;
        /**  Label for the color magenta. [CHAR LIMIT=35] 
         */
        public static final int color_magenta=0x7f0b0543;
        /**  Label for no color. [CHAR LIMIT=35] 
         */
        public static final int color_none=0x7f0b053a;
        /**  Label for the color red. [CHAR LIMIT=35] 
         */
        public static final int color_red=0x7f0b053e;
        /**  Label for the color white. [CHAR LIMIT=35] 
         */
        public static final int color_white=0x7f0b053b;
        /**  Label for the color yellow. [CHAR LIMIT=35] 
         */
        public static final int color_yellow=0x7f0b0542;
        public static final int computing_size=0x7f0b0455;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Configuration screen
         */
        public static final int config_list_label=0x7f0b0299;
        /**  Title for configuring input method settings [CHAR LIMIT=35] 
         */
        public static final int configure_input_method=0x7f0b04d9;
        /**  Prompt for the user to confirm the new full-backup password by re-entering it 
         */
        public static final int confirm_new_backup_pw_prompt=0x7f0b073f;
        /**  About phone settings screen, setting option name to see a list of contributors 
         */
        public static final int contributors_title=0x7f0b03cb;
        /**  Manage applications, Header name used for other controls 
         */
        public static final int controls_label=0x7f0b0416;
        /**  Subtitle for possible options 
         */
        public static final int controls_subtitle=0x7f0b0580;
        /**  About phone settings screen, setting option name to see copyright-related info 
         */
        public static final int copyright_title=0x7f0b03cd;
        /**  Strings for Dialog create button 
         */
        public static final int create=0x7f0b0008;
        /**  Title of preference of what type of credential storage this device has: hardware or software [CHAR LIMIT=30] 
         */
        public static final int credential_storage_type=0x7f0b0619;
        /**  Summary text for preference showing what type of credential storage this device has when it is stored in a hardware-backed storage (as opposed to "software only") [CHAR LIMIT=NONE] 
         */
        public static final int credential_storage_type_hardware=0x7f0b061a;
        /**  Summary text for preference showing what type of credential storage this device has when it is stored in software only (as opposed to "hardware-backed") [CHAR LIMIT=NONE] 
         */
        public static final int credential_storage_type_software=0x7f0b061b;
        /**  Description of dialog to explain that a lock screen password is required to use credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_configure_lock_screen_hint=0x7f0b0629;
        /**  Toast message [CHAR LIMIT=30] 
         */
        public static final int credentials_enabled=0x7f0b0628;
        /**  Toast message [CHAR LIMIT=30] 
         */
        public static final int credentials_erased=0x7f0b0626;
        /**  Title of preference to install certificates from SD card [CHAR LIMIT=30] 
         */
        public static final int credentials_install=0x7f0b0613;
        /**  Explanation of drawing unlock pattern to install credentials 
         */
        public static final int credentials_install_gesture_explanation=0x7f0b061d;
        /**  Message to draw an unlock pattern when installing credentials 
         */
        public static final int credentials_install_gesture_prompt=0x7f0b061c;
        /**  Summary of preference to install certificates from SD card [CHAR LIMIT=NONE] 
         */
        public static final int credentials_install_summary=0x7f0b0614;
        /**  Toast message [CHAR LIMIT=30] when credential storage containing private keys and certificates could not be erased (opposite of string credentials_erased) 
         */
        public static final int credentials_not_erased=0x7f0b0627;
        /**  Description of the input box for the old password [CHAR LIMIT=30] 
         */
        public static final int credentials_old_password=0x7f0b0620;
        public static final int credentials_password_too_short=0x7f0b0622;
        /**  Title of preference to reset credential storage [CHAR LIMIT=30] 
         */
        public static final int credentials_reset=0x7f0b0615;
        /**  Description of dialog to reset credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_hint=0x7f0b0621;
        /**  Summary of preference to reset credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_summary=0x7f0b0616;
        /**  Error message [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_warning=0x7f0b0624;
        /**  Error message [CHAR LIMIT=NONE] 
         */
        public static final int credentials_reset_warning_plural=0x7f0b0625;
        /**  Title of preference group for credential storage settings [CHAR LIMIT=30] 
         */
        public static final int credentials_title=0x7f0b0612;
        /**  Title of dialog to enable credential storage [CHAR LIMIT=30] 
         */
        public static final int credentials_unlock=0x7f0b061e;
        /**  Description of dialog to enable credential storage [CHAR LIMIT=NONE] 
         */
        public static final int credentials_unlock_hint=0x7f0b061f;
        /**  Error message [CHAR LIMIT=NONE] 
         */
        public static final int credentials_wrong_password=0x7f0b0623;
        /**  Button text to start encryption process 
         */
        public static final int crypt_keeper_button_text=0x7f0b012c;
        /**  Title of the final confirmation screen before starting device encryption 
         */
        public static final int crypt_keeper_confirm_title=0x7f0b0131;
        /**  Informational text on the password entry screen when password entry fails
         */
        public static final int crypt_keeper_cooldown=0x7f0b0135;
        /**  Informational text in the first confirmation screen before starting device encryption 
         */
        public static final int crypt_keeper_desc=0x7f0b012b;
        /**  Dialog message, shown when encryption cannot proceed because a PIN/Password is needed 
         */
        public static final int crypt_keeper_dialog_need_password_message=0x7f0b0130;
        /**  Dialog title, shown when encryption cannot proceed because a PIN/Password is needed 
         */
        public static final int crypt_keeper_dialog_need_password_title=0x7f0b012f;
        /**  Summary of the preferences item to control encryption, when encryption is inactive 
         */
        public static final int crypt_keeper_encrypt_summary=0x7f0b0129;
        /**  Title of the preferences item to control encryption 
         */
        public static final int crypt_keeper_encrypt_title=0x7f0b0128;
        /**  Summary of the preferences item to control encryption, when encryption is active 
         */
        public static final int crypt_keeper_encrypted_summary=0x7f0b012a;
        /**  Informational text on the password entry screen prompting the user for their password 
         */
        public static final int crypt_keeper_enter_password=0x7f0b0136;
        /**  Informational text when encryption fails 
         */
        public static final int crypt_keeper_failed_summary=0x7f0b0138;
        /**  Title of the encryption screen when encrypting the device failed 
         */
        public static final int crypt_keeper_failed_title=0x7f0b0137;
        /**  Warning text in the final confirmation screen before starting device encryption 
         */
        public static final int crypt_keeper_final_desc=0x7f0b0132;
        /**  Warning string that will be displayed when encryption cannot be started 
         */
        public static final int crypt_keeper_low_charge_text=0x7f0b012d;
        /**  Title of the preferences category for preference items to control encryption 
         */
        public static final int crypt_keeper_settings_title=0x7f0b0127;
        /**  Informational text on the progress screen while encrypting the device 
         */
        public static final int crypt_keeper_setup_description=0x7f0b0134;
        /**  Title of the progress screen while encrypting the device 
         */
        public static final int crypt_keeper_setup_title=0x7f0b0133;
        /**  Image button description to switch input method 
         */
        public static final int crypt_keeper_switch_input_method=0x7f0b0139;
        /**  Warning string that will be displayed when encryption cannot be started 
         */
        public static final int crypt_keeper_unplugged_text=0x7f0b012e;
        /**  Button at the bottom of the CryptKeeper screen to make an emergency call. 
         */
        public static final int cryptkeeper_emergency_call=0x7f0b070f;
        /**  Button at the bottom of the CryptKeeper screen that lets the user return to a call 
         */
        public static final int cryptkeeper_return_to_call=0x7f0b0710;
        /**  Prompt for the user to enter their current full-backup password 
         */
        public static final int current_backup_pw_prompt=0x7f0b073d;
        /**  Title for the option to press to choose the current input method [CHAR LIMIT=35] 
         */
        public static final int current_input_method=0x7f0b04d4;
        /**  Manage applications, individual application info screen, label under Storage heading.  The amount of sapce taken up by the app's data (for example, downloaded emails or something like that) 
         */
        public static final int data_size_label=0x7f0b041b;
        /**  Checkbox label that restricts background data usage of a specific application. [CHAR LIMIT=32] 
         */
        public static final int data_usage_app_restrict_background=0x7f0b06ef;
        /**  Summary message for checkbox that restricts background data usage of a specific application. [CHAR LIMIT=64] 
         */
        public static final int data_usage_app_restrict_background_summary=0x7f0b06f0;
        /**  Summary message for checkbox that restricts background data usage of a specific application when no networks have been limited. [CHAR LIMIT=64] 
         */
        public static final int data_usage_app_restrict_background_summary_disabled=0x7f0b06f1;
        /**  Body of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_app_restrict_dialog=0x7f0b06f3;
        /**  Title of dialog shown when user restricts background data usage of a specific application. [CHAR LIMIT=48] 
         */
        public static final int data_usage_app_restrict_dialog_title=0x7f0b06f2;
        /**  Label for application which has its data usage restricted. [CHAR LIMIT=16] 
         */
        public static final int data_usage_app_restricted=0x7f0b06de;
        /**  Button title for launching application-specific data usage settings. [CHAR LIMIT=32] 
         */
        public static final int data_usage_app_settings=0x7f0b06ee;
        /**   Body of dialog shown when user disables global auto sync [CHAR LIMIT=none] 
         */
        public static final int data_usage_auto_sync_off_dialog=0x7f0b06f8;
        /**   Title of dialog shown when user disables global auto sync [CHAR LIMIT=32] 
         */
        public static final int data_usage_auto_sync_off_dialog_title=0x7f0b06f7;
        /**   Body of dialog shown when user enables global auto sync [CHAR LIMIT=none] 
         */
        public static final int data_usage_auto_sync_on_dialog=0x7f0b06f6;
        /**   Title of dialog shown when user enables global auto sync [CHAR LIMIT=32] 
         */
        public static final int data_usage_auto_sync_on_dialog_title=0x7f0b06f5;
        /**  Title for option to change data usage cycle day. [CHAR LIMIT=32] 
         */
        public static final int data_usage_change_cycle=0x7f0b06d9;
        /**  Title for option to pick visible time range from a list available usage periods. [CHAR LIMIT=25] 
         */
        public static final int data_usage_cycle=0x7f0b06d1;
        /**  Positive button title for data usage cycle editor, confirming that changes should be saved. [CHAR LIMIT=32] 
         */
        public static final int data_usage_cycle_editor_positive=0x7f0b06fb;
        /**  Subtitle of dialog for editing data usage cycle reset date. [CHAR LIMIT=32] 
         */
        public static final int data_usage_cycle_editor_subtitle=0x7f0b06fa;
        /**  Title of dialog for editing data usage cycle reset date. [CHAR LIMIT=48] 
         */
        public static final int data_usage_cycle_editor_title=0x7f0b06f9;
        /**  Checkbox label that will disable 2G-3G network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_3g_limit=0x7f0b06e2;
        /**  Checkbox label that will disable 4G network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_4g_limit=0x7f0b06e1;
        /**  Body of dialog shown to request confirmation that mobile data will be disabled. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_disable_mobile=0x7f0b06df;
        /**  Checkbox label that will disable mobile network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_mobile_limit=0x7f0b06e0;
        /**  Checkbox label that will disable Wi-Fi network data connection when user-defined limit is reached. [CHAR LIMIT=26] 
         */
        public static final int data_usage_disable_wifi_limit=0x7f0b06e3;
        /**  Label shown when no applications used data during selected time period. [CHAR LIMIT=48] 
         */
        public static final int data_usage_empty=0x7f0b06db;
        /**  Toggle switch title for enabling 2G and 3G data network connections. [CHAR LIMIT=32] 
         */
        public static final int data_usage_enable_3g=0x7f0b06ec;
        /**  Toggle switch title for enabling 4G data network connection. [CHAR LIMIT=32] 
         */
        public static final int data_usage_enable_4g=0x7f0b06ed;
        /**  Toggle switch title for enabling all mobile data network connections. [CHAR LIMIT=32] 
         */
        public static final int data_usage_enable_mobile=0x7f0b06eb;
        /**  Label for data usage occuring while application in background. [CHAR LIMIT=48] 
         */
        public static final int data_usage_label_background=0x7f0b06dd;
        /**  Label for data usage occuring while application in foreground. [CHAR LIMIT=48] 
         */
        public static final int data_usage_label_foreground=0x7f0b06dc;
        /**  Body of dialog shown before user limits mobile data usage. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_limit_dialog_mobile=0x7f0b06ff;
        /**  Title of dialog shown before user limits data usage. [CHAR LIMIT=48] 
         */
        public static final int data_usage_limit_dialog_title=0x7f0b06fe;
        /**  Title of dialog for editing data usage limit in bytes. [CHAR LIMIT=48] 
         */
        public static final int data_usage_limit_editor_title=0x7f0b06fd;
        /**  Title shown when current operation applies to mobile networks. [CHAR LIMIT=10] 
         */
        public static final int data_usage_list_mobile=0x7f0b06e9;
        /**  Title shown when current operation applies to no networks. [CHAR LIMIT=10] 
         */
        public static final int data_usage_list_none=0x7f0b06ea;
        /**   Title for menu option to enable global auto-sync of account data 
         */
        public static final int data_usage_menu_auto_sync=0x7f0b06d8;
        /**  Title for menu option to configure metered networks. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_metered=0x7f0b06d7;
        /**  Title for checkbox menu option to restrict background data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_restrict_background=0x7f0b06d3;
        /**  Title for checkbox menu option to enable mobile data when roaming. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_roaming=0x7f0b06d2;
        /**  Title for checkbox menu option to show Ethernet data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_show_ethernet=0x7f0b06d6;
        /**  Title for checkbox menu option to show Wi-Fi data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_show_wifi=0x7f0b06d5;
        /**  Title for checkbox menu option to show 4G mobile data usage separate from other mobile data usage. [CHAR LIMIT=26] 
         */
        public static final int data_usage_menu_split_4g=0x7f0b06d4;
        /**  Dialog body for selecting paid networks. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_metered_body=0x7f0b070b;
        /**  Header for list of mobile networks. [CHAR LIMIT=32] 
         */
        public static final int data_usage_metered_mobile=0x7f0b070c;
        /**  Dialog title for selecting metered networks. [CHAR LIMIT=25] 
         */
        public static final int data_usage_metered_title=0x7f0b070a;
        /**  Header for list of Wi-Fi networks. [CHAR LIMIT=32] 
         */
        public static final int data_usage_metered_wifi=0x7f0b070d;
        /**  Body text prompting user to enable Wi-Fi to configure metered networks. [CHAR LIMIT=64] 
         */
        public static final int data_usage_metered_wifi_disabled=0x7f0b070e;
        /**  Body of dialog prompting user to change numerical day of month that data usage cycle should reset. [CHAR LIMIT=64] 
         */
        public static final int data_usage_pick_cycle_day=0x7f0b06da;
        /**  Combination of total network bytes sent and received by an application. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_received_sent=0x7f0b0707;
        /**  Body of dialog shown before user restricts background data usage. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_restrict_background=0x7f0b0701;
        /**  Body of dialog shown before user restricts background data usage. This is for multiuser phones. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_restrict_background_multiuser=0x7f0b0702;
        /**  Title of dialog shown before user restricts background data usage. [CHAR LIMIT=48] 
         */
        public static final int data_usage_restrict_background_title=0x7f0b0700;
        /**  Body of dialog shown when user attempts to restrict background data before a network data limit has been set. [CHAR LIMIT=NONE] 
         */
        public static final int data_usage_restrict_denied_dialog=0x7f0b06f4;
        /**  Activity title for network data usage summary. [CHAR LIMIT=25] 
         */
        public static final int data_usage_summary_title=0x7f0b06d0;
        /**  Label displaying current network data usage limit threshold. [CHAR LIMIT=18] 
         */
        public static final int data_usage_sweep_limit=0x7f0b0704;
        /**  Label displaying current network data usage warning threshold. [CHAR LIMIT=18] 
         */
        public static final int data_usage_sweep_warning=0x7f0b0703;
        /**  Tab title for showing 2G and 3G data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_3g=0x7f0b06e8;
        /**  Tab title for showing 4G data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_4g=0x7f0b06e7;
        /**  Tab title for showing Ethernet data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_ethernet=0x7f0b06e5;
        /**  Tab title for showing combined mobile data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_mobile=0x7f0b06e6;
        /**  Tab title for showing Wi-Fi data usage. [CHAR LIMIT=10] 
         */
        public static final int data_usage_tab_wifi=0x7f0b06e4;
        /**  Label displaying total network data transferred during a specific time period. [CHAR LIMIT=64] 
         */
        public static final int data_usage_total_during_range=0x7f0b0708;
        /**  Label displaying total network data transferred during a specific time period, including a disclaimer that contrasts device versus carrier reporting. [CHAR LIMIT=80] 
         */
        public static final int data_usage_total_during_range_mobile=0x7f0b0709;
        /**  Title of data usage item that represents all uninstalled applications. [CHAR LIMIT=48] 
         */
        public static final int data_usage_uninstalled_apps=0x7f0b0705;
        /**  Title of data usage item that represents all uninstalled applications or removed users. [CHAR LIMIT=48] 
         */
        public static final int data_usage_uninstalled_apps_users=0x7f0b0706;
        /**  Title of dialog for editing data usage warning in bytes. [CHAR LIMIT=48] 
         */
        public static final int data_usage_warning_editor_title=0x7f0b06fc;
        /**  Date & time settings screen title 
         */
        public static final int date_and_time=0x7f0b0095;
        /**  Main Settings screen setting option summary text for the item to go into the date and time settings. 
         */
        public static final int date_and_time_settings_summary=0x7f0b0103;
        /**  Main Settings screen setting option name to go into the date and time settings
         */
        public static final int date_and_time_settings_title=0x7f0b0101;
        /**  Title for Date & Time settings screen in SetupWizard [CHAR LIMIT=40] 
         */
        public static final int date_and_time_settings_title_setup_wizard=0x7f0b0102;
        /**  Title string shown above DatePicker, letting a user select system date
         [CHAR LIMIT=20] 
         */
        public static final int date_picker_title=0x7f0b0111;
        /**  Date & time setting screen setting check box title 
         */
        public static final int date_time_24hour=0x7f0b010a;
        /**  Date & time setting screen setting check box title if the date and time should be determined automatically [CHAR LIMIT=25] 
         */
        public static final int date_time_auto=0x7f0b0104;
        /**  Date & time setting screen setting option summary text when Automatic check box is clear
        [CHAR LIMIT=100] 
         */
        public static final int date_time_auto_summaryOff=0x7f0b0106;
        /**  Date & time setting screen setting option summary text when Automatic check box is selected
        (that is, when date and time should be determined automatically) [CHAR LIMIT=100] 
         */
        public static final int date_time_auto_summaryOn=0x7f0b0105;
        /**  Date & time setting screen setting option title.  This setting allows the user to choose how the date should be displayed in apps (what ordering for month and day, etc.) 
         */
        public static final int date_time_date_format=0x7f0b010e;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_date=0x7f0b010d;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_time=0x7f0b010b;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_timezone=0x7f0b010c;
        /**  UI debug setting: select current app to debug [CHAR LIMIT=50] 
         */
        public static final int debug_app=0x7f0b069f;
        /**  UI debug setting: no debug app has been set [CHAR LIMIT=50] 
         */
        public static final int debug_app_not_set=0x7f0b06a0;
        /**  UI debug setting: debug app has been set [CHAR LIMIT=50] 
         */
        public static final int debug_app_set=0x7f0b06a1;
        /**  Preference category for application debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_applications_category=0x7f0b06ca;
        /**  Preference category for app debugging development settings. [CHAR LIMIT=50] 
         */
        public static final int debug_debugging_category=0x7f0b069e;
        /**  Preference category for drawing debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_drawing_category=0x7f0b06a7;
        /**  Preference category for hardware accelerated drawing debugging development settings. [CHAR LIMIT=50] 
         */
        public static final int debug_hw_drawing_category=0x7f0b06a8;
        /**  UI debug setting: show the amount of overdraw in apps using the GPU [CHAR LIMIT=25] 
         */
        public static final int debug_hw_overdraw=0x7f0b06b6;
        /**  Preference category for input debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_input_category=0x7f0b06a6;
        /**  Do not translate. 
         */
        public static final int debug_intent_sender_label=0x7f0b00e8;
        /**  UI debug setting: show layout bounds information [CHAR LIMIT=25] 
         */
        public static final int debug_layout=0x7f0b06ba;
        /**  UI debug setting: show layout bounds information summary [CHAR LIMIT=50] 
         */
        public static final int debug_layout_summary=0x7f0b06bb;
        /**  Preference category for monitoring debugging development settings. [CHAR LIMIT=25] 
         */
        public static final int debug_monitoring_category=0x7f0b06a9;
        /**  Do not translate. Used as the value for a setting. 
         */
        public static final int default_date_format=0x7f0b0097;
        /**  the following are for Settings Storage screen 
 Menu item/button 'delete' 
         */
        public static final int delete=0x7f0b0697;
        /**  Strings for Dialog deny button 
         */
        public static final int deny=0x7f0b000a;
        /**  Subtitle for application/subsystem details 
         */
        public static final int details_subtitle=0x7f0b057f;
        /**  Activity title for battery usage details for an app. or power consumer 
         */
        public static final int details_title=0x7f0b057e;
        /**  Warning text to user about the implications of enabling USB debugging 
         */
        public static final int dev_settings_warning_message=0x7f0b04fa;
        /**  Title of warning dialog about the implications of enabling developer settings 
         */
        public static final int dev_settings_warning_title=0x7f0b04f9;
        /**  Setting checkbox title for Whether to enable USB debugging support on the phone. 
 Error message for users that aren't allowed to modify developer options [CHAR LIMIT=none] 
         */
        public static final int development_settings_not_available=0x7f0b04e5;
        /**  Development Settings summary.  The summary of the item to take the user to Development settings.  Development settings are settings meant for application developers. 
         */
        public static final int development_settings_summary=0x7f0b04e4;
        /**  Development Settings.  the title for the item to take the user to Development settings.  Development settings are settings meant for application developers.  
         */
        public static final int development_settings_title=0x7f0b04e3;
        /**  Device admin add activity title 
         */
        public static final int device_admin_add_title=0x7f0b0645;
        /**  Device admin settings activity title 
         */
        public static final int device_admin_settings_title=0x7f0b063e;
        /**  Device admin warning message about policies an admin can use 
         */
        public static final int device_admin_status=0x7f0b0647;
        /**  In the security screen, the header title for settings related to device admins 
         */
        public static final int device_admin_title=0x7f0b016d;
        /**  Device admin warning message about policies an admin can use 
         */
        public static final int device_admin_warning=0x7f0b0646;
        /**  Device Info screen. Used for a status item's value when the proper value is not known 
         */
        public static final int device_info_default=0x7f0b000b;
        /**  The title of the activity to see random device info. 
         */
        public static final int device_info_label=0x7f0b00e9;
        /**  About phone screen, show when a value of some status item is unavailable. 
         */
        public static final int device_info_not_available=0x7f0b0303;
        /**  Advanced (used for diagnostics) device info activity title 
         */
        public static final int device_info_settings=0x7f0b02f9;
        /**  Strings for BluetoothDevicePicker 
         */
        public static final int device_picker=0x7f0b0082;
        /**  About phone screen, title of the item to go into the Phone status screen 
         */
        public static final int device_status=0x7f0b0305;
        /**  About phone screen, phone status screen title 
         */
        public static final int device_status_activity_title=0x7f0b0304;
        /**  About phone screen, summary of the item to go into the phone status screen 
         */
        public static final int device_status_summary=0x7f0b0306;
        /**  [CHAR LIMIT=40] Sound & display settings screen, title of dialog for picking font size 
         */
        public static final int dialog_title_font_size=0x7f0b02e1;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager disableNetwork API
         */
        public static final int disableNetwork=0x7f0b027f;
        /**  UI debug setting: disable use of overlays? [CHAR LIMIT=25] 
         */
        public static final int disable_overlays=0x7f0b06b7;
        /**  UI debug setting: disable use of overlays summary [CHAR LIMIT=50] 
         */
        public static final int disable_overlays_summary=0x7f0b06b8;
        /**  Message for a warning about disabling accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int disable_service_message=0x7f0b054a;
        /**  Title for a warning about disabling an accessibility service. [CHAR LIMIT=NONE] 
         */
        public static final int disable_service_title=0x7f0b0549;
        /**  [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to disable an existing application. 
         */
        public static final int disable_text=0x7f0b0420;
        /**  [CHAR LIMIT=25] Manage applications, text telling using an application is disabled. 
         */
        public static final int disabled=0x7f0b043c;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager disconnect API
         */
        public static final int disconnect=0x7f0b0281;
        /**  Label for chosen font size 
         */
        public static final int display_font_size_label=0x7f0b009a;
        /**  The title of the activity to adjust display settings 
         */
        public static final int display_label=0x7f0b00eb;
        /**  label for text to indicate sort options 
         */
        public static final int display_order_text=0x7f0b0511;
        /**  Label of preview text when tweaking font size 
         */
        public static final int display_preview_label=0x7f0b0099;
        /**  Sound & display settings screen, section header for settings related to display 
         */
        public static final int display_settings=0x7f0b02ca;
        public static final int display_settings_title=0x7f0b029b;
        /**  Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". 
         */
        public static final int dlg_cancel=0x7f0b0445;
        /**  SD card eject confirmation dialog  
         */
        public static final int dlg_confirm_unmount_text=0x7f0b0337;
        /**  SD card eject confirmation dialog title   
         */
        public static final int dlg_confirm_unmount_title=0x7f0b0336;
        /**  SD card eject error dialog text   
         */
        public static final int dlg_error_unmount_text=0x7f0b0339;
        /**  SD card eject error dialog title   
         */
        public static final int dlg_error_unmount_title=0x7f0b0338;
        /**  Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". Goes through with the clearing of the data. 
         */
        public static final int dlg_ok=0x7f0b0444;
        /**  Dock audio settings 
         */
        public static final int dock_audio_settings_title=0x7f0b02bd;
        /**  Dock audio summary for docked to car dock 
         */
        public static final int dock_audio_summary_car=0x7f0b02bf;
        /**  Dock audio summary for docked to desk dock 
         */
        public static final int dock_audio_summary_desk=0x7f0b02be;
        /**  Dock audio summary for undocked 
         */
        public static final int dock_audio_summary_none=0x7f0b02c0;
        /**  Dock audio summary for docked to unknown 
         */
        public static final int dock_audio_summary_unknown=0x7f0b02c1;
        /**  Dock not found dialog text 
         */
        public static final int dock_not_found_text=0x7f0b02c3;
        /**  Dock not found dialog title 
         */
        public static final int dock_not_found_title=0x7f0b02c2;
        /**  Dock settings title, top level 
         */
        public static final int dock_settings=0x7f0b02bb;
        /**  Sound settings screen, dock settings summary
         */
        public static final int dock_settings_summary=0x7f0b02ac;
        /**  Dock settings title 
         */
        public static final int dock_settings_title=0x7f0b02bc;
        /**  Sound settings screen, setting option summary text when check box is clear 
         */
        public static final int dock_sounds_enable_summary_off=0x7f0b02c6;
        /**  Dock settings screen, setting option summary text when check box is selected 
         */
        public static final int dock_sounds_enable_summary_on=0x7f0b02c5;
        /**  Dock settings screen, dock events SFX setting check box label 
         */
        public static final int dock_sounds_enable_title=0x7f0b02c4;
        public static final int does_not_exist=0x7f0b045e;
        /**  Button to close the SSL CA cert warning dialog box, meaning the user is done reading.  [CHAR LIMIT=NONE] 
         */
        public static final int done_button=0x7f0b0748;
        /**  Sound settings screen, setting check box label 
         */
        public static final int dtmf_tone_enable_title=0x7f0b02ad;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int emergency_tone_summary=0x7f0b062b;
        /**  Sound settings screen, setting check box label 
         */
        public static final int emergency_tone_title=0x7f0b062a;
        /**  String displayed when list is empty 
         */
        public static final int empty_list_msg=0x7f0b0457;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager enableNetwork API
         */
        public static final int enableNetwork=0x7f0b0280;
        public static final int enable_adb=0x7f0b04e6;
        /**  Setting checkbox summary for Whether to enable USB debugging support on the phone 
         */
        public static final int enable_adb_summary=0x7f0b04e7;
        /**  Manage applications, individual application screen, checkbox to control compatibility mode.  
         */
        public static final int enable_compatibility=0x7f0b042a;
        /**  UI debug setting: enable various types of OpenGL traces [CHAR LIMIT=25] 
         */
        public static final int enable_opengl_traces_title=0x7f0b06b9;
        /**  Title for a warning about security implications of enabling an accessibility
         service. [CHAR LIMIT=NONE] 
         */
        public static final int enable_service_title=0x7f0b0545;
        /**  Summary of checkbox setting that enables the terminal app. [CHAR LIMIT=64] 
         */
        public static final int enable_terminal_summary=0x7f0b0502;
        /**  Title of checkbox setting that enables the terminal app. [CHAR LIMIT=32] 
         */
        public static final int enable_terminal_title=0x7f0b0501;
        /**  [CHAR LIMIT=25] Manage applications, individual application info screen, button label under Storage heading. Button to re-enable an existing application. 
         */
        public static final int enable_text=0x7f0b0421;
        /**  Message of dialog confirming that user wants to protect external storage. [CHAR LIMIT=NONE] 
         */
        public static final int enforce_read_external_confirm_message=0x7f0b0500;
        /**  Title of dialog confirming that user wants to protect external storage. [CHAR LIMIT=32] 
         */
        public static final int enforce_read_external_confirm_title=0x7f0b04ff;
        /**  Summary of checkbox setting that protects external storage. [CHAR LIMIT=64] 
         */
        public static final int enforce_read_external_summary=0x7f0b04fe;
        /**  Title of checkbox setting that protects external storage. [CHAR LIMIT=32] 
         */
        public static final int enforce_read_external_title=0x7f0b04fd;
        /**  This is displayed to the user when the device needs to be decrypted 
         */
        public static final int enter_password=0x7f0b0695;
        /**  SD card & phone storage settings screen, label for check box to erase SD card [CHAR LIMIT=30] 
         */
        public static final int erase_external_storage=0x7f0b0379;
        /**  SD card & phone storage settings screen, description for check box to erase USB storage [CHAR LIMIT=NONE] 
         */
        public static final int erase_external_storage_description=0x7f0b037a;
        /**  APN error dialog messages: 
         */
        public static final int error_apn_empty=0x7f0b036d;
        /**  APN error dialog messages: 
         */
        public static final int error_mcc_not3=0x7f0b036e;
        /**  APN error dialog messages: 
         */
        public static final int error_mnc_not23=0x7f0b036f;
        /**  APN error dialog messages: 
         */
        public static final int error_name_empty=0x7f0b036c;
        /**  APN error dialog title 
         */
        public static final int error_title=0x7f0b036b;
        public static final int experimental_webview=0x7f0b07bd;
        public static final int experimental_webview_summary=0x7f0b07be;
        /**   Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's code on USB storage [CHARSIZE=40] 
         */
        public static final int external_code_size_label=0x7f0b041a;
        /**   Manage applications, individual application info screen, label under Storage heading.  The amount of space taken up by the app's data on the SD card [CHARSIZE=40] 
         */
        public static final int external_data_size_label=0x7f0b041c;
        /**  Toast that settings for an application is failed to open. 
         */
        public static final int failed_to_open_app_settings_toast=0x7f0b04a5;
        /**  About phone screen, fcc equipment id label
         */
        public static final int fcc_equipment_id=0x7f0b02fe;
        /**  Text for menu option in ManageApps screen to present various menu options 
         */
        public static final int filter=0x7f0b0435;
        /**  Text for filter option in ManageApps screen to display all installed
    applications 
         */
        public static final int filter_apps_all=0x7f0b0437;
        /**  [CHAR LIMIT=NONE] Text for filter option in ManageApps screen to display disabled apps 
         */
        public static final int filter_apps_disabled=0x7f0b0438;
        /**  Text for filter option in ManageApps screen to display list of
    packages installed on sdcard. 
         */
        public static final int filter_apps_onsdcard=0x7f0b043b;
        /**  Text for filter option in ManageApps screen to display list of running
    packages only. 
         */
        public static final int filter_apps_running=0x7f0b043a;
        /**  Text for filter option in ManageApps screen to display third party
    applications only 
         */
        public static final int filter_apps_third_party=0x7f0b0439;
        /**  Title of dialog for presenting filter options 
         */
        public static final int filter_dlg_title=0x7f0b0436;
        /**  Button shown when this activity is run from SetupWizard 
         */
        public static final int finish_button_label=0x7f0b068b;
        /**  About phone screen, status item label 
         */
        public static final int firmware_version=0x7f0b02fc;
        /**  Do not translate. label for font size preview.  Does not need to be translated. 
         */
        public static final int font_size_preview_text=0x7f0b0037;
        /**  Button. Chosen when they want to save the chosen text size. 
         */
        public static final int font_size_save=0x7f0b0038;
        /**  UI debug setting: force hardware acceleration to render apps [CHAR LIMIT=25] 
         */
        public static final int force_hw_ui=0x7f0b06c0;
        /**  UI debug setting: force hardware acceleration summary [CHAR LIMIT=50] 
         */
        public static final int force_hw_ui_summary=0x7f0b06c1;
        /**  UI debug setting: force anti-aliasing to render apps [CHAR LIMIT=25] 
         */
        public static final int force_msaa=0x7f0b06c2;
        /**  UI debug setting: force anti-aliasing summary [CHAR LIMIT=50] 
         */
        public static final int force_msaa_summary=0x7f0b06c3;
        /**  UI debug setting: force right to left layout [CHAR LIMIT=37] 
         */
        public static final int force_rtl_layout_all_locales=0x7f0b06bc;
        /**  UI debug setting: force right to left layout summary [CHAR LIMIT=100] 
         */
        public static final int force_rtl_layout_all_locales_summary=0x7f0b06bd;
        /**  Manage applications, text label for button to kill / force stop an application 
         */
        public static final int force_stop=0x7f0b0417;
        /**  [CHAR LIMIT=200] Manage applications, text for dialog when killing persistent apps
         */
        public static final int force_stop_dlg_text=0x7f0b0463;
        public static final int force_stop_dlg_title=0x7f0b0462;
        /**  Spoken description for the Bluetooth power control gadget. 
         */
        public static final int gadget_bluetooth=0x7f0b0609;
        /**  Brightness gadget value used to describe automatic brightness state. 
         */
        public static final int gadget_brightness_state_auto=0x7f0b060d;
        /**  Brightness gadget value used to describe maximum brightness state. 
         */
        public static final int gadget_brightness_state_full=0x7f0b060e;
        /**  Brightness gadget value used to describe half brightness state. 
         */
        public static final int gadget_brightness_state_half=0x7f0b060f;
        /**  Brightness gadget value used to describe minimum brightness state. 
         */
        public static final int gadget_brightness_state_off=0x7f0b0610;
        /**  Template for brightness gadget toggle button description. 
         */
        public static final int gadget_brightness_template=0x7f0b060c;
        /**  Spoken description for the Location power control gadget. 
         */
        public static final int gadget_location=0x7f0b060a;
        /**  Title for the screen that lets the user choose a gadget to add to the home screen
         (or other screens that can host gadgets).  Note to translators: we're still determining
         the final name for Gadgets/Widgets, so please translate both for now. 
         */
        public static final int gadget_picker_title=0x7f0b0503;
        /**  Gadget value used to describe off state. 
         */
        public static final int gadget_state_off=0x7f0b0605;
        /**  Gadget value used to describe on state. 
         */
        public static final int gadget_state_on=0x7f0b0604;
        /**  Template for gadget toggle button description. Populated examples are "Wi-Fi off" or "Wi-Fi turning on". 
         */
        public static final int gadget_state_template=0x7f0b0603;
        /**  Gadget value used to describe turning off state. 
         */
        public static final int gadget_state_turning_off=0x7f0b0607;
        /**  Gadget value used to describe turning on state. 
         */
        public static final int gadget_state_turning_on=0x7f0b0606;
        /**  Spoken description for the data synchronization gadget. 
         */
        public static final int gadget_sync=0x7f0b060b;
        /**  Power Control Widget 
         */
        public static final int gadget_title=0x7f0b0600;
        public static final int gadget_toggle_bluetooth=0x7f0b0602;
        public static final int gadget_toggle_wifi=0x7f0b0601;
        /**  Spoken description for the Wi-Fi power control gadget. 
         */
        public static final int gadget_wifi=0x7f0b0608;
        /**  On Language & input settings screen, heading. Inside the "Language & input settings" screen, this is the header for settings that relate to game controller devices. [CHAR LIMIT=40] 
         */
        public static final int game_controller_settings_category=0x7f0b04a8;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager getConfiguredNetworks API
         */
        public static final int getConfiguredNetworks=0x7f0b0282;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item for WifiManager getConnectionInfo API
         */
        public static final int getConnectionInfo=0x7f0b0283;
        /**  Warning message when changing a global setting for a phone.[CHAR LIMIT=none] 
         */
        public static final int global_change_warning=0x7f0b0778;
        /**  Warning message title for global font change [CHAR LIMIT=40] 
         */
        public static final int global_font_change_title=0x7f0b077a;
        /**  Warning message title for global locale change [CHAR LIMIT=40] 
         */
        public static final int global_locale_change_title=0x7f0b0779;
        /**  Sound settings screen, setting check box label 
         */
        public static final int haptic_feedback_enable_title=0x7f0b02b0;
        /**  On Text & language settings screen, category for physical keyboard text entry options. 
         */
        public static final int hardkeyboard_category=0x7f0b049e;
        /**  HDCP checking dialog title, used for debug purposes only. [CHAR LIMIT=25] 
         */
        public static final int hdcp_checking_dialog_title=0x7f0b069d;
        /**  HDCP checking title, used for debug purposes only. [CHAR LIMIT=25] 
         */
        public static final int hdcp_checking_title=0x7f0b069c;
        /**  Header that appears at the top of Account Settings screen 
         */
        public static final int header_account_settings=0x7f0b0688;
        /**  Title shown in AddAccount 
         */
        public static final int header_add_an_account=0x7f0b068a;
        /**  Header title for those settings relating to application syncing. 
         */
        public static final int header_application_sync_settings=0x7f0b0685;
        /**  Settings main menu category heading. Device (Sound, display, battery, applications...). [CHAR LIMIT=40] 
         */
        public static final int header_category_device=0x7f0b000f;
        /**  Settings main menu category heading. Personal (Accounts, security, language, backup...). [CHAR LIMIT=40] 
         */
        public static final int header_category_personal=0x7f0b0010;
        /**  Settings main menu category heading. System (Updates, data, accessibility, about phone). [CHAR LIMIT=40] 
         */
        public static final int header_category_system=0x7f0b0011;
        /**  Settings main menu category heading. Wireless and networks (Wi-Fi, Bluetooth, data usage...). [CHAR LIMIT=40] 
         */
        public static final int header_category_wireless_networks=0x7f0b000e;
        /**  Header for data and synchronization 
         */
        public static final int header_data_and_synchronization=0x7f0b0686;
        /**  Running service details, description for running heavy-weight process. 
         */
        public static final int heavy_weight_stop_description=0x7f0b048b;
        /**  Help menu label [CHAR LIMIT=20] 
         */
        public static final int help_label=0x7f0b0786;
        /**  Help URL, Accounts [DO NOT TRANSLATE] 
         */
        public static final int help_url_accounts=0x7f0b078e;
        /**  Help URL, Backup & reset [DO NOT TRANSLATE] 
         */
        public static final int help_url_backup_reset=0x7f0b0790;
        /**  Help URL, Battery [DO NOT TRANSLATE] 
         */
        public static final int help_url_battery=0x7f0b078d;
        /**  Help URL, Bluetooth [DO NOT TRANSLATE] 
         */
        public static final int help_url_bluetooth=0x7f0b0788;
        /**  Help URL, Choose lockscreen [DO NOT TRANSLATE] 
         */
        public static final int help_url_choose_lockscreen=0x7f0b078f;
        /**  Help URL, Data usage [DO NOT TRANSLATE] 
         */
        public static final int help_url_data_usage=0x7f0b0789;
        /**  Help URL, Dreams [DO NOT TRANSLATE] 
         */
        public static final int help_url_dreams=0x7f0b0792;
        /**  Help URL, Location access [DO NOT TRANSLATE] 
         */
        public static final int help_url_location_access=0x7f0b0794;
        /**  Help URL, More [DO NOT TRANSLATE] 
         */
        public static final int help_url_more_networks=0x7f0b078a;
        /**  Help URL, Tap & pay [DO NOT TRANSLATE] 
         */
        public static final int help_url_nfc_payment=0x7f0b0796;
        /**  Help URL, Remote display [DO NOT TRANSLATE] 
         */
        public static final int help_url_remote_display=0x7f0b0797;
        /**  Help URL, Security settings [DO NOT TRANSLATE] 
         */
        public static final int help_url_security=0x7f0b0795;
        /**  Help URL, Sound [DO NOT TRANSLATE] 
         */
        public static final int help_url_sound=0x7f0b078c;
        /**  Help URL, Tethering [DO NOT TRANSLATE] 
         */
        public static final int help_url_tether=0x7f0b0791;
        /**  Help URL, User settings [DO NOT TRANSLATE] 
         */
        public static final int help_url_users=0x7f0b0793;
        /**  Help URL, Vpn [DO NOT TRANSLATE] 
         */
        public static final int help_url_vpn=0x7f0b078b;
        /**  Help URL, WiFi [DO NOT TRANSLATE] 
         */
        public static final int help_url_wifi=0x7f0b0787;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int hidden_ssid_label=0x7f0b028d;
        /**  Activity title for battery usage history details 
         */
        public static final int history_details_title=0x7f0b057d;
        /**  Home application selection - uninstall button [CHAR LIMIT=80] 
         */
        public static final int home_app_uninstall_button=0x7f0b0776;
        /**  Main Settings screen setting option name to go into the display settings screen 
         */
        public static final int home_settings=0x7f0b029a;
        /**  Warning message about security implications of enabling an input method, displayed as a dialog
         message when the user selects to enable an IME. 
         */
        public static final int ime_security_warning=0x7f0b04a1;
        /**  UI debug setting: immediately destroy activities? [CHAR LIMIT=25] 
         */
        public static final int immediately_destroy_activities=0x7f0b06cb;
        /**  UI debug setting: immediately destroy activities summary [CHAR LIMIT=50] 
         */
        public static final int immediately_destroy_activities_summary=0x7f0b06cc;
        /**  Phone IMS registration required off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int ims_reg_required_off=0x7f0b0017;
        /**  Phone SMS over IMS IMS registration required on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int ims_reg_required_on=0x7f0b0016;
        /**  Sound settings screen, the title of the volume bar to adjust the incoming call volume 
         */
        public static final int incoming_call_volume_title=0x7f0b02a5;
        /**  Setting name for Input Method chooser 
         */
        public static final int input_method=0x7f0b04d3;
        /**  Title for setting the visibility of input method selector [CHAR LIMIT=35] 
         */
        public static final int input_method_selector=0x7f0b04d5;
        /**  An option to always hide input method selector [CHAR LIMIT=25] 
         */
        public static final int input_method_selector_always_hide_title=0x7f0b04d8;
        public static final int input_method_selector_always_hide_value=0x7f0b0004;
        /**  An option to always show input method selector [CHAR LIMIT=25] 
         */
        public static final int input_method_selector_always_show_title=0x7f0b04d7;
        public static final int input_method_selector_always_show_value=0x7f0b0003;
        /**  An option to always show input method selector automatically when needed [CHAR LIMIT=25] 
         */
        public static final int input_method_selector_show_automatically_title=0x7f0b04d6;
        /**  values for input method selector should be corresponding to the array index of titles 
         */
        public static final int input_method_selector_show_automatically_value=0x7f0b0002;
        public static final int input_method_selector_visibility_default_value=0x7f0b0005;
        /**  Title for settings of each IME [CHAR LIMIT=25] 
         */
        public static final int input_method_settings=0x7f0b04da;
        /**  Spoken description for IME settings image button [CHAR LIMIT=NONE] 
         */
        public static final int input_method_settings_button=0x7f0b04db;
        /**  Title for the settings of selecting active input methods of an IME [CHAR LIMIT=35] 
         */
        public static final int input_methods_and_subtype_enabler_title=0x7f0b04df;
        /**  Input Methods Settings localized format string for generating the appropriate "Foo settings" menu label for the Input Method named "Foo" [CHAR LIMIT=35] 
         */
        public static final int input_methods_settings_label_format=0x7f0b04de;
        /**  Input methods Settings 
         */
        public static final int input_methods_settings_title=0x7f0b04d2;
        /**  Applications settings screen, message text of alert that appears if user selects the "Unknown sources" check box 
         */
        public static final int install_all_warning=0x7f0b0408;
        /**  Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.  
         */
        public static final int install_applications=0x7f0b0406;
        /**  [CHAR LIMIT=NONE] Manage applications, individual application info screen, button label under Storage heading. Button to install an application for the user. 
         */
        public static final int install_text=0x7f0b041f;
        /**  Applications settings screen, setting check box summary.  This is the summary for "Unknown sources" checkbox  
         */
        public static final int install_unknown_applications=0x7f0b0407;
        /**  Manage applications, text for move error messages 
         */
        public static final int insufficient_storage=0x7f0b045d;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_account_label=0x7f0b00a0;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_action_label=0x7f0b009d;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_data_label=0x7f0b009b;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_resource_label=0x7f0b009f;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_sendbroadcast_text=0x7f0b009c;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_startactivity_text=0x7f0b009e;
        /**  SD card & phone storage settings screen heading. This is displayed above items that pertain to the phone's internal storage  
         */
        public static final int internal_memory=0x7f0b031f;
        /**  [CHAR LIMIT=15] Manage applications, label for chart showing internal storage use. 
         */
        public static final int internal_storage=0x7f0b043f;
        public static final int invalid_location=0x7f0b0460;
        public static final int invalid_size_value=0x7f0b0456;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int ipaddr_label=0x7f0b028e;
        /**  [CHAR_LIMIT=NONE] Format to put the first item at the start of a series of 3 or more items in a list 
         */
        public static final int join_many_items_first=0x7f0b0451;
        /**  [CHAR_LIMIT=NONE] Format to put the last item at the end of a series of 3 or more items in a list 
         */
        public static final int join_many_items_last=0x7f0b0450;
        /**  [CHAR_LIMIT=NONE] Format to put the middle items together in a series of 4 or more items in a list 
         */
        public static final int join_many_items_middle=0x7f0b0452;
        /**  [CHAR_LIMIT=NONE] Format to put together two items in a list. 
         */
        public static final int join_two_items=0x7f0b044f;
        /**  Setting Checkbox title whether to keep the screen on when plugged in to a power source 
         */
        public static final int keep_screen_on=0x7f0b04eb;
        /**  setting Checkbox summary whether to keep the screen on when plugged in  
         */
        public static final int keep_screen_on_summary=0x7f0b04ec;
        /**  About phone screen,  setting option name
         */
        public static final int kernel_version=0x7f0b0300;
        /**  Label of the default keyboard layout.  [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_default_label=0x7f0b04ae;
        /**  Button to configure keyboard layouts.  [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_dialog_setup_button=0x7f0b04ac;
        /**  Hint describing how to switch keyboard layouts using the keyboard.  [CHAR LIMIT=48] 
         */
        public static final int keyboard_layout_dialog_switch_hint=0x7f0b04ad;
        /**  Title for the keyboard layout preference dialog. [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_dialog_title=0x7f0b04ab;
        /**  Title for the keyboard layout picker activity. [CHAR LIMIT=35] 
         */
        public static final int keyboard_layout_picker_title=0x7f0b04af;
        /**  On Language & keyboard settings screen, heading. Inside the "Language & keyboard settings" screen, this is the header for settings that relate to keyboard (enable/disable each keyboard, settings for each keyboard). 
         */
        public static final int keyboard_settings_category=0x7f0b0496;
        /**  Title of keyboard settings list item within voice input/output settings 
         */
        public static final int keyboard_settings_title=0x7f0b05cc;
        /**  Title of Language and keyboard settings screen 
         */
        public static final int language_keyboard_settings_title=0x7f0b0494;
        /**  LocalePicker 
 Title for the locale picker activity 
         */
        public static final int language_picker_title=0x7f0b00e6;
        /**  Title of setting on main settings screen.  This item will take the user to the screen to tweak settings realted to locale and text 
         */
        public static final int language_settings=0x7f0b0493;
        /**  On Language & keyboard settings screen, heading. Inside the "Language & keyboard settings" screen, this is the header for settings that relate to language (select the system language, user dictionary for the language). 
         */
        public static final int language_settings_category=0x7f0b0495;
        /**  choice for the font size spinner 
         */
        public static final int large_font=0x7f0b0036;
        /**  Last synced date/time for accounts that synced [CHAR LIMIT=none] 
         */
        public static final int last_synced=0x7f0b067a;
        /**  label for launch count 
         */
        public static final int launch_count_label=0x7f0b0513;
        /**  About phone settings screen, setting option name to go to dialog that shows legal info 
         */
        public static final int legal_information=0x7f0b03ca;
        /**  About phone settings screen, setting option name to see licensing info 
         */
        public static final int license_title=0x7f0b03ce;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int link_speed_label=0x7f0b0291;
        /**  Summary text of the "local backup password" setting when the user has already supplied a password 
         */
        public static final int local_backup_password_summary_change=0x7f0b0638;
        /**  Summary text of the "local backup password" setting when the user has not supplied a password 
         */
        public static final int local_backup_password_summary_none=0x7f0b0637;
        /**  Local (desktop) backup password menu title [CHAR LIMIT=25] 
         */
        public static final int local_backup_password_title=0x7f0b0636;
        /**  Toast message shown when setting a new local backup password fails due to the user not correctly typing the password again for confirmation [CHAR LIMIT=80] 
         */
        public static final int local_backup_password_toast_confirmation_mismatch=0x7f0b063a;
        /**  Toast message shown when the user successfully sets a new local backup password [CHAR LIMIT=80] 
         */
        public static final int local_backup_password_toast_success=0x7f0b0639;
        /**  Toast message shown when setting a new local backup password fails due to the user not supplying the correct existing password. The phrasing here is deliberately quite general. [CHAR LIMIT=80] 
         */
        public static final int local_backup_password_toast_validation_failure=0x7f0b063b;
        /**  Label for the default device locale. [CHAR LIMIT=35] 
         */
        public static final int locale_default=0x7f0b0539;
        /**  [CHAR LIMIT=none] Description text for location access switch 
         */
        public static final int location_access_summary=0x7f0b03c6;
        /**  [CHAR LIMIT=45] Label for turning on/off location access completely. 
         */
        public static final int location_access_title=0x7f0b03c5;
        public static final int location_category_app_settings=0x7f0b07c1;
        /**  [CHAR LIMIT=30] Location settings screen, sub category for location services 
         */
        public static final int location_category_location_services=0x7f0b03b3;
        /**  [CHAR LIMIT=30] Location settings screen, sub category for recent location requests 
         */
        public static final int location_category_recent_location_requests=0x7f0b03b1;
        /**  [CHAR LIMIT=30] Security & location settings screen, setting check box label for GPS satellites 
         */
        public static final int location_gps=0x7f0b03be;
        /**  [CHAR LIMIT=30] Location settings screen, recent location requests high battery use
         */
        public static final int location_high_battery_use=0x7f0b03b4;
        /**  [CHAR LIMIT=130] Location mode screen, temporary value to show as the status of a location
         setting injected by an external app while the app is being queried for the actual value 
         */
        public static final int location_loading_injected_setting=0x7f0b03ba;
        /**  [CHAR LIMIT=30] Location settings screen, recent location requests low battery use
         */
        public static final int location_low_battery_use=0x7f0b03b5;
        /**  [CHAR LIMIT=130] Location mode screen, description for battery saving mode 
         */
        public static final int location_mode_battery_saving_description=0x7f0b03b8;
        /**  [CHAR LIMIT=30] Location settings screen, battery saving location mode 
         */
        public static final int location_mode_battery_saving_title=0x7f0b03ae;
        /**  [CHAR LIMIT=130] Location mode screen, description for high accuracy mode 
         */
        public static final int location_mode_high_accuracy_description=0x7f0b03b7;
        /**  [CHAR LIMIT=30] Location settings screen, high accuracy location mode 
         */
        public static final int location_mode_high_accuracy_title=0x7f0b03ad;
        /**  [CHAR LIMIT=30] Location settings screen, location off mode 
         */
        public static final int location_mode_location_off_title=0x7f0b03b0;
        /**  [CHAR LIMIT=30] Location mode screen, screen title 
         */
        public static final int location_mode_screen_title=0x7f0b03b6;
        /**  [CHAR LIMIT=130] Location mode screen, description for sensors only mode 
         */
        public static final int location_mode_sensors_only_description=0x7f0b03b9;
        /**  [CHAR LIMIT=30] Location settings screen, device only location mode 
         */
        public static final int location_mode_sensors_only_title=0x7f0b03af;
        /**  [CHAR LIMIT=30] Location settings screen, setting preference screen box label for location mode 
         */
        public static final int location_mode_title=0x7f0b03ac;
        /**  [CHAR LIMIT=130] Security & location settings screen, setting summary for Google location service check box
         */
        public static final int location_neighborhood_level=0x7f0b03bc;
        /**  [CHAR LIMIT=130] Security & location settings screen, setting summary when Use wireless networks check box is selected, for wifi-only devices 
         */
        public static final int location_neighborhood_level_wifi=0x7f0b03bd;
        /**  [CHAR LIMIT=30] Security & location settings screen, setting check box label for Google location service (cell ID, wifi, etc.) 
         */
        public static final int location_network_based=0x7f0b03bb;
        /**  Location settings screen, displayed when there's no recent app accessing location 
         */
        public static final int location_no_recent_apps=0x7f0b03b2;
        /**  Main Settings screen setting option title for the item to take you to the location screen 
         */
        public static final int location_settings_title=0x7f0b0122;
        /**  [CHAR LIMIT=45] Section heading for location sources 
         */
        public static final int location_sources_heading=0x7f0b03c7;
        /**  [CHAR LIMIT=100] Security & location settings screen, setting check box summary for GPS satellites on a phone 
         */
        public static final int location_street_level=0x7f0b03bf;
        /**  Security & location settings screen, section header for settings relating to location 
         */
        public static final int location_title=0x7f0b03ab;
        /**  Security settings screen, setting option name to change screen timeout 
         */
        public static final int lock_after_timeout=0x7f0b0116;
        /**  Security settings screen, setting option summary to change screen timeout 
         */
        public static final int lock_after_timeout_summary=0x7f0b0117;
        /**   Title for security picker to choose the unlock method: None/Pattern/PIN/Password [CHAR LIMIT=22] 
         */
        public static final int lock_settings_picker_title=0x7f0b013a;
        /**  Lock Pattern settings 
 Security & location settings screen, header 
         */
        public static final int lock_settings_title=0x7f0b03e3;
        /**  Toast shown when lock pattern or password successfully setup. [CHAR LIMIT=64] 
         */
        public static final int lock_setup=0x7f0b016c;
        /**  Sound settings screen, setting check box label 
         */
        public static final int lock_sounds_enable_title=0x7f0b02af;
        /**  Label for ChoosePassword/PIN OK button 
         */
        public static final int lockpassword_cancel_label=0x7f0b0169;
        /**  Header shown to ask the user to select an unlock method [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_lock_generic_header=0x7f0b03df;
        /**  Lock Pattern settings 
 Header on first screen of choose password/PIN flow [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_your_password_header=0x7f0b03d7;
        /**  Header on first screen of choose pattern flow [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_your_pattern_header=0x7f0b03d8;
        /**  Header on first screen of choose password/PIN flow [CHAR LIMIT=30] 
         */
        public static final int lockpassword_choose_your_pin_header=0x7f0b03d9;
        /**  Header on password confirm screen if second password doesn't match the first. [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_passwords_dont_match=0x7f0b03dd;
        /**  Header on pin confirm screen if second pin doesn't match the first. [CHAR LIMIT=30]
         */
        public static final int lockpassword_confirm_pins_dont_match=0x7f0b03de;
        /**  Header on password confirm screen [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_your_password_header=0x7f0b03da;
        /**  Header on pattern confirm screen [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_your_pattern_header=0x7f0b03db;
        /**  Header on password confirm screen [CHAR LIMIT=30] 
         */
        public static final int lockpassword_confirm_your_pin_header=0x7f0b03dc;
        /**  Hint shown after minimum password criteria is met 
         */
        public static final int lockpassword_continue_label=0x7f0b015e;
        /**  Error shown when in PASSWORD mode and user enters an invalid character 
         */
        public static final int lockpassword_illegal_character=0x7f0b0163;
        /**  Label for ChoosePassword/PIN OK button 
         */
        public static final int lockpassword_ok_label=0x7f0b0168;
        /**  Error shown when in PASSWORD mode and password has been used recently. Please keep this string short! 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_letters:other (8186027808415585970) 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_lowercase:other (2693910942679679225) 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_uppercase:other (3030801209112209245) 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_numeric:other (4703982391407595924) 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_symbols:other (1221290525051187757) 
 String.format failed for translation 
 no translation found for lockpassword_password_requires_nonletter:other (3952508584649046404) 
         */
        public static final int lockpassword_password_recently_used=0x7f0b0167;
        /**  Error shown when in PASSWORD mode and password is all digits 
         */
        public static final int lockpassword_password_requires_alpha=0x7f0b0164;
        /**  Error shown when in PASSWORD mode and password doesn't contain any digits 
         */
        public static final int lockpassword_password_requires_digit=0x7f0b0165;
        /**  Error shown when in PASSWORD mode and password doesn't contain any symbols 
         */
        public static final int lockpassword_password_requires_symbol=0x7f0b0166;
        /**  Toast shown if setting password was successful 
         */
        public static final int lockpassword_password_set_toast=0x7f0b03e0;
        /**  Error shown in popup when password is too long 
         */
        public static final int lockpassword_password_too_long=0x7f0b015f;
        /**  Hint shown in dialog screen when password is too short 
         */
        public static final int lockpassword_password_too_short=0x7f0b015b;
        /**  Toast shown if setting pattern was successful 
         */
        public static final int lockpassword_pattern_set_toast=0x7f0b03e2;
        /**  Error shown when in PIN mode and user enters a non-digit 
         */
        public static final int lockpassword_pin_contains_non_digits=0x7f0b0161;
        /**  Error shown when in PIN mode and PIN has been used recently. Please keep this string short! 
         */
        public static final int lockpassword_pin_recently_used=0x7f0b0162;
        /**  Toast shown if setting PIN was successful 
         */
        public static final int lockpassword_pin_set_toast=0x7f0b03e1;
        /**  Error shown in popup when PIN is too long 
         */
        public static final int lockpassword_pin_too_long=0x7f0b0160;
        /**  Hint shown in dialog screen when PIN is too short 
         */
        public static final int lockpassword_pin_too_short=0x7f0b015c;
        /**  Hint shown after minimum password criteria is met 
         */
        public static final int lockpassword_press_continue=0x7f0b015d;
        /**  Security & location settings screen, setting option name 
         */
        public static final int lockpattern_change_lock_pattern_label=0x7f0b03e4;
        /**  Security & location settings screen, change unlock pattern screen instruction when the user chooses "Change unlock pattern".  We first ask the user toe nter the current pattern, and this is the message seen 
         */
        public static final int lockpattern_change_lock_pin_label=0x7f0b03e5;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  When they are ready to draw it once again to confirm it, they press this button. 
         */
        public static final int lockpattern_confirm_button_text=0x7f0b03f1;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen. Once they draw a new pattern and confirm it by drawing it again, they press this button to exit 
         */
        public static final int lockpattern_continue_button_text=0x7f0b03f4;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen to confirm pattern 
         */
        public static final int lockpattern_need_to_confirm=0x7f0b03ef;
        /**  Security & location settings screen, change unlock pattern screen instruction when the user chooses "Change unlock pattern".  We first ask the user toe nter the current pattern, and this is the message seen 
         */
        public static final int lockpattern_need_to_unlock=0x7f0b03e6;
        /**  Do not translate. 
         */
        public static final int lockpattern_need_to_unlock_footer=0x7f0b03e7;
        /**  Security & location settings screen, change unlock pattern screen instruction if user draws incorrect pattern 
         */
        public static final int lockpattern_need_to_unlock_wrong=0x7f0b03e8;
        /**  Do not translate. 
         */
        public static final int lockpattern_need_to_unlock_wrong_footer=0x7f0b03e9;
        public static final int lockpattern_pattern_confirmed_header=0x7f0b03f0;
        /**  Security & location settings screen, change unlock pattern screen message on top of screen after drawing pattern 
         */
        public static final int lockpattern_pattern_entered_header=0x7f0b03ee;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen if user doesn't connect enough dots 
         */
        public static final int lockpattern_recording_incorrect_too_short=0x7f0b03ed;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen while drawing pattern 
         */
        public static final int lockpattern_recording_inprogress=0x7f0b03ec;
        /**  Security & location settings screen, change unlock pattern screen hint on bottom of screen.  We are telling them to press the menu button to see more options or help. 
         */
        public static final int lockpattern_recording_intro_footer=0x7f0b03eb;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen.  This si when they are supposed to draw a new unlock pattern (for example, if they are changing their unlock patterns)..
         */
        public static final int lockpattern_recording_intro_header=0x7f0b03ea;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  If they are nto satisfied with this pattern, they click this button to redraw the pattern. 
         */
        public static final int lockpattern_restart_button_text=0x7f0b03f2;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen. If they are supposed to enter their current pattern before being able to draw another one, and they screw up, they hit this button to try again 
         */
        public static final int lockpattern_retry_button_text=0x7f0b03f3;
        /**  Security & location settings screen, setting option name when user has previously set an unlock pattern and wants to change to a new pattern 
         */
        public static final int lockpattern_settings_change_lock_pattern=0x7f0b03fc;
        /**  Security & location settings screen, setting option name when user has never set an unlock pattern 
         */
        public static final int lockpattern_settings_choose_lock_pattern=0x7f0b03fb;
        /**  Security & location settings screen, setting check box title. This controls whether the device locks immediately when the power button is pressed. [CHAR LIMIT=28]
         */
        public static final int lockpattern_settings_enable_power_button_instantly_locks=0x7f0b03fa;
        /**  Security & location settings screen, setting summary for the checkbox "Require pattern" 
         */
        public static final int lockpattern_settings_enable_summary=0x7f0b03f7;
        /**  Security & location settings screen, setting check box title. This setting controls whether tactile feedback will be produced when the user draws the pattern.
         */
        public static final int lockpattern_settings_enable_tactile_feedback_title=0x7f0b03f9;
        /**  Security & location settings screen, setting check box title if the unlock pattern MUST be drawn everytime they turn on the screen 
         */
        public static final int lockpattern_settings_enable_title=0x7f0b03f6;
        /**  Security & location settings screen, setting check box title. This setting controls whether a visible green line is drawn as the user moves his finger around while drawing the unlock pattern.  If checked, this line is drawn.  If unchecked, there is nothing drawn so the user does not reveal his pattern while he unlocks the phone.
         */
        public static final int lockpattern_settings_enable_visible_pattern_title=0x7f0b03f8;
        /**  Security & location settings screen, the help instructions (an animation) caption 
         */
        public static final int lockpattern_settings_help_how_to_record=0x7f0b03fd;
        /**  Security & location settings screen, unlock screen activity title 
         */
        public static final int lockpattern_settings_title=0x7f0b03f5;
        /**  Security & location settings screen, change unlock pattern screen countdown hint on bottom of screen after too many incorrect attempts 
         */
        public static final int lockpattern_too_many_failed_confirmation_attempts_footer=0x7f0b03ff;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen after too many incorrect attempts 
         */
        public static final int lockpattern_too_many_failed_confirmation_attempts_header=0x7f0b03fe;
        /**  Label for LockPatternTutorial Cancel button 
         */
        public static final int lockpattern_tutorial_cancel_label=0x7f0b016a;
        /**  Label for LockPatternTutorial Continue button 
         */
        public static final int lockpattern_tutorial_continue_label=0x7f0b016b;
        /**  Phone ram dump off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int lte_ram_dump_off=0x7f0b0019;
        /**  Phone ram dump on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int lte_ram_dump_on=0x7f0b0018;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int macaddr_label=0x7f0b028f;
        /**  Description of the main process in the details. 
         */
        public static final int main_running_process_description=0x7f0b048e;
        /**  Title of preference to manage device admins 
         */
        public static final int manage_device_admin=0x7f0b016e;
        /**  Summary of preference to manage device policies 
         */
        public static final int manage_device_admin_summary=0x7f0b016f;
        /**  Mobile plan [CHAR LIMIT=35]
         */
        public static final int manage_mobile_plan_title=0x7f0b03a2;
        /**  Notification access settings (part of Security) 
 Title of preference to manage notification listeners 
         */
        public static final int manage_notification_access=0x7f0b0170;
        /**  Summary of preference to manage notification listeners, when none are enabled 
         */
        public static final int manage_notification_access_summary_zero=0x7f0b0171;
        /**  Manage applications screen, individual app screen, button label when the user wants to manage the space taken up by an app. 
         */
        public static final int manage_space_text=0x7f0b0434;
        /**  Applications settings screen, setting option summary for the user to go to the screen to manage installed applications  
         */
        public static final int manageapplications_settings_summary=0x7f0b0402;
        /**  Applications settings screen, setting option name for the user to go to the screen to manage installed applications  
         */
        public static final int manageapplications_settings_title=0x7f0b0401;
        /**  SD card & phone storage settings screen, instructions and list of current accounts.  The list of accounts follows this text[CHAR LIMIT=NONE] 
         */
        public static final int master_clear_accounts=0x7f0b0376;
        /**  SD card & phone storage settings screen, button on screen after user selects Factory data reset 
         */
        public static final int master_clear_button_text=0x7f0b037b;
        /**  Master clear confirmation screen title [CHAR LIMIT=30] 
         */
        public static final int master_clear_confirm_title=0x7f0b0381;
        /**  SD card & phone storage settings screen, message on screen after user selects Factory data reset [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_desc=0x7f0b0375;
        /**  SD card & phone storage settings screen, list of items in user data storage (USB storage or SD card) that will be erased during this operation [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_desc_also_erases_external=0x7f0b0377;
        /**  SD card & phone storage settings screen, instructions about whether to also erase the external storage (SD card) when erasing the internal storage [CHAR LIMIT=NONE] 
         */
        public static final int master_clear_desc_erase_external_storage=0x7f0b0378;
        /**  Master clear failed message 
         */
        public static final int master_clear_failed=0x7f0b0380;
        /**  SD card & phone storage settings screen, button on screen after user selects Reset phone button 
         */
        public static final int master_clear_final_button_text=0x7f0b037d;
        /**  SD card & phone storage settings screen, message on screen after user selects Reset phone button 
         */
        public static final int master_clear_final_desc=0x7f0b037c;
        /**  Explanation of drawing unlock pattern to reset phone 
         */
        public static final int master_clear_gesture_explanation=0x7f0b037f;
        /**  Message to draw an unlock pattern before clearing the device 
         */
        public static final int master_clear_gesture_prompt=0x7f0b037e;
        /**  SD card & phone storage settings screen, setting option summary text under Internal phone storage heading 
         */
        public static final int master_clear_summary=0x7f0b0374;
        /**  Master Clear 
 SD card & phone storage settings screen, setting option name under Internal phone storage heading 
         */
        public static final int master_clear_title=0x7f0b0373;
        /**  SD card & phone storage settings screen, button on screen after user selects Factory data reset 
         */
        public static final int media_format_button_text=0x7f0b0385;
        /**  SD card & phone storage settings screen, message on screen after user selects Factory data reset [CHAR LIMIT=NONE] 
         */
        public static final int media_format_desc=0x7f0b0384;
        /**  SD card & phone storage settings screen, button on screen after user selects Format media button 
         */
        public static final int media_format_final_button_text=0x7f0b0387;
        /**  SD card & phone storage settings screen, message on screen after user selects Format media button [CHAR LIMIT=NONE] 
         */
        public static final int media_format_final_desc=0x7f0b0386;
        /**  Explanation of drawing unlock pattern to format card [CHAR LIMIT=NONE] 
         */
        public static final int media_format_gesture_explanation=0x7f0b0389;
        /**  Message to draw an unlock pattern before clearing the device 
         */
        public static final int media_format_gesture_prompt=0x7f0b0388;
        /**  SD card & phone storage settings screen, setting option summary text under Internal phone storage heading 
         */
        public static final int media_format_summary=0x7f0b0383;
        /**  SD card & phone storage settings screen, setting option name under Internal phone storage heading 
         */
        public static final int media_format_title=0x7f0b0382;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int media_volume_summary=0x7f0b02aa;
        /**  Sound settings screen, setting option name 
         */
        public static final int media_volume_title=0x7f0b02a9;
        /**  choice for the font size spinner 
         */
        public static final int medium_font=0x7f0b0035;
        /**  [CHAR LIMIT=10] Running services, label for chart showing memory use. 
         */
        public static final int memory=0x7f0b047c;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of applications installed. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_apps_usage=0x7f0b0325;
        /**  SD card & phone storage settings title. The amount of free space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section. 
         */
        public static final int memory_available=0x7f0b0321;
        /**  SD card & phone storage settings title. The amount of free space for some storage partition when the volume is read-only. [CHAR LIMIT=64] 
         */
        public static final int memory_available_read_only=0x7f0b0322;
        /**  SD card & phone storage settings summary. Displayed when the total memory usage is being calculated. Will be replaced with a number like "12.3 GB" when finished calucating. [CHAR LIMIT=30] 
         */
        public static final int memory_calculating_size=0x7f0b0324;
        /**  Message of dialog asking user to confirm before clearing all caches. [CHAR LIMIT=48] 
         */
        public static final int memory_clear_cache_message=0x7f0b0334;
        /**  SD card status when it is mounted as read only. Will be appended to size, starts with an unbreakable space 
 Title of dialog asking user to confirm before clearing all caches. [CHAR LIMIT=48] 
         */
        public static final int memory_clear_cache_title=0x7f0b0333;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of all pictures, videos in /sdcard/DCIM, /sdcard/Pictures folders on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_dcim_usage=0x7f0b0328;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of /sdcard/Download on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_downloads_usage=0x7f0b0327;
        /**  Storage item representing all cached data on device. [CHAR LIMIT=48] 
         */
        public static final int memory_media_cache_usage=0x7f0b032b;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of misc files on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_media_misc_usage=0x7f0b032a;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of media on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_media_usage=0x7f0b0326;
        /**  SD card & phone storage settings title. Displayed as a title when showing the total usage of audio files in /sdcard on the device. Below it will be a number like "123.4 MB" indicating used storage. [CHAR LIMIT=50] 
         */
        public static final int memory_music_usage=0x7f0b0329;
        /**  SD card & phone storage settings screen heading.  The total amount of storage space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section 
         */
        public static final int memory_size=0x7f0b0323;
        /**  Edit access point screen menu option to discard the user's changes for this APN 
         */
        public static final int menu_cancel=0x7f0b036a;
        /**  Edit access point screen menu option to delete this APN 
         */
        public static final int menu_delete=0x7f0b0367;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_12h=0x7f0b05c1;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_1d=0x7f0b05c2;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_3h=0x7f0b05bf;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show 3 hours of data 
         */
        public static final int menu_duration_6h=0x7f0b05c0;
        /**  APNs screen menu option to create a brand spanking new APN 
         */
        public static final int menu_new=0x7f0b0368;
        /**  [CHAR LIMIT=NONE] Menu for process stats to select duration of stats to show 
         */
        public static final int menu_proc_stats_duration=0x7f0b05be;
        /**  [CHAR LIMIT=NONE] Menu for process stats to select which type of stats to show 
         */
        public static final int menu_proc_stats_type=0x7f0b05c5;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show information on background processes 
         */
        public static final int menu_proc_stats_type_background=0x7f0b05c6;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show information on cached processes 
         */
        public static final int menu_proc_stats_type_cached=0x7f0b05c8;
        /**  [CHAR LIMIT=NONE] Menu for process stats to show information on foreground processes 
         */
        public static final int menu_proc_stats_type_foreground=0x7f0b05c7;
        /**  APNs screen menu option to reset default APN settings 
         */
        public static final int menu_restore=0x7f0b0371;
        /**  Edit access point screen menu option to save the user's changes for this APN to the persistent storage 
         */
        public static final int menu_save=0x7f0b0369;
        /**  [CHAR LIMIT=NONE] Menu for process stats to control whether system processes are shown 
         */
        public static final int menu_show_system=0x7f0b05c3;
        /**  Menu label for viewing battery usage since unplugged 
         */
        public static final int menu_stats_last_unplugged=0x7f0b05ad;
        /**  Menu label for refreshing with latest usage numbers 
         */
        public static final int menu_stats_refresh=0x7f0b05af;
        /**  Menu label for viewing battery usage total 
         */
        public static final int menu_stats_total=0x7f0b05ae;
        /**  Menu label for viewing battery usage since unplugged 
         */
        public static final int menu_stats_unplugged=0x7f0b05ac;
        /**  [CHAR LIMIT=NONE] Menu for process stats to control whether computation should be based
        on Uss (Unique Set Size) instead of Pss (Proportional Set Size) 
         */
        public static final int menu_use_uss=0x7f0b05c4;
        /**  Misc files [CHAR LIMIT=25] 
         */
        public static final int misc_files=0x7f0b0698;
        /**  number of misc files selected [CHAR LIMIT=40] 
         */
        public static final int misc_files_selected_count=0x7f0b0699;
        /**  number of bytes represented by the selected misc files [CHAR LIMIT=40] 
         */
        public static final int misc_files_selected_count_bytes=0x7f0b069a;
        /**  Ask user to connect to the internet [CHAR_ LIMIT=50]
         */
        public static final int mobile_connect_to_internet=0x7f0b03aa;
        /**  Ask user to insert a SIM card [CHAR_ LIMIT=50]
         */
        public static final int mobile_insert_sim_card=0x7f0b03a9;
        /**  There is no mobile provisiong website for the operator which is the firat parameter [CHAR_ LIMIT=50]
         */
        public static final int mobile_no_provisioning_url=0x7f0b03a8;
        /**  The SIM operator is not known [CHAR_ LIMIT=50]
         */
        public static final int mobile_unknown_sim_operator=0x7f0b03a7;
        /**  About phone screen, status item label
         */
        public static final int model_number=0x7f0b02fd;
        /**  Manage applications, text for Move button 
         */
        public static final int move_app=0x7f0b0459;
        /**  Manage applications, text for dialog moving an app 
         */
        public static final int move_app_failed_dlg_text=0x7f0b0465;
        /**  Manage applications, text for dialog when moving an app 
         */
        public static final int move_app_failed_dlg_title=0x7f0b0464;
        /**  Manage applications, text for Move button to move app to internal storage 
         */
        public static final int move_app_to_internal=0x7f0b045a;
        /**  Manage applications, text for Move button  to move app to sdcard 
         */
        public static final int move_app_to_sdcard=0x7f0b045b;
        /**  Manage applications, title for dialog when killing persistent apps
 Manage applications, text for Move button when move is in progress 
         */
        public static final int moving=0x7f0b045c;
        /**  SD card & phone storage settings item summary that will result in the phone connected to PC and MTP/PTP enabled.   [CHAR LIMIT=80] 
         */
        public static final int mtp_ptp_mode_summary=0x7f0b0335;
        /**  Sound settings screen, music effects title [CHAR LIMIT=30]
         */
        public static final int musicfx_title=0x7f0b02a0;
        /**  Edit Mvno Match Data Info of APN 
         */
        public static final int mvno_match_data=0x7f0b0366;
        /**  Edit Mvno Type Info of APN 
         */
        public static final int mvno_type=0x7f0b0365;
        /**  Wireless controls, item title to go into the network settings 
         */
        public static final int network_settings_title=0x7f0b03a1;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int network_state_label=0x7f0b0288;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int networkid_label=0x7f0b0290;
        /**  mobile network settings screen, setting option name 
         */
        public static final int networks=0x7f0b00ff;
        /**  Prompt for the user to enter a new full-backup password 
         */
        public static final int new_backup_pw_prompt=0x7f0b073e;
        /**  SetupWizard strings used by DateTimeSettingsSetupWizard.  The button label for going to the next screen. 
         */
        public static final int next_label=0x7f0b00e5;
        public static final int nfc_payment_ask=0x7f0b07bf;
        /**  String shown when there are no NFC payment applications installed, clickable, pointing to
         a website to learn more
         */
        public static final int nfc_payment_learn_more=0x7f0b077d;
        public static final int nfc_payment_menu_item_add_service=0x7f0b077e;
        /**  String shown when there are no NFC payment applications installed 
         */
        public static final int nfc_payment_no_apps=0x7f0b077c;
        public static final int nfc_payment_set_default=0x7f0b0780;
        public static final int nfc_payment_set_default_instead_of=0x7f0b0781;
        /**  Label for the dialog that is shown when the user is asked to set a
         preferred payment application 
         */
        public static final int nfc_payment_set_default_label=0x7f0b077f;
        public static final int nfc_payment_settings_title=0x7f0b077b;
        /**  Description of NFC in the 1st level settings screen, for a phone. [CHAR LIMIT=NONE] 
         */
        public static final int nfc_quick_toggle_summary=0x7f0b01d7;
        /**  NFC settings 
 Used in the 1st-level settings screen to turn on NFC 
         */
        public static final int nfc_quick_toggle_title=0x7f0b01d6;
        /**  Strings for Dialog no button 
         */
        public static final int no=0x7f0b0007;
        /**  UI debug setting: label for app picker to select no applicatiojn [CHAR LIMIT=50] 
         */
        public static final int no_application=0x7f0b06a3;
        /**  [CHAR LIMIT=25] Text shown when there are no applications to display. 
         */
        public static final int no_applications=0x7f0b043e;
        /**  Message when there are no available device admins to display 
         */
        public static final int no_device_admins=0x7f0b0642;
        /**  String to show in the list of notification listeners, when none is installed 
         */
        public static final int no_notification_listeners=0x7f0b0172;
        /**  [CHAR LIMIT=25] Text shown when there are no services running 
         */
        public static final int no_running_services=0x7f0b0477;
        /**  Message displayed when there are no active services in a process. 
         */
        public static final int no_services=0x7f0b0485;
        /**  The option in the date-format picker for using the normal format
         called for by the user's locale. 
         */
        public static final int normal_date_format=0x7f0b0098;
        /**  [CHAR LIMIT=25] Manage applications, text telling using an application is not installed. 
         */
        public static final int not_installed=0x7f0b043d;
        /**  Summary for a warning message about security implications of enabling a notification
          listener, displayed as a dialog message. [CHAR LIMIT=NONE] 
         */
        public static final int notification_listener_security_warning_summary=0x7f0b0174;
        /**  Title for a warning message about security implications of enabling a notification
          listener, displayed as a dialog message. [CHAR LIMIT=NONE] 
         */
        public static final int notification_listener_security_warning_title=0x7f0b0173;
        /**  Sound settings screen, notification light repeat pulsing title 
         */
        public static final int notification_pulse_title=0x7f0b02a4;
        /**  Sound settings screen, setting option title
         */
        public static final int notification_sound_dialog_title=0x7f0b02a8;
        /**  Sound settings screen, setting option name 
         */
        public static final int notification_sound_title=0x7f0b02a3;
        /**  Sound settings screen, the title of the volume bar to adjust the notification volume 
         */
        public static final int notification_volume_title=0x7f0b02a6;
        /**  Description of NFC in the 1st level settings screen. [CHAR LIMIT=NONE] 
         */
        public static final int nsd_quick_toggle_summary=0x7f0b01df;
        /**  Network service discovery settings 
 Used in the 1st-level settings screen to turn on NSD 
         */
        public static final int nsd_quick_toggle_title=0x7f0b01de;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int oem_radio_info_label=0x7f0b00d3;
        /**  Message to user that Home Settings will be hidden because there is now only one available home application 
         */
        public static final int only_one_home_message=0x7f0b0777;
        /**  Summary for on-screen keyboard settings 
         */
        public static final int onscreen_keyboard_settings_summary=0x7f0b04e0;
        /**  UI debug setting: simulate secondary display devices using overlays [CHAR LIMIT=25] 
         */
        public static final int overlay_display_devices_title=0x7f0b06c9;
        /**  Hint text shown in owner info edit text [CHAR LIMIT=50] 
         */
        public static final int owner_info_settings_edit_text_hint=0x7f0b011d;
        /**  Text shown for summary of owner info setting [CHAR LIMIT=40]
         */
        public static final int owner_info_settings_summary=0x7f0b011c;
        /**  Text shown for title of owner info setting [CHAR LIMIT=20]
         */
        public static final int owner_info_settings_title=0x7f0b0119;
        /**  Subtitle for list of packages 
         */
        public static final int packages_subtitle=0x7f0b0581;
        /**  Representation of a numerical percentage. [CHAR LIMIT=8] 
         */
        public static final int percentage=0x7f0b0742;
        /**  Manage applications, individual application info screen, heading for settings related to the app's permissions. for example, it may list all the permissions the app has. 
         */
        public static final int permissions_label=0x7f0b0412;
        /**  Personal data section title 
         */
        public static final int personal_data_section_title=0x7f0b062f;
        /**  The title of the activity to see phone info 
         */
        public static final int phone_info_label=0x7f0b00ec;
        /**  On Text & language settings screen, setting option name. title of the setting to take the user to a screen to select the locale. 
         */
        public static final int phone_language=0x7f0b0497;
        /**  On Text & language settings screen, setting option name. summary of the setting to take the user to a screen to select the locale. 
         */
        public static final int phone_language_summary=0x7f0b0498;
        /**  On Pico TTS Settings screen, text to mark a voice as installed 
         */
        public static final int pico_installed=0x7f0b05f7;
        /**  On Pico TTS Settings screen, text to mark the section for the various languages and voices that are available 
         */
        public static final int pico_languages_and_voices=0x7f0b05f6;
        /**  On Pico TTS Settings screen, text to mark a voice as not installed 
         */
        public static final int pico_not_installed=0x7f0b05f8;
        /**  On Pico TTS Settings screen, summary text to indicate that a voice is female 
         */
        public static final int pico_voice_summary_female=0x7f0b05f9;
        /**  On Pico TTS Settings screen, summary text to indicate that a voice is male 
         */
        public static final int pico_voice_summary_male=0x7f0b05fa;
        /**  Instructions telling the user that the operation to unlock the keyguard
         with SIM PIN failed. Displayed in one line in a large font.  
         */
        public static final int pin_failed=0x7f0b02f8;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int ping_test_label=0x7f0b00ce;
        /**  Label for the phase2 
         */
        public static final int please_select_phase2=0x7f0b0222;
        /**  UI debug setting: show pointer location? [CHAR LIMIT=25] 
         */
        public static final int pointer_location=0x7f0b06ac;
        /**  UI debug setting: show pointer location summary [CHAR LIMIT=50] 
         */
        public static final int pointer_location_summary=0x7f0b06ad;
        /**  On Language & input settings screen, heading. Inside the "Language & input settings" screen, this is the header for settings that relate to mouse and trackpad devices. [CHAR LIMIT=40] 
         */
        public static final int pointer_settings_category=0x7f0b04a6;
        /**  On Language & input settings screen, setting summary.  Setting for mouse pointer speed. [CHAR LIMIT=35] 
         */
        public static final int pointer_speed=0x7f0b04a7;
        /**  Label for power consumed by Bluetooth 
         */
        public static final int power_bluetooth=0x7f0b0584;
        /**  Label for power consumed by Cell idle 
         */
        public static final int power_cell=0x7f0b0585;
        /**  Label for power consumed when Idle 
         */
        public static final int power_idle=0x7f0b0587;
        /**  Label for power consumed by Calling 
         */
        public static final int power_phone=0x7f0b0586;
        /**  Label for power consumed by the screen 
         */
        public static final int power_screen=0x7f0b0582;
        /**  Display the battery level and status [CHAR_LIMIT=30] 
         */
        public static final int power_usage_level_and_status=0x7f0b056d;
        /**  Message to show when battery usage data is not available [CHAR LIMIT=30] 
         */
        public static final int power_usage_not_available=0x7f0b056c;
        /**  Activity title summary for App Fuel Gauge summary 
         */
        public static final int power_usage_summary=0x7f0b056b;
        /**  Activity title for App Fuel Gauge summary 
 no translation found for print_search_result_count_utterance:one (1322401991353603285) 
 no translation found for print_search_result_count_utterance:other (460211409510874128) 
         */
        public static final int power_usage_summary_title=0x7f0b056a;
        /**  Label for power consumed by Wi-Fi 
         */
        public static final int power_wifi=0x7f0b0583;
        /**  Preference item that lets the user change password 
         */
        public static final int preference_change_password_title=0x7f0b0687;
        /**  Template for the label of the state for a blocked print job. [CHAR LIMIT=25] 
         */
        public static final int print_blocked_state_title_template=0x7f0b0567;
        /**  Title for the button to cancel a print job. [CHAR LIMIT=25] 
         */
        public static final int print_cancel=0x7f0b0562;
        /**  Template for the label for a cancelling print job. [CHAR LIMIT=25] 
         */
        public static final int print_cancelling_state_title_template=0x7f0b0565;
        /**  Template for the label of the state for a failed print job. [CHAR LIMIT=25] 
         */
        public static final int print_failed_state_title_template=0x7f0b0566;
        /**  Summary for the disabled state of a print feature. [CHAR LIMIT=10] 
         */
        public static final int print_feature_state_off=0x7f0b0559;
        /**  Summary for the enabled state of a print feature. [CHAR LIMIT=10] 
         */
        public static final int print_feature_state_on=0x7f0b0558;
        /**  Template for the summary of a print job. [CHAR LIMIT=25] 
         */
        public static final int print_job_summary=0x7f0b0563;
        /**  Title of the action bar button to got to add a printer. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_add_printer=0x7f0b055b;
        /**  Title for print menu item to launch the add printers activity. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_add_printers=0x7f0b0557;
        /**  Title of the action bar button to got to Play Store to download a print service. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_add_service=0x7f0b055a;
        /**  Title for the search action bar menu item. [CHAR LIMIT=20] 
         */
        public static final int print_menu_item_search=0x7f0b055c;
        /**  Title for print menu item to launch a settings activity. [CHAR LIMIT=25] 
         */
        public static final int print_menu_item_settings=0x7f0b0556;
        /**  Title for the prompt shown as a placeholder if no printers are found while searching. [CHAR LIMIT=50] 
         */
        public static final int print_no_printers_found=0x7f0b0555;
        /**  Title for the prompt shown as a placeholder if no print serivices are installed. [CHAR LIMIT=50] 
         */
        public static final int print_no_services_installed=0x7f0b0554;
        /**  Title for the print job settings screen. [CHAR LIMIT=25] 
         */
        public static final int print_print_job=0x7f0b0560;
        /**  Title for the menu item to open the print jobs screen. [CHAR LIMIT=25] 
         */
        public static final int print_print_jobs=0x7f0b055f;
        /**  Template for the label of the state for a ongoing print job. [CHAR LIMIT=25] 
         */
        public static final int print_printing_state_title_template=0x7f0b0564;
        /**  Title for the button to restart a print job. [CHAR LIMIT=25] 
         */
        public static final int print_restart=0x7f0b0561;
        /**  Utterance to announce that the search box is hidden. This is spoken to a blind user. [CHAR LIMIT=none] 
         */
        public static final int print_search_box_hidden_utterance=0x7f0b0569;
        /**  Utterance to announce that the search box is shown. This is spoken to a blind user. [CHAR LIMIT=none] 
         */
        public static final int print_search_box_shown_utterance=0x7f0b0568;
        /**  Title for the prompt if no printers are available and the system is searching for such. [CHAR LIMIT=50] 
         */
        public static final int print_searching_for_printers=0x7f0b055d;
        /**  Title for the prompt if no printers are available because the print service is disabled. [CHAR LIMIT=50] 
         */
        public static final int print_service_disabled=0x7f0b055e;
        /**  Summary for a warning message about security implications of enabling a print service,
         displayed as a dialog message when the user selects to enable a print service. [CHAR LIMIT=NONE] 
         */
        public static final int print_service_security_warning_summary=0x7f0b0553;
        /**  Title for a warning message about security implications of enabling a print service,
         displayed as a dialog message when the user selects to enable a print service (tablet). [CHAR LIMIT=NONE] 
         */
        public static final int print_service_security_warning_title=0x7f0b0552;
        public static final int print_services_title=0x7f0b07bb;
        /**  Title in main settings screen for printing settings [CHAR LIMIT=15] 
         */
        public static final int print_settings=0x7f0b0550;
        /**  Title for print service settings screen [CHAR LIMIT=25] 
         */
        public static final int print_settings_title=0x7f0b0551;
        /**  Backup and reset settings menu title 
         */
        public static final int privacy_settings=0x7f0b062c;
        /**  Privacy settings activity title 
         */
        public static final int privacy_settings_title=0x7f0b062d;
        /**  Label for kernel threads 
         */
        public static final int process_kernel_label=0x7f0b05b0;
        /**  Label for mediaserver process 
         */
        public static final int process_mediaserver_label=0x7f0b05b1;
        /**  Message that a process's provider is in use. 
         */
        public static final int process_provider_in_use_description=0x7f0b0490;
        /**  Message that a process's service is in use. 
         */
        public static final int process_service_in_use_description=0x7f0b048f;
        /**  [CHAR LIMIT=NONE] Label for item showing details of average RAM use 
         */
        public static final int process_stats_avg_ram_use=0x7f0b05ba;
        /**  [CHAR LIMIT=NONE] Label for item showing details of maximum RAM use 
         */
        public static final int process_stats_max_ram_use=0x7f0b05bb;
        /**  [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over 
         */
        public static final int process_stats_memory_status=0x7f0b05b9;
        public static final int process_stats_ram_use=0x7f0b07c3;
        /**  [CHAR LIMIT=NONE] Label for item showing percent of time spent running 
         */
        public static final int process_stats_run_time=0x7f0b05bc;
        /**  [CHAR LIMIT=NONE] Activity title summary for Process Stats summary 
         */
        public static final int process_stats_summary=0x7f0b05b3;
        /**  [CHAR LIMIT=NONE] Activity title for Process Stats summary 
         */
        public static final int process_stats_summary_title=0x7f0b05b2;
        /**  [CHAR LIMIT=NONE] Label for process stats, duration of time the stats are over 
         */
        public static final int process_stats_total_duration=0x7f0b05b5;
        /**  [CHAR LIMIT=NONE] Label for process stats, text for stats type 
         */
        public static final int process_stats_type_background=0x7f0b05b6;
        /**  [CHAR LIMIT=NONE] Label for process stats, text for stats type 
         */
        public static final int process_stats_type_cached=0x7f0b05b8;
        /**  [CHAR LIMIT=NONE] Label for process stats, text for stats type 
         */
        public static final int process_stats_type_foreground=0x7f0b05b7;
        /**  Text shown for title of profile info setting [CHAR LIMIT=20]
         */
        public static final int profile_info_settings_title=0x7f0b0121;
        /** Bluetooth settings screen, text that appears in heading bar when scanning for devices 
         */
        public static final int progress_scanning=0x7f0b007c;
        /**  What to show in messaging that refers to this provider, e.g. AccountSyncSettings 
         */
        public static final int provider_label=0x7f0b068f;
        /**  HTTP proxy settings. The button to save. 
         */
        public static final int proxy_action_text=0x7f0b00a8;
        /**  HTTP proxy settings. Button to clear the proxy box. 
         */
        public static final int proxy_clear_text=0x7f0b00a2;
        /**  HTTP proxy settings. The button to restore the defaults. 
         */
        public static final int proxy_defaultView_text=0x7f0b00a7;
        /**  HTTP proxy settings. Title if there is an error
         */
        public static final int proxy_error=0x7f0b00ab;
        /**  HTTP proxy settings. Button to get rid of error box
         */
        public static final int proxy_error_dismiss=0x7f0b00ac;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_empty_host_set_port=0x7f0b00b0;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_empty_port=0x7f0b00af;
        /**  HTTP proxy settings. The error if the exclusion list is not valid 
         */
        public static final int proxy_error_invalid_exclusion_list=0x7f0b00ae;
        /**  HTTP proxy settings. The error if the hostname is not valid 
         */
        public static final int proxy_error_invalid_host=0x7f0b00ad;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_invalid_port=0x7f0b00b1;
        /**  HTTP proxy settings. The hint text for proxy exclusion list. [CHAR LIMIT=50]
         */
        public static final int proxy_exclusionlist_hint=0x7f0b00a6;
        /**  HTTP proxy settings. The exclusion list label. 
         */
        public static final int proxy_exclusionlist_label=0x7f0b00a5;
        /**  HTTP proxy settings. The hint text field for the hostname. [CHAR LIMIT=50] 
         */
        public static final int proxy_hostname_hint=0x7f0b00aa;
        /**  HTTP proxy settings. The text field for the hostname 
         */
        public static final int proxy_hostname_label=0x7f0b00a9;
        /**  HTTP proxy settings. The hint text field for port. 
         */
        public static final int proxy_port_hint=0x7f0b00a4;
        /**  HTTP proxy settings. The port number label. 
         */
        public static final int proxy_port_label=0x7f0b00a3;
        /**  The title of the activity to adjust proxy settings 
         */
        public static final int proxy_settings_label=0x7f0b00ee;
        /**  HTTP proxy settings title 
         */
        public static final int proxy_settings_title=0x7f0b00a1;
        /**  HTTP proxy settings. Title for Proxy-Auto Config URL.  [CHAR LIMIT=NONE]
         */
        public static final int proxy_url=0x7f0b00b3;
        /**  HTTP proxy settings. Warning message about limited application support [CHAR LIMIT=100]
         */
        public static final int proxy_warning_limited_support=0x7f0b00b2;
        /**  On the Quick launch settings screen, title of the item for shortcut letters that are not assigned to an application yet. Quick launch is assigning a global shortcut to launch a specific app. 
         */
        public static final int quick_launch_assign_application=0x7f0b04c9;
        /**  Clear dialog for quick launch setting box button labels: 
         */
        public static final int quick_launch_clear_cancel_button=0x7f0b04cf;
        /**  On the Quick launch settings screen, message in the "Clear shortcut" confirmation dialog.  See the title for this dialog for more info. 
         */
        public static final int quick_launch_clear_dialog_message=0x7f0b04cd;
        /**  On the Quick launch settings screen, title of "Clear shortcut" confirmation dialog. This is reached by longpressing an item for a shortcut letter.  This allows the user to clear the assigned application for that shortcut letter. 
         */
        public static final int quick_launch_clear_dialog_title=0x7f0b04cc;
        /**  Clear dialog for quick launch setting box button labels: 
         */
        public static final int quick_launch_clear_ok_button=0x7f0b04ce;
        /**  Quick launch screen, when assigning an app to a shortcut, this menu item to show a list of all applications.  
         */
        public static final int quick_launch_display_mode_applications=0x7f0b04d0;
        /**  Quick launch screen, when assigning an app to a shortcut, this menu item to show a list of all shortcutable applications 
         */
        public static final int quick_launch_display_mode_shortcuts=0x7f0b04d1;
        /**  On the Quick launch settings screen, summary text for the item of letters that are not assigned. See the quick launch "Assign application" for a description of quick launch 
         */
        public static final int quick_launch_no_shortcut=0x7f0b04ca;
        /**  On the Quick launch settings screen, summary text under the item for each assigned letter.  
         */
        public static final int quick_launch_shortcut=0x7f0b04cb;
        /**  The summary of the item to go into the Quick launch settings. This is a description of what Quick launch offers. 
         */
        public static final int quick_launch_summary=0x7f0b04c8;
        /**  The title of the item to go into the Quick launch settings. 
         */
        public static final int quick_launch_title=0x7f0b04c7;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_cid=0x7f0b0031;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_connected=0x7f0b0029;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_connecting=0x7f0b0028;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_disconnected=0x7f0b0027;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_suspended=0x7f0b002a;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_asu=0x7f0b002f;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_bytes=0x7f0b002d;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_dbm=0x7f0b002e;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_packets=0x7f0b002c;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_lac=0x7f0b0030;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_getPDP=0x7f0b001d;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewADN=0x7f0b001a;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewFDN=0x7f0b001b;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewSDN=0x7f0b001c;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_idle=0x7f0b0024;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_offhook=0x7f0b0026;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_ringing=0x7f0b0025;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_roaming_in=0x7f0b0022;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_roaming_not=0x7f0b0023;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_emergency=0x7f0b0020;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_in=0x7f0b001e;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_off=0x7f0b0021;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_out=0x7f0b001f;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_unknown=0x7f0b002b;
        /**  Main Settings screen settings summary text for the "Wireless controls" setting 
         */
        public static final int radio_controls_summary=0x7f0b00f6;
        /**  Main Settings screen settings title for things like airplane mode, tethering, NFC, VPN.  This will take you to another screen with those settings. 
         */
        public static final int radio_controls_title=0x7f0b00f4;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_band_mode_label=0x7f0b00c8;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_call_redirect_label=0x7f0b00bb;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_call_status_label=0x7f0b00c3;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_cellinfo_label=0x7f0b00b6;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_current_network_label=0x7f0b00be;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_data_attempts_label=0x7f0b00b7;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_data_successes_label=0x7f0b00bf;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gprs_service_label=0x7f0b00b8;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gsm_disconnects_label=0x7f0b00bd;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gsm_service_label=0x7f0b00c1;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_http_client_test=0x7f0b00cd;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_imei_label=0x7f0b00ba;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_message_waiting_label=0x7f0b00c6;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_neighboring_location_label=0x7f0b00b5;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_network_type_label=0x7f0b00c9;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_phone_number_label=0x7f0b00c7;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ping_hostname=0x7f0b00cc;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ping_ipaddr=0x7f0b00cb;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_received_label=0x7f0b00c0;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_resets_label=0x7f0b00bc;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_sent_label=0x7f0b00c4;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_radio_resets_label=0x7f0b00c5;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_roaming_label=0x7f0b00b9;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_set_perferred_label=0x7f0b00ca;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_signal_location_label=0x7f0b00b4;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_signal_strength_label=0x7f0b00c2;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_label=0x7f0b00cf;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_refresh_label=0x7f0b00d1;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_update_label=0x7f0b00d0;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_toggle_dns_check_label=0x7f0b00d2;
        /**  Remove account message in dialog [CHAR LIMIT=NONE] 
         */
        public static final int really_remove_account_message=0x7f0b068d;
        /**  Title of remove message for remove account dialog 
         */
        public static final int really_remove_account_title=0x7f0b068c;
        /**  Summary for the link to settings for the chosen voice recognizer in voice input/output settings.
         Would say something like, e.g., "Settings for 'Google'". 
         */
        public static final int recognizer_settings_summary=0x7f0b05d0;
        /**  Title for the link to settings for the chosen voice recognizer in voice input/output settings 
         */
        public static final int recognizer_settings_title=0x7f0b05cf;
        /**  Title for the voice recognizer setting in voice input/output settings 
         */
        public static final int recognizer_title=0x7f0b05ce;
        /**  Manage app screen, shown when the activity is busy recomputing the size of each app 
         */
        public static final int recompute_size=0x7f0b0441;
        /**  Text to display in regulatory info screen (from device overlay). 
         */
        public static final int regulatory_info_text=0x7f0b07ae;
        /**  About phone settings screen, setting option name to show regulatory information [CHAR LIMIT=25] 
         */
        public static final int regulatory_information=0x7f0b03cc;
        /**  This is shown if the autheticator for a given account fails to remove it. 
         */
        public static final int remove_account_failed=0x7f0b068e;
        /**  Button label to remove current account 
         */
        public static final int remove_account_label=0x7f0b0689;
        /**  Label for button to remove the active device admin 
         */
        public static final int remove_device_admin=0x7f0b0640;
        /**  [CHAR LIMIT=NONE] Manage applications screen, menu item.  Reset all of user's app preferences. 
         */
        public static final int reset_app_preferences=0x7f0b0430;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Confirmation button of dialog to confirm resetting user's app preferences. 
         */
        public static final int reset_app_preferences_button=0x7f0b0433;
        /**  [CHAR LIMIT=NONE] Manage applications screen, menu item.  Body of dialog to confirm resetting user's app preferences. 
         */
        public static final int reset_app_preferences_desc=0x7f0b0432;
        /**  [CHAR LIMIT=NONE] Manage applications screen, menu item.  Title of dialog to confirm resetting user's app preferences. 
         */
        public static final int reset_app_preferences_title=0x7f0b0431;
        /**  The message of dialog indicated restoring default APN settings in progress 
         */
        public static final int restore_default_apn=0x7f0b0370;
        /**  APNs screen toast message to inform reset default APN settings is completed 
         */
        public static final int restore_default_apn_completed=0x7f0b0372;
        /**  Restrictions summary for changing bluetooth configuration [CHAR LIMIT=100] 
         */
        public static final int restriction_bluetooth_config_summary=0x7f0b07a4;
        /**  Restrictions title for changing bluetooth configuration [CHAR LIMIT=35] 
         */
        public static final int restriction_bluetooth_config_title=0x7f0b07a3;
        /**  Restrictions summary for allowing location sharing [CHAR LIMIT=100] 
         */
        public static final int restriction_location_enable_summary=0x7f0b07a8;
        /**  Restrictions title for allowing location sharing [CHAR LIMIT=35] 
         */
        public static final int restriction_location_enable_title=0x7f0b07a7;
        /**  Restrictions screen - menu label to change restrictions pin [CHAR LIMIT=25] 
         */
        public static final int restriction_menu_change_pin=0x7f0b0784;
        /**  Restrictions screen - reset menu to reset to unrestricted [CHAR LIMIT=25] 
         */
        public static final int restriction_menu_reset=0x7f0b0783;
        /**  Restrictions summary for allowing NFC transfers (phone) [CHAR LIMIT=100] 
         */
        public static final int restriction_nfc_enable_summary=0x7f0b07a6;
        /**  Restrictions title for allowing NFC transfers [CHAR LIMIT=35] 
         */
        public static final int restriction_nfc_enable_title=0x7f0b07a5;
        /**  Restriction settings title [CHAR LIMIT=35] 
         */
        public static final int restriction_settings_title=0x7f0b0782;
        /**  Restrictions summary for configuring wifi and mobile [CHAR LIMIT=100] 
         */
        public static final int restriction_wifi_config_summary=0x7f0b07a2;
        /**  Restrictions title for configuring wifi and mobile [CHAR LIMIT=35] 
         */
        public static final int restriction_wifi_config_title=0x7f0b07a1;
        /**  Sound settings screen, setting option name 
         */
        public static final int ring_volume_title=0x7f0b02a1;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int ringtone_summary=0x7f0b029e;
        /**  Sound settings screen, setting option name to pick ringtone (a list dialog comes up)
         */
        public static final int ringtone_title=0x7f0b029d;
        /**  mobile network settings screen, setting check box title 
         */
        public static final int roaming=0x7f0b00f7;
        /**  mobile network settings screen, setting option summary text when check box is clear 
         */
        public static final int roaming_disable=0x7f0b00f9;
        /**  mobile network settings screen, setting option summary text when check box is selected 
         */
        public static final int roaming_enable=0x7f0b00f8;
        /**  mobile network settings screen, dialog message when you are roaming and clear the "Data roaming" check box 
         */
        public static final int roaming_reenable_message=0x7f0b00fa;
        /**  mobile network settings screen, title of dialog box that appears when you select the "Data roaming" check box 
         */
        public static final int roaming_reenable_title=0x7f0b00fe;
        /**  mobile network settings screen, button on dialog box that appears when you are roaming and clear the "Data roaming" check box 
         */
        public static final int roaming_turn_it_on_button=0x7f0b00fb;
        /**  mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box 
         */
        public static final int roaming_warning=0x7f0b00fc;
        /**  mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box. This is for multiuser phones [CHAR LIMIT=none] 
         */
        public static final int roaming_warning_multiuser=0x7f0b00fd;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int rssi_label=0x7f0b028a;
        /**  [CHAR LIMIT=NONE] Label of a running process that represents a removed 
         */
        public static final int running_process_item_removed_user_label=0x7f0b047f;
        /**  [CHAR LIMIT=NONE] Label of a running process that represents another user 
         */
        public static final int running_process_item_user_label=0x7f0b047e;
        /**  Descriptive text of a running process: plural process, plural service. 
         */
        public static final int running_processes_item_description_p_p=0x7f0b0483;
        /**  Descriptive text of a running process: plural process, singular service. 
         */
        public static final int running_processes_item_description_p_s=0x7f0b0482;
        /**  Descriptive text of a running process: singular process, plural service. 
         */
        public static final int running_processes_item_description_s_p=0x7f0b0481;
        /**  Descriptive text of a running process: singular process, singular service. 
         */
        public static final int running_processes_item_description_s_s=0x7f0b0480;
        /**  Title for list of services. 
         */
        public static final int runningservicedetails_processes_title=0x7f0b0487;
        /**  Title for list of services. 
         */
        public static final int runningservicedetails_services_title=0x7f0b0486;
        /**  Details about an application's running services. 
         */
        public static final int runningservicedetails_settings_title=0x7f0b0484;
        /**  Running service details, stop confirmation descriptive text. Displays when user selects selects to stop a system service. 
         */
        public static final int runningservicedetails_stop_dlg_text=0x7f0b0492;
        /**  Running service details, stop confirmation dialog title. Displays when user selects selects to stop a system service. 
         */
        public static final int runningservicedetails_stop_dlg_title=0x7f0b0491;
        /**  Services settings screen, setting option summary for the user to go to the screen to view running services  
         */
        public static final int runningservices_settings_summary=0x7f0b0474;
        /**  Services settings screen, setting option name for the user to go to the screen to view running services 
         */
        public static final int runningservices_settings_title=0x7f0b0473;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int scan_list_label=0x7f0b0292;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling application screen compatibility 
         */
        public static final int screen_compatibility_label=0x7f0b0411;
        /**  Manage applications, individual application info screen, screen, message text under screen compatibility heading 
         */
        public static final int screen_compatibility_text=0x7f0b0428;
        /**  Sound & display settings screen, setting option name to change screen timeout 
         */
        public static final int screen_timeout=0x7f0b02d0;
        /**  Sound & display settings screen, setting option summary to change screen timeout 
         */
        public static final int screen_timeout_summary=0x7f0b02d1;
        /**  Dream settings screen, button label for settings for a specific screensaver 
         */
        public static final int screensaver_settings_button=0x7f0b02dd;
        /**  Dream settings screen, caption for when dreams are disabled 
         */
        public static final int screensaver_settings_disabled_prompt=0x7f0b02da;
        /**  Dream settings screen, button label to start dreaming 
         */
        public static final int screensaver_settings_dream_start=0x7f0b02dc;
        /**  Display settings screen, summary fragment for screen saver options, activated when docked  
         */
        public static final int screensaver_settings_summary_dock=0x7f0b02d8;
        /**  Display settings screen, summary fragment for screen saver options, activated when docked or asleep and charging 
         */
        public static final int screensaver_settings_summary_either_long=0x7f0b02d5;
        /**  Dream settings screen, dialog option, activated when docked or asleep and charging 
         */
        public static final int screensaver_settings_summary_either_short=0x7f0b02d6;
        /**  Display settings screen, summary for screen saver options, screen saver is turned off 
         */
        public static final int screensaver_settings_summary_off=0x7f0b02d9;
        /**  Display settings screen, summary fragment for screen saver options, activated when asleep and charging 
         */
        public static final int screensaver_settings_summary_sleep=0x7f0b02d7;
        /**  Display settings screen, trigger for screen saver options 
         */
        public static final int screensaver_settings_title=0x7f0b02d4;
        /**  Dream settings screen, action label, when to dream 
         */
        public static final int screensaver_settings_when_to_dream=0x7f0b02db;
        /**  The title of the activity to adjust SD card settings
         */
        public static final int sd_card_settings_label=0x7f0b00ed;
        /**  [CHAR LIMIT=15] Manage applications, label for chart showing SD card storage use. 
         */
        public static final int sd_card_storage=0x7f0b0440;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   
         */
        public static final int sd_eject=0x7f0b032c;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   
         */
        public static final int sd_eject_summary=0x7f0b032d;
        /**  SD card eject progress text   
         */
        public static final int sd_ejecting_summary=0x7f0b033c;
        /**  SD card eject progress title   
         */
        public static final int sd_ejecting_title=0x7f0b033b;
        /**  SD card & phone storage settings item title that will result in the phone formatting the SD card.   [CHAR LIMIT=25] 
         */
        public static final int sd_format=0x7f0b0331;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.   [CHAR LIMIT=80] 
         */
        public static final int sd_format_summary=0x7f0b0332;
        /**  SD card & phone storage settings item summary that is displayed when no SD card is inserted 
         */
        public static final int sd_insert_summary=0x7f0b032e;
        /**  SD card & phone storage settings screen heading. This is displayed above items that pertain to the SD card 
         */
        public static final int sd_memory=0x7f0b0320;
        /**  SD card & phone storage settings item title that will result in the phone mounting the SD card. 
         */
        public static final int sd_mount=0x7f0b032f;
        /**  Subtext for Mount SD Card in Storage settings. User should never see this since we use automount. 
         */
        public static final int sd_mount_summary=0x7f0b0330;
        /**  Instructions after the user changes the mass storage settings 
         */
        public static final int sdcard_changes_instructions=0x7f0b00d9;
        /**  Used for diagnostic info screens, precise translation isn't needed. Formats the SD card in the phone, meaning it will be erased and reformatted 
         */
        public static final int sdcard_format=0x7f0b0033;
        /**  Title for a notification shown. 
         */
        public static final int sdcard_setting=0x7f0b0039;
        /**  Th label for the available (free) sapce on the SD card 
         */
        public static final int sdcard_settings_available_bytes_label=0x7f0b00dd;
        /**  Error message when the SD card was removed without properly unmounting 
         */
        public static final int sdcard_settings_bad_removal_status=0x7f0b00e0;
        /**  Message when the SD card is being used by the computer as mass storage 
         */
        public static final int sdcard_settings_mass_storage_status=0x7f0b00de;
        /**  Message when there is no SD card present 
         */
        public static final int sdcard_settings_not_present_status=0x7f0b00dc;
        /**  Message when the SD card is mounted as read only 
         */
        public static final int sdcard_settings_read_only_status=0x7f0b00e3;
        /**  Message when it is scanning the SD card for new files 
         */
        public static final int sdcard_settings_scanning_status=0x7f0b00e2;
        /**  Enable USB mass storage mode checkbox title 
         */
        public static final int sdcard_settings_screen_mass_storage_text=0x7f0b00da;
        /**  The label for total bytes on SD card 
         */
        public static final int sdcard_settings_total_bytes_label=0x7f0b00db;
        /**  Message when it is safe to remove the SD card 
         */
        public static final int sdcard_settings_unmounted_status=0x7f0b00df;
        /**  Label for used bytes on the SD card 
         */
        public static final int sdcard_settings_used_bytes_label=0x7f0b00e1;
        /**  Used for diagnostic info screens, precise translation isn't needed. Unmounts the SD card from the phone, meaning it will become available for an attached computer  
         */
        public static final int sdcard_unmount=0x7f0b0032;
        /**  Main Settings screen, setting option name to go into search settings 
         */
        public static final int search_settings=0x7f0b02c8;
        /**  Main Settings screen, setting option summary to go into search settings 
         */
        public static final int search_settings_summary=0x7f0b02c9;
        /**  Summary for settings checkbox to disable widgets when the setting has been disabled by an installed device admin [CHAR LIMIT=50] 
         */
        public static final int security_enable_widgets_disabled_summary=0x7f0b011b;
        /**  Text shown for title of settings checkbox to enable widgets [CHAR LIMIT=20]
         */
        public static final int security_enable_widgets_title=0x7f0b011a;
        /**  In the security screen, the header title for settings related to  Passwords
         */
        public static final int security_passwords_title=0x7f0b0126;
        /**  Manage applications, individual application info screen, text that appears under the "Permissions" heading after the app has tried to send to a premium SMS. [CHAR LIMIT=50] 
         */
        public static final int security_settings_billing_desc=0x7f0b0453;
        /**  Manage applications, individual application info screen, text that appears under the "Permissions" heading. This describes the permissions that the application has. 
         */
        public static final int security_settings_desc=0x7f0b044d;
        /**  [CHAR_LIMIT=NONE] Manage applications, individual application info screen, text that appears under the "Permissions" heading.
         This describes the permissions that the application has.  It is used when multiple packages are contributing
         to the permissions and need to be listed here. 
         */
        public static final int security_settings_desc_multi=0x7f0b044e;
        /**  Manage applications, text for permission to send to premium SMS short codes. [CHAR LIMIT=40] 
         */
        public static final int security_settings_premium_sms_desc=0x7f0b0454;
        /**  Main Settings screen setting option summary text for the item tot ake you to the security and location screen 
         */
        public static final int security_settings_summary=0x7f0b0124;
        /**  Main Settings screen setting option title for the item to take you to the security screen 
         */
        public static final int security_settings_title=0x7f0b0123;
        /**   action to select all [CHAR LIMIT=30] 
         */
        public static final int select_all=0x7f0b069b;
        /**  UI debug setting: title for app picker dialog [CHAR LIMIT=50] 
         */
        public static final int select_application=0x7f0b06a2;
        /**  Label for screen showing to select device policy 
         */
        public static final int select_device_admin_msg=0x7f0b0641;
        /**  Runtime selection dialog title, used for debug purposes only. [CHAR LIMIT=25] 
         */
        public static final int select_runtime_dialog_title=0x7f0b04f0;
        /**  Runtime selection title, used for debug purposes only. [CHAR LIMIT=25] 
         */
        public static final int select_runtime_title=0x7f0b04ef;
        /**  Message of dialog confirming that user wants to restart their device with a new runtime 
         */
        public static final int select_runtime_warning_message=0x7f0b04f1;
        /**  About phone screen,  setting option name
         */
        public static final int selinux_status=0x7f0b0302;
        /**  These statuses are displayed when a device was built with SE Android supoprt.
    These are displayed by the settings app in the about section. 
         */
        public static final int selinux_status_disabled=0x7f0b0744;
        public static final int selinux_status_enforcing=0x7f0b0746;
        public static final int selinux_status_permissive=0x7f0b0745;
        /**  [CHAR LIMIT=10] Running services, summary of background processes 
         */
        public static final int service_background_processes=0x7f0b047a;
        /**  Running services, description for a service in the started state 
         */
        public static final int service_client_name=0x7f0b0479;
        /**  [CHAR LIMIT=10] Running services, summary of foreground processes 
         */
        public static final int service_foreground_processes=0x7f0b047b;
        /**  Running service details, manage a service that is running for some other reason. 
         */
        public static final int service_manage=0x7f0b0489;
        /**  Running service details, default description for services that are managed. 
         */
        public static final int service_manage_description=0x7f0b048d;
        /**  Text to label a process entry with the process name. 
         */
        public static final int service_process_name=0x7f0b047d;
        /**  Label for a service item when it is restarting 
         */
        public static final int service_restarting=0x7f0b0475;
        /**  Running services, description for a service in the started state 
         */
        public static final int service_started_by_app=0x7f0b0478;
        /**  Running service details, stop a service that has started itself. 
         */
        public static final int service_stop=0x7f0b0488;
        /**  Running service details, default description for services that are started. 
         */
        public static final int service_stop_description=0x7f0b048a;
        /**  [CHAR LIMIT=NONE] Subtitle for process stats services list 
         */
        public static final int services_subtitle=0x7f0b05bd;
        /**  Data synchronization settings screen, setting option name 
         */
        public static final int settings_backup=0x7f0b067c;
        /**  Data synchronization settings screen, setting option summary text when check box is selected 
         */
        public static final int settings_backup_summary=0x7f0b067d;
        /**  Accessibility settings: button for lauching settings for an accessibility service 
         */
        public static final int settings_button=0x7f0b054f;
        /**  Title of the Settings activity shown within the application itself. 
         */
        public static final int settings_label=0x7f0b00f0;
        /**  Title of the Settings activity shown in the Launcher. [CHAR LIMIT=20] 
         */
        public static final int settings_label_launcher=0x7f0b00f1;
        /**  About phone settings screen, Open source license dialog title until license is fully loaded 
         */
        public static final int settings_license_activity_loading=0x7f0b03d2;
        /**  About phone settings, Legal information setting option name and title of dialog box holding license info 
         */
        public static final int settings_license_activity_title=0x7f0b03d0;
        /**  About phone settings screen, Open source license dialog message when licenses cannot be loaded 
         */
        public static final int settings_license_activity_unavailable=0x7f0b03d1;
        /**  About phone settings screen, Safety Legal dialog title until the link is fully loaded 
         */
        public static final int settings_safetylegal_activity_loading=0x7f0b03d6;
        /**  About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info 
         */
        public static final int settings_safetylegal_activity_title=0x7f0b03d4;
        /**  About phone settings screen, Safety legal dialog message when data network is not connected 
         */
        public static final int settings_safetylegal_activity_unreachable=0x7f0b03d5;
        /**  About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info 
         */
        public static final int settings_safetylegal_title=0x7f0b03d3;
        /**  Label for option to select a settings panel as a shortcut 
         */
        public static final int settings_shortcut=0x7f0b00f2;
        /**  UI debug setting: show all ANRs? [CHAR LIMIT=25] 
         */
        public static final int show_all_anrs=0x7f0b06ce;
        /**  UI debug setting: show all ANRs summary [CHAR LIMIT=50] 
         */
        public static final int show_all_anrs_summary=0x7f0b06cf;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Show background cached processes. 
         */
        public static final int show_background_processes=0x7f0b042f;
        /**  UI debug setting: show how CPU is being used? [CHAR LIMIT=25] 
         */
        public static final int show_cpu_usage=0x7f0b06be;
        /**  UI debug setting: show cpu usage summary [CHAR LIMIT=50] 
         */
        public static final int show_cpu_usage_summary=0x7f0b06bf;
        /**  [CHAR LIMIT=NONE] Device Info screen. Okay we get it, stop pressing, you already have it on 
         */
        public static final int show_dev_already=0x7f0b000d;
        /**  [CHAR LIMIT=NONE] Device Info screen. Confirmation that developer settings are enabled 
         */
        public static final int show_dev_on=0x7f0b000c;
        /**  UI debug setting: show when hardware layers get updated [CHAR LIMIT=25] 
         */
        public static final int show_hw_layers_updates=0x7f0b06b4;
        /**  UI debug setting: show hardware layers updates summary [CHAR LIMIT=50] 
         */
        public static final int show_hw_layers_updates_summary=0x7f0b06b5;
        /**  UI debug setting: show where window updates happen with GPU rendering? [CHAR LIMIT=25] 
         */
        public static final int show_hw_screen_updates=0x7f0b06b2;
        /**  UI debug setting: show GPU rendering screen updates summary [CHAR LIMIT=50] 
         */
        public static final int show_hw_screen_updates_summary=0x7f0b06b3;
        /**  UI debug setting: show when non-rectangular clip operations are used [CHAR LIMIT=50] 
         */
        public static final int show_non_rect_clip=0x7f0b06c4;
        /**  Text shown next to checkbox for showing owner info on LockScreen [CHAR LIMIT=50]
         */
        public static final int show_owner_info_on_lockscreen_label=0x7f0b0118;
        /**  On Security & location settings screen, setting check box name. Title of the checkbox to set whether password edit fields will show the most recent character typed and then hide it, or just hide it right away.  By hide, I mean mask it out. 
         */
        public static final int show_password=0x7f0b04a0;
        /**  Text shown next to checkbox for showing profile info on LockScreen [CHAR LIMIT=50]
         */
        public static final int show_profile_info_on_lockscreen_label=0x7f0b0120;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Show running services. 
         */
        public static final int show_running_services=0x7f0b042e;
        /**  UI debug setting: show where surface updates happen? [CHAR LIMIT=25] 
         */
        public static final int show_screen_updates=0x7f0b06b0;
        /**  UI debug setting: show surface updates summary [CHAR LIMIT=50] 
         */
        public static final int show_screen_updates_summary=0x7f0b06b1;
        /**  UI debug setting: show touches? [CHAR LIMIT=25] 
         */
        public static final int show_touches=0x7f0b06ae;
        /**  UI debug setting: show touches location summary [CHAR LIMIT=50] 
         */
        public static final int show_touches_summary=0x7f0b06af;
        /**  Text shown next to checkbox for showing user info on LockScreen [CHAR LIMIT=50]
         */
        public static final int show_user_info_on_lockscreen_label=0x7f0b011e;
        /**  SIM card lock settings screen, SIM PIN dialog message when wrong PIN is entered 
         */
        public static final int sim_bad_pin=0x7f0b02f0;
        /**  SIM card lock settings screen, toast after not entering correct SIM PIN 
         */
        public static final int sim_change_failed=0x7f0b02f2;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_change_pin=0x7f0b02ef;
        /**  SIM card lock settings screen, SIM PIN dialog message when the entered PIN is correct
         */
        public static final int sim_change_succeeded=0x7f0b02f3;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_disable_sim_lock=0x7f0b02eb;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_enable_sim_lock=0x7f0b02ea;
        /**  SIM card lock settings screen, SIM PIN dialog button labels: 
         */
        public static final int sim_enter_cancel=0x7f0b02f6;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_enter_new=0x7f0b02ed;
        /**  SIM card lock settings screen, SIM PIN dialog button labels: 
         */
        public static final int sim_enter_ok=0x7f0b02f5;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_enter_old=0x7f0b02ec;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_enter_pin=0x7f0b02e9;
        /**  SIM card lock settings screen, toast after not entering correct SIM PIN 
         */
        public static final int sim_lock_failed=0x7f0b02f4;
        /**  SIM card lock settings screen, setting option summary text when SIM lock check box is clear 
         */
        public static final int sim_lock_off=0x7f0b02e7;
        /**  SIM card lock settings screen, setting option summary text when SIM lock check box is selected 
         */
        public static final int sim_lock_on=0x7f0b02e6;
        /**  SIM lock settings title 
         */
        public static final int sim_lock_settings=0x7f0b02e2;
        /**  Security & location settings screen, setting option name 
         */
        public static final int sim_lock_settings_category=0x7f0b02e3;
        /**  Security & location settings screen, section heading for settings related to sim card locking 
         */
        public static final int sim_lock_settings_title=0x7f0b02e4;
        /**  SIM card lock settings screen, setting option name to change the SIM PIN 
         */
        public static final int sim_pin_change=0x7f0b02e8;
        /**  SIM card lock settings screen, setting check box label 
         */
        public static final int sim_pin_toggle=0x7f0b02e5;
        /**  SIM card lock settings screen, SIM PIN dialog message when PINs don't match 
         */
        public static final int sim_pins_dont_match=0x7f0b02f1;
        public static final int sim_reenter_new=0x7f0b02ee;
        /**  SetupWizard strings used by DateTimeSettingsSetupWizard.  The button label for going to the next screen without storing the setting. [CHAR LIMIT=5] 
         */
        public static final int skip_label=0x7f0b00e4;
        /**  choice for the font size spinner 
         */
        public static final int small_font=0x7f0b0034;
        /**  SMS Application [CHAR LIMIT=35]
         */
        public static final int sms_application_title=0x7f0b03a3;
        public static final int sms_change_default_dialog_text=0x7f0b03a5;
        public static final int sms_change_default_dialog_title=0x7f0b03a4;
        public static final int sms_change_default_no_previous_dialog_text=0x7f0b03a6;
        /**  Phone SMS over IMS off. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int sms_over_ims_off=0x7f0b0015;
        /**  Phone SMS over IMS on. Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int sms_over_ims_on=0x7f0b0014;
        /**  [CHAR LIMIT=25] Manage applications screen, menu item.  Sorts all of the apps in the list alphabetically. 
         */
        public static final int sort_order_alpha=0x7f0b042c;
        /**  Manage applications screen, menu item. Sorts all of the apps in the list based on their file size.  This is used to uninstall when space is getting low. 
         */
        public static final int sort_order_size=0x7f0b042d;
        /**  Category title for phone call's ringtone and vibration settings in the Sound Setting.
         [CHAR LIMIT=40] 
         */
        public static final int sound_category_call_ringtone_vibrate_title=0x7f0b064b;
        public static final int sound_category_notification_title=0x7f0b064a;
        public static final int sound_category_sound_title=0x7f0b0649;
        /**  Category title for system-wide notification and feedback settings in the Sound Setting.
         [CHAR LIMIT=40] 
         */
        public static final int sound_category_system_title=0x7f0b064c;
        /**  Sound settings screen, setting check box label 
         */
        public static final int sound_effects_enable_title=0x7f0b02ae;
        /**  Sound settings screen heading 
         */
        public static final int sound_settings=0x7f0b029c;
        /**  Image button description for spell checker language. 
         */
        public static final int spellchecker_language=0x7f0b04a4;
        /**  Image button description for spell checker quick settings. 
         */
        public static final int spellchecker_quick_settings=0x7f0b04a3;
        /**  Warning message about security implications of enabling a spell checker, displayed as a dialog
         message when the user selects to enable a spell checker. 
         */
        public static final int spellchecker_security_warning=0x7f0b04a2;
        /**   Title for spell checker settings 
         */
        public static final int spellcheckers_settings_title=0x7f0b073c;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int ssid_label=0x7f0b028c;
        /**  Title of Dialog warning users of SSL monitoring. [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_dialog_title=0x7f0b0749;
        /**  Text of message to show to users whose administrator has installed a SSL CA Cert.  [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_info_message=0x7f0b074a;
        /**  Label on button that will take the user to the Trusted Credentials settings page.  [CHAR LIMIT=NONE]
         */
        public static final int ssl_ca_cert_settings_button=0x7f0b074c;
        /**  Shows up when there is a user SSL CA Cert installed on the
         device.  Indicates to the user that SSL traffic can be intercepted.  [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_warning=0x7f0b0747;
        /**  Text of warning to show to users that have a SSL CA Cert installed.  [CHAR LIMIT=NONE] 
         */
        public static final int ssl_ca_cert_warning_message=0x7f0b074b;
        /**  About phone, status item title.  How much time the device has had its main CPU awake. 
         */
        public static final int status_awake_time=0x7f0b031e;
        /**  About phone, status item title.  The bluetooth adapter's hardware address
         */
        public static final int status_bt_address=0x7f0b031a;
        /**  About phone, status item title. The status of data access.  For example, the value may be "Connected" 
         */
        public static final int status_data_state=0x7f0b0314;
        /**  About phone, status item title.  The ICCID of the current LTE device. [CHAR LIMIT=30] 
         */
        public static final int status_icc_id=0x7f0b0311;
        /**  Do not translate. About phone, status item title 
         */
        public static final int status_imei=0x7f0b030a;
        /**  Do not translate. About phone, status item title 
         */
        public static final int status_imei_sv=0x7f0b030b;
        /**  About phone, status item title for the latest area info cell broadcast received (Brazil only). 
         */
        public static final int status_latest_area_info=0x7f0b0313;
        /**  About phone, status item title.  The phone MEID number of the current LTE/CDMA device. [CHAR LIMIT=30] 
         */
        public static final int status_meid_number=0x7f0b0310;
        /**  About phone, status item title.  The phone MIN number of the current device.
         */
        public static final int status_min_number=0x7f0b030d;
        /**  About phone, status item title.  The phone MSID number of the current device.
         */
        public static final int status_msid_number=0x7f0b030e;
        /**  About phone, status item title for the type of data phone network we're connected to, for example 3G or Edge or GPRS 
         */
        public static final int status_network_type=0x7f0b0312;
        /**  About phone, status item title.  The phone number of the current device [CHAR LIMIT=30] 
         */
        public static final int status_number=0x7f0b030c;
        /**  About phone, status item title. The cell carrier that the user is connected to.  
         */
        public static final int status_operator=0x7f0b0318;
        /**  About phone, status item title.  The phone PRL Version of the current device.
         */
        public static final int status_prl_version=0x7f0b030f;
        /**  About phone, status item title, The status for roaming.  For example, the value might be "Not roaming" 
         */
        public static final int status_roaming=0x7f0b0317;
        /**  About phone, status item title.  The hardware serial number. [CHAR LIMIT=30]
         */
        public static final int status_serial_number=0x7f0b031b;
        /**  About phone, status item title. The status of whether we have service.  for example, the value may be "In service" 
         */
        public static final int status_service_state=0x7f0b0315;
        /**  About phone, status item title. The  current cell tower signal strength 
         */
        public static final int status_signal_strength=0x7f0b0316;
        /**  About phone, status item value if the actual value is not available. 
         */
        public static final int status_unavailable=0x7f0b031c;
        /**  About phone, status item title.  How long the device has been running since its last reboot. 
         */
        public static final int status_up_time=0x7f0b031d;
        /**  About phone, status item title.  The MAC address of the Wi-Fi network adapter. 
         */
        public static final int status_wifi_mac_address=0x7f0b0319;
        public static final int status_wimax_mac_address=0x7f0b0694;
        /**  Manage applications, individual application info screen, section heading for stuff relating to an app's storage settings. 
         */
        public static final int storage_label=0x7f0b040e;
        /**  Settings item summary when storage is running low [CHAR LIMIT=NONE] 
         */
        public static final int storage_low_summary=0x7f0b033e;
        /**  Settings item title when storage is running low [CHAR LIMIT=32] 
         */
        public static final int storage_low_title=0x7f0b033d;
        /**  Storage setting.  Menu option for USB transfer settings [CHAR LIMIT=30]
         */
        public static final int storage_menu_usb=0x7f0b033f;
        /**  Section header above list of other users storage [CHAR LIMIT=32] 
         */
        public static final int storage_other_users=0x7f0b0347;
        /**  Main settings screen item's title to go into the storage settings screen [CHAR LIMIT=25] 
         */
        public static final int storage_settings=0x7f0b0307;
        /**  [CHAR LIMIT=100] Main settings screen item's summary for the SD card and storage settings 
         */
        public static final int storage_settings_summary=0x7f0b0309;
        /**  Storage settings screen title 
         */
        public static final int storage_settings_title=0x7f0b0308;
        /**  Storage setting.  Title for USB transfer settings [CHAR LIMIT=30]
         */
        public static final int storage_title_usb=0x7f0b0340;
        /**  Services settings screen, setting option summary for the user to go to the screen to app storage use 
         */
        public static final int storageuse_settings_summary=0x7f0b0472;
        /**  [CHAR LIMIT=25] Services settings screen, setting option name for the user to go to the screen to view app storage use 
         */
        public static final int storageuse_settings_title=0x7f0b0471;
        /**  UI debug setting: always enable strict mode? [CHAR LIMIT=25] 
         */
        public static final int strict_mode=0x7f0b06aa;
        /**  UI debug setting: show strict mode summary [CHAR LIMIT=50] 
         */
        public static final int strict_mode_summary=0x7f0b06ab;
        /**  mobile network settings screen, setting option summary text 
         */
        public static final int sum_carrier_select=0x7f0b0100;
        /**  Sound & display settings screen, setting option summary displaying the currently selected font size 
         */
        public static final int summary_font_size=0x7f0b02e0;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
        Label on Wifi Status screen
         */
        public static final int supplicant_state_label=0x7f0b0289;
        /**  Animation description for the sync active icon. 
         */
        public static final int sync_active=0x7f0b066e;
        /**  Title for a checkbox that enables data synchronization in the account and sync screen [CHAR LIMIT=35] 
         */
        public static final int sync_automatically=0x7f0b0676;
        /**  Data synchronization settings screen, checkbox setting option name. Controls whether Calendar shoudl be synced. 
         */
        public static final int sync_calendar=0x7f0b0682;
        /**  Data synchronization settings screen, checkbox setting option name 
         */
        public static final int sync_contacts=0x7f0b0683;
        /**  Sync status shown when sync is disabled [CHAR LIMIT=25] 
         */
        public static final int sync_disabled=0x7f0b0678;
        /**  Sync status shown when sync is enabled [CHAR LIMIT=25] 
         */
        public static final int sync_enabled=0x7f0b0677;
        /**  Sync status shown when last sync resulted in an error [CHAR LIMIT=25] 
         */
        public static final int sync_error=0x7f0b0679;
        /**  Image description for the sync failed icon. 
         */
        public static final int sync_failed=0x7f0b066d;
        /**  Data synchronization settings screen, checkbox setting option name. Controls whether Gmail should be synced.  Should use "Gmail" to refer to this app.
         */
        public static final int sync_gmail=0x7f0b0681;
        /**  Sync status shown when sync is disabled [CHAR LIMIT=30] 
         */
        public static final int sync_in_progress=0x7f0b067b;
        /**  Message when sync is currently failing [CHAR LIMIT=100] 
         */
        public static final int sync_is_failing=0x7f0b0670;
        /**  Formatter in AccountSyncSettings for each application we wish to synchronize, e.g. "Sync Calendar" 
         */
        public static final int sync_item_title=0x7f0b0690;
        /**  Data synchronization settings screen, menu option 
         */
        public static final int sync_menu_sync_cancel=0x7f0b067f;
        /**  Data synchronization settings screen, menu option 
         */
        public static final int sync_menu_sync_now=0x7f0b067e;
        /**  Data synchronization settings screen, summary of a sync provider (for example, Gmail) when autosync is off and the user wants to do a one-time sync. 
         */
        public static final int sync_one_time_sync=0x7f0b0680;
        /**  Message introducing the user to Google Sync. 
         */
        public static final int sync_plug=0x7f0b0684;
        public static final int system_package=0x7f0b0461;
        /**  About phone screen, list item summary.  Takes the user to the screen for seeing and installing system updates. 
         */
        public static final int system_update_settings_list_item_summary=0x7f0b02fb;
        /**  About phone screen, list item title.  Takes the user to the screen for seeing and installing system updates. 
         */
        public static final int system_update_settings_list_item_title=0x7f0b02fa;
        /**  About phone settings screen, setting option name to see terms and conditions 
         */
        public static final int terms_title=0x7f0b03cf;
        /**  This is for diagnostics screen. The title of a screen with various items realted to launching screens that will giev the user info. For example, it contains "Phone information" and "Battery information" 
         */
        public static final int testing=0x7f0b04c3;
        /**  In the Testing screen. The item title of the activity that shows a bunch of battery-related information.  
         */
        public static final int testing_battery_info=0x7f0b04c5;
        /**  In the Testing screen.  The item title of the activity that shows a bunch of phone-related information.  
         */
        public static final int testing_phone_info=0x7f0b04c4;
        /**  Do not translate. In the Testing screen. The item title of the activity that shows a bunch of SIM-related operations.  
         */
        public static final int testing_sim_toolkit=0x7f0b04c6;
        /**  In the Testing screen. The item title of the activity that shows usage statistics.  
         */
        public static final int testing_usage_stats=0x7f0b0510;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Wi-Fi Testing on the diagnostic screen
         */
        public static final int testing_wifi_info=0x7f0b027e;
        /**  Tethering controls, item title to go into the tethering settings when USB, Bluetooth and Wifi tethering are available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_all=0x7f0b0390;
        /**  Tethering controls, item title to go into the tethering settings when only Bluetooth tethering is available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_bluetooth=0x7f0b038e;
        /**  Tethering controls, item title to go into the tethering settings 
 Tethering controls, item title to go into the tethering settings when only USB tethering is available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_usb=0x7f0b038c;
        /**  Tethering controls, item title to go into the tethering settings when USB and Bluetooth tethering are available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_usb_bluetooth=0x7f0b038f;
        /**  Tethering controls, item title to go into the tethering settings when only Wifi tethering is available [CHAR LIMIT=25]
         */
        public static final int tether_settings_title_wifi=0x7f0b038d;
        /**  Tethering help button - calls up a web view with general tethering info 
         */
        public static final int tethering_help_button_text=0x7f0b03a0;
        /**  Title string shown above TimePicker, letting a user select system time
         [CHAR LIMIT=20] 
         */
        public static final int time_picker_title=0x7f0b0112;
        /**  Do not translate. This is a stub which will be removed soon. 
         */
        public static final int time_zone_auto_stub=0x7f0b0669;
        /**  [CHAR LIMIT=30] Sound & display settings screen, setting option name to change font size 
         */
        public static final int title_font_size=0x7f0b02df;
        /**  Manage applications, individual application info screen,label under Storage heading.  The total storage space taken up by this app. 
         */
        public static final int total_size_label=0x7f0b0418;
        /**  UI debug setting: profile time taken by hardware acceleration to render apps [CHAR LIMIT=25] 
         */
        public static final int track_frame_time=0x7f0b06c5;
        /**  UI debug setting: scaling factor for transition animations [CHAR LIMIT=25] 
         */
        public static final int transition_animation_scale_title=0x7f0b06c7;
        /**  Title of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=30] 
         */
        public static final int trusted_credentials=0x7f0b0617;
        /**  Alert dialog confirmation when disabling a system CA certificate. 
         */
        public static final int trusted_credentials_disable_confirmation=0x7f0b073a;
        /**  Button label for disabling a system CA certificate. 
         */
        public static final int trusted_credentials_disable_label=0x7f0b0736;
        /**  Alert dialog confirmation when enabling a system CA certificate. 
         */
        public static final int trusted_credentials_enable_confirmation=0x7f0b0739;
        /**  Button label for enabling a system CA certificate. 
         */
        public static final int trusted_credentials_enable_label=0x7f0b0737;
        /**  Alert dialog confirmation when removing a user CA certificate. 
         */
        public static final int trusted_credentials_remove_confirmation=0x7f0b073b;
        /**  Button label for removing a user CA certificate. 
         */
        public static final int trusted_credentials_remove_label=0x7f0b0738;
        /**  Summary of preference to display trusted credentials (aka CA certificates) [CHAR LIMIT=NONE] 
         */
        public static final int trusted_credentials_summary=0x7f0b0618;
        /**  Tab label for built-in system CA certificates. 
         */
        public static final int trusted_credentials_system_tab=0x7f0b0734;
        /**  Tab label for user added CA certificates. 
         */
        public static final int trusted_credentials_user_tab=0x7f0b0735;
        /**  This is displayed when the password is entered incorrectly 
         */
        public static final int try_again=0x7f0b0696;
        /**  On main TTS Settings screen, summary for when required speech synthesis data alrady installed on SD card 
         */
        public static final int tts_data_installed_summary=0x7f0b05e3;
        /**  On main TTS Settings screen, summary for default language for synthesized voice 
         */
        public static final int tts_default_lang_summary=0x7f0b05de;
        /**  On main TTS Settings screen, in default settings section, setting default language for synthesized voice 
         */
        public static final int tts_default_lang_title=0x7f0b05dc;
        /**  On main TTS Settings screen, summary for default pitch for synthesized voice 
         */
        public static final int tts_default_pitch_summary=0x7f0b05db;
        /**  On main TTS Settings screen, in default settings section, setting default pitch for synthesized voice 
         */
        public static final int tts_default_pitch_title=0x7f0b05da;
        /**  On main TTS Settings screen, summary for default speech rate for synthesized voice 
         */
        public static final int tts_default_rate_summary=0x7f0b05d9;
        /**  On main TTS Settings screen, in default settings section, setting default speech rate for synthesized voice 
         */
        public static final int tts_default_rate_title=0x7f0b05d8;
        /**  Text spoken by the TTS engine as an example if the engine doesn't provide sample text [CHAR LIMIT=100] 
         */
        public static final int tts_default_sample_string=0x7f0b05ea;
        /**  On main TTS Settings screen, section header for default TTS settings 
         */
        public static final int tts_default_settings_section=0x7f0b05d5;
        /**  On main TTS Settings screen, summary for default synthesis engine for synthesized voice 
         */
        public static final int tts_default_synth_summary=0x7f0b05d7;
        /**  On main TTS Settings screen, in default settings section, setting default synthesis engine for synthesized voice 
         */
        public static final int tts_default_synth_title=0x7f0b05d6;
        /**  Error screen when a selected TTS engine can't run because it's missing components 
         */
        public static final int tts_engine_error=0x7f0b05e5;
        /**  Button text for error screen when a selected TTS engine can't run because it's missing components 
         */
        public static final int tts_engine_error_config=0x7f0b05e6;
        /**  Button text for error screen when a selected TTS engine can't run because it's missing components 
         */
        public static final int tts_engine_error_reselect=0x7f0b05e7;
        /**  On main TTS Settings screen, text preceded by the TTS engine name to indicate the engine cannot be used by the user 
         */
        public static final int tts_engine_name_is_disabled_summary=0x7f0b05f3;
        /**  On main TTS Settings screen, text preceded by the TTS engine name to indicate the engine can be used by the user 
         */
        public static final int tts_engine_name_is_enabled_summary=0x7f0b05f2;
        /**  On main TTS Settings screen, text preceded by the TTS engine name, clicking this button will launch the engine settings 
         */
        public static final int tts_engine_name_settings=0x7f0b05f1;
        /**  Warning message about required internet conectivity for TTS synthesis, displayed as a dialog
         message when the user selects to play an example for network only locale and there's no internet connectivity. 
         */
        public static final int tts_engine_network_required=0x7f0b05e9;
        /**  [CHAR LIMIT=50] The text for the settings section that users to set a
         preferred text to speech engine 
         */
        public static final int tts_engine_preference_section_title=0x7f0b05fe;
        /**  Warning message about security implications of enabling a TTS engine, displayed as a dialog
         message when the user selects to enable an engine. 
         */
        public static final int tts_engine_security_warning=0x7f0b05e8;
        /**  [CHAR LIMIT=150] Text for screen readers / accessibility programs for
         the image that launches the TTS engine settings when clicked. 
         */
        public static final int tts_engine_settings_button=0x7f0b05fd;
        /**  On the main TTS settings screen, text for a divider under which
         the engine specific settings and the "engine install data" option
         are listed [CHAR LIMIT=30]
         */
        public static final int tts_engine_settings_section=0x7f0b05f4;
        /**  Title for a preference in the main TTS settings screen, which
         launches the settings screen for a given TTS engine when clicked
         [CHAR LIMIT=30]
         */
        public static final int tts_engine_settings_title=0x7f0b05f5;
        /**  On main TTS Settings screen, text for divider under which all TTS engines are listed 
         */
        public static final int tts_engines_section=0x7f0b05f0;
        /**  [CHAR LIMIT=50] Title of the settings section that displays general preferences
         that are applicable to all engines, such as the speech rate 
         */
        public static final int tts_general_section_title=0x7f0b05ff;
        /**  On main TTS Settings screen, summary for click to install required speech synthesis data 
         */
        public static final int tts_install_data_summary=0x7f0b05e2;
        /**  On main TTS Settings screen, click to install required speech synthesis data 
         */
        public static final int tts_install_data_title=0x7f0b05e1;
        /**  On main TTS Settings screen, language summary if it can't default to system language [CHAR LIMIT=50] 
         */
        public static final int tts_lang_not_selected=0x7f0b05dd;
        /**  [CHAR LIMIT=30] Notification message that appears after the user has installed a new TTS engine,
         to warn the user that this engine cannot be used before the checkbox for that engine
         in TTS settings is checked. 
         */
        public static final int tts_notif_engine_install_message=0x7f0b05fc;
        /**  [CHAR LIMIT=33] Notification title that appears when the installation of a new TTS engine completed 
         */
        public static final int tts_notif_engine_install_title=0x7f0b05fb;
        /**  On main TTS Settings screen, summary for triggering playback of an example of speech synthesis 
         */
        public static final int tts_play_example_summary=0x7f0b05e0;
        /**  On main TTS Settings screen, triggers playback of an example of speech synthesis 
         */
        public static final int tts_play_example_title=0x7f0b05df;
        /**  Name of the TTS package as listed by the package manager. 
         */
        public static final int tts_settings=0x7f0b05d1;
        /**  Text spoken by the TTS engine when TTS settings (other than language) have been changed 
         */
        public static final int tts_settings_changed_demo=0x7f0b05e4;
        /**  TTS option item name in the main settings screen 
         */
        public static final int tts_settings_title=0x7f0b05d2;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
	 tts engine is queried for status [CHAR LIMIT=150] 
         */
        public static final int tts_status_checking=0x7f0b05ef;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         selected language is not supported by the engine [CHAR LIMIT=150] 
         */
        public static final int tts_status_not_supported=0x7f0b05ee;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         selected language is fully supported by the engine [CHAR LIMIT=150]
         */
        public static final int tts_status_ok=0x7f0b05ec;
        /**  On main TTS Settings screen, current TTS engine status for the current default language,
         selected language is supported by the engine only if there's a working network connection [CHAR LIMIT=150] 
         */
        public static final int tts_status_requires_network=0x7f0b05ed;
        /**  On main TTS Settings screen, title of a field explaining current TTS engine status for
	 current default language [CHAR LIMIT=50] 
         */
        public static final int tts_status_title=0x7f0b05eb;
        /**  Phone Info screen. Button label to turn off the radio . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_off_radio=0x7f0b0013;
        /**  Phone info 
 Phone Info screen. Button label to turn on the radio . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_on_radio=0x7f0b0012;
        /**  Manage applications, individual application info screen, menu item to uninstall an application for all users. 
         */
        public static final int uninstall_all_users_text=0x7f0b041e;
        /**  Manage applications, individual application info screen, button label under Storage heading. Button to remove the application from the system. 
         */
        public static final int uninstall_text=0x7f0b041d;
        /**  Manage apps, individual app screen, substituted for the application's label when the app's label CAN NOT be determined.
         */
        public static final int unknown=0x7f0b042b;
        /**  Info explaining the backup lock which is used for facelock 
         */
        public static final int unlock_backup_info_summary=0x7f0b0140;
        /**  Title shown on security settings to allow the user to change their lockscreen password [CHAR LIMIT=22]
         */
        public static final int unlock_change_lock_password_title=0x7f0b015a;
        /**  Title shown on security settings to allow the user to change their lockscreen pattern [CHAR LIMIT=22] 
         */
        public static final int unlock_change_lock_pattern_title=0x7f0b0158;
        /**  Title shown on security settings to allow the user to change their lockscreen PIN [CHAR LIMIT=22] 
         */
        public static final int unlock_change_lock_pin_title=0x7f0b0159;
        /**  Summary shown under unlock_disable_lock_title when password is in use and can be removed [CHAR LIMIT=45]
         */
        public static final int unlock_disable_lock_password_summary=0x7f0b0157;
        /**  Summary shown under unlock_disable_lock_title when pattern is in use and can be removed [CHAR LIMIT=45] 
         */
        public static final int unlock_disable_lock_pattern_summary=0x7f0b0155;
        /**  Summary shown under unlock_disable_lock_title when PIN is in use and can be removed [CHAR LIMIT=45]
         */
        public static final int unlock_disable_lock_pin_summary=0x7f0b0156;
        /**  Title for option to turn of password/pin/pattern unlock. [CHAR LIMIT=22] 
         */
        public static final int unlock_disable_lock_title=0x7f0b0154;
        /**  Summary for preference that disables unlock security [CHAR LIMIT=45]
         */
        public static final int unlock_set_unlock_biometric_weak_summary=0x7f0b0146;
        /**  Title for preference that guides the user through a weak biometric lock [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_biometric_weak_title=0x7f0b0145;
        /**  Summary for preference that has been disabled by because of the DevicePolicyAdmin, or because device encryption is enabled, or because there are credentials in the credential storage [CHAR LIMIT=50] 
         */
        public static final int unlock_set_unlock_disabled_summary=0x7f0b014d;
        /**   Summary for PreferenceScreen to changeecurity method: None/Pattern/PIN/Password [CHAR LIMIT=45]  
         */
        public static final int unlock_set_unlock_launch_picker_change_summary=0x7f0b013e;
        /**   Title for PreferenceScreen to change security method: None/Pattern/PIN/Password [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_launch_picker_change_title=0x7f0b013d;
        /**   Summary for PreferenceScreen to changeecurity method: None/Pattern/PIN/Password [CHAR LIMIT=45]  
         */
        public static final int unlock_set_unlock_launch_picker_enable_summary=0x7f0b013f;
        /**   Title for PreferenceScreen to launch picker for security method when there is none [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_launch_picker_title=0x7f0b013c;
        /**  Summary for "Configure lockscreen" when security biometric weak is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_biometric_weak=0x7f0b0150;
        /**  Summary for "Configure lockscreen" when security is disabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_none=0x7f0b014f;
        /**  Summary for "Configure lockscreen" when lock screen is off [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_off=0x7f0b014e;
        /**  Summary for "Configure lockscreen" when security password is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_password=0x7f0b0153;
        /**  Summary for "Configure lockscreen" when security pattern is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_pattern=0x7f0b0151;
        /**  Summary for "Configure lockscreen" when security PIN is enabled [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_mode_pin=0x7f0b0152;
        /**  Summary for preference that disables unlock security [CHAR LIMIT=45]
         */
        public static final int unlock_set_unlock_none_summary=0x7f0b0144;
        /**  Title for preference that disables unlock security [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_none_title=0x7f0b0143;
        /**  Summary for preference that disables unlock security [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_off_summary=0x7f0b0142;
        /**  Title for preference that disables unlock security [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_off_title=0x7f0b0141;
        /**  Title for preference that guides the user through creating an unlock password [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_password_summary=0x7f0b014c;
        /**  Title for preference that guides the user through creating an unlock password [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_password_title=0x7f0b014b;
        /**  Summary for preference that guides the user through creating an unlock pattern [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_pattern_summary=0x7f0b0148;
        /**  Title for preference that guides the user through creating an unlock pattern [CHAR LIMIT=22]
         */
        public static final int unlock_set_unlock_pattern_title=0x7f0b0147;
        /**  Summary for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=45] 
         */
        public static final int unlock_set_unlock_pin_summary=0x7f0b014a;
        /**  Title for preference that guides the user through creating an unlock PIN (Personal Identification Number) [CHAR LIMIT=22] 
         */
        public static final int unlock_set_unlock_pin_title=0x7f0b0149;
        /**  SD card unmount informative text   [CHAR LIMIT=NONE] 
         */
        public static final int unmount_inform_text=0x7f0b033a;
        /**  Name to assign to a Network Access Point that was saved without a name 
         */
        public static final int untitled_apn=0x7f0b0648;
        /**  Application name and battery usage percentage 
         */
        public static final int usage_name_percent=0x7f0b057c;
        /**  XXX remove? Strings used for displaying usage statistics 
         */
        public static final int usage_stats_label=0x7f0b050f;
        /**  label for usage time 
         */
        public static final int usage_time_label=0x7f0b0514;
        /**  Label for Audio usage time 
         */
        public static final int usage_type_audio=0x7f0b0592;
        /**  Label for CPU usage time 
         */
        public static final int usage_type_cpu=0x7f0b0588;
        /**  Label for CPU usage in foreground 
         */
        public static final int usage_type_cpu_foreground=0x7f0b0589;
        /**  Label for mobile network data received [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_recv=0x7f0b058f;
        /**  Label for mobile network data sent [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_send=0x7f0b058e;
        /**  Label for Wi-Fi network data received [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_wifi_recv=0x7f0b0591;
        /**  Label for Wi-Fi network data sent [CHAR LIMIT=32] 
         */
        public static final int usage_type_data_wifi_send=0x7f0b0590;
        /**  Label for GPS usage time 
         */
        public static final int usage_type_gps=0x7f0b058b;
        /**  Label for time that there was no cell coverage 
         */
        public static final int usage_type_no_coverage=0x7f0b0595;
        /**  Label for time that a feature has been on 
         */
        public static final int usage_type_on_time=0x7f0b0594;
        /**  Label for Phone usage time 
         */
        public static final int usage_type_phone=0x7f0b058d;
        /**  Label for Video usage time 
         */
        public static final int usage_type_video=0x7f0b0593;
        /**  [CHAR LIMIT=25] Label for keeping device from sleeping 
         */
        public static final int usage_type_wake_lock=0x7f0b058a;
        /**  [CHAR LIMIT=25] Label for WIFI usage time 
         */
        public static final int usage_type_wifi_running=0x7f0b058c;
        /**  Storage setting.  USB connection category [CHAR LIMIT=30]
         */
        public static final int usb_connection_category=0x7f0b0341;
        /**  Storage setting.  Summary for PTP checkbox [CHAR LIMIT=NONE]
         */
        public static final int usb_label_installer_cd=0x7f0b0346;
        /**  Storage setting.  Summary for MTP checkbox [CHAR LIMIT=NONE]
         */
        public static final int usb_mtp_summary=0x7f0b0343;
        /**  Storage setting.  Title for MTP checkbox [CHAR LIMIT=30]
         */
        public static final int usb_mtp_title=0x7f0b0342;
        /**  Storage setting.  Label for installer CD [CHAR LIMIT=30]
         */
        public static final int usb_ptp_summary=0x7f0b0345;
        /**  Storage setting.  Title for PTP checkbox [CHAR LIMIT=30]
         */
        public static final int usb_ptp_title=0x7f0b0344;
        /**  USB tethered subtext - shown when USB is connected and being tethered 
         */
        public static final int usb_tethering_active_subtext=0x7f0b0394;
        /**  USB available subtext - shown when USB is connected but not currently being tethered 
         */
        public static final int usb_tethering_available_subtext=0x7f0b0393;
        public static final int usb_tethering_button_text=0x7f0b0392;
        /**  USB errored subtext - shown when USB is broken for some reason 
         */
        public static final int usb_tethering_errored_subtext=0x7f0b0397;
        /**  USB storage subtext - shown when tethering is disabled because USB storage is active 
         */
        public static final int usb_tethering_storage_active_subtext=0x7f0b0395;
        /**  USB unavailable subtext - shown when USB is not connected 
         */
        public static final int usb_tethering_unavailable_subtext=0x7f0b0396;
        /**  USB Tethering options 
         */
        public static final int usb_title=0x7f0b0391;
        /**  On main TTS Settings screen, summary for toggle used to force use of default TTS settings 
         */
        public static final int use_default_tts_settings_summary=0x7f0b05d4;
        /**  On main TTS Settings screen, title for toggle used to force use of default TTS settings 
         */
        public static final int use_default_tts_settings_title=0x7f0b05d3;
        /**  [CHAR_LIMIT=100] Security & location settings screen, setting check box summary for Google search 
         */
        public static final int use_location_summary=0x7f0b03c4;
        /**  [CHAR_LIMIT=30] Security & location settings screen, setting check box label for Google search 
         */
        public static final int use_location_title=0x7f0b03c3;
        /**  Title for settings whether or not the framework will select input methods in an IME based on the current system locale. [CHAR LIMIT=35] 
         */
        public static final int use_system_language_to_select_input_method_subtypes=0x7f0b04dd;
        /**  User account title [CHAR LIMIT=30] 
         */
        public static final int user_account_title=0x7f0b0798;
        /**  Summary for add restricted profile entry in the choice dialog [CHAR LIMIT=none] 
         */
        public static final int user_add_profile_item_summary=0x7f0b075a;
        /**  Button text for adding a restricted profile [CHAR LIMIT=25] 
         */
        public static final int user_add_profile_item_title=0x7f0b075c;
        /**  Summary for add user entry in the choice dialog [CHAR LIMIT=none] 
         */
        public static final int user_add_user_item_summary=0x7f0b0759;
        /**  Button text for adding a regular user [CHAR LIMIT=25] 
         */
        public static final int user_add_user_item_title=0x7f0b075b;
        /**  User settings add user menu [CHAR LIMIT=35] 
         */
        public static final int user_add_user_menu=0x7f0b074f;
        /**  Message for add user confirmation dialog - long version. [CHAR LIMIT=none] 
         */
        public static final int user_add_user_message_long=0x7f0b075e;
        /**  Message for add user confirmation dialog - short version. [CHAR LIMIT=none] 
         */
        public static final int user_add_user_message_short=0x7f0b075f;
        /**  Title for add user confirmation dialog [CHAR LIMIT=30] 
         */
        public static final int user_add_user_title=0x7f0b075d;
        /**  Title for add user type dialog [CHAR LIMIT=45] 
         */
        public static final int user_add_user_type_title=0x7f0b0758;
        /**  Setting label to show that a new user is being added [CHAR LIMIT=30] 
         */
        public static final int user_adding_new_user=0x7f0b0770;
        /**  Message to limited users that they cannot add accounts [CHAR LIMIT=100] 
         */
        public static final int user_cannot_add_accounts_message=0x7f0b0766;
        /**  Message to secondary users that only owner can manage users [CHAR LIMIT=none] 
         */
        public static final int user_cannot_manage_message=0x7f0b0765;
        /**  User removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int user_confirm_remove_message=0x7f0b076e;
        /**  User (self) removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int user_confirm_remove_self_message=0x7f0b076d;
        /**  User (self) removal confirmation title [CHAR LIMIT=30] 
         */
        public static final int user_confirm_remove_self_title=0x7f0b076a;
        /**  User removal confirmation title [CHAR LIMIT=25] 
         */
        public static final int user_confirm_remove_title=0x7f0b076b;
        /**  Delete button text [CHAR LIMIT=25] 
         */
        public static final int user_delete_button=0x7f0b0772;
        /**  Spoken content description for delete icon beside a user [CHAR LIMIT=none] 
         */
        public static final int user_delete_user_description=0x7f0b0771;
        /**  User dictionary settings. Text on the dialog button to confirm adding a word. [CHAR LIMIT=15] 
         */
        public static final int user_dict_settings_add_dialog_confirm=0x7f0b04b7;
        /**  User dictionary settings. Text on the dialog button mask advanced options. [CHAR LIMIT=15] 
         */
        public static final int user_dict_settings_add_dialog_less_options=0x7f0b04b6;
        /**  User dictionary settings. Text on the dialog button to pop more options for adding a word. [CHAR LIMIT=16] 
         */
        public static final int user_dict_settings_add_dialog_more_options=0x7f0b04b5;
        /**  User dictionary settings. The title of the dialog to add a new word to the user dictionary. [CHAR LIMIT=25] 
         */
        public static final int user_dict_settings_add_dialog_title=0x7f0b04b3;
        /**  User dictionary settings. Label to put before the language field. [CHAR LIMIT=20] 
         */
        public static final int user_dict_settings_add_locale_option_name=0x7f0b04ba;
        /**  User dictionary settings. The title of the menu item to add a new word to the user dictionary. 
         */
        public static final int user_dict_settings_add_menu_title=0x7f0b04b2;
        /**  User dictionary settings. The title of the screen to add/edit a new word to the user dictionary; it describes the phrase that will be added to the user dictionary. [CHAR LIMIT=25] 
         */
        public static final int user_dict_settings_add_screen_title=0x7f0b04b4;
        /**  User dictionary settings. Hint for the text field to type the optional shortcut to add to the user dictionary. [CHAR LIMIT=35] 
         */
        public static final int user_dict_settings_add_shortcut_hint=0x7f0b04bc;
        /**  User dictionary settings. Label to put before the shortcut field (once a shortcut is registered, the user can type the shortcut and get the word it points to in the suggestions). [CHAR LIMIT=20] 
         */
        public static final int user_dict_settings_add_shortcut_option_name=0x7f0b04b9;
        /**  User dictionary settings. Hint for the text field to type the word to add to the user dictionary. [CHAR LIMIT=35] 
         */
        public static final int user_dict_settings_add_word_hint=0x7f0b04bb;
        /**  User dictionary settings. Label to put before the word field (that's the word that will actually be added to the user dictionary when OK is pressed). [CHAR LIMIT=20] 
         */
        public static final int user_dict_settings_add_word_option_name=0x7f0b04b8;
        /**  User dictionary settings. The list item to choose to insert a word into the user dictionary for all languages 
         */
        public static final int user_dict_settings_all_languages=0x7f0b04c1;
        /**  User dictionary settings. The title of the context menu item to delete the current word 
         */
        public static final int user_dict_settings_context_menu_delete_title=0x7f0b04bf;
        /**  User dictionary settings. The title of the context menu item to edit the current word 
         */
        public static final int user_dict_settings_context_menu_edit_title=0x7f0b04be;
        /**  User dictionary settings. The title of the dialog to edit an existing word in the user dictionary. 
         */
        public static final int user_dict_settings_edit_dialog_title=0x7f0b04bd;
        /**  User dictionary settings. The text to show when there are no user-defined words in the dictionary  [CHAR LIMIT=200] 
         */
        public static final int user_dict_settings_empty_text=0x7f0b04c0;
        /**  User dictionary settings. The text to show for the option that shows the entire list of supported locales to choose one [CHAR LIMIT=30] 
         */
        public static final int user_dict_settings_more_languages=0x7f0b04c2;
        /**  User dictionary settings.  The summary of the list item to go into the Personal dictionary settings screen. 
         */
        public static final int user_dict_settings_summary=0x7f0b04b1;
        /**  User dictionary settings. The title of the list item to go into the Personal dictionary settings screen. [CHAR LIMIT=35] 
         */
        public static final int user_dict_settings_title=0x7f0b04b0;
        /**  An option in a photo selection dialog, if there is no photo yet [CHAR LIMIT=50] 
         */
        public static final int user_image_choose_photo=0x7f0b07ad;
        /**  An option in a photo selection dialog, if there is no photo yet [CHAR LIMIT=50] 
         */
        public static final int user_image_take_photo=0x7f0b07ac;
        /**  Text shown for title of user info setting [CHAR LIMIT=20]
         */
        public static final int user_info_settings_title=0x7f0b011f;
        /**  User settings header for list of users and profiles [CHAR LIMIT=40] 
         */
        public static final int user_list_title=0x7f0b074e;
        /**  User settings warning that restricted profile needs a screen lock [CHAR LIMIT=NONE] 
         */
        public static final int user_need_lock_message=0x7f0b0751;
        /**  User details new restricted profile name [CHAR LIMIT=30] 
         */
        public static final int user_new_profile_name=0x7f0b0769;
        /**  User details new user name [CHAR LIMIT=30] 
         */
        public static final int user_new_user_name=0x7f0b0768;
        /**  Title for the preference to enter the nickname of the userto display in the user switcher [CHAR LIMIT=25]
         */
        public static final int user_nickname=0x7f0b0757;
        /**  User information string to represent the owner of the device [CHAR LIMIT=25] 
         */
        public static final int user_owner=0x7f0b0755;
        /**  User picture title [CHAR LIMIT=30] 
         */
        public static final int user_picture_title=0x7f0b0799;
        /**  User profile removal confirmation message [CHAR LIMIT=none] 
         */
        public static final int user_profile_confirm_remove_message=0x7f0b076f;
        /**  Profile removal confirmation title [CHAR LIMIT=25] 
         */
        public static final int user_profile_confirm_remove_title=0x7f0b076c;
        /**  User details remove user menu [CHAR LIMIT=20] 
         */
        public static final int user_remove_user_menu=0x7f0b0767;
        /**  User limits screen, user name rename text [CHAR LIMIT=15] 
         */
        public static final int user_rename=0x7f0b079c;
        /**  Summary for app entries that are controlled by another entry [CHAR LIMIT=none] 
         */
        public static final int user_restrictions_controlled_by=0x7f0b079e;
        /**  User app limits screen title [CHAR LIMIT=35] 
         */
        public static final int user_restrictions_title=0x7f0b079b;
        /**  User settings dialog button to set screen lock [CHAR LIMIT=25] 
         */
        public static final int user_set_lock_button=0x7f0b0752;
        /**  User settings screen title [CHAR LIMIT=25] 
         */
        public static final int user_settings_title=0x7f0b074d;
        /**  Button text to setup the new user later [CHAR LIMIT=25] 
         */
        public static final int user_setup_button_setup_later=0x7f0b0764;
        /**  Button text to setup the new user now [CHAR LIMIT=25] 
         */
        public static final int user_setup_button_setup_now=0x7f0b0763;
        /**  Message in dialog to setup a new user after creation [CHAR LIMIT=none] 
         */
        public static final int user_setup_dialog_message=0x7f0b0761;
        /**  Title of dialog to setup a new user [CHAR LIMIT=30] 
         */
        public static final int user_setup_dialog_title=0x7f0b0760;
        /**  Message in dialog to setup a new restricted profile after creation [CHAR LIMIT=none] 
         */
        public static final int user_setup_profile_dialog_message=0x7f0b0762;
        /**  User summary to indicate that user is currently not set up [CHAR LIMIT=100] 
         */
        public static final int user_summary_not_set_up=0x7f0b0753;
        /**  User summary to indicate that restricted profile is currently not set up [CHAR LIMIT=100] 
         */
        public static final int user_summary_restricted_not_set_up=0x7f0b0754;
        /**  User settings summary for a restricted profile [CHAR LIMIT=50] 
         */
        public static final int user_summary_restricted_profile=0x7f0b0750;
        /**  User settings title for current user entry "You" user. [CHAR LIMIT=30] 
         */
        public static final int user_you=0x7f0b0756;
        /**  Applications settings screen, setting check box title. If checked, the system will send package verification requests to package verifiers on the device who will ultimately allow or reject the installation of applications. [CHAR LIMIT=30] 
         */
        public static final int verify_applications=0x7f0b0409;
        /**  Applications settings screen, setting check box summary. This is the summary for "App Check" checkbox. [CHAR LIMIT=none] 
         */
        public static final int verify_applications_summary=0x7f0b040a;
        /**  Summary of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=NONE] 
         */
        public static final int verify_apps_over_usb_summary=0x7f0b04fc;
        /**  Title of checkbox setting to perform package verification on apps installed over USB/ADT/ADB [CHAR LIMIT=32] 
         */
        public static final int verify_apps_over_usb_title=0x7f0b04fb;
        /**  Manage applications, version string displayed in app snippet 
         */
        public static final int version_text=0x7f0b0458;
        /**  Sound settings screen, setting option name checkbox 
         */
        public static final int vibrate_in_silent_title=0x7f0b02a2;
        /**  On Language & input settings screen, setting title.  Setting to redirect vibration to input devices. [CHAR LIMIT=35] 
         */
        public static final int vibrate_input_devices=0x7f0b04a9;
        /**  On Language & input settings screen, setting summary.  Setting to redirect vibration to input devices. [CHAR LIMIT=100] 
         */
        public static final int vibrate_input_devices_summary=0x7f0b04aa;
        /**  Sound settings screen, setting option name checkbox. About vibration setting
         during incoming calls. [CHAR LIMIT=30] 
         */
        public static final int vibrate_when_ringing_title=0x7f0b02ba;
        /**  Title for the 'voice input' category of voice input/output settings 
         */
        public static final int voice_category=0x7f0b05cd;
        /**  Title of setting on main settings screen. This item will take the user to the screen to tweak settings related to speech functionality 
         */
        public static final int voice_input_output_settings=0x7f0b05c9;
        /**  Main voice input/output settings screen title 
         */
        public static final int voice_input_output_settings_title=0x7f0b05ca;
        /**  Title of voice search settings list item within voice input/output settings 
         */
        public static final int voice_search_settings_title=0x7f0b05cb;
        /**  Volume description for alarm volume 
         */
        public static final int volume_alarm_description=0x7f0b02b5;
        /**  Image description for alarm volume mute button. 
         */
        public static final int volume_alarm_mute=0x7f0b02b9;
        /**  Volume description for media volume 
         */
        public static final int volume_media_description=0x7f0b02b2;
        /**  Image description for media volume mute button. 
         */
        public static final int volume_media_mute=0x7f0b02b7;
        /**  Volume description for notification volume 
         */
        public static final int volume_notification_description=0x7f0b02b4;
        /**  Image description for notification volume mute button. 
         */
        public static final int volume_notification_mute=0x7f0b02b8;
        /**  Volume description for ringtone and notification volume 
         */
        public static final int volume_ring_description=0x7f0b02b3;
        /**  Image description for ringer volume mute button. 
         */
        public static final int volume_ring_mute=0x7f0b02b6;
        /**  Button label to cancel changing a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_cancel=0x7f0b0725;
        /**  Button label to connect to a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_connect=0x7f0b0727;
        /**  Dialog title to connect to a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_connect_to=0x7f0b0729;
        /**  Preference title to create a new VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_create=0x7f0b072b;
        /**  Input label for the DNS servers of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_dns_servers=0x7f0b071d;
        /**  Dialog title to edit a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_edit=0x7f0b0728;
        /**  Selection label for the IPSec CA certificate of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_ca_cert=0x7f0b0719;
        /**  Input label for the IPSec identifier of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_identifier=0x7f0b0716;
        /**  Input label for the IPSec pre-shared key of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_secret=0x7f0b0717;
        /**  Selection label for the IPSec server certificate of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_server_cert=0x7f0b071a;
        /**  Selection label for the IPSec user certificate of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_ipsec_user_cert=0x7f0b0718;
        /**  Input label for the L2TP secret of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_l2tp_secret=0x7f0b0715;
        /**  Error indicating that the selected VPN doesn't meet requirements. [CHAR LIMIT=NONE] 
         */
        public static final int vpn_lockdown_config_error=0x7f0b0731;
        /**  List item indicating that no always-on VPN is selected. [CHAR LIMIT=64] 
         */
        public static final int vpn_lockdown_none=0x7f0b0730;
        /**  Summary describing the always-on VPN feature. [CHAR LIMIT=NONE] 
         */
        public static final int vpn_lockdown_summary=0x7f0b072f;
        /**  Menu item to delete a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_menu_delete=0x7f0b072d;
        /**  Menu item to edit a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_menu_edit=0x7f0b072c;
        /**  Menu item to select always-on VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_menu_lockdown=0x7f0b072e;
        /**  Toast message when a certificate is missing. [CHAR LIMIT=100] 
         */
        public static final int vpn_missing_cert=0x7f0b0733;
        /**  Checkbox label to enable PPP encryption for a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_mppe=0x7f0b0714;
        /**  Input label for the name of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_name=0x7f0b0711;
        /**  Option to not use a CA certificate to verify the VPN server. [CHAR LIMIT=40] 
         */
        public static final int vpn_no_ca_cert=0x7f0b0723;
        /**  Toast message when there is no network connection to start VPN. [CHAR LIMIT=100] 
         */
        public static final int vpn_no_network=0x7f0b0732;
        /**  Option to use the server certificate received from the VPN server. [CHAR LIMIT=40] 
         */
        public static final int vpn_no_server_cert=0x7f0b0724;
        /**  Hint for not using an optional feature in a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_not_used=0x7f0b0722;
        /**  Input label for the password of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_password=0x7f0b0720;
        /**  Input label for the forwarding routes of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_routes=0x7f0b071e;
        /**  Button label to save a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_save=0x7f0b0726;
        /**  Checkbox label to save the username and the password in a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_save_login=0x7f0b0721;
        /**  Input label for the DNS search domains of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_search_domains=0x7f0b071c;
        /**  Input label for the server address of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_server=0x7f0b0713;
        /**  Title of preference to enter the VPN settings activity 
         */
        public static final int vpn_settings_title=0x7f0b0611;
        /**  Checkbox label to show advanced options of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_show_options=0x7f0b071b;
        /**  Preference title for VPN settings. [CHAR LIMIT=40] 
         */
        public static final int vpn_title=0x7f0b072a;
        /**  Input label for the type of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_type=0x7f0b0712;
        /**  Input label for the username of a VPN profile. [CHAR LIMIT=40] 
         */
        public static final int vpn_username=0x7f0b071f;
        /**  UI debug setting: wait for debugger to attach to debugging process? [CHAR LIMIT=50] 
         */
        public static final int wait_for_debugger=0x7f0b06a4;
        /**  UI debug setting: wait for debugger to attach to debugging process summary [CHAR LIMIT=500] 
         */
        public static final int wait_for_debugger_summary=0x7f0b06a5;
        /**  Wallpaper settings fragment title [CHAR LIMIT=30] 
         */
        public static final int wallpaper_settings_fragment_title=0x7f0b02d3;
        /**  Wallpaper settings title [CHAR LIMIT=30] 
         */
        public static final int wallpaper_settings_title=0x7f0b02d2;
        /**  Title for the screen that lets the user choose a widget to add to the home screen
         (or other screens that can host widgets).  Note to translators: we're still determining
         the final name for Gadgets/Widgets, so please translate both for now. 
         */
        public static final int widget_picker_title=0x7f0b0504;
        /**  Header for the list of wifi networks
         */
        public static final int wifi_access_points=0x7f0b01fb;
        /**  Action bar text message to manually add a wifi network [CHAR LIMIT=20]
         */
        public static final int wifi_add_network=0x7f0b01fa;
        /**  Title of the screen to adjust IP settings 
 Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's current IP address. 
         */
        public static final int wifi_advanced_ip_address_title=0x7f0b0256;
        /**  Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's MAC address. 
         */
        public static final int wifi_advanced_mac_address_title=0x7f0b0255;
        /**  Wifi Advanced settings.  Used as a label under the shortcut icon that goes to Wifi advanced settings. [CHAR LIMIT=20]
         */
        public static final int wifi_advanced_settings_label=0x7f0b0257;
        /**  Wi-Fi settings screen, advanced, settings section.  This is a header shown above advanced wifi settings. 
         */
        public static final int wifi_advanced_titlebar=0x7f0b0251;
        /**  Text warning about skipping Wi-Fi without a mobile connect (phone) [CHAR LIMIT=NONE] 
         */
        public static final int wifi_and_mobile_skipped_message=0x7f0b024f;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item on Wifi information screen
         */
        public static final int wifi_api_test=0x7f0b0284;
        /**  Button label to dismiss the dialog 
         */
        public static final int wifi_cancel=0x7f0b024b;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item on Wifi information screen
         */
        public static final int wifi_config_info=0x7f0b0298;
        /**  Button label to connect to a Wi-Fi network 
         */
        public static final int wifi_connect=0x7f0b0245;
        /**  Text alerting that Wi-Fi couldn't connect (phone) [CHAR LIMIT=NONE] 
         */
        public static final int wifi_connect_failed_message=0x7f0b0250;
        /**  Status for networks disabled for unknown reason 
         */
        public static final int wifi_disabled_generic=0x7f0b022d;
        /**  Status for networked disabled from a DNS or DHCP failure 
         */
        public static final int wifi_disabled_network_failure=0x7f0b022e;
        /**  Status for networks disabled from authentication failure (wrong password
         or certificate). 
         */
        public static final int wifi_disabled_password_failure=0x7f0b022f;
        /**  Wifi Display settings. The checkbox title for enabling autonomous GO during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_autonomous_go=0x7f0b01d0;
        public static final int wifi_display_available_devices=0x7f0b07b4;
        /**  Setting Checkbox title whether to show options for wireless display certification 
         */
        public static final int wifi_display_certification=0x7f0b04f2;
        /**  Wifi Display settings. The sub heading for wireless display certification options. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_certification_heading=0x7f0b01cd;
        /**  setting Checkbox summary whether to show options for wireless display certification  
         */
        public static final int wifi_display_certification_summary=0x7f0b04f3;
        /**  Wifi Display settings. Image description for device details button. This opens the screen to rename, unpair, etc. a single device. 
         */
        public static final int wifi_display_details=0x7f0b01c8;
        public static final int wifi_display_disconnect_text=0x7f0b07b7;
        public static final int wifi_display_disconnect_title=0x7f0b07b6;
        /**  Wifi Display settings. The title of a menu item to enable wireless display [CHAR LIMIT=40] 
         */
        public static final int wifi_display_enable_menu_item=0x7f0b01c2;
        /**  Wifi Display settings. The dropdown menu title for choosing listen channel during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_listen_channel=0x7f0b01d4;
        /**  Wifi Display settings. The checkbox title for enabling listen mode during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_listen_mode=0x7f0b01cf;
        /**  Wifi Display settings. Text that appears when scanning for devices is finished and no nearby device was found [CHAR LIMIT=40]
         */
        public static final int wifi_display_no_devices_found=0x7f0b01c3;
        /**  Wifi Display settings. The dropdown menu title for choosing operating channel during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_operating_channel=0x7f0b01d5;
        /**  Wifi Display settings. Options dialog.  The done button text. [CHAR LIMIT=20] 
         */
        public static final int wifi_display_options_done=0x7f0b01cb;
        /**  Wifi Display settings. Options dialog.  The forget button text. [CHAR LIMIT=20] 
         */
        public static final int wifi_display_options_forget=0x7f0b01ca;
        /**  Wifi Display settings. Options dialog.  The name label used when prompting the user to rename the display. [CHAR LIMIT=20] 
         */
        public static final int wifi_display_options_name=0x7f0b01cc;
        /**  Wifi Display settings. Options dialog.  The title of the dialog. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_options_title=0x7f0b01c9;
        public static final int wifi_display_paired_devices=0x7f0b07b3;
        /**  Wifi Display settings. The button text for sending pause trigger during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_pause=0x7f0b01d1;
        /**  Wifi Display settings. The button text for sending play (resume) trigger during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_resume=0x7f0b01d2;
        public static final int wifi_display_search_for_devices=0x7f0b07b1;
        public static final int wifi_display_searching_for_devices=0x7f0b07b2;
        /**  Wifi Display settings. The section title for wireless display session info. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_session_info=0x7f0b01ce;
        public static final int wifi_display_settings_empty_list_wifi_display_disabled=0x7f0b07b0;
        public static final int wifi_display_settings_empty_list_wifi_display_off=0x7f0b07af;
        /**  Wifi Display settings. The title of the screen. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_settings_title=0x7f0b01c1;
        public static final int wifi_display_status_available=0x7f0b07b5;
        /**  Wifi Display settings. The status summary for connected devices. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_connected=0x7f0b01c5;
        /**  Wifi Display settings. The status summary for connecting devices. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_connecting=0x7f0b01c4;
        /**  Wifi Display settings. The status summary for devices that's already in use. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_in_use=0x7f0b01c6;
        /**  Wifi Display settings. The status summary for devices that's not available. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_status_not_available=0x7f0b01c7;
        public static final int wifi_display_summary_disabled=0x7f0b07ba;
        public static final int wifi_display_summary_off=0x7f0b07b9;
        public static final int wifi_display_summary_on=0x7f0b07b8;
        /**  Wifi Display settings. The dropdown menu title for choosing WPS configuration during certification process. [CHAR LIMIT=40] 
         */
        public static final int wifi_display_wps_config=0x7f0b01d3;
        /**  Label for the DNS (first one) 
         */
        public static final int wifi_dns1=0x7f0b025e;
        /**  Hint text for DNS 
         */
        public static final int wifi_dns1_hint=0x7f0b025f;
        /**  Label for the DNS (second one)
         */
        public static final int wifi_dns2=0x7f0b0260;
        /**  Hint text for DNS 
         */
        public static final int wifi_dns2_hint=0x7f0b0261;
        /**  Button for going to the previous screen or step [CHAR LIMIT=20] 
         */
        public static final int wifi_dont_skip=0x7f0b024d;
        /**  Label for the EAP anonymous identity of the network 
         */
        public static final int wifi_eap_anonymous=0x7f0b0226;
        /**  Label for the EAP CA certificate of the network 
         */
        public static final int wifi_eap_ca_cert=0x7f0b0223;
        /**  Label for the EAP identity of the network 
         */
        public static final int wifi_eap_identity=0x7f0b0225;
        /**  Label for the EAP method of the network 
         */
        public static final int wifi_eap_method=0x7f0b0221;
        /**  Label for the EAP user certificate of the network 
         */
        public static final int wifi_eap_user_cert=0x7f0b0224;
        /**  Wifi Settings. text displayed when user has restriction DISALLOW_CONFIG_WIFI [CHAR LIMIT=NONE]
         */
        public static final int wifi_empty_list_user_restricted=0x7f0b0207;
        /**  Wi-Fi settings. text displayed when Wi-Fi is off and network list is empty [CHAR LIMIT=50]
         */
        public static final int wifi_empty_list_wifi_off=0x7f0b0205;
        /**  Wi-Fi settings. text displayed when Wi-Fi is on and network list is empty [CHAR LIMIT=50]
         */
        public static final int wifi_empty_list_wifi_on=0x7f0b0206;
        /**  Summary text when Wi-Fi or bluetooth has error 
         */
        public static final int wifi_error=0x7f0b01e9;
        /**  Toast message when Wi-Fi cannot scan for networks 
         */
        public static final int wifi_fail_to_scan=0x7f0b01eb;
        /**  Failured notification for connect 
         */
        public static final int wifi_failed_connect_message=0x7f0b0246;
        /**  Failured notification for forget 
         */
        public static final int wifi_failed_forget_message=0x7f0b0248;
        /**  Failured notification for save 
         */
        public static final int wifi_failed_save_message=0x7f0b024a;
        /**  Button label to delete a Wi-Fi network 
         */
        public static final int wifi_forget=0x7f0b0247;
        /**  Label for the gateway of the network 
         */
        public static final int wifi_gateway=0x7f0b0262;
        /**  Hint text for the gateway 
         */
        public static final int wifi_gateway_hint=0x7f0b0263;
        /**  Toast message when Wi-Fi or bluetooth is disallowed in airplane mode 
         */
        public static final int wifi_in_airplane_mode=0x7f0b01ea;
        /**  Preference title for option to install certificates 
         */
        public static final int wifi_install_credentials=0x7f0b01f2;
        /**  Label for the IP address of the connection 
         */
        public static final int wifi_ip_address=0x7f0b021f;
        /**  Hint text for the IP address 
         */
        public static final int wifi_ip_address_hint=0x7f0b0220;
        /**  Label for the spinner to show ip settings [CHAR LIMIT=25] 
         */
        public static final int wifi_ip_settings=0x7f0b0229;
        /**  Error message if the dns is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_dns=0x7f0b025c;
        /**  Error message if the gateway is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_gateway=0x7f0b025b;
        /**  Error message if the IP address is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_ip_address=0x7f0b025a;
        /**  Error message if the network prefix length is not valid [CHAR LIMIT=50]
         */
        public static final int wifi_ip_settings_invalid_network_prefix_length=0x7f0b025d;
        /**  Menu ietm to cancel the IP settings 
         */
        public static final int wifi_ip_settings_menu_cancel=0x7f0b0259;
        /**  Menu item to save the IP settings 
         */
        public static final int wifi_ip_settings_menu_save=0x7f0b0258;
        /**  Menu option to Wi-Fi advanced settings 
         */
        public static final int wifi_menu_advanced=0x7f0b0201;
        /**  Menu option to connect to a Wi-Fi network 
         */
        public static final int wifi_menu_connect=0x7f0b0202;
        /**  Menu option to delete a Wi-Fi network 
         */
        public static final int wifi_menu_forget=0x7f0b0203;
        /**  Menu option to modify a Wi-Fi network configuration 
         */
        public static final int wifi_menu_modify=0x7f0b0204;
        /**  Content description for menu button in Wifi setup. Not shown on the screen. [CHAR LIMIT=NONE] 
         */
        public static final int wifi_menu_more_options=0x7f0b01fd;
        /**  Menu option to launch Wi-Fi Direct settings [CHAR LIMIT=20]
         */
        public static final int wifi_menu_p2p=0x7f0b01ff;
        /**  Menu option to scan Wi-Fi networks 
         */
        public static final int wifi_menu_scan=0x7f0b0200;
        /**  Menu option to do WPS Push Button [CHAR LIMIT=25]
         */
        public static final int wifi_menu_wps_pbc=0x7f0b01fc;
        /**  Menu option to do WPS Pin Entry [CHAR LIMIT=25]
         */
        public static final int wifi_menu_wps_pin=0x7f0b01fe;
        /**  Wi-Fi settings. content description for more button [CHAR LIMIT=50]
         */
        public static final int wifi_more=0x7f0b0209;
        /**  Label for the network prefix of the network [CHAR LIMIT=25]
         */
        public static final int wifi_network_prefix_length=0x7f0b0264;
        /**  Hint text for network prefix length 
         */
        public static final int wifi_network_prefix_length_hint=0x7f0b0265;
        /**  Summary for the remembered network but currently not in range. 
         */
        public static final int wifi_not_in_range=0x7f0b0230;
        /**  Checkbox title for option to notify user when open networks are nearby 
         */
        public static final int wifi_notify_open_networks=0x7f0b01ec;
        /**  Checkbox summary for option to notify user when open networks are nearby 
         */
        public static final int wifi_notify_open_networks_summary=0x7f0b01ed;
        /**  Wifi on time 
         */
        public static final int wifi_on_time=0x7f0b057a;
        /**  Wi-Fi settings. title for setup other network button [CHAR LIMIT=35]
         */
        public static final int wifi_other_network=0x7f0b0208;
        /**  Message text for disconnection from one device
         */
        public static final int wifi_p2p_cancel_connect_message=0x7f0b0274;
        /**  Title for cancel connect dialog 
         */
        public static final int wifi_p2p_cancel_connect_title=0x7f0b0273;
        /**  Message text for remembered group deletion
         */
        public static final int wifi_p2p_delete_group_message=0x7f0b0275;
        public static final int wifi_p2p_device_info=0x7f0b0267;
        /**  Message text for disconnection from one device
         */
        public static final int wifi_p2p_disconnect_message=0x7f0b0271;
        /**  Message text for disconnection from multiple devices
         */
        public static final int wifi_p2p_disconnect_multiple_message=0x7f0b0272;
        /**  Title for disconnect dialog 
         */
        public static final int wifi_p2p_disconnect_title=0x7f0b0270;
        /**  Toast text for a failed connection initiation 
         */
        public static final int wifi_p2p_failed_connect_message=0x7f0b026e;
        /**  Message text for failure to rename 
         */
        public static final int wifi_p2p_failed_rename_message=0x7f0b026f;
        /**  Menu option to Rename
         */
        public static final int wifi_p2p_menu_rename=0x7f0b026b;
        /**  Menu option to discover peers
         */
        public static final int wifi_p2p_menu_search=0x7f0b0269;
        /**  Menu option when discovery is in progress [CHAR LIMIT=25] 
         */
        public static final int wifi_p2p_menu_searching=0x7f0b026a;
        /**  Title for available p2p devices 
         */
        public static final int wifi_p2p_peer_devices=0x7f0b026c;
        public static final int wifi_p2p_persist_network=0x7f0b0268;
        /**  Title for remembered p2p groups 
         */
        public static final int wifi_p2p_remembered_groups=0x7f0b026d;
        /**  Wi-Fi p2p / Wi-Fi Direct settings 
 Used in the 1st-level settings screen to launch Wi-fi Direct settings [CHAR LIMIT=25] 
         */
        public static final int wifi_p2p_settings_title=0x7f0b0266;
        /**  Label for the password of the secured network 
         */
        public static final int wifi_password=0x7f0b0227;
        /**  Checkbox title for option to toggle poor network detection 
         */
        public static final int wifi_poor_network_detection=0x7f0b01ee;
        /**  Checkbox summary for option to toggle poor network detection 
         */
        public static final int wifi_poor_network_detection_summary=0x7f0b01ef;
        /**  Used in the 1st-level settings screen as the turn-on summary 
         */
        public static final int wifi_quick_toggle_summary=0x7f0b01e1;
        /**  Used in the 1st-level settings screen to turn on Wi-Fi 
         */
        public static final int wifi_quick_toggle_title=0x7f0b01e0;
        /**  Summary for the remembered network. 
         */
        public static final int wifi_remembered=0x7f0b022c;
        /**  Message informing that wifi is required during setup [CHAR LIMIT=NONE] 
         */
        public static final int wifi_required_info_text=0x7f0b020b;
        /**  Button label to save a Wi-Fi network configuration 
         */
        public static final int wifi_save=0x7f0b0249;
        /**  Checkbox title for option to scan always available setting 
         */
        public static final int wifi_scan_always_available=0x7f0b01f0;
        /**  Checkbox summary for option to toggle scan always available setting 
         */
        public static final int wifi_scan_always_available_summary=0x7f0b01f1;
        public static final int wifi_scan_always_confirm_allow=0x7f0b0243;
        public static final int wifi_scan_always_confirm_deny=0x7f0b0244;
        public static final int wifi_scan_always_turnon_message=0x7f0b0242;
        /**  Wifi scan always mode checkbox text 
         */
        public static final int wifi_scan_notify_remember_choice=0x7f0b01f5;
        public static final int wifi_scan_notify_text_location_off=0x7f0b01f4;
        public static final int wifi_scan_notify_text_location_on=0x7f0b01f3;
        /**  Substring of wifi status for wifi with authentication.  This version is for when the
         string is first in the list (titlecase in english) 
         */
        public static final int wifi_secured_first_item=0x7f0b0233;
        /**  Substring of wifi status for wifi with authentication.  This version is for when the
         string is not first in the list (lowercase in english) 
         */
        public static final int wifi_secured_second_item=0x7f0b0234;
        /**  Label for the security of the connection 
         */
        public static final int wifi_security=0x7f0b021b;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static final int wifi_security_eap=0x7f0b0241;
        /**  Used in Wi-Fi settings dialogs when Wi-Fi does not have any security. 
         */
        public static final int wifi_security_none=0x7f0b023b;
        /**  Do not translate.  Terminology for wifi with unknown PSK type 
         */
        public static final int wifi_security_psk_generic=0x7f0b0240;
        /**  Do not translate.  Concise terminology for wifi with 802.1x EAP security 
         */
        public static final int wifi_security_short_eap=0x7f0b023a;
        /**  Do not translate.  Concise terminology for wifi with unknown PSK type 
         */
        public static final int wifi_security_short_psk_generic=0x7f0b0239;
        /**  Do not translate.  Concise terminology for wifi with WEP security 
         */
        public static final int wifi_security_short_wep=0x7f0b0235;
        /**  Do not translate.  Concise terminology for wifi with WPA security 
         */
        public static final int wifi_security_short_wpa=0x7f0b0236;
        /**  Do not translate.  Concise terminology for wifi with WPA2 security 
         */
        public static final int wifi_security_short_wpa2=0x7f0b0237;
        /**  Do not translate.  Concise terminology for wifi with both WPA/WPA2 security 
         */
        public static final int wifi_security_short_wpa_wpa2=0x7f0b0238;
        /**  Do not translate.  Terminology for wifi with WEP security 
         */
        public static final int wifi_security_wep=0x7f0b023c;
        /**  Do not translate.  Terminology for wifi with WPA security 
         */
        public static final int wifi_security_wpa=0x7f0b023d;
        /**  Do not translate.  Terminology for wifi with WPA2 security 
         */
        public static final int wifi_security_wpa2=0x7f0b023e;
        /**  Do not translate.  Terminology for wifi with both WPA/WPA2 security, or unknown 
         */
        public static final int wifi_security_wpa_wpa2=0x7f0b023f;
        /**  Wi-Fi settings screen, error message when the frequency band could not be set [CHAR LIMIT=50]. 
         */
        public static final int wifi_setting_frequency_band_error=0x7f0b0254;
        /**  Wi-Fi settings screen, setting summary for setting the wifi frequency band [CHAR LIMIT=50]
         */
        public static final int wifi_setting_frequency_band_summary=0x7f0b0253;
        /**  Wi-Fi settings screen, setting title for setting the band [CHAR LIMIT=50]
         */
        public static final int wifi_setting_frequency_band_title=0x7f0b0252;
        /**  Generic error message when the sleep policy could not be set. 
         */
        public static final int wifi_setting_sleep_policy_error=0x7f0b01f7;
        /**  Setting title for setting the wifi sleep policy. Do we keep Wi-Fi active when the screen turns off? 
         */
        public static final int wifi_setting_sleep_policy_title=0x7f0b01f6;
        /**  Used in the 1st-level settings screen to go to the 2nd-level settings screen  [CHAR LIMIT=20]
         */
        public static final int wifi_settings=0x7f0b01e2;
        /**  Title of the Wi-fi settings screen 
         */
        public static final int wifi_settings_category=0x7f0b01e3;
        /**  Summary text of the Wi-fi settings screen 
         */
        public static final int wifi_settings_summary=0x7f0b01e5;
        /**  Title of the Wi-fi settings entry in the left top level menu 
         */
        public static final int wifi_settings_title=0x7f0b01e4;
        /**  Button message shown on the button adding manual setting.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_add_network=0x7f0b0653;
        /**  Button label to go back to previous screen. Used in SetupWizard for
      XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_back=0x7f0b0657;
        /**  Button label to dismiss the dialog.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_cancel=0x7f0b065c;
        /**  Button label to connect to a Wi-Fi network.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_connect=0x7f0b0659;
        /**  Message shown when the device is connected to a network [CHAR LIMIT=NONE] 
         */
        public static final int wifi_setup_description_connected=0x7f0b0668;
        /**  Message shown when the device is connecting a network [CHAR LIMIT=NONE] 
         */
        public static final int wifi_setup_description_connecting=0x7f0b0667;
        /**  Button label to show detailed dialog for a selected Wi-Fi settings.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=20] 
         */
        public static final int wifi_setup_detail=0x7f0b0658;
        /**  Message shown when users select EAP in Wi-Fi settings for SetupWizard,
         saying EAP can't be configured in SetupWizard flow.
         [CHAR LIMIT=NONE] 
         */
        public static final int wifi_setup_eap_not_supported=0x7f0b0666;
        /**  Button label to delete a Wi-Fi network.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_forget=0x7f0b065a;
        /**  Button message shown on the button enabling users go the next step.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_next=0x7f0b0656;
        /**  Text message shown when Wifi is not connected.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_not_connected=0x7f0b0652;
        /**  Button message shown on the button refreshing a list of network.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_refresh_list=0x7f0b0654;
        /**  Button label to save a Wi-Fi network configuration.
         Used in SetupWizard for XLarge screen [CHAR LIMIT=10] 
         */
        public static final int wifi_setup_save=0x7f0b065b;
        /**  Button message shown on the button enabling users skip Wifi Setup.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_skip=0x7f0b0655;
        /**  The message shown above available networks when a user clicked one of available
         networks or created another profile and he/she is waiting for the connection
         is established.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_connecting=0x7f0b0663;
        /**  The message shown above available networks when a user clicked a network secured by
         EAP. We don't allow the user to connect it.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_eap_not_supported=0x7f0b0665;
        /**  Message shown above available networks when a user clicked one of available
         networks and the UI is prompting the user to edit the network configuration
         if needed. Used in Wifi Setup with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_edit_network=0x7f0b0661;
        /**  Message shown above available networks when a user clicked one of available
         networks and the UI is showing one possible existing network.
         Used in Wifi Setup. 
         */
        public static final int wifi_setup_status_existing_network=0x7f0b065f;
        /**  The message shown above available networks when a user clicked "Add network"
         button. Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_new_network=0x7f0b0662;
        /**  The message shown above available networks when connection is established,
         letting a user to proceed to the next step of the SetupWizard.
         Used in Wifi Setup For Setup Wizard with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_proceed_to_next=0x7f0b0664;
        /**  The message shown above available networks when the device is scanning
         available networks [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_scanning=0x7f0b065d;
        /**  Message shown above available network when there's no connected network.
         Used in Wifi Setup For Setup Wizard with XL screen. 
         */
        public static final int wifi_setup_status_select_network=0x7f0b065e;
        /**  Message shown above available networks when a user clicked one of available
         networks and the network doesn't require configuration (e.g. password)
         Used in Wifi Setup with XL screen. [CHAR LIMIT=35] 
         */
        public static final int wifi_setup_status_unsecured_network=0x7f0b0660;
        /**  Wifi Setup For Setup Wizard with XL screen 
 Title shown in Wifi Setup Wizard with XL screen 
         */
        public static final int wifi_setup_title=0x7f0b064d;
        /**  Title shown in Wifi Setup For Setup Wizard with XL screen when
         a user is adding a network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_add_network=0x7f0b0651;
        /**  Title shown in Wifi Setup For Setup Wizard with XL screen when
         the device successfully connected to a network the user specified.
         The argument should be the name of the network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_connected_network=0x7f0b0650;
        /**  Title shown in Wifi Setup For Setup Wizard with XL screen when
         the device is connecting a network the user specified.
         The argument should be the name of the network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_connecting_network=0x7f0b064f;
        /**  Title shown in Wifi Setup Wizard with XL screen when
         a user is configuring password for a network.
         The argument should be the name of the network.
         [CHAR LIMIT=50] 
         */
        public static final int wifi_setup_title_editing_network=0x7f0b064e;
        /**  Used in the 1st-level settings screen to turn on Wi-Fi  [CHAR LIMIT=60] 
         */
        public static final int wifi_setup_wizard_title=0x7f0b01e6;
        /**  Wi-Fi settings. wps menu title [CHAR LIMIT=25]
         */
        public static final int wifi_setup_wps=0x7f0b020a;
        /**  Label to show/hide advanced options 
         */
        public static final int wifi_show_advanced=0x7f0b020c;
        /**  Label for the check box to show password 
         */
        public static final int wifi_show_password=0x7f0b0228;
        /**  Label for the signal strength of the connection 
         */
        public static final int wifi_signal=0x7f0b021c;
        /**  Button for skipping a step after having been warned of a potential concern [CHAR LIMIT=30] 
         */
        public static final int wifi_skip_anyway=0x7f0b024c;
        /**  Text warning about skipping Wi-Fi with a mobile connect (phone) [CHAR LIMIT=NONE]
         */
        public static final int wifi_skipped_message=0x7f0b024e;
        /**  Label for the link speed of the connection 
         */
        public static final int wifi_speed=0x7f0b021e;
        /**  Label for the SSID of the network 
         */
        public static final int wifi_ssid=0x7f0b0219;
        /**  Hint for a text field to enter the SSID of a hidden wifi network. [CHAR LIMIT=35] 
         */
        public static final int wifi_ssid_hint=0x7f0b021a;
        /**  Summary text when turning Wi-Fi or bluetooth on 
         */
        public static final int wifi_starting=0x7f0b01e7;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_disabled=0x7f0b0294;
        /**  wifi state values
 Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_disabling=0x7f0b0293;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_enabled=0x7f0b0296;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_enabling=0x7f0b0295;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Label on Wifi Status screen
         */
        public static final int wifi_state_label=0x7f0b0287;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int wifi_state_unknown=0x7f0b0297;
        /**  Label for the status of the connection 
         */
        public static final int wifi_status=0x7f0b021d;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Menu item on Wifi information screen
         */
        public static final int wifi_status_test=0x7f0b0285;
        /**  Summary text when turning Wi-Fi or bluetooth off 
         */
        public static final int wifi_stopping=0x7f0b01e8;
        /**  Checkbox title for option to toggle suspend power optimizations 
         */
        public static final int wifi_suspend_optimizations=0x7f0b01f8;
        /**  Checkbox summary for option to toggle suspend power optimizations 
         */
        public static final int wifi_suspend_optimizations_summary=0x7f0b01f9;
        /**  Wifi AP settings
 Label for wifi tether checkbox. Toggles Access Point on/off 
         */
        public static final int wifi_tether_checkbox_text=0x7f0b0276;
        /**  Used to open the ssid and security dialog for Wifi Access Point 
         */
        public static final int wifi_tether_configure_ap_text=0x7f0b027b;
        /**  Default access point SSID used for tethering 
         */
        public static final int wifi_tether_configure_ssid_default=0x7f0b027d;
        /**  Subtext on configuration preference to indicate SSID and security chosen 
         */
        public static final int wifi_tether_configure_subtext=0x7f0b027c;
        /**  Subtext for wifi tether checkbox on success 
         */
        public static final int wifi_tether_enabled_subtext=0x7f0b0279;
        /**  Subtext for wifi tether checkbox on failure 
         */
        public static final int wifi_tether_failed_subtext=0x7f0b027a;
        /**  Summary text when turning hotspot on 
         */
        public static final int wifi_tether_starting=0x7f0b0277;
        /**  Summary text when turning hotspot off 
         */
        public static final int wifi_tether_stopping=0x7f0b0278;
        /**  Hint for unchanged fields 
         */
        public static final int wifi_unchanged=0x7f0b022a;
        /**  Hint for unspecified fields 
         */
        public static final int wifi_unspecified=0x7f0b022b;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary
         Button text on Wifi Status screen
         */
        public static final int wifi_update=0x7f0b0286;
        /**  Substring of status line when Wi-Fi Protected Setup (WPS) is available and
         string is listed first [CHAR LIMIT=20]
         */
        public static final int wifi_wps_available_first_item=0x7f0b0231;
        /**  Substring of wifi status when Wi-Fi Protected Setup (WPS) is available and
         string is listed after a wifi_secured_* string
         */
        public static final int wifi_wps_available_second_item=0x7f0b0232;
        /**  Text displayed when WPS succeeds [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_complete=0x7f0b0211;
        /**  Text displayed when Wi-Fi is connected through WPS [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_connected=0x7f0b0212;
        /**  Text displayed when WPS fails due to authentication issues [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_auth=0x7f0b0217;
        /**  Text displayed when WPS fails to start [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_generic=0x7f0b0214;
        /**  Text displayed when WPS fails due to another session [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_overlap=0x7f0b0218;
        /**  Text displayed when WPS fails to TKIP [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_tkip=0x7f0b0216;
        /**  Text displayed when WPS fails due to WEP [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_failed_wep=0x7f0b0215;
        /**  Text displayed when WPS setup is in progress [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_in_progress=0x7f0b0213;
        /**  Message in WPS dialog for PBC after start up [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_onstart_pbc=0x7f0b020f;
        /**  Message in WPS dialog for PIN after start up [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_onstart_pin=0x7f0b0210;
        /**  Message in WPS dialog at start up [CHAR LIMIT=150] 
         */
        public static final int wifi_wps_setup_msg=0x7f0b020e;
        /**  Title for the WPS setup dialog [CHAR LIMIT=50] 
         */
        public static final int wifi_wps_setup_title=0x7f0b020d;
        public static final int wimax_settings=0x7f0b0693;
        public static final int wimax_settings_summary=0x7f0b07bc;
        /**  UI debug setting: scaling factor for window animations [CHAR LIMIT=25] 
         */
        public static final int window_animation_scale_title=0x7f0b06c6;
        /**  Wireless Settings screen title for things like Wi-Fi, bluetooth, airplane mode. 
         */
        public static final int wireless_networks_settings_title=0x7f0b00f5;
        /**  Wizard back button label [CHAR LIMIT=25] 
         */
        public static final int wizard_back=0x7f0b07a9;
        /**  Wizard next button label [CHAR LIMIT=25] 
         */
        public static final int wizard_finish=0x7f0b07ab;
        /**  Wizard next button label [CHAR LIMIT=25] 
         */
        public static final int wizard_next=0x7f0b07aa;
        /**  Instructions telling the user that they entered the wrong SIM PIN for the last time.
         Displayed in a dialog box.  
         */
        public static final int wrong_pin_code_pukked=0x7f0b02f7;
        /**  Strings for Dialog yes button 
         */
        public static final int yes=0x7f0b0006;
        /**  Date & time setting screen setting check box title if the time zone should be determined automatically [CHAR LIMIT=25] 
         */
        public static final int zone_auto=0x7f0b0107;
        /**  Date & time setting screen setting option summary text when Automatic time zone check box is clear
        [CHAR LIMIT=100] 
         */
        public static final int zone_auto_summaryOff=0x7f0b0109;
        /**  Date & time setting screen setting option summary text when Automatic time zone check box is selected (that is, when date and time should be determined automatically)
        [CHAR LIMIT=100]  
         */
        public static final int zone_auto_summaryOn=0x7f0b0108;
        /**  Menu item on Select time zone screen 
         */
        public static final int zone_list_menu_sort_alphabetically=0x7f0b010f;
        /**  Menu item on Select time zone screen 
         */
        public static final int zone_list_menu_sort_by_timezone=0x7f0b0110;
    }
    public static final class style {
        public static final int ApnPreference=0x7f0f0023;
        public static final int CryptKeeperBlankTheme=0x7f0f001a;
        public static final int InputMethodPreferenceStyle=0x7f0f001f;
        public static final int KeyguardAppWidgetItem=0x7f0f0022;
        public static final int PreferenceFragmentListSinglePane=0x7f0f000f;
        public static final int PreferenceHeaderListSinglePane=0x7f0f000e;
        public static final int PreferenceHeaderPanelSinglePane=0x7f0f000c;
        public static final int PreferencePanelSinglePane=0x7f0f000d;
        public static final int SecurityPreferenceButton=0x7f0f001c;
        public static final int SecurityPreferenceButtonContainer=0x7f0f001b;
        public static final int SetupTitle=0x7f0f0012;
        public static final int SetupWizardWifiTheme=0x7f0f0024;
        public static final int SetupWizardWifiTheme_Light=0x7f0f0025;
        public static final int TallTitleBarTheme=0x7f0f000a;
        public static final int TextAppearance=0x7f0f0006;
        public static final int TextAppearance_PagerTabs=0x7f0f0021;
        public static final int TextAppearance_Switch=0x7f0f0020;
        public static final int TextAppearance_info_label=0x7f0f0007;
        public static final int TextAppearance_info_small=0x7f0f0008;
        public static final int TextAppearance_info_value=0x7f0f0009;
        public static final int Theme_CreateShortCut=0x7f0f000b;
        public static final int Theme_Light_WifiDialog=0x7f0f0027;
        public static final int Theme_Settings=0x7f0f0028;
        public static final int Theme_WifiDialog=0x7f0f0026;
        /**  We'd like to have this as 16dip hight including paddingTop/paddingBottom to
         be consistent with ProgressBar 
         */
        public static final int TopDivider=0x7f0f0011;
        public static final int Transparent=0x7f0f0019;
        public static final int VertDivider=0x7f0f0010;
        public static final int entry_layout=0x7f0f0004;
        public static final int form_value=0x7f0f0005;
        public static final int info_label=0x7f0f0000;
        public static final int info_layout=0x7f0f0003;
        public static final int info_small=0x7f0f0002;
        public static final int info_value=0x7f0f0001;
        public static final int setup_wizard_button=0x7f0f0018;
        public static final int vpn_label=0x7f0f001d;
        public static final int vpn_value=0x7f0f001e;
        public static final int wifi_item=0x7f0f0013;
        public static final int wifi_item_content=0x7f0f0015;
        public static final int wifi_item_edit_content=0x7f0f0016;
        public static final int wifi_item_label=0x7f0f0014;
        public static final int wifi_section=0x7f0f0017;
    }
    public static final class xml {
        public static final int accessibility_settings=0x7f050000;
        public static final int account_sync_settings=0x7f050001;
        public static final int add_account_settings=0x7f050002;
        public static final int apn_editor=0x7f050003;
        public static final int apn_settings=0x7f050004;
        public static final int app_restrictions=0x7f050005;
        public static final int application_settings=0x7f050006;
        public static final int appwidget_info=0x7f050007;
        public static final int bluetooth_device_advanced=0x7f050008;
        public static final int bluetooth_settings=0x7f050009;
        public static final int captioning_settings=0x7f05000a;
        public static final int data_usage_metered_prefs=0x7f05000b;
        public static final int date_time_prefs=0x7f05000c;
        public static final int development_prefs=0x7f05000d;
        public static final int device_info_memory=0x7f05000e;
        public static final int device_info_settings=0x7f05000f;
        public static final int device_info_status=0x7f050010;
        public static final int device_picker=0x7f050011;
        public static final int display_settings=0x7f050012;
        public static final int file_paths=0x7f050013;
        public static final int home_selection=0x7f050014;
        public static final int input_methods_prefs=0x7f050015;
        public static final int language_settings=0x7f050016;
        public static final int location_mode=0x7f050017;
        public static final int location_settings=0x7f050018;
        public static final int manage_accounts_settings=0x7f050019;
        public static final int nfc_payment_settings=0x7f05001a;
        public static final int power_usage_summary=0x7f05001b;
        public static final int print_job_settings=0x7f05001c;
        public static final int print_settings=0x7f05001d;
        public static final int privacy_settings=0x7f05001e;
        public static final int process_stats_summary=0x7f05001f;
        public static final int quick_launch_settings=0x7f050020;
        public static final int security_settings=0x7f050021;
        public static final int security_settings_biometric_weak=0x7f050022;
        public static final int security_settings_chooser=0x7f050023;
        public static final int security_settings_encrypted=0x7f050024;
        public static final int security_settings_lockscreen=0x7f050025;
        public static final int security_settings_misc=0x7f050026;
        public static final int security_settings_password=0x7f050027;
        public static final int security_settings_pattern=0x7f050028;
        public static final int security_settings_picker=0x7f050029;
        public static final int security_settings_pin=0x7f05002a;
        public static final int security_settings_unencrypted=0x7f05002b;
        public static final int settings_headers=0x7f05002c;
        public static final int sim_lock_settings=0x7f05002d;
        public static final int sound_settings=0x7f05002e;
        public static final int spellchecker_prefs=0x7f05002f;
        public static final int sync_settings=0x7f050030;
        public static final int testing_settings=0x7f050031;
        public static final int testing_wifi_settings=0x7f050032;
        public static final int tether_prefs=0x7f050033;
        public static final int timezones=0x7f050034;
        public static final int tts_engine_settings=0x7f050035;
        public static final int tts_settings=0x7f050036;
        public static final int usb_settings=0x7f050037;
        public static final int user_settings=0x7f050038;
        public static final int vpn_settings2=0x7f050039;
        public static final int wallpaper_settings=0x7f05003a;
        public static final int wifi_access_points=0x7f05003b;
        public static final int wifi_access_points_for_wifi_setup_xl=0x7f05003c;
        public static final int wifi_advanced_settings=0x7f05003d;
        public static final int wifi_display_settings=0x7f05003e;
        public static final int wifi_p2p_settings=0x7f05003f;
        public static final int wifi_settings=0x7f050040;
        public static final int wireless_settings=0x7f050041;
    }
    public static final class styleable {
        /** Attributes that can be used with a BatteryHistoryChart.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowColor android:shadowColor}</code></td><td> Place a shadow of the specified color behind the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowDx android:shadowDx}</code></td><td> Horizontal offset of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowDy android:shadowDy}</code></td><td> Vertical offset of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_shadowRadius android:shadowRadius}</code></td><td> Radius of the shadow.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textAppearance android:textAppearance}</code></td><td> Base text color, typeface, size, and style.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textColor android:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textSize android:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_textStyle android:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #BatteryHistoryChart_android_typeface android:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           </table>
           @see #BatteryHistoryChart_android_shadowColor
           @see #BatteryHistoryChart_android_shadowDx
           @see #BatteryHistoryChart_android_shadowDy
           @see #BatteryHistoryChart_android_shadowRadius
           @see #BatteryHistoryChart_android_textAppearance
           @see #BatteryHistoryChart_android_textColor
           @see #BatteryHistoryChart_android_textSize
           @see #BatteryHistoryChart_android_textStyle
           @see #BatteryHistoryChart_android_typeface
         */
        public static final int[] BatteryHistoryChart = {
            0x01010034, 0x01010095, 0x01010096, 0x01010097,
            0x01010098, 0x01010161, 0x01010162, 0x01010163,
            0x01010164
        };
        /**
          <p>
          @attr description
           Place a shadow of the specified color behind the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowColor}.
          @attr name android:shadowColor
        */
        public static final int BatteryHistoryChart_android_shadowColor = 5;
        /**
          <p>
          @attr description
           Horizontal offset of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowDx}.
          @attr name android:shadowDx
        */
        public static final int BatteryHistoryChart_android_shadowDx = 6;
        /**
          <p>
          @attr description
           Vertical offset of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowDy}.
          @attr name android:shadowDy
        */
        public static final int BatteryHistoryChart_android_shadowDy = 7;
        /**
          <p>
          @attr description
           Radius of the shadow. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#shadowRadius}.
          @attr name android:shadowRadius
        */
        public static final int BatteryHistoryChart_android_shadowRadius = 8;
        /**
          <p>
          @attr description
           Base text color, typeface, size, and style. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textAppearance}.
          @attr name android:textAppearance
        */
        public static final int BatteryHistoryChart_android_textAppearance = 0;
        /**
          <p>
          @attr description
           Text color. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textColor}.
          @attr name android:textColor
        */
        public static final int BatteryHistoryChart_android_textColor = 4;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textSize}.
          @attr name android:textSize
        */
        public static final int BatteryHistoryChart_android_textSize = 1;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textStyle}.
          @attr name android:textStyle
        */
        public static final int BatteryHistoryChart_android_textStyle = 3;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#typeface}.
          @attr name android:typeface
        */
        public static final int BatteryHistoryChart_android_typeface = 2;
        /** Attributes that can be used with a ChartGridView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartGridView_borderDrawable com.android.settings:borderDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_labelColor com.android.settings:labelColor}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_primaryDrawable com.android.settings:primaryDrawable}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartGridView_secondaryDrawable com.android.settings:secondaryDrawable}</code></td><td></td></tr>
           </table>
           @see #ChartGridView_borderDrawable
           @see #ChartGridView_labelColor
           @see #ChartGridView_primaryDrawable
           @see #ChartGridView_secondaryDrawable
         */
        public static final int[] ChartGridView = {
            0x7f01000b, 0x7f01000c, 0x7f01000d, 0x7f01000e
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#borderDrawable}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:borderDrawable
        */
        public static final int ChartGridView_borderDrawable = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelColor}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:labelColor
        */
        public static final int ChartGridView_labelColor = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#primaryDrawable}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:primaryDrawable
        */
        public static final int ChartGridView_primaryDrawable = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#secondaryDrawable}
          attribute's value can be found in the {@link #ChartGridView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:secondaryDrawable
        */
        public static final int ChartGridView_secondaryDrawable = 2;
        /** Attributes that can be used with a ChartNetworkSeriesView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_fillColor com.android.settings:fillColor}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_fillColorSecondary com.android.settings:fillColorSecondary}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartNetworkSeriesView_strokeColor com.android.settings:strokeColor}</code></td><td></td></tr>
           </table>
           @see #ChartNetworkSeriesView_fillColor
           @see #ChartNetworkSeriesView_fillColorSecondary
           @see #ChartNetworkSeriesView_strokeColor
         */
        public static final int[] ChartNetworkSeriesView = {
            0x7f01000f, 0x7f010010, 0x7f010011
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#fillColor}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:fillColor
        */
        public static final int ChartNetworkSeriesView_fillColor = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#fillColorSecondary}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:fillColorSecondary
        */
        public static final int ChartNetworkSeriesView_fillColorSecondary = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#strokeColor}
          attribute's value can be found in the {@link #ChartNetworkSeriesView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:strokeColor
        */
        public static final int ChartNetworkSeriesView_strokeColor = 0;
        /** Attributes that can be used with a ChartSweepView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartSweepView_followAxis com.android.settings:followAxis}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_labelColor com.android.settings:labelColor}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_labelSize com.android.settings:labelSize}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_labelTemplate com.android.settings:labelTemplate}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_neighborMargin com.android.settings:neighborMargin}</code></td><td></td></tr>
           <tr><td><code>{@link #ChartSweepView_sweepDrawable com.android.settings:sweepDrawable}</code></td><td></td></tr>
           </table>
           @see #ChartSweepView_followAxis
           @see #ChartSweepView_labelColor
           @see #ChartSweepView_labelSize
           @see #ChartSweepView_labelTemplate
           @see #ChartSweepView_neighborMargin
           @see #ChartSweepView_sweepDrawable
         */
        public static final int[] ChartSweepView = {
            0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009,
            0x7f01000a, 0x7f01000b
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#followAxis}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>horizontal</code></td><td>0</td><td></td></tr>
<tr><td><code>vertical</code></td><td>1</td><td></td></tr>
</table>
          @attr name com.android.settings:followAxis
        */
        public static final int ChartSweepView_followAxis = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelColor}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:labelColor
        */
        public static final int ChartSweepView_labelColor = 5;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelSize}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:labelSize
        */
        public static final int ChartSweepView_labelSize = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#labelTemplate}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:labelTemplate
        */
        public static final int ChartSweepView_labelTemplate = 4;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#neighborMargin}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:neighborMargin
        */
        public static final int ChartSweepView_neighborMargin = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#sweepDrawable}
          attribute's value can be found in the {@link #ChartSweepView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:sweepDrawable
        */
        public static final int ChartSweepView_sweepDrawable = 0;
        /** Attributes that can be used with a ChartView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ChartView_optimalWidth com.android.settings:optimalWidth}</code></td><td> optimal width of the chart </td></tr>
           <tr><td><code>{@link #ChartView_optimalWidthWeight com.android.settings:optimalWidthWeight}</code></td><td> how to weight extra space beyond optimal width </td></tr>
           </table>
           @see #ChartView_optimalWidth
           @see #ChartView_optimalWidthWeight
         */
        public static final int[] ChartView = {
            0x7f010004, 0x7f010005
        };
        /**
          <p>
          @attr description
           optimal width of the chart 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.settings:optimalWidth
        */
        public static final int ChartView_optimalWidth = 0;
        /**
          <p>
          @attr description
           how to weight extra space beyond optimal width 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.settings:optimalWidthWeight
        */
        public static final int ChartView_optimalWidthWeight = 1;
        /** Attributes that can be used with a IconPreferenceScreen.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconPreferenceScreen_icon com.android.settings:icon}</code></td><td></td></tr>
           </table>
           @see #IconPreferenceScreen_icon
         */
        public static final int[] IconPreferenceScreen = {
            0x7f010001
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#icon}
          attribute's value can be found in the {@link #IconPreferenceScreen} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.settings:icon
        */
        public static final int IconPreferenceScreen_icon = 0;
        /** Attributes that can be used with a PercentageBarChart.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PercentageBarChart_emptyColor com.android.settings:emptyColor}</code></td><td> Background color </td></tr>
           <tr><td><code>{@link #PercentageBarChart_minTickWidth com.android.settings:minTickWidth}</code></td><td> Minimum tick width for each slice in the bar chart.</td></tr>
           </table>
           @see #PercentageBarChart_emptyColor
           @see #PercentageBarChart_minTickWidth
         */
        public static final int[] PercentageBarChart = {
            0x7f010002, 0x7f010003
        };
        /**
          <p>
          @attr description
           Background color 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.settings:emptyColor
        */
        public static final int PercentageBarChart_emptyColor = 0;
        /**
          <p>
          @attr description
           Minimum tick width for each slice in the bar chart. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.settings:minTickWidth
        */
        public static final int PercentageBarChart_minTickWidth = 1;
        /** Attributes that can be used with a WifiEncryptionState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #WifiEncryptionState_state_encrypted com.android.settings:state_encrypted}</code></td><td></td></tr>
           </table>
           @see #WifiEncryptionState_state_encrypted
         */
        public static final int[] WifiEncryptionState = {
            0x7f010000
        };
        /**
          <p>This symbol is the offset where the {@link com.android.settings.R.attr#state_encrypted}
          attribute's value can be found in the {@link #WifiEncryptionState} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.settings:state_encrypted
        */
        public static final int WifiEncryptionState_state_encrypted = 0;
    };
}
