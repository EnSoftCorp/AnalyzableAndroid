/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.android.keyguard;

public final class R {
    public static final class anim {
        public static final int keyguard_action_assist_enter=0x7f040000;
        public static final int keyguard_action_assist_exit=0x7f040001;
        public static final int lock_screen_enter=0x7f040002;
        public static final int lock_screen_exit=0x7f040003;
    }
    public static final class array {
        public static final int lockscreen_direction_descriptions=0x7f090002;
        /**  list of 3- or 4-letter mnemonics for a 10-key numeric keypad 
 9 
         */
        public static final int lockscreen_num_pad_klondike=0x7f090009;
        public static final int lockscreen_target_descriptions_unlock_only=0x7f090008;
        public static final int lockscreen_target_descriptions_when_silent=0x7f090001;
        public static final int lockscreen_target_descriptions_when_soundon=0x7f090004;
        public static final int lockscreen_target_descriptions_with_camera=0x7f090006;
        public static final int lockscreen_targets_unlock_only=0x7f090007;
        /**  Resources for GlowPadView in LockScreen 
 Resources for GlowPadView in LockScreen 
 Resources for GlowPadView in LockScreen 
         */
        public static final int lockscreen_targets_when_silent=0x7f090000;
        public static final int lockscreen_targets_when_soundon=0x7f090003;
        public static final int lockscreen_targets_with_camera=0x7f090005;
    }
    public static final class attr {
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int digit=0x7f01000c;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dotSize=0x7f010004;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int glowDot=0x7f010006;
        /**  Percentage of the screen this child should consume or center within.
             If 0/default, the view will be measured by standard rules
             as if this were a FrameLayout. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_centerWithinArea=0x7f01000a;
        /**  Some child types have special behavior. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No special behavior. Layout will proceed as normal. </td></tr>
<tr><td><code>widget</code></td><td>1</td><td> Widget container.
             This will be resized in response to certain events. </td></tr>
<tr><td><code>challenge</code></td><td>2</td><td> Security challenge container.
             This will be dismissed/shown in response to certain events,
             possibly obscuring widget elements. </td></tr>
<tr><td><code>userSwitcher</code></td><td>3</td><td> User switcher.
             This will consume space from the total layout area. </td></tr>
<tr><td><code>scrim</code></td><td>4</td><td> Scrim. This will block access to child views that
             come before it in the child list in bouncer mode. </td></tr>
<tr><td><code>widgets</code></td><td>5</td><td> The home for widgets. All widgets will be descendents of this. </td></tr>
<tr><td><code>expandChallengeHandle</code></td><td>6</td><td> This is a handle that is used for expanding the
             security challenge container when it is collapsed. </td></tr>
<tr><td><code>pageDeleteDropTarget</code></td><td>7</td><td> Delete drop target.  This will be the drop target to delete pages. </td></tr>
</table>
         */
        public static final int layout_childType=0x7f010008;
        /**  Standard gravity constant that a child supplies to its parent.
         Defines how the child view should be positioned, on both the X and Y axes, within its enclosing layout. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
         */
        public static final int layout_gravity=0x7f010000;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_maxHeight=0x7f010009;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int layout_maxWidth=0x7f01000b;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int leftToRight=0x7f010007;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int numDots=0x7f010005;
        /**  The space between adjacent pages of the PagedView. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int pageSpacing=0x7f010001;
        /**  The padding for the scroll indicator area 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollIndicatorPaddingLeft=0x7f010002;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollIndicatorPaddingRight=0x7f010003;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int textView=0x7f01000d;
    }
    public static final class bool {
        public static final int action_bar_embed_tabs=0x7f070009;
        /**  Allow the menu hard key to be disabled in LockScreen on some devices [DO NOT TRANSLATE] 
         */
        public static final int config_disableMenuKeyInLockScreen=0x7f07000c;
        /**  Alias used to reference framework configuration for screen rotation.  
         */
        public static final int config_enableLockScreenRotation=0x7f070000;
        /**  Alias used to reference framework configuration for translucent decor.  
         */
        public static final int config_enableLockScreenTranslucentDecor=0x7f070001;
        public static final int kg_center_small_widgets_vertically=0x7f070003;
        /**  No camera for you, tablet user 
         */
        public static final int kg_enable_camera_default_widget=0x7f070002;
        public static final int kg_share_status_area=0x7f070007;
        public static final int kg_show_ime_at_screen_on=0x7f070005;
        public static final int kg_sim_puk_account_full_screen=0x7f070008;
        public static final int kg_top_align_page_shrink_on_bouncer_visible=0x7f070004;
        /**  Carriers in this locale are sensitive to capitalization of carrier text. 
         This makes the entire interface consistent by switching back to normal case. 
 Carriers in this locale are sensitive to capitalization of carrier text. 
         This makes the entire interface consistent by switching back to normal case. 
 Carriers in this locale are sensitive to capitalization of carrier text. 
         This makes the entire interface consistent by switching back to normal case. 
         */
        public static final int kg_use_all_caps=0x7f070006;
        public static final int show_ongoing_ime_switcher=0x7f07000b;
        public static final int target_honeycomb_needs_options_menu=0x7f07000a;
    }
    public static final class color {
        public static final int clock_gray=0x7f060008;
        /**  Clock 
         */
        public static final int clock_white=0x7f060007;
        /**  FaceLock 
         */
        public static final int facelock_spotlight_mask=0x7f060006;
        /**  Keyguard colors 
         */
        public static final int keyguard_avatar_frame_color=0x7f060001;
        public static final int keyguard_avatar_frame_pressed_color=0x7f060004;
        public static final int keyguard_avatar_frame_shadow_color=0x7f060002;
        public static final int keyguard_avatar_nick_color=0x7f060003;
        public static final int kg_widget_pager_gradient=0x7f060005;
        /**  Alias used to reference framework color for transparency. 
         */
        public static final int transparent=0x7f060000;
    }
    public static final class dimen {
        /**  Touch slop for the global toggle accessibility gesture 
         */
        public static final int accessibility_touch_slop=0x7f0b001e;
        public static final int big_font_size=0x7f0b002f;
        /**  Default clock parameters 
         */
        public static final int bottom_text_spacing_digital=0x7f0b002b;
        public static final int dialog_min_width_major=0x7f0b0032;
        public static final int dialog_min_width_minor=0x7f0b0033;
        /**  EmergencyCarrierArea overlap - amount to overlap the emergency button and carrier text.
         Should be 0 on devices with plenty of room (e.g. tablets) 
 EmergencyCarrierArea overlap - amount to overlap the emergency button and carrier text.
         Should be 0 on devices with plenty of room (e.g. tablets) 
         */
        public static final int eca_overlap=0x7f0b002a;
        /**  Height of FaceUnlock view in keyguard 
 Height of FaceUnlock view in keyguard 
         */
        public static final int face_unlock_height=0x7f0b000b;
        /**  The bottom margin for the GlowPadView container 
 The bottom margin for the GlowPadView container 
         */
        public static final int glowpadcontainer_bottom_margin=0x7f0b0001;
        /**  Default glow radius for GlowPadView 
         */
        public static final int glowpadview_glow_radius=0x7f0b0003;
        /**  Default distance from each snap target that GlowPadView considers a "hit" 
         */
        public static final int glowpadview_inner_radius=0x7f0b0005;
        /**  Default distance beyond which GlowPadView snaps to the matching target 
         */
        public static final int glowpadview_snap_margin=0x7f0b0004;
        /**  Default target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
 target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
         */
        public static final int glowpadview_target_placement_radius=0x7f0b0002;
        /**  Shadow radius under the frame for the circular avatars. 
         */
        public static final int keyguard_avatar_frame_shadow_radius=0x7f0b0024;
        /**  Stroke width of the frame for the circular avatars. 
 Stroke width of the frame for the circular avatars. 
         */
        public static final int keyguard_avatar_frame_stroke_width=0x7f0b0023;
        /**  Size of the text under the avator on the multiuser lockscreen. 
 Size of the text under the avator on the multiuser lockscreen. 
         */
        public static final int keyguard_avatar_name_size=0x7f0b0026;
        /**  Size of the avator on hte multiuser lockscreen. 
 Size of the avator on the multiuser lockscreen. 
         */
        public static final int keyguard_avatar_size=0x7f0b0025;
        /**  Size of lockscreen outerring on unsecure unlock LockScreen 
 Size of lockscreen outerring on unsecure unlock LockScreen 
         */
        public static final int keyguard_lockscreen_outerring_diameter=0x7f0b0000;
        /**  Padding on left margin of PIN text entry field to center it when del button is showing 
         */
        public static final int keyguard_lockscreen_pin_margin_left=0x7f0b000a;
        /**  Size of top margin on Clock font to edge on unlock LockScreen 
         */
        public static final int keyguard_lockscreen_status_line_clockfont_bottom_margin=0x7f0b0009;
        /**  Size of top margin on Clock font to edge on unlock LockScreen 
         */
        public static final int keyguard_lockscreen_status_line_clockfont_top_margin=0x7f0b0008;
        /**  Size of right margin on Unsecure unlock LockScreen 
         */
        public static final int keyguard_lockscreen_status_line_font_right_margin=0x7f0b0007;
        /**  Size of status line font on Unsecure unlock LockScreen. 
         */
        public static final int keyguard_lockscreen_status_line_font_size=0x7f0b0006;
        /**  Margin around the various security views 
 Margin around the various security views 
 Margin around the various security views 
         */
        public static final int keyguard_muliuser_selector_margin=0x7f0b0022;
        /**  Size of status line font in LockScreen. 
         */
        public static final int keyguard_pattern_unlock_status_line_font_size=0x7f0b0035;
        /**  Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer (includes 2x
         keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer
        (includes 2x keyguard_security_view_margin) 
 Height of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_height=0x7f0b0020;
        /**  Margin around the various security views 
 Margin around the various security views 
         */
        public static final int keyguard_security_view_margin=0x7f0b0021;
        /**  Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
 Width of the sliding KeyguardSecurityContainer (includes 2x keyguard_security_view_margin) 
         */
        public static final int keyguard_security_width=0x7f0b001f;
        /**  Top margin for the clock view 
 Top margin for the clock view 
 Top margin for the clock view 
 Top margin for the clock view 
 Top margin for the clock view 
 Top margin for the clock view 
         */
        public static final int kg_clock_top_margin=0x7f0b0013;
        /**  Size of the region along the edge of the screen that will accept
         swipes to scroll the widget area. 
         */
        public static final int kg_edge_swipe_region_size=0x7f0b0027;
        /**  Shift emergency button from the left edge by this amount.  Used by landscape layout on
         phones 
         */
        public static final int kg_emergency_button_shift=0x7f0b0030;
        /**  Horizontal gap between keys in PIN and SIM PIN numeric keyboards in keyguard 
         */
        public static final int kg_key_horizontal_gap=0x7f0b0014;
        /**  Horizontal gap between keys in PIN and SIM PIN numeric keyboards in keyguard 
         */
        public static final int kg_key_vertical_gap=0x7f0b0015;
        /**  Horizontal gap between keys in PIN and SIM PIN numeric keyboards in keyguard 
         */
        public static final int kg_pin_key_height=0x7f0b0016;
        /**  The height of the runway lights strip 
         */
        public static final int kg_runway_lights_height=0x7f0b0018;
        /**  Top margin for the runway lights. We add a negative margin in large
        devices to account for the widget pager padding 
 Top margin for the runway lights. We add a negative margin in large
        devices to account for the widget pager padding 
 Top margin for the runway lights. We add a negative margin in large
        devices to account for the widget pager padding 
         */
        public static final int kg_runway_lights_top_margin=0x7f0b001d;
        /**  The height of the runway lights strip 
         */
        public static final int kg_runway_lights_vertical_padding=0x7f0b0019;
        /**  Space reserved at the bottom of secure views (pin/pattern/password/SIM pin/SIM puk) 
 Space reserved at the bottom of secure views (pin/pattern/password/SIM pin/SIM puk) 
         */
        public static final int kg_secure_padding_height=0x7f0b0017;
        /**  Keyguard dimensions 
 TEMP 
         */
        public static final int kg_security_panel_height=0x7f0b000c;
        /**  Height of security view in keyguard. 
         */
        public static final int kg_security_view_height=0x7f0b000d;
        /**  The height of widgets which do not support vertical resizing. This is only
    used on tablets; on phones, this size is determined by the space left by the
    security mode. 
         */
        public static final int kg_small_widget_height=0x7f0b0029;
        /**  If the height if keyguard drops below this threshold (most likely
    due to the appearance of the IME), then drop the multiuser selector. 
 If the height if keyguard drops below this threshold (most likely
    due to the appearance of the IME), then drop the multiuser selector.
    Landscape's layout allows this to be smaller than for portrait. 
         */
        public static final int kg_squashed_layout_threshold=0x7f0b0028;
        /**  Size of the clock font in keyguard's status view 
 Keyguard dimensions 
 Size of the clock font in keyguard's status view 
 Keyguard dimensions 
 Size of the clock font in keyguard's status view 
         */
        public static final int kg_status_clock_font_size=0x7f0b0010;
        /**  Size of margin on the right of keyguard's status view 
 Size of margin on the right of keyguard's status view 
 Size of margin on the right of keyguard's status view 
 Size of margin on the right of keyguard's status view 
 Size of margin on the right of keyguard's status view 
         */
        public static final int kg_status_line_font_right_margin=0x7f0b0012;
        /**  Size of the generic status lines keyguard's status view  
 Size of the generic status lines keyguard's status view  
 Size of the generic status lines keyguard's status view  
         */
        public static final int kg_status_line_font_size=0x7f0b0011;
        /**  Bottom padding for the widget pager 
 Bottom padding for the widget pager 
 Bottom padding for the widget pager 
 Bottom padding for the widget pager 
         */
        public static final int kg_widget_pager_bottom_padding=0x7f0b001c;
        /**  Horizontal padding for the widget pager 
 Horizontal padding for the widget pager 
 Horizontal padding for the widget pager 
 Horizontal padding for the widget pager 
         */
        public static final int kg_widget_pager_horizontal_padding=0x7f0b001a;
        /**  Top padding for the widget pager 
 Top padding for the widget pager 
 Top padding for the widget pager 
 Top padding for the widget pager 
         */
        public static final int kg_widget_pager_top_padding=0x7f0b001b;
        /**  Height of widget view in keyguard. 
         */
        public static final int kg_widget_view_height=0x7f0b000f;
        /**  Width of widget view in keyguard. 
         */
        public static final int kg_widget_view_width=0x7f0b000e;
        public static final int label_font_size=0x7f0b002c;
        /**  Preference UI dimensions for larger screens. 
         */
        public static final int preference_widget_width=0x7f0b0034;
        /**  Minimum width of the search view text entry area. 
         */
        public static final int search_view_text_min_width=0x7f0b0031;
        public static final int widget_big_font_size=0x7f0b002e;
        /**  Overload default clock widget parameters 
 Default clock parameters 
         */
        public static final int widget_label_font_size=0x7f0b002d;
    }
    public static final class drawable {
        public static final int ic_action_assist_generic=0x7f020000;
        public static final int ic_action_assist_generic_activated=0x7f020001;
        public static final int ic_action_assist_generic_normal=0x7f020002;
        public static final int ic_alarm_small=0x7f020003;
        /**  Alias used to reference framework drawable in keyguard. 
         */
        public static final int ic_contact_picture=0x7f020049;
        public static final int ic_facial_backup=0x7f020004;
        public static final int ic_input_delete=0x7f020005;
        public static final int ic_lockscreen_camera=0x7f020006;
        public static final int ic_lockscreen_camera_activated=0x7f020007;
        public static final int ic_lockscreen_camera_normal=0x7f020008;
        public static final int ic_lockscreen_emergencycall_normal=0x7f020009;
        public static final int ic_lockscreen_emergencycall_pressed=0x7f02000a;
        public static final int ic_lockscreen_glowdot=0x7f02000b;
        public static final int ic_lockscreen_google_activated=0x7f02000c;
        public static final int ic_lockscreen_google_focused=0x7f02000d;
        public static final int ic_lockscreen_google_normal=0x7f02000e;
        public static final int ic_lockscreen_handle=0x7f02000f;
        public static final int ic_lockscreen_handle_normal=0x7f020010;
        public static final int ic_lockscreen_handle_pressed=0x7f020011;
        public static final int ic_lockscreen_ime=0x7f020012;
        public static final int ic_lockscreen_lock_normal=0x7f020013;
        public static final int ic_lockscreen_lock_pressed=0x7f020014;
        public static final int ic_lockscreen_outerring=0x7f020015;
        public static final int ic_lockscreen_player_background=0x7f020016;
        public static final int ic_lockscreen_search_activated=0x7f020017;
        public static final int ic_lockscreen_search_normal=0x7f020018;
        public static final int ic_lockscreen_silent=0x7f020019;
        public static final int ic_lockscreen_silent_activated=0x7f02001a;
        public static final int ic_lockscreen_silent_focused=0x7f02001b;
        public static final int ic_lockscreen_silent_normal=0x7f02001c;
        public static final int ic_lockscreen_sim=0x7f02001d;
        public static final int ic_lockscreen_soundon=0x7f02001e;
        public static final int ic_lockscreen_soundon_activated=0x7f02001f;
        public static final int ic_lockscreen_soundon_focused=0x7f020020;
        public static final int ic_lockscreen_soundon_normal=0x7f020021;
        public static final int ic_lockscreen_unlock=0x7f020022;
        public static final int ic_lockscreen_unlock_activated=0x7f020023;
        public static final int ic_lockscreen_unlock_normal=0x7f020024;
        public static final int ic_lockscreen_unlock_phantom=0x7f020025;
        public static final int ic_media_next=0x7f020026;
        /**  Alias used to reference framework drawable in keyguard. 
         */
        public static final int ic_media_pause=0x7f020047;
        public static final int ic_media_play=0x7f020027;
        public static final int ic_media_previous=0x7f020028;
        /**  Alias used to reference framework drawable in keyguard. 
         */
        public static final int ic_media_stop=0x7f020048;
        public static final int intro_bg=0x7f020029;
        public static final int keyguard_add_widget_button=0x7f02002a;
        public static final int keyguard_expand_challenge_handle=0x7f02002b;
        public static final int kg_add_widget=0x7f02002c;
        public static final int kg_add_widget_disabled=0x7f02002d;
        public static final int kg_add_widget_pressed=0x7f02002e;
        public static final int kg_bouncer_bg_white=0x7f02002f;
        public static final int kg_security_grip=0x7f020030;
        public static final int kg_security_lock=0x7f020031;
        public static final int kg_security_lock_focused=0x7f020032;
        public static final int kg_security_lock_normal=0x7f020033;
        public static final int kg_security_lock_pressed=0x7f020034;
        public static final int kg_widget_bg_padded=0x7f020035;
        public static final int kg_widget_delete_drop_target=0x7f020036;
        public static final int lockscreen_emergency_button=0x7f020037;
        public static final int lockscreen_protection_pattern=0x7f020038;
        public static final int progress_bg_holo_light=0x7f020039;
        public static final int progress_primary_holo_light=0x7f02003a;
        public static final int progress_secondary_holo_light=0x7f02003b;
        public static final int scrubber_control_disabled_holo=0x7f02003c;
        public static final int scrubber_control_focused_holo=0x7f02003d;
        public static final int scrubber_control_normal_holo=0x7f02003e;
        public static final int scrubber_control_pressed_holo=0x7f02003f;
        public static final int scrubber_control_selector_holo=0x7f020040;
        public static final int scrubber_primary_holo=0x7f020041;
        public static final int scrubber_progress_horizontal_holo_light=0x7f020042;
        public static final int scrubber_secondary_holo=0x7f020043;
        public static final int scrubber_track_holo_light=0x7f020044;
        /**  Alias used to reference framework drawable in keyguard. 
         */
        public static final int stat_sys_warning=0x7f020046;
        public static final int sym_keyboard_return_holo=0x7f020045;
    }
    public static final class id {
        public static final int alarm_status=0x7f0a004d;
        public static final int app_widget_container=0x7f0a0029;
        public static final int artist_album=0x7f0a0055;
        public static final int badge=0x7f0a0051;
        public static final int bottom=0x7f0a0001;
        public static final int btn_next=0x7f0a005c;
        public static final int btn_play=0x7f0a005b;
        public static final int btn_prev=0x7f0a005a;
        public static final int carrier_text=0x7f0a001c;
        public static final int center=0x7f0a0008;
        public static final int center_horizontal=0x7f0a0006;
        public static final int center_vertical=0x7f0a0004;
        public static final int challenge=0x7f0a0010;
        public static final int clip_horizontal=0x7f0a000b;
        public static final int clip_vertical=0x7f0a000a;
        public static final int clock=0x7f0a0046;
        public static final int clock_view=0x7f0a0047;
        public static final int date_view=0x7f0a004c;
        public static final int delete_button=0x7f0a0039;
        public static final int emergency_call_button=0x7f0a001d;
        public static final int end=0x7f0a000d;
        public static final int expandChallengeHandle=0x7f0a0014;
        public static final int face_unlock_area_view=0x7f0a0021;
        public static final int face_unlock_cancel_button=0x7f0a0023;
        public static final int fill=0x7f0a0009;
        public static final int fill_horizontal=0x7f0a0007;
        public static final int fill_vertical=0x7f0a0005;
        public static final int forgot_password_button=0x7f0a001e;
        public static final int glow_pad_view=0x7f0a0025;
        public static final int info_container=0x7f0a0052;
        public static final int key0=0x7f0a0043;
        public static final int key1=0x7f0a003a;
        public static final int key2=0x7f0a003b;
        public static final int key3=0x7f0a003c;
        public static final int key4=0x7f0a003d;
        public static final int key5=0x7f0a003e;
        public static final int key6=0x7f0a003f;
        public static final int key7=0x7f0a0040;
        public static final int key8=0x7f0a0041;
        public static final int key9=0x7f0a0042;
        public static final int key_enter=0x7f0a0044;
        public static final int keyguard_account_view=0x7f0a0016;
        public static final int keyguard_add_widget=0x7f0a001a;
        public static final int keyguard_add_widget_view=0x7f0a001b;
        public static final int keyguard_bouncer_frame=0x7f0a0020;
        public static final int keyguard_face_unlock_view=0x7f0a001f;
        public static final int keyguard_host_view=0x7f0a0026;
        public static final int keyguard_message_area=0x7f0a002d;
        public static final int keyguard_password_view=0x7f0a0032;
        public static final int keyguard_pattern_view=0x7f0a0035;
        public static final int keyguard_pin_view=0x7f0a0037;
        public static final int keyguard_security_container=0x7f0a002a;
        public static final int keyguard_selector_fade_container=0x7f0a0024;
        public static final int keyguard_selector_view=0x7f0a0048;
        public static final int keyguard_selector_view_frame=0x7f0a0049;
        public static final int keyguard_sim_pin_view=0x7f0a004a;
        public static final int keyguard_sim_puk_view=0x7f0a004b;
        public static final int keyguard_status_view=0x7f0a004e;
        public static final int keyguard_status_view_face_palm=0x7f0a004f;
        public static final int keyguard_transport_control=0x7f0a0050;
        public static final int keyguard_user_avatar=0x7f0a002e;
        public static final int keyguard_user_name=0x7f0a002f;
        public static final int keyguard_user_selector=0x7f0a0030;
        public static final int keyguard_users_grid=0x7f0a0031;
        public static final int keyguard_widget_pager_delete_target=0x7f0a0028;
        public static final int left=0x7f0a0002;
        public static final int lockPatternView=0x7f0a0036;
        public static final int login=0x7f0a0017;
        public static final int metadata_container=0x7f0a0053;
        public static final int multi_pane_challenge=0x7f0a0027;
        public static final int none=0x7f0a000e;
        public static final int ok=0x7f0a0019;
        public static final int pageDeleteDropTarget=0x7f0a0015;
        public static final int password=0x7f0a0018;
        public static final int passwordEntry=0x7f0a0033;
        public static final int pinEntry=0x7f0a0038;
        public static final int presentation=0x7f0a0045;
        public static final int right=0x7f0a0003;
        public static final int scrim=0x7f0a0012;
        public static final int sliding_layout=0x7f0a002c;
        public static final int spotlightMask=0x7f0a0022;
        public static final int start=0x7f0a000c;
        public static final int switch_ime_button=0x7f0a0034;
        public static final int title=0x7f0a0054;
        public static final int top=0x7f0a0000;
        public static final int transient_seek=0x7f0a0056;
        public static final int transient_seek_bar=0x7f0a0057;
        public static final int transient_seek_time_elapsed=0x7f0a0058;
        public static final int transient_seek_time_remaining=0x7f0a0059;
        public static final int userSwitcher=0x7f0a0011;
        public static final int view_flipper=0x7f0a002b;
        public static final int widget=0x7f0a000f;
        public static final int widgets=0x7f0a0013;
    }
    public static final class integer {
        /**  Alias used to reference framework activity duration.  
         */
        public static final int config_activityDefaultDur=0x7f080000;
        public static final int kg_carousel_angle=0x7f080001;
        public static final int kg_glowpad_rotation_offset=0x7f080002;
        public static final int kg_security_flipper_weight=0x7f080005;
        /**  Gravity to make KeyguardSelectorView work in multiple orientations
        0x13 == "left|center_vertical" 
 Gravity to make KeyguardSelectorView work in multiple orientations
        0x31 == "top|center_horizontal" 
         */
        public static final int kg_selector_gravity=0x7f080003;
        public static final int kg_widget_region_weight=0x7f080004;
    }
    public static final class layout {
        public static final int keyguard_account_view=0x7f030000;
        public static final int keyguard_add_widget=0x7f030001;
        /**  Alias used to reference one of two possible layouts in keyguard.  
 Alias used to reference one of two possible layouts in keyguard.  
 Alias used to reference one of two possible layouts in keyguard.  
         */
        public static final int keyguard_eca=0x7f030018;
        public static final int keyguard_emergency_carrier_area=0x7f030002;
        public static final int keyguard_emergency_carrier_area_empty=0x7f030003;
        public static final int keyguard_face_unlock_view=0x7f030004;
        public static final int keyguard_glow_pad_container=0x7f030005;
        public static final int keyguard_glow_pad_view=0x7f030006;
        public static final int keyguard_host_view=0x7f030007;
        public static final int keyguard_message_area=0x7f030008;
        public static final int keyguard_message_area_large=0x7f030009;
        public static final int keyguard_multi_user_avatar=0x7f03000a;
        public static final int keyguard_multi_user_selector=0x7f03000b;
        public static final int keyguard_password_view=0x7f03000c;
        public static final int keyguard_pattern_view=0x7f03000d;
        public static final int keyguard_pin_view=0x7f03000e;
        public static final int keyguard_presentation=0x7f03000f;
        public static final int keyguard_selector_view=0x7f030010;
        public static final int keyguard_sim_pin_view=0x7f030011;
        public static final int keyguard_sim_puk_view=0x7f030012;
        public static final int keyguard_status_area=0x7f030013;
        public static final int keyguard_status_view=0x7f030014;
        public static final int keyguard_transport_control_view=0x7f030015;
        public static final int keyguard_widget_pager=0x7f030016;
        public static final int keyguard_widget_remove_drop_target=0x7f030017;
    }
    public static final class plurals {
        /**  Instructions telling the user that they entered the wrong SIM PIN while trying
         to unlock the keyguard.  Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_pin_code=0x7f0c0000;
        /**  Instructions telling the user that they entered the wrong puk while trying
         to unlock the keyguard.  Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_puk_code=0x7f0c0001;
    }
    public static final class string {
        /**  Skeleton string format for displaying the date. 
         */
        public static final int abbrev_wday_month_day_no_year=0x7f050011;
        public static final int add_widget_item=0x7f050008;
        public static final int app_name=0x7f050000;
        /**  Skeleton string format for displaying the time in 12-hour format. 
         */
        public static final int clock_12hr_format=0x7f050012;
        /**  Skeleton string format for displaying the time in 24-hour format. 
         */
        public static final int clock_24hr_format=0x7f050013;
        /**  Description of the down direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_down=0x7f05005f;
        /**  Description of the left direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_left=0x7f050060;
        /**  Description of the right direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_right=0x7f050061;
        /**  Description of the up direction in which one can to slide the handle in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_direction_up=0x7f05005e;
        /**  Description of the camera target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_camera=0x7f05005a;
        /**  Description of the unlock target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_search=0x7f05005d;
        /**  Description of the silent target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_silent=0x7f05005b;
        /**  Description of the sound on target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_soundon=0x7f05005c;
        /**  Description of the unlock target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_unlock=0x7f050059;
        public static final int do_keyguard=0x7f05000b;
        /**  Shown when face unlock failed multiple times so we're just using the backup 
         */
        public static final int faceunlock_multiple_failures=0x7f05001d;
        /**  Description of the Alt button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_alt=0x7f050052;
        /**  Description of the Cancel button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_cancel=0x7f050053;
        /**  Description of the Delete button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_delete=0x7f050054;
        /**  Description of the Done button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_done=0x7f050055;
        /**  Description of the Enter button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_enter=0x7f050058;
        /**  Description of the Mode change button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_mode_change=0x7f050056;
        /**  Description of the Shift button in a KeyboardView. [CHAR LIMIT=NONE] 
         */
        public static final int keyboardview_keycode_shift=0x7f050057;
        /**  Accessibility description of the lock media control widget. [CHAR_LIMIT=none] 
         */
        public static final int keygaurd_accessibility_media_controls=0x7f050037;
        /**  Accessibility description of the add widget button. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_add_widget=0x7f05002f;
        /**  Accessibility description of the camera widget. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_camera=0x7f050036;
        /**  Accessibility description announced when user drags widget away from delete drop target [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_accessibility_delete_widget_end=0x7f05004e;
        /**  Accessibility description announced when user drags widget over the delete drop target [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_accessibility_delete_widget_start=0x7f05004d;
        /**  Accessibility description of the button to expand the lock area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_expand_lock_area=0x7f05003b;
        /**  Accessibility description of the face unlock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_face_unlock=0x7f05003e;
        /**  Accessibility description for when the bouncer prompt is dismissed. [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_accessibility_hide_bouncer=0x7f05004c;
        /**  Accessibility description of the password lock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_password_unlock=0x7f050040;
        /**  Accessibility description of the unlock pattern area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_pattern_area=0x7f050041;
        /**  Accessibility description of the pattern unlock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_pattern_unlock=0x7f05003d;
        /**  Accessibility description of the pin lock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_pin_unlock=0x7f05003f;
        /**  Accessibility description for when the device prompts the user to dismiss keyguard
         in order to complete an action. This will be followed by a message about the current
         security option (e.g. "Pattern unlock."). [CHAR LIMIT=NONE] 
         */
        public static final int keyguard_accessibility_show_bouncer=0x7f05004b;
        /**  Accessibility description of the unlock slide area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_slide_area=0x7f050042;
        /**  Accessibility description of the slide unlock. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_slide_unlock=0x7f05003c;
        /**  Accessibility description of the lock screen status widget. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_status=0x7f050035;
        /**  Shown on transport control of lockscreen. Pressing button toggles the "heart" rating. 
         */
        public static final int keyguard_accessibility_transport_heart_description=0x7f05004a;
        /**  Shown on transport control of lockscreen. Pressing button goes to next track. 
         */
        public static final int keyguard_accessibility_transport_next_description=0x7f050044;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_accessibility_transport_pause_description=0x7f050045;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_accessibility_transport_play_description=0x7f050046;
        /**  Shown on transport control of lockscreen. Pressing button goes to previous track. 
         */
        public static final int keyguard_accessibility_transport_prev_description=0x7f050043;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_accessibility_transport_stop_description=0x7f050047;
        /**  Shown on transport control of lockscreen. Pressing button rates the track as "thumbs down." 
         */
        public static final int keyguard_accessibility_transport_thumbs_down_description=0x7f050049;
        /**  Shown on transport control of lockscreen. Pressing button rates the track as "thumbs up." 
         */
        public static final int keyguard_accessibility_transport_thumbs_up_description=0x7f050048;
        /**  Accessibility description of the event of collapsing an unlock area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_unlock_area_collapsed=0x7f050032;
        /**  Accessibility description of the event of expanding an unlock area. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_unlock_area_expanded=0x7f050031;
        /**  Accessibility description of the lock screen user selector widget. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_user_selector=0x7f050034;
        /**  Accessibility description of a lock screen widget. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget=0x7f050033;
        /**  Accessibility description sent when user changes the current lock screen widget. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_changed=0x7f05002e;
        /**  Accessibility description of the a widget deletion event. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_deleted=0x7f05003a;
        /**  Accessibility description of the empty sidget slot (place holder for a new widget). [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_empty_slot=0x7f050030;
        /**  Accessibility description of widget reordering end. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_reorder_end=0x7f050039;
        /**  Accessibility description of widget reordering start. [CHAR_LIMIT=none] 
         */
        public static final int keyguard_accessibility_widget_reorder_start=0x7f050038;
        /**  On the keyguard screen, it shows the carrier the phone is connected to.
        This is displayed if the phone is not connected to a carrier.
         */
        public static final int keyguard_carrier_default=0x7f05008f;
        /**  When the lock screen is showing, the phone is plugged in and the battery is fully
         charged, say that it is charged. 
         */
        public static final int keyguard_charged=0x7f05001e;
        /**  On the keyguard screen, when pattern lock is disabled, only tell them to press menu to unlock.  This is shown in small font at the bottom. 
         */
        public static final int keyguard_instructions_when_pattern_disabled=0x7f050021;
        /**  Instructions telling the user how to unlock the phone. 
         */
        public static final int keyguard_label_text=0x7f05001c;
        /**  When the lock screen is showing and the battery is low, warn user to plug
         in the phone soon. 
         */
        public static final int keyguard_low_battery=0x7f050020;
        /**  Shown to ask the user to insert a SIM card. 
         */
        public static final int keyguard_missing_sim_instructions=0x7f050025;
        /**  Shown to ask the user to insert a SIM card when sim is missing or not readable. 
         */
        public static final int keyguard_missing_sim_instructions_long=0x7f050026;
        /**  Shown when there is no SIM card. 
         */
        public static final int keyguard_missing_sim_message=0x7f050024;
        /**  Shown when there is no SIM card. 
         */
        public static final int keyguard_missing_sim_message_short=0x7f050023;
        /**  When the user inserts a sim card from an unsupported network, it becomes network locked 
         */
        public static final int keyguard_network_locked_message=0x7f050022;
        /**  Instructions telling the user to enter their text password to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_password_code=0x7f050019;
        /**  Instructions telling the user to enter their SIM PIN to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_pin_code=0x7f050014;
        /**  Instructions telling the user to enter their PIN password to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_pin_password_code=0x7f05001a;
        /**  Prompt to enter New SIM PIN in Edit Text Box in unlock screen 
         */
        public static final int keyguard_password_enter_pin_prompt=0x7f050017;
        /**  Instructions telling the user to enter their SIM PUK to unlock the keyguard.
         Displayed in one line in a large font.  
         */
        public static final int keyguard_password_enter_puk_code=0x7f050015;
        /**  Prompt to enter SIM PUK in Edit Text Box in unlock screen 
         */
        public static final int keyguard_password_enter_puk_prompt=0x7f050016;
        /**  Displayed as hint in passwordEntry EditText on PasswordUnlockScreen [CHAR LIMIT=30]
         */
        public static final int keyguard_password_entry_touch_hint=0x7f050018;
        /**  Instructions telling the user that they entered the wrong pin while trying
         to unlock the keyguard.  Displayed in one line in a large font.  
         */
        public static final int keyguard_password_wrong_pin_code=0x7f05001b;
        /**  Shown to inform the user to SIM card is permanently disabled. 
         */
        public static final int keyguard_permanent_disabled_sim_instructions=0x7f050028;
        /**  Shown when SIM card is permanently disabled. 
         */
        public static final int keyguard_permanent_disabled_sim_message_short=0x7f050027;
        /**  When the lock screen is showing and the phone plugged in, and the battery
         is not fully charged, show the current charge %.  
         */
        public static final int keyguard_plugged_in=0x7f05001f;
        /**  Shown to tell the user that their SIM is locked and they must unlock it. 
         */
        public static final int keyguard_sim_locked_message=0x7f050029;
        /**  When the user enters a wrong sim pin too many times, it becomes PUK locked (Pin Unlock Kode) 
         */
        public static final int keyguard_sim_puk_locked_message=0x7f05002a;
        /**  For the unlock screen, When the user enters a sim unlock code, it takes a little while to check
         whether it is valid, and to unlock the sim if it is valid.  we display a
         progress dialog in the meantime.  this is the emssage. 
         */
        public static final int keyguard_sim_unlock_progress_dialog_message=0x7f05002b;
        /**  Shown on transport control of lockscreen. Pressing button goes to next track. 
         */
        public static final int keyguard_transport_next_description=0x7f05008b;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_transport_pause_description=0x7f05008c;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_transport_play_description=0x7f05008d;
        /**  Transport control strings 
 Shown on transport control of lockscreen. Pressing button goes to previous track. 
         */
        public static final int keyguard_transport_prev_description=0x7f05008a;
        /**  Shown on transport control of lockscreen. Pressing button pauses playback 
         */
        public static final int keyguard_transport_stop_description=0x7f05008e;
        /**  Time format strings for fall-back clock widget 
         */
        public static final int keyguard_widget_12_hours_format=0x7f05002c;
        /**  Time format strings for fall-back clock widget 
         */
        public static final int keyguard_widget_24_hours_format=0x7f05002d;
        /**  Label shown on emergency call button in keyguard 
         */
        public static final int kg_emergency_call_label=0x7f050063;
        /**  Message shown when the user needs to confirm the PIN they just entered in the PUK screen 
         */
        public static final int kg_enter_confirm_pin_hint=0x7f05006f;
        /**  Message shown in dialog when user is almost at the limit where they will be
    locked out and may have to enter an alternate username/password to unlock the phone 
         */
        public static final int kg_failed_attempts_almost_at_login=0x7f050082;
        /**  Message shown when user is almost at the limit of password attempts where the device will be wiped. 
         */
        public static final int kg_failed_attempts_almost_at_wipe=0x7f050080;
        /**  Message shown in dialog when user has exceeded the maximum attempts and the device will now be wiped 
         */
        public static final int kg_failed_attempts_now_wiping=0x7f050081;
        /**  Message shown in pattern unlock after some number of unsuccessful attempts 
         */
        public static final int kg_forgot_pattern_button_text=0x7f050064;
        /**  String shown in PUK screen when PIN codes don't match 
         */
        public static final int kg_invalid_confirm_pin_hint=0x7f050074;
        /**  Message shown when the user enters an invalid PUK code 
         */
        public static final int kg_invalid_puk=0x7f050073;
        /**  Message shown when the user enters an invalid SIM pin password in PUK screen 
         */
        public static final int kg_invalid_sim_pin_hint=0x7f050071;
        /**  Message shown when the user enters an invalid PUK code in the PUK screen 
         */
        public static final int kg_invalid_sim_puk_hint=0x7f050072;
        /**  Hint text shown when user has too many failed password attempts in account unlock screen of keyguard 
         */
        public static final int kg_login_account_recovery_hint=0x7f05007b;
        /**  Message shown while device checks username/password in account unlock screen of keyguard 
         */
        public static final int kg_login_checking_password=0x7f05007c;
        /**  Instructions show in account unlock screen allowing user to enter their email password 
         */
        public static final int kg_login_instructions=0x7f050076;
        /**  Message shown when the user enters an invalid username/password combination in account unlock screen of keyguard 
         */
        public static final int kg_login_invalid_input=0x7f05007a;
        /**  Hint shown in TextView in account unlock screen of keyguard 
         */
        public static final int kg_login_password_hint=0x7f050078;
        /**  Label shown on sign in button on account unlock screen of keyguard 
         */
        public static final int kg_login_submit_button=0x7f050079;
        /**  Message shown when the user exceeds the maximum number of pattern attempts 
         */
        public static final int kg_login_too_many_attempts=0x7f050075;
        /**  Hint shown in TextView in account unlock screen of keyguard 
         */
        public static final int kg_login_username_hint=0x7f050077;
        /**  Instructions for using the password unlock screen 
         */
        public static final int kg_password_instructions=0x7f05006c;
        /**  Instructions telling the user that the operation to unlock the keyguard
         with SIM PIN failed. Displayed in one line in a large font.  
         */
        public static final int kg_password_pin_failed=0x7f050087;
        /**  Instructions telling the user that the operation to unlock the keyguard
         with PUK failed. Displayed in one line in a large font.  
         */
        public static final int kg_password_puk_failed=0x7f050088;
        public static final int kg_password_wrong_pin_code=0x7f050090;
        /**  Instructions telling the user that they entered the wrong SIM PIN for the last time.
         Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_pin_code_pukked=0x7f050085;
        /**  Instructions telling the user that they have exhausted SIM PUK retries and the SIM is now unusable.
         Displayed in a dialog box.  
         */
        public static final int kg_password_wrong_puk_code_dead=0x7f050086;
        /**  Instructions for using the pattern unlock screen 
         */
        public static final int kg_pattern_instructions=0x7f050069;
        /**  Notification telling the user that the PIN1 they entered is valid 
         */
        public static final int kg_pin_accepted=0x7f050089;
        /**  Instructions for using the PIN unlock screen 
         */
        public static final int kg_pin_instructions=0x7f05006b;
        /**  Hint shown in the PUK unlock screen PIN TextView 
         */
        public static final int kg_puk_enter_pin_hint=0x7f05006e;
        /**  Hint shown in the PUK screen that asks the user to enter the PUK code given to them by their provider 
         */
        public static final int kg_puk_enter_puk_hint=0x7f05006d;
        /**  The delete-widget drop target button text 
         */
        public static final int kg_reordering_delete_drop_target_text=0x7f050084;
        /**  Instructions for using the SIM PIN unlock screen 
         */
        public static final int kg_sim_pin_instructions=0x7f05006a;
        /**  Message shown in dialog while the device is unlocking the SIM card 
         */
        public static final int kg_sim_unlock_progress_dialog_message=0x7f050070;
        /**  Sequence of characters used to separate message strings in keyguard. Typically just em-dash
         with spaces on either side. [CHAR LIMIT=3] 
         */
        public static final int kg_text_message_separator=0x7f050083;
        /**  Countdown message shown after too many failed unlock attempts 
         */
        public static final int kg_too_many_failed_attempts_countdown=0x7f050068;
        /**  Message shown in dialog when max number of attempts are reached for password screen of keyguard 
         */
        public static final int kg_too_many_failed_password_attempts_dialog_message=0x7f05007e;
        public static final int kg_too_many_failed_pattern_attempts_dialog_message=0x7f05007f;
        /**  Message shown in dialog when max number of attempts are reached for PIN screen of keyguard 
         */
        public static final int kg_too_many_failed_pin_attempts_dialog_message=0x7f05007d;
        /**  Message shown when user enters wrong password 
         */
        public static final int kg_wrong_password=0x7f050066;
        /**  Message shown when user enters wrong pattern 
         */
        public static final int kg_wrong_pattern=0x7f050065;
        /**  Message shown when user enters wrong PIN 
         */
        public static final int kg_wrong_pin=0x7f050067;
        public static final int none_menu_item=0x7f050002;
        /**  Alias used to reference framework "OK" string in keyguard.  
         */
        public static final int ok=0x7f05000d;
        public static final int on_screen_turned_off=0x7f050009;
        public static final int on_screen_turned_on=0x7f05000a;
        /**  Label for "switch to alphabetic" key.  Must be short to fit on key! 
         */
        public static final int password_keyboard_label_alpha_key=0x7f050050;
        /**  Label for ALT modifier key.  Must be short to fit on key! 
         */
        public static final int password_keyboard_label_alt_key=0x7f050051;
        /**  Label for "switch to symbols" key.  Must be short to fit on key! 
         */
        public static final int password_keyboard_label_symbol_key=0x7f05004f;
        public static final int password_menu_item=0x7f050004;
        public static final int pattern_menu_item=0x7f050005;
        public static final int pin_menu_item=0x7f050003;
        public static final int secure_app_name=0x7f050001;
        public static final int sim_pin_menu_item=0x7f050006;
        public static final int sim_puk_menu_item=0x7f050007;
        /**  Alias used to reference framework "OK" string in keyguard.  
         */
        public static final int system_ui_date_pattern=0x7f05000e;
        /**  Text spoken when the current user is switched if accessibility is enabled. [CHAR LIMIT=none] 
         */
        public static final int user_switched=0x7f050062;
        public static final int verify_unlock=0x7f05000c;
        /**  Class name for default keyguard appwidget [DO NOT TRANSLATE] 
         */
        public static final int widget_default_class_name=0x7f050010;
        /**  Package name for default keyguard appwidget [DO NOT TRANSLATE] 
         */
        public static final int widget_default_package_name=0x7f05000f;
    }
    public static final class style {
        /**  Standard animations for a non-full-screen window or activity. 
         */
        public static final int Animation_LockScreen=0x7f0d0003;
        public static final int TextAppearance_NumPadKey=0x7f0d0001;
        public static final int TextAppearance_NumPadKey_Klondike=0x7f0d0002;
        /**  Keyguard PIN pad styles 
         */
        public static final int Widget_Button_NumPadKey=0x7f0d0000;
        public static final int Widget_TransportControl_SeekBar=0x7f0d0007;
        public static final int big_thin=0x7f0d0005;
        public static final int widget_big_thin=0x7f0d0006;
        /**  Built-in clock widget stuff 
         */
        public static final int widget_label=0x7f0d0004;
    }
    public static final class styleable {
        /** Attributes that can be used with a KeyguardGlowStripView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_dotSize com.android.keyguard:dotSize}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_glowDot com.android.keyguard:glowDot}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_leftToRight com.android.keyguard:leftToRight}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardGlowStripView_numDots com.android.keyguard:numDots}</code></td><td></td></tr>
           </table>
           @see #KeyguardGlowStripView_dotSize
           @see #KeyguardGlowStripView_glowDot
           @see #KeyguardGlowStripView_leftToRight
           @see #KeyguardGlowStripView_numDots
         */
        public static final int[] KeyguardGlowStripView = {
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007
        };
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#dotSize}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:dotSize
        */
        public static final int KeyguardGlowStripView_dotSize = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#glowDot}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.keyguard:glowDot
        */
        public static final int KeyguardGlowStripView_glowDot = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#leftToRight}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:leftToRight
        */
        public static final int KeyguardGlowStripView_leftToRight = 3;
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#numDots}
          attribute's value can be found in the {@link #KeyguardGlowStripView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:numDots
        */
        public static final int KeyguardGlowStripView_numDots = 1;
        /** Attributes that can be used with a KeyguardSecurityViewFlipper_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyguardSecurityViewFlipper_Layout_layout_maxHeight com.android.keyguard:layout_maxHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyguardSecurityViewFlipper_Layout_layout_maxWidth com.android.keyguard:layout_maxWidth}</code></td><td></td></tr>
           </table>
           @see #KeyguardSecurityViewFlipper_Layout_layout_maxHeight
           @see #KeyguardSecurityViewFlipper_Layout_layout_maxWidth
         */
        public static final int[] KeyguardSecurityViewFlipper_Layout = {
            0x7f010009, 0x7f01000b
        };
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#layout_maxHeight}
          attribute's value can be found in the {@link #KeyguardSecurityViewFlipper_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:layout_maxHeight
        */
        public static final int KeyguardSecurityViewFlipper_Layout_layout_maxHeight = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#layout_maxWidth}
          attribute's value can be found in the {@link #KeyguardSecurityViewFlipper_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:layout_maxWidth
        */
        public static final int KeyguardSecurityViewFlipper_Layout_layout_maxWidth = 1;
        /** Attributes that can be used with a MultiPaneChallengeLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_android_orientation android:orientation}</code></td><td> Influences how layout_centerWithinArea behaves </td></tr>
           </table>
           @see #MultiPaneChallengeLayout_android_orientation
         */
        public static final int[] MultiPaneChallengeLayout = {
            0x010100c4
        };
        /**
          <p>
          @attr description
           Influences how layout_centerWithinArea behaves 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#orientation}.
          @attr name android:orientation
        */
        public static final int MultiPaneChallengeLayout_android_orientation = 0;
        /** Attributes that can be used with a MultiPaneChallengeLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_centerWithinArea com.android.keyguard:layout_centerWithinArea}</code></td><td> Percentage of the screen this child should consume or center within.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_childType com.android.keyguard:layout_childType}</code></td><td> Some child types have special behavior.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_gravity com.android.keyguard:layout_gravity}</code></td><td> Standard gravity constant that a child supplies to its parent.</td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_maxHeight com.android.keyguard:layout_maxHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #MultiPaneChallengeLayout_Layout_layout_maxWidth com.android.keyguard:layout_maxWidth}</code></td><td></td></tr>
           </table>
           @see #MultiPaneChallengeLayout_Layout_layout_centerWithinArea
           @see #MultiPaneChallengeLayout_Layout_layout_childType
           @see #MultiPaneChallengeLayout_Layout_layout_gravity
           @see #MultiPaneChallengeLayout_Layout_layout_maxHeight
           @see #MultiPaneChallengeLayout_Layout_layout_maxWidth
         */
        public static final int[] MultiPaneChallengeLayout_Layout = {
            0x7f010000, 0x7f010008, 0x7f010009, 0x7f01000a,
            0x7f01000b
        };
        /**
          <p>
          @attr description
           Percentage of the screen this child should consume or center within.
             If 0/default, the view will be measured by standard rules
             as if this were a FrameLayout. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.keyguard:layout_centerWithinArea
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_centerWithinArea = 3;
        /**
          <p>
          @attr description
           Some child types have special behavior. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No special behavior. Layout will proceed as normal. </td></tr>
<tr><td><code>widget</code></td><td>1</td><td> Widget container.
             This will be resized in response to certain events. </td></tr>
<tr><td><code>challenge</code></td><td>2</td><td> Security challenge container.
             This will be dismissed/shown in response to certain events,
             possibly obscuring widget elements. </td></tr>
<tr><td><code>userSwitcher</code></td><td>3</td><td> User switcher.
             This will consume space from the total layout area. </td></tr>
<tr><td><code>scrim</code></td><td>4</td><td> Scrim. This will block access to child views that
             come before it in the child list in bouncer mode. </td></tr>
<tr><td><code>widgets</code></td><td>5</td><td> The home for widgets. All widgets will be descendents of this. </td></tr>
<tr><td><code>expandChallengeHandle</code></td><td>6</td><td> This is a handle that is used for expanding the
             security challenge container when it is collapsed. </td></tr>
<tr><td><code>pageDeleteDropTarget</code></td><td>7</td><td> Delete drop target.  This will be the drop target to delete pages. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.keyguard:layout_childType
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_childType = 1;
        /**
          <p>
          @attr description
           Standard gravity constant that a child supplies to its parent.
         Defines how the child view should be positioned, on both the X and Y axes, within its enclosing layout. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>0x30</td><td> Push object to the top of its container, not changing its size. </td></tr>
<tr><td><code>bottom</code></td><td>0x50</td><td> Push object to the bottom of its container, not changing its size. </td></tr>
<tr><td><code>left</code></td><td>0x03</td><td> Push object to the left of its container, not changing its size. </td></tr>
<tr><td><code>right</code></td><td>0x05</td><td> Push object to the right of its container, not changing its size. </td></tr>
<tr><td><code>center_vertical</code></td><td>0x10</td><td> Place object in the vertical center of its container, not changing its size. </td></tr>
<tr><td><code>fill_vertical</code></td><td>0x70</td><td> Grow the vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center_horizontal</code></td><td>0x01</td><td> Place object in the horizontal center of its container, not changing its size. </td></tr>
<tr><td><code>fill_horizontal</code></td><td>0x07</td><td> Grow the horizontal size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>center</code></td><td>0x11</td><td> Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. </td></tr>
<tr><td><code>fill</code></td><td>0x77</td><td> Grow the horizontal and vertical size of the object if needed so it completely fills its container. </td></tr>
<tr><td><code>clip_vertical</code></td><td>0x80</td><td> Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges. </td></tr>
<tr><td><code>clip_horizontal</code></td><td>0x08</td><td> Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges. </td></tr>
<tr><td><code>start</code></td><td>0x00800003</td><td> Push object to the beginning of its container, not changing its size. </td></tr>
<tr><td><code>end</code></td><td>0x00800005</td><td> Push object to the end of its container, not changing its size. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.keyguard:layout_gravity
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_gravity = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#layout_maxHeight}
          attribute's value can be found in the {@link #MultiPaneChallengeLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:layout_maxHeight
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_maxHeight = 2;
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#layout_maxWidth}
          attribute's value can be found in the {@link #MultiPaneChallengeLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:layout_maxWidth
        */
        public static final int MultiPaneChallengeLayout_Layout_layout_maxWidth = 4;
        /** Attributes that can be used with a NumPadKey.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #NumPadKey_digit com.android.keyguard:digit}</code></td><td></td></tr>
           <tr><td><code>{@link #NumPadKey_textView com.android.keyguard:textView}</code></td><td></td></tr>
           </table>
           @see #NumPadKey_digit
           @see #NumPadKey_textView
         */
        public static final int[] NumPadKey = {
            0x7f01000c, 0x7f01000d
        };
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#digit}
          attribute's value can be found in the {@link #NumPadKey} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:digit
        */
        public static final int NumPadKey_digit = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#textView}
          attribute's value can be found in the {@link #NumPadKey} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.android.keyguard:textView
        */
        public static final int NumPadKey_textView = 1;
        /**  PagedView specific attributes. These attributes are used to customize
         a PagedView view in XML files. 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PagedView_pageSpacing com.android.keyguard:pageSpacing}</code></td><td> The space between adjacent pages of the PagedView.</td></tr>
           <tr><td><code>{@link #PagedView_scrollIndicatorPaddingLeft com.android.keyguard:scrollIndicatorPaddingLeft}</code></td><td> The padding for the scroll indicator area </td></tr>
           <tr><td><code>{@link #PagedView_scrollIndicatorPaddingRight com.android.keyguard:scrollIndicatorPaddingRight}</code></td><td></td></tr>
           </table>
           @see #PagedView_pageSpacing
           @see #PagedView_scrollIndicatorPaddingLeft
           @see #PagedView_scrollIndicatorPaddingRight
         */
        public static final int[] PagedView = {
            0x7f010001, 0x7f010002, 0x7f010003
        };
        /**
          <p>
          @attr description
           The space between adjacent pages of the PagedView. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.keyguard:pageSpacing
        */
        public static final int PagedView_pageSpacing = 0;
        /**
          <p>
          @attr description
           The padding for the scroll indicator area 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.android.keyguard:scrollIndicatorPaddingLeft
        */
        public static final int PagedView_scrollIndicatorPaddingLeft = 1;
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#scrollIndicatorPaddingRight}
          attribute's value can be found in the {@link #PagedView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:scrollIndicatorPaddingRight
        */
        public static final int PagedView_scrollIndicatorPaddingRight = 2;
        /** Attributes that can be used with a SlidingChallengeLayout_Layout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SlidingChallengeLayout_Layout_layout_childType com.android.keyguard:layout_childType}</code></td><td> Some child types have special behavior.</td></tr>
           <tr><td><code>{@link #SlidingChallengeLayout_Layout_layout_maxHeight com.android.keyguard:layout_maxHeight}</code></td><td></td></tr>
           </table>
           @see #SlidingChallengeLayout_Layout_layout_childType
           @see #SlidingChallengeLayout_Layout_layout_maxHeight
         */
        public static final int[] SlidingChallengeLayout_Layout = {
            0x7f010008, 0x7f010009
        };
        /**
          <p>
          @attr description
           Some child types have special behavior. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> No special behavior. Layout will proceed as normal. </td></tr>
<tr><td><code>widget</code></td><td>1</td><td> Widget container.
             This will be resized in response to certain events. </td></tr>
<tr><td><code>challenge</code></td><td>2</td><td> Security challenge container.
             This will be dismissed/shown in response to certain events,
             possibly obscuring widget elements. </td></tr>
<tr><td><code>userSwitcher</code></td><td>3</td><td> User switcher.
             This will consume space from the total layout area. </td></tr>
<tr><td><code>scrim</code></td><td>4</td><td> Scrim. This will block access to child views that
             come before it in the child list in bouncer mode. </td></tr>
<tr><td><code>widgets</code></td><td>5</td><td> The home for widgets. All widgets will be descendents of this. </td></tr>
<tr><td><code>expandChallengeHandle</code></td><td>6</td><td> This is a handle that is used for expanding the
             security challenge container when it is collapsed. </td></tr>
<tr><td><code>pageDeleteDropTarget</code></td><td>7</td><td> Delete drop target.  This will be the drop target to delete pages. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.android.keyguard:layout_childType
        */
        public static final int SlidingChallengeLayout_Layout_layout_childType = 0;
        /**
          <p>This symbol is the offset where the {@link com.android.keyguard.R.attr#layout_maxHeight}
          attribute's value can be found in the {@link #SlidingChallengeLayout_Layout} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.android.keyguard:layout_maxHeight
        */
        public static final int SlidingChallengeLayout_Layout_layout_maxHeight = 1;
    };
}
