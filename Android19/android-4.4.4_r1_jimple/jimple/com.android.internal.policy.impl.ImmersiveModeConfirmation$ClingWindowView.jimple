class com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView extends android.widget.FrameLayout
{
    private static final int BGCOLOR;
    private static final int OFFSET_DP;
    private android.view.ViewGroup mClingLayout;
    private final android.graphics.drawable.ColorDrawable mColor;
    private android.animation.ValueAnimator mColorAnim;
    private final java.lang.Runnable mConfirm;
    private android.content.BroadcastReceiver mReceiver;
    private java.lang.Runnable mUpdateLayoutRunnable;
    final com.android.internal.policy.impl.ImmersiveModeConfirmation this$0;

    public void <init>(com.android.internal.policy.impl.ImmersiveModeConfirmation, android.content.Context, java.lang.Runnable)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView r0;
        com.android.internal.policy.impl.ImmersiveModeConfirmation r1;
        android.content.Context r2;
        java.lang.Runnable r3;
        android.graphics.drawable.ColorDrawable $r4, $r7;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$1 $r5;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$2 $r6;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView;

        r1 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: java.lang.Runnable;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: com.android.internal.policy.impl.ImmersiveModeConfirmation this$0> = r1;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r2);

        $r4 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r4.<android.graphics.drawable.ColorDrawable: void <init>(int)>(0);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.graphics.drawable.ColorDrawable mColor> = $r4;

        $r5 = new com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$1;

        specialinvoke $r5.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$1: void <init>(com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView)>(r0);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: java.lang.Runnable mUpdateLayoutRunnable> = $r5;

        $r6 = new com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$2;

        specialinvoke $r6.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$2: void <init>(com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView)>(r0);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.content.BroadcastReceiver mReceiver> = $r6;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: java.lang.Runnable mConfirm> = r3;

        virtualinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: void setClickable(boolean)>(1);

        $r7 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.graphics.drawable.ColorDrawable mColor>;

        virtualinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: void setBackground(android.graphics.drawable.Drawable)>($r7);

        return;
    }

    static android.view.ViewGroup access$100(com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView r0;
        android.view.ViewGroup $r1;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.view.ViewGroup mClingLayout>;

        return $r1;
    }

    static java.lang.Runnable access$200(com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: java.lang.Runnable mUpdateLayoutRunnable>;

        return $r1;
    }

    static java.lang.Runnable access$400(com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: java.lang.Runnable mConfirm>;

        return $r1;
    }

    static android.graphics.drawable.ColorDrawable access$500(com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView r0;
        android.graphics.drawable.ColorDrawable $r1;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.graphics.drawable.ColorDrawable mColor>;

        return $r1;
    }

    public void onAttachedToWindow()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView r0;
        android.util.DisplayMetrics r1, $r6;
        float f0, $f1, $f2;
        android.widget.Button r2;
        android.view.View r3, $r11, $r15;
        android.animation.ArgbEvaluator r4, $r39;
        java.lang.Object[] r5;
        com.android.internal.policy.impl.ImmersiveModeConfirmation $r7, $r17;
        android.view.WindowManager $r8;
        android.view.Display $r9;
        android.content.Context $r10, $r22;
        android.view.ViewGroup $r12, $r13, $r16, $r23;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$3 $r14;
        boolean $z0;
        android.widget.FrameLayout$LayoutParams $r18;
        android.content.IntentFilter $r19;
        android.graphics.drawable.ColorDrawable $r20;
        android.content.BroadcastReceiver $r21;
        android.view.ViewPropertyAnimator $r25, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37;
        android.view.animation.DecelerateInterpolator $r27, $r34;
        java.lang.Integer $r38, $r43;
        android.animation.ValueAnimator $r40, $r42, $r44, $r46;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$4 $r41;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView;

        specialinvoke r0.<android.widget.FrameLayout: void onAttachedToWindow()>();

        $r6 = new android.util.DisplayMetrics;

        specialinvoke $r6.<android.util.DisplayMetrics: void <init>()>();

        r1 = $r6;

        $r7 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: com.android.internal.policy.impl.ImmersiveModeConfirmation this$0>;

        $r8 = staticinvoke <com.android.internal.policy.impl.ImmersiveModeConfirmation: android.view.WindowManager access$300(com.android.internal.policy.impl.ImmersiveModeConfirmation)>($r7);

        $r9 = interfaceinvoke $r8.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r9.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        f0 = r1.<android.util.DisplayMetrics: float density>;

        $r10 = virtualinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.content.Context getContext()>();

        $r11 = staticinvoke <android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>($r10, 17367115, null);

        $r12 = (android.view.ViewGroup) $r11;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.view.ViewGroup mClingLayout> = $r12;

        $r13 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.view.ViewGroup mClingLayout>;

        $r15 = virtualinvoke $r13.<android.view.ViewGroup: android.view.View findViewById(int)>(16908977);

        r2 = (android.widget.Button) $r15;

        $r14 = new com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$3;

        specialinvoke $r14.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$3: void <init>(com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView)>(r0);

        virtualinvoke r2.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r14);

        $r16 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.view.ViewGroup mClingLayout>;

        $r17 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: com.android.internal.policy.impl.ImmersiveModeConfirmation this$0>;

        $r18 = virtualinvoke $r17.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.widget.FrameLayout$LayoutParams getBubbleLayoutParams()>();

        virtualinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r16, $r18);

        $z0 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z0 == 0 goto label2;

        $r23 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.view.ViewGroup mClingLayout>;

        r3 = virtualinvoke $r23.<android.view.ViewGroup: android.view.View findViewById(int)>(16908358);

        virtualinvoke r3.<android.view.View: void setAlpha(float)>(0.0F);

        $f1 = -48.0F * f0;

        virtualinvoke r3.<android.view.View: void setTranslationY(float)>($f1);

        $r26 = virtualinvoke r3.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r25 = virtualinvoke $r26.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r29 = virtualinvoke $r25.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>(0.0F);

        $r30 = virtualinvoke $r29.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(300L);

        $r27 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r27.<android.view.animation.DecelerateInterpolator: void <init>()>();

        $r28 = virtualinvoke $r30.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r27);

        virtualinvoke $r28.<android.view.ViewPropertyAnimator: void start()>();

        virtualinvoke r2.<android.widget.Button: void setAlpha(float)>(0.0F);

        $f2 = -48.0F * f0;

        virtualinvoke r2.<android.widget.Button: void setTranslationY(float)>($f2);

        $r33 = virtualinvoke r2.<android.widget.Button: android.view.ViewPropertyAnimator animate()>();

        $r31 = virtualinvoke $r33.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r32 = virtualinvoke $r31.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>(0.0F);

        $r36 = virtualinvoke $r32.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(300L);

        $r37 = virtualinvoke $r36.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>(200L);

        $r34 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r34.<android.view.animation.DecelerateInterpolator: void <init>()>();

        $r35 = virtualinvoke $r37.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r34);

        virtualinvoke $r35.<android.view.ViewPropertyAnimator: void start()>();

        $r39 = new android.animation.ArgbEvaluator;

        specialinvoke $r39.<android.animation.ArgbEvaluator: void <init>()>();

        r4 = $r39;

        r5 = newarray (java.lang.Object)[2];

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r5[0] = $r38;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        r5[1] = $r43;

        $r42 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[])>(r4, r5);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.animation.ValueAnimator mColorAnim> = $r42;

        $r40 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.animation.ValueAnimator mColorAnim>;

        $r41 = new com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$4;

        specialinvoke $r41.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView$4: void <init>(com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView)>(r0);

        virtualinvoke $r40.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r41);

        $r46 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.animation.ValueAnimator mColorAnim>;

        virtualinvoke $r46.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(1000L);

        $r44 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.animation.ValueAnimator mColorAnim>;

        virtualinvoke $r44.<android.animation.ValueAnimator: void start()>();

     label1:
        $r22 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.content.Context mContext>;

        $r21 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.content.BroadcastReceiver mReceiver>;

        $r19 = new android.content.IntentFilter;

        specialinvoke $r19.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.CONFIGURATION_CHANGED");

        virtualinvoke $r22.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r21, $r19);

        return;

     label2:
        $r20 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.graphics.drawable.ColorDrawable mColor>;

        virtualinvoke $r20.<android.graphics.drawable.ColorDrawable: void setColor(int)>(-2147483648);

        goto label1;
    }

    public void onDetachedFromWindow()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView r0;
        android.content.BroadcastReceiver $r1;
        android.content.Context $r2;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView;

        $r2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.content.Context mContext>;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke $r2.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r1);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView r0;
        android.view.MotionEvent r1;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView;

        r1 := @parameter0: android.view.MotionEvent;

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ImmersiveModeConfirmation", "ClingWindowView.onTouchEvent");

        return 1;
    }

    public static void <clinit>()
    {
        <com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: int OFFSET_DP> = 48;

        <com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: int BGCOLOR> = -2147483648;

        return;
    }
}
