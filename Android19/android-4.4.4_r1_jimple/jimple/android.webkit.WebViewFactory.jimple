public final class android.webkit.WebViewFactory extends java.lang.Object
{
    private static final java.lang.String CHROMIUM_WEBVIEW_FACTORY;
    private static final boolean DEBUG;
    private static final java.lang.String LOGTAG;
    private static android.webkit.WebViewFactoryProvider sProviderInstance;
    private static final java.lang.Object sProviderLock;

    static void <clinit>()
    {
        java.lang.Object $r0;

        <android.webkit.WebViewFactory: java.lang.String LOGTAG> = "WebViewFactory";

        <android.webkit.WebViewFactory: boolean DEBUG> = 0;

        <android.webkit.WebViewFactory: java.lang.String CHROMIUM_WEBVIEW_FACTORY> = "com.android.webview.chromium.WebViewChromiumFactoryProvider";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <android.webkit.WebViewFactory: java.lang.Object sProviderLock> = $r0;

        return;
    }

    public void <init>()
    {
        android.webkit.WebViewFactory r0;

        r0 := @this: android.webkit.WebViewFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Class access$000() throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r0;

        $r0 = staticinvoke <android.webkit.WebViewFactory: java.lang.Class getFactoryClass()>();

        return $r0;
    }

    private static java.lang.Class getFactoryClass() throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r0;

        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.android.webview.chromium.WebViewChromiumFactoryProvider");

        return $r0;
    }

    static android.webkit.WebViewFactoryProvider getProvider()
    {
        java.lang.Object r0, $r12;
        java.lang.Throwable r1, r5, $r19, $r20;
        java.lang.ClassNotFoundException r2, $r21;
        java.lang.Class r3, $r14;
        android.os.StrictMode$ThreadPolicy r4;
        java.lang.Exception r6, $r17;
        android.webkit.WebViewFactoryProvider r7, r8, r9, $r10, $r11, $r13, $r15, $r16;
        android.util.AndroidRuntimeException $r18, $r22;

        r0 = <android.webkit.WebViewFactory: java.lang.Object sProviderLock>;

        entermonitor r0;

     label01:
        $r10 = <android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider sProviderInstance>;

        if $r10 == null goto label03;

        r9 = <android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider sProviderInstance>;

        exitmonitor r0;

     label02:
        return r9;

     label03:
        r3 = staticinvoke <android.webkit.WebViewFactory: java.lang.Class getFactoryClass()>();

     label04:
        $r11 = <android.webkit.WebViewFactory$Preloader: android.webkit.WebViewFactoryProvider sPreloadedProvider>;

        if $r11 == null goto label11;

        $r15 = <android.webkit.WebViewFactory$Preloader: android.webkit.WebViewFactoryProvider sPreloadedProvider>;

        $r14 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        if $r14 != r3 goto label11;

        $r16 = <android.webkit.WebViewFactory$Preloader: android.webkit.WebViewFactoryProvider sPreloadedProvider>;

        <android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider sProviderInstance> = $r16;

        r8 = <android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider sProviderInstance>;

        exitmonitor r0;

     label05:
        return r8;

     label06:
        $r19 := @caughtexception;

        r1 = $r19;

     label07:
        exitmonitor r0;

     label08:
        throw r1;

     label09:
        $r21 := @caughtexception;

        r2 = $r21;

     label10:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WebViewFactory", "error loading provider", r2);

        $r22 = new android.util.AndroidRuntimeException;

        specialinvoke $r22.<android.util.AndroidRuntimeException: void <init>(java.lang.Exception)>(r2);

        throw $r22;

     label11:
        r4 = staticinvoke <android.os.StrictMode: android.os.StrictMode$ThreadPolicy allowThreadDiskReads()>();

     label12:
        $r12 = virtualinvoke r3.<java.lang.Class: java.lang.Object newInstance()>();

        $r13 = (android.webkit.WebViewFactoryProvider) $r12;

        <android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider sProviderInstance> = $r13;

        r7 = <android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider sProviderInstance>;

     label13:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r4);

        exitmonitor r0;

     label14:
        return r7;

     label15:
        $r17 := @caughtexception;

        r6 = $r17;

     label16:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WebViewFactory", "error instantiating provider", r6);

        $r18 = new android.util.AndroidRuntimeException;

        specialinvoke $r18.<android.util.AndroidRuntimeException: void <init>(java.lang.Exception)>(r6);

        throw $r18;

     label17:
        $r20 := @caughtexception;

        r5 = $r20;

     label18:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>(r4);

     label19:
        throw r5;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.ClassNotFoundException from label03 to label04 with label09;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label10 to label11 with label06;
        catch java.lang.Throwable from label11 to label12 with label06;
        catch java.lang.Exception from label12 to label13 with label15;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label06;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.lang.Throwable from label18 to label19 with label06;
    }

    public static boolean isExperimentalWebViewAvailable()
    {
        return 0;
    }

    public static boolean isUseExperimentalWebViewSet()
    {
        return 0;
    }

    public static void setUseExperimentalWebView(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        return;
    }

    public static boolean useExperimentalWebView()
    {
        return 1;
    }
}
