public class android.widget.CheckedTextView extends android.widget.TextView implements android.widget.Checkable
{
    private static final int[] CHECKED_STATE_SET;
    private int mBasePadding;
    private android.graphics.drawable.Drawable mCheckMarkDrawable;
    private int mCheckMarkResource;
    private int mCheckMarkWidth;
    private boolean mChecked;
    private boolean mNeedRequestlayout;

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <android.widget.CheckedTextView: int[] CHECKED_STATE_SET> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.widget.CheckedTextView r0;
        android.content.Context r1;

        r0 := @this: android.widget.CheckedTextView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.CheckedTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.CheckedTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843720);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.CheckedTextView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        android.content.res.TypedArray r3;
        android.graphics.drawable.Drawable r4;
        int[] $r5;
        boolean $z0;

        r0 := @this: android.widget.CheckedTextView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r5 = <com.android.internal.R$styleable: int[] CheckedTextView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, i0, 0);

        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(1);

        if r4 == null goto label1;

        virtualinvoke r0.<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>(r4);

     label1:
        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        virtualinvoke r0.<android.widget.CheckedTextView: void setChecked(boolean)>($z0);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void setBasePadding(boolean)
    {
        android.widget.CheckedTextView r0;
        boolean z0;
        int $i0, $i1;

        r0 := @this: android.widget.CheckedTextView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i1 = r0.<android.widget.CheckedTextView: int mPaddingLeft>;

        r0.<android.widget.CheckedTextView: int mBasePadding> = $i1;

        return;

     label1:
        $i0 = r0.<android.widget.CheckedTextView: int mPaddingRight>;

        r0.<android.widget.CheckedTextView: int mBasePadding> = $i0;

        return;
    }

    private void updatePadding()
    {
        android.widget.CheckedTextView r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.CheckedTextView;

        z0 = 1;

        virtualinvoke r0.<android.widget.CheckedTextView: void resetPaddingToInitialValues()>();

        $r1 = r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        if $r1 == null goto label5;

        $i4 = r0.<android.widget.CheckedTextView: int mCheckMarkWidth>;

        $i3 = r0.<android.widget.CheckedTextView: int mBasePadding>;

        i0 = $i4 + $i3;

     label1:
        $z3 = virtualinvoke r0.<android.widget.CheckedTextView: boolean isLayoutRtl()>();

        if $z3 == 0 goto label7;

        z2 = r0.<android.widget.CheckedTextView: boolean mNeedRequestlayout>;

        $i2 = r0.<android.widget.CheckedTextView: int mPaddingLeft>;

        if $i2 == i0 goto label6;

     label2:
        $z6 = z0 | z2;

        r0.<android.widget.CheckedTextView: boolean mNeedRequestlayout> = $z6;

        r0.<android.widget.CheckedTextView: int mPaddingLeft> = i0;

     label3:
        $z5 = r0.<android.widget.CheckedTextView: boolean mNeedRequestlayout>;

        if $z5 == 0 goto label4;

        virtualinvoke r0.<android.widget.CheckedTextView: void requestLayout()>();

        r0.<android.widget.CheckedTextView: boolean mNeedRequestlayout> = 0;

     label4:
        return;

     label5:
        i0 = r0.<android.widget.CheckedTextView: int mBasePadding>;

        goto label1;

     label6:
        z0 = 0;

        goto label2;

     label7:
        z1 = r0.<android.widget.CheckedTextView: boolean mNeedRequestlayout>;

        $i1 = r0.<android.widget.CheckedTextView: int mPaddingRight>;

        if $i1 == i0 goto label9;

     label8:
        $z4 = z0 | z1;

        r0.<android.widget.CheckedTextView: boolean mNeedRequestlayout> = $z4;

        r0.<android.widget.CheckedTextView: int mPaddingRight> = i0;

        goto label3;

     label9:
        z0 = 0;

        goto label8;
    }

    protected void drawableStateChanged()
    {
        android.widget.CheckedTextView r0;
        int[] r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.CheckedTextView;

        specialinvoke r0.<android.widget.TextView: void drawableStateChanged()>();

        $r2 = r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        if $r2 == null goto label1;

        r1 = virtualinvoke r0.<android.widget.CheckedTextView: int[] getDrawableState()>();

        $r3 = r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

        virtualinvoke r0.<android.widget.CheckedTextView: void invalidate()>();

     label1:
        return;
    }

    public android.graphics.drawable.Drawable getCheckMarkDrawable()
    {
        android.widget.CheckedTextView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.CheckedTextView;

        $r1 = r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        return $r1;
    }

    protected void internalSetPadding(int, int, int, int)
    {
        android.widget.CheckedTextView r0;
        int i0, i1, i2, i3;
        boolean $z0;

        r0 := @this: android.widget.CheckedTextView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.widget.TextView: void internalSetPadding(int,int,int,int)>(i0, i1, i2, i3);

        $z0 = virtualinvoke r0.<android.widget.CheckedTextView: boolean isLayoutRtl()>();

        specialinvoke r0.<android.widget.CheckedTextView: void setBasePadding(boolean)>($z0);

        return;
    }

    public boolean isChecked()
    {
        android.widget.CheckedTextView r0;
        boolean $z0;

        r0 := @this: android.widget.CheckedTextView;

        $z0 = r0.<android.widget.CheckedTextView: boolean mChecked>;

        return $z0;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.CheckedTextView r0;
        int i0, $i1;
        int[] r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.CheckedTextView;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        r1 = specialinvoke r0.<android.widget.TextView: int[] onCreateDrawableState(int)>($i1);

        $z0 = virtualinvoke r0.<android.widget.CheckedTextView: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = <android.widget.CheckedTextView: int[] CHECKED_STATE_SET>;

        staticinvoke <android.widget.CheckedTextView: int[] mergeDrawableStates(int[],int[])>(r1, $r2);

     label1:
        return r1;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.CheckedTextView r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean z0;

        r0 := @this: android.widget.CheckedTextView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.TextView: void onDraw(android.graphics.Canvas)>(r1);

        r2 = r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        if r2 == null goto label3;

        $i8 = virtualinvoke r0.<android.widget.CheckedTextView: int getGravity()>();

        i0 = 112 & $i8;

        i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i2 = 0;

        lookupswitch(i0)
        {
            case 16: goto label5;
            case 80: goto label4;
            default: goto label1;
        };

     label1:
        z0 = virtualinvoke r0.<android.widget.CheckedTextView: boolean isLayoutRtl()>();

        i3 = virtualinvoke r0.<android.widget.CheckedTextView: int getWidth()>();

        i4 = i2;

        i5 = i4 + i1;

        if z0 == 0 goto label6;

        i7 = r0.<android.widget.CheckedTextView: int mBasePadding>;

        $i17 = r0.<android.widget.CheckedTextView: int mCheckMarkWidth>;

        i6 = i7 + $i17;

     label2:
        $i13 = r0.<android.widget.CheckedTextView: int mScrollX>;

        $i14 = i7 + $i13;

        $i12 = r0.<android.widget.CheckedTextView: int mScrollX>;

        $i15 = i6 + $i12;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i14, i4, $i15, i5);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label3:
        return;

     label4:
        $i9 = virtualinvoke r0.<android.widget.CheckedTextView: int getHeight()>();

        i2 = $i9 - i1;

        goto label1;

     label5:
        $i16 = virtualinvoke r0.<android.widget.CheckedTextView: int getHeight()>();

        $i18 = $i16 - i1;

        i2 = $i18 / 2;

        goto label1;

     label6:
        $i11 = r0.<android.widget.CheckedTextView: int mBasePadding>;

        i6 = i3 - $i11;

        $i10 = r0.<android.widget.CheckedTextView: int mCheckMarkWidth>;

        i7 = i6 - $i10;

        goto label2;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.CheckedTextView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.widget.CheckedTextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.TextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/CheckedTextView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        $z0 = r0.<android.widget.CheckedTextView: boolean mChecked>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setChecked(boolean)>($z0);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.CheckedTextView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: android.widget.CheckedTextView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/CheckedTextView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>(1);

        $z0 = r0.<android.widget.CheckedTextView: boolean mChecked>;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>($z0);

        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.CheckedTextView r0;
        int i0;

        r0 := @this: android.widget.CheckedTextView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.TextView: void onRtlPropertiesChanged(int)>(i0);

        specialinvoke r0.<android.widget.CheckedTextView: void updatePadding()>();

        return;
    }

    public void setCheckMarkDrawable(int)
    {
        android.widget.CheckedTextView r0;
        int i0, i1, $i2, $i3;
        android.graphics.drawable.Drawable r1;
        android.content.res.Resources $r2;

        r0 := @this: android.widget.CheckedTextView;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $i3 = r0.<android.widget.CheckedTextView: int mCheckMarkResource>;

        if i0 != $i3 goto label1;

        return;

     label1:
        r0.<android.widget.CheckedTextView: int mCheckMarkResource> = i0;

        i1 = r0.<android.widget.CheckedTextView: int mCheckMarkResource>;

        r1 = null;

        if i1 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.widget.CheckedTextView: android.content.res.Resources getResources()>();

        $i2 = r0.<android.widget.CheckedTextView: int mCheckMarkResource>;

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i2);

     label2:
        virtualinvoke r0.<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setCheckMarkDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.CheckedTextView r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r6, $r7;
        boolean z0, z1;
        int $i0, $i1, $i2;
        int[] $r4, $r5;

        r0 := @this: android.widget.CheckedTextView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        z0 = 1;

        $r2 = r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        if $r2 == null goto label1;

        $r6 = r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r7 = r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        virtualinvoke r0.<android.widget.CheckedTextView: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r7);

     label1:
        $r3 = r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable>;

        if r1 == $r3 goto label5;

        z1 = 1;

     label2:
        r0.<android.widget.CheckedTextView: boolean mNeedRequestlayout> = z1;

        if r1 == null goto label7;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $i0 = virtualinvoke r0.<android.widget.CheckedTextView: int getVisibility()>();

        if $i0 != 0 goto label6;

     label3:
        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, 0);

        $r4 = <android.widget.CheckedTextView: int[] CHECKED_STATE_SET>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r4);

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        virtualinvoke r0.<android.widget.CheckedTextView: void setMinHeight(int)>($i1);

        $i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        r0.<android.widget.CheckedTextView: int mCheckMarkWidth> = $i2;

        $r5 = virtualinvoke r0.<android.widget.CheckedTextView: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r5);

     label4:
        r0.<android.widget.CheckedTextView: android.graphics.drawable.Drawable mCheckMarkDrawable> = r1;

        virtualinvoke r0.<android.widget.CheckedTextView: void resolvePadding()>();

        return;

     label5:
        z1 = 0;

        goto label2;

     label6:
        z0 = 0;

        goto label3;

     label7:
        r0.<android.widget.CheckedTextView: int mCheckMarkWidth> = 0;

        goto label4;
    }

    public void setChecked(boolean)
    {
        android.widget.CheckedTextView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.CheckedTextView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.CheckedTextView: boolean mChecked>;

        if $z1 == z0 goto label1;

        r0.<android.widget.CheckedTextView: boolean mChecked> = z0;

        virtualinvoke r0.<android.widget.CheckedTextView: void refreshDrawableState()>();

        virtualinvoke r0.<android.widget.CheckedTextView: void notifyViewAccessibilityStateChangedIfNeeded(int)>(0);

     label1:
        return;
    }

    public void toggle()
    {
        android.widget.CheckedTextView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.CheckedTextView;

        $z1 = r0.<android.widget.CheckedTextView: boolean mChecked>;

        if $z1 != 0 goto label2;

        z0 = 1;

     label1:
        virtualinvoke r0.<android.widget.CheckedTextView: void setChecked(boolean)>(z0);

        return;

     label2:
        z0 = 0;

        goto label1;
    }
}
