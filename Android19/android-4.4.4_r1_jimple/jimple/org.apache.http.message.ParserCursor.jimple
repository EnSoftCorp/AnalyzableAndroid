public class org.apache.http.message.ParserCursor extends java.lang.Object
{
    private final int lowerBound;
    private int pos;
    private final int upperBound;

    public void <init>(int, int)
    {
        org.apache.http.message.ParserCursor r0;
        int i0, i1;
        java.lang.IndexOutOfBoundsException $r1, $r2;

        r0 := @this: org.apache.http.message.ParserCursor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 >= 0 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Lower bound cannot be negative");

        throw $r2;

     label1:
        if i0 <= i1 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Lower bound cannot be greater then upper bound");

        throw $r1;

     label2:
        r0.<org.apache.http.message.ParserCursor: int lowerBound> = i0;

        r0.<org.apache.http.message.ParserCursor: int upperBound> = i1;

        r0.<org.apache.http.message.ParserCursor: int pos> = i0;

        return;
    }

    public boolean atEnd()
    {
        org.apache.http.message.ParserCursor r0;
        int $i0, $i1;

        r0 := @this: org.apache.http.message.ParserCursor;

        $i1 = r0.<org.apache.http.message.ParserCursor: int pos>;

        $i0 = r0.<org.apache.http.message.ParserCursor: int upperBound>;

        if $i1 < $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int getLowerBound()
    {
        org.apache.http.message.ParserCursor r0;
        int $i0;

        r0 := @this: org.apache.http.message.ParserCursor;

        $i0 = r0.<org.apache.http.message.ParserCursor: int lowerBound>;

        return $i0;
    }

    public int getPos()
    {
        org.apache.http.message.ParserCursor r0;
        int $i0;

        r0 := @this: org.apache.http.message.ParserCursor;

        $i0 = r0.<org.apache.http.message.ParserCursor: int pos>;

        return $i0;
    }

    public int getUpperBound()
    {
        org.apache.http.message.ParserCursor r0;
        int $i0;

        r0 := @this: org.apache.http.message.ParserCursor;

        $i0 = r0.<org.apache.http.message.ParserCursor: int upperBound>;

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.http.message.ParserCursor r0;
        org.apache.http.util.CharArrayBuffer r1, $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.http.message.ParserCursor;

        $r2 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r2.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(16);

        r1 = $r2;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(char)>(91);

        $i0 = r0.<org.apache.http.message.ParserCursor: int lowerBound>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r3);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(char)>(62);

        $i1 = r0.<org.apache.http.message.ParserCursor: int pos>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r4);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(char)>(62);

        $i2 = r0.<org.apache.http.message.ParserCursor: int upperBound>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r5);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(char)>(93);

        $r6 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r6;
    }

    public void updatePos(int)
    {
        org.apache.http.message.ParserCursor r0;
        int i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r1, $r2;

        r0 := @this: org.apache.http.message.ParserCursor;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.http.message.ParserCursor: int lowerBound>;

        if i0 >= $i1 goto label1;

        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r2;

     label1:
        $i2 = r0.<org.apache.http.message.ParserCursor: int upperBound>;

        if i0 <= $i2 goto label2;

        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        r0.<org.apache.http.message.ParserCursor: int pos> = i0;

        return;
    }
}
