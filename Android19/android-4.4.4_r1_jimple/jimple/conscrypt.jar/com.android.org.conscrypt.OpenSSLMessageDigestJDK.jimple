public class com.android.org.conscrypt.OpenSSLMessageDigestJDK extends java.security.MessageDigest implements java.lang.Cloneable
{
    private long ctx;
    private final long evp_md;
    private final byte[] singleByte;
    private final int size;

    private void <init>(java.lang.String, long, int) throws java.security.NoSuchAlgorithmException
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        java.lang.String r1;
        long l0;
        int i1;
        byte[] $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<java.security.MessageDigest: void <init>(java.lang.String)>(r1);

        $r2 = newarray (byte)[1];

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: byte[] singleByte> = $r2;

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long evp_md> = l0;

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: int size> = i1;

        return;
    }

    void <init>(java.lang.String, long, int, com.android.org.conscrypt.OpenSSLMessageDigestJDK$1) throws java.security.NoSuchAlgorithmException
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        java.lang.String r1;
        long l0;
        int i1;
        com.android.org.conscrypt.OpenSSLMessageDigestJDK$1 r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.org.conscrypt.OpenSSLMessageDigestJDK$1;

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void <init>(java.lang.String,long,int)>(r1, l0, i1);

        return;
    }

    private void free()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $l0 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long ctx>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long ctx>;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EVP_MD_CTX_destroy(long)>($l2);

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long ctx> = 0L;

     label1:
        return;
    }

    private long getCtx()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        long $l0, $l2, $l3, $l4;
        byte $b1;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $l0 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long ctx>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l3 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long evp_md>;

        $l4 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long EVP_DigestInit(long)>($l3);

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long ctx> = $l4;

     label1:
        $l2 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long ctx>;

        return $l2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0, r1;
        java.lang.Object $r2;
        long $l0, $l1;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $r2 = specialinvoke r0.<java.security.MessageDigest: java.lang.Object clone()>();

        r1 = (com.android.org.conscrypt.OpenSSLMessageDigestJDK) $r2;

        $l0 = specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long getCtx()>();

        $l1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long EVP_MD_CTX_copy(long)>($l0);

        r1.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long ctx> = $l1;

        return r1;
    }

    protected byte[] engineDigest()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        byte[] r1;
        int $i0;
        long $l1;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $i0 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: int size>;

        r1 = newarray (byte)[$i0];

        $l1 = specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long getCtx()>();

        staticinvoke <com.android.org.conscrypt.NativeCrypto: int EVP_DigestFinal(long,byte[],int)>($l1, r1, 0);

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long ctx> = 0L;

        return r1;
    }

    protected int engineGetDigestLength()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        int $i0;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $i0 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: int size>;

        return $i0;
    }

    protected void engineReset()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void free()>();

        return;
    }

    protected void engineUpdate(byte)
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        byte b0;
        byte[] $r1, $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: byte[] singleByte>;

        $r1[0] = b0;

        $r2 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: byte[] singleByte>;

        virtualinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void engineUpdate(byte[],int,int)>($r2, 0, 1);

        return;
    }

    protected void engineUpdate(byte[], int, int)
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        byte[] r1;
        int i0, i1;
        long $l2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $l2 = specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long getCtx()>();

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EVP_DigestUpdate(long,byte[],int,int)>($l2, r1, i0, i1);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

     label1:
        specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void free()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
