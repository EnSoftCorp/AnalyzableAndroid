public class com.android.org.conscrypt.OpenSSLContextImpl extends com.android.org.conscrypt.SSLContextImpl
{

    public void <init>()
    {
        com.android.org.conscrypt.OpenSSLContextImpl r0;

        r0 := @this: com.android.org.conscrypt.OpenSSLContextImpl;

        specialinvoke r0.<com.android.org.conscrypt.SSLContextImpl: void <init>()>();

        return;
    }

    protected void <init>(com.android.org.conscrypt.DefaultSSLContextImpl) throws java.security.GeneralSecurityException, java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLContextImpl r0;
        com.android.org.conscrypt.DefaultSSLContextImpl r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLContextImpl;

        r1 := @parameter0: com.android.org.conscrypt.DefaultSSLContextImpl;

        specialinvoke r0.<com.android.org.conscrypt.SSLContextImpl: void <init>(com.android.org.conscrypt.DefaultSSLContextImpl)>(r1);

        return;
    }

    public javax.net.ssl.SSLServerSocketFactory engineGetServerSocketFactory()
    {
        com.android.org.conscrypt.OpenSSLContextImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1, $r3;
        com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.org.conscrypt.OpenSSLContextImpl;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLContextImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("SSLContext is not initialized.");

        throw $r4;

     label1:
        $r2 = new com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl;

        $r3 = r0.<com.android.org.conscrypt.OpenSSLContextImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        specialinvoke $r2.<com.android.org.conscrypt.OpenSSLServerSocketFactoryImpl: void <init>(com.android.org.conscrypt.SSLParametersImpl)>($r3);

        return $r2;
    }

    public javax.net.ssl.SSLSocketFactory engineGetSocketFactory()
    {
        com.android.org.conscrypt.OpenSSLContextImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1, $r3;
        com.android.org.conscrypt.OpenSSLSocketFactoryImpl $r2;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.org.conscrypt.OpenSSLContextImpl;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLContextImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        if $r1 != null goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("SSLContext is not initialized.");

        throw $r4;

     label1:
        $r2 = new com.android.org.conscrypt.OpenSSLSocketFactoryImpl;

        $r3 = r0.<com.android.org.conscrypt.OpenSSLContextImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        specialinvoke $r2.<com.android.org.conscrypt.OpenSSLSocketFactoryImpl: void <init>(com.android.org.conscrypt.SSLParametersImpl)>($r3);

        return $r2;
    }
}
