public class com.android.org.conscrypt.TrustManagerFactoryImpl extends javax.net.ssl.TrustManagerFactorySpi
{
    private java.security.KeyStore keyStore;

    public void <init>()
    {
        com.android.org.conscrypt.TrustManagerFactoryImpl r0;

        r0 := @this: com.android.org.conscrypt.TrustManagerFactoryImpl;

        specialinvoke r0.<javax.net.ssl.TrustManagerFactorySpi: void <init>()>();

        return;
    }

    public javax.net.ssl.TrustManager[] engineGetTrustManagers()
    {
        com.android.org.conscrypt.TrustManagerFactoryImpl r0;
        javax.net.ssl.TrustManager[] r1;
        java.security.KeyStore $r2, $r4;
        com.android.org.conscrypt.TrustManagerImpl $r3;
        java.lang.IllegalStateException $r5;

        r0 := @this: com.android.org.conscrypt.TrustManagerFactoryImpl;

        $r2 = r0.<com.android.org.conscrypt.TrustManagerFactoryImpl: java.security.KeyStore keyStore>;

        if $r2 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("TrustManagerFactory is not initialized");

        throw $r5;

     label1:
        r1 = newarray (javax.net.ssl.TrustManager)[1];

        $r3 = new com.android.org.conscrypt.TrustManagerImpl;

        $r4 = r0.<com.android.org.conscrypt.TrustManagerFactoryImpl: java.security.KeyStore keyStore>;

        specialinvoke $r3.<com.android.org.conscrypt.TrustManagerImpl: void <init>(java.security.KeyStore)>($r4);

        r1[0] = $r3;

        return r1;
    }

    public void engineInit(java.security.KeyStore) throws java.security.KeyStoreException
    {
        com.android.org.conscrypt.TrustManagerFactoryImpl r0;
        java.security.KeyStore r1, $r5, $r6;
        java.security.NoSuchAlgorithmException r2, $r9;
        java.security.cert.CertificateException r3, $r7;
        java.io.IOException r4, $r11;
        java.security.KeyStoreException $r8, $r10, $r12;

        r0 := @this: com.android.org.conscrypt.TrustManagerFactoryImpl;

        r1 := @parameter0: java.security.KeyStore;

        if r1 == null goto label1;

        r0.<com.android.org.conscrypt.TrustManagerFactoryImpl: java.security.KeyStore keyStore> = r1;

        return;

     label1:
        $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>("AndroidCAStore");

        r0.<com.android.org.conscrypt.TrustManagerFactoryImpl: java.security.KeyStore keyStore> = $r5;

     label2:
        $r6 = r0.<com.android.org.conscrypt.TrustManagerFactoryImpl: java.security.KeyStore keyStore>;

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);

     label3:
        return;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

        $r12 = new java.security.KeyStoreException;

        specialinvoke $r12.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r4);

        throw $r12;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new java.security.KeyStoreException;

        specialinvoke $r8.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r3);

        throw $r8;

     label6:
        $r9 := @caughtexception;

        r2 = $r9;

        $r10 = new java.security.KeyStoreException;

        specialinvoke $r10.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(r2);

        throw $r10;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.security.cert.CertificateException from label2 to label3 with label5;
        catch java.security.NoSuchAlgorithmException from label2 to label3 with label6;
    }

    public void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.security.InvalidAlgorithmParameterException
    {
        com.android.org.conscrypt.TrustManagerFactoryImpl r0;
        javax.net.ssl.ManagerFactoryParameters r1;
        java.security.InvalidAlgorithmParameterException $r2;

        r0 := @this: com.android.org.conscrypt.TrustManagerFactoryImpl;

        r1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;

        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("ManagerFactoryParameters not supported");

        throw $r2;
    }
}
