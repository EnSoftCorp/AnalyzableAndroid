public class com.android.org.conscrypt.OpenSSLX509CRLEntry extends java.security.cert.X509CRLEntry
{
    private final long mContext;

    void <init>(long)
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        long l0;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        l0 := @parameter0: long;

        specialinvoke r0.<java.security.cert.X509CRLEntry: void <init>()>();

        r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext> = l0;

        return;
    }

    public java.util.Set getCriticalExtensionOIDs()
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        java.lang.String[] r1, $r4;
        long $l0, $l2;
        int $i1, $i3;
        java.util.HashSet $r2;
        java.util.List $r3;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        $l0 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] get_X509_REVOKED_ext_oids(long,int)>($l0, 1);

        $i1 = lengthof r1;

        if $i1 != 0 goto label1;

        $l2 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        $r4 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] get_X509_REVOKED_ext_oids(long,int)>($l2, 0);

        $i3 = lengthof $r4;

        if $i3 != 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.HashSet;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        return $r2;
    }

    public byte[] getEncoded() throws java.security.cert.CRLException
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        long $l0;
        byte[] $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        $l0 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        $r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: byte[] i2d_X509_REVOKED(long)>($l0);

        return $r1;
    }

    public byte[] getExtensionValue(java.lang.String)
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        java.lang.String r1;
        long $l0;
        byte[] $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        $r2 = staticinvoke <com.android.org.conscrypt.NativeCrypto: byte[] X509_REVOKED_get_ext_oid(long,java.lang.String)>($l0, r1);

        return $r2;
    }

    public java.util.Set getNonCriticalExtensionOIDs()
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        java.lang.String[] r1, $r4;
        long $l0, $l2;
        int $i1, $i3;
        java.util.HashSet $r2;
        java.util.List $r3;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        $l0 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] get_X509_REVOKED_ext_oids(long,int)>($l0, 0);

        $i1 = lengthof r1;

        if $i1 != 0 goto label1;

        $l2 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        $r4 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] get_X509_REVOKED_ext_oids(long,int)>($l2, 1);

        $i3 = lengthof $r4;

        if $i3 != 0 goto label1;

        return null;

     label1:
        $r2 = new java.util.HashSet;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        return $r2;
    }

    public java.util.Date getRevocationDate()
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        java.util.Calendar r1;
        java.util.TimeZone $r2;
        long $l0, $l1;
        java.util.Date $r3;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r2);

        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0);

        $l0 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        $l1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long get_X509_REVOKED_revocationDate(long)>($l0);

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void ASN1_TIME_to_Calendar(long,java.util.Calendar)>($l1, r1);

        $r3 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();

        return $r3;
    }

    public java.math.BigInteger getSerialNumber()
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        java.math.BigInteger $r1;
        long $l0;
        byte[] $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        $r1 = new java.math.BigInteger;

        $l0 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        $r2 = staticinvoke <com.android.org.conscrypt.NativeCrypto: byte[] X509_REVOKED_get_serialNumber(long)>($l0);

        specialinvoke $r1.<java.math.BigInteger: void <init>(byte[])>($r2);

        return $r1;
    }

    public boolean hasExtensions()
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        boolean z0;
        int i0, $i2;
        long $l1, $l3;
        java.lang.String[] $r1, $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        $l1 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        $r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] get_X509_REVOKED_ext_oids(long,int)>($l1, 0);

        $i2 = lengthof $r1;

        if $i2 != 0 goto label1;

        $l3 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        $r2 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] get_X509_REVOKED_ext_oids(long,int)>($l3, 1);

        i0 = lengthof $r2;

        z0 = 0;

        if i0 == 0 goto label2;

     label1:
        z0 = 1;

     label2:
        return z0;
    }

    public boolean hasUnsupportedCriticalExtension()
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        java.lang.String[] r1;
        int i0, i1, $i5;
        java.lang.String r2;
        long $l2, $l3, $l4;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        $l2 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] get_X509_REVOKED_ext_oids(long,int)>($l2, 1);

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $l3 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        $l4 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long X509_REVOKED_get_ext(long,java.lang.String)>($l3, r2);

        $i5 = staticinvoke <com.android.org.conscrypt.NativeCrypto: int X509_supported_extension(long)>($l4);

        if $i5 == 1 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        com.android.org.conscrypt.OpenSSLX509CRLEntry r0;
        java.io.ByteArrayOutputStream r1, $r4;
        long l0, $l1;
        java.lang.Throwable r2, $r5;
        java.lang.String r3;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CRLEntry;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r4;

        l0 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long create_BIO_OutputStream(java.io.OutputStream)>(r1);

     label1:
        $l1 = r0.<com.android.org.conscrypt.OpenSSLX509CRLEntry: long mContext>;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void X509_REVOKED_print(long,long)>(l0, $l1);

        r3 = virtualinvoke r1.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label2:
        staticinvoke <com.android.org.conscrypt.NativeCrypto: void BIO_free(long)>(l0);

        return r3;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void BIO_free(long)>(l0);

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
