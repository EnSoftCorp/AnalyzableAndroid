public abstract class com.android.internal.telephony.SMSDispatcher extends android.os.Handler
{
    static final boolean DBG;
    private static final int EVENT_CONFIRM_SEND_TO_POSSIBLE_PREMIUM_SHORT_CODE;
    private static final int EVENT_CONFIRM_SEND_TO_PREMIUM_SHORT_CODE;
    protected static final int EVENT_HANDLE_STATUS_REPORT;
    protected static final int EVENT_ICC_CHANGED;
    protected static final int EVENT_IMS_STATE_CHANGED;
    protected static final int EVENT_IMS_STATE_DONE;
    protected static final int EVENT_NEW_ICC_SMS;
    protected static final int EVENT_RADIO_ON;
    static final int EVENT_SEND_CONFIRMED_SMS;
    private static final int EVENT_SEND_LIMIT_REACHED_CONFIRMATION;
    private static final int EVENT_SEND_RETRY;
    protected static final int EVENT_SEND_SMS_COMPLETE;
    static final int EVENT_STOP_SENDING;
    private static final int MAX_SEND_RETRIES;
    private static final int MO_MSG_QUEUE_LIMIT;
    private static final int PREMIUM_RULE_USE_BOTH;
    private static final int PREMIUM_RULE_USE_NETWORK;
    private static final int PREMIUM_RULE_USE_SIM;
    private static final java.lang.String SEND_NEXT_MSG_EXTRA;
    private static final int SEND_RETRY_DELAY;
    private static final java.lang.String SEND_SMS_NO_CONFIRMATION_PERMISSION;
    private static final int SINGLE_PART_SMS;
    static final java.lang.String TAG;
    private static int sConcatenatedRef;
    protected final java.util.ArrayList deliveryPendingList;
    protected final com.android.internal.telephony.CommandsInterface mCi;
    protected final android.content.Context mContext;
    private com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher;
    private int mPendingTrackerCount;
    protected com.android.internal.telephony.PhoneBase mPhone;
    private final java.util.concurrent.atomic.AtomicInteger mPremiumSmsRule;
    protected int mRemainingMessages;
    protected final android.content.ContentResolver mResolver;
    private final com.android.internal.telephony.SMSDispatcher$SettingsObserver mSettingsObserver;
    protected boolean mSmsCapable;
    protected boolean mSmsSendDisabled;
    protected final android.telephony.TelephonyManager mTelephonyManager;
    private com.android.internal.telephony.SmsUsageMonitor mUsageMonitor;

    static void <clinit>()
    {
        java.util.Random $r0;
        int $i0;

        <com.android.internal.telephony.SMSDispatcher: java.lang.String TAG> = "SMSDispatcher";

        <com.android.internal.telephony.SMSDispatcher: int SINGLE_PART_SMS> = 1;

        <com.android.internal.telephony.SMSDispatcher: java.lang.String SEND_SMS_NO_CONFIRMATION_PERMISSION> = "android.permission.SEND_SMS_NO_CONFIRMATION";

        <com.android.internal.telephony.SMSDispatcher: int SEND_RETRY_DELAY> = 2000;

        <com.android.internal.telephony.SMSDispatcher: java.lang.String SEND_NEXT_MSG_EXTRA> = "SendNextMsg";

        <com.android.internal.telephony.SMSDispatcher: int PREMIUM_RULE_USE_SIM> = 1;

        <com.android.internal.telephony.SMSDispatcher: int PREMIUM_RULE_USE_NETWORK> = 2;

        <com.android.internal.telephony.SMSDispatcher: int PREMIUM_RULE_USE_BOTH> = 3;

        <com.android.internal.telephony.SMSDispatcher: int MO_MSG_QUEUE_LIMIT> = 5;

        <com.android.internal.telephony.SMSDispatcher: int MAX_SEND_RETRIES> = 3;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_STOP_SENDING> = 7;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_SEND_SMS_COMPLETE> = 2;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_SEND_RETRY> = 3;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_SEND_LIMIT_REACHED_CONFIRMATION> = 4;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_SEND_CONFIRMED_SMS> = 5;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_RADIO_ON> = 11;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_NEW_ICC_SMS> = 14;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_IMS_STATE_DONE> = 13;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_IMS_STATE_CHANGED> = 12;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_ICC_CHANGED> = 15;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_HANDLE_STATUS_REPORT> = 10;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_CONFIRM_SEND_TO_PREMIUM_SHORT_CODE> = 9;

        <com.android.internal.telephony.SMSDispatcher: int EVENT_CONFIRM_SEND_TO_POSSIBLE_PREMIUM_SHORT_CODE> = 8;

        <com.android.internal.telephony.SMSDispatcher: boolean DBG> = 0;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(256);

        <com.android.internal.telephony.SMSDispatcher: int sConcatenatedRef> = $i0;

        return;
    }

    protected void <init>(com.android.internal.telephony.PhoneBase, com.android.internal.telephony.SmsUsageMonitor, com.android.internal.telephony.ImsSMSDispatcher)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.PhoneBase r1;
        com.android.internal.telephony.SmsUsageMonitor r2;
        com.android.internal.telephony.ImsSMSDispatcher r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.concurrent.atomic.AtomicInteger $r4, $r16;
        java.util.ArrayList $r5;
        android.content.Context $r6, $r7, $r10, $r14, $r15, $r19;
        android.content.ContentResolver $r8, $r18;
        com.android.internal.telephony.CommandsInterface $r9;
        java.lang.Object $r11;
        android.telephony.TelephonyManager $r12;
        com.android.internal.telephony.SMSDispatcher$SettingsObserver $r13, $r20;
        android.net.Uri $r17;
        android.content.res.Resources $r21;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r26, $r28, $r29;
        java.lang.String $r27, $r30;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        r2 := @parameter1: com.android.internal.telephony.SmsUsageMonitor;

        r3 := @parameter2: com.android.internal.telephony.ImsSMSDispatcher;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        $r4 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<com.android.internal.telephony.SMSDispatcher: java.util.concurrent.atomic.AtomicInteger mPremiumSmsRule> = $r4;

        r0.<com.android.internal.telephony.SMSDispatcher: boolean mSmsCapable> = 1;

        r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages> = -1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.internal.telephony.SMSDispatcher: java.util.ArrayList deliveryPendingList> = $r5;

        r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.PhoneBase mPhone> = r1;

        r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher> = r3;

        $r6 = virtualinvoke r1.<com.android.internal.telephony.PhoneBase: android.content.Context getContext()>();

        r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext> = $r6;

        $r7 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.internal.telephony.SMSDispatcher: android.content.ContentResolver mResolver> = $r8;

        $r9 = r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.CommandsInterface mCi>;

        r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.CommandsInterface mCi> = $r9;

        r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor> = r2;

        $r10 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        $r11 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r12 = (android.telephony.TelephonyManager) $r11;

        r0.<com.android.internal.telephony.SMSDispatcher: android.telephony.TelephonyManager mTelephonyManager> = $r12;

        $r13 = new com.android.internal.telephony.SMSDispatcher$SettingsObserver;

        $r16 = r0.<com.android.internal.telephony.SMSDispatcher: java.util.concurrent.atomic.AtomicInteger mPremiumSmsRule>;

        $r14 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        specialinvoke $r13.<com.android.internal.telephony.SMSDispatcher$SettingsObserver: void <init>(android.os.Handler,java.util.concurrent.atomic.AtomicInteger,android.content.Context)>(r0, $r16, $r14);

        r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SMSDispatcher$SettingsObserver mSettingsObserver> = $r13;

        $r15 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        $r18 = virtualinvoke $r15.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r17 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("sms_short_code_rule");

        $r20 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SMSDispatcher$SettingsObserver mSettingsObserver>;

        virtualinvoke $r18.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r17, 0, $r20);

        $r19 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        $r21 = virtualinvoke $r19.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r21.<android.content.res.Resources: boolean getBoolean(int)>(17891385);

        r0.<com.android.internal.telephony.SMSDispatcher: boolean mSmsCapable> = $z1;

        $z3 = r0.<com.android.internal.telephony.SMSDispatcher: boolean mSmsCapable>;

        $z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("telephony.sms.send", $z3);

        if $z2 != 0 goto label2;

        z0 = 1;

     label1:
        r0.<com.android.internal.telephony.SMSDispatcher: boolean mSmsSendDisabled> = z0;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SMSDispatcher: ctor mSmsCapable=");

        $z4 = r0.<com.android.internal.telephony.SMSDispatcher: boolean mSmsCapable>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" format=");

        $r27 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: java.lang.String getFormat()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mSmsSendDisabled=");

        $z5 = r0.<com.android.internal.telephony.SMSDispatcher: boolean mSmsSendDisabled>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SMSDispatcher", $r30);

        return;

     label2:
        z0 = 0;

        goto label1;
    }

    private boolean denyIfQueueLimitReached(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        int $i0, $i1, $i2;
        android.app.PendingIntent $r3, $r4;
        android.app.PendingIntent$CanceledException $r5;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        $i0 = r0.<com.android.internal.telephony.SMSDispatcher: int mPendingTrackerCount>;

        if $i0 < 5 goto label4;

     label1:
        $r3 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        if $r3 == null goto label2;

        $r4 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        virtualinvoke $r4.<android.app.PendingIntent: void send(int)>(5);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", "failed to send back RESULT_ERROR_LIMIT_EXCEEDED");

        goto label2;

     label4:
        $i1 = r0.<com.android.internal.telephony.SMSDispatcher: int mPendingTrackerCount>;

        $i2 = 1 + $i1;

        r0.<com.android.internal.telephony.SMSDispatcher: int mPendingTrackerCount> = $i2;

        return 0;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label3;
    }

    private java.lang.CharSequence getAppLabel(java.lang.String)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        java.lang.String r1, $r11;
        android.content.pm.PackageManager r2;
        java.lang.CharSequence r4;
        android.content.Context $r5;
        android.content.pm.ApplicationInfo $r6;
        android.content.pm.PackageManager$NameNotFoundException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        r2 = virtualinvoke $r5.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r6 = virtualinvoke r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

        r4 = virtualinvoke $r6.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r2);

     label2:
        return r4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PackageManager Name Not Found for package ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", $r11);

        return r1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    protected static int getNextConcatenatedRef()
    {
        int $i0, $i1, $i2;

        $i0 = <com.android.internal.telephony.SMSDispatcher: int sConcatenatedRef>;

        $i1 = 1 + $i0;

        <com.android.internal.telephony.SMSDispatcher: int sConcatenatedRef> = $i1;

        $i2 = <com.android.internal.telephony.SMSDispatcher: int sConcatenatedRef>;

        return $i2;
    }

    protected static void handleNotInService(int, android.app.PendingIntent)
    {
        int i0;
        android.app.PendingIntent r0;
        android.app.PendingIntent$CanceledException $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.app.PendingIntent;

        if r0 == null goto label6;

        if i0 != 3 goto label3;

     label1:
        virtualinvoke r0.<android.app.PendingIntent: void send(int)>(2);

     label2:
        return;

     label3:
        virtualinvoke r0.<android.app.PendingIntent: void send(int)>(4);

     label4:
        return;

     label5:
        $r2 := @caughtexception;

     label6:
        return;

        catch android.app.PendingIntent$CanceledException from label1 to label2 with label5;
        catch android.app.PendingIntent$CanceledException from label3 to label4 with label5;
    }

    private void sendMultipartSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        java.util.HashMap r2;
        java.lang.String r3, r4;
        java.util.ArrayList r5, r6, r7;
        int i0, i1, i2, i3;
        android.app.PendingIntent r8;
        java.lang.Object $r9, $r10, $r11, $r12, $r13, $r16;
        android.telephony.ServiceState $r14;
        com.android.internal.telephony.PhoneBase $r15;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        r2 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.util.HashMap mData>;

        $r9 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("destination");

        r3 = (java.lang.String) $r9;

        $r10 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("scaddress");

        r4 = (java.lang.String) $r10;

        $r11 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("parts");

        r5 = (java.util.ArrayList) $r11;

        $r13 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("sentIntents");

        r6 = (java.util.ArrayList) $r13;

        $r12 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("deliveryIntents");

        r7 = (java.util.ArrayList) $r12;

        $r15 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r14 = virtualinvoke $r15.<com.android.internal.telephony.PhoneBase: android.telephony.ServiceState getServiceState()>();

        i0 = virtualinvoke $r14.<android.telephony.ServiceState: int getState()>();

        $z0 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean isIms()>();

        if $z0 != 0 goto label3;

        if i0 == 0 goto label3;

        i1 = 0;

        i2 = virtualinvoke r5.<java.util.ArrayList: int size()>();

     label1:
        if i1 >= i2 goto label4;

        r8 = null;

        if r6 == null goto label2;

        i3 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        r8 = null;

        if i3 <= i1 goto label2;

        $r16 = virtualinvoke r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r8 = (android.app.PendingIntent) $r16;

     label2:
        staticinvoke <com.android.internal.telephony.SMSDispatcher: void handleNotInService(int,android.app.PendingIntent)>(i0, r8);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void sendMultipartText(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>(r3, r4, r5, r6, r7);

     label4:
        return;
    }

    protected abstract com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence, boolean);

    boolean checkDestination(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        int i0, i1, i2, $i4, $i7, $i10, $i11;
        java.lang.String r2, r3, $r9, $r13, $r15;
        byte b3;
        android.content.Context $r4;
        java.util.concurrent.atomic.AtomicInteger $r5;
        android.telephony.TelephonyManager $r6, $r7, $r10, $r11;
        com.android.internal.telephony.SmsUsageMonitor $r8, $r12, $r17;
        android.content.pm.PackageInfo $r14;
        android.os.Message $r16, $r18;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        $r4 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        $i4 = virtualinvoke $r4.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.SEND_SMS_NO_CONFIRMATION");

        if $i4 != 0 goto label02;

     label01:
        return 1;

     label02:
        $r5 = r0.<com.android.internal.telephony.SMSDispatcher: java.util.concurrent.atomic.AtomicInteger mPremiumSmsRule>;

        i0 = virtualinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 == 1 goto label03;

        i1 = 0;

        if i0 != 3 goto label06;

     label03:
        $r6 = r0.<com.android.internal.telephony.SMSDispatcher: android.telephony.TelephonyManager mTelephonyManager>;

        r3 = virtualinvoke $r6.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>();

        if r3 == null goto label04;

        $i11 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i11 == 2 goto label05;

     label04:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", "Can\'t get SIM country Iso: trying network country Iso");

        $r7 = r0.<com.android.internal.telephony.SMSDispatcher: android.telephony.TelephonyManager mTelephonyManager>;

        r3 = virtualinvoke $r7.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>();

     label05:
        $r8 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor>;

        $r9 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.lang.String mDestAddress>;

        i1 = virtualinvoke $r8.<com.android.internal.telephony.SmsUsageMonitor: int checkDestination(java.lang.String,java.lang.String)>($r9, r3);

     label06:
        if i0 == 2 goto label07;

        if i0 != 3 goto label10;

     label07:
        $r10 = r0.<com.android.internal.telephony.SMSDispatcher: android.telephony.TelephonyManager mTelephonyManager>;

        r2 = virtualinvoke $r10.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>();

        if r2 == null goto label08;

        $i10 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i10 == 2 goto label09;

     label08:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", "Can\'t get Network country Iso: trying SIM country Iso");

        $r11 = r0.<com.android.internal.telephony.SMSDispatcher: android.telephony.TelephonyManager mTelephonyManager>;

        r2 = virtualinvoke $r11.<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>();

     label09:
        $r12 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor>;

        $r13 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.lang.String mDestAddress>;

        $i7 = virtualinvoke $r12.<com.android.internal.telephony.SmsUsageMonitor: int checkDestination(java.lang.String,java.lang.String)>($r13, r2);

        i1 = staticinvoke <com.android.internal.telephony.SmsUsageMonitor: int mergeShortCodeCategories(int,int)>(i1, $i7);

     label10:
        if i1 == 0 goto label01;

        if i1 == 1 goto label01;

        if i1 == 2 goto label01;

        $r17 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor>;

        $r14 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.content.pm.PackageInfo mAppInfo>;

        $r15 = $r14.<android.content.pm.PackageInfo: java.lang.String packageName>;

        i2 = virtualinvoke $r17.<com.android.internal.telephony.SmsUsageMonitor: int getPremiumSmsPermission(java.lang.String)>($r15);

        if i2 != 0 goto label11;

        i2 = 1;

     label11:
        tableswitch(i2)
        {
            case 2: goto label15;
            case 3: goto label14;
            default: goto label12;
        };

     label12:
        if i1 != 3 goto label16;

        b3 = 8;

     label13:
        $r16 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: android.os.Message obtainMessage(int,java.lang.Object)>(b3, r1);

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean sendMessage(android.os.Message)>($r16);

        return 0;

     label14:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SMSDispatcher", "User approved this app to send to premium SMS");

        return 1;

     label15:
        staticinvoke <android.telephony.Rlog: int w(java.lang.String,java.lang.String)>("SMSDispatcher", "User denied this app from sending to premium SMS");

        $r18 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: android.os.Message obtainMessage(int,java.lang.Object)>(7, r1);

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean sendMessage(android.os.Message)>($r18);

        return 0;

     label16:
        b3 = 9;

        goto label13;
    }

    public void dispose()
    {
        com.android.internal.telephony.SMSDispatcher r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        com.android.internal.telephony.SMSDispatcher$SettingsObserver $r3;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        $r1 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SMSDispatcher$SettingsObserver mSettingsObserver>;

        virtualinvoke $r2.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r3);

        return;
    }

    protected abstract java.lang.String getFormat();

    public java.lang.String getImsSmsFormat()
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.ImsSMSDispatcher $r1, $r3, $r7;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        $r1 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher>;

        if $r1 == null goto label1;

        $r7 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher>;

        $r8 = virtualinvoke $r7.<com.android.internal.telephony.ImsSMSDispatcher: java.lang.String getImsSmsFormat()>();

        return $r8;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", $r6);

        return null;
    }

    public int getPremiumSmsPermission(java.lang.String)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        java.lang.String r1;
        com.android.internal.telephony.SmsUsageMonitor $r2;
        int $i0;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor>;

        $i0 = virtualinvoke $r2.<com.android.internal.telephony.SmsUsageMonitor: int getPremiumSmsPermission(java.lang.String)>(r1);

        return $i0;
    }

    protected com.android.internal.telephony.SMSDispatcher$SmsTracker getSmsTracker(java.util.HashMap, android.app.PendingIntent, android.app.PendingIntent, java.lang.String)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        java.util.HashMap r1;
        android.app.PendingIntent r2, r3;
        java.lang.String r4, $r12, $r14, $r15;
        android.content.pm.PackageManager r5;
        java.lang.String[] r6;
        android.content.pm.PackageInfo r7, r9;
        int i0, $i1;
        android.content.Context $r10;
        com.android.internal.telephony.SMSDispatcher$SmsTracker $r11;
        java.lang.Object $r13;
        android.content.pm.PackageManager$NameNotFoundException $r16;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: java.util.HashMap;

        r2 := @parameter1: android.app.PendingIntent;

        r3 := @parameter2: android.app.PendingIntent;

        r4 := @parameter3: java.lang.String;

        $r10 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        r5 = virtualinvoke $r10.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r6 = virtualinvoke r5.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>($i1);

        r7 = null;

        if r6 == null goto label3;

        i0 = lengthof r6;

        r7 = null;

        if i0 <= 0 goto label3;

     label1:
        $r14 = r6[0];

        r9 = virtualinvoke r5.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r14, 64);

     label2:
        r7 = r9;

     label3:
        $r11 = new com.android.internal.telephony.SMSDispatcher$SmsTracker;

        $r13 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("destAddr");

        $r12 = (java.lang.String) $r13;

        $r15 = staticinvoke <android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>($r12);

        specialinvoke $r11.<com.android.internal.telephony.SMSDispatcher$SmsTracker: void <init>(java.util.HashMap,android.app.PendingIntent,android.app.PendingIntent,android.content.pm.PackageInfo,java.lang.String,java.lang.String,com.android.internal.telephony.SMSDispatcher$1)>(r1, r2, r3, r7, $r15, r4, null);

        return $r11;

     label4:
        $r16 := @caughtexception;

        r7 = null;

        goto label3;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    protected java.util.HashMap getSmsTrackerMap(java.lang.String, java.lang.String, int, byte[], com.android.internal.telephony.SmsMessageBase$SubmitPduBase)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        java.lang.String r1, r2;
        int i0;
        byte[] r3, $r12, $r15;
        com.android.internal.telephony.SmsMessageBase$SubmitPduBase r4;
        java.util.HashMap r5, $r6;
        java.lang.Integer $r9;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: byte[];

        r4 := @parameter4: com.android.internal.telephony.SmsMessageBase$SubmitPduBase;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r5 = $r6;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("destAddr", r1);

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("scAddr", r2);

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("destPort", $r9);

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("data", r3);

        $r12 = r4.<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: byte[] encodedScAddress>;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("smsc", $r12);

        $r15 = r4.<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: byte[] encodedMessage>;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("pdu", $r15);

        return r5;
    }

    protected java.util.HashMap getSmsTrackerMap(java.lang.String, java.lang.String, java.lang.String, com.android.internal.telephony.SmsMessageBase$SubmitPduBase)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        java.lang.String r1, r2, r3;
        com.android.internal.telephony.SmsMessageBase$SubmitPduBase r4;
        java.util.HashMap r5, $r6;
        byte[] $r10, $r12;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.internal.telephony.SmsMessageBase$SubmitPduBase;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r5 = $r6;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("destAddr", r1);

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("scAddr", r2);

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("text", r3);

        $r10 = r4.<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: byte[] encodedScAddress>;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("smsc", $r10);

        $r12 = r4.<com.android.internal.telephony.SmsMessageBase$SubmitPduBase: byte[] encodedMessage>;

        virtualinvoke r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("pdu", $r12);

        return r5;
    }

    protected void handleConfirmShortCode(boolean, com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        boolean z0, $z1;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        int i0;
        java.lang.CharSequence r2;
        android.content.res.Resources r3;
        java.lang.Object[] r4;
        android.text.Spanned r5;
        android.view.View r6, $r18, $r20, $r22, $r24, $r27;
        com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener r7, $r16;
        android.app.AlertDialog r8;
        android.content.pm.PackageInfo $r9;
        java.lang.String $r10, $r11, $r12, $r30, $r32;
        android.content.Context $r13, $r26;
        android.view.LayoutInflater $r14;
        java.lang.Object $r15;
        android.widget.TextView $r17, $r19, $r23;
        android.view.ViewGroup $r21;
        android.app.AlertDialog$Builder $r25, $r29, $r31, $r34, $r35;
        android.widget.CheckBox $r28;
        android.view.Window $r33;
        android.widget.Button $r36, $r37;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        z0 := @parameter0: boolean;

        r1 := @parameter1: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        $z1 = specialinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean denyIfQueueLimitReached(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        if $z1 == 0 goto label1;

        return;

     label1:
        if z0 == 0 goto label3;

        i0 = 17040460;

     label2:
        $r9 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.content.pm.PackageInfo mAppInfo>;

        $r10 = $r9.<android.content.pm.PackageInfo: java.lang.String packageName>;

        r2 = specialinvoke r0.<com.android.internal.telephony.SMSDispatcher: java.lang.CharSequence getAppLabel(java.lang.String)>($r10);

        r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        r4 = newarray (java.lang.Object)[2];

        r4[0] = r2;

        $r12 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.lang.String mDestAddress>;

        r4[1] = $r12;

        $r11 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040458, r4);

        r5 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>($r11);

        $r13 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        $r15 = virtualinvoke $r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r14 = (android.view.LayoutInflater) $r15;

        r6 = virtualinvoke $r14.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367201, null);

        $r16 = new com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener;

        $r18 = virtualinvoke r6.<android.view.View: android.view.View findViewById(int)>(16909101);

        $r17 = (android.widget.TextView) $r18;

        specialinvoke $r16.<com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener: void <init>(com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,android.widget.TextView)>(r0, r1, $r17);

        r7 = $r16;

        $r20 = virtualinvoke r6.<android.view.View: android.view.View findViewById(int)>(16909095);

        $r19 = (android.widget.TextView) $r20;

        virtualinvoke $r19.<android.widget.TextView: void setText(java.lang.CharSequence)>(r5);

        $r22 = virtualinvoke r6.<android.view.View: android.view.View findViewById(int)>(16909096);

        $r21 = (android.view.ViewGroup) $r22;

        $r24 = virtualinvoke $r21.<android.view.ViewGroup: android.view.View findViewById(int)>(16909098);

        $r23 = (android.widget.TextView) $r24;

        virtualinvoke $r23.<android.widget.TextView: void setText(int)>(i0);

        $r27 = virtualinvoke r6.<android.view.View: android.view.View findViewById(int)>(16909099);

        $r28 = (android.widget.CheckBox) $r27;

        virtualinvoke $r28.<android.widget.CheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>(r7);

        $r25 = new android.app.AlertDialog$Builder;

        $r26 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        specialinvoke $r25.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r26);

        $r31 = virtualinvoke $r25.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setView(android.view.View)>(r6);

        $r32 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(17040461);

        $r29 = virtualinvoke $r31.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r32, r7);

        $r30 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(17040462);

        $r34 = virtualinvoke $r29.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r30, r7);

        $r35 = virtualinvoke $r34.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r7);

        r8 = virtualinvoke $r35.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        $r33 = virtualinvoke r8.<android.app.AlertDialog: android.view.Window getWindow()>();

        virtualinvoke $r33.<android.view.Window: void setType(int)>(2003);

        virtualinvoke r8.<android.app.AlertDialog: void show()>();

        $r36 = virtualinvoke r8.<android.app.AlertDialog: android.widget.Button getButton(int)>(-1);

        virtualinvoke r7.<com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener: void setPositiveButton(android.widget.Button)>($r36);

        $r37 = virtualinvoke r8.<android.app.AlertDialog: android.widget.Button getButton(int)>(-2);

        virtualinvoke r7.<com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener: void setNegativeButton(android.widget.Button)>($r37);

        return;

     label3:
        i0 = 17040459;

        goto label2;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        android.os.Message r1;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r2, r4, $r11, $r12, $r13, $r16, $r20, $r23, $r24;
        int $i0, $i1, $i3, $i4, $i5, $i6;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        java.lang.Object $r9, $r10, $r14, $r15, $r19, $r21, $r22, $r26;
        android.app.PendingIntent $r17, $r18;
        boolean $z0;
        android.app.PendingIntent$CanceledException $r25;
        android.os.AsyncResult $r27;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label07;
            case 6: goto label01;
            case 7: goto label10;
            case 8: goto label05;
            case 9: goto label06;
            case 10: goto label14;
            default: goto label01;
        };

     label01:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage() ignoring message of unexpected type ");

        $i1 = r1.<android.os.Message: int what>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", $r8);

        return;

     label02:
        $r26 = r1.<android.os.Message: java.lang.Object obj>;

        $r27 = (android.os.AsyncResult) $r26;

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void handleSendComplete(android.os.AsyncResult)>($r27);

        return;

     label03:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SMSDispatcher", "SMS retry..");

        $r22 = r1.<android.os.Message: java.lang.Object obj>;

        $r23 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r22;

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void sendRetrySms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>($r23);

        return;

     label04:
        $r21 = r1.<android.os.Message: java.lang.Object obj>;

        $r20 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r21;

        $r24 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r20;

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void handleReachSentLimit(com.android.internal.telephony.SMSDispatcher$SmsTracker)>($r24);

        return;

     label05:
        $r14 = r1.<android.os.Message: java.lang.Object obj>;

        $r13 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r14;

        $r16 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r13;

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void handleConfirmShortCode(boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker)>(0, $r16);

        return;

     label06:
        $r10 = r1.<android.os.Message: java.lang.Object obj>;

        $r12 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r10;

        $r11 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r12;

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void handleConfirmShortCode(boolean,com.android.internal.telephony.SMSDispatcher$SmsTracker)>(1, $r11);

        return;

     label07:
        $r19 = r1.<android.os.Message: java.lang.Object obj>;

        r4 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r19;

        $z0 = virtualinvoke r4.<com.android.internal.telephony.SMSDispatcher$SmsTracker: boolean isMultipart()>();

        if $z0 == 0 goto label09;

        specialinvoke r0.<com.android.internal.telephony.SMSDispatcher: void sendMultipartSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r4);

     label08:
        $i6 = r0.<com.android.internal.telephony.SMSDispatcher: int mPendingTrackerCount>;

        $i5 = -1 + $i6;

        r0.<com.android.internal.telephony.SMSDispatcher: int mPendingTrackerCount> = $i5;

        return;

     label09:
        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r4);

        goto label08;

     label10:
        $r15 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r15;

        $r17 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        if $r17 == null goto label12;

     label11:
        $r18 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        virtualinvoke $r18.<android.app.PendingIntent: void send(int)>(5);

     label12:
        $i3 = r0.<com.android.internal.telephony.SMSDispatcher: int mPendingTrackerCount>;

        $i4 = -1 + $i3;

        r0.<com.android.internal.telephony.SMSDispatcher: int mPendingTrackerCount> = $i4;

        return;

     label13:
        $r25 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", "failed to send RESULT_ERROR_LIMIT_EXCEEDED");

        goto label12;

     label14:
        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void handleStatusReport(java.lang.Object)>($r9);

        return;

        catch android.app.PendingIntent$CanceledException from label11 to label12 with label13;
    }

    protected void handleReachSentLimit(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        java.lang.CharSequence r2;
        android.content.res.Resources r3;
        android.text.Spanned r4;
        com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener r5, $r11;
        android.app.AlertDialog r6;
        boolean $z0;
        android.content.pm.PackageInfo $r7;
        java.lang.String $r8, $r10, $r16, $r18;
        java.lang.Object[] $r9;
        android.content.Context $r12;
        android.app.AlertDialog$Builder $r13, $r14, $r15, $r17, $r19, $r20, $r21;
        android.view.Window $r22;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        $z0 = specialinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean denyIfQueueLimitReached(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r7 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.content.pm.PackageInfo mAppInfo>;

        $r8 = $r7.<android.content.pm.PackageInfo: java.lang.String packageName>;

        r2 = specialinvoke r0.<com.android.internal.telephony.SMSDispatcher: java.lang.CharSequence getAppLabel(java.lang.String)>($r8);

        r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r2;

        $r10 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17040455, $r9);

        r4 = staticinvoke <android.text.Html: android.text.Spanned fromHtml(java.lang.String)>($r10);

        $r11 = new com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener;

        specialinvoke $r11.<com.android.internal.telephony.SMSDispatcher$ConfirmDialogListener: void <init>(com.android.internal.telephony.SMSDispatcher,com.android.internal.telephony.SMSDispatcher$SmsTracker,android.widget.TextView)>(r0, r1, null);

        r5 = $r11;

        $r13 = new android.app.AlertDialog$Builder;

        $r12 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        specialinvoke $r13.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r12);

        $r15 = virtualinvoke $r13.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(17040454);

        $r14 = virtualinvoke $r15.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>(17301642);

        $r17 = virtualinvoke $r14.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r4);

        $r16 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(17040456);

        $r19 = virtualinvoke $r17.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r16, r5);

        $r18 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(17040457);

        $r21 = virtualinvoke $r19.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>($r18, r5);

        $r20 = virtualinvoke $r21.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r5);

        r6 = virtualinvoke $r20.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        $r22 = virtualinvoke r6.<android.app.AlertDialog: android.view.Window getWindow()>();

        virtualinvoke $r22.<android.view.Window: void setType(int)>(2003);

        virtualinvoke r6.<android.app.AlertDialog: void show()>();

        return;
    }

    protected void handleSendComplete(android.os.AsyncResult)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        android.os.AsyncResult r1;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r2;
        android.app.PendingIntent r3, $r17, $r27, $r34, $r54;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21;
        byte b1;
        android.content.Intent r4, r7, $r22, $r55;
        java.lang.Object $r8, $r9, $r26, $r30, $r60;
        com.android.internal.telephony.PhoneBase $r10, $r41;
        java.lang.Throwable $r11, $r14, $r20;
        android.telephony.ServiceState $r12, $r42;
        boolean $z0, $z2, $z3;
        com.android.internal.telephony.CommandException $r13, $r16, $r19, $r23;
        com.android.internal.telephony.CommandException$Error $r15, $r18, $r21, $r24;
        android.content.Context $r25, $r47, $r52, $r61;
        com.android.internal.telephony.SmsResponse $r31, $r56;
        android.os.Message $r32;
        java.lang.StringBuilder $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r43, $r44, $r45, $r49;
        android.content.pm.ApplicationInfo $r46;
        java.lang.String $r48, $r50;
        android.content.pm.PackageInfo $r51;
        android.app.PendingIntent$CanceledException $r57, $r58;
        java.util.ArrayList $r59;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: android.os.AsyncResult;

        $r8 = r1.<android.os.AsyncResult: java.lang.Object userObj>;

        r2 = (com.android.internal.telephony.SMSDispatcher$SmsTracker) $r8;

        r3 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        $r9 = r1.<android.os.AsyncResult: java.lang.Object result>;

        if $r9 == null goto label07;

        $r60 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r56 = (com.android.internal.telephony.SmsResponse) $r60;

        $i21 = $r56.<com.android.internal.telephony.SmsResponse: int mMessageRef>;

        r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mMessageRef> = $i21;

     label01:
        $r11 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        if $r11 != null goto label11;

        $r51 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.content.pm.PackageInfo mAppInfo>;

        $r46 = $r51.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r48 = $r46.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r47 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        $z3 = staticinvoke <com.android.internal.telephony.SmsApplication: boolean shouldWriteMessageForPackage(java.lang.String,android.content.Context)>($r48, $r47);

        if $z3 == 0 goto label02;

        $r61 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        virtualinvoke r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: void writeSentMessage(android.content.Context)>($r61);

     label02:
        $r54 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mDeliveryIntent>;

        if $r54 == null goto label03;

        $r59 = r0.<com.android.internal.telephony.SMSDispatcher: java.util.ArrayList deliveryPendingList>;

        virtualinvoke $r59.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label03:
        if r3 == null goto label06;

     label04:
        $i19 = r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages>;

        if $i19 <= -1 goto label05;

        $i18 = r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages>;

        $i17 = -1 + $i18;

        r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages> = $i17;

     label05:
        $i20 = r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages>;

        if $i20 != 0 goto label08;

        $r55 = new android.content.Intent;

        specialinvoke $r55.<android.content.Intent: void <init>()>();

        r7 = $r55;

        virtualinvoke r7.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("SendNextMsg", 1);

        $r52 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        virtualinvoke r3.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>($r52, -1, r7);

     label06:
        return;

     label07:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SMSDispatcher", "SmsResponse was null");

        goto label01;

     label08:
        virtualinvoke r3.<android.app.PendingIntent: void send(int)>(-1);

     label09:
        return;

     label10:
        $r58 := @caughtexception;

        return;

     label11:
        $r10 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r12 = virtualinvoke $r10.<com.android.internal.telephony.PhoneBase: android.telephony.ServiceState getServiceState()>();

        i0 = virtualinvoke $r12.<android.telephony.ServiceState: int getState()>();

        $i3 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mImsRetry>;

        if $i3 <= 0 goto label12;

        if i0 == 0 goto label12;

        r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mRetryCount> = 3;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleSendComplete: Skipping retry:  isIms()=");

        $z2 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean isIms()>();

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mRetryCount=");

        $i13 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mRetryCount>;

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mImsRetry=");

        $i12 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mImsRetry>;

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mMessageRef=");

        $i15 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mMessageRef>;

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r40 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" SS= ");

        $r41 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r42 = virtualinvoke $r41.<com.android.internal.telephony.PhoneBase: android.telephony.ServiceState getServiceState()>();

        $i14 = virtualinvoke $r42.<android.telephony.ServiceState: int getState()>();

        $r49 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SMSDispatcher", $r50);

     label12:
        $z0 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean isIms()>();

        if $z0 != 0 goto label13;

        if i0 == 0 goto label13;

        $r34 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        staticinvoke <com.android.internal.telephony.SMSDispatcher: void handleNotInService(int,android.app.PendingIntent)>(i0, $r34);

        return;

     label13:
        $r14 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r13 = (com.android.internal.telephony.CommandException) $r14;

        $r16 = (com.android.internal.telephony.CommandException) $r13;

        $r15 = virtualinvoke $r16.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r18 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error SMS_FAIL_RETRY>;

        if $r15 != $r18 goto label14;

        $i11 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mRetryCount>;

        if $i11 >= 3 goto label14;

        $i10 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mRetryCount>;

        $i9 = 1 + $i10;

        r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: int mRetryCount> = $i9;

        $r32 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: android.os.Message obtainMessage(int,java.lang.Object)>(3, r2);

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean sendMessageDelayed(android.os.Message,long)>($r32, 2000L);

        return;

     label14:
        $r17 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        if $r17 == null goto label06;

        b1 = 1;

        $r20 = r1.<android.os.AsyncResult: java.lang.Throwable exception>;

        $r19 = (com.android.internal.telephony.CommandException) $r20;

        $r23 = (com.android.internal.telephony.CommandException) $r19;

        $r24 = virtualinvoke $r23.<com.android.internal.telephony.CommandException: com.android.internal.telephony.CommandException$Error getCommandError()>();

        $r21 = <com.android.internal.telephony.CommandException$Error: com.android.internal.telephony.CommandException$Error FDN_CHECK_FAILURE>;

        if $r24 != $r21 goto label15;

        b1 = 6;

     label15:
        $r22 = new android.content.Intent;

        specialinvoke $r22.<android.content.Intent: void <init>()>();

        r4 = $r22;

        $r26 = r1.<android.os.AsyncResult: java.lang.Object result>;

        if $r26 == null goto label16;

        $r30 = r1.<android.os.AsyncResult: java.lang.Object result>;

        $r31 = (com.android.internal.telephony.SmsResponse) $r30;

        $i8 = $r31.<com.android.internal.telephony.SmsResponse: int mErrorCode>;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("errorCode", $i8);

     label16:
        $i5 = r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages>;

        if $i5 <= -1 goto label17;

        $i6 = r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages>;

        $i7 = -1 + $i6;

        r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages> = $i7;

     label17:
        $i4 = r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages>;

        if $i4 != 0 goto label18;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("SendNextMsg", 1);

     label18:
        $r27 = r2.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        $r25 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        virtualinvoke $r27.<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>($r25, b1, r4);

     label19:
        return;

     label20:
        $r57 := @caughtexception;

        return;

        catch android.app.PendingIntent$CanceledException from label04 to label05 with label10;
        catch android.app.PendingIntent$CanceledException from label05 to label06 with label10;
        catch android.app.PendingIntent$CanceledException from label08 to label09 with label10;
        catch android.app.PendingIntent$CanceledException from label15 to label16 with label20;
        catch android.app.PendingIntent$CanceledException from label16 to label17 with label20;
        catch android.app.PendingIntent$CanceledException from label17 to label18 with label20;
        catch android.app.PendingIntent$CanceledException from label18 to label19 with label20;
    }

    protected void handleStatusReport(java.lang.Object)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        java.lang.Object r1;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SMSDispatcher", "handleStatusReport() called with no subclass.");

        return;
    }

    public boolean isIms()
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.ImsSMSDispatcher $r1, $r3, $r7;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        $r1 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher>;

        if $r1 == null goto label1;

        $r7 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher>;

        $z0 = virtualinvoke $r7.<com.android.internal.telephony.ImsSMSDispatcher: boolean isIms()>();

        return $z0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", $r6);

        return 0;
    }

    protected abstract void sendData(java.lang.String, java.lang.String, int, byte[], android.app.PendingIntent, android.app.PendingIntent);

    protected void sendMultipartText(java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        java.lang.String r1, r2, r11;
        java.util.ArrayList r3, r4, r5;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails[] r6;
        com.android.internal.telephony.SmsHeader$ConcatRef r7, $r13;
        com.android.internal.telephony.SmsHeader r8, $r15;
        android.app.PendingIntent r9, r10;
        boolean z0;
        com.android.internal.telephony.GsmAlphabet$TextEncodingDetails r12, $r17, $r19;
        java.lang.Object $r14, $r16, $r18, $r21;
        java.lang.CharSequence $r20;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.ArrayList;

        r4 := @parameter3: java.util.ArrayList;

        r5 := @parameter4: java.util.ArrayList;

        $i7 = staticinvoke <com.android.internal.telephony.SMSDispatcher: int getNextConcatenatedRef()>();

        i0 = 255 & $i7;

        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i2 = 0;

        r0.<com.android.internal.telephony.SMSDispatcher: int mRemainingMessages> = i1;

        r6 = newarray (com.android.internal.telephony.GsmAlphabet$TextEncodingDetails)[i1];

        i3 = 0;

     label01:
        if i3 >= i1 goto label04;

        $r21 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r20 = (java.lang.CharSequence) $r21;

        r12 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.GsmAlphabet$TextEncodingDetails calculateLength(java.lang.CharSequence,boolean)>($r20, 0);

        $i12 = r12.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

        if i2 == $i12 goto label03;

        if i2 == 0 goto label02;

        if i2 != 1 goto label03;

     label02:
        i2 = r12.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int codeUnitSize>;

     label03:
        r6[i3] = r12;

        i3 = i3 + 1;

        goto label01;

     label04:
        i4 = 0;

     label05:
        if i4 >= i1 goto label11;

        $r13 = new com.android.internal.telephony.SmsHeader$ConcatRef;

        specialinvoke $r13.<com.android.internal.telephony.SmsHeader$ConcatRef: void <init>()>();

        r7 = $r13;

        r7.<com.android.internal.telephony.SmsHeader$ConcatRef: int refNumber> = i0;

        $i8 = i4 + 1;

        r7.<com.android.internal.telephony.SmsHeader$ConcatRef: int seqNumber> = $i8;

        r7.<com.android.internal.telephony.SmsHeader$ConcatRef: int msgCount> = i1;

        r7.<com.android.internal.telephony.SmsHeader$ConcatRef: boolean isEightBits> = 1;

        $r15 = new com.android.internal.telephony.SmsHeader;

        specialinvoke $r15.<com.android.internal.telephony.SmsHeader: void <init>()>();

        r8 = $r15;

        r8.<com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader$ConcatRef concatRef> = r7;

        if i2 != 1 goto label06;

        $r19 = r6[i4];

        $i10 = $r19.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageTable>;

        r8.<com.android.internal.telephony.SmsHeader: int languageTable> = $i10;

        $r17 = r6[i4];

        $i11 = $r17.<com.android.internal.telephony.GsmAlphabet$TextEncodingDetails: int languageShiftTable>;

        r8.<com.android.internal.telephony.SmsHeader: int languageShiftTable> = $i11;

     label06:
        r9 = null;

        if r4 == null goto label07;

        i5 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        r9 = null;

        if i5 <= i4 goto label07;

        $r18 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r9 = (android.app.PendingIntent) $r18;

     label07:
        r10 = null;

        if r5 == null goto label08;

        i6 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        r10 = null;

        if i6 <= i4 goto label08;

        $r16 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r10 = (android.app.PendingIntent) $r16;

     label08:
        $r14 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r11 = (java.lang.String) $r14;

        $i9 = i1 - 1;

        if i4 != $i9 goto label10;

        z0 = 1;

     label09:
        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void sendNewSubmitPdu(java.lang.String,java.lang.String,java.lang.String,com.android.internal.telephony.SmsHeader,int,android.app.PendingIntent,android.app.PendingIntent,boolean)>(r1, r2, r11, r8, i2, r9, r10, z0);

        i4 = i4 + 1;

        goto label05;

     label10:
        z0 = 0;

        goto label09;

     label11:
        return;
    }

    protected abstract void sendNewSubmitPdu(java.lang.String, java.lang.String, java.lang.String, com.android.internal.telephony.SmsHeader, int, android.app.PendingIntent, android.app.PendingIntent, boolean);

    protected void sendRawPdu(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        byte[] r2, $r13;
        android.app.PendingIntent r3, $r20;
        android.content.pm.PackageManager r4;
        java.lang.String[] r5;
        android.content.pm.PackageInfo r9;
        int i0, $i1, $i3;
        java.util.HashMap $r11;
        java.lang.Object $r14;
        android.content.Context $r15;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r16, $r18;
        com.android.internal.telephony.PhoneBase $r17;
        com.android.internal.telephony.SmsUsageMonitor $r19;
        android.telephony.ServiceState $r21;
        android.app.PendingIntent$CanceledException $r22, $r25, $r26, $r27;
        android.os.Message $r23;
        android.content.pm.PackageManager$NameNotFoundException $r24;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        $r11 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: java.util.HashMap mData>;

        $r14 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("pdu");

        $r13 = (byte[]) $r14;

        r2 = (byte[]) $r13;

        r3 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        $z0 = r0.<com.android.internal.telephony.SMSDispatcher: boolean mSmsSendDisabled>;

        if $z0 == 0 goto label04;

        if r3 == null goto label02;

     label01:
        virtualinvoke r3.<android.app.PendingIntent: void send(int)>(4);

     label02:
        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SMSDispatcher", "Device does not support sending sms.");

     label03:
        return;

     label04:
        if r2 != null goto label08;

        if r3 == null goto label03;

     label05:
        virtualinvoke r3.<android.app.PendingIntent: void send(int)>(3);

     label06:
        return;

     label07:
        $r27 := @caughtexception;

        return;

     label08:
        $r15 = r0.<com.android.internal.telephony.SMSDispatcher: android.content.Context mContext>;

        r4 = virtualinvoke $r15.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        r5 = virtualinvoke r4.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>($i1);

        if r5 == null goto label09;

        $i3 = lengthof r5;

        if $i3 != 0 goto label13;

     label09:
        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", "Can\'t get calling app package name: refusing to send SMS");

        if r3 == null goto label03;

     label10:
        virtualinvoke r3.<android.app.PendingIntent: void send(int)>(1);

     label11:
        return;

     label12:
        $r25 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", "failed to send error result");

        return;

     label13:
        $r16 = r5[0];

        r9 = virtualinvoke r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r16, 64);

     label14:
        $z1 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean checkDestination(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        if $z1 == 0 goto label03;

        $r19 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor>;

        $r18 = r9.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z2 = virtualinvoke $r19.<com.android.internal.telephony.SmsUsageMonitor: boolean check(java.lang.String,int)>($r18, 1);

        if $z2 != 0 goto label19;

        $r23 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: android.os.Message obtainMessage(int,java.lang.Object)>(4, r1);

        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean sendMessage(android.os.Message)>($r23);

        return;

     label15:
        $r24 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", "Can\'t get calling app package info: refusing to send SMS");

        if r3 == null goto label03;

     label16:
        virtualinvoke r3.<android.app.PendingIntent: void send(int)>(1);

     label17:
        return;

     label18:
        $r22 := @caughtexception;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", "failed to send error result");

        return;

     label19:
        $r17 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r21 = virtualinvoke $r17.<com.android.internal.telephony.PhoneBase: android.telephony.ServiceState getServiceState()>();

        i0 = virtualinvoke $r21.<android.telephony.ServiceState: int getState()>();

        $z3 = virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: boolean isIms()>();

        if $z3 != 0 goto label20;

        if i0 == 0 goto label20;

        $r20 = r1.<com.android.internal.telephony.SMSDispatcher$SmsTracker: android.app.PendingIntent mSentIntent>;

        staticinvoke <com.android.internal.telephony.SMSDispatcher: void handleNotInService(int,android.app.PendingIntent)>(i0, $r20);

        return;

     label20:
        virtualinvoke r0.<com.android.internal.telephony.SMSDispatcher: void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        return;

     label21:
        $r26 := @caughtexception;

        goto label02;

        catch android.app.PendingIntent$CanceledException from label01 to label02 with label21;
        catch android.app.PendingIntent$CanceledException from label05 to label06 with label07;
        catch android.app.PendingIntent$CanceledException from label10 to label11 with label12;
        catch android.content.pm.PackageManager$NameNotFoundException from label13 to label14 with label15;
        catch android.app.PendingIntent$CanceledException from label16 to label17 with label18;
    }

    public void sendRetrySms(com.android.internal.telephony.SMSDispatcher$SmsTracker)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.SMSDispatcher$SmsTracker r1;
        com.android.internal.telephony.ImsSMSDispatcher $r2, $r4, $r8;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.SMSDispatcher$SmsTracker;

        $r2 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher>;

        if $r2 == null goto label1;

        $r8 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher>;

        virtualinvoke $r8.<com.android.internal.telephony.ImsSMSDispatcher: void sendRetrySms(com.android.internal.telephony.SMSDispatcher$SmsTracker)>(r1);

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.ImsSMSDispatcher mImsSMSDispatcher>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null. Retry failed");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("SMSDispatcher", $r7);

        return;
    }

    protected abstract void sendSms(com.android.internal.telephony.SMSDispatcher$SmsTracker);

    protected abstract void sendText(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent);

    public void setPremiumSmsPermission(java.lang.String, int)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        java.lang.String r1;
        int i0;
        com.android.internal.telephony.SmsUsageMonitor $r2;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor>;

        virtualinvoke $r2.<com.android.internal.telephony.SmsUsageMonitor: void setPremiumSmsPermission(java.lang.String,int)>(r1, i0);

        return;
    }

    protected void updatePhoneObject(com.android.internal.telephony.PhoneBase)
    {
        com.android.internal.telephony.SMSDispatcher r0;
        com.android.internal.telephony.PhoneBase r1, $r5;
        com.android.internal.telephony.SmsUsageMonitor $r2;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.internal.telephony.SMSDispatcher;

        r1 := @parameter0: com.android.internal.telephony.PhoneBase;

        r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.PhoneBase mPhone> = r1;

        $r2 = r1.<com.android.internal.telephony.PhoneBase: com.android.internal.telephony.SmsUsageMonitor mSmsUsageMonitor>;

        r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.SmsUsageMonitor mUsageMonitor> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Active phone changed to ");

        $r5 = r0.<com.android.internal.telephony.SMSDispatcher: com.android.internal.telephony.PhoneBase mPhone>;

        $r6 = virtualinvoke $r5.<com.android.internal.telephony.PhoneBase: java.lang.String getPhoneName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("SMSDispatcher", $r8);

        return;
    }
}
