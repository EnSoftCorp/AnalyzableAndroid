class com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker extends java.security.cert.PKIXCertPathChecker
{
    private static final java.lang.String EKU_OID;
    private static final java.lang.String EKU_anyExtendedKeyUsage;
    private static final java.lang.String EKU_clientAuth;
    private static final java.lang.String EKU_msSGC;
    private static final java.lang.String EKU_nsSGC;
    private static final java.lang.String EKU_serverAuth;
    private static final java.util.Set SUPPORTED_EXTENSIONS;
    private final boolean clientAuth;
    private final java.security.cert.X509Certificate leaf;

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.lang.String[] $r1;
        java.util.List $r2;
        java.util.Set $r3;

        <com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_serverAuth> = "1.3.6.1.5.5.7.3.1";

        <com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_nsSGC> = "2.16.840.1.113730.4.1";

        <com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_msSGC> = "1.3.6.1.4.1.311.10.3.3";

        <com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_clientAuth> = "1.3.6.1.5.5.7.3.2";

        <com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_anyExtendedKeyUsage> = "2.5.29.37.0";

        <com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.lang.String EKU_OID> = "2.5.29.37";

        $r0 = new java.util.HashSet;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "2.5.29.37";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        <com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.util.Set SUPPORTED_EXTENSIONS> = $r3;

        return;
    }

    private void <init>(boolean, java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker r0;
        boolean z0;
        java.security.cert.X509Certificate r1;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.security.cert.X509Certificate;

        specialinvoke r0.<java.security.cert.PKIXCertPathChecker: void <init>()>();

        r0.<com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: boolean clientAuth> = z0;

        r0.<com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.security.cert.X509Certificate leaf> = r1;

        return;
    }

    void <init>(boolean, java.security.cert.X509Certificate, com.android.org.conscrypt.TrustManagerImpl$1)
    {
        com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker r0;
        boolean z0;
        java.security.cert.X509Certificate r1;
        com.android.org.conscrypt.TrustManagerImpl$1 r2;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.security.cert.X509Certificate;

        r2 := @parameter2: com.android.org.conscrypt.TrustManagerImpl$1;

        specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: void <init>(boolean,java.security.cert.X509Certificate)>(z0, r1);

        return;
    }

    public void check(java.security.cert.Certificate, java.util.Collection) throws java.security.cert.CertPathValidatorException
    {
        com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker r0;
        java.security.cert.Certificate r1;
        java.util.Collection r2;
        java.security.cert.CertificateParsingException r3, $r12;
        java.util.List r4;
        java.util.Iterator r5;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String r6;
        java.security.cert.X509Certificate $r7, $r8;
        java.security.cert.CertPathValidatorException $r9, $r11;
        java.lang.Object $r10;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker;

        r1 := @parameter0: java.security.cert.Certificate;

        r2 := @parameter1: java.util.Collection;

        $r7 = r0.<com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.security.cert.X509Certificate leaf>;

        if r1 == $r7 goto label02;

     label01:
        return;

     label02:
        $r8 = r0.<com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.security.cert.X509Certificate leaf>;

        r4 = virtualinvoke $r8.<java.security.cert.X509Certificate: java.util.List getExtendedKeyUsage()>();

     label03:
        if r4 == null goto label01;

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label04:
        z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        z1 = 0;

        if z0 == 0 goto label05;

        $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r10;

        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("2.5.29.37.0");

        if $z4 == 0 goto label07;

        z1 = 1;

     label05:
        if z1 == 0 goto label11;

        interfaceinvoke r2.<java.util.Collection: boolean remove(java.lang.Object)>("2.5.29.37");

        return;

     label06:
        $r12 := @caughtexception;

        r3 = $r12;

        $r11 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r11.<java.security.cert.CertPathValidatorException: void <init>(java.lang.Throwable)>(r3);

        throw $r11;

     label07:
        $z3 = r0.<com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: boolean clientAuth>;

        if $z3 == 0 goto label08;

        $z7 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("1.3.6.1.5.5.7.3.2");

        if $z7 == 0 goto label04;

        z1 = 1;

        goto label05;

     label08:
        $z6 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("1.3.6.1.5.5.7.3.1");

        if $z6 == 0 goto label09;

        z1 = 1;

        goto label05;

     label09:
        $z5 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("2.16.840.1.113730.4.1");

        if $z5 == 0 goto label10;

        z1 = 1;

        goto label05;

     label10:
        $z8 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("1.3.6.1.4.1.311.10.3.3");

        if $z8 == 0 goto label04;

        z1 = 1;

        goto label05;

     label11:
        $r9 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r9.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String)>("End-entity certificate does not have a valid extendedKeyUsage.");

        throw $r9;

        catch java.security.cert.CertificateParsingException from label02 to label03 with label06;
    }

    public java.util.Set getSupportedExtensions()
    {
        com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker r0;
        java.util.Set $r1;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker;

        $r1 = <com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: java.util.Set SUPPORTED_EXTENSIONS>;

        return $r1;
    }

    public void init(boolean) throws java.security.cert.CertPathValidatorException
    {
        com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker r0;
        boolean z0;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean isForwardCheckingSupported()
    {
        com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker r0;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker;

        return 1;
    }
}
