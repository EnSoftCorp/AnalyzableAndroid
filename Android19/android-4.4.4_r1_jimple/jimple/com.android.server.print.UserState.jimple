final class com.android.server.print.UserState extends java.lang.Object implements com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks, com.android.server.print.RemotePrintService$PrintServiceCallbacks
{
    private static final char COMPONENT_NAME_SEPARATOR;
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private final android.util.ArrayMap mActiveServices;
    private final android.content.Context mContext;
    private boolean mDestroyed;
    private final java.util.Set mEnabledServices;
    private final android.os.Handler mHandler;
    private final java.util.List mInstalledServices;
    private final java.lang.Object mLock;
    private final com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache;
    private java.util.List mPrintJobStateChangeListenerRecords;
    private com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession;
    private final android.content.Intent mQueryIntent;
    private final com.android.server.print.RemotePrintSpooler mSpooler;
    private final android.text.TextUtils$SimpleStringSplitter mStringColonSplitter;
    private final int mUserId;

    public void <init>(android.content.Context, int, java.lang.Object)
    {
        com.android.server.print.UserState r0;
        android.content.Context r1;
        int i0;
        java.lang.Object r2, r3;
        java.lang.Throwable r4, $r14;
        android.text.TextUtils$SimpleStringSplitter $r5;
        android.content.Intent $r6;
        android.util.ArrayMap $r7;
        java.util.ArrayList $r8;
        android.util.ArraySet $r9;
        com.android.server.print.UserState$PrintJobForAppCache $r10;
        com.android.server.print.RemotePrintSpooler $r11;
        com.android.server.print.UserState$UserStateHandler $r12;
        android.os.Looper $r13;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new android.text.TextUtils$SimpleStringSplitter;

        specialinvoke $r5.<android.text.TextUtils$SimpleStringSplitter: void <init>(char)>(58);

        r0.<com.android.server.print.UserState: android.text.TextUtils$SimpleStringSplitter mStringColonSplitter> = $r5;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("android.printservice.PrintService");

        r0.<com.android.server.print.UserState: android.content.Intent mQueryIntent> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.print.UserState: java.util.List mInstalledServices> = $r8;

        $r9 = new android.util.ArraySet;

        specialinvoke $r9.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.print.UserState: java.util.Set mEnabledServices> = $r9;

        $r10 = new com.android.server.print.UserState$PrintJobForAppCache;

        specialinvoke $r10.<com.android.server.print.UserState$PrintJobForAppCache: void <init>(com.android.server.print.UserState,com.android.server.print.UserState$1)>(r0, null);

        r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache> = $r10;

        r0.<com.android.server.print.UserState: android.content.Context mContext> = r1;

        r0.<com.android.server.print.UserState: int mUserId> = i0;

        r0.<com.android.server.print.UserState: java.lang.Object mLock> = r2;

        $r11 = new com.android.server.print.RemotePrintSpooler;

        specialinvoke $r11.<com.android.server.print.RemotePrintSpooler: void <init>(android.content.Context,int,com.android.server.print.RemotePrintSpooler$PrintSpoolerCallbacks)>(r1, i0, r0);

        r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler> = $r11;

        $r12 = new com.android.server.print.UserState$UserStateHandler;

        $r13 = virtualinvoke r1.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r12.<com.android.server.print.UserState$UserStateHandler: void <init>(com.android.server.print.UserState,android.os.Looper)>(r0, $r13);

        r0.<com.android.server.print.UserState: android.os.Handler mHandler> = $r12;

        r3 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void enableSystemPrintServicesOnFirstBootLocked()>();

        exitmonitor r3;

     label2:
        return;

     label3:
        $r14 := @caughtexception;

        r4 = $r14;

     label4:
        exitmonitor r3;

     label5:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    static com.android.server.print.RemotePrintSpooler access$100(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintSpooler $r1;

        r0 := @parameter0: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        return $r1;
    }

    static com.android.server.print.UserState$PrinterDiscoverySessionMediator access$202(com.android.server.print.UserState, com.android.server.print.UserState$PrinterDiscoverySessionMediator)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator r1;

        r0 := @parameter0: com.android.server.print.UserState;

        r1 := @parameter1: com.android.server.print.UserState$PrinterDiscoverySessionMediator;

        r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession> = r1;

        return r1;
    }

    static java.util.List access$300(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        return $r1;
    }

    static void access$400(com.android.server.print.UserState, android.content.ComponentName)
    {
        com.android.server.print.UserState r0;
        android.content.ComponentName r1;

        r0 := @parameter0: com.android.server.print.UserState;

        r1 := @parameter1: android.content.ComponentName;

        specialinvoke r0.<com.android.server.print.UserState: void failScheduledPrintJobsForServiceInternal(android.content.ComponentName)>(r1);

        return;
    }

    static void access$500(com.android.server.print.UserState, android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0;

        r0 := @parameter0: com.android.server.print.UserState;

        r1 := @parameter1: android.print.PrintJobId;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.print.UserState: void handleDispatchPrintJobStateChanged(android.print.PrintJobId,int)>(r1, i0);

        return;
    }

    static java.lang.Object access$600(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        return $r1;
    }

    static android.util.ArrayMap access$700(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        return $r1;
    }

    static boolean access$800(com.android.server.print.UserState)
    {
        com.android.server.print.UserState r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.print.UserState;

        $z0 = r0.<com.android.server.print.UserState: boolean mDestroyed>;

        return $z0;
    }

    private void addServiceLocked(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintService r1;
        android.util.ArrayMap $r2;
        android.content.ComponentName $r3;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: com.android.server.print.RemotePrintService;

        $r2 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r3 = virtualinvoke r1.<com.android.server.print.RemotePrintService: android.content.ComponentName getComponentName()>();

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onServiceAddedLocked(com.android.server.print.RemotePrintService)>(r1);

     label1:
        return;
    }

    private void enableSystemPrintServicesOnFirstBootLocked()
    {
        com.android.server.print.UserState r0;
        java.util.HashSet r1, $r11;
        java.lang.StringBuilder r2, $r10, $r15, $r16, $r17, $r20, $r23, $r24, $r25, $r26;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r3, r4, r5, r6, r7, $r36, $r37, $r39;
        android.content.pm.ServiceInfo r8;
        android.content.ComponentName r9, $r33;
        java.util.List $r12, $r32;
        android.content.ContentResolver $r13, $r19, $r22, $r27;
        android.content.Context $r14, $r18, $r21, $r28;
        boolean $z2, $z4, $z6, $z7;
        android.content.pm.ResolveInfo $r29;
        android.printservice.PrintServiceInfo $r30;
        java.lang.Object $r31;
        android.content.pm.ApplicationInfo $r34;
        java.util.Set $r35;

        r0 := @this: com.android.server.print.UserState;

        specialinvoke r0.<com.android.server.print.UserState: boolean readEnabledPrintServicesLocked()>();

        specialinvoke r0.<com.android.server.print.UserState: boolean readInstalledPrintServicesLocked()>();

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        r1 = $r11;

        specialinvoke r0.<com.android.server.print.UserState: void readPrintServicesFromSettingLocked(java.lang.String,java.util.Set)>("enabled_on_first_boot_system_print_services", r1);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r2 = $r10;

        $r12 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r32 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $r31 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(i1);

        $r30 = (android.printservice.PrintServiceInfo) $r31;

        $r29 = virtualinvoke $r30.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        r8 = $r29.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r34 = r8.<android.content.pm.ServiceInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i8 = $r34.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = 1 & $i8;

        if $i7 == 0 goto label3;

        $r33 = new android.content.ComponentName;

        $r36 = r8.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r37 = r8.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r33.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r36, $r37);

        r9 = $r33;

        $r35 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        $z6 = interfaceinvoke $r35.<java.util.Set: boolean contains(java.lang.Object)>(r9);

        if $z6 != 0 goto label3;

        $z7 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r9);

        if $z7 != 0 goto label3;

        $i9 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i9 <= 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

     label2:
        $r39 = virtualinvoke r9.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $i2 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i2 > 0 goto label5;

        return;

     label5:
        r3 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r13 = virtualinvoke $r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i3 = r0.<com.android.server.print.UserState: int mUserId>;

        r4 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r13, "enabled_print_services", $i3);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z2 == 0 goto label8;

        r5 = r3;

     label6:
        $r18 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r19 = virtualinvoke $r18.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i4 = r0.<com.android.server.print.UserState: int mUserId>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r19, "enabled_print_services", r5, $i4);

        $r21 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r22 = virtualinvoke $r21.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i5 = r0.<com.android.server.print.UserState: int mUserId>;

        r6 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r22, "enabled_on_first_boot_system_print_services", $i5);

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z4 == 0 goto label9;

        r7 = r3;

     label7:
        $r28 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r27 = virtualinvoke $r28.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i6 = r0.<com.android.server.print.UserState: int mUserId>;

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r27, "enabled_on_first_boot_system_print_services", r7, $i6);

        return;

     label8:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r5 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label9:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r7 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label7;
    }

    private void failActivePrintJobsForService(android.content.ComponentName)
    {
        com.android.server.print.UserState r0;
        android.content.ComponentName r1;
        android.os.Looper $r2;
        boolean $z0;
        android.os.Handler $r3;
        com.android.server.print.UserState$4 $r4;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.content.ComponentName;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $z0 = virtualinvoke $r2.<android.os.Looper: boolean isCurrentThread()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r4 = new com.android.server.print.UserState$4;

        specialinvoke $r4.<com.android.server.print.UserState$4: void <init>(com.android.server.print.UserState,android.content.ComponentName)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

        return;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void failScheduledPrintJobsForServiceInternal(android.content.ComponentName)>(r1);

        return;
    }

    private void failScheduledPrintJobsForServiceInternal(android.content.ComponentName)
    {
        com.android.server.print.UserState r0;
        android.content.ComponentName r1;
        java.util.List r2;
        long l0;
        java.lang.Throwable r3, $r11;
        int i1, i2;
        android.print.PrintJobInfo r4;
        com.android.server.print.RemotePrintSpooler $r5, $r7;
        java.lang.Object $r6;
        android.print.PrintJobId $r8;
        android.content.Context $r9;
        java.lang.String $r10;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.content.ComponentName;

        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        r2 = virtualinvoke $r5.<com.android.server.print.RemotePrintSpooler: java.util.List getPrintJobInfos(android.content.ComponentName,int,int)>(r1, -4, -2);

        if r2 != null goto label1;

        return;

     label1:
        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label3:
        i2 = 0;

     label4:
        if i2 >= i1 goto label8;

     label5:
        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r4 = (android.print.PrintJobInfo) $r6;

        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        $r8 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r9 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: java.lang.String getString(int)>(17040863);

        virtualinvoke $r7.<com.android.server.print.RemotePrintSpooler: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>($r8, 6, $r10);

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        $r11 := @caughtexception;

        r3 = $r11;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r3;

     label8:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private void handleDispatchPrintJobStateChanged(android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object r2, $r10;
        java.lang.Throwable r3, $r13;
        java.util.ArrayList r4, $r8;
        com.android.server.print.UserState$PrintJobStateChangeListenerRecord r5;
        android.os.RemoteException r6, $r12;
        java.util.List $r7, $r9;
        android.print.IPrintJobStateChangeListener $r11;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        $r7 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        if $r7 != null goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r8 = new java.util.ArrayList;

        $r9 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r4 = $r8;

        exitmonitor r2;

     label04:
        i1 = interfaceinvoke r4.<java.util.List: int size()>();

        i2 = 0;

     label05:
        if i2 >= i1 goto label12;

        $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.print.UserState$PrintJobStateChangeListenerRecord) $r10;

        $i3 = r5.<com.android.server.print.UserState$PrintJobStateChangeListenerRecord: int appId>;

        if $i3 == -2 goto label06;

        $i4 = r5.<com.android.server.print.UserState$PrintJobStateChangeListenerRecord: int appId>;

        if $i4 != i0 goto label07;

     label06:
        $r11 = r5.<com.android.server.print.UserState$PrintJobStateChangeListenerRecord: android.print.IPrintJobStateChangeListener listener>;

        interfaceinvoke $r11.<android.print.IPrintJobStateChangeListener: void onPrintJobStateChanged(android.print.PrintJobId)>(r1);

     label07:
        i2 = i2 + 1;

        goto label05;

     label08:
        $r13 := @caughtexception;

        r3 = $r13;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        $r12 := @caughtexception;

        r6 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("UserState", "Error notifying for print job state change", r6);

        goto label07;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch android.os.RemoteException from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void onConfigurationChangedLocked()
    {
        com.android.server.print.UserState r0;
        int i0, i1, $i2;
        android.content.pm.ResolveInfo r1;
        android.content.ComponentName r2, $r8;
        com.android.server.print.RemotePrintService r3, $r17;
        java.util.List $r4, $r5;
        java.lang.Object $r6, $r16;
        android.printservice.PrintServiceInfo $r7;
        android.content.pm.ServiceInfo $r9, $r10;
        java.lang.String $r11, $r13;
        java.util.Set $r12;
        android.util.ArrayMap $r14, $r15;
        boolean $z0, $z1;
        com.android.server.print.RemotePrintSpooler $r18;
        android.content.Context $r19;

        r0 := @this: com.android.server.print.UserState;

        $r4 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r5 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (android.printservice.PrintServiceInfo) $r6;

        r1 = virtualinvoke $r7.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r8 = new android.content.ComponentName;

        $r9 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r13 = $r9.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r10 = r1.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r11 = $r10.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r8.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r13, $r11);

        r2 = $r8;

        $r12 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        $z0 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        $r15 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z1 = virtualinvoke $r15.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        $r17 = new com.android.server.print.RemotePrintService;

        $r19 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $i2 = r0.<com.android.server.print.UserState: int mUserId>;

        $r18 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        specialinvoke $r17.<com.android.server.print.RemotePrintService: void <init>(android.content.Context,android.content.ComponentName,int,com.android.server.print.RemotePrintSpooler,com.android.server.print.RemotePrintService$PrintServiceCallbacks)>($r19, r2, $i2, $r18, r0);

        specialinvoke r0.<com.android.server.print.UserState: void addServiceLocked(com.android.server.print.RemotePrintService)>($r17);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r14 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r16 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r2);

        r3 = (com.android.server.print.RemotePrintService) $r16;

        if r3 == null goto label2;

        specialinvoke r0.<com.android.server.print.UserState: void removeServiceLocked(com.android.server.print.RemotePrintService)>(r3);

        goto label2;

     label4:
        return;
    }

    private boolean readConfigurationLocked()
    {
        com.android.server.print.UserState r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.server.print.UserState;

        $z0 = specialinvoke r0.<com.android.server.print.UserState: boolean readInstalledPrintServicesLocked()>();

        $z1 = 0 | $z0;

        $z2 = specialinvoke r0.<com.android.server.print.UserState: boolean readEnabledPrintServicesLocked()>();

        $z3 = $z1 | $z2;

        return $z3;
    }

    private boolean readEnabledPrintServicesLocked()
    {
        com.android.server.print.UserState r0;
        java.util.HashSet r1, $r2;
        java.util.Set $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.print.UserState;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r1 = $r2;

        specialinvoke r0.<com.android.server.print.UserState: void readPrintServicesFromSettingLocked(java.lang.String,java.util.Set)>("enabled_print_services", r1);

        $r3 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        interfaceinvoke $r4.<java.util.Set: void clear()>();

        $r5 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        interfaceinvoke $r5.<java.util.Set: boolean addAll(java.util.Collection)>(r1);

        return 1;

     label1:
        return 0;
    }

    private boolean readInstalledPrintServicesLocked()
    {
        com.android.server.print.UserState r0;
        java.util.HashSet r1, $r5;
        java.util.List r2, $r9, $r10, $r11;
        int i0, i1, $i2;
        android.content.pm.ResolveInfo r3;
        android.content.ComponentName r4, $r19;
        android.content.Context $r6, $r16;
        android.content.pm.PackageManager $r7;
        android.content.Intent $r8;
        boolean $z0, $z2;
        android.content.pm.ServiceInfo $r12, $r18, $r21;
        java.lang.Object $r13;
        java.lang.String $r14, $r15, $r20, $r23, $r27, $r29;
        android.printservice.PrintServiceInfo $r17;
        java.lang.StringBuilder $r22, $r24, $r25, $r26, $r28;

        r0 := @this: com.android.server.print.UserState;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r1 = $r5;

        $r6 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r8 = r0.<com.android.server.print.UserState: android.content.Intent mQueryIntent>;

        $i2 = r0.<com.android.server.print.UserState: int mUserId>;

        r2 = virtualinvoke $r7.<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>($r8, 132, $i2);

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.ResolveInfo) $r13;

        $r14 = "android.permission.BIND_PRINT_SERVICE";

        $r12 = r3.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r15 = $r12.<android.content.pm.ServiceInfo: java.lang.String permission>;

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z2 != 0 goto label3;

        $r19 = new android.content.ComponentName;

        $r18 = r3.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r23 = $r18.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r21 = r3.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r20 = $r21.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r19.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r23, $r20);

        r4 = $r19;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping print service ");

        $r27 = virtualinvoke r4.<android.content.ComponentName: java.lang.String flattenToShortString()>();

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since it does not require permission ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.BIND_PRINT_SERVICE");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UserState", $r29);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r16 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r17 = staticinvoke <android.printservice.PrintServiceInfo: android.printservice.PrintServiceInfo create(android.content.pm.ResolveInfo,android.content.Context)>(r3, $r16);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r17);

        goto label2;

     label4:
        $r9 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label5;

        $r10 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        interfaceinvoke $r10.<java.util.List: void clear()>();

        $r11 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        interfaceinvoke $r11.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return 1;

     label5:
        return 0;
    }

    private void readPrintServicesFromSettingLocked(java.lang.String, java.util.Set)
    {
        com.android.server.print.UserState r0;
        java.lang.String r1, r3, r5;
        java.util.Set r2;
        android.text.TextUtils$SimpleStringSplitter r4;
        android.content.ComponentName r6;
        android.content.Context $r7;
        android.content.ContentResolver $r8;
        int $i0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Set;

        $r7 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = r0.<com.android.server.print.UserState: int mUserId>;

        r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r8, r1, $i0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label2;

        r4 = r0.<com.android.server.print.UserState: android.text.TextUtils$SimpleStringSplitter mStringColonSplitter>;

        virtualinvoke r4.<android.text.TextUtils$SimpleStringSplitter: void setString(java.lang.String)>(r3);

     label1:
        $z1 = virtualinvoke r4.<android.text.TextUtils$SimpleStringSplitter: boolean hasNext()>();

        if $z1 == 0 goto label2;

        r5 = virtualinvoke r4.<android.text.TextUtils$SimpleStringSplitter: java.lang.String next()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z2 != 0 goto label1;

        r6 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r5);

        if r6 == null goto label1;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r6);

        goto label1;

     label2:
        return;
    }

    private void removeServiceLocked(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintService r1;
        android.content.ComponentName $r2;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r3, $r4;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: com.android.server.print.RemotePrintService;

        $r2 = virtualinvoke r1.<com.android.server.print.RemotePrintService: android.content.ComponentName getComponentName()>();

        specialinvoke r0.<com.android.server.print.UserState: void failActivePrintJobsForService(android.content.ComponentName)>($r2);

        $r3 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r4.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onServiceRemovedLocked(com.android.server.print.RemotePrintService)>(r1);

        return;

     label1:
        virtualinvoke r1.<com.android.server.print.RemotePrintService: void destroy()>();

        return;
    }

    private void throwIfDestroyedLocked()
    {
        com.android.server.print.UserState r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.server.print.UserState;

        $z0 = r0.<com.android.server.print.UserState: boolean mDestroyed>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot interact with a destroyed instance.");

        throw $r1;

     label1:
        return;
    }

    public void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener, int) throws android.os.RemoteException
    {
        com.android.server.print.UserState r0;
        android.print.IPrintJobStateChangeListener r1;
        int i0;
        java.lang.Object r2;
        java.lang.Throwable r3, $r8;
        java.util.List $r4, $r6;
        com.android.server.print.UserState$3 $r5;
        java.util.ArrayList $r7;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrintJobStateChangeListener;

        i0 := @parameter1: int;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        if $r4 != null goto label2;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords> = $r7;

     label2:
        $r6 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        $r5 = new com.android.server.print.UserState$3;

        specialinvoke $r5.<com.android.server.print.UserState$3: void <init>(com.android.server.print.UserState,android.print.IPrintJobStateChangeListener,int)>(r0, r1, i0);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        exitmonitor r2;

     label3:
        return;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void cancelPrintJob(android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0, $i1;
        android.print.PrintJobInfo r2;
        android.content.ComponentName r3;
        java.lang.Object r4, $r11;
        java.lang.Throwable r5, $r13;
        com.android.server.print.RemotePrintService r6;
        com.android.server.print.RemotePrintSpooler $r7, $r8, $r9;
        android.print.PrinterId $r10;
        android.util.ArrayMap $r12;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        r2 = virtualinvoke $r7.<com.android.server.print.RemotePrintSpooler: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r1, i0);

        if r2 != null goto label2;

     label1:
        return;

     label2:
        $r8 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r8.<com.android.server.print.RemotePrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>(r1, 1);

        $i1 = virtualinvoke r2.<android.print.PrintJobInfo: int getState()>();

        if $i1 == 6 goto label8;

        $r10 = virtualinvoke r2.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        r3 = virtualinvoke $r10.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        r4 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r4;

     label3:
        $r12 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r11 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (com.android.server.print.RemotePrintService) $r11;

        exitmonitor r4;

     label4:
        if r6 == null goto label1;

        virtualinvoke r6.<com.android.server.print.RemotePrintService: void onRequestCancelPrintJob(android.print.PrintJobInfo)>(r2);

        return;

     label5:
        $r13 := @caughtexception;

        r5 = $r13;

     label6:
        exitmonitor r4;

     label7:
        throw r5;

     label8:
        $r9 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r9.<com.android.server.print.RemotePrintSpooler: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>(r1, 7, null);

        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver)
    {
        com.android.server.print.UserState r0;
        android.print.IPrinterDiscoveryObserver r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r10;
        android.util.ArrayMap $r4;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6, $r9;
        com.android.server.print.UserState$2 $r7;
        android.content.Context $r8;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrinterDiscoveryObserver;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 != null goto label09;

        $r7 = new com.android.server.print.UserState$2;

        $r8 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        specialinvoke $r7.<com.android.server.print.UserState$2: void <init>(com.android.server.print.UserState,android.content.Context)>(r0, $r8);

        r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession> = $r7;

        $r9 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r9.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void addObserverLocked(android.print.IPrinterDiscoveryObserver)>(r1);

     label04:
        exitmonitor r2;

     label05:
        return;

     label06:
        $r10 := @caughtexception;

        r3 = $r10;

     label07:
        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void addObserverLocked(android.print.IPrinterDiscoveryObserver)>(r1);

     label10:
        goto label04;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    public void destroyLocked()
    {
        com.android.server.print.UserState r0;
        java.util.Iterator r1;
        com.android.server.print.RemotePrintSpooler $r2;
        android.util.ArrayMap $r3, $r5;
        java.util.Collection $r4;
        boolean $z0;
        java.util.List $r6;
        java.util.Set $r7;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r8, $r9;
        java.lang.Object $r10;
        com.android.server.print.RemotePrintService $r11;

        r0 := @this: com.android.server.print.UserState;

        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r2 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r2.<com.android.server.print.RemotePrintSpooler: void destroy()>();

        $r3 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r4 = virtualinvoke $r3.<android.util.ArrayMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.android.server.print.RemotePrintService) $r10;

        virtualinvoke $r11.<com.android.server.print.RemotePrintService: void destroy()>();

        goto label1;

     label2:
        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        virtualinvoke $r5.<android.util.ArrayMap: void clear()>();

        $r6 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        interfaceinvoke $r6.<java.util.List: void clear()>();

        $r7 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        interfaceinvoke $r7.<java.util.Set: void clear()>();

        $r8 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r8 == null goto label3;

        $r9 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r9.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void destroyLocked()>();

        r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession> = null;

     label3:
        r0.<com.android.server.print.UserState: boolean mDestroyed> = 1;

        return;
    }

    public void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver)
    {
        com.android.server.print.UserState r0;
        android.print.IPrinterDiscoveryObserver r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r6;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r4, $r5;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrinterDiscoveryObserver;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r4 != null goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r5.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void removeObserverLocked(android.print.IPrinterDiscoveryObserver)>(r1);

        exitmonitor r2;

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String)
    {
        com.android.server.print.UserState r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2, $r10, $r12, $r13, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r31, $r32, $r38, $r39, $r40, $r42, $r43, $r44, $r69, $r70, $r73, $r74, $r75, $r78, $r84, $r89, $r90, $r92, $r93, $r95, $r96, $r97, $r98, $r100, $r101, $r102, $r103;
        java.lang.String r3, r6, r8, $r14, $r34, $r52, $r59, $r67, $r72, $r83, $r86, $r91, $r94, $r99;
        int i0, i1, i2, i3, $i4;
        java.util.Iterator r4;
        android.content.ComponentName r5, r11, $r87;
        android.printservice.PrintServiceInfo r7;
        android.content.pm.ResolveInfo r9;
        java.util.List $r19, $r80;
        java.util.Set $r22;
        boolean $z0;
        android.util.ArrayMap $r28, $r60;
        java.lang.StringBuilder $r29, $r33, $r35, $r36, $r41, $r45, $r46, $r47, $r49, $r51, $r54, $r56, $r57, $r58, $r61, $r62, $r63, $r64, $r65, $r66, $r76, $r77, $r81, $r82;
        com.android.server.print.UserState$PrintJobForAppCache $r30;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r37, $r50;
        com.android.server.print.RemotePrintSpooler $r48;
        java.lang.Object $r53, $r68, $r79;
        com.android.server.print.RemotePrintService $r55;
        android.content.pm.ServiceInfo $r85, $r88;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        $r10 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r12 = virtualinvoke $r10.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("user state ");

        $i4 = r0.<com.android.server.print.UserState: int mUserId>;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        $r13 = virtualinvoke $r12.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r14);

        virtualinvoke $r13.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(":");

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r15 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r18 = virtualinvoke $r15.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r17 = virtualinvoke $r18.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("installed services:");

        virtualinvoke $r17.<java.io.PrintWriter: void println()>();

        $r19 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        i0 = interfaceinvoke $r19.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r80 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $r79 = interfaceinvoke $r80.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (android.printservice.PrintServiceInfo) $r79;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r77 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r8 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        $r78 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r8);

        $r89 = virtualinvoke $r78.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("service:");

        virtualinvoke $r89.<java.io.PrintWriter: void println()>();

        r9 = virtualinvoke r7.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r87 = new android.content.ComponentName;

        $r88 = r9.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r83 = $r88.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r85 = r9.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r86 = $r85.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r87.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r83, $r86);

        r11 = $r87;

        $r84 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r8);

        $r96 = virtualinvoke $r84.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r97 = virtualinvoke $r96.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("componentName=");

        $r94 = virtualinvoke r11.<android.content.ComponentName: java.lang.String flattenToString()>();

        $r95 = virtualinvoke $r97.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r94);

        virtualinvoke $r95.<java.io.PrintWriter: void println()>();

        $r92 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r8);

        $r93 = virtualinvoke $r92.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r90 = virtualinvoke $r93.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("settingsActivity=");

        $r91 = virtualinvoke r7.<android.printservice.PrintServiceInfo: java.lang.String getSettingsActivityName()>();

        $r103 = virtualinvoke $r90.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r91);

        virtualinvoke $r103.<java.io.PrintWriter: void println()>();

        $r102 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r8);

        $r101 = virtualinvoke $r102.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r100 = virtualinvoke $r101.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("addPrintersActivity=");

        $r99 = virtualinvoke r7.<android.printservice.PrintServiceInfo: java.lang.String getAddPrintersActivityName()>();

        $r98 = virtualinvoke $r100.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r99);

        virtualinvoke $r98.<java.io.PrintWriter: void println()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r21 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r20 = virtualinvoke $r21.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r23 = virtualinvoke $r20.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("enabled services:");

        virtualinvoke $r23.<java.io.PrintWriter: void println()>();

        $r22 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        r4 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r68 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.content.ComponentName) $r68;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        r6 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        $r73 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r6);

        $r75 = virtualinvoke $r73.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("service:");

        virtualinvoke $r75.<java.io.PrintWriter: void println()>();

        $r74 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r6);

        $r70 = virtualinvoke $r74.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r69 = virtualinvoke $r70.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("componentName=");

        $r72 = virtualinvoke r5.<android.content.ComponentName: java.lang.String flattenToString()>();

        virtualinvoke $r69.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r72);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        goto label3;

     label4:
        $r24 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r25 = virtualinvoke $r24.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r27 = virtualinvoke $r25.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("active services:");

        virtualinvoke $r27.<java.io.PrintWriter: void println()>();

        $r28 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        i2 = virtualinvoke $r28.<android.util.ArrayMap: int size()>();

        i3 = 0;

     label5:
        if i3 >= i2 goto label6;

        $r60 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r53 = virtualinvoke $r60.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        $r55 = (com.android.server.print.RemotePrintService) $r53;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r65 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r55.<com.android.server.print.RemotePrintService: void dump(java.io.PrintWriter,java.lang.String)>(r2, $r67);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        i3 = i3 + 1;

        goto label5;

     label6:
        $r26 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r31 = virtualinvoke $r26.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r32 = virtualinvoke $r31.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("cached print jobs:");

        virtualinvoke $r32.<java.io.PrintWriter: void println()>();

        $r30 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r30.<com.android.server.print.UserState$PrintJobForAppCache: void dump(java.io.PrintWriter,java.lang.String)>(r2, $r34);

        $r40 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r39 = virtualinvoke $r40.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r38 = virtualinvoke $r39.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("discovery mediator:");

        virtualinvoke $r38.<java.io.PrintWriter: void println()>();

        $r37 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r37 == null goto label7;

        $r50 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r57 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void dump(java.io.PrintWriter,java.lang.String)>(r2, $r59);

     label7:
        $r44 = virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r3);

        $r43 = virtualinvoke $r44.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("  ");

        $r42 = virtualinvoke $r43.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("print spooler:");

        virtualinvoke $r42.<java.io.PrintWriter: void println()>();

        $r48 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r52 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r48.<com.android.server.print.RemotePrintSpooler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String)>(r1, r2, $r52);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        return;
    }

    public java.util.List getEnabledPrintServices()
    {
        com.android.server.print.UserState r0;
        java.lang.Object r1, $r9;
        java.lang.Throwable r2, $r18, $r20;
        int i0, i1;
        java.util.ArrayList r3, r6, $r19;
        android.printservice.PrintServiceInfo r4;
        android.content.ComponentName r5, $r11;
        java.util.List $r7, $r8;
        android.content.pm.ResolveInfo $r10, $r15;
        java.lang.String $r12, $r17;
        android.content.pm.ServiceInfo $r13, $r14;
        android.util.ArrayMap $r16;
        boolean $z1;

        r0 := @this: com.android.server.print.UserState;

        r1 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r1;

     label01:
        $r7 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        i0 = interfaceinvoke $r7.<java.util.List: int size()>();

     label02:
        i1 = 0;

        r3 = null;

     label03:
        if i1 >= i0 goto label09;

     label04:
        $r8 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (android.printservice.PrintServiceInfo) $r9;

        $r11 = new android.content.ComponentName;

        $r10 = virtualinvoke r4.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r13 = $r10.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r12 = $r13.<android.content.pm.ServiceInfo: java.lang.String packageName>;

        $r15 = virtualinvoke r4.<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>();

        $r14 = $r15.<android.content.pm.ResolveInfo: android.content.pm.ServiceInfo serviceInfo>;

        $r17 = $r14.<android.content.pm.ServiceInfo: java.lang.String name>;

        specialinvoke $r11.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>($r12, $r17);

        r5 = $r11;

        $r16 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z1 = virtualinvoke $r16.<android.util.ArrayMap: boolean containsKey(java.lang.Object)>(r5);

        if $z1 == 0 goto label16;

     label05:
        if r3 != null goto label15;

     label06:
        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r6 = $r19;

     label07:
        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r4);

     label08:
        i1 = i1 + 1;

        r3 = r6;

        goto label03;

     label09:
        exitmonitor r1;

     label10:
        return r3;

     label11:
        $r18 := @caughtexception;

        r2 = $r18;

     label12:
        exitmonitor r1;

     label13:
        throw r2;

     label14:
        $r20 := @caughtexception;

        r2 = $r20;

        goto label12;

     label15:
        r6 = r3;

        goto label07;

     label16:
        r6 = r3;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public java.util.Set getEnabledServices()
    {
        com.android.server.print.UserState r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.util.Set r3;

        r0 := @this: com.android.server.print.UserState;

        r1 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        r3 = r0.<com.android.server.print.UserState: java.util.Set mEnabledServices>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.util.List getInstalledPrintServices()
    {
        com.android.server.print.UserState r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        java.util.List r3;

        r0 := @this: com.android.server.print.UserState;

        r1 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.server.print.UserState: java.util.List mInstalledServices>;

        exitmonitor r1;

     label2:
        return r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0;
        android.print.PrintJobInfo r2;
        com.android.server.print.UserState$PrintJobForAppCache $r3;
        com.android.server.print.RemotePrintSpooler $r4;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        r2 = virtualinvoke $r3.<com.android.server.print.UserState$PrintJobForAppCache: android.print.PrintJobInfo getPrintJob(android.print.PrintJobId,int)>(r1, i0);

        if r2 != null goto label1;

        $r4 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        r2 = virtualinvoke $r4.<com.android.server.print.RemotePrintSpooler: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r1, i0);

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<android.print.PrintJobInfo: void setTag(java.lang.String)>(null);

        virtualinvoke r2.<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>(null);

     label2:
        return r2;
    }

    public java.util.List getPrintJobInfos(int)
    {
        com.android.server.print.UserState r0;
        int i0, i1, i2, i3, i4;
        java.util.List r1, r3;
        android.util.ArrayMap r2, $r7;
        android.print.PrintJobInfo r4, r5;
        com.android.server.print.UserState$PrintJobForAppCache $r6;
        com.android.server.print.RemotePrintSpooler $r8;
        java.util.Collection $r9;
        java.util.ArrayList $r10;
        java.lang.Object $r11, $r15;
        android.print.PrintJobId $r13, $r14;

        r0 := @this: com.android.server.print.UserState;

        i0 := @parameter0: int;

        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        r1 = virtualinvoke $r6.<com.android.server.print.UserState$PrintJobForAppCache: java.util.List getPrintJobs(int)>(i0);

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r2 = $r7;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r15 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (android.print.PrintJobInfo) $r15;

        $r14 = virtualinvoke r5.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r5);

        virtualinvoke r5.<android.print.PrintJobInfo: void setTag(java.lang.String)>(null);

        virtualinvoke r5.<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>(null);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r8 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        r3 = virtualinvoke $r8.<com.android.server.print.RemotePrintSpooler: java.util.List getPrintJobInfos(android.content.ComponentName,int,int)>(null, -1, i0);

        if r3 == null goto label4;

        i3 = interfaceinvoke r3.<java.util.List: int size()>();

        i4 = 0;

     label3:
        if i4 >= i3 goto label4;

        $r11 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i4);

        r4 = (android.print.PrintJobInfo) $r11;

        $r13 = virtualinvoke r4.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        virtualinvoke r2.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r4);

        virtualinvoke r4.<android.print.PrintJobInfo: void setTag(java.lang.String)>(null);

        virtualinvoke r4.<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>(null);

        i4 = i4 + 1;

        goto label3;

     label4:
        $r10 = new java.util.ArrayList;

        $r9 = virtualinvoke r2.<android.util.ArrayMap: java.util.Collection values()>();

        specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        return $r10;
    }

    public void onAllPrintJobsForServiceHandled(android.content.ComponentName)
    {
        com.android.server.print.UserState r0;
        android.content.ComponentName r1;
        java.lang.Object r2, $r6;
        java.lang.Throwable r3, $r7;
        com.android.server.print.RemotePrintService r4;
        android.util.ArrayMap $r5;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.content.ComponentName;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r6 = virtualinvoke $r5.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.server.print.RemotePrintService) $r6;

        exitmonitor r2;

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<com.android.server.print.RemotePrintService: void onAllPrintJobsHandled()>();

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onPrintJobQueued(android.print.PrintJobInfo)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobInfo r1;
        java.lang.Object r2, $r8;
        java.lang.Throwable r3, $r13;
        android.content.ComponentName r4;
        com.android.server.print.RemotePrintService r5;
        android.print.PrinterId $r6;
        android.util.ArrayMap $r7;
        com.android.server.print.RemotePrintSpooler $r9;
        android.print.PrintJobId $r10;
        android.content.Context $r11;
        java.lang.String $r12;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobInfo;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r6 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>();

        r4 = virtualinvoke $r6.<android.print.PrinterId: android.content.ComponentName getServiceName()>();

        $r7 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.print.RemotePrintService) $r8;

        exitmonitor r2;

     label2:
        if r5 == null goto label6;

        virtualinvoke r5.<com.android.server.print.RemotePrintService: void onPrintJobQueued(android.print.PrintJobInfo)>(r1);

        return;

     label3:
        $r13 := @caughtexception;

        r3 = $r13;

     label4:
        exitmonitor r2;

     label5:
        throw r3;

     label6:
        $r9 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        $r10 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r11 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.String getString(int)>(17040863);

        virtualinvoke $r9.<com.android.server.print.RemotePrintSpooler: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>($r10, 6, $r12);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void onPrintJobStateChanged(android.print.PrintJobInfo)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobInfo r1;
        com.android.server.print.UserState$PrintJobForAppCache $r2;
        android.os.Handler $r3;
        int $i0;
        android.print.PrintJobId $r4;
        android.os.Message $r5;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobInfo;

        $r2 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        virtualinvoke $r2.<com.android.server.print.UserState$PrintJobForAppCache: void onPrintJobStateChanged(android.print.PrintJobInfo)>(r1);

        $r3 = r0.<com.android.server.print.UserState: android.os.Handler mHandler>;

        $i0 = virtualinvoke r1.<android.print.PrintJobInfo: int getAppId()>();

        $r4 = virtualinvoke r1.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r5 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(1, $i0, 0, $r4);

        virtualinvoke $r5.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void onPrintersAdded(java.util.List)
    {
        com.android.server.print.UserState r0;
        java.util.List r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r7;
        android.util.ArrayMap $r4;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.util.List;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 != null goto label8;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onPrintersAddedLocked(java.util.List)>(r1);

        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public void onPrintersRemoved(java.util.List)
    {
        com.android.server.print.UserState r0;
        java.util.List r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r7;
        android.util.ArrayMap $r4;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.util.List;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 != null goto label8;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onPrintersRemovedLocked(java.util.List)>(r1);

        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public void onServiceDied(com.android.server.print.RemotePrintService)
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintService r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r8;
        android.util.ArrayMap $r4;
        boolean $z0;
        android.content.ComponentName $r5;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r6, $r7;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: com.android.server.print.RemotePrintService;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = virtualinvoke r1.<com.android.server.print.RemotePrintService: android.content.ComponentName getComponentName()>();

        specialinvoke r0.<com.android.server.print.UserState: void failActivePrintJobsForService(android.content.ComponentName)>($r5);

        virtualinvoke r1.<com.android.server.print.RemotePrintService: void onAllPrintJobsHandled()>();

        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r6 != null goto label8;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r7.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void onServiceDiedLocked(com.android.server.print.RemotePrintService)>(r1);

        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public android.os.Bundle print(java.lang.String, android.print.IPrintDocumentAdapter, android.print.PrintAttributes, java.lang.String, int)
    {
        com.android.server.print.UserState r0;
        java.lang.String r1, r4, $r21;
        android.print.IPrintDocumentAdapter r2;
        android.print.PrintAttributes r3;
        int i0, $i3;
        android.print.PrintJobInfo r5, $r11;
        long l1, $l2;
        android.content.Intent r6, $r18;
        java.lang.Throwable r7, $r30;
        android.os.Bundle r8, $r31;
        android.content.IntentSender r9;
        android.print.PrintJobId $r10, $r19;
        com.android.server.print.UserState$PrintJobForAppCache $r12;
        boolean $z0;
        android.os.IBinder $r13, $r25;
        java.lang.Void[] $r14;
        com.android.server.print.UserState$1 $r15;
        java.util.concurrent.Executor $r17;
        android.net.Uri $r22;
        android.content.Context $r27;
        android.os.UserHandle $r28;
        android.app.PendingIntent $r29;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.print.IPrintDocumentAdapter;

        r3 := @parameter2: android.print.PrintAttributes;

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        $r11 = new android.print.PrintJobInfo;

        specialinvoke $r11.<android.print.PrintJobInfo: void <init>()>();

        r5 = $r11;

        $r10 = new android.print.PrintJobId;

        specialinvoke $r10.<android.print.PrintJobId: void <init>()>();

        virtualinvoke r5.<android.print.PrintJobInfo: void setId(android.print.PrintJobId)>($r10);

        virtualinvoke r5.<android.print.PrintJobInfo: void setAppId(int)>(i0);

        virtualinvoke r5.<android.print.PrintJobInfo: void setLabel(java.lang.String)>(r1);

        virtualinvoke r5.<android.print.PrintJobInfo: void setAttributes(android.print.PrintAttributes)>(r3);

        virtualinvoke r5.<android.print.PrintJobInfo: void setState(int)>(1);

        virtualinvoke r5.<android.print.PrintJobInfo: void setCopies(int)>(1);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r5.<android.print.PrintJobInfo: void setCreationTime(long)>($l2);

        $r12 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrintJobForAppCache mPrintJobForAppCache>;

        $r13 = interfaceinvoke r2.<android.print.IPrintDocumentAdapter: android.os.IBinder asBinder()>();

        $z0 = virtualinvoke $r12.<com.android.server.print.UserState$PrintJobForAppCache: boolean onPrintJobCreated(android.os.IBinder,int,android.print.PrintJobInfo)>($r13, i0, r5);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r15 = new com.android.server.print.UserState$1;

        specialinvoke $r15.<com.android.server.print.UserState$1: void <init>(com.android.server.print.UserState,android.print.PrintJobInfo)>(r0, r5);

        $r17 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r14 = (java.lang.Void[]) null;

        virtualinvoke $r15.<com.android.server.print.UserState$1: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r17, $r14);

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label2:
        $r18 = new android.content.Intent;

        specialinvoke $r18.<android.content.Intent: void <init>(java.lang.String)>("android.print.PRINT_DIALOG");

        r6 = $r18;

        $r19 = virtualinvoke r5.<android.print.PrintJobInfo: android.print.PrintJobId getId()>();

        $r21 = virtualinvoke $r19.<android.print.PrintJobId: java.lang.String flattenToString()>();

        $r22 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("printjob", $r21, null);

        virtualinvoke r6.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r22);

        $r25 = interfaceinvoke r2.<android.print.IPrintDocumentAdapter: android.os.IBinder asBinder()>();

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>("android.print.intent.extra.EXTRA_PRINT_DOCUMENT_ADAPTER", $r25);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.print.intent.extra.EXTRA_PRINT_JOB", r5);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.content.extra.PACKAGE_NAME", r4);

        $r27 = r0.<com.android.server.print.UserState: android.content.Context mContext>;

        $r28 = new android.os.UserHandle;

        $i3 = r0.<com.android.server.print.UserState: int mUserId>;

        specialinvoke $r28.<android.os.UserHandle: void <init>(int)>($i3);

        $r29 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>($r27, 0, r6, 1342177280, null, $r28);

        r9 = virtualinvoke $r29.<android.app.PendingIntent: android.content.IntentSender getIntentSender()>();

        $r31 = new android.os.Bundle;

        specialinvoke $r31.<android.os.Bundle: void <init>()>();

        r8 = $r31;

        virtualinvoke r8.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.print.intent.extra.EXTRA_PRINT_JOB", r5);

        virtualinvoke r8.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("android.print.intent.extra.EXTRA_PRINT_DIALOG_INTENT", r9);

     label3:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r8;

     label4:
        $r30 := @caughtexception;

        r7 = $r30;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r7;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void removeObsoletePrintJobs()
    {
        com.android.server.print.UserState r0;
        com.android.server.print.RemotePrintSpooler $r1;

        r0 := @this: com.android.server.print.UserState;

        $r1 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r1.<com.android.server.print.RemotePrintSpooler: void removeObsoletePrintJobs()>();

        return;
    }

    public void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener)
    {
        com.android.server.print.UserState r0;
        android.print.IPrintJobStateChangeListener r1, $r11;
        java.lang.Object r2, $r8;
        java.lang.Throwable r3, $r15;
        int i0, i1;
        java.util.List $r4, $r5, $r6, $r7, $r14;
        boolean $z0, $z1;
        com.android.server.print.UserState$PrintJobStateChangeListenerRecord $r9;
        android.os.IBinder $r10, $r12;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrintJobStateChangeListener;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label01:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        if $r4 != null goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r5 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        i0 = interfaceinvoke $r5.<java.util.List: int size()>();

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label07;

     label06:
        $r7 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (com.android.server.print.UserState$PrintJobStateChangeListenerRecord) $r8;

        $r11 = $r9.<com.android.server.print.UserState$PrintJobStateChangeListenerRecord: android.print.IPrintJobStateChangeListener listener>;

        $r10 = interfaceinvoke $r11.<android.print.IPrintJobStateChangeListener: android.os.IBinder asBinder()>();

        $r12 = interfaceinvoke r1.<android.print.IPrintJobStateChangeListener: android.os.IBinder asBinder()>();

        $z1 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z1 == 0 goto label13;

        $r14 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        interfaceinvoke $r14.<java.util.List: java.lang.Object remove(int)>(i1);

     label07:
        $r6 = r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords>;

        $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label08;

        r0.<com.android.server.print.UserState: java.util.List mPrintJobStateChangeListenerRecords> = null;

     label08:
        exitmonitor r2;

     label09:
        return;

     label10:
        $r15 := @caughtexception;

        r3 = $r15;

     label11:
        exitmonitor r2;

     label12:
        throw r3;

     label13:
        i1 = i1 + 1;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void restartPrintJob(android.print.PrintJobId, int)
    {
        com.android.server.print.UserState r0;
        android.print.PrintJobId r1;
        int i0, $i1;
        android.print.PrintJobInfo r2;
        com.android.server.print.RemotePrintSpooler $r3;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrintJobId;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.server.print.UserState: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>(r1, i0);

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<android.print.PrintJobInfo: int getState()>();

        if $i1 == 6 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.android.server.print.UserState: com.android.server.print.RemotePrintSpooler mSpooler>;

        virtualinvoke $r3.<com.android.server.print.RemotePrintSpooler: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>(r1, 2, null);

        return;
    }

    public void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver, java.util.List)
    {
        com.android.server.print.UserState r0;
        android.print.IPrinterDiscoveryObserver r1;
        java.util.List r2;
        java.lang.Object r3;
        java.lang.Throwable r4, $r8;
        android.util.ArrayMap $r5;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r6, $r7;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrinterDiscoveryObserver;

        r2 := @parameter1: java.util.List;

        r3 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r3;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r5 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r5.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r3;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r6 != null goto label8;

        exitmonitor r3;

     label4:
        return;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

     label6:
        exitmonitor r3;

     label7:
        throw r4;

     label8:
        $r7 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r7.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void startPrinterDiscoveryLocked(android.print.IPrinterDiscoveryObserver,java.util.List)>(r1, r2);

        exitmonitor r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public void startPrinterStateTracking(android.print.PrinterId)
    {
        com.android.server.print.UserState r0;
        android.print.PrinterId r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r7;
        android.util.ArrayMap $r4;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrinterId;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 != null goto label8;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void startPrinterStateTrackingLocked(android.print.PrinterId)>(r1);

        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver)
    {
        com.android.server.print.UserState r0;
        android.print.IPrinterDiscoveryObserver r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r7;
        android.util.ArrayMap $r4;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.IPrinterDiscoveryObserver;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 != null goto label8;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void stopPrinterDiscoveryLocked(android.print.IPrinterDiscoveryObserver)>(r1);

        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public void stopPrinterStateTracking(android.print.PrinterId)
    {
        com.android.server.print.UserState r0;
        android.print.PrinterId r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r7;
        android.util.ArrayMap $r4;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: android.print.PrinterId;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 != null goto label8;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void stopPrinterStateTrackingLocked(android.print.PrinterId)>(r1);

        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public void updateIfNeededLocked()
    {
        com.android.server.print.UserState r0;
        boolean $z0;

        r0 := @this: com.android.server.print.UserState;

        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $z0 = specialinvoke r0.<com.android.server.print.UserState: boolean readConfigurationLocked()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.server.print.UserState: void onConfigurationChangedLocked()>();

     label1:
        return;
    }

    public void validatePrinters(java.util.List)
    {
        com.android.server.print.UserState r0;
        java.util.List r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r7;
        android.util.ArrayMap $r4;
        boolean $z0;
        com.android.server.print.UserState$PrinterDiscoverySessionMediator $r5, $r6;

        r0 := @this: com.android.server.print.UserState;

        r1 := @parameter0: java.util.List;

        r2 = r0.<com.android.server.print.UserState: java.lang.Object mLock>;

        entermonitor r2;

     label1:
        specialinvoke r0.<com.android.server.print.UserState: void throwIfDestroyedLocked()>();

        $r4 = r0.<com.android.server.print.UserState: android.util.ArrayMap mActiveServices>;

        $z0 = virtualinvoke $r4.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r5 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        if $r5 != null goto label8;

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

     label6:
        exitmonitor r2;

     label7:
        throw r3;

     label8:
        $r6 = r0.<com.android.server.print.UserState: com.android.server.print.UserState$PrinterDiscoverySessionMediator mPrinterDiscoverySession>;

        virtualinvoke $r6.<com.android.server.print.UserState$PrinterDiscoverySessionMediator: void validatePrintersLocked(java.util.List)>(r1);

        exitmonitor r2;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
        catch java.lang.Throwable from label8 to label9 with label5;
    }

    public static void <clinit>()
    {
        <com.android.server.print.UserState: java.lang.String LOG_TAG> = "UserState";

        <com.android.server.print.UserState: boolean DEBUG> = 0;

        <com.android.server.print.UserState: char COMPONENT_NAME_SEPARATOR> = 58;

        return;
    }
}
