final class java.util.concurrent.ForkJoinTask$AdaptedRunnable extends java.util.concurrent.ForkJoinTask implements java.util.concurrent.RunnableFuture
{
    private static final long serialVersionUID;
    java.lang.Object result;
    final java.lang.Runnable runnable;

    void <init>(java.lang.Runnable, java.lang.Object)
    {
        java.util.concurrent.ForkJoinTask$AdaptedRunnable r0;
        java.lang.Runnable r1;
        java.lang.Object r2;
        java.lang.NullPointerException $r3;

        r0 := @this: java.util.concurrent.ForkJoinTask$AdaptedRunnable;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.concurrent.ForkJoinTask: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>()>();

        throw $r3;

     label1:
        r0.<java.util.concurrent.ForkJoinTask$AdaptedRunnable: java.lang.Runnable runnable> = r1;

        r0.<java.util.concurrent.ForkJoinTask$AdaptedRunnable: java.lang.Object result> = r2;

        return;
    }

    public final boolean exec()
    {
        java.util.concurrent.ForkJoinTask$AdaptedRunnable r0;
        java.lang.Runnable $r1;

        r0 := @this: java.util.concurrent.ForkJoinTask$AdaptedRunnable;

        $r1 = r0.<java.util.concurrent.ForkJoinTask$AdaptedRunnable: java.lang.Runnable runnable>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        return 1;
    }

    public final java.lang.Object getRawResult()
    {
        java.util.concurrent.ForkJoinTask$AdaptedRunnable r0;
        java.lang.Object $r1;

        r0 := @this: java.util.concurrent.ForkJoinTask$AdaptedRunnable;

        $r1 = r0.<java.util.concurrent.ForkJoinTask$AdaptedRunnable: java.lang.Object result>;

        return $r1;
    }

    public final void run()
    {
        java.util.concurrent.ForkJoinTask$AdaptedRunnable r0;

        r0 := @this: java.util.concurrent.ForkJoinTask$AdaptedRunnable;

        virtualinvoke r0.<java.util.concurrent.ForkJoinTask$AdaptedRunnable: java.lang.Object invoke()>();

        return;
    }

    public final void setRawResult(java.lang.Object)
    {
        java.util.concurrent.ForkJoinTask$AdaptedRunnable r0;
        java.lang.Object r1;

        r0 := @this: java.util.concurrent.ForkJoinTask$AdaptedRunnable;

        r1 := @parameter0: java.lang.Object;

        r0.<java.util.concurrent.ForkJoinTask$AdaptedRunnable: java.lang.Object result> = r1;

        return;
    }

    public static void <clinit>()
    {
        <java.util.concurrent.ForkJoinTask$AdaptedRunnable: long serialVersionUID> = 5232453952276885070L;

        return;
    }
}
