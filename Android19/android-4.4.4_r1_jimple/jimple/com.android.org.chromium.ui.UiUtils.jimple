public class com.android.org.chromium.ui.UiUtils extends java.lang.Object
{

    private void <init>()
    {
        com.android.org.chromium.ui.UiUtils r0;

        r0 := @this: com.android.org.chromium.ui.UiUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Bitmap generateScaledScreenshot(android.view.View, int, android.graphics.Bitmap$Config)
    {
        android.view.View r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i10, $i11;
        android.graphics.Bitmap$Config r1, $r10;
        android.graphics.Bitmap r2, r5, r6, r8;
        boolean z0;
        java.lang.Throwable r3, $r13;
        java.lang.OutOfMemoryError r4, $r12;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        android.graphics.Canvas r7, $r9;
        float $f0, $f1;
        long $l9, $l12, $l13, $l14;
        java.lang.StringBuilder $r11, $r14, $r16;
        java.lang.String $r15, $r17;

        r0 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Bitmap$Config;

        r2 = null;

        z0 = virtualinvoke r0.<android.view.View: boolean isDrawingCacheEnabled()>();

     label01:
        staticinvoke <com.android.org.chromium.ui.UiUtils: void prepareViewHierarchyForScreenshot(android.view.View,boolean)>(r0, 1);

     label02:
        if z0 != 0 goto label04;

     label03:
        virtualinvoke r0.<android.view.View: void setDrawingCacheEnabled(boolean)>(1);

     label04:
        r5 = virtualinvoke r0.<android.view.View: android.graphics.Bitmap getDrawingCache()>();

     label05:
        r2 = null;

        if r5 == null goto label13;

     label06:
        $i11 = virtualinvoke r5.<android.graphics.Bitmap: int getHeight()>();

        d0 = (double) $i11;

        $i10 = virtualinvoke r5.<android.graphics.Bitmap: int getWidth()>();

        d1 = (double) $i10;

     label07:
        i1 = (int) d1;

        i2 = (int) d0;

        if i0 <= 0 goto label09;

     label08:
        $d14 = (double) i0;

        $d17 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d0);

        d2 = $d14 / $d17;

        $d16 = d1 * d2;

        $l13 = staticinvoke <java.lang.Math: long round(double)>($d16);

        i1 = (int) $l13;

        $d15 = d0 * d2;

        $l14 = staticinvoke <java.lang.Math: long round(double)>($d15);

        i2 = (int) $l14;

     label09:
        r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r5, i1, i2, 1);

        $r10 = virtualinvoke r6.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        if $r10 == r1 goto label12;

        r2 = virtualinvoke r6.<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap$Config,boolean)>(r1, 0);

        virtualinvoke r6.<android.graphics.Bitmap: void recycle()>();

     label10:
        if z0 != 0 goto label11;

        virtualinvoke r0.<android.view.View: void setDrawingCacheEnabled(boolean)>(0);

     label11:
        staticinvoke <com.android.org.chromium.ui.UiUtils: void prepareViewHierarchyForScreenshot(android.view.View,boolean)>(r0, 0);

        return r2;

     label12:
        r2 = r6;

        goto label10;

     label13:
        i4 = virtualinvoke r0.<android.view.View: int getMeasuredHeight()>();

     label14:
        r2 = null;

        if i4 <= 0 goto label10;

     label15:
        i3 = virtualinvoke r0.<android.view.View: int getMeasuredWidth()>();

     label16:
        r2 = null;

        if i3 <= 0 goto label10;

     label17:
        $i7 = virtualinvoke r0.<android.view.View: int getMeasuredHeight()>();

        d3 = (double) $i7;

        $i8 = virtualinvoke r0.<android.view.View: int getMeasuredWidth()>();

        d4 = (double) $i8;

     label18:
        i6 = (int) d4;

        i5 = (int) d3;

        if i0 <= 0 goto label20;

     label19:
        $d11 = (double) i0;

        $d12 = staticinvoke <java.lang.Math: double max(double,double)>(d4, d3);

        d5 = $d11 / $d12;

        $d10 = d4 * d5;

        $l9 = staticinvoke <java.lang.Math: long round(double)>($d10);

        i6 = (int) $l9;

        $d13 = d3 * d5;

        $l12 = staticinvoke <java.lang.Math: long round(double)>($d13);

        i5 = (int) $l12;

     label20:
        r8 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i6, i5, r1);

        $r9 = new android.graphics.Canvas;

        specialinvoke $r9.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r8);

        r7 = $r9;

        $d6 = (double) i6;

        $d7 = $d6 / d4;

        $f1 = (float) $d7;

        $d8 = (double) i5;

        $d9 = $d8 / d3;

        $f0 = (float) $d9;

        virtualinvoke r7.<android.graphics.Canvas: void scale(float,float)>($f1, $f0);

        virtualinvoke r0.<android.view.View: void draw(android.graphics.Canvas)>(r7);

     label21:
        r2 = r8;

        goto label10;

     label22:
        $r12 := @caughtexception;

        r4 = $r12;

     label23:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to capture screenshot and scale it down.");

        $r15 = virtualinvoke r4.<java.lang.OutOfMemoryError: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("UiUtils", $r17);

     label24:
        if z0 != 0 goto label25;

        virtualinvoke r0.<android.view.View: void setDrawingCacheEnabled(boolean)>(0);

     label25:
        staticinvoke <com.android.org.chromium.ui.UiUtils: void prepareViewHierarchyForScreenshot(android.view.View,boolean)>(r0, 0);

        return r2;

     label26:
        $r13 := @caughtexception;

        r3 = $r13;

        if z0 != 0 goto label27;

        virtualinvoke r0.<android.view.View: void setDrawingCacheEnabled(boolean)>(0);

     label27:
        staticinvoke <com.android.org.chromium.ui.UiUtils: void prepareViewHierarchyForScreenshot(android.view.View,boolean)>(r0, 0);

        throw r3;

        catch java.lang.OutOfMemoryError from label01 to label02 with label22;
        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.OutOfMemoryError from label03 to label04 with label22;
        catch java.lang.Throwable from label03 to label04 with label26;
        catch java.lang.OutOfMemoryError from label04 to label05 with label22;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.OutOfMemoryError from label06 to label07 with label22;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.OutOfMemoryError from label08 to label09 with label22;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.OutOfMemoryError from label09 to label10 with label22;
        catch java.lang.Throwable from label09 to label10 with label26;
        catch java.lang.OutOfMemoryError from label13 to label14 with label22;
        catch java.lang.Throwable from label13 to label14 with label26;
        catch java.lang.OutOfMemoryError from label15 to label16 with label22;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.lang.OutOfMemoryError from label17 to label18 with label22;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.OutOfMemoryError from label19 to label20 with label22;
        catch java.lang.Throwable from label19 to label20 with label26;
        catch java.lang.OutOfMemoryError from label20 to label21 with label22;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label23 to label24 with label26;
    }

    private static void prepareViewHierarchyForScreenshot(android.view.View, boolean)
    {
        android.view.View r0, $r2;
        boolean z0, z1, $z2, $z3;
        android.view.ViewGroup r1;
        int i0, $i1;

        r0 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $z2 = r0 instanceof android.view.ViewGroup;

        if $z2 == 0 goto label2;

        r1 = (android.view.ViewGroup) r0;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r1.<android.view.ViewGroup: int getChildCount()>();

        if i0 >= $i1 goto label4;

        $r2 = virtualinvoke r1.<android.view.ViewGroup: android.view.View getChildAt(int)>(i0);

        staticinvoke <com.android.org.chromium.ui.UiUtils: void prepareViewHierarchyForScreenshot(android.view.View,boolean)>($r2, z0);

        i0 = i0 + 1;

        goto label1;

     label2:
        $z3 = r0 instanceof android.view.SurfaceView;

        if $z3 == 0 goto label4;

        if z0 != 0 goto label5;

        z1 = 1;

     label3:
        virtualinvoke r0.<android.view.View: void setWillNotDraw(boolean)>(z1);

     label4:
        return;

     label5:
        z1 = 0;

        goto label3;
    }
}
