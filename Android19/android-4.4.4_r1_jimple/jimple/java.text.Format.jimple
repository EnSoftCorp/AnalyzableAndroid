public abstract class java.text.Format extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;

    protected void <init>()
    {
        java.text.Format r0;

        r0 := @this: java.text.Format;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean upTo(java.lang.String, java.text.ParsePosition, java.lang.StringBuffer, char)
    {
        java.lang.String r0;
        java.text.ParsePosition r1;
        java.lang.StringBuffer r2;
        char c0, c5;
        int i1, i2, i3, i4;
        boolean z0, z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.text.ParsePosition;

        r2 := @parameter2: java.lang.StringBuffer;

        c0 := @parameter3: char;

        i1 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        i2 = virtualinvoke r0.<java.lang.String: int length()>();

        z0 = 0;

        z1 = 0;

        i3 = i1;

     label1:
        if i3 >= i2 goto label8;

        i4 = i3 + 1;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        if c5 != 39 goto label6;

        if z0 == 0 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

     label2:
        if z1 != 0 goto label5;

        z1 = 1;

     label3:
        z0 = 1;

     label4:
        i3 = i4;

        goto label1;

     label5:
        z1 = 0;

        goto label3;

     label6:
        if c5 != c0 goto label7;

        if z1 != 0 goto label7;

        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i4);

        return 1;

     label7:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c5);

        z0 = 0;

        goto label4;

     label8:
        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i3);

        return 0;
    }

    static boolean upToWithQuotes(java.lang.String, java.text.ParsePosition, java.lang.StringBuffer, char, char)
    {
        java.lang.String r0;
        java.text.ParsePosition r1;
        java.lang.StringBuffer r2;
        char c0, c1, c7;
        int i2, i3, i4, i5, i6;
        boolean z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.text.ParsePosition;

        r2 := @parameter2: java.lang.StringBuffer;

        c0 := @parameter3: char;

        c1 := @parameter4: char;

        i2 = virtualinvoke r1.<java.text.ParsePosition: int getIndex()>();

        i3 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = 1;

        z0 = 0;

        i5 = i2;

     label1:
        if i5 >= i3 goto label7;

        i6 = i5 + 1;

        c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        if c7 != 39 goto label2;

        if z0 != 0 goto label4;

        z0 = 1;

     label2:
        if z0 != 0 goto label6;

        if c7 != c0 goto label3;

        i4 = i4 + -1;

     label3:
        if i4 != 0 goto label5;

        virtualinvoke r1.<java.text.ParsePosition: void setIndex(int)>(i6);

        return 1;

     label4:
        z0 = 0;

        goto label2;

     label5:
        if c7 != c1 goto label6;

        i4 = i4 + 1;

     label6:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

        i5 = i6;

        goto label1;

     label7:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unmatched braces in the pattern");

        throw $r3;
    }

    public java.lang.Object clone()
    {
        java.text.Format r0;
        java.lang.CloneNotSupportedException r1, $r3;
        java.lang.Object r2;
        java.lang.AssertionError $r4;

        r0 := @this: java.text.Format;

     label1:
        r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        return r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public final java.lang.String format(java.lang.Object)
    {
        java.text.Format r0;
        java.lang.Object r1;
        java.lang.StringBuffer $r2, $r4;
        java.text.FieldPosition $r3;
        java.lang.String $r5;

        r0 := @this: java.text.Format;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = new java.text.FieldPosition;

        specialinvoke $r3.<java.text.FieldPosition: void <init>(int)>(0);

        $r4 = virtualinvoke r0.<java.text.Format: java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)>(r1, $r2, $r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public abstract java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition);

    public java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object)
    {
        java.text.Format r0;
        java.lang.Object r1;
        java.text.AttributedString $r2;
        java.lang.String $r3;
        java.text.AttributedCharacterIterator $r4;

        r0 := @this: java.text.Format;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.text.AttributedString;

        $r3 = virtualinvoke r0.<java.text.Format: java.lang.String format(java.lang.Object)>(r1);

        specialinvoke $r2.<java.text.AttributedString: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()>();

        return $r4;
    }

    public java.lang.Object parseObject(java.lang.String) throws java.text.ParseException
    {
        java.text.Format r0;
        java.lang.String r1;
        java.text.ParsePosition r2, $r4;
        java.lang.Object r3;
        int $i0, $i1;
        java.text.ParseException $r5;

        r0 := @this: java.text.Format;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.text.ParsePosition;

        specialinvoke $r4.<java.text.ParsePosition: void <init>(int)>(0);

        r2 = $r4;

        r3 = virtualinvoke r0.<java.text.Format: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)>(r1, r2);

        $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>();

        if $i0 != 0 goto label1;

        $r5 = new java.text.ParseException;

        $i1 = virtualinvoke r2.<java.text.ParsePosition: int getErrorIndex()>();

        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>("Parse failure", $i1);

        throw $r5;

     label1:
        return r3;
    }

    public abstract java.lang.Object parseObject(java.lang.String, java.text.ParsePosition);

    public static void <clinit>()
    {
        <java.text.Format: long serialVersionUID> = -299282585814624189L;

        return;
    }
}
