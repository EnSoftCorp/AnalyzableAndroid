public abstract class android.database.ContentObserver extends java.lang.Object
{
    android.os.Handler mHandler;
    private final java.lang.Object mLock;
    private android.database.ContentObserver$Transport mTransport;

    public void <init>(android.os.Handler)
    {
        android.database.ContentObserver r0;
        android.os.Handler r1;
        java.lang.Object $r2;

        r0 := @this: android.database.ContentObserver;

        r1 := @parameter0: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.database.ContentObserver: java.lang.Object mLock> = $r2;

        r0.<android.database.ContentObserver: android.os.Handler mHandler> = r1;

        return;
    }

    public boolean deliverSelfNotifications()
    {
        android.database.ContentObserver r0;

        r0 := @this: android.database.ContentObserver;

        return 0;
    }

    public final void dispatchChange(boolean)
    {
        android.database.ContentObserver r0;
        boolean z0;

        r0 := @this: android.database.ContentObserver;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<android.database.ContentObserver: void dispatchChange(boolean,android.net.Uri)>(z0, null);

        return;
    }

    public final void dispatchChange(boolean, android.net.Uri)
    {
        android.database.ContentObserver r0;
        boolean z0;
        android.net.Uri r1;
        android.os.Handler $r2, $r4;
        android.database.ContentObserver$NotificationRunnable $r3;

        r0 := @this: android.database.ContentObserver;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        $r2 = r0.<android.database.ContentObserver: android.os.Handler mHandler>;

        if $r2 != null goto label1;

        virtualinvoke r0.<android.database.ContentObserver: void onChange(boolean,android.net.Uri)>(z0, r1);

        return;

     label1:
        $r4 = r0.<android.database.ContentObserver: android.os.Handler mHandler>;

        $r3 = new android.database.ContentObserver$NotificationRunnable;

        specialinvoke $r3.<android.database.ContentObserver$NotificationRunnable: void <init>(android.database.ContentObserver,boolean,android.net.Uri)>(r0, z0, r1);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public android.database.IContentObserver getContentObserver()
    {
        android.database.ContentObserver r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        android.database.ContentObserver$Transport r3, $r4, $r5;

        r0 := @this: android.database.ContentObserver;

        r1 = r0.<android.database.ContentObserver: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r4 = r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport>;

        if $r4 != null goto label2;

        $r5 = new android.database.ContentObserver$Transport;

        specialinvoke $r5.<android.database.ContentObserver$Transport: void <init>(android.database.ContentObserver)>(r0);

        r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport> = $r5;

     label2:
        r3 = r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport>;

        exitmonitor r1;

     label3:
        return r3;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onChange(boolean)
    {
        android.database.ContentObserver r0;
        boolean z0;

        r0 := @this: android.database.ContentObserver;

        z0 := @parameter0: boolean;

        return;
    }

    public void onChange(boolean, android.net.Uri)
    {
        android.database.ContentObserver r0;
        boolean z0;
        android.net.Uri r1;

        r0 := @this: android.database.ContentObserver;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.net.Uri;

        virtualinvoke r0.<android.database.ContentObserver: void onChange(boolean)>(z0);

        return;
    }

    public android.database.IContentObserver releaseContentObserver()
    {
        android.database.ContentObserver r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r4;
        android.database.ContentObserver$Transport r3;

        r0 := @this: android.database.ContentObserver;

        r1 = r0.<android.database.ContentObserver: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r3 = r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport>;

     label2:
        if r3 == null goto label4;

     label3:
        virtualinvoke r3.<android.database.ContentObserver$Transport: void releaseContentObserver()>();

        r0.<android.database.ContentObserver: android.database.ContentObserver$Transport mTransport> = null;

     label4:
        exitmonitor r1;

     label5:
        return r3;

     label6:
        $r4 := @caughtexception;

        r2 = $r4;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }
}
