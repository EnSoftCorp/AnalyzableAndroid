public final class com.android.okhttp.internal.http.RawHeaders extends java.lang.Object
{
    private static final java.util.Comparator FIELD_NAME_COMPARATOR;
    private int httpMinorVersion;
    private final java.util.List namesAndValues;
    private java.lang.String requestLine;
    private int responseCode;
    private java.lang.String responseMessage;
    private java.lang.String statusLine;

    static void <clinit>()
    {
        com.android.okhttp.internal.http.RawHeaders$1 $r0;

        $r0 = new com.android.okhttp.internal.http.RawHeaders$1;

        specialinvoke $r0.<com.android.okhttp.internal.http.RawHeaders$1: void <init>()>();

        <com.android.okhttp.internal.http.RawHeaders: java.util.Comparator FIELD_NAME_COMPARATOR> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(20);

        r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues> = $r1;

        r0.<com.android.okhttp.internal.http.RawHeaders: int httpMinorVersion> = 1;

        r0.<com.android.okhttp.internal.http.RawHeaders: int responseCode> = -1;

        return;
    }

    public void <init>(com.android.okhttp.internal.http.RawHeaders)
    {
        com.android.okhttp.internal.http.RawHeaders r0, r1;
        java.util.ArrayList $r2;
        java.util.List $r3, $r4;
        java.lang.String $r5, $r6, $r7;
        int $i0, $i1;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: com.android.okhttp.internal.http.RawHeaders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(20);

        r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues> = $r2;

        r0.<com.android.okhttp.internal.http.RawHeaders: int httpMinorVersion> = 1;

        r0.<com.android.okhttp.internal.http.RawHeaders: int responseCode> = -1;

        $r4 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r3 = r1.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r5 = r1.<com.android.okhttp.internal.http.RawHeaders: java.lang.String requestLine>;

        r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String requestLine> = $r5;

        $r6 = r1.<com.android.okhttp.internal.http.RawHeaders: java.lang.String statusLine>;

        r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String statusLine> = $r6;

        $i0 = r1.<com.android.okhttp.internal.http.RawHeaders: int httpMinorVersion>;

        r0.<com.android.okhttp.internal.http.RawHeaders: int httpMinorVersion> = $i0;

        $i1 = r1.<com.android.okhttp.internal.http.RawHeaders: int responseCode>;

        r0.<com.android.okhttp.internal.http.RawHeaders: int responseCode> = $i1;

        $r7 = r1.<com.android.okhttp.internal.http.RawHeaders: java.lang.String responseMessage>;

        r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String responseMessage> = $r7;

        return;
    }

    private void addLenient(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, r2, $r5;
        java.util.List $r3, $r4;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;
    }

    public static com.android.okhttp.internal.http.RawHeaders fromBytes(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        com.android.okhttp.internal.http.RawHeaders r1, $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @parameter0: java.io.InputStream;

     label1:
        $r2 = new com.android.okhttp.internal.http.RawHeaders;

        specialinvoke $r2.<com.android.okhttp.internal.http.RawHeaders: void <init>()>();

        r1 = $r2;

        $r3 = staticinvoke <com.android.okhttp.internal.Util: java.lang.String readAsciiLine(java.io.InputStream)>(r0);

        virtualinvoke r1.<com.android.okhttp.internal.http.RawHeaders: void setStatusLine(java.lang.String)>($r3);

        staticinvoke <com.android.okhttp.internal.http.RawHeaders: void readHeaders(java.io.InputStream,com.android.okhttp.internal.http.RawHeaders)>(r0, r1);

        $i0 = virtualinvoke r1.<com.android.okhttp.internal.http.RawHeaders: int getResponseCode()>();

        if $i0 == 100 goto label1;

        return r1;
    }

    public static com.android.okhttp.internal.http.RawHeaders fromMultimap(java.util.Map, boolean) throws java.io.IOException
    {
        java.util.Map r0;
        boolean z0, $z1, $z2, $z3;
        com.android.okhttp.internal.http.RawHeaders r1, $r7;
        java.util.Iterator r2, r6;
        java.util.Map$Entry r3;
        java.lang.String r4, $r13, $r16;
        java.util.List r5;
        java.util.Set $r8;
        java.lang.Object $r9, $r10, $r11, $r12, $r14;
        int $i0, $i1;
        java.lang.UnsupportedOperationException $r15;

        r0 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label1;

        $r15 = new java.lang.UnsupportedOperationException;

        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r15;

     label1:
        $r7 = new com.android.okhttp.internal.http.RawHeaders;

        specialinvoke $r7.<com.android.okhttp.internal.http.RawHeaders: void <init>()>();

        r1 = $r7;

        $r8 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.lang.String) $r10;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (java.util.List) $r11;

        if r4 == null goto label4;

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.lang.String) $r14;

        specialinvoke r1.<com.android.okhttp.internal.http.RawHeaders: void addLenient(java.lang.String,java.lang.String)>(r4, $r16);

        goto label3;

     label4:
        $z2 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        $i1 = -1 + $i0;

        $r12 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r13 = (java.lang.String) $r12;

        virtualinvoke r1.<com.android.okhttp.internal.http.RawHeaders: void setStatusLine(java.lang.String)>($r13);

        goto label2;

     label5:
        return r1;
    }

    public static com.android.okhttp.internal.http.RawHeaders fromNameValueBlock(java.util.List) throws java.io.IOException
    {
        java.util.List r0, $r19, $r20;
        java.lang.String r1, r2, r4, r5, r6, $r13, $r17, $r18, $r25;
        com.android.okhttp.internal.http.RawHeaders r3, $r7;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r21, $r22, $r24;
        java.net.ProtocolException $r12, $r15;
        java.lang.Object $r14, $r16;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r23;

        r0 := @parameter0: java.util.List;

        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        $i4 = $i3 % 2;

        if $i4 == 0 goto label01;

        $r23 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected name value block: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r23;

     label01:
        r1 = null;

        r2 = null;

        $r7 = new com.android.okhttp.internal.http.RawHeaders;

        specialinvoke $r7.<com.android.okhttp.internal.http.RawHeaders: void <init>()>();

        r3 = $r7;

        i0 = 0;

     label02:
        $i5 = interfaceinvoke r0.<java.util.List: int size()>();

        if i0 >= $i5 goto label09;

        $r14 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (java.lang.String) $r14;

        $i6 = i0 + 1;

        $r16 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i6);

        r5 = (java.lang.String) $r16;

        i1 = 0;

     label03:
        $i7 = virtualinvoke r5.<java.lang.String: int length()>();

        if i1 >= $i7 goto label08;

        i2 = virtualinvoke r5.<java.lang.String: int indexOf(int,int)>(0, i1);

        if i2 != -1 goto label04;

        i2 = virtualinvoke r5.<java.lang.String: int length()>();

     label04:
        r6 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);

        $r17 = ":status";

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label06;

        r1 = r6;

     label05:
        i1 = i2 + 1;

        goto label03;

     label06:
        $r18 = ":version";

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label07;

        r2 = r6;

        goto label05;

     label07:
        $r19 = r3.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r20 = r3.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label05;

     label08:
        i0 = i0 + 2;

        goto label02;

     label09:
        if r1 != null goto label10;

        $r15 = new java.net.ProtocolException;

        specialinvoke $r15.<java.net.ProtocolException: void <init>(java.lang.String)>("Expected \':status\' header not present");

        throw $r15;

     label10:
        if r2 != null goto label11;

        $r12 = new java.net.ProtocolException;

        specialinvoke $r12.<java.net.ProtocolException: void <init>(java.lang.String)>("Expected \':version\' header not present");

        throw $r12;

     label11:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<com.android.okhttp.internal.http.RawHeaders: void setStatusLine(java.lang.String)>($r13);

        return r3;
    }

    public static void readHeaders(java.io.InputStream, com.android.okhttp.internal.http.RawHeaders) throws java.io.IOException
    {
        java.io.InputStream r0;
        com.android.okhttp.internal.http.RawHeaders r1;
        java.lang.String r2;
        int $i0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: com.android.okhttp.internal.http.RawHeaders;

     label1:
        r2 = staticinvoke <com.android.okhttp.internal.Util: java.lang.String readAsciiLine(java.io.InputStream)>(r0);

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        virtualinvoke r1.<com.android.okhttp.internal.http.RawHeaders: void addLine(java.lang.String)>(r2);

        goto label1;

     label2:
        return;
    }

    public void add(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, r2, $r9;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r3, $r10, $r11;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fieldname == null");

        throw $r11;

     label1:
        if r2 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value == null");

        throw $r10;

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(0);

        if $i1 != -1 goto label3;

        $i2 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(0);

        if $i2 == -1 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label4:
        specialinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void addLenient(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void addAll(java.lang.String, java.util.List)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, $r5;
        java.util.List r2;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(r1, $r5);

        goto label1;

     label2:
        return;
    }

    public void addLine(java.lang.String)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, $r2, $r3;
        int i0, $i1;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(":");

        if i0 != -1 goto label1;

        specialinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void addLenient(java.lang.String,java.lang.String)>("", r1);

        return;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        specialinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void addLenient(java.lang.String,java.lang.String)>($r2, $r3);

        return;
    }

    public void addSpdyRequestHeaders(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(":method", r1);

        virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(":scheme", r5);

        virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(":path", r2);

        virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(":version", r3);

        virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(":host", r4);

        return;
    }

    public java.lang.String get(java.lang.String)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, $r5, $r8;
        int i0, $i1, $i2;
        java.util.List $r2, $r3, $r6;
        java.lang.Object $r4, $r7;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        i0 = -2 + $i1;

     label1:
        if i0 < 0 goto label3;

        $r3 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i2 = i0 + 1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i2);

        $r8 = (java.lang.String) $r7;

        return $r8;

     label2:
        i0 = i0 + -2;

        goto label1;

     label3:
        return null;
    }

    public com.android.okhttp.internal.http.RawHeaders getAll(java.util.Set)
    {
        com.android.okhttp.internal.http.RawHeaders r0, r2, $r4;
        java.util.Set r1;
        int i0, $i1, $i2;
        java.lang.String r3, $r10;
        java.util.List $r5, $r6, $r8;
        java.lang.Object $r7, $r9;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.util.Set;

        $r4 = new com.android.okhttp.internal.http.RawHeaders;

        specialinvoke $r4.<com.android.okhttp.internal.http.RawHeaders: void <init>()>();

        r2 = $r4;

        i0 = 0;

     label1:
        $r5 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r6 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.lang.String) $r7;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r8 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i2 = i0 + 1;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i2);

        $r10 = (java.lang.String) $r9;

        virtualinvoke r2.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(r3, $r10);

     label2:
        i0 = i0 + 2;

        goto label1;

     label3:
        return r2;
    }

    public java.lang.String getFieldName(int)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        int i0, i1, $i2;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        i0 := @parameter0: int;

        i1 = i0 * 2;

        if i1 < 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 < $i2 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public int getHttpMinorVersion()
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        int $i0, $i1;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        $i0 = r0.<com.android.okhttp.internal.http.RawHeaders: int httpMinorVersion>;

        if $i0 == -1 goto label1;

        $i1 = r0.<com.android.okhttp.internal.http.RawHeaders: int httpMinorVersion>;

        return $i1;

     label1:
        return 1;
    }

    public int getResponseCode()
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        $i0 = r0.<com.android.okhttp.internal.http.RawHeaders: int responseCode>;

        return $i0;
    }

    public java.lang.String getResponseMessage()
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String $r1;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        $r1 = r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String responseMessage>;

        return $r1;
    }

    public java.lang.String getStatusLine()
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String $r1;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        $r1 = r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String statusLine>;

        return $r1;
    }

    public java.lang.String getValue(int)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        int i0, i1, $i2, $i3;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        i0 := @parameter0: int;

        $i2 = i0 * 2;

        i1 = 1 + $i2;

        if i1 < 0 goto label1;

        $r1 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i3 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 < $i3 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public int length()
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.util.List $r1;
        int $i0, $i1;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        $r1 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 / 2;

        return $i1;
    }

    public java.util.Set names()
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.util.TreeSet r1, $r2;
        int i0, $i1;
        java.util.Comparator $r3;
        java.util.Set $r4;
        java.lang.String $r5;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        $r2 = new java.util.TreeSet;

        $r3 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r2.<java.util.TreeSet: void <init>(java.util.Comparator)>($r3);

        r1 = $r2;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: int length()>();

        if i0 >= $i1 goto label2;

        $r5 = virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String getFieldName(int)>(i0);

        virtualinvoke r1.<java.util.TreeSet: boolean add(java.lang.Object)>($r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r1);

        return $r4;
    }

    public void removeAll(java.lang.String)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, $r5;
        int i0, $i1;
        java.util.List $r2, $r3, $r6, $r8;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r3 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>(i0);

        $r8 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        interfaceinvoke $r8.<java.util.List: java.lang.Object remove(int)>(i0);

     label2:
        i0 = i0 + 2;

        goto label1;

     label3:
        return;
    }

    public void set(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void removeAll(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: void add(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void setRequestLine(java.lang.String)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String requestLine> = $r2;

        return;
    }

    public void setStatusLine(java.lang.String) throws java.io.IOException
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, r3, $r4, $r9, $r13, $r15, $r20;
        boolean z0, $z1;
        int i0, i1, $i2, $i3;
        java.net.ProtocolException $r5, $r10, $r19;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r14, $r18, $r21, $r22;
        char $c4, $c5, $c6;
        java.lang.NumberFormatException $r16;
        java.lang.IllegalStateException $r17;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String responseMessage>;

        if $r4 == null goto label01;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("statusLine is already set");

        throw $r17;

     label01:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 <= 13 goto label04;

        z0 = 1;

     label02:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("HTTP/1.");

        if $z1 == 0 goto label03;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 < 12 goto label03;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(8);

        if $c4 != 32 goto label03;

        if z0 == 0 goto label05;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(12);

        if $c6 == 32 goto label05;

     label03:
        $r5 = new java.net.ProtocolException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected status line: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.ProtocolException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label04:
        z0 = 0;

        goto label02;

     label05:
        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(7);

        i0 = -48 + $c5;

        if i0 < 0 goto label06;

        if i0 <= 9 goto label07;

     label06:
        $r10 = new java.net.ProtocolException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected status line: ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.net.ProtocolException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label07:
        $r15 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(9, 12);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

     label08:
        if z0 == 0 goto label11;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(13);

     label09:
        r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String responseMessage> = r3;

        r0.<com.android.okhttp.internal.http.RawHeaders: int responseCode> = i1;

        r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String statusLine> = r1;

        r0.<com.android.okhttp.internal.http.RawHeaders: int httpMinorVersion> = i0;

        return;

     label10:
        $r16 := @caughtexception;

        $r19 = new java.net.ProtocolException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected status line: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.net.ProtocolException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label11:
        r3 = "";

        goto label09;

        catch java.lang.NumberFormatException from label07 to label08 with label10;
    }

    public byte[] toBytes() throws java.io.UnsupportedEncodingException
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.StringBuilder r1, $r2, $r4, $r13, $r14, $r19;
        int i0, $i1, $i2;
        java.lang.String $r3, $r8, $r12, $r16;
        java.util.List $r6, $r10, $r15;
        byte[] $r9;
        java.lang.Object $r11, $r17;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>(256);

        r1 = $r2;

        $r3 = r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String requestLine>;

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        i0 = 0;

     label1:
        $r6 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        $r10 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i0);

        $r12 = (java.lang.String) $r11;

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r15 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i2 = i0 + 1;

        $r17 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>($i2);

        $r16 = (java.lang.String) $r17;

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        i0 = i0 + 2;

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r8.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        return $r9;
    }

    public java.util.Map toMultimap(boolean)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        boolean z0;
        java.util.TreeMap r1, $r6;
        int i0, $i1, $i2;
        java.lang.String r2, r3, $r9, $r11, $r14, $r16;
        java.util.ArrayList r4, $r25;
        java.util.List r5, $r8, $r12, $r13, $r17, $r18, $r19, $r23, $r24;
        java.util.Comparator $r7;
        java.util.Map $r10;
        java.lang.Object $r21, $r22, $r26;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        z0 := @parameter0: boolean;

        $r6 = new java.util.TreeMap;

        $r7 = <com.android.okhttp.internal.http.RawHeaders: java.util.Comparator FIELD_NAME_COMPARATOR>;

        specialinvoke $r6.<java.util.TreeMap: void <init>(java.util.Comparator)>($r7);

        r1 = $r6;

        i0 = 0;

     label1:
        $r8 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r19 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r21 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (java.lang.String) $r21;

        $r23 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i2 = i0 + 1;

        $r22 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>($i2);

        r3 = (java.lang.String) $r22;

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r4 = $r25;

        $r26 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (java.util.List) $r26;

        if r5 == null goto label2;

        interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>(r5);

     label2:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        $r24 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r4);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r24);

        i0 = i0 + 2;

        goto label1;

     label3:
        if z0 == 0 goto label5;

        $r14 = r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String statusLine>;

        if $r14 == null goto label5;

        $r16 = r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String statusLine>;

        $r18 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r16);

        $r17 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r18);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r17);

     label4:
        $r10 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r1);

        return $r10;

     label5:
        $r9 = r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String requestLine>;

        if $r9 == null goto label4;

        $r11 = r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String requestLine>;

        $r13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r11);

        $r12 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r13);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r12);

        goto label4;
    }

    public java.util.List toNameValueBlock()
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.util.HashSet r1, $r5;
        java.util.ArrayList r2, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r3, r4, $r11, $r19, $r21;
        java.util.List $r7, $r8, $r12;
        java.lang.Object $r9, $r13, $r14, $r16;
        java.util.Locale $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r15, $r17, $r18, $r20;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r1 = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        i0 = 0;

     label1:
        $r7 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i0 >= $i2 goto label7;

        $r8 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(i0);

        $r11 = (java.lang.String) $r9;

        $r10 = <java.util.Locale: java.util.Locale US>;

        r3 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r10);

        $r12 = r0.<com.android.okhttp.internal.http.RawHeaders: java.util.List namesAndValues>;

        $i3 = i0 + 1;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>($i3);

        r4 = (java.lang.String) $r13;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("connection");

        if $z0 != 0 goto label2;

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("host");

        if $z2 != 0 goto label2;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("keep-alive");

        if $z1 != 0 goto label2;

        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("proxy-connection");

        if $z4 != 0 goto label2;

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("transfer-encoding");

        if $z3 == 0 goto label3;

     label2:
        i0 = i0 + 2;

        goto label1;

     label3:
        $z5 = interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r3);

        if $z5 == 0 goto label4;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        goto label2;

     label4:
        i1 = 0;

     label5:
        $i4 = interfaceinvoke r2.<java.util.List: int size()>();

        if i1 >= $i4 goto label2;

        $r14 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z6 == 0 goto label6;

        $i5 = i1 + 1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $i6 = i1 + 1;

        $r16 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i6);

        $r19 = (java.lang.String) $r16;

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u0000");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i5, $r21);

        goto label2;

     label6:
        i1 = i1 + 2;

        goto label5;

     label7:
        return r2;
    }

    public java.util.List values(java.lang.String)
    {
        com.android.okhttp.internal.http.RawHeaders r0;
        java.lang.String r1, $r5, $r6;
        java.util.ArrayList r2, $r7;
        int i0, $i1;
        java.util.List $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.RawHeaders;

        r1 := @parameter0: java.lang.String;

        r2 = null;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: int length()>();

        if i0 >= $i1 goto label4;

        $r5 = virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String getFieldName(int)>(i0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label3;

        if r2 != null goto label2;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(2);

        r2 = $r7;

     label2:
        $r6 = virtualinvoke r0.<com.android.okhttp.internal.http.RawHeaders: java.lang.String getValue(int)>(i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        if r2 == null goto label5;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        return $r4;

     label5:
        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r3;
    }
}
