public class gov.nist.javax.sip.parser.RequireParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.RequireParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.RequireParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.RequireParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.RequireParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.RequireParser r0;
        gov.nist.javax.sip.header.RequireList r1, $r5;
        java.lang.Throwable r2, $r24;
        gov.nist.javax.sip.header.Require r3, r4, $r7, $r19;
        boolean $z0, $z1, $z3;
        gov.nist.core.LexerCore $r6, $r8, $r11, $r12, $r14, $r15, $r16, $r18, $r20, $r25;
        char $c0, $c1;
        gov.nist.core.Token $r10, $r23;
        java.lang.String $r13, $r22;

        r0 := @this: gov.nist.javax.sip.parser.RequireParser;

        $r5 = new gov.nist.javax.sip.header.RequireList;

        specialinvoke $r5.<gov.nist.javax.sip.header.RequireList: void <init>()>();

        r1 = $r5;

        $z0 = <gov.nist.javax.sip.parser.RequireParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequireParser: void dbg_enter(java.lang.String)>("RequireParser.parse");

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.parser.RequireParser: void headerName(int)>(2089);

     label2:
        $r6 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r6.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label7;

        $r7 = new gov.nist.javax.sip.header.Require;

        specialinvoke $r7.<gov.nist.javax.sip.header.Require: void <init>()>();

        r3 = $r7;

        virtualinvoke r3.<gov.nist.javax.sip.header.Require: void setHeaderName(java.lang.String)>("Require");

        $r8 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r11 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        $r10 = virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r13 = virtualinvoke $r10.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r3.<gov.nist.javax.sip.header.Require: void setOptionTag(java.lang.String)>($r13);

        $r12 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.RequireList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r3);

     label3:
        $r14 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r14.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 44 goto label2;

        $r15 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r16 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: void SPorHT()>();

        $r19 = new gov.nist.javax.sip.header.Require;

        specialinvoke $r19.<gov.nist.javax.sip.header.Require: void <init>()>();

        r4 = $r19;

        $r18 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r20 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        $r23 = virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r22 = virtualinvoke $r23.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r4.<gov.nist.javax.sip.header.Require: void setOptionTag(java.lang.String)>($r22);

        $r25 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r25.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.RequireList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r4);

     label4:
        goto label3;

     label5:
        $r24 := @caughtexception;

        r2 = $r24;

        $z3 = <gov.nist.javax.sip.parser.RequireParser: boolean debug>;

        if $z3 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequireParser: void dbg_leave(java.lang.String)>("RequireParser.parse");

     label6:
        throw r2;

     label7:
        $z1 = <gov.nist.javax.sip.parser.RequireParser: boolean debug>;

        if $z1 == 0 goto label8;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequireParser: void dbg_leave(java.lang.String)>("RequireParser.parse");

     label8:
        return r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
