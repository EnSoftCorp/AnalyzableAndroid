class com.android.server.wifi.WifiController extends com.android.internal.util.StateMachine
{
    private static final java.lang.String ACTION_DEVICE_IDLE;
    private static final int BASE;
    static final int CMD_AIRPLANE_TOGGLED;
    static final int CMD_BATTERY_CHANGED;
    static final int CMD_DEFERRED_TOGGLE;
    static final int CMD_DEVICE_IDLE;
    static final int CMD_EMERGENCY_MODE_CHANGED;
    static final int CMD_LOCKS_CHANGED;
    static final int CMD_SCAN_ALWAYS_MODE_CHANGED;
    static final int CMD_SCREEN_OFF;
    static final int CMD_SCREEN_ON;
    static final int CMD_SET_AP;
    static final int CMD_USER_PRESENT;
    static final int CMD_WIFI_TOGGLED;
    private static final boolean DBG;
    private static final long DEFAULT_IDLE_MS;
    private static final long DEFAULT_REENABLE_DELAY_MS;
    private static final long DEFER_MARGIN_MS;
    private static final int IDLE_REQUEST;
    private static final java.lang.String TAG;
    private android.app.AlarmManager mAlarmManager;
    private com.android.server.wifi.WifiController$ApEnabledState mApEnabledState;
    private com.android.server.wifi.WifiController$ApStaDisabledState mApStaDisabledState;
    private android.content.Context mContext;
    private com.android.server.wifi.WifiController$DefaultState mDefaultState;
    private com.android.server.wifi.WifiController$DeviceActiveState mDeviceActiveState;
    private boolean mDeviceIdle;
    private com.android.server.wifi.WifiController$DeviceInactiveState mDeviceInactiveState;
    private com.android.server.wifi.WifiController$EcmState mEcmState;
    private boolean mFirstUserSignOnSeen;
    private com.android.server.wifi.WifiController$FullHighPerfLockHeldState mFullHighPerfLockHeldState;
    private com.android.server.wifi.WifiController$FullLockHeldState mFullLockHeldState;
    private android.app.PendingIntent mIdleIntent;
    private long mIdleMillis;
    final com.android.server.wifi.WifiService$LockList mLocks;
    android.net.NetworkInfo mNetworkInfo;
    private com.android.server.wifi.WifiController$NoLockHeldState mNoLockHeldState;
    private int mPluggedType;
    private long mReEnableDelayMillis;
    private com.android.server.wifi.WifiController$ScanOnlyLockHeldState mScanOnlyLockHeldState;
    private boolean mScreenOff;
    final com.android.server.wifi.WifiSettingsStore mSettingsStore;
    private int mSleepPolicy;
    private com.android.server.wifi.WifiController$StaDisabledWithScanState mStaDisabledWithScanState;
    private com.android.server.wifi.WifiController$StaEnabledState mStaEnabledState;
    private int mStayAwakeConditions;
    private final android.os.WorkSource mTmpWorkSource;
    final android.net.wifi.WifiStateMachine mWifiStateMachine;

    void <init>(android.content.Context, com.android.server.wifi.WifiService, android.os.Looper)
    {
        com.android.server.wifi.WifiController r0;
        android.content.Context r1, $r24, $r28, $r66;
        com.android.server.wifi.WifiService r2;
        android.os.Looper r3;
        android.content.Intent r4, $r25;
        boolean z0, z1, z2;
        android.content.IntentFilter r5, $r60, $r67;
        android.net.NetworkInfo $r6;
        android.os.WorkSource $r7;
        com.android.server.wifi.WifiController$DefaultState $r8, $r30, $r31, $r32, $r45, $r47, $r51;
        com.android.server.wifi.WifiController$StaEnabledState $r9, $r34, $r35, $r36;
        com.android.server.wifi.WifiController$ApStaDisabledState $r10, $r29, $r59;
        com.android.server.wifi.WifiController$StaDisabledWithScanState $r11, $r46, $r69;
        com.android.server.wifi.WifiController$ApEnabledState $r12, $r52;
        com.android.server.wifi.WifiController$DeviceInactiveState $r13, $r38, $r39, $r40, $r42, $r44;
        com.android.server.wifi.WifiController$DeviceActiveState $r14, $r33;
        com.android.server.wifi.WifiController$FullLockHeldState $r15, $r43;
        com.android.server.wifi.WifiController$ScanOnlyLockHeldState $r16, $r37;
        com.android.server.wifi.WifiController$NoLockHeldState $r17, $r48;
        com.android.server.wifi.WifiController$FullHighPerfLockHeldState $r18, $r41;
        android.net.wifi.WifiStateMachine $r19;
        com.android.server.wifi.WifiController$EcmState $r20, $r50;
        com.android.server.wifi.WifiService$LockList $r21;
        com.android.server.wifi.WifiSettingsStore $r22, $r49, $r53, $r54;
        java.lang.Object $r23;
        android.app.AlarmManager $r26;
        android.app.PendingIntent $r27;
        java.lang.StringBuilder $r55, $r56, $r57, $r62, $r63, $r64, $r65;
        java.lang.String $r58;
        com.android.server.wifi.WifiController$1 $r61;

        r0 := @this: com.android.server.wifi.WifiController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.server.wifi.WifiService;

        r3 := @parameter2: android.os.Looper;

        specialinvoke r0.<com.android.internal.util.StateMachine: void <init>(java.lang.String,android.os.Looper)>("WifiController", r3);

        r0.<com.android.server.wifi.WifiController: boolean mFirstUserSignOnSeen> = 0;

        $r6 = new android.net.NetworkInfo;

        specialinvoke $r6.<android.net.NetworkInfo: void <init>(int,int,java.lang.String,java.lang.String)>(1, 0, "WIFI", "");

        r0.<com.android.server.wifi.WifiController: android.net.NetworkInfo mNetworkInfo> = $r6;

        $r7 = new android.os.WorkSource;

        specialinvoke $r7.<android.os.WorkSource: void <init>()>();

        r0.<com.android.server.wifi.WifiController: android.os.WorkSource mTmpWorkSource> = $r7;

        $r8 = new com.android.server.wifi.WifiController$DefaultState;

        specialinvoke $r8.<com.android.server.wifi.WifiController$DefaultState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DefaultState mDefaultState> = $r8;

        $r9 = new com.android.server.wifi.WifiController$StaEnabledState;

        specialinvoke $r9.<com.android.server.wifi.WifiController$StaEnabledState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$StaEnabledState mStaEnabledState> = $r9;

        $r10 = new com.android.server.wifi.WifiController$ApStaDisabledState;

        specialinvoke $r10.<com.android.server.wifi.WifiController$ApStaDisabledState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ApStaDisabledState mApStaDisabledState> = $r10;

        $r11 = new com.android.server.wifi.WifiController$StaDisabledWithScanState;

        specialinvoke $r11.<com.android.server.wifi.WifiController$StaDisabledWithScanState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$StaDisabledWithScanState mStaDisabledWithScanState> = $r11;

        $r12 = new com.android.server.wifi.WifiController$ApEnabledState;

        specialinvoke $r12.<com.android.server.wifi.WifiController$ApEnabledState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ApEnabledState mApEnabledState> = $r12;

        $r14 = new com.android.server.wifi.WifiController$DeviceActiveState;

        specialinvoke $r14.<com.android.server.wifi.WifiController$DeviceActiveState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DeviceActiveState mDeviceActiveState> = $r14;

        $r13 = new com.android.server.wifi.WifiController$DeviceInactiveState;

        specialinvoke $r13.<com.android.server.wifi.WifiController$DeviceInactiveState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DeviceInactiveState mDeviceInactiveState> = $r13;

        $r16 = new com.android.server.wifi.WifiController$ScanOnlyLockHeldState;

        specialinvoke $r16.<com.android.server.wifi.WifiController$ScanOnlyLockHeldState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ScanOnlyLockHeldState mScanOnlyLockHeldState> = $r16;

        $r15 = new com.android.server.wifi.WifiController$FullLockHeldState;

        specialinvoke $r15.<com.android.server.wifi.WifiController$FullLockHeldState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$FullLockHeldState mFullLockHeldState> = $r15;

        $r18 = new com.android.server.wifi.WifiController$FullHighPerfLockHeldState;

        specialinvoke $r18.<com.android.server.wifi.WifiController$FullHighPerfLockHeldState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$FullHighPerfLockHeldState mFullHighPerfLockHeldState> = $r18;

        $r17 = new com.android.server.wifi.WifiController$NoLockHeldState;

        specialinvoke $r17.<com.android.server.wifi.WifiController$NoLockHeldState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$NoLockHeldState mNoLockHeldState> = $r17;

        $r20 = new com.android.server.wifi.WifiController$EcmState;

        specialinvoke $r20.<com.android.server.wifi.WifiController$EcmState: void <init>(com.android.server.wifi.WifiController)>(r0);

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$EcmState mEcmState> = $r20;

        r0.<com.android.server.wifi.WifiController: android.content.Context mContext> = r1;

        $r19 = r2.<com.android.server.wifi.WifiService: android.net.wifi.WifiStateMachine mWifiStateMachine>;

        r0.<com.android.server.wifi.WifiController: android.net.wifi.WifiStateMachine mWifiStateMachine> = $r19;

        $r22 = r2.<com.android.server.wifi.WifiService: com.android.server.wifi.WifiSettingsStore mSettingsStore>;

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiSettingsStore mSettingsStore> = $r22;

        $r21 = r2.<com.android.server.wifi.WifiService: com.android.server.wifi.WifiService$LockList mLocks>;

        r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiService$LockList mLocks> = $r21;

        $r24 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r23 = virtualinvoke $r24.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r26 = (android.app.AlarmManager) $r23;

        r0.<com.android.server.wifi.WifiController: android.app.AlarmManager mAlarmManager> = $r26;

        $r25 = new android.content.Intent;

        specialinvoke $r25.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("com.android.server.WifiManager.action.DEVICE_IDLE", null);

        r4 = $r25;

        $r28 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r27 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r28, 0, r4, 0);

        r0.<com.android.server.wifi.WifiController: android.app.PendingIntent mIdleIntent> = $r27;

        $r31 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DefaultState mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State)>($r31);

        $r29 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ApStaDisabledState mApStaDisabledState>;

        $r32 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DefaultState mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r29, $r32);

        $r35 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$StaEnabledState mStaEnabledState>;

        $r30 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DefaultState mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r35, $r30);

        $r33 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DeviceActiveState mDeviceActiveState>;

        $r36 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$StaEnabledState mStaEnabledState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r33, $r36);

        $r39 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DeviceInactiveState mDeviceInactiveState>;

        $r34 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$StaEnabledState mStaEnabledState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r39, $r34);

        $r37 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ScanOnlyLockHeldState mScanOnlyLockHeldState>;

        $r40 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DeviceInactiveState mDeviceInactiveState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r37, $r40);

        $r43 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$FullLockHeldState mFullLockHeldState>;

        $r38 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DeviceInactiveState mDeviceInactiveState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r43, $r38);

        $r41 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$FullHighPerfLockHeldState mFullHighPerfLockHeldState>;

        $r44 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DeviceInactiveState mDeviceInactiveState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r41, $r44);

        $r48 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$NoLockHeldState mNoLockHeldState>;

        $r42 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DeviceInactiveState mDeviceInactiveState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r48, $r42);

        $r46 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$StaDisabledWithScanState mStaDisabledWithScanState>;

        $r47 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DefaultState mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r46, $r47);

        $r52 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ApEnabledState mApEnabledState>;

        $r45 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DefaultState mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r52, $r45);

        $r50 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$EcmState mEcmState>;

        $r51 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DefaultState mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r50, $r51);

        $r49 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiSettingsStore mSettingsStore>;

        z0 = virtualinvoke $r49.<com.android.server.wifi.WifiSettingsStore: boolean isAirplaneModeOn()>();

        $r54 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiSettingsStore mSettingsStore>;

        z1 = virtualinvoke $r54.<com.android.server.wifi.WifiSettingsStore: boolean isWifiToggleEnabled()>();

        $r53 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiSettingsStore mSettingsStore>;

        z2 = virtualinvoke $r53.<com.android.server.wifi.WifiSettingsStore: boolean isScanAlwaysAvailable()>();

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isAirplaneModeOn = ");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r62 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isWifiEnabled = ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isScanningAvailable = ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r58 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiController: void log(java.lang.String)>($r58);

        if z1 == 0 goto label2;

        if z2 == 0 goto label2;

        $r69 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$StaDisabledWithScanState mStaDisabledWithScanState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void setInitialState(com.android.internal.util.State)>($r69);

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiController: void setLogRecSize(int)>(100);

        virtualinvoke r0.<com.android.server.wifi.WifiController: void setLogOnlyTransitions(boolean)>(0);

        $r60 = new android.content.IntentFilter;

        specialinvoke $r60.<android.content.IntentFilter: void <init>()>();

        r5 = $r60;

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.WifiManager.action.DEVICE_IDLE");

        virtualinvoke r5.<android.content.IntentFilter: void addAction(java.lang.String)>("android.net.wifi.STATE_CHANGE");

        $r66 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r61 = new com.android.server.wifi.WifiController$1;

        specialinvoke $r61.<com.android.server.wifi.WifiController$1: void <init>(com.android.server.wifi.WifiController)>(r0);

        $r67 = new android.content.IntentFilter;

        specialinvoke $r67.<android.content.IntentFilter: void <init>(android.content.IntentFilter)>(r5);

        virtualinvoke $r66.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r61, $r67);

        specialinvoke r0.<com.android.server.wifi.WifiController: void initializeAndRegisterForSettingsChange(android.os.Looper)>(r3);

        return;

     label2:
        $r59 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ApStaDisabledState mApStaDisabledState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void setInitialState(com.android.internal.util.State)>($r59);

        goto label1;
    }

    static void access$000(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        specialinvoke r0.<com.android.server.wifi.WifiController: void readStayAwakeConditions()>();

        return;
    }

    static void access$100(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        specialinvoke r0.<com.android.server.wifi.WifiController: void readWifiIdleTime()>();

        return;
    }

    static long access$1000(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        long $l0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $l0 = r0.<com.android.server.wifi.WifiController: long mIdleMillis>;

        return $l0;
    }

    static boolean access$1100(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $z0 = r0.<com.android.server.wifi.WifiController: boolean mFirstUserSignOnSeen>;

        return $z0;
    }

    static boolean access$1102(com.android.server.wifi.WifiController, boolean)
    {
        com.android.server.wifi.WifiController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiController: boolean mFirstUserSignOnSeen> = z0;

        return z0;
    }

    static void access$1200(com.android.server.wifi.WifiController, java.lang.String)
    {
        com.android.server.wifi.WifiController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void log(java.lang.String)>(r1);

        return;
    }

    static com.android.server.wifi.WifiController$DeviceActiveState access$1300(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        com.android.server.wifi.WifiController$DeviceActiveState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$DeviceActiveState mDeviceActiveState>;

        return $r1;
    }

    static void access$1400(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$1500(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        specialinvoke r0.<com.android.server.wifi.WifiController: void checkLocksAndTransitionWhenDeviceIdle()>();

        return;
    }

    static com.android.server.wifi.WifiController$StaDisabledWithScanState access$1600(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        com.android.server.wifi.WifiController$StaDisabledWithScanState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$StaDisabledWithScanState mStaDisabledWithScanState>;

        return $r1;
    }

    static void access$1700(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.server.wifi.WifiController$ApEnabledState access$1800(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        com.android.server.wifi.WifiController$ApEnabledState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ApEnabledState mApEnabledState>;

        return $r1;
    }

    static void access$1900(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$200(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        specialinvoke r0.<com.android.server.wifi.WifiController: void readWifiSleepPolicy()>();

        return;
    }

    static void access$2000(com.android.server.wifi.WifiController, java.lang.String)
    {
        com.android.server.wifi.WifiController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void log(java.lang.String)>(r1);

        return;
    }

    static void access$2100(com.android.server.wifi.WifiController, java.lang.String)
    {
        com.android.server.wifi.WifiController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void log(java.lang.String)>(r1);

        return;
    }

    static long access$2200(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        long $l0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $l0 = r0.<com.android.server.wifi.WifiController: long mReEnableDelayMillis>;

        return $l0;
    }

    static void access$2300(com.android.server.wifi.WifiController, java.lang.String)
    {
        com.android.server.wifi.WifiController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void log(java.lang.String)>(r1);

        return;
    }

    static void access$2400(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.server.wifi.WifiController$ApStaDisabledState access$2500(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        com.android.server.wifi.WifiController$ApStaDisabledState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ApStaDisabledState mApStaDisabledState>;

        return $r1;
    }

    static void access$2600(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$2700(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.server.wifi.WifiController$EcmState access$2800(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        com.android.server.wifi.WifiController$EcmState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$EcmState mEcmState>;

        return $r1;
    }

    static void access$2900(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.app.PendingIntent access$300(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        android.app.PendingIntent $r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: android.app.PendingIntent mIdleIntent>;

        return $r1;
    }

    static void access$3000(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$3100(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$3200(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$3300(com.android.server.wifi.WifiController, android.os.Message)
    {
        com.android.server.wifi.WifiController r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$3400(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$3500(com.android.server.wifi.WifiController, java.lang.String)
    {
        com.android.server.wifi.WifiController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void log(java.lang.String)>(r1);

        return;
    }

    static void access$3600(com.android.server.wifi.WifiController, java.lang.String)
    {
        com.android.server.wifi.WifiController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void logd(java.lang.String)>(r1);

        return;
    }

    static void access$3700(com.android.server.wifi.WifiController, java.lang.String)
    {
        com.android.server.wifi.WifiController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void log(java.lang.String)>(r1);

        return;
    }

    static void access$3800(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$3900(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.app.AlarmManager access$400(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        android.app.AlarmManager $r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: android.app.AlarmManager mAlarmManager>;

        return $r1;
    }

    static void access$4000(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$4100(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$4200(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$4300(com.android.server.wifi.WifiController, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiController r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static boolean access$500(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $z0 = r0.<com.android.server.wifi.WifiController: boolean mScreenOff>;

        return $z0;
    }

    static boolean access$502(com.android.server.wifi.WifiController, boolean)
    {
        com.android.server.wifi.WifiController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiController: boolean mScreenOff> = z0;

        return z0;
    }

    static boolean access$600(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $z0 = r0.<com.android.server.wifi.WifiController: boolean mDeviceIdle>;

        return $z0;
    }

    static boolean access$602(com.android.server.wifi.WifiController, boolean)
    {
        com.android.server.wifi.WifiController r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiController: boolean mDeviceIdle> = z0;

        return z0;
    }

    static void access$700(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        specialinvoke r0.<com.android.server.wifi.WifiController: void updateBatteryWorkSource()>();

        return;
    }

    static int access$800(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        $i0 = r0.<com.android.server.wifi.WifiController: int mPluggedType>;

        return $i0;
    }

    static int access$802(com.android.server.wifi.WifiController, int)
    {
        com.android.server.wifi.WifiController r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        i0 := @parameter1: int;

        r0.<com.android.server.wifi.WifiController: int mPluggedType> = i0;

        return i0;
    }

    static boolean access$900(com.android.server.wifi.WifiController, int)
    {
        com.android.server.wifi.WifiController r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiController;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiController: boolean shouldWifiStayAwake(int)>(i0);

        return $z0;
    }

    private void checkLocksAndTransitionWhenDeviceIdle()
    {
        com.android.server.wifi.WifiController r0;
        com.android.server.wifi.WifiService$LockList $r1, $r5, $r8;
        boolean $z0, $z1;
        com.android.server.wifi.WifiSettingsStore $r2;
        com.android.server.wifi.WifiController$NoLockHeldState $r3;
        com.android.server.wifi.WifiController$ScanOnlyLockHeldState $r4, $r13;
        int $i0, $i1;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10;
        com.android.server.wifi.WifiController$FullHighPerfLockHeldState $r11;
        com.android.server.wifi.WifiController$FullLockHeldState $r12;

        r0 := @this: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiService$LockList mLocks>;

        $z0 = virtualinvoke $r1.<com.android.server.wifi.WifiService$LockList: boolean hasLocks()>();

        if $z0 == 0 goto label5;

        $r5 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiService$LockList mLocks>;

        $i0 = virtualinvoke $r5.<com.android.server.wifi.WifiService$LockList: int getStrongestLockMode()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label4;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal lock ");

        $r8 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiService$LockList mLocks>;

        $i1 = virtualinvoke $r8.<com.android.server.wifi.WifiService$LockList: int getStrongestLockMode()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiController: void loge(java.lang.String)>($r10);

        return;

     label2:
        $r12 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$FullLockHeldState mFullLockHeldState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>($r12);

        return;

     label3:
        $r11 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$FullHighPerfLockHeldState mFullHighPerfLockHeldState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>($r11);

        return;

     label4:
        $r13 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ScanOnlyLockHeldState mScanOnlyLockHeldState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>($r13);

        return;

     label5:
        $r2 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiSettingsStore mSettingsStore>;

        $z1 = virtualinvoke $r2.<com.android.server.wifi.WifiSettingsStore: boolean isScanAlwaysAvailable()>();

        if $z1 == 0 goto label6;

        $r4 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ScanOnlyLockHeldState mScanOnlyLockHeldState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>($r4);

        return;

     label6:
        $r3 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$NoLockHeldState mNoLockHeldState>;

        virtualinvoke r0.<com.android.server.wifi.WifiController: void transitionTo(com.android.internal.util.IState)>($r3);

        return;
    }

    private void initializeAndRegisterForSettingsChange(android.os.Looper)
    {
        com.android.server.wifi.WifiController r0;
        android.os.Looper r1;
        android.os.Handler r2, $r3;

        r0 := @this: com.android.server.wifi.WifiController;

        r1 := @parameter0: android.os.Looper;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>(r1);

        r2 = $r3;

        specialinvoke r0.<com.android.server.wifi.WifiController: void readStayAwakeConditions()>();

        specialinvoke r0.<com.android.server.wifi.WifiController: void registerForStayAwakeModeChange(android.os.Handler)>(r2);

        specialinvoke r0.<com.android.server.wifi.WifiController: void readWifiIdleTime()>();

        specialinvoke r0.<com.android.server.wifi.WifiController: void registerForWifiIdleTimeChange(android.os.Handler)>(r2);

        specialinvoke r0.<com.android.server.wifi.WifiController: void readWifiSleepPolicy()>();

        specialinvoke r0.<com.android.server.wifi.WifiController: void registerForWifiSleepPolicyChange(android.os.Handler)>(r2);

        specialinvoke r0.<com.android.server.wifi.WifiController: void readWifiReEnableDelay()>();

        return;
    }

    private void readStayAwakeConditions()
    {
        com.android.server.wifi.WifiController r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "stay_on_while_plugged_in", 0);

        r0.<com.android.server.wifi.WifiController: int mStayAwakeConditions> = $i0;

        return;
    }

    private void readWifiIdleTime()
    {
        com.android.server.wifi.WifiController r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        long $l0;

        r0 := @this: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r2, "wifi_idle_ms", 900000L);

        r0.<com.android.server.wifi.WifiController: long mIdleMillis> = $l0;

        return;
    }

    private void readWifiReEnableDelay()
    {
        com.android.server.wifi.WifiController r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        long $l0;

        r0 := @this: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l0 = staticinvoke <android.provider.Settings$Global: long getLong(android.content.ContentResolver,java.lang.String,long)>($r2, "wifi_reenable_delay", 500L);

        r0.<com.android.server.wifi.WifiController: long mReEnableDelayMillis> = $l0;

        return;
    }

    private void readWifiSleepPolicy()
    {
        com.android.server.wifi.WifiController r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "wifi_sleep_policy", 2);

        r0.<com.android.server.wifi.WifiController: int mSleepPolicy> = $i0;

        return;
    }

    private void registerForStayAwakeModeChange(android.os.Handler)
    {
        com.android.server.wifi.WifiController r0;
        android.os.Handler r1;
        com.android.server.wifi.WifiController$2 r2, $r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        android.net.Uri $r6;

        r0 := @this: com.android.server.wifi.WifiController;

        r1 := @parameter0: android.os.Handler;

        $r3 = new com.android.server.wifi.WifiController$2;

        specialinvoke $r3.<com.android.server.wifi.WifiController$2: void <init>(com.android.server.wifi.WifiController,android.os.Handler)>(r0, r1);

        r2 = $r3;

        $r4 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("stay_on_while_plugged_in");

        virtualinvoke $r5.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r6, 0, r2);

        return;
    }

    private void registerForWifiIdleTimeChange(android.os.Handler)
    {
        com.android.server.wifi.WifiController r0;
        android.os.Handler r1;
        com.android.server.wifi.WifiController$3 r2, $r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        android.net.Uri $r6;

        r0 := @this: com.android.server.wifi.WifiController;

        r1 := @parameter0: android.os.Handler;

        $r3 = new com.android.server.wifi.WifiController$3;

        specialinvoke $r3.<com.android.server.wifi.WifiController$3: void <init>(com.android.server.wifi.WifiController,android.os.Handler)>(r0, r1);

        r2 = $r3;

        $r4 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_idle_ms");

        virtualinvoke $r5.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r6, 0, r2);

        return;
    }

    private void registerForWifiSleepPolicyChange(android.os.Handler)
    {
        com.android.server.wifi.WifiController r0;
        android.os.Handler r1;
        com.android.server.wifi.WifiController$4 r2, $r3;
        android.content.Context $r4;
        android.content.ContentResolver $r5;
        android.net.Uri $r6;

        r0 := @this: com.android.server.wifi.WifiController;

        r1 := @parameter0: android.os.Handler;

        $r3 = new com.android.server.wifi.WifiController$4;

        specialinvoke $r3.<com.android.server.wifi.WifiController$4: void <init>(com.android.server.wifi.WifiController,android.os.Handler)>(r0, r1);

        r2 = $r3;

        $r4 = r0.<com.android.server.wifi.WifiController: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_sleep_policy");

        virtualinvoke $r5.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r6, 0, r2);

        return;
    }

    private boolean shouldDeviceStayAwake(int)
    {
        com.android.server.wifi.WifiController r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.wifi.WifiController;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.wifi.WifiController: int mStayAwakeConditions>;

        $i2 = i0 & $i1;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean shouldWifiStayAwake(int)
    {
        com.android.server.wifi.WifiController r0;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiController;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.server.wifi.WifiController: int mSleepPolicy>;

        if $i1 != 2 goto label2;

     label1:
        return 1;

     label2:
        $i2 = r0.<com.android.server.wifi.WifiController: int mSleepPolicy>;

        if $i2 != 1 goto label3;

        if i0 != 0 goto label1;

     label3:
        $z0 = specialinvoke r0.<com.android.server.wifi.WifiController: boolean shouldDeviceStayAwake(int)>(i0);

        return $z0;
    }

    private void updateBatteryWorkSource()
    {
        com.android.server.wifi.WifiController r0;
        android.os.WorkSource $r1, $r2, $r4;
        boolean $z0;
        android.net.wifi.WifiStateMachine $r3;
        com.android.server.wifi.WifiService$LockList $r5;

        r0 := @this: com.android.server.wifi.WifiController;

        $r1 = r0.<com.android.server.wifi.WifiController: android.os.WorkSource mTmpWorkSource>;

        virtualinvoke $r1.<android.os.WorkSource: void clear()>();

        $z0 = r0.<com.android.server.wifi.WifiController: boolean mDeviceIdle>;

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiService$LockList mLocks>;

        $r4 = r0.<com.android.server.wifi.WifiController: android.os.WorkSource mTmpWorkSource>;

        virtualinvoke $r5.<com.android.server.wifi.WifiService$LockList: void updateWorkSource(android.os.WorkSource)>($r4);

     label1:
        $r3 = r0.<com.android.server.wifi.WifiController: android.net.wifi.WifiStateMachine mWifiStateMachine>;

        $r2 = r0.<com.android.server.wifi.WifiController: android.os.WorkSource mTmpWorkSource>;

        virtualinvoke $r3.<android.net.wifi.WifiStateMachine: void updateBatteryWorkSource(android.os.WorkSource)>($r2);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.wifi.WifiController r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r19, $r20, $r21, $r22;
        boolean $z0, $z1;
        java.lang.String $r7, $r11, $r16, $r18, $r23;
        int $i0, $i2;
        long $l1;

        r0 := @this: com.android.server.wifi.WifiController;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<com.android.internal.util.StateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mScreenOff ");

        $z0 = r0.<com.android.server.wifi.WifiController: boolean mScreenOff>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDeviceIdle ");

        $z1 = r0.<com.android.server.wifi.WifiController: boolean mDeviceIdle>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPluggedType ");

        $i0 = r0.<com.android.server.wifi.WifiController: int mPluggedType>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIdleMillis ");

        $l1 = r0.<com.android.server.wifi.WifiController: long mIdleMillis>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSleepPolicy ");

        $i2 = r0.<com.android.server.wifi.WifiController: int mSleepPolicy>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r23);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wifi.WifiController: java.lang.String TAG> = "WifiController";

        <com.android.server.wifi.WifiController: int IDLE_REQUEST> = 0;

        <com.android.server.wifi.WifiController: long DEFER_MARGIN_MS> = 5L;

        <com.android.server.wifi.WifiController: long DEFAULT_REENABLE_DELAY_MS> = 500L;

        <com.android.server.wifi.WifiController: long DEFAULT_IDLE_MS> = 900000L;

        <com.android.server.wifi.WifiController: boolean DBG> = 0;

        <com.android.server.wifi.WifiController: int CMD_WIFI_TOGGLED> = 155656;

        <com.android.server.wifi.WifiController: int CMD_USER_PRESENT> = 155660;

        <com.android.server.wifi.WifiController: int CMD_SET_AP> = 155658;

        <com.android.server.wifi.WifiController: int CMD_SCREEN_ON> = 155650;

        <com.android.server.wifi.WifiController: int CMD_SCREEN_OFF> = 155651;

        <com.android.server.wifi.WifiController: int CMD_SCAN_ALWAYS_MODE_CHANGED> = 155655;

        <com.android.server.wifi.WifiController: int CMD_LOCKS_CHANGED> = 155654;

        <com.android.server.wifi.WifiController: int CMD_EMERGENCY_MODE_CHANGED> = 155649;

        <com.android.server.wifi.WifiController: int CMD_DEVICE_IDLE> = 155653;

        <com.android.server.wifi.WifiController: int CMD_DEFERRED_TOGGLE> = 155659;

        <com.android.server.wifi.WifiController: int CMD_BATTERY_CHANGED> = 155652;

        <com.android.server.wifi.WifiController: int CMD_AIRPLANE_TOGGLED> = 155657;

        <com.android.server.wifi.WifiController: int BASE> = 155648;

        <com.android.server.wifi.WifiController: java.lang.String ACTION_DEVICE_IDLE> = "com.android.server.WifiManager.action.DEVICE_IDLE";

        return;
    }
}
