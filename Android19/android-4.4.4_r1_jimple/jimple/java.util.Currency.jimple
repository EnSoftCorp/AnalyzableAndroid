public final class java.util.Currency extends java.lang.Object implements java.io.Serializable
{
    private static final java.util.HashMap codesToCurrencies;
    private static final java.util.HashMap localesToCurrencies;
    private static final long serialVersionUID;
    private final java.lang.String currencyCode;

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;

        <java.util.Currency: long serialVersionUID> = -158308464356906721L;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <java.util.Currency: java.util.HashMap codesToCurrencies> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <java.util.Currency: java.util.HashMap localesToCurrencies> = $r1;

        return;
    }

    private void <init>(java.lang.String)
    {
        java.util.Currency r0;
        java.lang.String r1, $r3, $r4, $r9;
        java.util.Locale $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: java.util.Currency;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<java.util.Currency: java.lang.String currencyCode> = r1;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = virtualinvoke $r2.<java.util.Locale: java.lang.String toString()>();

        $r4 = staticinvoke <libcore.icu.ICU: java.lang.String getCurrencySymbol(java.lang.String,java.lang.String)>($r3, r1);

        if $r4 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported ISO 4217 currency code: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        return;
    }

    public static java.util.Set getAvailableCurrencies()
    {
        java.util.LinkedHashSet r0, $r2;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String $r3;
        java.util.Currency $r4;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        r0 = $r2;

        r1 = staticinvoke <libcore.icu.ICU: java.lang.String[] getAvailableCurrencyCodes()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r1[i1];

        $r4 = staticinvoke <java.util.Currency: java.util.Currency getInstance(java.lang.String)>($r3);

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public static java.util.Currency getInstance(java.lang.String)
    {
        java.lang.String r0;
        java.util.HashMap r1, $r4, $r7;
        java.lang.Throwable r2, $r9;
        java.util.Currency r3, $r6;
        java.lang.Object $r5;

        r0 := @parameter0: java.lang.String;

        r1 = <java.util.Currency: java.util.HashMap codesToCurrencies>;

        entermonitor r1;

     label1:
        $r4 = <java.util.Currency: java.util.HashMap codesToCurrencies>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.util.Currency) $r5;

     label2:
        if r3 != null goto label4;

     label3:
        $r6 = new java.util.Currency;

        specialinvoke $r6.<java.util.Currency: void <init>(java.lang.String)>(r0);

        r3 = $r6;

        $r7 = <java.util.Currency: java.util.HashMap codesToCurrencies>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3);

     label4:
        exitmonitor r1;

     label5:
        return r3;

     label6:
        $r9 := @caughtexception;

        r2 = $r9;

     label7:
        exitmonitor r1;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public static java.util.Currency getInstance(java.util.Locale)
    {
        java.util.Locale r0;
        java.util.HashMap r1, $r8, $r10;
        java.lang.Throwable r2, $r21;
        java.util.Currency r3, r7;
        java.lang.String r4, r5, r6, $r15;
        java.lang.Object $r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r12;
        java.lang.StringBuilder $r13, $r14, $r16, $r17, $r18, $r19, $r20;

        r0 := @parameter0: java.util.Locale;

        r1 = <java.util.Currency: java.util.HashMap localesToCurrencies>;

        entermonitor r1;

     label01:
        $r8 = <java.util.Currency: java.util.HashMap localesToCurrencies>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.util.Currency) $r9;

     label02:
        if r3 == null goto label05;

     label03:
        exitmonitor r1;

     label04:
        return r3;

     label05:
        r4 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();

        r5 = virtualinvoke r0.<java.util.Locale: java.lang.String getVariant()>();

        $z0 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label07;

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("EURO");

        if $z2 != 0 goto label06;

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("HK");

        if $z3 != 0 goto label06;

        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("PREEURO");

        if $z4 == 0 goto label07;

     label06:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        r6 = staticinvoke <libcore.icu.ICU: java.lang.String getCurrencyCode(java.lang.String)>(r4);

     label08:
        if r6 != null goto label13;

     label09:
        $r12 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported ISO 3166 country: ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label10:
        $r21 := @caughtexception;

        r2 = $r21;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

     label13:
        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("XXX");

        if $z1 == 0 goto label15;

        exitmonitor r1;

     label14:
        return null;

     label15:
        r7 = staticinvoke <java.util.Currency: java.util.Currency getInstance(java.lang.String)>(r6);

        $r10 = <java.util.Currency: java.util.HashMap localesToCurrencies>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r7);

        exitmonitor r1;

     label16:
        return r7;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label09 to label10 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label13 to label14 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
    }

    private java.lang.Object readResolve()
    {
        java.util.Currency r0, $r2;
        java.lang.String $r1;

        r0 := @this: java.util.Currency;

        $r1 = r0.<java.util.Currency: java.lang.String currencyCode>;

        $r2 = staticinvoke <java.util.Currency: java.util.Currency getInstance(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getCurrencyCode()
    {
        java.util.Currency r0;
        java.lang.String $r1;

        r0 := @this: java.util.Currency;

        $r1 = r0.<java.util.Currency: java.lang.String currencyCode>;

        return $r1;
    }

    public int getDefaultFractionDigits()
    {
        java.util.Currency r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @this: java.util.Currency;

        $r1 = r0.<java.util.Currency: java.lang.String currencyCode>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("XXX");

        if $z0 == 0 goto label1;

        return -1;

     label1:
        $r2 = r0.<java.util.Currency: java.lang.String currencyCode>;

        $i0 = staticinvoke <libcore.icu.ICU: int getCurrencyFractionDigits(java.lang.String)>($r2);

        return $i0;
    }

    public java.lang.String getDisplayName()
    {
        java.util.Currency r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @this: java.util.Currency;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<java.util.Currency: java.lang.String getDisplayName(java.util.Locale)>($r1);

        return $r2;
    }

    public java.lang.String getDisplayName(java.util.Locale)
    {
        java.util.Currency r0;
        java.util.Locale r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: java.util.Currency;

        r1 := @parameter0: java.util.Locale;

        $r2 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        $r3 = r0.<java.util.Currency: java.lang.String currencyCode>;

        $r4 = staticinvoke <libcore.icu.ICU: java.lang.String getCurrencyDisplayName(java.lang.String,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public java.lang.String getSymbol()
    {
        java.util.Currency r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        r0 := @this: java.util.Currency;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke r0.<java.util.Currency: java.lang.String getSymbol(java.util.Locale)>($r1);

        return $r2;
    }

    public java.lang.String getSymbol(java.util.Locale)
    {
        java.util.Currency r0;
        java.util.Locale r1;
        libcore.icu.LocaleData r2;
        java.lang.String r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0;
        boolean $z0;

        r0 := @this: java.util.Currency;

        r1 := @parameter0: java.util.Locale;

        $r4 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>();

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        r3 = r0.<java.util.Currency: java.lang.String currencyCode>;

     label1:
        return r3;

     label2:
        r2 = staticinvoke <libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)>(r1);

        $r6 = r2.<libcore.icu.LocaleData: java.lang.String internationalCurrencySymbol>;

        $r5 = r0.<java.util.Currency: java.lang.String currencyCode>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r10 = r2.<libcore.icu.LocaleData: java.lang.String currencySymbol>;

        return $r10;

     label3:
        $r7 = virtualinvoke r1.<java.util.Locale: java.lang.String toString()>();

        $r8 = r0.<java.util.Currency: java.lang.String currencyCode>;

        r3 = staticinvoke <libcore.icu.ICU: java.lang.String getCurrencySymbol(java.lang.String,java.lang.String)>($r7, $r8);

        if r3 != null goto label1;

        $r9 = r0.<java.util.Currency: java.lang.String currencyCode>;

        return $r9;
    }

    public java.lang.String toString()
    {
        java.util.Currency r0;
        java.lang.String $r1;

        r0 := @this: java.util.Currency;

        $r1 = r0.<java.util.Currency: java.lang.String currencyCode>;

        return $r1;
    }
}
