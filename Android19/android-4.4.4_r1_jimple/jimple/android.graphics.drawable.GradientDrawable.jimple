public class android.graphics.drawable.GradientDrawable extends android.graphics.drawable.Drawable
{
    public static final int LINE;
    public static final int LINEAR_GRADIENT;
    public static final int OVAL;
    public static final int RADIAL_GRADIENT;
    public static final int RECTANGLE;
    public static final int RING;
    public static final int SWEEP_GRADIENT;
    private int mAlpha;
    private android.graphics.ColorFilter mColorFilter;
    private boolean mDither;
    private final android.graphics.Paint mFillPaint;
    private android.graphics.drawable.GradientDrawable$GradientState mGradientState;
    private android.graphics.Paint mLayerPaint;
    private boolean mMutated;
    private android.graphics.Rect mPadding;
    private final android.graphics.Path mPath;
    private boolean mPathIsDirty;
    private final android.graphics.RectF mRect;
    private boolean mRectIsDirty;
    private android.graphics.Path mRingPath;
    private android.graphics.Paint mStrokePaint;

    public void <init>()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.drawable.GradientDrawable$Orientation $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = new android.graphics.drawable.GradientDrawable$GradientState;

        $r2 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TOP_BOTTOM>;

        specialinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>($r2, null);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        return;
    }

    private void <init>(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        android.graphics.Paint $r2;
        android.graphics.Path $r3;
        android.graphics.RectF $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint> = $r2;

        r0.<android.graphics.drawable.GradientDrawable: int mAlpha> = 255;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath> = $r3;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect> = $r4;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState> = r1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)>(r1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mMutated> = 0;

        return;
    }

    void <init>(android.graphics.drawable.GradientDrawable$GradientState, android.graphics.drawable.GradientDrawable$1)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        android.graphics.drawable.GradientDrawable$1 r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        r2 := @parameter1: android.graphics.drawable.GradientDrawable$1;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>(r1);

        return;
    }

    public void <init>(android.graphics.drawable.GradientDrawable$Orientation, int[])
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$Orientation r1;
        int[] r2;
        android.graphics.drawable.GradientDrawable$GradientState $r3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$Orientation;

        r2 := @parameter1: int[];

        $r3 = new android.graphics.drawable.GradientDrawable$GradientState;

        specialinvoke $r3.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[])>(r1, r2);

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>($r3);

        return;
    }

    private android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        android.graphics.RectF r2, r3, r4, $r7, $r8, $r9, $r10;
        android.graphics.Path r5, $r6, $r11, $r12, $r16, $r17;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i4, $i5, $i6;
        byte $b2, $b3;
        android.graphics.Path$FillType $r13;
        android.graphics.Path$Direction $r14, $r15;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        if $r6 == null goto label02;

        $z1 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$100(android.graphics.drawable.GradientDrawable$GradientState)>(r1);

        if $z1 == 0 goto label01;

        $z2 = r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty>;

        if $z2 != 0 goto label02;

     label01:
        $r17 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        return $r17;

     label02:
        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 0;

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$100(android.graphics.drawable.GradientDrawable$GradientState)>(r1);

        if $z0 == 0 goto label07;

        $i6 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f20 = (float) $i6;

        $f19 = 360.0F * $f20;

        f0 = $f19 / 10000.0F;

     label03:
        $r7 = new android.graphics.RectF;

        $r8 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        specialinvoke $r7.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r8);

        r2 = $r7;

        $f5 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        f1 = $f5 / 2.0F;

        $f6 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        f2 = $f6 / 2.0F;

        $i0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        if $i0 == -1 goto label08;

        $i4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        f3 = (float) $i4;

     label04:
        $i1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        if $i1 == -1 goto label09;

        $i5 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        f4 = (float) $i5;

     label05:
        $r9 = new android.graphics.RectF;

        specialinvoke $r9.<android.graphics.RectF: void <init>(android.graphics.RectF)>(r2);

        r3 = $r9;

        $f11 = f1 - f4;

        $f12 = f2 - f4;

        virtualinvoke r3.<android.graphics.RectF: void inset(float,float)>($f11, $f12);

        $r10 = new android.graphics.RectF;

        specialinvoke $r10.<android.graphics.RectF: void <init>(android.graphics.RectF)>(r3);

        r4 = $r10;

        $f14 = neg f3;

        $f13 = neg f3;

        virtualinvoke r4.<android.graphics.RectF: void inset(float,float)>($f14, $f13);

        $r11 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        if $r11 != null goto label10;

        $r16 = new android.graphics.Path;

        specialinvoke $r16.<android.graphics.Path: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = $r16;

     label06:
        r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        $b2 = f0 cmpg 360.0F;

        if $b2 >= 0 goto label11;

        $b3 = f0 cmpl -360.0F;

        if $b3 <= 0 goto label11;

        $r13 = <android.graphics.Path$FillType: android.graphics.Path$FillType EVEN_ODD>;

        virtualinvoke r5.<android.graphics.Path: void setFillType(android.graphics.Path$FillType)>($r13);

        $f17 = f1 + f4;

        virtualinvoke r5.<android.graphics.Path: void moveTo(float,float)>($f17, f2);

        $f18 = f1 + f4;

        $f15 = f3 + $f18;

        virtualinvoke r5.<android.graphics.Path: void lineTo(float,float)>($f15, f2);

        virtualinvoke r5.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>(r4, 0.0F, f0, 0);

        $f16 = neg f0;

        virtualinvoke r5.<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>(r3, f0, $f16, 0);

        virtualinvoke r5.<android.graphics.Path: void close()>();

        return r5;

     label07:
        f0 = 360.0F;

        goto label03;

     label08:
        $f8 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        $f7 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio>;

        f3 = $f8 / $f7;

        goto label04;

     label09:
        $f9 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        $f10 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio>;

        f4 = $f9 / $f10;

        goto label05;

     label10:
        $r12 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath>;

        virtualinvoke $r12.<android.graphics.Path: void reset()>();

        goto label06;

     label11:
        $r14 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke r5.<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>(r4, $r14);

        $r15 = <android.graphics.Path$Direction: android.graphics.Path$Direction CCW>;

        virtualinvoke r5.<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path$Direction)>(r3, $r15);

        return r5;
    }

    private boolean ensureValidRect()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Rect r1;
        android.graphics.Paint r2, $r10, $r12, $r14, $r20, $r25;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53, $f54, $f55, $f56, $f57, $f58, $f59, $f60, $f61, $f62, $f63, $f64, $f65, $f66;
        android.graphics.drawable.GradientDrawable$GradientState r3;
        int[] r4, r6, $r17;
        android.graphics.RectF r5, $r8, $r9;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        float[] r7, $r23;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        android.graphics.SweepGradient $r13;
        android.graphics.RadialGradient $r15;
        android.graphics.Shader$TileMode $r16, $r22;
        android.graphics.drawable.GradientDrawable$Orientation $r18;
        android.graphics.LinearGradient $r24;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $z1 = r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty>;

        if $z1 == 0 goto label06;

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 0;

        r1 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect getBounds()>();

        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        f0 = 0.0F;

        if r2 == null goto label01;

        $r25 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f63 = virtualinvoke $r25.<android.graphics.Paint: float getStrokeWidth()>();

        f0 = 0.5F * $f63;

     label01:
        r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r9 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $i2 = r1.<android.graphics.Rect: int left>;

        $f13 = (float) $i2;

        $f20 = f0 + $f13;

        $i4 = r1.<android.graphics.Rect: int top>;

        $f15 = (float) $i4;

        $f19 = f0 + $f15;

        $i3 = r1.<android.graphics.Rect: int right>;

        $f14 = (float) $i3;

        $f17 = $f14 - f0;

        $i5 = r1.<android.graphics.Rect: int bottom>;

        $f18 = (float) $i5;

        $f16 = $f18 - f0;

        virtualinvoke $r9.<android.graphics.RectF: void set(float,float,float,float)>($f20, $f19, $f17, $f16);

        r4 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        if r4 == null goto label06;

        r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $i6 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i6 != 0 goto label15;

        $z5 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        if $z5 == 0 goto label07;

        $i22 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f64 = (float) $i22;

        f8 = $f64 / 10000.0F;

     label02:
        $r17 = <android.graphics.drawable.GradientDrawable$1: int[] $SwitchMap$android$graphics$drawable$GradientDrawable$Orientation>;

        $r18 = r3.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        $i19 = virtualinvoke $r18.<android.graphics.drawable.GradientDrawable$Orientation: int ordinal()>();

        $i21 = $r17[$i19];

        tableswitch($i21)
        {
            case 1: goto label08;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label11;
            case 5: goto label12;
            case 6: goto label13;
            case 7: goto label14;
            default: goto label03;
        };

     label03:
        f10 = r5.<android.graphics.RectF: float left>;

        f9 = r5.<android.graphics.RectF: float top>;

        $f54 = r5.<android.graphics.RectF: float right>;

        f12 = f8 * $f54;

        $f53 = r5.<android.graphics.RectF: float bottom>;

        f11 = f8 * $f53;

     label04:
        $r20 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r24 = new android.graphics.LinearGradient;

        $r23 = r3.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r22 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r24.<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)>(f10, f9, f12, f11, r4, $r23, $r22);

        virtualinvoke $r20.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r24);

     label05:
        $z3 = r3.<android.graphics.drawable.GradientDrawable$GradientState: boolean mHasSolidColor>;

        if $z3 != 0 goto label06;

        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r10.<android.graphics.Paint: void setColor(int)>(-16777216);

     label06:
        $r8 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $z2 = virtualinvoke $r8.<android.graphics.RectF: boolean isEmpty()>();

        if $z2 != 0 goto label26;

        return 1;

     label07:
        f8 = 1.0F;

        goto label02;

     label08:
        f10 = r5.<android.graphics.RectF: float left>;

        f9 = r5.<android.graphics.RectF: float top>;

        f12 = f10;

        $f65 = r5.<android.graphics.RectF: float bottom>;

        f11 = f8 * $f65;

        goto label04;

     label09:
        f10 = r5.<android.graphics.RectF: float right>;

        f9 = r5.<android.graphics.RectF: float top>;

        $f55 = r5.<android.graphics.RectF: float left>;

        f12 = f8 * $f55;

        $f66 = r5.<android.graphics.RectF: float bottom>;

        f11 = f8 * $f66;

        goto label04;

     label10:
        f10 = r5.<android.graphics.RectF: float right>;

        f9 = r5.<android.graphics.RectF: float top>;

        $f56 = r5.<android.graphics.RectF: float left>;

        f12 = f8 * $f56;

        f11 = f9;

        goto label04;

     label11:
        f10 = r5.<android.graphics.RectF: float right>;

        f9 = r5.<android.graphics.RectF: float bottom>;

        $f58 = r5.<android.graphics.RectF: float left>;

        f12 = f8 * $f58;

        $f57 = r5.<android.graphics.RectF: float top>;

        f11 = f8 * $f57;

        goto label04;

     label12:
        f10 = r5.<android.graphics.RectF: float left>;

        f9 = r5.<android.graphics.RectF: float bottom>;

        f12 = f10;

        $f59 = r5.<android.graphics.RectF: float top>;

        f11 = f8 * $f59;

        goto label04;

     label13:
        f10 = r5.<android.graphics.RectF: float left>;

        f9 = r5.<android.graphics.RectF: float bottom>;

        $f61 = r5.<android.graphics.RectF: float right>;

        f12 = f8 * $f61;

        $f60 = r5.<android.graphics.RectF: float top>;

        f11 = f8 * $f60;

        goto label04;

     label14:
        f10 = r5.<android.graphics.RectF: float left>;

        f9 = r5.<android.graphics.RectF: float top>;

        $f62 = r5.<android.graphics.RectF: float right>;

        f12 = f8 * $f62;

        f11 = f9;

        goto label04;

     label15:
        $i7 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i7 != 1 goto label18;

        $f43 = r5.<android.graphics.RectF: float left>;

        $f44 = r5.<android.graphics.RectF: float right>;

        $f35 = r5.<android.graphics.RectF: float left>;

        $f46 = $f44 - $f35;

        $f45 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        $f40 = $f46 * $f45;

        f5 = $f43 + $f40;

        $f41 = r5.<android.graphics.RectF: float top>;

        $f42 = r5.<android.graphics.RectF: float bottom>;

        $f39 = r5.<android.graphics.RectF: float top>;

        $f49 = $f42 - $f39;

        $f48 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$400(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        $f50 = $f49 * $f48;

        f7 = $f41 + $f50;

        $z4 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        if $z4 == 0 goto label17;

        $i20 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f51 = (float) $i20;

        f6 = $f51 / 10000.0F;

     label16:
        $r14 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r15 = new android.graphics.RadialGradient;

        $f47 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$500(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        $f52 = f6 * $f47;

        $r16 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r15.<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode)>(f5, f7, $f52, r4, null, $r16);

        virtualinvoke $r14.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r15);

        goto label05;

     label17:
        f6 = 1.0F;

        goto label16;

     label18:
        $i8 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient>;

        if $i8 != 2 goto label05;

        $f22 = r5.<android.graphics.RectF: float left>;

        $f23 = r5.<android.graphics.RectF: float right>;

        $f24 = r5.<android.graphics.RectF: float left>;

        $f21 = $f23 - $f24;

        $f28 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        $f27 = $f21 * $f28;

        f1 = $f22 + $f27;

        $f32 = r5.<android.graphics.RectF: float top>;

        $f25 = r5.<android.graphics.RectF: float bottom>;

        $f26 = r5.<android.graphics.RectF: float top>;

        $f31 = $f25 - $f26;

        $f30 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$400(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        $f29 = $f31 * $f30;

        f2 = $f32 + $f29;

        r6 = r4;

        z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$000(android.graphics.drawable.GradientDrawable$GradientState)>(r3);

        r7 = null;

        if z0 == 0 goto label25;

        r6 = r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mTempColors>;

        i0 = lengthof r4;

        if r6 == null goto label19;

        $i17 = lengthof r6;

        $i16 = i0 + 1;

        if $i17 == $i16 goto label20;

     label19:
        $i11 = i0 + 1;

        r6 = newarray (int)[$i11];

        r3.<android.graphics.drawable.GradientDrawable$GradientState: int[] mTempColors> = r6;

     label20:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r6, 0, i0);

        $i12 = i0 - 1;

        $i13 = r4[$i12];

        r6[i0] = $i13;

        r7 = r3.<android.graphics.drawable.GradientDrawable$GradientState: float[] mTempPositions>;

        $i14 = i0 - 1;

        $f33 = (float) $i14;

        f3 = 1.0F / $f33;

        if r7 == null goto label21;

        $i15 = lengthof r7;

        $i18 = i0 + 1;

        if $i15 == $i18 goto label22;

     label21:
        $i9 = i0 + 1;

        r7 = newarray (float)[$i9];

        r3.<android.graphics.drawable.GradientDrawable$GradientState: float[] mTempPositions> = r7;

     label22:
        $i10 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getLevel()>();

        $f34 = (float) $i10;

        f4 = $f34 / 10000.0F;

        i1 = 0;

     label23:
        if i1 >= i0 goto label24;

        $f36 = (float) i1;

        $f37 = f3 * $f36;

        $f38 = f4 * $f37;

        r7[i1] = $f38;

        i1 = i1 + 1;

        goto label23;

     label24:
        r7[i0] = 1.0F;

     label25:
        $r12 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r13 = new android.graphics.SweepGradient;

        specialinvoke $r13.<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>(f1, f2, r6, r7);

        virtualinvoke $r12.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r13);

        goto label05;

     label26:
        return 0;
    }

    private static float getFloatOrFraction(android.content.res.TypedArray, int, float)
    {
        android.content.res.TypedArray r0;
        int i0, $i1;
        float f0, f1, $f2;
        android.util.TypedValue r1;
        boolean z0;

        r0 := @parameter0: android.content.res.TypedArray;

        i0 := @parameter1: int;

        f0 := @parameter2: float;

        r1 = virtualinvoke r0.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(i0);

        f1 = f0;

        if r1 == null goto label2;

        $i1 = r1.<android.util.TypedValue: int type>;

        if $i1 != 6 goto label3;

        z0 = 1;

     label1:
        if z0 == 0 goto label4;

        f1 = virtualinvoke r1.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

     label2:
        return f1;

     label3:
        z0 = 0;

        goto label1;

     label4:
        $f2 = virtualinvoke r1.<android.util.TypedValue: float getFloat()>();

        return $f2;
    }

    private void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState r1;
        float[] r2;
        android.graphics.DashPathEffect r3, $r12;
        boolean $z0;
        int[] $r4;
        android.graphics.Paint $r5, $r7, $r9, $r10, $r11, $r14, $r15, $r16;
        android.graphics.Rect $r6;
        int $i0, $i1, $i2, $i4;
        android.graphics.Paint$Style $r8;
        float $f0, $f1, $f2, $f3;
        byte $b3;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$GradientState;

        $z0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: boolean mHasSolidColor>;

        if $z0 == 0 goto label3;

        $r16 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mSolidColor>;

        virtualinvoke $r16.<android.graphics.Paint: void setColor(int)>($i4);

     label1:
        $r6 = r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding>;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding> = $r6;

        $i0 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        if $i0 < 0 goto label2;

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint> = $r7;

        $r9 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r9.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $i1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeWidth>;

        $f0 = (float) $i1;

        virtualinvoke $r10.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r11 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $i2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int mStrokeColor>;

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>($i2);

        $f1 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        $b3 = $f1 cmpl 0.0F;

        if $b3 == 0 goto label2;

        r2 = newarray (float)[2];

        $f2 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashWidth>;

        r2[0] = $f2;

        $f3 = r1.<android.graphics.drawable.GradientDrawable$GradientState: float mStrokeDashGap>;

        r2[1] = $f3;

        $r12 = new android.graphics.DashPathEffect;

        specialinvoke $r12.<android.graphics.DashPathEffect: void <init>(float[],float)>(r2, 0.0F);

        r3 = $r12;

        $r14 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r14.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(r3);

     label2:
        return;

     label3:
        $r4 = r1.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        if $r4 != null goto label4;

        $r15 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r15.<android.graphics.Paint: void setColor(int)>(0);

        goto label1;

     label4:
        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>(-16777216);

        goto label1;
    }

    private int modulateAlpha(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $i3 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i1 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i2 = $i1 >> 7;

        $i4 = $i3 + $i2;

        $i5 = i0 * $i4;

        $i6 = $i5 >> 8;

        return $i6;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, $i4, $i5, $i8, $i9, $i10, $i13, $i14;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.graphics.drawable.GradientDrawable$GradientState r2, $r48;
        android.graphics.Path r3, $r36, $r39, $r41, $r44;
        android.graphics.RectF r4, r5, r6, $r23, $r25, $r30, $r32, $r33, $r38, $r43, $r56, $r57, $r63, $r64;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        android.graphics.Paint r7, r8, $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r31, $r35, $r40, $r45, $r47, $r49, $r51, $r52, $r53, $r54, $r55, $r59, $r61, $r62, $r65, $r67, $r69, $r70, $r71, $r72;
        android.graphics.ColorFilter $r14, $r15, $r29, $r50, $r60, $r73;
        float[] $r24, $r42;
        byte $b6, $b7, $b12;
        android.graphics.Shader $r34;
        android.graphics.Path$Direction $r37;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $z3 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: boolean ensureValidRect()>();

        if $z3 != 0 goto label02;

     label01:
        return;

     label02:
        $r9 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        i0 = virtualinvoke $r9.<android.graphics.Paint: int getAlpha()>();

        $r10 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r10 == null goto label11;

        $r70 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        i1 = virtualinvoke $r70.<android.graphics.Paint: int getAlpha()>();

     label03:
        i2 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>(i0);

        i3 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: int modulateAlpha(int)>(i1);

        if i3 <= 0 goto label12;

        $r72 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r72 == null goto label12;

        $r71 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f18 = virtualinvoke $r71.<android.graphics.Paint: float getStrokeWidth()>();

        $b12 = $f18 cmpl 0.0F;

        if $b12 <= 0 goto label12;

        z0 = 1;

     label04:
        if i2 <= 0 goto label13;

        z1 = 1;

     label05:
        r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        if z0 == 0 goto label14;

        if z1 == 0 goto label14;

        $i14 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        if $i14 == 2 goto label14;

        if i3 >= 255 goto label14;

        $i13 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        if $i13 < 255 goto label06;

        $r73 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if $r73 == null goto label14;

     label06:
        z2 = 1;

     label07:
        if z2 == 0 goto label15;

        $r54 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        if $r54 != null goto label08;

        $r65 = new android.graphics.Paint;

        specialinvoke $r65.<android.graphics.Paint: void <init>()>();

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint> = $r65;

     label08:
        $r52 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $z9 = r0.<android.graphics.drawable.GradientDrawable: boolean mDither>;

        virtualinvoke $r52.<android.graphics.Paint: void setDither(boolean)>($z9);

        $r53 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $i8 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        virtualinvoke $r53.<android.graphics.Paint: void setAlpha(int)>($i8);

        $r61 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        $r60 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r61.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r60);

        $r59 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        f3 = virtualinvoke $r59.<android.graphics.Paint: float getStrokeWidth()>();

        $r57 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f10 = $r57.<android.graphics.RectF: float left>;

        $f16 = $f10 - f3;

        $r56 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f15 = $r56.<android.graphics.RectF: float top>;

        $f17 = $f15 - f3;

        $r64 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f14 = $r64.<android.graphics.RectF: float right>;

        $f12 = f3 + $f14;

        $r63 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f13 = $r63.<android.graphics.RectF: float bottom>;

        $f11 = f3 + $f13;

        $r62 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mLayerPaint>;

        virtualinvoke r1.<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>($f16, $f17, $f12, $f11, $r62, 4);

        $r69 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r69.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

        $r67 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r67.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

     label09:
        $i4 = r2.<android.graphics.drawable.GradientDrawable$GradientState: int mShape>;

        tableswitch($i4)
        {
            case 0: goto label17;
            case 1: goto label25;
            case 2: goto label26;
            case 3: goto label27;
            default: goto label10;
        };

     label10:
        if z2 == 0 goto label28;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;

     label11:
        i1 = 0;

        goto label03;

     label12:
        z0 = 0;

        goto label04;

     label13:
        z1 = 0;

        goto label05;

     label14:
        z2 = 0;

        goto label07;

     label15:
        $r11 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r11.<android.graphics.Paint: void setAlpha(int)>(i2);

        $r12 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $z4 = r0.<android.graphics.drawable.GradientDrawable: boolean mDither>;

        virtualinvoke $r12.<android.graphics.Paint: void setDither(boolean)>($z4);

        $r16 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r15 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r16.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r15);

        $r14 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if $r14 == null goto label16;

        $r48 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z7 = $r48.<android.graphics.drawable.GradientDrawable$GradientState: boolean mHasSolidColor>;

        if $z7 != 0 goto label16;

        $r55 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i10 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        $i9 = $i10 << 24;

        virtualinvoke $r55.<android.graphics.Paint: void setColor(int)>($i9);

     label16:
        if z0 == 0 goto label09;

        $r49 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r49.<android.graphics.Paint: void setAlpha(int)>(i3);

        $r51 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $z8 = r0.<android.graphics.drawable.GradientDrawable: boolean mDither>;

        virtualinvoke $r51.<android.graphics.Paint: void setDither(boolean)>($z8);

        $r47 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $r50 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        virtualinvoke $r47.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r50);

        goto label09;

     label17:
        $r24 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        if $r24 == null goto label20;

        $z5 = r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty>;

        if $z5 != 0 goto label18;

        $z6 = r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty>;

        if $z6 == 0 goto label19;

     label18:
        $r36 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        virtualinvoke $r36.<android.graphics.Path: void reset()>();

        $r44 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r43 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r42 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float[] mRadiusArray>;

        $r37 = <android.graphics.Path$Direction: android.graphics.Path$Direction CW>;

        virtualinvoke $r44.<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction)>($r43, $r42, $r37);

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 0;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 0;

     label19:
        $r39 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r45 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r39, $r45);

        if z0 == 0 goto label10;

        $r41 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mPath>;

        $r40 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r41, $r40);

        goto label10;

     label20:
        $f6 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $b6 = $f6 cmpl 0.0F;

        if $b6 <= 0 goto label22;

        f1 = r2.<android.graphics.drawable.GradientDrawable$GradientState: float mRadius>;

        $r33 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f7 = virtualinvoke $r33.<android.graphics.RectF: float width()>();

        $r38 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $f8 = virtualinvoke $r38.<android.graphics.RectF: float height()>();

        $f9 = staticinvoke <java.lang.Math: float min(float,float)>($f7, $f8);

        f2 = 0.5F * $f9;

        $b7 = f1 cmpl f2;

        if $b7 <= 0 goto label21;

        f1 = f2;

     label21:
        r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        r7 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>(r5, f1, f1, r7);

        if z0 == 0 goto label10;

        r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        r8 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>(r6, f1, f1, r8);

        goto label10;

     label22:
        $r28 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $i5 = virtualinvoke $r28.<android.graphics.Paint: int getColor()>();

        if $i5 != 0 goto label23;

        $r29 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if $r29 != null goto label23;

        $r35 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        $r34 = virtualinvoke $r35.<android.graphics.Paint: android.graphics.Shader getShader()>();

        if $r34 == null goto label24;

     label23:
        $r32 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r27 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r32, $r27);

     label24:
        if z0 == 0 goto label10;

        $r30 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r31 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r30, $r31);

        goto label10;

     label25:
        $r23 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r22 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r23, $r22);

        if z0 == 0 goto label10;

        $r25 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        $r26 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>($r25, $r26);

        goto label10;

     label26:
        r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.RectF mRect>;

        f0 = virtualinvoke r4.<android.graphics.RectF: float centerY()>();

        $f5 = r4.<android.graphics.RectF: float left>;

        $f4 = r4.<android.graphics.RectF: float right>;

        $r19 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f5, f0, $f4, f0, $r19);

        goto label10;

     label27:
        r3 = specialinvoke r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState)>(r2);

        $r20 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r3, $r20);

        if z0 == 0 goto label10;

        $r21 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>(r3, $r21);

        goto label10;

     label28:
        $r18 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r18.<android.graphics.Paint: void setAlpha(int)>(i0);

        if z0 == 0 goto label01;

        $r17 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r17.<android.graphics.Paint: void setAlpha(int)>(i1);

        return;
    }

    public int getAlpha()
    {
        android.graphics.drawable.GradientDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        return $i0;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.GradientDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i1 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        return $i2;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mChangingConfigurations> = $i0;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        return $r2;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mHeight>;

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $i0 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: int mWidth>;

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $z0 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$200(android.graphics.drawable.GradientDrawable$GradientState)>($r1);

        if $z0 == 0 goto label1;

        return -1;

     label1:
        return -3;
    }

    public android.graphics.drawable.GradientDrawable$Orientation getOrientation()
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.drawable.GradientDrawable$Orientation $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2 = $r1.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation>;

        return $r2;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Rect r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding>;

        virtualinvoke r1.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.GradientDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.graphics.drawable.GradientDrawable$GradientState r4, $r17, $r24;
        android.content.res.TypedArray r5, r7, r8, r9, r11, r12, r15;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i22, $i23, $i24, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z12;
        java.lang.String r6, $r23, $r39, $r43, $r50, $r54;
        float[] r10, r14, $r33, $r34, $r41;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f16, $f17, $f19, $f20, $f21;
        android.util.TypedValue r13;
        int[] $r16, $r19, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r35, $r36, $r37, $r38, $r62;
        java.lang.StringBuilder $r18, $r21, $r22, $r40, $r44, $r45, $r46, $r49, $r51, $r52, $r53;
        android.graphics.Rect $r20, $r26;
        byte $b25, $b26;
        org.xmlpull.v1.XmlPullParserException $r42, $r48;
        android.graphics.drawable.GradientDrawable$Orientation $r47, $r55, $r56, $r57, $r58, $r59, $r60, $r61;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r16 = <com.android.internal.R$styleable: int[] GradientDrawable>;

        r5 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r16);

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int)>(r1, r2, r5, 1);

        i0 = virtualinvoke r5.<android.content.res.TypedArray: int getInt(int,int)>(2, 0);

        z0 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(0, 0);

        if i0 != 3 goto label03;

        $i33 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(6, -1);

        r4.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius> = $i33;

        $i32 = r4.<android.graphics.drawable.GradientDrawable$GradientState: int mInnerRadius>;

        if $i32 != -1 goto label01;

        $f20 = virtualinvoke r5.<android.content.res.TypedArray: float getFloat(int,float)>(3, 3.0F);

        r4.<android.graphics.drawable.GradientDrawable$GradientState: float mInnerRadiusRatio> = $f20;

     label01:
        $i31 = virtualinvoke r5.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(7, -1);

        r4.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness> = $i31;

        $i30 = r4.<android.graphics.drawable.GradientDrawable$GradientState: int mThickness>;

        if $i30 != -1 goto label02;

        $f21 = virtualinvoke r5.<android.content.res.TypedArray: float getFloat(int,float)>(4, 9.0F);

        r4.<android.graphics.drawable.GradientDrawable$GradientState: float mThicknessRatio> = $f21;

     label02:
        $z12 = virtualinvoke r5.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(5, 1);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$102(android.graphics.drawable.GradientDrawable$GradientState,boolean)>(r4, $z12);

     label03:
        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setShape(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setDither(boolean)>(z0);

        $i19 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        i1 = 1 + $i19;

     label04:
        i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label35;

        i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if i3 >= i1 goto label05;

        if i2 == 3 goto label35;

     label05:
        if i2 != 2 goto label04;

        if i3 > i1 goto label04;

        r6 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z6 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("size");

        if $z6 == 0 goto label06;

        $r62 = <com.android.internal.R$styleable: int[] GradientDrawableSize>;

        r15 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r62);

        i17 = virtualinvoke r15.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, -1);

        i18 = virtualinvoke r15.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, -1);

        virtualinvoke r15.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setSize(int,int)>(i17, i18);

        goto label04;

     label06:
        $z5 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("gradient");

        if $z5 == 0 goto label26;

        $r28 = <com.android.internal.R$styleable: int[] GradientDrawableGradient>;

        r12 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r28);

        i12 = virtualinvoke r12.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        z1 = virtualinvoke r12.<android.content.res.TypedArray: boolean hasValue(int)>(8);

        i14 = virtualinvoke r12.<android.content.res.TypedArray: int getColor(int,int)>(8, 0);

        i13 = virtualinvoke r12.<android.content.res.TypedArray: int getColor(int,int)>(1, 0);

        i15 = virtualinvoke r12.<android.content.res.TypedArray: int getInt(int,int)>(4, 0);

        $f13 = staticinvoke <android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)>(r12, 5, 0.5F);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$302(android.graphics.drawable.GradientDrawable$GradientState,float)>(r4, $f13);

        $f16 = staticinvoke <android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)>(r12, 6, 0.5F);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$402(android.graphics.drawable.GradientDrawable$GradientState,float)>(r4, $f16);

        $z10 = virtualinvoke r12.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$002(android.graphics.drawable.GradientDrawable$GradientState,boolean)>(r4, $z10);

        r4.<android.graphics.drawable.GradientDrawable$GradientState: int mGradient> = i15;

        if i15 != 0 goto label18;

        $f19 = virtualinvoke r12.<android.content.res.TypedArray: float getFloat(int,float)>(3, 0.0F);

        $i28 = (int) $f19;

        i16 = $i28 % 360;

        $i29 = i16 % 45;

        if $i29 == 0 goto label07;

        $r48 = new org.xmlpull.v1.XmlPullParserException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke r12.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<gradient> tag requires \'angle\' attribute to ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("be a multiple of 45");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r48.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r54);

        throw $r48;

     label07:
        lookupswitch(i16)
        {
            case 0: goto label10;
            case 45: goto label11;
            case 90: goto label12;
            case 135: goto label13;
            case 180: goto label14;
            case 225: goto label15;
            case 270: goto label16;
            case 315: goto label17;
            default: goto label08;
        };

     label08:
        virtualinvoke r12.<android.content.res.TypedArray: void recycle()>();

        if z1 == 0 goto label25;

        $r38 = newarray (int)[3];

        r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors> = $r38;

        $r37 = r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r37[0] = i12;

        $r36 = r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r36[1] = i14;

        $r35 = r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r35[2] = i13;

        $r34 = newarray (float)[3];

        r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions> = $r34;

        $r33 = r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r33[0] = 0.0F;

        r14 = r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $f17 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>(r4);

        $b26 = $f17 cmpl 0.5F;

        if $b26 == 0 goto label24;

        f1 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$300(android.graphics.drawable.GradientDrawable$GradientState)>(r4);

     label09:
        r14[1] = f1;

        $r41 = r4.<android.graphics.drawable.GradientDrawable$GradientState: float[] mPositions>;

        $r41[2] = 1.0F;

        goto label04;

     label10:
        $r47 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation LEFT_RIGHT>;

        r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r47;

        goto label08;

     label11:
        $r61 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BL_TR>;

        r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r61;

        goto label08;

     label12:
        $r60 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BOTTOM_TOP>;

        r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r60;

        goto label08;

     label13:
        $r59 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation BR_TL>;

        r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r59;

        goto label08;

     label14:
        $r58 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation RIGHT_LEFT>;

        r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r58;

        goto label08;

     label15:
        $r57 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TR_BL>;

        r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r57;

        goto label08;

     label16:
        $r56 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TOP_BOTTOM>;

        r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r56;

        goto label08;

     label17:
        $r55 = <android.graphics.drawable.GradientDrawable$Orientation: android.graphics.drawable.GradientDrawable$Orientation TL_BR>;

        r4.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = $r55;

        goto label08;

     label18:
        r13 = virtualinvoke r12.<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>(7);

        if r13 == null goto label23;

        $i27 = r13.<android.util.TypedValue: int type>;

        if $i27 != 6 goto label21;

        z2 = 1;

     label19:
        if z2 == 0 goto label22;

        f2 = virtualinvoke r13.<android.util.TypedValue: float getFraction(float,float)>(1.0F, 1.0F);

     label20:
        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$502(android.graphics.drawable.GradientDrawable$GradientState,float)>(r4, f2);

        goto label08;

     label21:
        z2 = 0;

        goto label19;

     label22:
        f2 = virtualinvoke r13.<android.util.TypedValue: float getFloat()>();

        goto label20;

     label23:
        if i15 != 1 goto label08;

        $r42 = new org.xmlpull.v1.XmlPullParserException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke r12.<android.content.res.TypedArray: java.lang.String getPositionDescription()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<gradient> tag requires \'gradientRadius\' ");

        $r40 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attribute with radial type");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r39);

        throw $r42;

     label24:
        f1 = staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: float access$400(android.graphics.drawable.GradientDrawable$GradientState)>(r4);

        goto label09;

     label25:
        $r32 = newarray (int)[2];

        r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors> = $r32;

        $r31 = r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r31[0] = i12;

        $r30 = r4.<android.graphics.drawable.GradientDrawable$GradientState: int[] mColors>;

        $r30[1] = i13;

        goto label04;

     label26:
        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("solid");

        if $z4 == 0 goto label27;

        $r29 = <com.android.internal.R$styleable: int[] GradientDrawableSolid>;

        r11 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r29);

        i11 = virtualinvoke r11.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        virtualinvoke r11.<android.content.res.TypedArray: void recycle()>();

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setColor(int)>(i11);

        goto label04;

     label27:
        $z3 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("stroke");

        if $z3 == 0 goto label30;

        $r27 = <com.android.internal.R$styleable: int[] GradientDrawableStroke>;

        r9 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r27);

        i10 = virtualinvoke r9.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        i9 = virtualinvoke r9.<android.content.res.TypedArray: int getColor(int,int)>(1, 0);

        f0 = virtualinvoke r9.<android.content.res.TypedArray: float getDimension(int,float)>(2, 0.0F);

        $b25 = f0 cmpl 0.0F;

        if $b25 == 0 goto label29;

        $f12 = virtualinvoke r9.<android.content.res.TypedArray: float getDimension(int,float)>(3, 0.0F);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>(i10, i9, f0, $f12);

     label28:
        virtualinvoke r9.<android.content.res.TypedArray: void recycle()>();

        goto label04;

     label29:
        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>(i10, i9);

        goto label28;

     label30:
        $z8 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("corners");

        if $z8 == 0 goto label33;

        $r25 = <com.android.internal.R$styleable: int[] DrawableCorners>;

        r8 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r25);

        i4 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(0, 0);

        $f6 = (float) i4;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>($f6);

        i6 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(1, i4);

        i5 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(2, i4);

        i8 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, i4);

        i7 = virtualinvoke r8.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, i4);

        if i6 != i4 goto label31;

        if i5 != i4 goto label31;

        if i8 != i4 goto label31;

        if i7 == i4 goto label32;

     label31:
        r10 = newarray (float)[8];

        $f3 = (float) i6;

        r10[0] = $f3;

        $f5 = (float) i6;

        r10[1] = $f5;

        $f4 = (float) i5;

        r10[2] = $f4;

        $f9 = (float) i5;

        r10[3] = $f9;

        $f8 = (float) i7;

        r10[4] = $f8;

        $f11 = (float) i7;

        r10[5] = $f11;

        $f10 = (float) i8;

        r10[6] = $f10;

        $f7 = (float) i8;

        r10[7] = $f7;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>(r10);

     label32:
        virtualinvoke r8.<android.content.res.TypedArray: void recycle()>();

        goto label04;

     label33:
        $z7 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("padding");

        if $z7 == 0 goto label34;

        $r19 = <com.android.internal.R$styleable: int[] GradientDrawablePadding>;

        r7 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r19);

        $r20 = new android.graphics.Rect;

        $i20 = virtualinvoke r7.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(0, 0);

        $i22 = virtualinvoke r7.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(1, 0);

        $i23 = virtualinvoke r7.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(2, 0);

        $i24 = virtualinvoke r7.<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>(3, 0);

        specialinvoke $r20.<android.graphics.Rect: void <init>(int,int,int,int)>($i20, $i22, $i23, $i24);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding> = $r20;

        virtualinvoke r7.<android.content.res.TypedArray: void recycle()>();

        $r24 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r26 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Rect mPadding>;

        $r24.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.Rect mPadding> = $r26;

        goto label04;

     label34:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad element under <shape>: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("drawable", $r23);

        goto label04;

     label35:
        $r17 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: void access$600(android.graphics.drawable.GradientDrawable$GradientState)>($r17);

        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        $z0 = r0.<android.graphics.drawable.GradientDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.GradientDrawable$GradientState;

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        specialinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void <init>(android.graphics.drawable.GradientDrawable$GradientState)>($r3);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState> = $r2;

        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        specialinvoke r0.<android.graphics.drawable.GradientDrawable: void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState)>($r4);

        r0.<android.graphics.drawable.GradientDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.Rect r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>(r1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = null;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        return;
    }

    protected boolean onLevelChange(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: boolean onLevelChange(int)>(i0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return 1;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, $i1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $i1 = r0.<android.graphics.drawable.GradientDrawable: int mAlpha>;

        if i0 == $i1 goto label1;

        r0.<android.graphics.drawable.GradientDrawable: int mAlpha> = i0;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColor(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setSolidColor(int)>(i0);

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mFillPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.ColorFilter r1, $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter>;

        if r1 == $r2 goto label1;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter mColorFilter> = r1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColors(int[])
    {
        android.graphics.drawable.GradientDrawable r0;
        int[] r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: int[];

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void setColors(int[])>(r1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setCornerRadii(float[])
    {
        android.graphics.drawable.GradientDrawable r0;
        float[] r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: float[];

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadii(float[])>(r1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setCornerRadius(float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setCornerRadius(float)>(f0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean z0, $z1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.graphics.drawable.GradientDrawable: boolean mDither>;

        if z0 == $z1 goto label1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mDither> = z0;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setGradientCenter(float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0, f1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientCenter(float,float)>(f0, f1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setGradientRadius(float)
    {
        android.graphics.drawable.GradientDrawable r0;
        float f0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientRadius(float)>(f0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setGradientType(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setGradientType(int)>(i0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setOrientation(android.graphics.drawable.GradientDrawable$Orientation)
    {
        android.graphics.drawable.GradientDrawable r0;
        android.graphics.drawable.GradientDrawable$Orientation r1;
        android.graphics.drawable.GradientDrawable$GradientState $r2;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        r1 := @parameter0: android.graphics.drawable.GradientDrawable$Orientation;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        $r2.<android.graphics.drawable.GradientDrawable$GradientState: android.graphics.drawable.GradientDrawable$Orientation mOrientation> = r1;

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setShape(int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Path mRingPath> = null;

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setShape(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setSize(int, int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r1.<android.graphics.drawable.GradientDrawable$GradientState: void setSize(int,int)>(i0, i1);

        r0.<android.graphics.drawable.GradientDrawable: boolean mPathIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setStroke(int, int)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>(i0, i1, 0.0F, 0.0F);

        return;
    }

    public void setStroke(int, int, float, float)
    {
        android.graphics.drawable.GradientDrawable r0;
        int i0, i1;
        float f0, f1, $f2;
        byte b2;
        android.graphics.DashPathEffect r1, $r8;
        android.graphics.drawable.GradientDrawable$GradientState $r2;
        android.graphics.Paint $r3, $r4, $r5, $r6, $r11, $r12;
        float[] $r9;
        android.graphics.Paint$Style $r10;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r2 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        virtualinvoke $r2.<android.graphics.drawable.GradientDrawable$GradientState: void setStroke(int,int,float,float)>(i0, i1, f0, f1);

        $r3 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        if $r3 != null goto label1;

        $r11 = new android.graphics.Paint;

        specialinvoke $r11.<android.graphics.Paint: void <init>(int)>(1);

        r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint> = $r11;

        $r12 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $r10 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r12.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r10);

     label1:
        $r4 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        $f2 = (float) i0;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>($f2);

        $r5 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>(i1);

        b2 = f0 cmpl 0.0F;

        r1 = null;

        if b2 <= 0 goto label2;

        $r8 = new android.graphics.DashPathEffect;

        $r9 = newarray (float)[2];

        $r9[0] = f0;

        $r9[1] = f1;

        specialinvoke $r8.<android.graphics.DashPathEffect: void <init>(float[],float)>($r9, 0.0F);

        r1 = $r8;

     label2:
        $r6 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.Paint mStrokePaint>;

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>(r1);

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public void setUseLevel(boolean)
    {
        android.graphics.drawable.GradientDrawable r0;
        boolean z0;
        android.graphics.drawable.GradientDrawable$GradientState $r1;

        r0 := @this: android.graphics.drawable.GradientDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$GradientState mGradientState>;

        staticinvoke <android.graphics.drawable.GradientDrawable$GradientState: boolean access$002(android.graphics.drawable.GradientDrawable$GradientState,boolean)>($r1, z0);

        r0.<android.graphics.drawable.GradientDrawable: boolean mRectIsDirty> = 1;

        virtualinvoke r0.<android.graphics.drawable.GradientDrawable: void invalidateSelf()>();

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.GradientDrawable: int SWEEP_GRADIENT> = 2;

        <android.graphics.drawable.GradientDrawable: int RING> = 3;

        <android.graphics.drawable.GradientDrawable: int RECTANGLE> = 0;

        <android.graphics.drawable.GradientDrawable: int RADIAL_GRADIENT> = 1;

        <android.graphics.drawable.GradientDrawable: int OVAL> = 1;

        <android.graphics.drawable.GradientDrawable: int LINEAR_GRADIENT> = 0;

        <android.graphics.drawable.GradientDrawable: int LINE> = 2;

        return;
    }
}
