public final class com.android.server.am.UsageStatsService extends com.android.internal.app.IUsageStats$Stub
{
    private static final int CHECKIN_VERSION;
    private static final java.lang.String FILE_HISTORY;
    private static final java.lang.String FILE_PREFIX;
    private static final int FILE_WRITE_INTERVAL;
    private static final int[] LAUNCH_TIME_BINS;
    private static final int MAX_NUM_FILES;
    private static final int NUM_LAUNCH_TIME_BINS;
    private static final boolean REPORT_UNEXPECTED;
    public static final java.lang.String SERVICE_NAME;
    private static final java.lang.String TAG;
    private static final int VERSION;
    private static final boolean localLOGV;
    static com.android.internal.app.IUsageStats sService;
    private java.util.Calendar mCal;
    private android.content.Context mContext;
    private java.io.File mDir;
    private java.io.File mFile;
    private java.lang.String mFileLeaf;
    final java.lang.Object mFileLock;
    private android.util.AtomicFile mHistoryFile;
    private boolean mIsResumed;
    private final android.util.ArrayMap mLastResumeTimes;
    private java.lang.String mLastResumedComp;
    private java.lang.String mLastResumedPkg;
    private final java.util.concurrent.atomic.AtomicInteger mLastWriteDay;
    private final java.util.concurrent.atomic.AtomicLong mLastWriteElapsedTime;
    private com.android.internal.content.PackageMonitor mPackageMonitor;
    private final android.util.ArrayMap mStats;
    final java.lang.Object mStatsLock;
    private final java.util.concurrent.atomic.AtomicBoolean mUnforcedDiskWriteRunning;

    static void <clinit>()
    {
        int[] $r0;

        <com.android.server.am.UsageStatsService: int VERSION> = 1008;

        <com.android.server.am.UsageStatsService: java.lang.String TAG> = "UsageStats";

        <com.android.server.am.UsageStatsService: java.lang.String SERVICE_NAME> = "usagestats";

        <com.android.server.am.UsageStatsService: boolean REPORT_UNEXPECTED> = 0;

        <com.android.server.am.UsageStatsService: int NUM_LAUNCH_TIME_BINS> = 10;

        <com.android.server.am.UsageStatsService: int MAX_NUM_FILES> = 5;

        <com.android.server.am.UsageStatsService: int FILE_WRITE_INTERVAL> = 1800000;

        <com.android.server.am.UsageStatsService: java.lang.String FILE_PREFIX> = "usage-";

        <com.android.server.am.UsageStatsService: java.lang.String FILE_HISTORY> = "usage-history.xml";

        <com.android.server.am.UsageStatsService: int CHECKIN_VERSION> = 4;

        $r0 = newarray (int)[9];

        $r0[0] = 250;

        $r0[1] = 500;

        $r0[2] = 750;

        $r0[3] = 1000;

        $r0[4] = 1500;

        $r0[5] = 2000;

        $r0[6] = 3000;

        $r0[7] = 4000;

        $r0[8] = 5000;

        <com.android.server.am.UsageStatsService: int[] LAUNCH_TIME_BINS> = $r0;

        return;
    }

    void <init>(java.lang.String)
    {
        com.android.server.am.UsageStatsService r0;
        java.lang.String r1, r4, $r18, $r20, $r30, $r33, $r35, $r37, $r38;
        java.io.File r2, $r12, $r14, $r16, $r17, $r19, $r21, $r24, $r27, $r39;
        java.lang.String[] r3;
        int i0, $i2;
        java.util.concurrent.atomic.AtomicInteger $r5, $r28;
        java.util.concurrent.atomic.AtomicLong $r6, $r23;
        java.util.concurrent.atomic.AtomicBoolean $r7;
        android.util.ArrayMap $r8, $r9;
        java.lang.Object $r10, $r11;
        java.util.TimeZone $r13;
        java.util.Calendar $r15, $r25;
        android.util.AtomicFile $r22;
        long $l1;
        java.lang.StringBuilder $r26, $r29, $r31, $r32, $r34, $r36;
        boolean $z1;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.internal.app.IUsageStats$Stub: void <init>()>();

        $r5 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r5.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(-1);

        r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicInteger mLastWriteDay> = $r5;

        $r6 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r6.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(0L);

        r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicLong mLastWriteElapsedTime> = $r6;

        $r7 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r7.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicBoolean mUnforcedDiskWriteRunning> = $r7;

        $r8 = new android.util.ArrayMap;

        specialinvoke $r8.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats> = $r8;

        $r9 = new android.util.ArrayMap;

        specialinvoke $r9.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes> = $r9;

        $r10 = new java.lang.Object;

        specialinvoke $r10.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock> = $r10;

        $r11 = new java.lang.Object;

        specialinvoke $r11.<java.lang.Object: void <init>()>();

        r0.<com.android.server.am.UsageStatsService: java.lang.Object mFileLock> = $r11;

        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(r1);

        r0.<com.android.server.am.UsageStatsService: java.io.File mDir> = $r12;

        $r13 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT+0");

        $r15 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r13);

        r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal> = $r15;

        $r14 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        virtualinvoke $r14.<java.io.File: boolean mkdir()>();

        $r16 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        r2 = virtualinvoke $r16.<java.io.File: java.io.File getParentFile()>();

        r3 = virtualinvoke r2.<java.io.File: java.lang.String[] list()>();

        if r3 == null goto label2;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        $r30 = virtualinvoke $r27.<java.io.File: java.lang.String getName()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        r4 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = lengthof r3;

     label1:
        if i0 <= 0 goto label2;

        i0 = i0 + -1;

        $r33 = r3[i0];

        $z1 = virtualinvoke $r33.<java.lang.String: boolean startsWith(java.lang.String)>(r4);

        if $z1 == 0 goto label1;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting old usage file: ");

        $r37 = r3[i0];

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStats", $r35);

        $r39 = new java.io.File;

        $r38 = r3[i0];

        specialinvoke $r39.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r38);

        virtualinvoke $r39.<java.io.File: boolean delete()>();

        goto label1;

     label2:
        $r18 = specialinvoke r0.<com.android.server.am.UsageStatsService: java.lang.String getCurrentDateStr(java.lang.String)>("usage-");

        r0.<com.android.server.am.UsageStatsService: java.lang.String mFileLeaf> = $r18;

        $r17 = new java.io.File;

        $r19 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        $r20 = r0.<com.android.server.am.UsageStatsService: java.lang.String mFileLeaf>;

        specialinvoke $r17.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, $r20);

        r0.<com.android.server.am.UsageStatsService: java.io.File mFile> = $r17;

        $r22 = new android.util.AtomicFile;

        $r21 = new java.io.File;

        $r24 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>($r24, "usage-history.xml");

        specialinvoke $r22.<android.util.AtomicFile: void <init>(java.io.File)>($r21);

        r0.<com.android.server.am.UsageStatsService: android.util.AtomicFile mHistoryFile> = $r22;

        specialinvoke r0.<com.android.server.am.UsageStatsService: void readStatsFromFile()>();

        specialinvoke r0.<com.android.server.am.UsageStatsService: void readHistoryStatsFromFile()>();

        $r23 = r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicLong mLastWriteElapsedTime>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r23.<java.util.concurrent.atomic.AtomicLong: void set(long)>($l1);

        $r28 = r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicInteger mLastWriteDay>;

        $r25 = r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal>;

        $i2 = virtualinvoke $r25.<java.util.Calendar: int get(int)>(6);

        virtualinvoke $r28.<java.util.concurrent.atomic.AtomicInteger: void set(int)>($i2);

        return;
    }

    static int[] access$000()
    {
        int[] $r0;

        $r0 = <com.android.server.am.UsageStatsService: int[] LAUNCH_TIME_BINS>;

        return $r0;
    }

    static void access$100(com.android.server.am.UsageStatsService, boolean, boolean)
    {
        com.android.server.am.UsageStatsService r0;
        boolean z0, z1;

        r0 := @parameter0: com.android.server.am.UsageStatsService;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.am.UsageStatsService: void writeStatsToFile(boolean,boolean)>(z0, z1);

        return;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$200(com.android.server.am.UsageStatsService)
    {
        com.android.server.am.UsageStatsService r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.server.am.UsageStatsService;

        $r1 = r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicBoolean mUnforcedDiskWriteRunning>;

        return $r1;
    }

    static android.util.ArrayMap access$300(com.android.server.am.UsageStatsService)
    {
        com.android.server.am.UsageStatsService r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: com.android.server.am.UsageStatsService;

        $r1 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        return $r1;
    }

    private void checkFileLimitFLOCK()
    {
        com.android.server.am.UsageStatsService r0;
        java.util.ArrayList r1;
        int i0, i1, i2;
        java.lang.String r2, $r10;
        java.io.File r3, $r5, $r6;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 = specialinvoke r0.<com.android.server.am.UsageStatsService: java.util.ArrayList getUsageStatsFileListFLOCK()>();

        if r1 != null goto label2;

     label1:
        return;

     label2:
        i0 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i0 <= 5 goto label1;

        staticinvoke <java.util.Collections: void sort(java.util.List)>(r1);

        i1 = i0 - 5;

        i2 = 0;

     label3:
        if i2 >= i1 goto label1;

        $r4 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (java.lang.String) $r4;

        $r5 = new java.io.File;

        $r6 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, r2);

        r3 = $r5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting usage file : ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStats", $r10);

        virtualinvoke r3.<java.io.File: boolean delete()>();

        i2 = i2 + 1;

        goto label3;
    }

    private void collectDumpInfoFLOCK(java.io.PrintWriter, boolean, boolean, java.util.HashSet)
    {
        com.android.server.am.UsageStatsService r0;
        java.io.PrintWriter r1;
        boolean z0, z1, $z2, $z4;
        java.util.HashSet r2;
        java.util.ArrayList r3;
        java.util.Iterator r4;
        java.lang.String r5, r7, $r12, $r15, $r24, $r29;
        java.io.File r6, $r10, $r13;
        java.io.IOException r8, $r16;
        java.io.FileNotFoundException r9, $r22;
        java.lang.Object $r11;
        int $i0, $i1;
        android.os.Parcel $r14;
        char $c2, $c3;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r21, $r23, $r25, $r26, $r27, $r28;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r2 := @parameter3: java.util.HashSet;

        r3 = specialinvoke r0.<com.android.server.am.UsageStatsService: java.util.ArrayList getUsageStatsFileListFLOCK()>();

        if r3 != null goto label02;

     label01:
        return;

     label02:
        staticinvoke <java.util.Collections: void sort(java.util.List)>(r3);

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label01;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r11;

        if z1 == 0 goto label04;

        $r15 = r0.<com.android.server.am.UsageStatsService: java.lang.String mFileLeaf>;

        $z4 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r15);

        if $z4 != 0 goto label03;

     label04:
        $r10 = new java.io.File;

        $r13 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, r5);

        r6 = $r10;

        $r12 = "usage-";

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        r7 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i0);

        $i1 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i1 <= 0 goto label05;

        $c2 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0);

        if $c2 <= 48 goto label03;

        $c3 = virtualinvoke r7.<java.lang.String: char charAt(int)>(0);

        if $c3 >= 57 goto label03;

     label05:
        $r14 = specialinvoke r0.<com.android.server.am.UsageStatsService: android.os.Parcel getParcelForFile(java.io.File)>(r6);

        specialinvoke r0.<com.android.server.am.UsageStatsService: void collectDumpInfoFromParcelFLOCK(android.os.Parcel,java.io.PrintWriter,java.lang.String,boolean,java.util.HashSet)>($r14, r1, r7, z0, r2);

     label06:
        if z1 == 0 goto label03;

     label07:
        virtualinvoke r6.<java.io.File: boolean delete()>();

     label08:
        goto label03;

     label09:
        $r22 := @caughtexception;

        r9 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed with ");

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when collecting dump info from file : ");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", $r29);

        return;

     label10:
        $r16 := @caughtexception;

        r8 = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed with ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" when collecting dump info from file : ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", $r24);

        goto label03;

        catch java.io.FileNotFoundException from label05 to label06 with label09;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.FileNotFoundException from label07 to label08 with label09;
        catch java.io.IOException from label07 to label08 with label10;
    }

    private void collectDumpInfoFromParcelFLOCK(android.os.Parcel, java.io.PrintWriter, java.lang.String, boolean, java.util.HashSet)
    {
        com.android.server.am.UsageStatsService r0;
        android.os.Parcel r1;
        java.io.PrintWriter r2;
        java.lang.String r3, r6, $r17, $r26, $r35, $r64, $r86, $r101, $r112;
        boolean z0, z1, $z2;
        java.util.HashSet r4;
        java.lang.StringBuilder r5, $r11;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i32, $i33;
        com.android.server.am.UsageStatsService$PkgUsageStatsExtended r7, $r14;
        com.android.server.am.UsageStatsService$TimeStats r8, r9, r10, r12;
        long $l16, $l30;
        android.util.ArrayMap $r25, $r27, $r29, $r33, $r50, $r66, $r83, $r84, $r88, $r95, $r99, $r106;
        int[] $r30, $r39, $r44, $r51, $r53, $r54, $r57, $r63, $r73, $r76, $r77, $r82, $r103, $r115;
        java.lang.Object $r32, $r36, $r49, $r67, $r85, $r98, $r102, $r109;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r4 := @parameter4: java.util.HashSet;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>(512);

        r5 = $r11;

        if z0 == 0 goto label03;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("D:");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(4);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label01:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i15 == 1008 goto label04;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (old data version)");

        $r112 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r112);

     label02:
        return;

     label03:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Date: ");

        goto label01;

     label04:
        $r17 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r17);

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

     label05:
        if i0 <= 0 goto label02;

        i0 = i0 + -1;

        r6 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        if r6 == null goto label02;

        virtualinvoke r5.<java.lang.StringBuilder: void setLength(int)>(0);

        $r14 = new com.android.server.am.UsageStatsService$PkgUsageStatsExtended;

        specialinvoke $r14.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void <init>(com.android.server.am.UsageStatsService,android.os.Parcel)>(r0, r1);

        r7 = $r14;

        if r4 == null goto label07;

        $z2 = virtualinvoke r4.<java.util.HashSet: boolean contains(java.lang.Object)>(r6);

        if $z2 != 0 goto label07;

     label06:
        $r26 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void write(java.lang.String)>($r26);

        goto label05;

     label07:
        if z0 == 0 goto label15;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P:");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i29 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: int mLaunchCount>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i29);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l30 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: long mUsageTime>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l30);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r84 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mLaunchTimes>;

        i9 = virtualinvoke $r84.<android.util.ArrayMap: int size()>();

        i10 = 0;

     label08:
        if i10 >= i9 goto label11;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A:");

        $r99 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mLaunchTimes>;

        $r102 = virtualinvoke $r99.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i10);

        $r101 = (java.lang.String) $r102;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        $r95 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mLaunchTimes>;

        $r98 = virtualinvoke $r95.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i10);

        r12 = (com.android.server.am.UsageStatsService$TimeStats) $r98;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $i33 = r12.<com.android.server.am.UsageStatsService$TimeStats: int count>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        i14 = 0;

     label09:
        if i14 >= 10 goto label10;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r115 = r12.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i32 = $r115[i14];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i32);

        i14 = i14 + 1;

        goto label09;

     label10:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i10 = i10 + 1;

        goto label08;

     label11:
        $r83 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mFullyDrawnTimes>;

        i12 = virtualinvoke $r83.<android.util.ArrayMap: int size()>();

        i13 = 0;

     label12:
        if i13 >= i12 goto label06;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A:");

        $r88 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mFullyDrawnTimes>;

        $r85 = virtualinvoke $r88.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i13);

        $r86 = (java.lang.String) $r85;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r106 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mFullyDrawnTimes>;

        $r109 = virtualinvoke $r106.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i13);

        r10 = (com.android.server.am.UsageStatsService$TimeStats) $r109;

        i11 = 0;

     label13:
        if i11 >= 10 goto label14;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r103 = r10.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i31 = $r103[i11];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        i11 = i11 + 1;

        goto label13;

     label14:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i13 = i13 + 1;

        goto label12;

     label15:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i17 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: int mLaunchCount>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" times, ");

        $l16 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: long mUsageTime>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r29 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mLaunchTimes>;

        i2 = virtualinvoke $r29.<android.util.ArrayMap: int size()>();

        i1 = 0;

     label16:
        if i1 >= i2 goto label21;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r50 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mLaunchTimes>;

        $r49 = virtualinvoke $r50.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r64 = (java.lang.String) $r49;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mLaunchTimes>;

        $r67 = virtualinvoke $r66.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r9 = (com.android.server.am.UsageStatsService$TimeStats) $r67;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i24 = r9.<com.android.server.am.UsageStatsService$TimeStats: int count>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" starts");

        i8 = 0;

        i7 = 0;

     label17:
        if i7 >= 9 goto label19;

        $r77 = r9.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i27 = $r77[i7];

        if $i27 == 0 goto label18;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r73 = <com.android.server.am.UsageStatsService: int[] LAUNCH_TIME_BINS>;

        $i25 = $r73[i7];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms=");

        $r76 = r9.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i26 = $r76[i7];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i26);

     label18:
        $r82 = <com.android.server.am.UsageStatsService: int[] LAUNCH_TIME_BINS>;

        i8 = $r82[i7];

        i7 = i7 + 1;

        goto label17;

     label19:
        $r57 = r9.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i23 = $r57[9];

        if $i23 == 0 goto label20;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">=");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms=");

        $r63 = r9.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i28 = $r63[9];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

     label20:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i1 = i1 + 1;

        goto label16;

     label21:
        $r27 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mFullyDrawnTimes>;

        i4 = virtualinvoke $r27.<android.util.ArrayMap: int size()>();

        i3 = 0;

     label22:
        if i3 >= i4 goto label06;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        $r25 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mFullyDrawnTimes>;

        $r36 = virtualinvoke $r25.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        $r35 = (java.lang.String) $r36;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: android.util.ArrayMap mFullyDrawnTimes>;

        $r32 = virtualinvoke $r33.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        r8 = (com.android.server.am.UsageStatsService$TimeStats) $r32;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": fully drawn ");

        z1 = 0;

        i5 = 0;

        i6 = 0;

     label23:
        if i6 >= 9 goto label27;

        $r51 = r8.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i21 = $r51[i6];

        if $i21 == 0 goto label25;

        if z1 == 0 goto label26;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label24:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r54 = <com.android.server.am.UsageStatsService: int[] LAUNCH_TIME_BINS>;

        $i22 = $r54[i6];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms=");

        $r44 = r8.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i20 = $r44[i6];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

     label25:
        $r53 = <com.android.server.am.UsageStatsService: int[] LAUNCH_TIME_BINS>;

        i5 = $r53[i6];

        i6 = i6 + 1;

        goto label23;

     label26:
        z1 = 1;

        goto label24;

     label27:
        $r30 = r8.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i18 = $r30[9];

        if $i18 == 0 goto label29;

        if z1 == 0 goto label28;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label28:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">=");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms=");

        $r39 = r8.<com.android.server.am.UsageStatsService$TimeStats: int[] times>;

        $i19 = $r39[9];

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

     label29:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i3 = i3 + 1;

        goto label22;
    }

    private void filterHistoryStats()
    {
        com.android.server.am.UsageStatsService r0;
        java.lang.Object r1, $r8;
        java.lang.Throwable r2, $r10;
        android.content.pm.IPackageManager r3;
        int i0, $i1, $i2;
        java.lang.String r4;
        android.util.ArrayMap $r6, $r7, $r9;
        android.os.RemoteException $r12;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r1;

     label01:
        r3 = staticinvoke <android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>();

     label02:
        i0 = 0;

     label03:
        $r6 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $i1 = virtualinvoke $r6.<android.util.ArrayMap: int size()>();

        if i0 >= $i1 goto label07;

        $r7 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $r8 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i0);

        r4 = (java.lang.String) $r8;

     label04:
        $i2 = interfaceinvoke r3.<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>(r4, 0);

        if $i2 >= 0 goto label06;

        $r9 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i0);

     label05:
        i0 = i0 + -1;

     label06:
        i0 = i0 + 1;

        goto label03;

     label07:
        exitmonitor r1;

     label08:
        return;

     label09:
        $r10 := @caughtexception;

        r2 = $r10;

     label10:
        exitmonitor r1;

     label11:
        throw r2;

     label12:
        $r12 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch android.os.RemoteException from label04 to label05 with label12;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private java.lang.String getCurrentDateStr(java.lang.String)
    {
        com.android.server.am.UsageStatsService r0;
        java.lang.String r1, $r14;
        java.lang.StringBuilder r2, $r5;
        java.util.Calendar r3, $r6, $r7, $r9, $r11;
        java.lang.Throwable r4, $r17;
        int i0, i1, $i3, $i4, $i5;
        long $l2;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        r3 = r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal>;

        entermonitor r3;

     label01:
        $r6 = r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r6.<java.util.Calendar: void setTimeInMillis(long)>($l2);

     label02:
        if r1 == null goto label04;

     label03:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label04:
        $r7 = r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal>;

        $i3 = virtualinvoke $r7.<java.util.Calendar: int get(int)>(1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal>;

        $i4 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(2);

        $i5 = 0 + $i4;

        i0 = 1 + $i5;

     label05:
        if i0 >= 10 goto label07;

     label06:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

     label07:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal>;

        i1 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(5);

     label08:
        if i1 >= 10 goto label10;

     label09:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

     label10:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        exitmonitor r3;

     label11:
        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;

     label12:
        $r17 := @caughtexception;

        r4 = $r17;

     label13:
        exitmonitor r3;

     label14:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    private android.os.Parcel getParcelForFile(java.io.File) throws java.io.IOException
    {
        com.android.server.am.UsageStatsService r0;
        java.io.File r1;
        java.io.FileInputStream r2, $r5;
        byte[] r3;
        android.os.Parcel r4;
        int $i0;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: java.io.File;

        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        r2 = $r5;

        r3 = staticinvoke <com.android.server.am.UsageStatsService: byte[] readFully(java.io.FileInputStream)>(r2);

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = lengthof r3;

        virtualinvoke r4.<android.os.Parcel: void unmarshall(byte[],int,int)>(r3, 0, $i0);

        virtualinvoke r4.<android.os.Parcel: void setDataPosition(int)>(0);

        virtualinvoke r2.<java.io.FileInputStream: void close()>();

        return r4;
    }

    public static com.android.internal.app.IUsageStats getService()
    {
        com.android.internal.app.IUsageStats $r0, $r2, $r3, $r4;
        android.os.IBinder $r1;

        $r0 = <com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats sService>;

        if $r0 == null goto label1;

        $r4 = <com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats sService>;

        return $r4;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("usagestats");

        $r2 = staticinvoke <com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats asInterface(android.os.IBinder)>($r1);

        <com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats sService> = $r2;

        $r3 = <com.android.server.am.UsageStatsService: com.android.internal.app.IUsageStats sService>;

        return $r3;
    }

    private java.util.ArrayList getUsageStatsFileListFLOCK()
    {
        com.android.server.am.UsageStatsService r0;
        java.lang.String[] r1;
        java.util.ArrayList r2, $r5;
        int i0, i1;
        java.lang.String r3;
        java.io.File $r4, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.server.am.UsageStatsService;

        $r4 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        r1 = virtualinvoke $r4.<java.io.File: java.lang.String[] list()>();

        if r1 != null goto label2;

        r2 = null;

     label1:
        return r2;

     label2:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        i0 = lengthof r1;

        i1 = 0;

     label3:
        if i1 >= i0 goto label1;

        r3 = r1[i1];

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("usage-");

        if $z0 != 0 goto label5;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $z1 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>(".bak");

        if $z1 == 0 goto label6;

        $r6 = new java.io.File;

        $r7 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r3);

        virtualinvoke $r6.<java.io.File: boolean delete()>();

        goto label4;

     label6:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        goto label4;
    }

    static byte[] readFully(java.io.FileInputStream) throws java.io.IOException
    {
        java.io.FileInputStream r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        byte[] r1, r2;

        r0 := @parameter0: java.io.FileInputStream;

        i0 = 0;

        $i3 = virtualinvoke r0.<java.io.FileInputStream: int available()>();

        r1 = newarray (byte)[$i3];

     label1:
        $i4 = lengthof r1;

        $i5 = $i4 - i0;

        i1 = virtualinvoke r0.<java.io.FileInputStream: int read(byte[],int,int)>(r1, i0, $i5);

        if i1 > 0 goto label2;

        return r1;

     label2:
        i0 = i0 + i1;

        i2 = virtualinvoke r0.<java.io.FileInputStream: int available()>();

        $i6 = lengthof r1;

        $i7 = $i6 - i0;

        if i2 <= $i7 goto label1;

        $i8 = i0 + i2;

        r2 = newarray (byte)[$i8];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i0);

        r1 = r2;

        goto label1;
    }

    private void readHistoryStatsFLOCK(android.util.AtomicFile)
    {
        com.android.server.am.UsageStatsService r0;
        android.util.AtomicFile r1, $r20;
        java.io.FileInputStream r2;
        java.lang.Throwable r3, r17, $r38, $r49;
        java.io.IOException r5, $r36, $r37, $r39, $r46, $r47;
        org.xmlpull.v1.XmlPullParserException r7, $r35;
        org.xmlpull.v1.XmlPullParser r9;
        int i0, i1, i2;
        java.lang.String r10, r11, r12, r13, r16, $r21, $r22, $r23, $r24, $r25, $r26, $r42, $r45;
        long l3;
        java.lang.Object r18, $r30;
        android.util.ArrayMap r19, $r27, $r32, $r33;
        boolean z0, $z1, $z2, $z3;
        java.lang.Long $r29;
        java.lang.StringBuilder $r34, $r40, $r41, $r43, $r44, $r48;
        java.lang.NumberFormatException $r50;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.util.AtomicFile;

        r2 = null;

     label01:
        $r20 = r0.<com.android.server.am.UsageStatsService: android.util.AtomicFile mHistoryFile>;

        r2 = virtualinvoke $r20.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

        r9 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r2, null);

        i0 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label02:
        if i0 == 2 goto label05;

     label03:
        i0 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label04:
        goto label02;

     label05:
        $r21 = "usage-history";

        $r22 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z1 == 0 goto label14;

     label06:
        r10 = null;

     label07:
        i1 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int next()>();

     label08:
        if i1 != 2 goto label31;

     label09:
        r11 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        i2 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        $r25 = "pkg";

        $z3 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z3 == 0 goto label17;

     label10:
        if i2 != 2 goto label17;

     label11:
        r12 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

     label12:
        r10 = r12;

     label13:
        if i1 != 1 goto label07;

     label14:
        if r2 == null goto label16;

     label15:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label16:
        return;

     label17:
        $r26 = "comp";

        $z2 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z2 == 0 goto label13;

     label18:
        if i2 != 3 goto label13;

        if r10 == null goto label13;

     label19:
        r13 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        r16 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "lrt");

     label20:
        if r13 == null goto label13;

        if r16 == null goto label13;

     label21:
        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r16);

        r18 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r18;

     label22:
        $r27 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $r30 = virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r10);

        r19 = (android.util.ArrayMap) $r30;

     label23:
        if r19 != null goto label25;

     label24:
        $r33 = new android.util.ArrayMap;

        specialinvoke $r33.<android.util.ArrayMap: void <init>()>();

        r19 = $r33;

        $r32 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        virtualinvoke $r32.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r19);

     label25:
        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        virtualinvoke r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r29);

        exitmonitor r18;

     label26:
        goto label13;

     label27:
        $r49 := @caughtexception;

        r17 = $r49;

     label28:
        exitmonitor r18;

     label29:
        throw r17;

     label30:
        $r50 := @caughtexception;

        goto label13;

     label31:
        if i1 != 3 goto label13;

     label32:
        $r23 = "pkg";

        $r24 = interfaceinvoke r9.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        z0 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

     label33:
        if z0 == 0 goto label13;

        r10 = null;

        goto label13;

     label34:
        $r35 := @caughtexception;

        r7 = $r35;

     label35:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading history stats: ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", $r42);

     label36:
        if r2 == null goto label16;

     label37:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label38:
        return;

     label39:
        $r39 := @caughtexception;

        return;

     label40:
        $r47 := @caughtexception;

        r5 = $r47;

     label41:
        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error reading history stats: ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", $r45);

     label42:
        if r2 == null goto label16;

     label43:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label44:
        return;

     label45:
        $r46 := @caughtexception;

        return;

     label46:
        $r38 := @caughtexception;

        r3 = $r38;

        if r2 == null goto label48;

     label47:
        virtualinvoke r2.<java.io.FileInputStream: void close()>();

     label48:
        throw r3;

     label49:
        $r37 := @caughtexception;

        return;

     label50:
        $r36 := @caughtexception;

        goto label48;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label02 with label34;
        catch java.io.IOException from label01 to label02 with label40;
        catch java.lang.Throwable from label01 to label02 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label34;
        catch java.io.IOException from label03 to label04 with label40;
        catch java.lang.Throwable from label03 to label04 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label34;
        catch java.io.IOException from label05 to label06 with label40;
        catch java.lang.Throwable from label05 to label06 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label34;
        catch java.io.IOException from label07 to label08 with label40;
        catch java.lang.Throwable from label07 to label08 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label10 with label34;
        catch java.io.IOException from label09 to label10 with label40;
        catch java.lang.Throwable from label09 to label10 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label11 to label12 with label34;
        catch java.io.IOException from label11 to label12 with label40;
        catch java.lang.Throwable from label11 to label12 with label46;
        catch java.io.IOException from label15 to label16 with label49;
        catch org.xmlpull.v1.XmlPullParserException from label17 to label18 with label34;
        catch java.io.IOException from label17 to label18 with label40;
        catch java.lang.Throwable from label17 to label18 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label19 to label20 with label34;
        catch java.io.IOException from label19 to label20 with label40;
        catch java.lang.Throwable from label19 to label20 with label46;
        catch java.lang.NumberFormatException from label21 to label22 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label21 to label22 with label34;
        catch java.io.IOException from label21 to label22 with label40;
        catch java.lang.Throwable from label21 to label22 with label46;
        catch java.lang.Throwable from label22 to label23 with label27;
        catch java.lang.Throwable from label24 to label25 with label27;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
        catch java.lang.NumberFormatException from label29 to label30 with label30;
        catch org.xmlpull.v1.XmlPullParserException from label29 to label30 with label34;
        catch java.io.IOException from label29 to label30 with label40;
        catch java.lang.Throwable from label29 to label30 with label46;
        catch org.xmlpull.v1.XmlPullParserException from label32 to label33 with label34;
        catch java.io.IOException from label32 to label33 with label40;
        catch java.lang.Throwable from label32 to label33 with label46;
        catch java.lang.Throwable from label35 to label36 with label46;
        catch java.io.IOException from label37 to label38 with label39;
        catch java.lang.Throwable from label41 to label42 with label46;
        catch java.io.IOException from label43 to label44 with label45;
        catch java.io.IOException from label47 to label48 with label50;
    }

    private void readHistoryStatsFromFile()
    {
        com.android.server.am.UsageStatsService r0;
        java.lang.Object r1;
        java.lang.Throwable r2, $r6;
        android.util.AtomicFile $r3, $r5;
        java.io.File $r4;
        boolean $z0;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mFileLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.am.UsageStatsService: android.util.AtomicFile mHistoryFile>;

        $r4 = virtualinvoke $r3.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<com.android.server.am.UsageStatsService: android.util.AtomicFile mHistoryFile>;

        specialinvoke r0.<com.android.server.am.UsageStatsService: void readHistoryStatsFLOCK(android.util.AtomicFile)>($r5);

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void readStatsFLOCK(java.io.File) throws java.io.IOException
    {
        com.android.server.am.UsageStatsService r0;
        java.io.File r1;
        android.os.Parcel r2;
        int i0, $i1;
        java.lang.String r3;
        com.android.server.am.UsageStatsService$PkgUsageStatsExtended r4, $r7;
        java.lang.Object r5;
        java.lang.Throwable r6, $r10;
        android.util.ArrayMap $r8;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: java.io.File;

        r2 = specialinvoke r0.<com.android.server.am.UsageStatsService: android.os.Parcel getParcelForFile(java.io.File)>(r1);

        $i1 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if $i1 == 1008 goto label2;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", "Usage stats version changed; dropping");

     label1:
        return;

     label2:
        i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

     label3:
        if i0 <= 0 goto label1;

        i0 = i0 + -1;

        r3 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

        if r3 == null goto label1;

        $r7 = new com.android.server.am.UsageStatsService$PkgUsageStatsExtended;

        specialinvoke $r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void <init>(com.android.server.am.UsageStatsService,android.os.Parcel)>(r0, r2);

        r4 = $r7;

        r5 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r5;

     label4:
        $r8 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        virtualinvoke $r8.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        exitmonitor r5;

     label5:
        goto label3;

     label6:
        $r10 := @caughtexception;

        r6 = $r10;

     label7:
        exitmonitor r5;

     label8:
        throw r6;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    private void readStatsFromFile()
    {
        com.android.server.am.UsageStatsService r0;
        java.io.File r1;
        java.lang.Object r2;
        java.lang.Throwable r3, $r5;
        java.io.IOException r4, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

        r2 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mFileLock>;

        entermonitor r2;

     label01:
        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label04;

        specialinvoke r0.<com.android.server.am.UsageStatsService: void readStatsFLOCK(java.io.File)>(r1);

     label02:
        exitmonitor r2;

     label03:
        return;

     label04:
        specialinvoke r0.<com.android.server.am.UsageStatsService: void checkFileLimitFLOCK()>();

        virtualinvoke r1.<java.io.File: boolean createNewFile()>();

     label05:
        goto label02;

     label06:
        $r6 := @caughtexception;

        r4 = $r6;

     label07:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error : ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reading data from file:");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", $r12);

     label08:
        goto label02;

     label09:
        $r5 := @caughtexception;

        r3 = $r5;

     label10:
        exitmonitor r2;

     label11:
        throw r3;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.io.IOException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
    }

    private static boolean scanArgs(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        java.lang.String r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label3;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = r0[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static java.lang.String scanArgsData(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        java.lang.String r1, r2, $r3;
        int i0, i1, i2;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        r2 = null;

        if r0 == null goto label2;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        r2 = null;

        if i1 >= i0 goto label2;

        $r3 = r0[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        i2 = i1 + 1;

        r2 = null;

        if i2 >= i0 goto label2;

        r2 = r0[i2];

     label2:
        return r2;

     label3:
        i1 = i1 + 1;

        goto label1;
    }

    private void writeHistoryStatsFLOCK(android.util.AtomicFile)
    {
        com.android.server.am.UsageStatsService r0;
        android.util.AtomicFile r1;
        java.io.FileOutputStream r2;
        java.io.IOException r3, $r29;
        com.android.internal.util.FastXmlSerializer r4, $r8;
        java.lang.Object r5, $r15, $r20, $r21, $r27;
        int i0, i1, $i2, $i3;
        java.lang.Throwable r6, $r30;
        android.util.ArrayMap r7, $r11, $r14, $r19;
        java.lang.Boolean $r10;
        java.lang.String $r17, $r23, $r25, $r35;
        java.lang.Long $r28;
        java.lang.StringBuilder $r32, $r33, $r34;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.util.AtomicFile;

        r2 = null;

     label01:
        r2 = virtualinvoke r1.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

        $r8 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r8.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r4 = $r8;

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r2, "utf-8");

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r10);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "usage-history");

        r5 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r5;

     label02:
        i0 = 0;

     label03:
        $r11 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $i2 = virtualinvoke $r11.<android.util.ArrayMap: int size()>();

        if i0 >= $i2 goto label09;

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pkg");

        $r14 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $r15 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i0);

        $r17 = (java.lang.String) $r15;

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r17);

        $r19 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $r20 = virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r7 = (android.util.ArrayMap) $r20;

     label04:
        i1 = 0;

     label05:
        $i3 = virtualinvoke r7.<android.util.ArrayMap: int size()>();

        if i1 >= $i3 goto label07;

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "comp");

        $r21 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r23 = (java.lang.String) $r21;

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "name", $r23);

        $r27 = virtualinvoke r7.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r28 = (java.lang.Long) $r27;

        $r25 = virtualinvoke $r28.<java.lang.Long: java.lang.String toString()>();

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "lrt", $r25);

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "comp");

     label06:
        i1 = i1 + 1;

        goto label05;

     label07:
        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label08:
        i0 = i0 + 1;

        goto label03;

     label09:
        exitmonitor r5;

     label10:
        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "usage-history");

        interfaceinvoke r4.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        virtualinvoke r1.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r2);

     label11:
        return;

     label12:
        $r30 := @caughtexception;

        r6 = $r30;

     label13:
        exitmonitor r5;

     label14:
        throw r6;

     label15:
        $r29 := @caughtexception;

        r3 = $r29;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error writing history stats");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", $r35);

        if r2 == null goto label11;

        virtualinvoke r1.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r2);

        return;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.io.IOException from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.io.IOException from label14 to label15 with label15;
    }

    private void writeStatsFLOCK(java.io.File) throws java.io.IOException
    {
        com.android.server.am.UsageStatsService r0;
        java.io.File r1;
        java.io.FileOutputStream r2, $r5;
        java.lang.Throwable r3, $r7;
        android.os.Parcel r4;
        byte[] $r6;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: java.io.File;

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r2 = $r5;

     label1:
        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        specialinvoke r0.<com.android.server.am.UsageStatsService: void writeStatsToParcelFLOCK(android.os.Parcel)>(r4);

        $r6 = virtualinvoke r4.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[])>($r6);

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<java.io.FileOutputStream: void flush()>();

     label2:
        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

        return;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.os.FileUtils: boolean sync(java.io.FileOutputStream)>(r2);

        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void writeStatsToFile(boolean, boolean)
    {
        com.android.server.am.UsageStatsService r0;
        boolean z0, z1, z2, z3, $z6, $z7, $z8;
        java.util.Calendar r1, $r10, $r11;
        java.lang.Throwable r2, r4, r9, $r37, $r44, $r45;
        int i0, $i3;
        long l1, $l2, $l5, $l6;
        java.lang.Object r3;
        java.io.File r5, r6, $r15, $r20, $r21, $r22, $r24, $r28, $r29, $r31, $r38, $r39, $r41;
        android.util.ArrayMap r8, $r17;
        java.util.concurrent.atomic.AtomicInteger $r12, $r18;
        java.lang.String $r13, $r19, $r27, $r30, $r43;
        android.util.AtomicFile $r14;
        java.util.concurrent.atomic.AtomicLong $r16, $r32;
        java.lang.StringBuilder $r23, $r25, $r26, $r36, $r40, $r42;
        com.android.server.am.UsageStatsService$1 $r33;
        java.util.concurrent.atomic.AtomicBoolean $r34;
        java.io.IOException $r35;
        byte $b7;

        r0 := @this: com.android.server.am.UsageStatsService;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r1 = r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal>;

        entermonitor r1;

     label01:
        $r10 = r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r10.<java.util.Calendar: void setTimeInMillis(long)>($l2);

        $r11 = r0.<com.android.server.am.UsageStatsService: java.util.Calendar mCal>;

        i0 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(6);

        exitmonitor r1;

     label02:
        $r12 = r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicInteger mLastWriteDay>;

        $i3 = virtualinvoke $r12.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 == $i3 goto label08;

        z2 = 1;

     label03:
        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        if z0 != 0 goto label10;

        if z2 != 0 goto label09;

        $r32 = r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicLong mLastWriteElapsedTime>;

        $l5 = virtualinvoke $r32.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l6 = l1 - $l5;

        $b7 = $l6 cmp 1800000L;

        if $b7 >= 0 goto label09;

     label04:
        return;

     label05:
        $r37 := @caughtexception;

        r2 = $r37;

     label06:
        exitmonitor r1;

     label07:
        throw r2;

     label08:
        z2 = 0;

        goto label03;

     label09:
        $r34 = r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicBoolean mUnforcedDiskWriteRunning>;

        $z8 = virtualinvoke $r34.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z8 == 0 goto label04;

        $r33 = new com.android.server.am.UsageStatsService$1;

        specialinvoke $r33.<com.android.server.am.UsageStatsService$1: void <init>(com.android.server.am.UsageStatsService,java.lang.String)>(r0, "UsageStatsService_DiskWriter");

        virtualinvoke $r33.<com.android.server.am.UsageStatsService$1: void start()>();

        return;

     label10:
        r3 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mFileLock>;

        entermonitor r3;

     label11:
        $r13 = specialinvoke r0.<com.android.server.am.UsageStatsService: java.lang.String getCurrentDateStr(java.lang.String)>("usage-");

        r0.<com.android.server.am.UsageStatsService: java.lang.String mFileLeaf> = $r13;

        r5 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

     label12:
        r6 = null;

        if r5 == null goto label21;

     label13:
        $r24 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

        z3 = virtualinvoke $r24.<java.io.File: boolean exists()>();

     label14:
        r6 = null;

        if z3 == 0 goto label21;

     label15:
        $r22 = new java.io.File;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r28 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

        $r27 = virtualinvoke $r28.<java.io.File: java.lang.String getPath()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bak");

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>($r30);

        r6 = $r22;

        $z6 = virtualinvoke r6.<java.io.File: boolean exists()>();

        if $z6 != 0 goto label20;

        $r31 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

        $z7 = virtualinvoke $r31.<java.io.File: boolean renameTo(java.io.File)>(r6);

        if $z7 != 0 goto label21;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", "Failed to persist new stats");

        exitmonitor r3;

     label16:
        return;

     label17:
        $r45 := @caughtexception;

        r4 = $r45;

     label18:
        exitmonitor r3;

     label19:
        throw r4;

     label20:
        $r29 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

        virtualinvoke $r29.<java.io.File: boolean delete()>();

     label21:
        $r15 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

        specialinvoke r0.<com.android.server.am.UsageStatsService: void writeStatsFLOCK(java.io.File)>($r15);

        $r16 = r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicLong mLastWriteElapsedTime>;

        virtualinvoke $r16.<java.util.concurrent.atomic.AtomicLong: void set(long)>(l1);

     label22:
        if z2 == 0 goto label40;

     label23:
        $r18 = r0.<com.android.server.am.UsageStatsService: java.util.concurrent.atomic.AtomicInteger mLastWriteDay>;

        virtualinvoke $r18.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(i0);

        r8 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        entermonitor r8;

     label24:
        $r17 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        virtualinvoke $r17.<android.util.ArrayMap: void clear()>();

        exitmonitor r8;

     label25:
        $r21 = new java.io.File;

        $r20 = r0.<com.android.server.am.UsageStatsService: java.io.File mDir>;

        $r19 = r0.<com.android.server.am.UsageStatsService: java.lang.String mFileLeaf>;

        specialinvoke $r21.<java.io.File: void <init>(java.io.File,java.lang.String)>($r20, $r19);

        r0.<com.android.server.am.UsageStatsService: java.io.File mFile> = $r21;

        specialinvoke r0.<com.android.server.am.UsageStatsService: void checkFileLimitFLOCK()>();

     label26:
        goto label40;

     label27:
        $r14 = r0.<com.android.server.am.UsageStatsService: android.util.AtomicFile mHistoryFile>;

        specialinvoke r0.<com.android.server.am.UsageStatsService: void writeHistoryStatsFLOCK(android.util.AtomicFile)>($r14);

     label28:
        if r6 == null goto label30;

     label29:
        virtualinvoke r6.<java.io.File: boolean delete()>();

     label30:
        exitmonitor r3;

     label31:
        return;

     label32:
        $r44 := @caughtexception;

        r9 = $r44;

     label33:
        exitmonitor r8;

     label34:
        throw r9;

     label35:
        $r35 := @caughtexception;

     label36:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed writing stats to file:");

        $r41 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", $r43);

     label37:
        if r6 == null goto label30;

     label38:
        $r38 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

        virtualinvoke $r38.<java.io.File: boolean delete()>();

        $r39 = r0.<com.android.server.am.UsageStatsService: java.io.File mFile>;

        virtualinvoke r6.<java.io.File: boolean renameTo(java.io.File)>($r39);

     label39:
        goto label30;

     label40:
        if z2 != 0 goto label27;

        if z1 == 0 goto label28;

        goto label27;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label06 to label07 with label05;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch java.lang.Throwable from label20 to label21 with label17;
        catch java.io.IOException from label21 to label22 with label35;
        catch java.lang.Throwable from label21 to label22 with label17;
        catch java.io.IOException from label23 to label24 with label35;
        catch java.lang.Throwable from label23 to label24 with label17;
        catch java.lang.Throwable from label24 to label25 with label32;
        catch java.io.IOException from label25 to label26 with label35;
        catch java.lang.Throwable from label25 to label26 with label17;
        catch java.io.IOException from label27 to label28 with label35;
        catch java.lang.Throwable from label27 to label28 with label17;
        catch java.io.IOException from label29 to label30 with label35;
        catch java.lang.Throwable from label29 to label30 with label17;
        catch java.lang.Throwable from label30 to label31 with label17;
        catch java.lang.Throwable from label33 to label34 with label32;
        catch java.io.IOException from label34 to label35 with label35;
        catch java.lang.Throwable from label34 to label35 with label17;
        catch java.lang.Throwable from label36 to label37 with label17;
        catch java.lang.Throwable from label38 to label39 with label17;
    }

    private void writeStatsToParcelFLOCK(android.os.Parcel)
    {
        com.android.server.am.UsageStatsService r0;
        android.os.Parcel r1;
        java.lang.Object r2, $r9, $r10;
        java.lang.Throwable r3, $r12;
        java.util.Set r4;
        java.util.Iterator r5;
        java.lang.String r6;
        com.android.server.am.UsageStatsService$PkgUsageStatsExtended r7;
        android.util.ArrayMap $r8, $r11;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.os.Parcel;

        r2 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1008);

        $r8 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        r4 = virtualinvoke $r8.<android.util.ArrayMap: java.util.Set keySet()>();

        $i0 = interfaceinvoke r4.<java.util.Set: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i0);

        r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r9;

        $r11 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        $r10 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (com.android.server.am.UsageStatsService$PkgUsageStatsExtended) $r10;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r6);

        virtualinvoke r7.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void writeToParcel(android.os.Parcel)>(r1);

     label3:
        goto label2;

     label4:
        $r12 := @caughtexception;

        r3 = $r12;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

     label7:
        exitmonitor r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.am.UsageStatsService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3, r8;
        boolean z0, z1, z2, z3, $z5, $z6;
        java.lang.String r4, r10, $r11, $r20;
        java.util.HashSet r5, $r12;
        java.lang.Object r6;
        java.lang.Throwable r7, $r21;
        int i0, i1, $i2, $i4, $i5;
        android.content.Context $r9;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r9 = r0.<com.android.server.am.UsageStatsService: android.content.Context mContext>;

        $i2 = virtualinvoke $r9.<android.content.Context: int checkCallingPermission(java.lang.String)>("android.permission.DUMP");

        if $i2 == 0 goto label01;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump UsageStats from from pid=");

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without permission ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("android.permission.DUMP");

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20);

        return;

     label01:
        z0 = staticinvoke <com.android.server.am.UsageStatsService: boolean scanArgs(java.lang.String[],java.lang.String)>(r3, "--checkin");

        if z0 != 0 goto label02;

        $z6 = staticinvoke <com.android.server.am.UsageStatsService: boolean scanArgs(java.lang.String[],java.lang.String)>(r3, "-c");

        if $z6 == 0 goto label09;

     label02:
        z1 = 1;

     label03:
        if z0 != 0 goto label04;

        $z5 = staticinvoke <com.android.server.am.UsageStatsService: boolean scanArgs(java.lang.String[],java.lang.String)>(r3, "-d");

        if $z5 == 0 goto label10;

     label04:
        z2 = 1;

     label05:
        r4 = staticinvoke <com.android.server.am.UsageStatsService: java.lang.String scanArgsData(java.lang.String[],java.lang.String)>(r3, "--packages");

        if z2 != 0 goto label06;

        specialinvoke r0.<com.android.server.am.UsageStatsService: void writeStatsToFile(boolean,boolean)>(1, 0);

     label06:
        if r4 == null goto label11;

        $r11 = "*";

        z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        r5 = null;

        if z3 != 0 goto label12;

        r8 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r8;

        i1 = 0;

     label07:
        if i1 >= i0 goto label12;

        r10 = r8[i1];

        if r5 != null goto label08;

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        r5 = $r12;

     label08:
        virtualinvoke r5.<java.util.HashSet: boolean add(java.lang.Object)>(r10);

        i1 = i1 + 1;

        goto label07;

     label09:
        z1 = 0;

        goto label03;

     label10:
        z2 = 0;

        goto label05;

     label11:
        r5 = null;

        if z0 == 0 goto label12;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("UsageStats", "Checkin without packages");

        return;

     label12:
        r6 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mFileLock>;

        entermonitor r6;

     label13:
        specialinvoke r0.<com.android.server.am.UsageStatsService: void collectDumpInfoFLOCK(java.io.PrintWriter,boolean,boolean,java.util.HashSet)>(r2, z1, z2, r5);

        exitmonitor r6;

     label14:
        return;

     label15:
        $r21 := @caughtexception;

        r7 = $r21;

     label16:
        exitmonitor r6;

     label17:
        throw r7;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void enforceCallingPermission()
    {
        com.android.server.am.UsageStatsService r0;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r1;

        r0 := @this: com.android.server.am.UsageStatsService;

        $i0 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i1 = staticinvoke <android.os.Process: int myPid()>();

        if $i0 != $i1 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.am.UsageStatsService: android.content.Context mContext>;

        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_DEVICE_STATS", $i2, $i3, null);

        return;
    }

    public com.android.internal.os.PkgUsageStats[] getAllPkgUsageStats()
    {
        com.android.server.am.UsageStatsService r0;
        java.lang.Object r1, $r8, $r10, $r15;
        java.lang.Throwable r2, $r16;
        int i0, i1, i3;
        com.android.internal.os.PkgUsageStats[] r3;
        java.lang.String r4;
        long l2;
        com.android.server.am.UsageStatsService$PkgUsageStatsExtended r5;
        android.content.Context $r6;
        android.util.ArrayMap $r7, $r9, $r11, $r12;
        com.android.internal.os.PkgUsageStats $r13;
        java.util.Map $r14;

        r0 := @this: com.android.server.am.UsageStatsService;

        $r6 = r0.<com.android.server.am.UsageStatsService: android.content.Context mContext>;

        virtualinvoke $r6.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", null);

        r1 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r1;

     label01:
        $r7 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        i0 = virtualinvoke $r7.<android.util.ArrayMap: int size()>();

     label02:
        if i0 > 0 goto label05;

     label03:
        exitmonitor r1;

     label04:
        return null;

     label05:
        r3 = newarray (com.android.internal.os.PkgUsageStats)[i0];

     label06:
        i1 = 0;

     label07:
        if i1 >= i0 goto label15;

     label08:
        $r9 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $r8 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        r4 = (java.lang.String) $r8;

     label09:
        l2 = 0L;

     label10:
        $r11 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        $r10 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.am.UsageStatsService$PkgUsageStatsExtended) $r10;

     label11:
        i3 = 0;

        if r5 == null goto label13;

     label12:
        l2 = r5.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: long mUsageTime>;

        i3 = r5.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: int mLaunchCount>;

     label13:
        $r13 = new com.android.internal.os.PkgUsageStats;

        $r12 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $r15 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        $r14 = (java.util.Map) $r15;

        specialinvoke $r13.<com.android.internal.os.PkgUsageStats: void <init>(java.lang.String,int,long,java.util.Map)>(r4, i3, l2, $r14);

        r3[i1] = $r13;

     label14:
        i1 = i1 + 1;

        goto label07;

     label15:
        exitmonitor r1;

     label16:
        return r3;

     label17:
        $r16 := @caughtexception;

        r2 = $r16;

     label18:
        exitmonitor r1;

     label19:
        throw r2;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public com.android.internal.os.PkgUsageStats getPkgUsageStats(android.content.ComponentName)
    {
        com.android.server.am.UsageStatsService r0;
        android.content.ComponentName r1;
        java.lang.String r2;
        java.lang.Object r3, $r10, $r11;
        java.lang.Throwable r4, $r14;
        com.android.server.am.UsageStatsService$PkgUsageStatsExtended r5;
        java.util.Map r6;
        int i0;
        long l1;
        com.android.internal.os.PkgUsageStats r7, $r13;
        android.content.Context $r8;
        android.util.ArrayMap $r9, $r12;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.content.ComponentName;

        $r8 = r0.<com.android.server.am.UsageStatsService: android.content.Context mContext>;

        virtualinvoke $r8.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.PACKAGE_USAGE_STATS", null);

        if r1 == null goto label01;

        r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        if r2 != null goto label02;

     label01:
        return null;

     label02:
        r3 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r3;

     label03:
        $r9 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.android.server.am.UsageStatsService$PkgUsageStatsExtended) $r10;

        $r12 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $r11 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r6 = (java.util.Map) $r11;

     label04:
        if r5 != null goto label10;

        if r6 != null goto label10;

     label05:
        exitmonitor r3;

     label06:
        return null;

     label07:
        $r14 := @caughtexception;

        r4 = $r14;

     label08:
        exitmonitor r3;

     label09:
        throw r4;

     label10:
        if r5 == null goto label16;

     label11:
        i0 = r5.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: int mLaunchCount>;

     label12:
        if r5 == null goto label17;

     label13:
        l1 = r5.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: long mUsageTime>;

     label14:
        $r13 = new com.android.internal.os.PkgUsageStats;

        specialinvoke $r13.<com.android.internal.os.PkgUsageStats: void <init>(java.lang.String,int,long,java.util.Map)>(r2, i0, l1, r6);

        r7 = $r13;

        exitmonitor r3;

     label15:
        return r7;

     label16:
        i0 = 0;

        goto label12;

     label17:
        l1 = 0L;

        goto label14;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
        catch java.lang.Throwable from label13 to label14 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
    }

    public void monitorPackages()
    {
        com.android.server.am.UsageStatsService r0;
        com.android.server.am.UsageStatsService$2 $r1;
        android.content.Context $r2;
        com.android.internal.content.PackageMonitor $r3;

        r0 := @this: com.android.server.am.UsageStatsService;

        $r1 = new com.android.server.am.UsageStatsService$2;

        specialinvoke $r1.<com.android.server.am.UsageStatsService$2: void <init>(com.android.server.am.UsageStatsService)>(r0);

        r0.<com.android.server.am.UsageStatsService: com.android.internal.content.PackageMonitor mPackageMonitor> = $r1;

        $r3 = r0.<com.android.server.am.UsageStatsService: com.android.internal.content.PackageMonitor mPackageMonitor>;

        $r2 = r0.<com.android.server.am.UsageStatsService: android.content.Context mContext>;

        virtualinvoke $r3.<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,boolean)>($r2, null, 1);

        specialinvoke r0.<com.android.server.am.UsageStatsService: void filterHistoryStats()>();

        return;
    }

    public void noteFullyDrawnTime(android.content.ComponentName, int)
    {
        com.android.server.am.UsageStatsService r0;
        android.content.ComponentName r1;
        int i0;
        java.lang.String r2, $r8;
        java.lang.Object r3, $r7;
        java.lang.Throwable r4, $r9;
        com.android.server.am.UsageStatsService$PkgUsageStatsExtended r5;
        android.util.ArrayMap $r6;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.UsageStatsService: void enforceCallingPermission()>();

        if r1 == null goto label01;

        r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        if r2 != null goto label02;

     label01:
        return;

     label02:
        specialinvoke r0.<com.android.server.am.UsageStatsService: void writeStatsToFile(boolean,boolean)>(0, 0);

        r3 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r3;

     label03:
        $r6 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.android.server.am.UsageStatsService$PkgUsageStatsExtended) $r7;

     label04:
        if r5 == null goto label06;

     label05:
        $r8 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke r5.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addFullyDrawnTime(java.lang.String,int)>($r8, i0);

     label06:
        exitmonitor r3;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        exitmonitor r3;

     label10:
        throw r4;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void noteLaunchTime(android.content.ComponentName, int)
    {
        com.android.server.am.UsageStatsService r0;
        android.content.ComponentName r1;
        int i0;
        java.lang.String r2, $r8;
        java.lang.Object r3, $r7;
        java.lang.Throwable r4, $r9;
        com.android.server.am.UsageStatsService$PkgUsageStatsExtended r5;
        android.util.ArrayMap $r6;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.am.UsageStatsService: void enforceCallingPermission()>();

        if r1 == null goto label01;

        r2 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

        if r2 != null goto label02;

     label01:
        return;

     label02:
        specialinvoke r0.<com.android.server.am.UsageStatsService: void writeStatsToFile(boolean,boolean)>(0, 0);

        r3 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r3;

     label03:
        $r6 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.android.server.am.UsageStatsService$PkgUsageStatsExtended) $r7;

     label04:
        if r5 == null goto label06;

     label05:
        $r8 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        virtualinvoke r5.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchTime(java.lang.String,int)>($r8, i0);

     label06:
        exitmonitor r3;

     label07:
        return;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        exitmonitor r3;

     label10:
        throw r4;

        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public void notePauseComponent(android.content.ComponentName)
    {
        com.android.server.am.UsageStatsService r0;
        android.content.ComponentName r1;
        java.lang.Object r2, $r7;
        java.lang.Throwable r3, $r12;
        java.lang.String r4, $r10;
        com.android.server.am.UsageStatsService$PkgUsageStatsExtended r5;
        boolean $z0;
        android.util.ArrayMap $r6;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.content.ComponentName;

        virtualinvoke r0.<com.android.server.am.UsageStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r2;

        if r1 == null goto label03;

     label01:
        r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

     label02:
        if r4 != null goto label05;

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $z0 = r0.<com.android.server.am.UsageStatsService: boolean mIsResumed>;

        if $z0 != 0 goto label10;

        exitmonitor r2;

     label06:
        return;

     label07:
        $r12 := @caughtexception;

        r3 = $r12;

     label08:
        exitmonitor r2;

     label09:
        throw r3;

     label10:
        r0.<com.android.server.am.UsageStatsService: boolean mIsResumed> = 0;

        $r6 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.am.UsageStatsService$PkgUsageStatsExtended) $r7;

     label11:
        if r5 != null goto label14;

     label12:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No package stats for pkg:");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStats", $r10);

        exitmonitor r2;

     label13:
        return;

     label14:
        virtualinvoke r5.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void updatePause()>();

        exitmonitor r2;

     label15:
        specialinvoke r0.<com.android.server.am.UsageStatsService: void writeStatsToFile(boolean,boolean)>(0, 0);

        return;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
        catch java.lang.Throwable from label12 to label13 with label07;
        catch java.lang.Throwable from label14 to label15 with label07;
    }

    public void noteResumeComponent(android.content.ComponentName)
    {
        com.android.server.am.UsageStatsService r0;
        android.content.ComponentName r1;
        boolean z0, z1, z2, $z3, $z4;
        java.lang.Object r2, $r11, $r13, $r30;
        java.lang.Throwable r3, $r31;
        java.lang.String r4, r6, $r9, $r10, $r15, $r19, $r23, $r24, $r27, $r29;
        com.android.server.am.UsageStatsService$PkgUsageStatsExtended r5, r8, $r20;
        android.util.ArrayMap r7, $r12, $r14, $r18, $r21, $r25, $r28;
        long $l0;
        java.lang.Long $r17;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.content.ComponentName;

        z0 = 1;

        virtualinvoke r0.<com.android.server.am.UsageStatsService: void enforceCallingPermission()>();

        r2 = r0.<com.android.server.am.UsageStatsService: java.lang.Object mStatsLock>;

        entermonitor r2;

        if r1 == null goto label03;

     label01:
        r4 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getPackageName()>();

     label02:
        if r4 != null goto label05;

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $r9 = r0.<com.android.server.am.UsageStatsService: java.lang.String mLastResumedPkg>;

        z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        $z3 = r0.<com.android.server.am.UsageStatsService: boolean mIsResumed>;

        if $z3 == 0 goto label08;

        $r29 = r0.<com.android.server.am.UsageStatsService: java.lang.String mLastResumedPkg>;

        if $r29 == null goto label08;

        $r28 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        $r27 = r0.<com.android.server.am.UsageStatsService: java.lang.String mLastResumedPkg>;

        $r30 = virtualinvoke $r28.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r27);

        r8 = (com.android.server.am.UsageStatsService$PkgUsageStatsExtended) $r30;

     label06:
        if r8 == null goto label08;

     label07:
        virtualinvoke r8.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void updatePause()>();

     label08:
        if z1 == 0 goto label27;

     label09:
        $r23 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        $r24 = r0.<com.android.server.am.UsageStatsService: java.lang.String mLastResumedComp>;

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z4 == 0 goto label27;

     label10:
        z2 = 1;

     label11:
        r0.<com.android.server.am.UsageStatsService: boolean mIsResumed> = 1;

        r0.<com.android.server.am.UsageStatsService: java.lang.String mLastResumedPkg> = r4;

        $r10 = virtualinvoke r1.<android.content.ComponentName: java.lang.String getClassName()>();

        r0.<com.android.server.am.UsageStatsService: java.lang.String mLastResumedComp> = $r10;

        $r12 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        $r11 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (com.android.server.am.UsageStatsService$PkgUsageStatsExtended) $r11;

     label12:
        if r5 != null goto label14;

     label13:
        $r20 = new com.android.server.am.UsageStatsService$PkgUsageStatsExtended;

        specialinvoke $r20.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void <init>(com.android.server.am.UsageStatsService)>(r0);

        r5 = $r20;

        $r25 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mStats>;

        virtualinvoke $r25.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

     label14:
        r6 = r0.<com.android.server.am.UsageStatsService: java.lang.String mLastResumedComp>;

     label15:
        if z1 != 0 goto label28;

     label16:
        virtualinvoke r5.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void updateResume(java.lang.String,boolean)>(r6, z0);

     label17:
        if z2 != 0 goto label19;

     label18:
        $r19 = r0.<com.android.server.am.UsageStatsService: java.lang.String mLastResumedComp>;

        virtualinvoke r5.<com.android.server.am.UsageStatsService$PkgUsageStatsExtended: void addLaunchCount(java.lang.String)>($r19);

     label19:
        $r14 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        $r13 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r4);

        r7 = (android.util.ArrayMap) $r13;

     label20:
        if r7 != null goto label22;

     label21:
        $r18 = new android.util.ArrayMap;

        specialinvoke $r18.<android.util.ArrayMap: void <init>()>();

        r7 = $r18;

        $r21 = r0.<com.android.server.am.UsageStatsService: android.util.ArrayMap mLastResumeTimes>;

        virtualinvoke $r21.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r7);

     label22:
        $r15 = r0.<com.android.server.am.UsageStatsService: java.lang.String mLastResumedComp>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r17);

        exitmonitor r2;

     label23:
        return;

     label24:
        $r31 := @caughtexception;

        r3 = $r31;

     label25:
        exitmonitor r2;

     label26:
        throw r3;

     label27:
        z2 = 0;

        goto label11;

     label28:
        z0 = 0;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label06 with label24;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.lang.Throwable from label09 to label10 with label24;
        catch java.lang.Throwable from label11 to label12 with label24;
        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label16 to label17 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label21 to label22 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label25 to label26 with label24;
    }

    public void publish(android.content.Context)
    {
        com.android.server.am.UsageStatsService r0;
        android.content.Context r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.am.UsageStatsService;

        r1 := @parameter0: android.content.Context;

        r0.<com.android.server.am.UsageStatsService: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r0.<com.android.server.am.UsageStatsService: android.os.IBinder asBinder()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("usagestats", $r2);

        return;
    }

    public void shutdown()
    {
        com.android.server.am.UsageStatsService r0;
        com.android.internal.content.PackageMonitor $r1, $r2;

        r0 := @this: com.android.server.am.UsageStatsService;

        $r1 = r0.<com.android.server.am.UsageStatsService: com.android.internal.content.PackageMonitor mPackageMonitor>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.am.UsageStatsService: com.android.internal.content.PackageMonitor mPackageMonitor>;

        virtualinvoke $r2.<com.android.internal.content.PackageMonitor: void unregister()>();

     label1:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("UsageStats", "Writing usage stats before shutdown...");

        specialinvoke r0.<com.android.server.am.UsageStatsService: void writeStatsToFile(boolean,boolean)>(1, 1);

        return;
    }
}
