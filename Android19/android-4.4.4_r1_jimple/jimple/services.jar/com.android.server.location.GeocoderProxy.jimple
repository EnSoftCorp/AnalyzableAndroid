public class com.android.server.location.GeocoderProxy extends java.lang.Object
{
    private static final java.lang.String SERVICE_ACTION;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private final com.android.server.ServiceWatcher mServiceWatcher;

    private void <init>(android.content.Context, int, int, int, android.os.Handler)
    {
        com.android.server.location.GeocoderProxy r0;
        android.content.Context r1, $r4;
        int i0, i1, i2;
        android.os.Handler r2;
        com.android.server.ServiceWatcher $r3;

        r0 := @this: com.android.server.location.GeocoderProxy;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.location.GeocoderProxy: android.content.Context mContext> = r1;

        $r3 = new com.android.server.ServiceWatcher;

        $r4 = r0.<com.android.server.location.GeocoderProxy: android.content.Context mContext>;

        specialinvoke $r3.<com.android.server.ServiceWatcher: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,java.lang.Runnable,android.os.Handler)>($r4, "GeocoderProxy", "com.android.location.service.GeocodeProvider", i0, i1, i2, null, r2);

        r0.<com.android.server.location.GeocoderProxy: com.android.server.ServiceWatcher mServiceWatcher> = $r3;

        return;
    }

    private boolean bind()
    {
        com.android.server.location.GeocoderProxy r0;
        com.android.server.ServiceWatcher $r1;
        boolean $z0;

        r0 := @this: com.android.server.location.GeocoderProxy;

        $r1 = r0.<com.android.server.location.GeocoderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $z0 = virtualinvoke $r1.<com.android.server.ServiceWatcher: boolean start()>();

        return $z0;
    }

    public static com.android.server.location.GeocoderProxy createAndBind(android.content.Context, int, int, int, android.os.Handler)
    {
        android.content.Context r0;
        int i0, i1, i2;
        android.os.Handler r1;
        com.android.server.location.GeocoderProxy r2, $r3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: android.os.Handler;

        $r3 = new com.android.server.location.GeocoderProxy;

        specialinvoke $r3.<com.android.server.location.GeocoderProxy: void <init>(android.content.Context,int,int,int,android.os.Handler)>(r0, i0, i1, i2, r1);

        r2 = $r3;

        $z0 = specialinvoke r2.<com.android.server.location.GeocoderProxy: boolean bind()>();

        if $z0 == 0 goto label1;

        return r2;

     label1:
        return null;
    }

    private android.location.IGeocodeProvider getService()
    {
        com.android.server.location.GeocoderProxy r0;
        com.android.server.ServiceWatcher $r1;
        android.os.IBinder $r2;
        android.location.IGeocodeProvider $r3;

        r0 := @this: com.android.server.location.GeocoderProxy;

        $r1 = r0.<com.android.server.location.GeocoderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r2 = virtualinvoke $r1.<com.android.server.ServiceWatcher: android.os.IBinder getBinder()>();

        $r3 = staticinvoke <android.location.IGeocodeProvider$Stub: android.location.IGeocodeProvider asInterface(android.os.IBinder)>($r2);

        return $r3;
    }

    public java.lang.String getConnectedPackageName()
    {
        com.android.server.location.GeocoderProxy r0;
        com.android.server.ServiceWatcher $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.location.GeocoderProxy;

        $r1 = r0.<com.android.server.location.GeocoderProxy: com.android.server.ServiceWatcher mServiceWatcher>;

        $r2 = virtualinvoke $r1.<com.android.server.ServiceWatcher: java.lang.String getBestPackageName()>();

        return $r2;
    }

    public java.lang.String getFromLocation(double, double, int, android.location.GeocoderParams, java.util.List)
    {
        com.android.server.location.GeocoderProxy r0;
        double d0, d1;
        int i0;
        android.location.GeocoderParams r1;
        java.util.List r2;
        android.location.IGeocodeProvider r3;
        android.os.RemoteException r4, $r6;
        java.lang.String r5;
        java.lang.Throwable r7;

        r0 := @this: com.android.server.location.GeocoderProxy;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        i0 := @parameter2: int;

        r1 := @parameter3: android.location.GeocoderParams;

        r2 := @parameter4: java.util.List;

        r3 = specialinvoke r0.<com.android.server.location.GeocoderProxy: android.location.IGeocodeProvider getService()>();

        if r3 == null goto label4;

     label1:
        r5 = interfaceinvoke r3.<android.location.IGeocodeProvider: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>(d0, d1, i0, r1, r2);

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        r7 = (java.lang.Throwable) r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("GeocoderProxy", r7);

     label4:
        return "Service not Available";

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.lang.String getFromLocationName(java.lang.String, double, double, double, double, int, android.location.GeocoderParams, java.util.List)
    {
        com.android.server.location.GeocoderProxy r0;
        java.lang.String r1, r6;
        double d0, d1, d2, d3;
        int i0;
        android.location.GeocoderParams r2;
        java.util.List r3;
        android.location.IGeocodeProvider r4;
        android.os.RemoteException r5, $r7;
        java.lang.Throwable r8;

        r0 := @this: com.android.server.location.GeocoderProxy;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        i0 := @parameter5: int;

        r2 := @parameter6: android.location.GeocoderParams;

        r3 := @parameter7: java.util.List;

        r4 = specialinvoke r0.<com.android.server.location.GeocoderProxy: android.location.IGeocodeProvider getService()>();

        if r4 == null goto label4;

     label1:
        r6 = interfaceinvoke r4.<android.location.IGeocodeProvider: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>(r1, d0, d1, d2, d3, i0, r2, r3);

     label2:
        return r6;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        r8 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("GeocoderProxy", r8);

     label4:
        return "Service not Available";

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.location.GeocoderProxy: java.lang.String TAG> = "GeocoderProxy";

        <com.android.server.location.GeocoderProxy: java.lang.String SERVICE_ACTION> = "com.android.location.service.GeocodeProvider";

        return;
    }
}
