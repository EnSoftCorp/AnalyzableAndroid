class com.android.server.InputMethodManagerService$SettingsObserver extends android.database.ContentObserver
{
    java.lang.String mLastEnabled;
    final com.android.server.InputMethodManagerService this$0;

    void <init>(com.android.server.InputMethodManagerService, android.os.Handler)
    {
        com.android.server.InputMethodManagerService$SettingsObserver r0;
        com.android.server.InputMethodManagerService r1;
        android.os.Handler r2;
        android.content.ContentResolver r3;
        android.content.Context $r4;
        android.net.Uri $r5, $r6, $r7;

        r0 := @this: com.android.server.InputMethodManagerService$SettingsObserver;

        r1 := @parameter0: com.android.server.InputMethodManagerService;

        r2 := @parameter1: android.os.Handler;

        r0.<com.android.server.InputMethodManagerService$SettingsObserver: com.android.server.InputMethodManagerService this$0> = r1;

        specialinvoke r0.<android.database.ContentObserver: void <init>(android.os.Handler)>(r2);

        r0.<com.android.server.InputMethodManagerService$SettingsObserver: java.lang.String mLastEnabled> = "";

        $r4 = r1.<com.android.server.InputMethodManagerService: android.content.Context mContext>;

        r3 = virtualinvoke $r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("default_input_method");

        virtualinvoke r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r5, 0, r0);

        $r6 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("enabled_input_methods");

        virtualinvoke r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r6, 0, r0);

        $r7 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("selected_input_method_subtype");

        virtualinvoke r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r7, 0, r0);

        return;
    }

    public void onChange(boolean)
    {
        com.android.server.InputMethodManagerService$SettingsObserver r0;
        boolean z0, z1, z2;
        java.util.HashMap r1;
        java.lang.Throwable r2, $r9;
        java.lang.String r3, $r7;
        com.android.server.InputMethodManagerService $r4, $r5, $r8;
        com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings $r6;

        r0 := @this: com.android.server.InputMethodManagerService$SettingsObserver;

        z0 := @parameter0: boolean;

        $r4 = r0.<com.android.server.InputMethodManagerService$SettingsObserver: com.android.server.InputMethodManagerService this$0>;

        r1 = $r4.<com.android.server.InputMethodManagerService: java.util.HashMap mMethodMap>;

        entermonitor r1;

     label1:
        $r5 = r0.<com.android.server.InputMethodManagerService$SettingsObserver: com.android.server.InputMethodManagerService this$0>;

        $r6 = $r5.<com.android.server.InputMethodManagerService: com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings mSettings>;

        r3 = virtualinvoke $r6.<com.android.internal.inputmethod.InputMethodUtils$InputMethodSettings: java.lang.String getEnabledInputMethodsStr()>();

        $r7 = r0.<com.android.server.InputMethodManagerService$SettingsObserver: java.lang.String mLastEnabled>;

        z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r3);

     label2:
        z2 = 0;

        if z1 != 0 goto label5;

     label3:
        r0.<com.android.server.InputMethodManagerService$SettingsObserver: java.lang.String mLastEnabled> = r3;

     label4:
        z2 = 1;

     label5:
        $r8 = r0.<com.android.server.InputMethodManagerService$SettingsObserver: com.android.server.InputMethodManagerService this$0>;

        virtualinvoke $r8.<com.android.server.InputMethodManagerService: void updateFromSettingsLocked(boolean)>(z2);

        exitmonitor r1;

     label6:
        return;

     label7:
        $r9 := @caughtexception;

        r2 = $r9;

     label8:
        exitmonitor r1;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }
}
