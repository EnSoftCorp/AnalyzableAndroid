class com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState extends com.android.internal.util.State
{
    protected static final boolean TRY_TO_SETUP_MOBILE_CONNECTION;
    protected static final boolean WAIT_FOR_NETWORK_TO_SETTLE;
    final com.android.server.connectivity.Tethering$TetherMasterSM this$1;

    void <init>(com.android.server.connectivity.Tethering$TetherMasterSM)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM r1;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        r1 := @parameter0: com.android.server.connectivity.Tethering$TetherMasterSM;

        r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1> = r1;

        specialinvoke r0.<com.android.internal.util.State: void <init>()>();

        return;
    }

    protected void chooseUpstreamType(boolean)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        boolean z0, z1, $z2, $z4, $z5, $z8, $z9;
        int i0, $i1, $i3, $i4, $i8, $i9;
        java.lang.Object r1, $r48, $r63;
        java.lang.Throwable r2, $r69;
        java.util.Iterator r3, r10;
        android.net.LinkProperties r5, r14;
        java.lang.String r6, $r36, $r47, $r56, $r58;
        java.lang.String[] r7;
        java.util.Collection r8, $r25, $r51;
        java.util.ArrayList r9, r74;
        java.net.InetAddress r12, $r52;
        android.net.RouteInfo r13;
        java.lang.Integer r15;
        android.net.NetworkInfo r16, r19;
        com.android.server.connectivity.Tethering$TetherMasterSM $r18, $r20, $r22, $r28, $r35, $r37, $r40, $r53, $r55, $r61, $r64, $r67;
        com.android.server.connectivity.Tethering $r21, $r23, $r24, $r29, $r39, $r41, $r42, $r54, $r62;
        java.lang.StringBuilder $r26, $r30, $r31, $r32, $r33, $r34, $r45, $r46, $r57, $r59, r71, r72, r73;
        android.net.IConnectivityManager $r38, $r60;
        android.os.INetworkManagementService $r43;
        com.android.internal.util.State $r65;
        java.lang.Exception $r66;
        android.os.RemoteException $r68, $r70;
        com.android.internal.util.IState r75;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        z0 := @parameter0: boolean;

        i0 = -1;

        $r18 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r21 = $r18.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        virtualinvoke $r21.<com.android.server.connectivity.Tethering: void updateConfiguration()>();

        $r20 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r23 = $r20.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        r1 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.Object access$100(com.android.server.connectivity.Tethering)>($r23);

        entermonitor r1;

     label01:
        $r22 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r24 = $r22.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r25 = staticinvoke <com.android.server.connectivity.Tethering: java.util.Collection access$4600(com.android.server.connectivity.Tethering)>($r24);

        r3 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r63 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.Integer) $r63;

     label03:
        $r61 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r62 = $r61.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r60 = staticinvoke <com.android.server.connectivity.Tethering: android.net.IConnectivityManager access$3000(com.android.server.connectivity.Tethering)>($r62);

        $i8 = virtualinvoke r15.<java.lang.Integer: int intValue()>();

        r19 = interfaceinvoke $r60.<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>($i8);

     label04:
        r16 = r19;

     label05:
        if r16 == null goto label02;

     label06:
        $z9 = virtualinvoke r16.<android.net.NetworkInfo: boolean isConnected()>();

        if $z9 == 0 goto label02;

        i0 = virtualinvoke r15.<java.lang.Integer: int intValue()>();

     label07:
        exitmonitor r1;

     label08:
        r71 = new java.lang.StringBuilder;

        specialinvoke r71.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chooseUpstreamType(");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), preferredApn =");

        $r28 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r29 = $r28.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $i1 = staticinvoke <com.android.server.connectivity.Tethering: int access$4700(com.android.server.connectivity.Tethering)>($r29);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", got type=");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Tethering", $r36);

        if i0 == 4 goto label09;

        if i0 != 5 goto label16;

     label09:
        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)>(i0);

     label10:
        if i0 != -1 goto label17;

        z1 = 1;

        if z0 != 1 goto label11;

        $r55 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r54 = $r55.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $i9 = staticinvoke <com.android.server.connectivity.Tethering: int access$4700(com.android.server.connectivity.Tethering)>($r54);

        $z8 = virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)>($i9);

        if $z8 != 1 goto label11;

        z1 = 0;

     label11:
        r6 = null;

        if z1 == 0 goto label12;

        $r53 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        virtualinvoke $r53.<com.android.server.connectivity.Tethering$TetherMasterSM: void sendMessageDelayed(int,long)>(5, 10000L);

     label12:
        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void notifyTetheredOfNewUpstreamIface(java.lang.String)>(r6);

        return;

     label13:
        $r69 := @caughtexception;

        r2 = $r69;

     label14:
        exitmonitor r1;

     label15:
        throw r2;

     label16:
        if i0 == -1 goto label10;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOffUpstreamMobileConnection()>();

        goto label10;

     label17:
        $r35 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r39 = $r35.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r38 = staticinvoke <com.android.server.connectivity.Tethering: android.net.IConnectivityManager access$3000(com.android.server.connectivity.Tethering)>($r39);

        r14 = interfaceinvoke $r38.<android.net.IConnectivityManager: android.net.LinkProperties getLinkProperties(int)>(i0);

     label18:
        r5 = r14;

     label19:
        r6 = null;

        if r5 == null goto label20;

        r72 = new java.lang.StringBuilder;

        specialinvoke r72.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finding IPv4 upstream interface on: ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Tethering", $r47);

        $r51 = virtualinvoke r5.<android.net.LinkProperties: java.util.Collection getAllRoutes()>();

        $r52 = <java.net.Inet4Address: java.net.InetAddress ANY>;

        r13 = staticinvoke <android.net.RouteInfo: android.net.RouteInfo selectBestRoute(java.util.Collection,java.net.InetAddress)>($r51, $r52);

        if r13 == null goto label22;

        r6 = virtualinvoke r13.<android.net.RouteInfo: java.lang.String getInterface()>();

        r73 = new java.lang.StringBuilder;

        specialinvoke r73.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found interface ");

        $r56 = virtualinvoke r13.<android.net.RouteInfo: java.lang.String getInterface()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Tethering", $r58);

     label20:
        if r6 == null goto label12;

        $r37 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r41 = $r37.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        r7 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.String[] access$3700(com.android.server.connectivity.Tethering)>($r41);

        r8 = virtualinvoke r5.<android.net.LinkProperties: java.util.Collection getDnses()>();

        if r8 == null goto label24;

        r74 = new java.util.ArrayList;

        $i4 = interfaceinvoke r8.<java.util.Collection: int size()>();

        specialinvoke r74.<java.util.ArrayList: void <init>(int)>($i4);

        r9 = r74;

        r10 = interfaceinvoke r8.<java.util.Collection: java.util.Iterator iterator()>();

     label21:
        $z4 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label23;

        $r48 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.net.InetAddress) $r48;

        $z5 = r12 instanceof java.net.Inet4Address;

        if $z5 == 0 goto label21;

        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r12);

        goto label21;

     label22:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Tethering", "No IPv4 upstream interface, giving up.");

        r6 = null;

        goto label20;

     label23:
        $i3 = virtualinvoke r9.<java.util.ArrayList: int size()>();

        if $i3 <= 0 goto label24;

        r7 = staticinvoke <android.net.NetworkUtils: java.lang.String[] makeStrings(java.util.Collection)>(r9);

     label24:
        $r40 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r42 = $r40.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r43 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r42);

        interfaceinvoke $r43.<android.os.INetworkManagementService: void setDnsForwarders(java.lang.String[])>(r7);

     label25:
        goto label12;

     label26:
        $r66 := @caughtexception;

        $r64 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r67 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r65 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3800(com.android.server.connectivity.Tethering$TetherMasterSM)>($r67);

        r75 = (com.android.internal.util.IState) $r65;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$4800(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r64, r75);

        goto label12;

     label27:
        $r68 := @caughtexception;

        r5 = null;

        goto label19;

     label28:
        $r70 := @caughtexception;

        r16 = null;

        goto label05;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch android.os.RemoteException from label03 to label04 with label28;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch android.os.RemoteException from label17 to label18 with label27;
        catch java.lang.Exception from label24 to label25 with label26;
    }

    protected java.lang.String enableString(int)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        int i0;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            default: goto label1;
        };

     label1:
        return null;

     label2:
        return "enableDUNAlways";

     label3:
        return "enableHIPRI";
    }

    protected void notifyTetheredOfNewUpstreamIface(java.lang.String)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        com.android.server.connectivity.Tethering$TetherMasterSM $r7, $r9;
        java.util.ArrayList $r10;
        java.lang.Object $r11;
        boolean $z0;
        com.android.server.connectivity.Tethering$TetherInterfaceSM $r12;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("notifying tethered with iface =");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Tethering", $r6);

        $r7 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: java.lang.String access$4902(com.android.server.connectivity.Tethering$TetherMasterSM,java.lang.String)>($r7, r1);

        $r9 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r10 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: java.util.ArrayList access$5000(com.android.server.connectivity.Tethering$TetherMasterSM)>($r9);

        r2 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (com.android.server.connectivity.Tethering$TetherInterfaceSM) $r11;

        virtualinvoke $r12.<com.android.server.connectivity.Tethering$TetherInterfaceSM: void sendMessage(int,java.lang.Object)>(12, r1);

        goto label1;

     label2:
        return;
    }

    public boolean processMessage(android.os.Message)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        android.os.Message r1;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        r1 := @parameter0: android.os.Message;

        return 0;
    }

    protected boolean turnOffMasterTetherSettings()
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM $r3, $r6, $r9, $r10, $r13, $r14, $r16, $r19;
        com.android.server.connectivity.Tethering $r4, $r7;
        android.os.INetworkManagementService $r5, $r8;
        com.android.internal.util.State $r11, $r15, $r18;
        java.lang.Exception $r12, $r17;
        com.android.internal.util.IState r20, r21, r22;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

     label1:
        $r3 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r4 = $r3.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r5 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r4);

        interfaceinvoke $r5.<android.os.INetworkManagementService: void stopTethering()>();

     label2:
        $r6 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r7 = $r6.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r8 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r7);

        interfaceinvoke $r8.<android.os.INetworkManagementService: void setIpForwardingEnabled(boolean)>(0);

     label3:
        $r10 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r9 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r11 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$4400(com.android.server.connectivity.Tethering$TetherMasterSM)>($r9);

        r20 = (com.android.internal.util.IState) $r11;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$4500(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r10, r20);

        return 1;

     label4:
        $r12 := @caughtexception;

        $r14 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r13 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r15 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$4000(com.android.server.connectivity.Tethering$TetherMasterSM)>($r13);

        r21 = (com.android.internal.util.IState) $r15;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$4100(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r14, r21);

        return 0;

     label5:
        $r17 := @caughtexception;

        $r19 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r16 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r18 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$4200(com.android.server.connectivity.Tethering$TetherMasterSM)>($r16);

        r22 = (com.android.internal.util.IState) $r18;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$4300(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r19, r22);

        return 0;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    protected boolean turnOffUpstreamMobileConnection()
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM $r2, $r3, $r4, $r7, $r9;
        int $i1, $i2;
        com.android.server.connectivity.Tethering $r5;
        android.net.IConnectivityManager $r6;
        java.lang.String $r8;
        java.lang.Exception $r10;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        $r2 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$3104(com.android.server.connectivity.Tethering$TetherMasterSM)>($r2);

        $r3 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $i1 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2900(com.android.server.connectivity.Tethering$TetherMasterSM)>($r3);

        if $i1 == -1 goto label3;

     label1:
        $r4 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r5 = $r4.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r6 = staticinvoke <com.android.server.connectivity.Tethering: android.net.IConnectivityManager access$3000(com.android.server.connectivity.Tethering)>($r5);

        $r7 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $i2 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2900(com.android.server.connectivity.Tethering$TetherMasterSM)>($r7);

        $r8 = virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: java.lang.String enableString(int)>($i2);

        interfaceinvoke $r6.<android.net.IConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>(0, $r8);

     label2:
        $r9 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2902(com.android.server.connectivity.Tethering$TetherMasterSM,int)>($r9, -1);

     label3:
        return 1;

     label4:
        $r10 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    protected boolean turnOnMasterTetherSettings()
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        com.android.server.connectivity.Tethering$TetherMasterSM $r5, $r8, $r11, $r14, $r16, $r20, $r23, $r24, $r27, $r28, $r33, $r34, $r37, $r40;
        com.android.server.connectivity.Tethering $r6, $r9, $r12, $r15, $r19, $r31, $r35, $r38;
        android.os.INetworkManagementService $r7, $r10, $r17, $r30, $r32;
        java.lang.String[] $r13, $r18, $r39;
        java.lang.Exception $r21, $r25, $r29, $r36;
        com.android.internal.util.State $r22, $r26, $r41;
        com.android.internal.util.IState r42, r43, r44;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

     label01:
        $r5 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r6 = $r5.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r7 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r6);

        interfaceinvoke $r7.<android.os.INetworkManagementService: void setIpForwardingEnabled(boolean)>(1);

     label02:
        $r8 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r9 = $r8.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r10 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r9);

        $r11 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r12 = $r11.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r13 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.String[] access$3400(com.android.server.connectivity.Tethering)>($r12);

        interfaceinvoke $r10.<android.os.INetworkManagementService: void startTethering(java.lang.String[])>($r13);

     label03:
        $r14 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r15 = $r14.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r17 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r15);

        $r16 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r19 = $r16.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r18 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.String[] access$3700(com.android.server.connectivity.Tethering)>($r19);

        interfaceinvoke $r17.<android.os.INetworkManagementService: void setDnsForwarders(java.lang.String[])>($r18);

     label04:
        return 1;

     label05:
        $r25 := @caughtexception;

        $r27 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r24 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r26 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3200(com.android.server.connectivity.Tethering$TetherMasterSM)>($r24);

        r42 = (com.android.internal.util.IState) $r26;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$3300(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r27, r42);

        return 0;

     label06:
        $r29 := @caughtexception;

     label07:
        $r28 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r31 = $r28.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r30 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r31);

        interfaceinvoke $r30.<android.os.INetworkManagementService: void stopTethering()>();

        $r34 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r35 = $r34.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r32 = staticinvoke <com.android.server.connectivity.Tethering: android.os.INetworkManagementService access$2100(com.android.server.connectivity.Tethering)>($r35);

        $r33 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r38 = $r33.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r39 = staticinvoke <com.android.server.connectivity.Tethering: java.lang.String[] access$3400(com.android.server.connectivity.Tethering)>($r38);

        interfaceinvoke $r32.<android.os.INetworkManagementService: void startTethering(java.lang.String[])>($r39);

     label08:
        goto label03;

     label09:
        $r21 := @caughtexception;

        $r23 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r20 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r22 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3500(com.android.server.connectivity.Tethering$TetherMasterSM)>($r20);

        r43 = (com.android.internal.util.IState) $r22;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$3600(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r23, r43);

        return 0;

     label10:
        $r36 := @caughtexception;

        $r40 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r37 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r41 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: com.android.internal.util.State access$3800(com.android.server.connectivity.Tethering$TetherMasterSM)>($r37);

        r44 = (com.android.internal.util.IState) $r41;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: void access$3900(com.android.server.connectivity.Tethering$TetherMasterSM,com.android.internal.util.IState)>($r40, r44);

        return 0;

        catch java.lang.Exception from label01 to label02 with label05;
        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    protected boolean turnOnUpstreamMobileConnection(int)
    {
        com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState r0;
        int i0, i1, i2, $i3, $i5;
        boolean z0;
        java.lang.String r1;
        android.os.Message r3;
        com.android.server.connectivity.Tethering$TetherMasterSM $r4, $r5, $r9, $r10, $r11, $r12;
        com.android.server.connectivity.Tethering $r6;
        android.net.IConnectivityManager $r7;
        java.lang.Exception $r13;
        android.os.Binder r14;
        android.os.IBinder r15;

        r0 := @this: com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState;

        i0 := @parameter0: int;

        z0 = 1;

        if i0 != -1 goto label02;

     label01:
        return 0;

     label02:
        $r4 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $i3 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2900(com.android.server.connectivity.Tethering$TetherMasterSM)>($r4);

        if i0 == $i3 goto label03;

        virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOffUpstreamMobileConnection()>();

     label03:
        i1 = 3;

        r1 = virtualinvoke r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: java.lang.String enableString(int)>(i0);

        if r1 == null goto label01;

     label04:
        $r5 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $r6 = $r5.<com.android.server.connectivity.Tethering$TetherMasterSM: com.android.server.connectivity.Tethering this$0>;

        $r7 = staticinvoke <com.android.server.connectivity.Tethering: android.net.IConnectivityManager access$3000(com.android.server.connectivity.Tethering)>($r6);

        r14 = new android.os.Binder;

        specialinvoke r14.<android.os.Binder: void <init>()>();

        r15 = (android.os.IBinder) r14;

        i2 = interfaceinvoke $r7.<android.net.IConnectivityManager: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>(0, r1, r15);

     label05:
        i1 = i2;

     label06:
        tableswitch(i1)
        {
            case 0: goto label09;
            case 1: goto label09;
            default: goto label07;
        };

     label07:
        z0 = 0;

     label08:
        return z0;

     label09:
        $r9 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$2902(com.android.server.connectivity.Tethering$TetherMasterSM,int)>($r9, i0);

        $r10 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        r3 = virtualinvoke $r10.<com.android.server.connectivity.Tethering$TetherMasterSM: android.os.Message obtainMessage(int)>(4);

        $r11 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        $i5 = staticinvoke <com.android.server.connectivity.Tethering$TetherMasterSM: int access$3104(com.android.server.connectivity.Tethering$TetherMasterSM)>($r11);

        r3.<android.os.Message: int arg1> = $i5;

        $r12 = r0.<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: com.android.server.connectivity.Tethering$TetherMasterSM this$1>;

        virtualinvoke $r12.<com.android.server.connectivity.Tethering$TetherMasterSM: void sendMessageDelayed(android.os.Message,long)>(r3, 40000L);

        goto label08;

     label10:
        $r13 := @caughtexception;

        goto label06;

        catch java.lang.Exception from label04 to label05 with label10;
    }

    public static void <clinit>()
    {
        <com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean TRY_TO_SETUP_MOBILE_CONNECTION> = 1;

        return;
    }
}
