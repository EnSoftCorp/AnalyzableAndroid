final class com.android.server.firewall.SenderFilter$1 extends com.android.server.firewall.FilterFactory
{

    void <init>(java.lang.String)
    {
        com.android.server.firewall.SenderFilter$1 r0;
        java.lang.String r1;

        r0 := @this: com.android.server.firewall.SenderFilter$1;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.firewall.FilterFactory: void <init>(java.lang.String)>(r1);

        return;
    }

    public com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.firewall.SenderFilter$1 r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r5, $r6, r14;
        com.android.server.firewall.Filter $r8, $r9, $r10, $r12;
        org.xmlpull.v1.XmlPullParserException r13, r15;
        java.lang.Throwable r16, r17;

        r0 := @this: com.android.server.firewall.SenderFilter$1;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        if r2 != null goto label1;

        r13 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r13.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("type attribute must be specified for <sender>", r1, null);

        r16 = (java.lang.Throwable) r13;

        throw r16;

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("system");

        if $z0 == 0 goto label2;

        $r12 = staticinvoke <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter access$000()>();

        return $r12;

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("signature");

        if $z1 == 0 goto label3;

        $r10 = staticinvoke <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter access$100()>();

        return $r10;

     label3:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("system|signature");

        if $z2 == 0 goto label4;

        $r9 = staticinvoke <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter access$200()>();

        return $r9;

     label4:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("userId");

        if $z3 == 0 goto label5;

        $r8 = staticinvoke <com.android.server.firewall.SenderFilter: com.android.server.firewall.Filter access$300()>();

        return $r8;

     label5:
        r15 = new org.xmlpull.v1.XmlPullParserException;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid type attribute for <sender>: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r15.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r7, r1, null);

        r17 = (java.lang.Throwable) r15;

        throw r17;
    }
}
