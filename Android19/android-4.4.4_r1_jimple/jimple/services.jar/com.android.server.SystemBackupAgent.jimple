public class com.android.server.SystemBackupAgent extends android.app.backup.BackupAgentHelper
{
    private static final java.lang.String TAG;
    private static final java.lang.String WALLPAPER_IMAGE;
    private static final java.lang.String WALLPAPER_IMAGE_DIR;
    private static final java.lang.String WALLPAPER_IMAGE_FILENAME;
    private static final java.lang.String WALLPAPER_IMAGE_KEY;
    private static final java.lang.String WALLPAPER_INFO;
    private static final java.lang.String WALLPAPER_INFO_DIR;
    private static final java.lang.String WALLPAPER_INFO_FILENAME;
    private static final java.lang.String WALLPAPER_INFO_KEY;

    static void <clinit>()
    {
        java.io.File $r0, $r3;
        java.lang.String $r1, $r2, $r4, $r5;

        <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO_KEY> = "/data/system/wallpaper_info.xml";

        <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO_FILENAME> = "wallpaper_info.xml";

        <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE_KEY> = "/data/data/com.android.settings/files/wallpaper";

        <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE_FILENAME> = "wallpaper";

        <com.android.server.SystemBackupAgent: java.lang.String TAG> = "SystemBackupAgent";

        $r0 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(0);

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE_DIR> = $r1;

        $r2 = <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_IMAGE>;

        <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE> = $r2;

        $r3 = staticinvoke <android.os.Environment: java.io.File getUserSystemDirectory(int)>(0);

        $r4 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO_DIR> = $r4;

        $r5 = <android.app.backup.WallpaperBackupHelper: java.lang.String WALLPAPER_INFO>;

        <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO> = $r5;

        return;
    }

    public void <init>()
    {
        com.android.server.SystemBackupAgent r0;

        r0 := @this: com.android.server.SystemBackupAgent;

        specialinvoke r0.<android.app.backup.BackupAgentHelper: void <init>()>();

        return;
    }

    private void fullWallpaperBackup(android.app.backup.FullBackupDataOutput)
    {
        com.android.server.SystemBackupAgent r0;
        android.app.backup.FullBackupDataOutput r1;
        java.lang.String $r2, $r3, $r4, $r6, $r7, $r8;
        android.app.backup.BackupDataOutput $r5, $r9;

        r0 := @this: com.android.server.SystemBackupAgent;

        r1 := @parameter0: android.app.backup.FullBackupDataOutput;

        $r2 = virtualinvoke r0.<com.android.server.SystemBackupAgent: java.lang.String getPackageName()>();

        $r3 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO_DIR>;

        $r4 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO>;

        $r5 = virtualinvoke r1.<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()>();

        staticinvoke <android.app.backup.FullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.BackupDataOutput)>($r2, "r", null, $r3, $r4, $r5);

        $r6 = virtualinvoke r0.<com.android.server.SystemBackupAgent: java.lang.String getPackageName()>();

        $r7 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE_DIR>;

        $r8 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE>;

        $r9 = virtualinvoke r1.<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()>();

        staticinvoke <android.app.backup.FullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.BackupDataOutput)>($r6, "r", null, $r7, $r8, $r9);

        return;
    }

    public void onBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        com.android.server.SystemBackupAgent r0;
        android.os.ParcelFileDescriptor r1, r3;
        android.app.backup.BackupDataOutput r2;
        com.android.server.WallpaperManagerService r4;
        java.lang.String[] r5, r6, $r10;
        android.os.IBinder $r7;
        java.lang.String $r8, $r9, $r12, $r13, $r14;
        int $i0;
        android.app.backup.WallpaperBackupHelper r15;
        android.content.Context r16;

        r0 := @this: com.android.server.SystemBackupAgent;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.app.backup.BackupDataOutput;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        $r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("wallpaper");

        r4 = (com.android.server.WallpaperManagerService) $r7;

        r5 = newarray (java.lang.String)[2];

        $r8 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE>;

        r5[0] = $r8;

        $r9 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO>;

        r5[1] = $r9;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = "/data/data/com.android.settings/files/wallpaper";

        $r10[1] = "/data/system/wallpaper_info.xml";

        r6 = $r10;

        if r4 == null goto label1;

        $r12 = virtualinvoke r4.<com.android.server.WallpaperManagerService: java.lang.String getName()>();

        if $r12 == null goto label1;

        $r13 = virtualinvoke r4.<com.android.server.WallpaperManagerService: java.lang.String getName()>();

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        r5 = newarray (java.lang.String)[1];

        $r14 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO>;

        r5[0] = $r14;

        r6 = newarray (java.lang.String)[1];

        r6[0] = "/data/system/wallpaper_info.xml";

     label1:
        r15 = new android.app.backup.WallpaperBackupHelper;

        r16 = (android.content.Context) r0;

        specialinvoke r15.<android.app.backup.WallpaperBackupHelper: void <init>(android.content.Context,java.lang.String[],java.lang.String[])>(r16, r5, r6);

        virtualinvoke r0.<com.android.server.SystemBackupAgent: void addHelper(java.lang.String,android.app.backup.BackupHelper)>("wallpaper", r15);

        specialinvoke r0.<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>(r1, r2, r3);

        return;
    }

    public void onFullBackup(android.app.backup.FullBackupDataOutput) throws java.io.IOException
    {
        com.android.server.SystemBackupAgent r0;
        android.app.backup.FullBackupDataOutput r1;

        r0 := @this: com.android.server.SystemBackupAgent;

        r1 := @parameter0: android.app.backup.FullBackupDataOutput;

        specialinvoke r0.<com.android.server.SystemBackupAgent: void fullWallpaperBackup(android.app.backup.FullBackupDataOutput)>(r1);

        return;
    }

    public void onRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        com.android.server.SystemBackupAgent r0;
        android.app.backup.BackupDataInput r1;
        int i0;
        android.os.ParcelFileDescriptor r2;
        java.lang.String[] r3, r4, $r9, $r12;
        java.io.IOException r5, $r15;
        java.lang.String $r6, $r7, $r10, $r16, $r19;
        com.android.server.WallpaperManagerService $r13;
        android.os.IBinder $r14;
        android.app.backup.WallpaperBackupHelper r20, r21;
        java.io.File r22, r23;
        android.content.Context r24, r25;

        r0 := @this: com.android.server.SystemBackupAgent;

        r1 := @parameter0: android.app.backup.BackupDataInput;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

        r3 = newarray (java.lang.String)[2];

        $r6 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE>;

        r3[0] = $r6;

        $r7 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO>;

        r3[1] = $r7;

        r20 = new android.app.backup.WallpaperBackupHelper;

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "/data/data/com.android.settings/files/wallpaper";

        $r9[1] = "/data/system/wallpaper_info.xml";

        r24 = (android.content.Context) r0;

        specialinvoke r20.<android.app.backup.WallpaperBackupHelper: void <init>(android.content.Context,java.lang.String[],java.lang.String[])>(r24, r3, $r9);

        virtualinvoke r0.<com.android.server.SystemBackupAgent: void addHelper(java.lang.String,android.app.backup.BackupHelper)>("wallpaper", r20);

        r4 = newarray (java.lang.String)[1];

        $r10 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE>;

        r4[0] = $r10;

        r21 = new android.app.backup.WallpaperBackupHelper;

        $r12 = newarray (java.lang.String)[1];

        $r12[0] = "/data/data/com.android.settings/files/wallpaper";

        r25 = (android.content.Context) r0;

        specialinvoke r21.<android.app.backup.WallpaperBackupHelper: void <init>(android.content.Context,java.lang.String[],java.lang.String[])>(r25, r4, $r12);

        virtualinvoke r0.<com.android.server.SystemBackupAgent: void addHelper(java.lang.String,android.app.backup.BackupHelper)>("system_files", r21);

     label1:
        specialinvoke r0.<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>(r1, i0, r2);

        $r14 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("wallpaper");

        $r13 = (com.android.server.WallpaperManagerService) $r14;

        virtualinvoke $r13.<com.android.server.WallpaperManagerService: void settingsRestored()>();

     label2:
        return;

     label3:
        $r15 := @caughtexception;

        r5 = $r15;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("SystemBackupAgent", "restore failed", r5);

        r22 = new java.io.File;

        $r16 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE>;

        specialinvoke r22.<java.io.File: void <init>(java.lang.String)>($r16);

        virtualinvoke r22.<java.io.File: boolean delete()>();

        r23 = new java.io.File;

        $r19 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO>;

        specialinvoke r23.<java.io.File: void <init>(java.lang.String)>($r19);

        virtualinvoke r23.<java.io.File: boolean delete()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void onRestoreFile(android.os.ParcelFileDescriptor, long, int, java.lang.String, java.lang.String, long, long) throws java.io.IOException
    {
        com.android.server.SystemBackupAgent r0;
        android.os.ParcelFileDescriptor r1;
        long l0, l2, l3;
        int i1;
        java.lang.String r2, r3, $r11, $r18, $r22, $r26, $r27, $r29;
        boolean z0, z1, z2, $z3;
        java.io.File r4, $r21, $r24, $r25, $r28;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r13, $r15, $r16, $r17, $r19, $r20;
        android.os.IBinder $r12;
        com.android.server.WallpaperManagerService $r14;
        java.io.IOException $r23;

        r0 := @this: com.android.server.SystemBackupAgent;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Restoring file domain=");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" path=");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("SystemBackupAgent", $r11);

        z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("r");

        r4 = null;

        z1 = 0;

        if z0 == 0 goto label1;

        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("wallpaper_info.xml");

        if $z3 == 0 goto label7;

        $r25 = new java.io.File;

        $r26 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO>;

        specialinvoke $r25.<java.io.File: void <init>(java.lang.String)>($r26);

        r4 = $r25;

        z1 = 1;

     label1:
        if r4 != null goto label3;

     label2:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping unrecognized system file: [ ");

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ]");

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("SystemBackupAgent", $r18);

     label3:
        staticinvoke <android.app.backup.FullBackup: void restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File)>(r1, l0, i1, l2, l3, r4);

     label4:
        if z1 == 0 goto label6;

     label5:
        $r12 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("wallpaper");

        $r14 = (com.android.server.WallpaperManagerService) $r12;

        virtualinvoke $r14.<com.android.server.WallpaperManagerService: void settingsRestored()>();

     label6:
        return;

     label7:
        z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("wallpaper");

        r4 = null;

        z1 = 0;

        if z2 == 0 goto label1;

        $r21 = new java.io.File;

        $r22 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE>;

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>($r22);

        r4 = $r21;

        z1 = 1;

        goto label1;

     label8:
        $r23 := @caughtexception;

        if z1 == 0 goto label6;

        $r24 = new java.io.File;

        $r29 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_IMAGE>;

        specialinvoke $r24.<java.io.File: void <init>(java.lang.String)>($r29);

        virtualinvoke $r24.<java.io.File: boolean delete()>();

        $r28 = new java.io.File;

        $r27 = <com.android.server.SystemBackupAgent: java.lang.String WALLPAPER_INFO>;

        specialinvoke $r28.<java.io.File: void <init>(java.lang.String)>($r27);

        virtualinvoke $r28.<java.io.File: boolean delete()>();

        return;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label3 to label4 with label8;
        catch java.io.IOException from label5 to label6 with label8;
    }
}
