public class com.android.server.wm.TaskStack extends java.lang.Object
{
    private static final int DEFAULT_DIM_DURATION;
    com.android.server.wm.WindowStateAnimator mAnimationBackgroundAnimator;
    final com.android.server.wm.DimLayer mAnimationBackgroundSurface;
    final com.android.server.wm.DimLayer mDimLayer;
    com.android.server.wm.WindowStateAnimator mDimWinAnimator;
    boolean mDimmingTag;
    private final com.android.server.wm.DisplayContent mDisplayContent;
    private final com.android.server.wm.WindowManagerService mService;
    com.android.server.wm.StackBox mStackBox;
    final int mStackId;
    private final java.util.ArrayList mTasks;

    void <init>(com.android.server.wm.WindowManagerService, int, com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.WindowManagerService r1;
        int i0;
        com.android.server.wm.DisplayContent r2;
        java.util.ArrayList $r3;
        com.android.server.wm.DimLayer $r4, $r5;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.server.wm.DisplayContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks> = $r3;

        r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowManagerService mService> = r1;

        r0.<com.android.server.wm.TaskStack: int mStackId> = i0;

        r0.<com.android.server.wm.TaskStack: com.android.server.wm.DisplayContent mDisplayContent> = r2;

        $r4 = new com.android.server.wm.DimLayer;

        specialinvoke $r4.<com.android.server.wm.DimLayer: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.TaskStack)>(r1, r0);

        r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer> = $r4;

        $r5 = new com.android.server.wm.DimLayer;

        specialinvoke $r5.<com.android.server.wm.DimLayer: void <init>(com.android.server.wm.WindowManagerService,com.android.server.wm.TaskStack)>(r1, r0);

        r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mAnimationBackgroundSurface> = $r5;

        return;
    }

    private long getDimBehindFadeDuration(long)
    {
        com.android.server.wm.TaskStack r0;
        long l0, $l5;
        android.util.TypedValue r1, $r2;
        com.android.server.wm.WindowManagerService $r3;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        int $i1, $i2, $i3, $i4;
        float $f0, $f1, $f2;

        r0 := @this: com.android.server.wm.TaskStack;

        l0 := @parameter0: long;

        $r2 = new android.util.TypedValue;

        specialinvoke $r2.<android.util.TypedValue: void <init>()>();

        r1 = $r2;

        $r3 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowManagerService mService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        virtualinvoke $r5.<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>(17956864, r1, 1);

        $i1 = r1.<android.util.TypedValue: int type>;

        if $i1 != 6 goto label2;

        $f1 = (float) l0;

        $f0 = (float) l0;

        $f2 = virtualinvoke r1.<android.util.TypedValue: float getFraction(float,float)>($f1, $f0);

        l0 = (long) $f2;

     label1:
        return l0;

     label2:
        $i2 = r1.<android.util.TypedValue: int type>;

        if $i2 < 16 goto label1;

        $i3 = r1.<android.util.TypedValue: int type>;

        if $i3 > 31 goto label1;

        $i4 = r1.<android.util.TypedValue: int data>;

        $l5 = (long) $i4;

        return $l5;
    }

    boolean addTask(com.android.server.wm.Task, boolean)
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.Task r1, $r10;
        boolean z0, z1, $z2;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.wm.DisplayContent r2, $r7;
        com.android.server.wm.StackBox $r3;
        java.util.ArrayList $r4, $r6, $r9;
        com.android.server.wm.WindowManagerService $r5;
        java.lang.Object $r8;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: com.android.server.wm.Task;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.StackBox mStackBox>;

        virtualinvoke $r3.<com.android.server.wm.StackBox: void makeDirty()>();

        if z0 != 0 goto label3;

        i0 = 0;

     label1:
        $r6 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        virtualinvoke $r6.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r1);

        r1.<com.android.server.wm.Task: com.android.server.wm.TaskStack mStack> = r0;

        $r7 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r7.<com.android.server.wm.DisplayContent: void addTask(com.android.server.wm.Task,boolean)>(r1, z0);

        r2 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DisplayContent mDisplayContent>;

        $i3 = r0.<com.android.server.wm.TaskStack: int mStackId>;

        if $i3 != 0 goto label6;

        z1 = 1;

     label2:
        $z2 = virtualinvoke r2.<com.android.server.wm.DisplayContent: boolean moveHomeStackBox(boolean)>(z1);

        return $z2;

     label3:
        $r4 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r5 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowManagerService mService>;

        i1 = $r5.<com.android.server.wm.WindowManagerService: int mCurrentUserId>;

        $i2 = r1.<com.android.server.wm.Task: int mUserId>;

        if $i2 == i1 goto label1;

     label4:
        i0 = i0 + -1;

        if i0 < 0 goto label5;

        $r9 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        $r8 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r10 = (com.android.server.wm.Task) $r8;

        $i4 = $r10.<com.android.server.wm.Task: int mUserId>;

        if i1 == $i4 goto label4;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        z1 = 0;

        goto label2;
    }

    boolean animateDimLayers()
    {
        com.android.server.wm.TaskStack r0;
        long l0;
        int i1, $i2, $i4;
        float f0, f1;
        com.android.server.wm.WindowStateAnimator $r1, $r2, $r3, $r12, $r14, $r16, $r19;
        com.android.server.wm.WindowState $r4;
        android.view.WindowManager$LayoutParams $r5;
        com.android.server.wm.DimLayer $r6, $r7, $r8, $r10, $r11, $r13, $r15, $r20, $r21;
        byte $b3, $b5;
        com.android.server.wm.WindowManagerService $r9;
        boolean $z0, $z1, $z2, $z3;
        android.view.animation.Animation $r17, $r18;

        r0 := @this: com.android.server.wm.TaskStack;

        l0 = 200L;

        $r1 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        if $r1 != null goto label4;

        $r21 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        i1 = virtualinvoke $r21.<com.android.server.wm.DimLayer: int getLayer()>();

        f0 = 0.0F;

     label1:
        $r6 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        f1 = virtualinvoke $r6.<com.android.server.wm.DimLayer: float getTargetAlpha()>();

        $b3 = f1 cmpl f0;

        if $b3 == 0 goto label8;

        $r12 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        if $r12 != null goto label5;

        $r20 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        virtualinvoke $r20.<com.android.server.wm.DimLayer: void hide(long)>(200L);

     label2:
        $r8 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        $z0 = virtualinvoke $r8.<com.android.server.wm.DimLayer: boolean isAnimating()>();

        if $z0 == 0 goto label3;

        $r9 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowManagerService mService>;

        $z1 = virtualinvoke $r9.<com.android.server.wm.WindowManagerService: boolean okToDisplay()>();

        if $z1 != 0 goto label9;

        $r11 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        virtualinvoke $r11.<com.android.server.wm.DimLayer: void show()>();

     label3:
        return 0;

     label4:
        $r2 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        $i2 = $r2.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        i1 = -1 + $i2;

        $r3 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        $r4 = $r3.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        $r5 = $r4.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        f0 = $r5.<android.view.WindowManager$LayoutParams: float dimAmount>;

        goto label1;

     label5:
        $r14 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        $z3 = $r14.<com.android.server.wm.WindowStateAnimator: boolean mAnimating>;

        if $z3 == 0 goto label6;

        $r16 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        $r18 = $r16.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        if $r18 == null goto label6;

        $r19 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        $r17 = $r19.<com.android.server.wm.WindowStateAnimator: android.view.animation.Animation mAnimation>;

        l0 = virtualinvoke $r17.<android.view.animation.Animation: long computeDurationHint()>();

     label6:
        $b5 = f1 cmpl f0;

        if $b5 <= 0 goto label7;

        l0 = specialinvoke r0.<com.android.server.wm.TaskStack: long getDimBehindFadeDuration(long)>(l0);

     label7:
        $r15 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        virtualinvoke $r15.<com.android.server.wm.DimLayer: void show(int,float,long)>(i1, f0, l0);

        goto label2;

     label8:
        $r7 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        $i4 = virtualinvoke $r7.<com.android.server.wm.DimLayer: int getLayer()>();

        if $i4 == i1 goto label2;

        $r13 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        virtualinvoke $r13.<com.android.server.wm.DimLayer: void setLayer(int)>(i1);

        goto label2;

     label9:
        $r10 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        $z2 = virtualinvoke $r10.<com.android.server.wm.DimLayer: boolean stepAnimation()>();

        return $z2;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.wm.TaskStack r0;
        java.lang.String r1, $r11;
        java.io.PrintWriter r2;
        int i0, $i1, $i2;
        java.util.ArrayList $r3, $r14;
        com.android.server.wm.DimLayer $r4, $r5, $r6, $r9;
        boolean $z0, $z1;
        com.android.server.wm.WindowStateAnimator $r7;
        java.lang.StringBuilder $r8, $r10, $r12;
        java.lang.Object $r13;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mStackId=");

        $i1 = r0.<com.android.server.wm.TaskStack: int mStackId>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i1);

        i0 = 0;

     label1:
        $r3 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        $r14 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        $r13 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r13);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mAnimationBackgroundSurface>;

        $z0 = virtualinvoke $r4.<com.android.server.wm.DimLayer: boolean isDimming()>();

        if $z0 == 0 goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("mWindowAnimationBackgroundSurface:");

        $r9 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mAnimationBackgroundSurface>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.android.server.wm.DimLayer: void printTo(java.lang.String,java.io.PrintWriter)>($r11, r2);

     label3:
        $r5 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        $z1 = virtualinvoke $r5.<com.android.server.wm.DimLayer: boolean isDimming()>();

        if $z1 == 0 goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("mDimLayer:");

        $r6 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        virtualinvoke $r6.<com.android.server.wm.DimLayer: void printTo(java.lang.String,java.io.PrintWriter)>(r1, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("mDimWinAnimator=");

        $r7 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r7);

     label4:
        return;
    }

    com.android.server.wm.DisplayContent getDisplayContent()
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.DisplayContent $r1;

        r0 := @this: com.android.server.wm.TaskStack;

        $r1 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DisplayContent mDisplayContent>;

        return $r1;
    }

    java.util.ArrayList getTasks()
    {
        com.android.server.wm.TaskStack r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.wm.TaskStack;

        $r1 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        return $r1;
    }

    boolean hasSibling()
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.StackBox $r1, $r2;

        r0 := @this: com.android.server.wm.TaskStack;

        $r1 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.StackBox mStackBox>;

        $r2 = $r1.<com.android.server.wm.StackBox: com.android.server.wm.StackBox mParent>;

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isDimming()
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.DimLayer $r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskStack;

        $r1 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.DimLayer: boolean isDimming()>();

        return $z0;
    }

    boolean isDimming(com.android.server.wm.WindowStateAnimator)
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.WindowStateAnimator r1, $r2;
        com.android.server.wm.DimLayer $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: com.android.server.wm.WindowStateAnimator;

        $r2 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        if $r2 != r1 goto label1;

        $r3 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        $z0 = virtualinvoke $r3.<com.android.server.wm.DimLayer: boolean isDimming()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean isHomeStack()
    {
        com.android.server.wm.TaskStack r0;
        int $i0;

        r0 := @this: com.android.server.wm.TaskStack;

        $i0 = r0.<com.android.server.wm.TaskStack: int mStackId>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    boolean moveTaskToBottom(com.android.server.wm.Task)
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.Task r1;
        java.util.ArrayList $r2;
        boolean $z1;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: com.android.server.wm.Task;

        $r2 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $z1 = virtualinvoke r0.<com.android.server.wm.TaskStack: boolean addTask(com.android.server.wm.Task,boolean)>(r1, 0);

        return $z1;
    }

    boolean moveTaskToTop(com.android.server.wm.Task)
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.Task r1;
        java.util.ArrayList $r2;
        boolean $z1;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: com.android.server.wm.Task;

        $r2 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $z1 = virtualinvoke r0.<com.android.server.wm.TaskStack: boolean addTask(com.android.server.wm.Task,boolean)>(r1, 1);

        return $z1;
    }

    int remove()
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.DimLayer $r1, $r2;
        int $i0, $i2;
        com.android.server.wm.StackBox $r3;

        r0 := @this: com.android.server.wm.TaskStack;

        $r1 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mAnimationBackgroundSurface>;

        virtualinvoke $r1.<com.android.server.wm.DimLayer: void destroySurface()>();

        $r2 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        virtualinvoke $r2.<com.android.server.wm.DimLayer: void destroySurface()>();

        $i0 = r0.<com.android.server.wm.TaskStack: int mStackId>;

        staticinvoke <android.util.EventLog: int writeEvent(int,int)>(31006, $i0);

        $r3 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.StackBox mStackBox>;

        $i2 = virtualinvoke $r3.<com.android.server.wm.StackBox: int remove()>();

        return $i2;
    }

    void removeTask(com.android.server.wm.Task)
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.Task r1;
        com.android.server.wm.StackBox $r2;
        java.util.ArrayList $r3;
        com.android.server.wm.DisplayContent $r4;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: com.android.server.wm.Task;

        $r2 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.StackBox mStackBox>;

        virtualinvoke $r2.<com.android.server.wm.StackBox: void makeDirty()>();

        $r3 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DisplayContent mDisplayContent>;

        virtualinvoke $r4.<com.android.server.wm.DisplayContent: void removeTask(com.android.server.wm.Task)>(r1);

        return;
    }

    void resetAnimationBackgroundAnimator()
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.DimLayer $r1;

        r0 := @this: com.android.server.wm.TaskStack;

        r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mAnimationBackgroundAnimator> = null;

        $r1 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mAnimationBackgroundSurface>;

        virtualinvoke $r1.<com.android.server.wm.DimLayer: void hide()>();

        return;
    }

    void resetDimmingTag()
    {
        com.android.server.wm.TaskStack r0;

        r0 := @this: com.android.server.wm.TaskStack;

        r0.<com.android.server.wm.TaskStack: boolean mDimmingTag> = 0;

        return;
    }

    void setAnimationBackground(com.android.server.wm.WindowStateAnimator, int)
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.WindowStateAnimator r1, $r2, $r5;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        com.android.server.wm.WindowManagerService $r3;
        float $f0, $f1;
        com.android.server.wm.DimLayer $r4;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: com.android.server.wm.WindowStateAnimator;

        i0 := @parameter1: int;

        i1 = r1.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        $r2 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mAnimationBackgroundAnimator>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mAnimationBackgroundAnimator>;

        $i6 = $r5.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        if i1 >= $i6 goto label2;

     label1:
        r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mAnimationBackgroundAnimator> = r1;

        $r3 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowManagerService mService>;

        i2 = virtualinvoke $r3.<com.android.server.wm.WindowManagerService: int adjustAnimationBackground(com.android.server.wm.WindowStateAnimator)>(r1);

        $r4 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mAnimationBackgroundSurface>;

        $i5 = i2 - 1;

        $i3 = i0 >> 24;

        $i4 = 255 & $i3;

        $f0 = (float) $i4;

        $f1 = $f0 / 255.0F;

        virtualinvoke $r4.<com.android.server.wm.DimLayer: void show(int,float,long)>($i5, $f1, 0L);

     label2:
        return;
    }

    void setBounds(android.graphics.Rect, boolean)
    {
        com.android.server.wm.TaskStack r0;
        android.graphics.Rect r1;
        boolean z0, $z2;
        java.util.ArrayList r2, $r9, $r11;
        int i0, i1, i2, $i3, $i4, $i5;
        com.android.server.wm.AppTokenList r3;
        com.android.server.wm.WindowList r4;
        com.android.server.wm.WindowState r5;
        com.android.server.wm.DimLayer $r6, $r7;
        com.android.server.wm.WindowManagerService $r8;
        java.lang.Object $r10, $r13, $r15;
        com.android.server.wm.Task $r12;
        com.android.server.wm.AppWindowToken $r14;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: android.graphics.Rect;

        z0 := @parameter1: boolean;

        $r6 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mDimLayer>;

        virtualinvoke $r6.<com.android.server.wm.DimLayer: void setBounds(android.graphics.Rect)>(r1);

        $r7 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.DimLayer mAnimationBackgroundSurface>;

        virtualinvoke $r7.<com.android.server.wm.DimLayer: void setBounds(android.graphics.Rect)>(r1);

        $r8 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowManagerService mService>;

        r2 = $r8.<com.android.server.wm.WindowManagerService: java.util.ArrayList mResizingWindows>;

        $r9 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        $i3 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        i0 = -1 + $i3;

     label1:
        if i0 < 0 goto label7;

        $r11 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        $r10 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r12 = (com.android.server.wm.Task) $r10;

        r3 = $r12.<com.android.server.wm.Task: com.android.server.wm.AppTokenList mAppTokens>;

        $i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i1 = -1 + $i4;

     label2:
        if i1 < 0 goto label6;

        $r13 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r14 = (com.android.server.wm.AppWindowToken) $r13;

        r4 = $r14.<com.android.server.wm.AppWindowToken: com.android.server.wm.WindowList allAppWindows>;

        $i5 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        i2 = -1 + $i5;

     label3:
        if i2 < 0 goto label5;

        $r15 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.server.wm.WindowState) $r15;

        $z2 = virtualinvoke r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r5);

        if $z2 != 0 goto label4;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r5);

     label4:
        r5.<com.android.server.wm.WindowState: boolean mUnderStatusBar> = z0;

        i2 = i2 + -1;

        goto label3;

     label5:
        i1 = i1 + -1;

        goto label2;

     label6:
        i0 = i0 + -1;

        goto label1;

     label7:
        return;
    }

    void setDimmingTag()
    {
        com.android.server.wm.TaskStack r0;

        r0 := @this: com.android.server.wm.TaskStack;

        r0.<com.android.server.wm.TaskStack: boolean mDimmingTag> = 1;

        return;
    }

    void startDimmingIfNeeded(com.android.server.wm.WindowStateAnimator)
    {
        com.android.server.wm.TaskStack r0;
        com.android.server.wm.WindowStateAnimator r1, r2;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.TaskStack;

        r1 := @parameter0: com.android.server.wm.WindowStateAnimator;

        r2 = r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator>;

        $z0 = r1.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceShown>;

        if $z0 == 0 goto label2;

        if r2 == null goto label1;

        $z1 = r2.<com.android.server.wm.WindowStateAnimator: boolean mSurfaceShown>;

        if $z1 == 0 goto label1;

        $i1 = r2.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        $i0 = r1.<com.android.server.wm.WindowStateAnimator: int mAnimLayer>;

        if $i1 >= $i0 goto label2;

     label1:
        r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator> = r1;

     label2:
        return;
    }

    void stopDimmingIfNeeded()
    {
        com.android.server.wm.TaskStack r0;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wm.TaskStack;

        $z0 = r0.<com.android.server.wm.TaskStack: boolean mDimmingTag>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.server.wm.TaskStack: boolean isDimming()>();

        if $z1 == 0 goto label1;

        r0.<com.android.server.wm.TaskStack: com.android.server.wm.WindowStateAnimator mDimWinAnimator> = null;

     label1:
        return;
    }

    void switchUser(int)
    {
        com.android.server.wm.TaskStack r0;
        int i0, i1, i2, $i3;
        com.android.server.wm.Task r1;
        java.util.ArrayList $r2, $r3, $r5, $r7;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wm.TaskStack;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $r3 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (com.android.server.wm.Task) $r4;

        $i3 = r1.<com.android.server.wm.Task: int mUserId>;

        if $i3 != i0 goto label2;

        $r5 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        $r7 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        i1 = i1 + -1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    boolean testDimmingTag()
    {
        com.android.server.wm.TaskStack r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.TaskStack;

        $z0 = r0.<com.android.server.wm.TaskStack: boolean mDimmingTag>;

        return $z0;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.TaskStack r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7;
        int $i0;
        java.util.ArrayList $r5;
        java.lang.String $r8;

        r0 := @this: com.android.server.wm.TaskStack;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{stackId=");

        $i0 = r0.<com.android.server.wm.TaskStack: int mStackId>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tasks=");

        $r5 = r0.<com.android.server.wm.TaskStack: java.util.ArrayList mTasks>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.TaskStack: int DEFAULT_DIM_DURATION> = 200;

        return;
    }
}
