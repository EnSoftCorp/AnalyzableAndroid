class com.android.server.content.SyncManager$3 extends android.content.BroadcastReceiver
{
    final com.android.server.content.SyncManager this$0;

    void <init>(com.android.server.content.SyncManager)
    {
        com.android.server.content.SyncManager$3 r0;
        com.android.server.content.SyncManager r1;

        r0 := @this: com.android.server.content.SyncManager$3;

        r1 := @parameter0: com.android.server.content.SyncManager;

        r0.<com.android.server.content.SyncManager$3: com.android.server.content.SyncManager this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.server.content.SyncManager$3 r0;
        android.content.Context r1;
        android.content.Intent r2;
        com.android.server.content.SyncManager $r3, $r6;
        android.net.ConnectivityManager $r4;
        boolean $z0;
        android.os.Bundle $r5;

        r0 := @this: com.android.server.content.SyncManager$3;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<com.android.server.content.SyncManager$3: com.android.server.content.SyncManager this$0>;

        $r4 = staticinvoke <com.android.server.content.SyncManager: android.net.ConnectivityManager access$300(com.android.server.content.SyncManager)>($r3);

        $z0 = virtualinvoke $r4.<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.server.content.SyncManager$3: com.android.server.content.SyncManager this$0>;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        virtualinvoke $r6.<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,long,long,boolean)>(null, -1, -1, null, $r5, 0L, 0L, 0);

     label1:
        return;
    }
}
