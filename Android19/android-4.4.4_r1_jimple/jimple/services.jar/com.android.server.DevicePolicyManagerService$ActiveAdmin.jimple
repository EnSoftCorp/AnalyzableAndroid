class com.android.server.DevicePolicyManagerService$ActiveAdmin extends java.lang.Object
{
    static final int DEF_KEYGUARD_FEATURES_DISABLED;
    static final int DEF_MAXIMUM_FAILED_PASSWORDS_FOR_WIPE;
    static final long DEF_MAXIMUM_TIME_TO_UNLOCK;
    static final int DEF_MINIMUM_PASSWORD_LENGTH;
    static final int DEF_MINIMUM_PASSWORD_LETTERS;
    static final int DEF_MINIMUM_PASSWORD_LOWER_CASE;
    static final int DEF_MINIMUM_PASSWORD_NON_LETTER;
    static final int DEF_MINIMUM_PASSWORD_NUMERIC;
    static final int DEF_MINIMUM_PASSWORD_SYMBOLS;
    static final int DEF_MINIMUM_PASSWORD_UPPER_CASE;
    static final long DEF_PASSWORD_EXPIRATION_DATE;
    static final long DEF_PASSWORD_EXPIRATION_TIMEOUT;
    static final int DEF_PASSWORD_HISTORY_LENGTH;
    boolean disableCamera;
    int disabledKeyguardFeatures;
    boolean encryptionRequested;
    java.lang.String globalProxyExclusionList;
    java.lang.String globalProxySpec;
    final android.app.admin.DeviceAdminInfo info;
    int maximumFailedPasswordsForWipe;
    long maximumTimeToUnlock;
    int minimumPasswordLength;
    int minimumPasswordLetters;
    int minimumPasswordLowerCase;
    int minimumPasswordNonLetter;
    int minimumPasswordNumeric;
    int minimumPasswordSymbols;
    int minimumPasswordUpperCase;
    long passwordExpirationDate;
    long passwordExpirationTimeout;
    int passwordHistoryLength;
    int passwordQuality;
    boolean specifiesGlobalProxy;

    void <init>(android.app.admin.DeviceAdminInfo)
    {
        com.android.server.DevicePolicyManagerService$ActiveAdmin r0;
        android.app.admin.DeviceAdminInfo r1;

        r0 := @this: com.android.server.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: android.app.admin.DeviceAdminInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordQuality> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters> = 1;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric> = 1;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols> = 1;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock> = 0L;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout> = 0L;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate> = 0L;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy> = 0;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec> = null;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList> = null;

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info> = r1;

        return;
    }

    void dump(java.lang.String, java.io.PrintWriter)
    {
        com.android.server.DevicePolicyManagerService$ActiveAdmin r0;
        java.lang.String r1, $r5, $r6, $r7, $r8, $r9, $r12;
        java.io.PrintWriter r2;
        java.util.ArrayList r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i15, $i16;
        android.app.admin.DeviceAdminInfo $r4;
        long $l12, $l13, $l14;
        boolean $z0, $z1, $z2;
        java.lang.Object $r10;
        android.app.admin.DeviceAdminInfo$PolicyInfo $r11;

        r0 := @this: com.android.server.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.PrintWriter;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("uid=");

        $i1 = virtualinvoke r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int getUid()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("policies:");

        $r4 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        r3 = virtualinvoke $r4.<android.app.admin.DeviceAdminInfo: java.util.ArrayList getUsedPolicies()>();

        if r3 == null goto label2;

        i0 = 0;

     label1:
        $i16 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i0 >= $i16 goto label2;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  ");

        $r10 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r11 = (android.app.admin.DeviceAdminInfo$PolicyInfo) $r10;

        $r12 = $r11.<android.app.admin.DeviceAdminInfo$PolicyInfo: java.lang.String tag>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("passwordQuality=0x");

        $i2 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordQuality>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i2);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordLength=");

        $i3 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("passwordHistoryLength=");

        $i4 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordUpperCase=");

        $i5 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordLowerCase=");

        $i6 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i6);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordLetters=");

        $i7 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i7);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordNumeric=");

        $i8 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordSymbols=");

        $i10 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i10);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("minimumPasswordNonLetter=");

        $i9 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i9);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("maximumTimeToUnlock=");

        $l12 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l12);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("maximumFailedPasswordsForWipe=");

        $i11 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i11);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("specifiesGlobalProxy=");

        $z0 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("passwordExpirationTimeout=");

        $l13 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l13);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("passwordExpirationDate=");

        $l14 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate>;

        virtualinvoke r2.<java.io.PrintWriter: void println(long)>($l14);

        $r6 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec>;

        if $r6 == null goto label3;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("globalProxySpec=");

        $r8 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

     label3:
        $r7 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList>;

        if $r7 == null goto label4;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("globalProxyEclusionList=");

        $r9 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r9);

     label4:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("encryptionRequested=");

        $z1 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("disableCamera=");

        $z2 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("disabledKeyguardFeatures=");

        $i15 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures>;

        virtualinvoke r2.<java.io.PrintWriter: void println(int)>($i15);

        return;
    }

    int getUid()
    {
        com.android.server.DevicePolicyManagerService$ActiveAdmin r0;
        android.app.admin.DeviceAdminInfo $r1;
        android.content.pm.ActivityInfo $r2;
        android.content.pm.ApplicationInfo $r3;
        int $i0;

        r0 := @this: com.android.server.DevicePolicyManagerService$ActiveAdmin;

        $r1 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        $r2 = virtualinvoke $r1.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>();

        $r3 = $r2.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int uid>;

        return $i0;
    }

    public android.os.UserHandle getUserHandle()
    {
        com.android.server.DevicePolicyManagerService$ActiveAdmin r0;
        android.os.UserHandle $r1;
        android.app.admin.DeviceAdminInfo $r2;
        android.content.pm.ActivityInfo $r3;
        android.content.pm.ApplicationInfo $r4;
        int $i0, $i1;

        r0 := @this: com.android.server.DevicePolicyManagerService$ActiveAdmin;

        $r1 = new android.os.UserHandle;

        $r2 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        $r3 = virtualinvoke $r2.<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>();

        $r4 = $r3.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i0 = $r4.<android.content.pm.ApplicationInfo: int uid>;

        $i1 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i0);

        specialinvoke $r1.<android.os.UserHandle: void <init>(int)>($i1);

        return $r1;
    }

    void readFromXml(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, $i2, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.lang.StringBuilder $r23, $r24, $r25;
        long $l4, $l5, $l7;
        android.app.admin.DeviceAdminInfo $r46;

        r0 := @this: com.android.server.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label24;

        if i1 != 3 goto label02;

        $i17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i17 <= i0 goto label24;

     label02:
        if i1 == 3 goto label01;

        if i1 == 4 goto label01;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r3 = "policies";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label04;

        $r46 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        virtualinvoke $r46.<android.app.admin.DeviceAdminInfo: void readPoliciesFromXml(org.xmlpull.v1.XmlPullParser)>(r1);

     label03:
        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label01;

     label04:
        $r4 = "password-quality";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label05;

        $r45 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i16 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r45);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordQuality> = $i16;

        goto label03;

     label05:
        $r5 = "min-password-length";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label06;

        $r42 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r42);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength> = $i13;

        goto label03;

     label06:
        $r6 = "password-history-length";

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label07;

        $r41 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r41);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength> = $i12;

        goto label03;

     label07:
        $r7 = "min-password-uppercase";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label08;

        $r44 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r44);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase> = $i15;

        goto label03;

     label08:
        $r8 = "min-password-lowercase";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label09;

        $r43 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i14 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r43);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase> = $i14;

        goto label03;

     label09:
        $r9 = "min-password-letters";

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label10;

        $r38 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r38);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters> = $i9;

        goto label03;

     label10:
        $r10 = "min-password-numeric";

        $z7 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label11;

        $r37 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r37);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric> = $i8;

        goto label03;

     label11:
        $r11 = "min-password-symbols";

        $z8 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z8 == 0 goto label12;

        $r40 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r40);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols> = $i11;

        goto label03;

     label12:
        $r12 = "min-password-nonletter";

        $z9 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label13;

        $r39 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r39);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter> = $i10;

        goto label03;

     label13:
        $r13 = "max-time-to-unlock";

        $z10 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z10 == 0 goto label14;

        $r33 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r33);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock> = $l7;

        goto label03;

     label14:
        $r14 = "max-failed-password-wipe";

        $z11 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z11 == 0 goto label15;

        $r32 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r32);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe> = $i6;

        goto label03;

     label15:
        $r16 = "specifies-global-proxy";

        $z13 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z13 == 0 goto label16;

        $r36 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z22 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r36);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy> = $z22;

        goto label03;

     label16:
        $r15 = "global-proxy-spec";

        $z12 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z12 == 0 goto label17;

        $r35 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec> = $r35;

        goto label03;

     label17:
        $r18 = "global-proxy-exclusion-list";

        $z15 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z15 == 0 goto label18;

        $r34 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList> = $r34;

        goto label03;

     label18:
        $r17 = "password-expiration-timeout";

        $z14 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z14 == 0 goto label19;

        $r30 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r30);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout> = $l4;

        goto label03;

     label19:
        $r20 = "password-expiration-date";

        $z17 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z17 == 0 goto label20;

        $r31 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r31);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate> = $l5;

        goto label03;

     label20:
        $r19 = "encryption-requested";

        $z16 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z16 == 0 goto label21;

        $r28 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z20 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r28);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested> = $z20;

        goto label03;

     label21:
        $r22 = "disable-camera";

        $z19 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z19 == 0 goto label22;

        $r29 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $z21 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r29);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera> = $z21;

        goto label03;

     label22:
        $r21 = "disable-keyguard-features";

        $z18 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z18 == 0 goto label23;

        $r26 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures> = $i2;

        goto label03;

     label23:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown admin tag: ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("DevicePolicyManagerService", $r27);

        goto label03;

     label24:
        return;
    }

    void writeToXml(org.xmlpull.v1.XmlSerializer) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.io.IOException
    {
        com.android.server.DevicePolicyManagerService$ActiveAdmin r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.app.admin.DeviceAdminInfo $r3;
        int $i0, $i3, $i8, $i9, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30;
        long $l1, $l4, $l6, $l10, $l11, $l13;
        byte $b2, $b5, $b7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r6, $r11, $r14, $r18, $r24, $r26, $r29, $r31, $r33, $r38, $r41, $r44, $r46, $r51, $r56, $r62, $r67, $r68, $r73, $r78, $r82;

        r0 := @this: com.android.server.DevicePolicyManagerService$ActiveAdmin;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "policies");

        $r3 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: android.app.admin.DeviceAdminInfo info>;

        virtualinvoke $r3.<android.app.admin.DeviceAdminInfo: void writePoliciesToXml(org.xmlpull.v1.XmlSerializer)>(r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "policies");

        $i0 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordQuality>;

        if $i0 == 0 goto label08;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "password-quality");

        $i14 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordQuality>;

        $r44 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r44);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "password-quality");

        $i20 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength>;

        if $i20 == 0 goto label01;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-length");

        $i30 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLength>;

        $r82 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i30);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r82);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-length");

     label01:
        $i19 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength>;

        if $i19 == 0 goto label02;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "password-history-length");

        $i28 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int passwordHistoryLength>;

        $r78 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i28);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r78);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "password-history-length");

     label02:
        $i16 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase>;

        if $i16 == 0 goto label03;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-uppercase");

        $i29 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordUpperCase>;

        $r68 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i29);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r68);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-uppercase");

     label03:
        $i15 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase>;

        if $i15 == 0 goto label04;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-lowercase");

        $i26 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLowerCase>;

        $r73 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i26);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r73);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-lowercase");

     label04:
        $i18 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters>;

        if $i18 == 1 goto label05;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-letters");

        $i27 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordLetters>;

        $r67 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i27);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r67);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-letters");

     label05:
        $i17 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric>;

        if $i17 == 1 goto label06;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-numeric");

        $i25 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNumeric>;

        $r62 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i25);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r62);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-numeric");

     label06:
        $i22 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols>;

        if $i22 == 1 goto label07;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-symbols");

        $i24 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordSymbols>;

        $r56 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i24);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r56);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-symbols");

     label07:
        $i23 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter>;

        if $i23 <= 0 goto label08;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "min-password-nonletter");

        $i21 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int minimumPasswordNonLetter>;

        $r51 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i21);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r51);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "min-password-nonletter");

     label08:
        $l1 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label09;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "max-time-to-unlock");

        $l13 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long maximumTimeToUnlock>;

        $r46 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l13);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r46);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "max-time-to-unlock");

     label09:
        $i3 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe>;

        if $i3 == 0 goto label10;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "max-failed-password-wipe");

        $i12 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int maximumFailedPasswordsForWipe>;

        $r41 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i12);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r41);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "max-failed-password-wipe");

     label10:
        $z0 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy>;

        if $z0 == 0 goto label12;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "specifies-global-proxy");

        $z5 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean specifiesGlobalProxy>;

        $r29 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r29);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "specifies_global_proxy");

        $r26 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec>;

        if $r26 == null goto label11;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "global-proxy-spec");

        $r38 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxySpec>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r38);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "global-proxy-spec");

     label11:
        $r33 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList>;

        if $r33 == null goto label12;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "global-proxy-exclusion-list");

        $r31 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: java.lang.String globalProxyExclusionList>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r31);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "global-proxy-exclusion-list");

     label12:
        $l4 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout>;

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label13;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "password-expiration-timeout");

        $l11 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationTimeout>;

        $r24 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l11);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r24);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "password-expiration-timeout");

     label13:
        $l6 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate>;

        $b7 = $l6 cmp 0L;

        if $b7 == 0 goto label14;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "password-expiration-date");

        $l10 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: long passwordExpirationDate>;

        $r18 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l10);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r18);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "password-expiration-date");

     label14:
        $z1 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested>;

        if $z1 == 0 goto label15;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "encryption-requested");

        $z4 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean encryptionRequested>;

        $r14 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r14);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "encryption-requested");

     label15:
        $z2 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera>;

        if $z2 == 0 goto label16;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disable-camera");

        $z3 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: boolean disableCamera>;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r11);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disable-camera");

     label16:
        $i8 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures>;

        if $i8 == 0 goto label17;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "disable-keyguard-features");

        $i9 = r0.<com.android.server.DevicePolicyManagerService$ActiveAdmin: int disabledKeyguardFeatures>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "value", $r6);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "disable-keyguard-features");

     label17:
        return;
    }

    public static void <clinit>()
    {
        <com.android.server.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_SYMBOLS> = 1;

        <com.android.server.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_NUMERIC> = 1;

        <com.android.server.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_NON_LETTER> = 0;

        <com.android.server.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_LOWER_CASE> = 0;

        <com.android.server.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_LETTERS> = 1;

        <com.android.server.DevicePolicyManagerService$ActiveAdmin: int DEF_MINIMUM_PASSWORD_LENGTH> = 0;

        <com.android.server.DevicePolicyManagerService$ActiveAdmin: long DEF_MAXIMUM_TIME_TO_UNLOCK> = 0L;

        <com.android.server.DevicePolicyManagerService$ActiveAdmin: int DEF_MAXIMUM_FAILED_PASSWORDS_FOR_WIPE> = 0;

        <com.android.server.DevicePolicyManagerService$ActiveAdmin: int DEF_KEYGUARD_FEATURES_DISABLED> = 0;

        return;
    }
}
