class com.android.server.BackupManagerService$PerformFullBackupTask extends com.android.server.BackupManagerService$ObbServiceClient implements java.lang.Runnable
{
    boolean mAllApps;
    java.lang.String mCurrentPassword;
    java.util.zip.DeflaterOutputStream mDeflater;
    java.lang.String mEncryptPassword;
    java.io.File mFilesDir;
    boolean mIncludeApks;
    boolean mIncludeObbs;
    boolean mIncludeShared;
    final boolean mIncludeSystem;
    java.util.concurrent.atomic.AtomicBoolean mLatchObject;
    java.io.File mManifestFile;
    android.app.backup.IFullBackupRestoreObserver mObserver;
    android.os.ParcelFileDescriptor mOutputFile;
    java.lang.String[] mPackages;
    final com.android.server.BackupManagerService this$0;

    void <init>(com.android.server.BackupManagerService, android.os.ParcelFileDescriptor, android.app.backup.IFullBackupRestoreObserver, boolean, boolean, boolean, java.lang.String, java.lang.String, boolean, boolean, java.lang.String[], java.util.concurrent.atomic.AtomicBoolean)
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        com.android.server.BackupManagerService r1;
        android.os.ParcelFileDescriptor r2;
        android.app.backup.IFullBackupRestoreObserver r3;
        boolean z0, z1, z2, z3, z4, $z5;
        java.lang.String r4, r5, $r11;
        java.lang.String[] r6;
        java.util.concurrent.atomic.AtomicBoolean r7;
        java.io.File $r8, $r9, $r10;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter0: com.android.server.BackupManagerService;

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        r3 := @parameter2: android.app.backup.IFullBackupRestoreObserver;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        r4 := @parameter6: java.lang.String;

        r5 := @parameter7: java.lang.String;

        z3 := @parameter8: boolean;

        z4 := @parameter9: boolean;

        r6 := @parameter10: java.lang.String[];

        r7 := @parameter11: java.util.concurrent.atomic.AtomicBoolean;

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0> = r1;

        specialinvoke r0.<com.android.server.BackupManagerService$ObbServiceClient: void <init>(com.android.server.BackupManagerService)>(r1);

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.os.ParcelFileDescriptor mOutputFile> = r2;

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver> = r3;

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mIncludeApks> = z0;

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mIncludeObbs> = z1;

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mIncludeShared> = z2;

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mAllApps> = z3;

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mIncludeSystem> = z4;

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String[] mPackages> = r6;

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String mCurrentPassword> = r4;

        if r5 == null goto label1;

        $r11 = "";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z5 == 0 goto label3;

     label1:
        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String mEncryptPassword> = r4;

     label2:
        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject> = r7;

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>("/data/system");

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.io.File mFilesDir> = $r8;

        $r9 = new java.io.File;

        $r10 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.io.File mFilesDir>;

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, "_manifest");

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.io.File mManifestFile> = $r9;

        return;

     label3:
        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String mEncryptPassword> = r5;

        goto label2;
    }

    static void access$1100(com.android.server.BackupManagerService$PerformFullBackupTask, android.content.pm.PackageInfo, java.io.File, boolean) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        android.content.pm.PackageInfo r1;
        java.io.File r2;
        boolean z0;

        r0 := @parameter0: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter1: android.content.pm.PackageInfo;

        r2 := @parameter2: java.io.File;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void writeAppManifest(android.content.pm.PackageInfo,java.io.File,boolean)>(r1, r2, z0);

        return;
    }

    static void access$1200(com.android.server.BackupManagerService$PerformFullBackupTask, android.content.pm.PackageInfo, android.app.backup.BackupDataOutput)
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        android.content.pm.PackageInfo r1;
        android.app.backup.BackupDataOutput r2;

        r0 := @parameter0: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter1: android.content.pm.PackageInfo;

        r2 := @parameter2: android.app.backup.BackupDataOutput;

        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void writeApkToBackup(android.content.pm.PackageInfo,android.app.backup.BackupDataOutput)>(r1, r2);

        return;
    }

    private void backupOnePackage(android.content.pm.PackageInfo, java.io.OutputStream) throws android.os.RemoteException
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        android.content.pm.PackageInfo r1;
        java.io.OutputStream r2;
        android.app.IBackupAgent r3;
        android.os.ParcelFileDescriptor[] r4;
        java.lang.Throwable r5, $r52;
        java.io.IOException r7, r15, $r51, $r53, $r54, $r55, $r57;
        java.lang.String r9, r10, r12, $r18, $r22, $r26, $r28, $r29, $r38, $r40, $r48, $r50, $r64, $r65;
        boolean z0, z1, z2, $z3, $z4;
        android.content.pm.ApplicationInfo r11, $r20;
        android.os.ParcelFileDescriptor r13, $r33, $r35, $r42, $r45, $r46, $r47, $r58, $r59, $r60, $r61, $r62, $r63, $r68, $r69;
        int i0, $i4, $i5, $i6, $i7, $i10, $i11;
        com.android.server.BackupManagerService$PerformFullBackupTask$FullBackupRunner r14, $r30;
        java.lang.StringBuilder $r17, $r19, $r21, $r23, $r25, $r27, $r36, $r39, $r41, $r43, $r44, $r49, $r56, $r66, $r67;
        com.android.server.BackupManagerService $r24, $r31, $r32, $r37;
        java.lang.Thread $r34;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 := @parameter1: java.io.OutputStream;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Binding to full backup agent : ");

        $r18 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r22);

        $r24 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r20 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r3 = virtualinvoke $r24.<com.android.server.BackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>($r20, 1);

        if r3 == null goto label38;

        r4 = null;

     label01:
        r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>();

        r11 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r29 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        z0 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("com.android.sharedstoragebackup");

        $z3 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mIncludeApks>;

        if $z3 == 0 goto label15;

     label02:
        if z0 != 0 goto label15;

     label03:
        $i4 = r11.<android.content.pm.ApplicationInfo: int flags>;

        $i5 = 536870912 & $i4;

        if $i5 != 0 goto label15;

        $i6 = r11.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = 1 & $i6;

        if $i7 == 0 goto label41;

        $i11 = r11.<android.content.pm.ApplicationInfo: int flags>;

        $i10 = 128 & $i11;

        if $i10 == 0 goto label15;

     label04:
        goto label41;

     label05:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void sendOnBackupPackage(java.lang.String)>(r12);

        $r31 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        i0 = virtualinvoke $r31.<com.android.server.BackupManagerService: int generateToken()>();

        r13 = r4[1];

     label06:
        if z0 != 0 goto label43;

        z2 = 1;

     label07:
        $r30 = new com.android.server.BackupManagerService$PerformFullBackupTask$FullBackupRunner;

        specialinvoke $r30.<com.android.server.BackupManagerService$PerformFullBackupTask$FullBackupRunner: void <init>(com.android.server.BackupManagerService$PerformFullBackupTask,android.content.pm.PackageInfo,android.app.IBackupAgent,android.os.ParcelFileDescriptor,int,boolean,boolean)>(r0, r1, r3, r13, i0, z1, z2);

        r14 = $r30;

        $r35 = r4[1];

        virtualinvoke $r35.<android.os.ParcelFileDescriptor: void close()>();

        r4[1] = null;

        $r34 = new java.lang.Thread;

        specialinvoke $r34.<java.lang.Thread: void <init>(java.lang.Runnable)>(r14);

        virtualinvoke $r34.<java.lang.Thread: void start()>();

     label08:
        $r32 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r33 = r4[0];

        staticinvoke <com.android.server.BackupManagerService: void access$1000(com.android.server.BackupManagerService,android.os.ParcelFileDescriptor,java.io.OutputStream)>($r32, $r33, r2);

     label09:
        $r37 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $z4 = virtualinvoke $r37.<com.android.server.BackupManagerService: boolean waitUntilOperationComplete(int)>(i0);

        if $z4 != 0 goto label30;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Full backup failed on package ");

        $r48 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", $r50);

     label10:
        virtualinvoke r2.<java.io.OutputStream: void flush()>();

     label11:
        if r4 == null goto label14;

     label12:
        $r45 = r4[0];

        if $r45 == null goto label13;

        $r42 = r4[0];

        virtualinvoke $r42.<android.os.ParcelFileDescriptor: void close()>();

     label13:
        $r46 = r4[1];

        if $r46 == null goto label14;

        $r47 = r4[1];

        virtualinvoke $r47.<android.os.ParcelFileDescriptor: void close()>();

     label14:
        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void tearDown(android.content.pm.PackageInfo)>(r1);

        return;

     label15:
        z1 = 0;

        goto label42;

     label16:
        r12 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

     label17:
        goto label05;

     label18:
        $r55 := @caughtexception;

        r15 = $r55;

     label19:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Caught exception reading from agent", r15);

     label20:
        goto label09;

     label21:
        $r57 := @caughtexception;

        r7 = $r57;

     label22:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error backing up ");

        $r65 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r64 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", $r64, r7);

     label23:
        virtualinvoke r2.<java.io.OutputStream: void flush()>();

     label24:
        if r4 == null goto label14;

     label25:
        $r62 = r4[0];

        if $r62 == null goto label26;

        $r69 = r4[0];

        virtualinvoke $r69.<android.os.ParcelFileDescriptor: void close()>();

     label26:
        $r63 = r4[1];

        if $r63 == null goto label14;

        $r68 = r4[1];

        virtualinvoke $r68.<android.os.ParcelFileDescriptor: void close()>();

     label27:
        goto label14;

     label28:
        $r53 := @caughtexception;

        r9 = "BackupManagerService";

        r10 = "Error bringing down backup stack";

     label29:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>(r9, r10);

        goto label14;

     label30:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Full package backup success: ");

        $r40 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", $r38);

     label31:
        goto label10;

     label32:
        $r52 := @caughtexception;

        r5 = $r52;

     label33:
        virtualinvoke r2.<java.io.OutputStream: void flush()>();

     label34:
        if r4 == null goto label37;

     label35:
        $r59 = r4[0];

        if $r59 == null goto label36;

        $r60 = r4[0];

        virtualinvoke $r60.<android.os.ParcelFileDescriptor: void close()>();

     label36:
        $r58 = r4[1];

        if $r58 == null goto label37;

        $r61 = r4[1];

        virtualinvoke $r61.<android.os.ParcelFileDescriptor: void close()>();

     label37:
        throw r5;

     label38:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to bind to full agent for ");

        $r28 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r26);

        goto label14;

     label39:
        $r54 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Error bringing down backup stack");

        goto label37;

     label40:
        $r51 := @caughtexception;

        r9 = "BackupManagerService";

        r10 = "Error bringing down backup stack";

        goto label29;

     label41:
        z1 = 1;

     label42:
        if z0 == 0 goto label16;

        r12 = "Shared storage";

        goto label05;

     label43:
        z2 = 0;

        goto label07;

        catch java.io.IOException from label01 to label02 with label21;
        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.io.IOException from label03 to label04 with label21;
        catch java.lang.Throwable from label03 to label04 with label32;
        catch java.io.IOException from label05 to label06 with label21;
        catch java.lang.Throwable from label05 to label06 with label32;
        catch java.io.IOException from label07 to label08 with label21;
        catch java.lang.Throwable from label07 to label08 with label32;
        catch java.io.IOException from label08 to label09 with label18;
        catch java.lang.Throwable from label08 to label09 with label32;
        catch java.io.IOException from label09 to label10 with label21;
        catch java.lang.Throwable from label09 to label10 with label32;
        catch java.io.IOException from label10 to label11 with label40;
        catch java.io.IOException from label12 to label13 with label40;
        catch java.io.IOException from label13 to label14 with label40;
        catch java.io.IOException from label16 to label17 with label21;
        catch java.lang.Throwable from label16 to label17 with label32;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Throwable from label19 to label20 with label32;
        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.io.IOException from label23 to label24 with label28;
        catch java.io.IOException from label25 to label26 with label28;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label30 to label31 with label21;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.io.IOException from label33 to label34 with label39;
        catch java.io.IOException from label35 to label36 with label39;
        catch java.io.IOException from label36 to label37 with label39;
    }

    private java.io.OutputStream emitAesBackupHeader(java.lang.StringBuilder, java.io.OutputStream) throws java.lang.Exception
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        java.lang.StringBuilder r1;
        java.io.OutputStream r2, r57;
        byte[] r3, r5, r6, r10, r12, r13, r15, r16, $r42, $r49;
        javax.crypto.SecretKey r4;
        javax.crypto.Cipher r7, r11;
        javax.crypto.spec.SecretKeySpec r8, r51;
        javax.crypto.CipherOutputStream r9, r52;
        java.io.ByteArrayOutputStream r14, r53;
        java.io.DataOutputStream r17, r54;
        com.android.server.BackupManagerService $r18, $r19, $r22, $r23, $r26, $r30, $r39, $r43, $r46;
        java.lang.String $r20, $r27, $r31, $r38, $r47;
        java.security.SecureRandom $r21;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.security.Key r55, r56;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter0: java.lang.StringBuilder;

        r2 := @parameter1: java.io.OutputStream;

        $r18 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r3 = staticinvoke <com.android.server.BackupManagerService: byte[] access$1400(com.android.server.BackupManagerService,int)>($r18, 512);

        $r19 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r20 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String mEncryptPassword>;

        r4 = staticinvoke <com.android.server.BackupManagerService: javax.crypto.SecretKey access$1500(com.android.server.BackupManagerService,java.lang.String,java.lang.String,byte[],int)>($r19, "PBKDF2WithHmacSHA1", $r20, r3, 10000);

        r5 = newarray (byte)[32];

        $r23 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r21 = staticinvoke <com.android.server.BackupManagerService: java.security.SecureRandom access$1600(com.android.server.BackupManagerService)>($r23);

        virtualinvoke $r21.<java.security.SecureRandom: void nextBytes(byte[])>(r5);

        $r22 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r6 = staticinvoke <com.android.server.BackupManagerService: byte[] access$1400(com.android.server.BackupManagerService,int)>($r22, 512);

        r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        r51 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke r51.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, "AES");

        r8 = r51;

        r55 = (java.security.Key) r8;

        virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, r55);

        r52 = new javax.crypto.CipherOutputStream;

        specialinvoke r52.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r2, r7);

        r9 = r52;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AES-256");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r26 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r27 = staticinvoke <com.android.server.BackupManagerService: java.lang.String access$1700(com.android.server.BackupManagerService,byte[])>($r26, r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r30 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r31 = staticinvoke <com.android.server.BackupManagerService: java.lang.String access$1700(com.android.server.BackupManagerService,byte[])>($r30, r6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(10000);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        r56 = (java.security.Key) r4;

        virtualinvoke r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, r56);

        r10 = virtualinvoke r11.<javax.crypto.Cipher: byte[] getIV()>();

        $r39 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r38 = staticinvoke <com.android.server.BackupManagerService: java.lang.String access$1700(com.android.server.BackupManagerService,byte[])>($r39, r10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        r13 = virtualinvoke r7.<javax.crypto.Cipher: byte[] getIV()>();

        r12 = virtualinvoke r8.<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>();

        $r43 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r42 = virtualinvoke r8.<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>();

        r15 = staticinvoke <com.android.server.BackupManagerService: byte[] access$1800(com.android.server.BackupManagerService,java.lang.String,byte[],byte[],int)>($r43, "PBKDF2WithHmacSHA1", $r42, r6, 10000);

        r53 = new java.io.ByteArrayOutputStream;

        $i4 = lengthof r13;

        $i3 = lengthof r12;

        $i0 = $i4 + $i3;

        $i5 = lengthof r15;

        $i1 = $i0 + $i5;

        $i2 = 3 + $i1;

        specialinvoke r53.<java.io.ByteArrayOutputStream: void <init>(int)>($i2);

        r14 = r53;

        r54 = new java.io.DataOutputStream;

        specialinvoke r54.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r14);

        r17 = r54;

        $i6 = lengthof r13;

        virtualinvoke r17.<java.io.DataOutputStream: void writeByte(int)>($i6);

        virtualinvoke r17.<java.io.DataOutputStream: void write(byte[])>(r13);

        $i7 = lengthof r12;

        virtualinvoke r17.<java.io.DataOutputStream: void writeByte(int)>($i7);

        virtualinvoke r17.<java.io.DataOutputStream: void write(byte[])>(r12);

        $i8 = lengthof r15;

        virtualinvoke r17.<java.io.DataOutputStream: void writeByte(int)>($i8);

        virtualinvoke r17.<java.io.DataOutputStream: void write(byte[])>(r15);

        virtualinvoke r17.<java.io.DataOutputStream: void flush()>();

        $r49 = virtualinvoke r14.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r16 = virtualinvoke r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r49);

        $r46 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r47 = staticinvoke <com.android.server.BackupManagerService: java.lang.String access$1700(com.android.server.BackupManagerService,byte[])>($r46, r16);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        r57 = (java.io.OutputStream) r9;

        return r57;
    }

    private void finalizeBackup(java.io.OutputStream)
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        java.io.OutputStream r1;
        byte[] $r3;
        java.io.IOException $r4;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter0: java.io.OutputStream;

     label1:
        $r3 = newarray (byte)[1024];

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r3);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Error attempting to finalize backup stream");

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void tearDown(android.content.pm.PackageInfo)
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        android.content.pm.PackageInfo r1;
        android.content.pm.ApplicationInfo r2;
        com.android.server.BackupManagerService $r4, $r6;
        android.app.IActivityManager $r5, $r7;
        int $i0, $i1, $i2;
        java.lang.String $r8;
        android.os.RemoteException $r9;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter0: android.content.pm.PackageInfo;

        if r1 == null goto label2;

        r2 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        if r2 == null goto label2;

     label1:
        $r4 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r5 = staticinvoke <com.android.server.BackupManagerService: android.app.IActivityManager access$800(com.android.server.BackupManagerService)>($r4);

        interfaceinvoke $r5.<android.app.IActivityManager: void unbindBackupAgent(android.content.pm.ApplicationInfo)>(r2);

        $i0 = r2.<android.content.pm.ApplicationInfo: int uid>;

        if $i0 == 1000 goto label2;

        $i1 = r2.<android.content.pm.ApplicationInfo: int uid>;

        if $i1 == 1001 goto label2;

        $r6 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r7 = staticinvoke <com.android.server.BackupManagerService: android.app.IActivityManager access$800(com.android.server.BackupManagerService)>($r6);

        $r8 = r2.<android.content.pm.ApplicationInfo: java.lang.String processName>;

        $i2 = r2.<android.content.pm.ApplicationInfo: int uid>;

        interfaceinvoke $r7.<android.app.IActivityManager: void killApplicationProcess(java.lang.String,int)>($r8, $i2);

     label2:
        return;

     label3:
        $r9 := @caughtexception;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Lost app trying to shut down");

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void writeApkToBackup(android.content.pm.PackageInfo, android.app.backup.BackupDataOutput)
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        android.content.pm.PackageInfo r1;
        android.app.backup.BackupDataOutput r2;
        java.lang.String r3, r4, r8, $r12, $r13, $r16, $r17;
        android.os.Environment$UserEnvironment r5, $r14;
        java.io.File r6, r9, $r11;
        java.io.File[] r7, $r15;
        int i0, i1;
        android.content.pm.ApplicationInfo $r10;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 := @parameter1: android.app.backup.BackupDataOutput;

        $r10 = r1.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r3 = $r10.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r11 = new java.io.File;

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>(r3);

        r4 = virtualinvoke $r11.<java.io.File: java.lang.String getParent()>();

        $r12 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        staticinvoke <android.app.backup.FullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.BackupDataOutput)>($r12, "a", null, r4, r3, r2);

        $r14 = new android.os.Environment$UserEnvironment;

        specialinvoke $r14.<android.os.Environment$UserEnvironment: void <init>(int)>(0);

        r5 = $r14;

        $r13 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r15 = virtualinvoke r5.<android.os.Environment$UserEnvironment: java.io.File[] buildExternalStorageAppObbDirs(java.lang.String)>($r13);

        r6 = $r15[0];

        if r6 == null goto label2;

        r7 = virtualinvoke r6.<java.io.File: java.io.File[] listFiles()>();

        if r7 == null goto label2;

        r8 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>();

        i0 = lengthof r7;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r9 = r7[i1];

        $r16 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r17 = virtualinvoke r9.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.app.backup.FullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.BackupDataOutput)>($r16, "obb", null, r8, $r17, r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void writeAppManifest(android.content.pm.PackageInfo, java.io.File, boolean) throws java.io.IOException
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        android.content.pm.PackageInfo r1;
        java.io.File r2;
        boolean z0;
        java.lang.StringBuilder r3, $r9;
        android.util.StringBuilderPrinter r4, $r10;
        java.lang.String r5, r6, $r11, $r12, $r13, $r14, $r17, $r20, $r21, $r25;
        android.content.pm.Signature[] r7, $r18, $r19;
        int i0, i1, $i2, $i3, $i4;
        java.io.FileOutputStream r8, $r22;
        android.content.pm.PackageManager $r15;
        com.android.server.BackupManagerService $r16;
        android.content.pm.Signature $r23;
        byte[] $r24;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter0: android.content.pm.PackageInfo;

        r2 := @parameter1: java.io.File;

        z0 := @parameter2: boolean;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>(4096);

        r3 = $r9;

        $r10 = new android.util.StringBuilderPrinter;

        specialinvoke $r10.<android.util.StringBuilderPrinter: void <init>(java.lang.StringBuilder)>(r3);

        r4 = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        virtualinvoke r4.<android.util.StringBuilderPrinter: void println(java.lang.String)>($r11);

        $r12 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        virtualinvoke r4.<android.util.StringBuilderPrinter: void println(java.lang.String)>($r12);

        $i2 = r1.<android.content.pm.PackageInfo: int versionCode>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke r4.<android.util.StringBuilderPrinter: void println(java.lang.String)>($r13);

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke r4.<android.util.StringBuilderPrinter: void println(java.lang.String)>($r14);

        $r16 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r15 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r16);

        $r17 = r1.<android.content.pm.PackageInfo: java.lang.String packageName>;

        r5 = virtualinvoke $r15.<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>($r17);

        if r5 == null goto label4;

     label1:
        virtualinvoke r4.<android.util.StringBuilderPrinter: void println(java.lang.String)>(r5);

        if z0 == 0 goto label5;

        r6 = "1";

     label2:
        virtualinvoke r4.<android.util.StringBuilderPrinter: void println(java.lang.String)>(r6);

        $r19 = r1.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        if $r19 != null goto label6;

        virtualinvoke r4.<android.util.StringBuilderPrinter: void println(java.lang.String)>("0");

     label3:
        $r22 = new java.io.FileOutputStream;

        specialinvoke $r22.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        r8 = $r22;

        $r21 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = virtualinvoke $r21.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r8.<java.io.FileOutputStream: void write(byte[])>($r24);

        virtualinvoke r8.<java.io.FileOutputStream: void close()>();

        return;

     label4:
        r5 = "";

        goto label1;

     label5:
        r6 = "0";

        goto label2;

     label6:
        $r18 = r1.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $i4 = lengthof $r18;

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        virtualinvoke r4.<android.util.StringBuilderPrinter: void println(java.lang.String)>($r20);

        r7 = r1.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        i0 = lengthof r7;

        i1 = 0;

     label7:
        if i1 >= i0 goto label3;

        $r23 = r7[i1];

        $r25 = virtualinvoke $r23.<android.content.pm.Signature: java.lang.String toCharsString()>();

        virtualinvoke r4.<android.util.StringBuilderPrinter: void println(java.lang.String)>($r25);

        i1 = i1 + 1;

        goto label7;
    }

    public void run()
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        java.util.List r1;
        com.android.server.BackupManagerService$FullBackupObbConnection r2, $r45;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.io.FileOutputStream r3, $r48;
        java.io.OutputStream r4, r28, r29, r34;
        android.content.pm.PackageInfo r5, r37, r41, r46, $r90;
        java.lang.Throwable r6, r8, r10, r14, r15, r17, r19, r25, r27, r31, r33, r36, r39, $r96, $r99, $r100, $r105, $r115, $r129, $r131, $r132, $r143, $r150, $r152, $r153, $r154;
        java.lang.Object r7, r12, r18, r24, r30, r38, $r61, $r82, $r86, $r91;
        java.util.concurrent.atomic.AtomicBoolean r9, r13, r20, r26, r32, r35, $r63, $r64, $r74, $r75, $r107, $r108, $r117, $r120, $r133, $r134, $r141, $r142;
        java.lang.Exception r11, r22, $r128, $r140, $r151;
        android.os.PowerManager$WakeLock r16, $r114;
        java.lang.StringBuilder r21, $r52, $r67, $r68, $r69, $r97, $r102, $r103, $r104;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String r23, r40, $r49, $r53, $r59, $r66, $r81, $r85, $r93, $r98;
        java.lang.String[] r42, $r51;
        java.util.ArrayList $r43;
        com.android.server.BackupManagerService $r44, $r54, $r55, $r57, $r62, $r65, $r71, $r73, $r84, $r92, $r94, $r106, $r109, $r111, $r118, $r122, $r123, $r125, $r126, $r135, $r137, $r139, $r146;
        android.os.ParcelFileDescriptor $r47, $r58, $r79, $r113, $r121, $r127, $r138;
        java.io.FileDescriptor $r50;
        android.util.SparseArray $r56, $r72, $r110, $r119, $r124, $r136;
        byte[] $r60;
        java.lang.RuntimeException $r70;
        android.content.pm.PackageManager $r76, $r88, $r95;
        java.util.zip.DeflaterOutputStream $r77;
        java.util.zip.Deflater $r78;
        android.content.pm.ApplicationInfo $r80, $r83, $r87, $r89;
        android.content.pm.PackageManager$NameNotFoundException $r101, $r149;
        android.os.RemoteException $r112;
        java.io.IOException $r116, $r130, $r144, $r145, $r147, $r148;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("BackupManagerService", "--- Performing full-dataset backup ---");

        $r43 = new java.util.ArrayList;

        specialinvoke $r43.<java.util.ArrayList: void <init>()>();

        r1 = $r43;

        $r45 = new com.android.server.BackupManagerService$FullBackupObbConnection;

        $r44 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        specialinvoke $r45.<com.android.server.BackupManagerService$FullBackupObbConnection: void <init>(com.android.server.BackupManagerService)>($r44);

        r2 = $r45;

        virtualinvoke r2.<com.android.server.BackupManagerService$FullBackupObbConnection: void establish()>();

        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void sendStartBackup()>();

        $z2 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mAllApps>;

        if $z2 == 0 goto label003;

        $r94 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r88 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r94);

        r1 = virtualinvoke $r88.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(64);

        $z6 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mIncludeSystem>;

        if $z6 != 0 goto label003;

        i6 = 0;

     label001:
        $i13 = interfaceinvoke r1.<java.util.List: int size()>();

        if i6 >= $i13 goto label003;

        $r91 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i6);

        $r90 = (android.content.pm.PackageInfo) $r91;

        $r89 = $r90.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i14 = $r89.<android.content.pm.ApplicationInfo: int flags>;

        $i15 = 1 & $i14;

        if $i15 == 0 goto label002;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i6);

        goto label001;

     label002:
        i6 = i6 + 1;

        goto label001;

     label003:
        $r51 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String[] mPackages>;

        if $r51 == null goto label008;

        r42 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String[] mPackages>;

        i4 = lengthof r42;

        i5 = 0;

     label004:
        if i5 >= i4 goto label008;

        r40 = r42[i5];

     label005:
        $r92 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r95 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r92);

        r46 = virtualinvoke $r95.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r40, 64);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r46);

     label006:
        i5 = i5 + 1;

        goto label004;

     label007:
        $r101 := @caughtexception;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown package ");

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        $r97 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skipping");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", $r98);

        goto label006;

     label008:
        i0 = 0;

     label009:
        $i8 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i8 goto label012;

        $r82 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r41 = (android.content.pm.PackageInfo) $r82;

        $r83 = r41.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i10 = $r83.<android.content.pm.ApplicationInfo: int flags>;

        $i11 = 32768 & $i10;

        if $i11 == 0 goto label010;

        $r93 = r41.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z7 = virtualinvoke $r93.<java.lang.String: boolean equals(java.lang.Object)>("com.android.sharedstoragebackup");

        if $z7 == 0 goto label011;

     label010:
        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i0);

        goto label009;

     label011:
        i0 = i0 + 1;

        goto label009;

     label012:
        i1 = 0;

     label013:
        $i7 = interfaceinvoke r1.<java.util.List: int size()>();

        if i1 >= $i7 goto label015;

        $r86 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r37 = (android.content.pm.PackageInfo) $r86;

        $r87 = r37.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $i9 = $r87.<android.content.pm.ApplicationInfo: int uid>;

        if $i9 >= 10000 goto label014;

        $r80 = r37.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r81 = $r80.<android.content.pm.ApplicationInfo: java.lang.String backupAgentName>;

        if $r81 != null goto label014;

        interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(i1);

        goto label013;

     label014:
        i1 = i1 + 1;

        goto label013;

     label015:
        $r48 = new java.io.FileOutputStream;

        $r47 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.os.ParcelFileDescriptor mOutputFile>;

        $r50 = virtualinvoke $r47.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r48.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r50);

        r3 = $r48;

        r4 = null;

        r5 = null;

     label016:
        $r49 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String mEncryptPassword>;

        if $r49 == null goto label027;

        $r85 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String mEncryptPassword>;

        $i12 = virtualinvoke $r85.<java.lang.String: int length()>();

        if $i12 <= 0 goto label027;

     label017:
        z0 = 1;

     label018:
        $r54 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r53 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.lang.String mCurrentPassword>;

        $z3 = staticinvoke <com.android.server.BackupManagerService: boolean access$1300(com.android.server.BackupManagerService,java.lang.String)>($r54, $r53);

        if $z3 != 0 goto label028;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "Backup password mismatch; aborting");

     label019:
        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void tearDown(android.content.pm.PackageInfo)>(null);

        goto label020;

     label020:
        $r79 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.os.ParcelFileDescriptor mOutputFile>;

        virtualinvoke $r79.<android.os.ParcelFileDescriptor: void close()>();

     label021:
        $r71 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r38 = $r71.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r38;

     label022:
        $r73 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r72 = $r73.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r72.<android.util.SparseArray: void clear()>();

        exitmonitor r38;

     label023:
        r35 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r35;

     label024:
        $r75 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r75.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r74 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r74.<java.lang.Object: void notifyAll()>();

        exitmonitor r35;

     label025:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void sendEndBackup()>();

        virtualinvoke r2.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full backup pass complete.");

        $r84 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r16 = $r84.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

     label026:
        virtualinvoke r16.<android.os.PowerManager$WakeLock: void release()>();

        return;

     label027:
        z0 = 0;

        goto label018;

     label028:
        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>(int)>(1024);

        r21 = $r52;

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANDROID BACKUP\n");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2);

     label029:
        r23 = "\n1\n";

     label030:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

     label031:
        if z0 == 0 goto label055;

     label032:
        r34 = specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.io.OutputStream emitAesBackupHeader(java.lang.StringBuilder,java.io.OutputStream)>(r21, r3);

     label033:
        r29 = r34;

     label034:
        $r59 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r60 = virtualinvoke $r59.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[])>($r60);

     label035:
        r4 = null;

        r5 = null;

     label036:
        $r77 = new java.util.zip.DeflaterOutputStream;

        $r78 = new java.util.zip.Deflater;

        specialinvoke $r78.<java.util.zip.Deflater: void <init>(int)>(9);

        specialinvoke $r77.<java.util.zip.DeflaterOutputStream: void <init>(java.io.OutputStream,java.util.zip.Deflater,boolean)>(r29, $r78, 1);

        r28 = $r77;

     label037:
        r4 = r28;

     label038:
        z1 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mIncludeShared>;

     label039:
        r5 = null;

        if z1 == 0 goto label041;

     label040:
        $r65 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r76 = staticinvoke <com.android.server.BackupManagerService: android.content.pm.PackageManager access$600(com.android.server.BackupManagerService)>($r65);

        r5 = virtualinvoke $r76.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>("com.android.sharedstoragebackup", 0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r5);

     label041:
        i3 = interfaceinvoke r1.<java.util.List: int size()>();

     label042:
        i2 = 0;

     label043:
        if i2 >= i3 goto label080;

     label044:
        $r61 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r5 = (android.content.pm.PackageInfo) $r61;

        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void backupOnePackage(android.content.pm.PackageInfo,java.io.OutputStream)>(r5, r4);

        $z5 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: boolean mIncludeObbs>;

        if $z5 == 0 goto label079;

        $z4 = virtualinvoke r2.<com.android.server.BackupManagerService$FullBackupObbConnection: boolean backupObbs(android.content.pm.PackageInfo,java.io.OutputStream)>(r5, r4);

        if $z4 != 0 goto label079;

        $r70 = new java.lang.RuntimeException;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure writing OBB stack for ");

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r70.<java.lang.RuntimeException: void <init>(java.lang.String)>($r66);

        throw $r70;

     label045:
        $r112 := @caughtexception;

     label046:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "App died during full backup");

     label047:
        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void tearDown(android.content.pm.PackageInfo)>(r5);

        if r4 == null goto label049;

     label048:
        virtualinvoke r4.<java.io.OutputStream: void close()>();

     label049:
        $r113 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.os.ParcelFileDescriptor mOutputFile>;

        virtualinvoke $r113.<android.os.ParcelFileDescriptor: void close()>();

     label050:
        $r109 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r18 = $r109.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r18;

     label051:
        $r111 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r110 = $r111.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r110.<android.util.SparseArray: void clear()>();

        exitmonitor r18;

     label052:
        r20 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r20;

     label053:
        $r108 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r108.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r107 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r107.<java.lang.Object: void notifyAll()>();

        exitmonitor r20;

     label054:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void sendEndBackup()>();

        virtualinvoke r2.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full backup pass complete.");

        $r106 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r16 = $r106.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        goto label026;

     label055:
        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("none\n");

     label056:
        r29 = r3;

        goto label034;

     label057:
        $r140 := @caughtexception;

        r22 = $r140;

     label058:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Unable to emit archive header", r22);

     label059:
        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void tearDown(android.content.pm.PackageInfo)>(null);

        goto label060;

     label060:
        $r138 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.os.ParcelFileDescriptor mOutputFile>;

        virtualinvoke $r138.<android.os.ParcelFileDescriptor: void close()>();

     label061:
        $r137 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r24 = $r137.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r24;

     label062:
        $r135 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r136 = $r135.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r136.<android.util.SparseArray: void clear()>();

        exitmonitor r24;

     label063:
        r26 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r26;

     label064:
        $r133 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r133.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r134 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r134.<java.lang.Object: void notifyAll()>();

        exitmonitor r26;

     label065:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void sendEndBackup()>();

        virtualinvoke r2.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full backup pass complete.");

        $r146 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r16 = $r146.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        goto label026;

     label066:
        $r149 := @caughtexception;

     label067:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BackupManagerService", "Unable to find shared-storage backup handler");

     label068:
        goto label041;

     label069:
        $r128 := @caughtexception;

        r11 = $r128;

     label070:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BackupManagerService", "Internal exception during full backup", r11);

     label071:
        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void tearDown(android.content.pm.PackageInfo)>(r5);

        if r4 == null goto label073;

     label072:
        virtualinvoke r4.<java.io.OutputStream: void close()>();

     label073:
        $r127 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.os.ParcelFileDescriptor mOutputFile>;

        virtualinvoke $r127.<android.os.ParcelFileDescriptor: void close()>();

     label074:
        $r126 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r12 = $r126.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r12;

     label075:
        $r125 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r124 = $r125.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r124.<android.util.SparseArray: void clear()>();

        exitmonitor r12;

     label076:
        r13 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r13;

     label077:
        $r141 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r141.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r142 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r142.<java.lang.Object: void notifyAll()>();

        exitmonitor r13;

     label078:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void sendEndBackup()>();

        virtualinvoke r2.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full backup pass complete.");

        $r139 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r16 = $r139.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        goto label026;

     label079:
        i2 = i2 + 1;

        goto label043;

     label080:
        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void finalizeBackup(java.io.OutputStream)>(r4);

     label081:
        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void tearDown(android.content.pm.PackageInfo)>(r5);

        if r4 == null goto label083;

     label082:
        virtualinvoke r4.<java.io.OutputStream: void close()>();

     label083:
        $r58 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.os.ParcelFileDescriptor mOutputFile>;

        virtualinvoke $r58.<android.os.ParcelFileDescriptor: void close()>();

     label084:
        $r57 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r30 = $r57.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r30;

     label085:
        $r55 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r56 = $r55.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r56.<android.util.SparseArray: void clear()>();

        exitmonitor r30;

     label086:
        r32 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r32;

     label087:
        $r64 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r64.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r63 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r63.<java.lang.Object: void notifyAll()>();

        exitmonitor r32;

     label088:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void sendEndBackup()>();

        virtualinvoke r2.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full backup pass complete.");

        $r62 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r16 = $r62.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        goto label026;

     label089:
        $r105 := @caughtexception;

        r6 = $r105;

        specialinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void tearDown(android.content.pm.PackageInfo)>(r5);

        if r4 == null goto label091;

     label090:
        virtualinvoke r4.<java.io.OutputStream: void close()>();

     label091:
        $r121 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.os.ParcelFileDescriptor mOutputFile>;

        virtualinvoke $r121.<android.os.ParcelFileDescriptor: void close()>();

     label092:
        $r122 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        r7 = $r122.<com.android.server.BackupManagerService: java.lang.Object mCurrentOpLock>;

        entermonitor r7;

     label093:
        $r123 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r119 = $r123.<com.android.server.BackupManagerService: android.util.SparseArray mCurrentOperations>;

        virtualinvoke $r119.<android.util.SparseArray: void clear()>();

        exitmonitor r7;

     label094:
        r9 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        entermonitor r9;

     label095:
        $r120 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r120.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        $r117 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: java.util.concurrent.atomic.AtomicBoolean mLatchObject>;

        virtualinvoke $r117.<java.lang.Object: void notifyAll()>();

        exitmonitor r9;

     label096:
        virtualinvoke r0.<com.android.server.BackupManagerService$PerformFullBackupTask: void sendEndBackup()>();

        virtualinvoke r2.<com.android.server.BackupManagerService$FullBackupObbConnection: void tearDown()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("BackupManagerService", "Full backup pass complete.");

        $r118 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: com.android.server.BackupManagerService this$0>;

        $r114 = $r118.<com.android.server.BackupManagerService: android.os.PowerManager$WakeLock mWakelock>;

        virtualinvoke $r114.<android.os.PowerManager$WakeLock: void release()>();

        throw r6;

     label097:
        $r115 := @caughtexception;

        r8 = $r115;

     label098:
        exitmonitor r7;

     label099:
        throw r8;

     label100:
        $r150 := @caughtexception;

        r10 = $r150;

     label101:
        exitmonitor r9;

     label102:
        throw r10;

     label103:
        $r99 := @caughtexception;

        r17 = $r99;

     label104:
        exitmonitor r18;

     label105:
        throw r17;

     label106:
        $r154 := @caughtexception;

        r19 = $r154;

     label107:
        exitmonitor r20;

     label108:
        throw r19;

     label109:
        $r153 := @caughtexception;

        r14 = $r153;

     label110:
        exitmonitor r12;

     label111:
        throw r14;

     label112:
        $r131 := @caughtexception;

        r15 = $r131;

     label113:
        exitmonitor r13;

     label114:
        throw r15;

     label115:
        $r129 := @caughtexception;

        r39 = $r129;

     label116:
        exitmonitor r38;

     label117:
        throw r39;

     label118:
        $r96 := @caughtexception;

        r36 = $r96;

     label119:
        exitmonitor r35;

     label120:
        throw r36;

     label121:
        $r132 := @caughtexception;

        r25 = $r132;

     label122:
        exitmonitor r24;

     label123:
        throw r25;

     label124:
        $r143 := @caughtexception;

        r27 = $r143;

     label125:
        exitmonitor r26;

     label126:
        throw r27;

     label127:
        $r100 := @caughtexception;

        r33 = $r100;

     label128:
        exitmonitor r30;

     label129:
        throw r33;

     label130:
        $r152 := @caughtexception;

        r31 = $r152;

     label131:
        exitmonitor r32;

     label132:
        throw r31;

     label133:
        $r148 := @caughtexception;

        goto label084;

     label134:
        $r147 := @caughtexception;

        goto label061;

     label135:
        $r144 := @caughtexception;

        goto label021;

     label136:
        $r145 := @caughtexception;

        goto label074;

     label137:
        $r116 := @caughtexception;

        goto label050;

     label138:
        $r130 := @caughtexception;

        goto label092;

     label139:
        $r151 := @caughtexception;

        r22 = $r151;

        goto label058;

        catch android.content.pm.PackageManager$NameNotFoundException from label005 to label006 with label007;
        catch android.os.RemoteException from label016 to label017 with label045;
        catch java.lang.Exception from label016 to label017 with label069;
        catch java.lang.Throwable from label016 to label017 with label089;
        catch android.os.RemoteException from label018 to label019 with label045;
        catch java.lang.Exception from label018 to label019 with label069;
        catch java.lang.Throwable from label018 to label019 with label089;
        catch java.io.IOException from label020 to label020 with label135;
        catch java.io.IOException from label020 to label021 with label135;
        catch java.lang.Throwable from label022 to label023 with label115;
        catch java.lang.Throwable from label024 to label025 with label118;
        catch android.os.RemoteException from label028 to label029 with label045;
        catch java.lang.Exception from label028 to label029 with label069;
        catch java.lang.Throwable from label028 to label029 with label089;
        catch android.os.RemoteException from label030 to label031 with label045;
        catch java.lang.Exception from label030 to label031 with label069;
        catch java.lang.Throwable from label030 to label031 with label089;
        catch java.lang.Exception from label032 to label033 with label057;
        catch android.os.RemoteException from label032 to label033 with label045;
        catch java.lang.Throwable from label032 to label033 with label089;
        catch java.lang.Exception from label034 to label035 with label139;
        catch android.os.RemoteException from label034 to label035 with label045;
        catch java.lang.Throwable from label034 to label035 with label089;
        catch java.lang.Exception from label036 to label037 with label139;
        catch android.os.RemoteException from label036 to label037 with label045;
        catch java.lang.Throwable from label036 to label037 with label089;
        catch android.os.RemoteException from label038 to label039 with label045;
        catch java.lang.Exception from label038 to label039 with label069;
        catch java.lang.Throwable from label038 to label039 with label089;
        catch android.content.pm.PackageManager$NameNotFoundException from label040 to label041 with label066;
        catch android.os.RemoteException from label040 to label041 with label045;
        catch java.lang.Exception from label040 to label041 with label069;
        catch java.lang.Throwable from label040 to label041 with label089;
        catch android.os.RemoteException from label041 to label042 with label045;
        catch java.lang.Exception from label041 to label042 with label069;
        catch java.lang.Throwable from label041 to label042 with label089;
        catch android.os.RemoteException from label044 to label045 with label045;
        catch java.lang.Exception from label044 to label045 with label069;
        catch java.lang.Throwable from label044 to label045 with label089;
        catch java.lang.Throwable from label046 to label047 with label089;
        catch java.io.IOException from label048 to label049 with label137;
        catch java.io.IOException from label049 to label050 with label137;
        catch java.lang.Throwable from label051 to label052 with label103;
        catch java.lang.Throwable from label053 to label054 with label106;
        catch java.lang.Exception from label055 to label056 with label057;
        catch android.os.RemoteException from label055 to label056 with label045;
        catch java.lang.Throwable from label055 to label056 with label089;
        catch android.os.RemoteException from label058 to label059 with label045;
        catch java.lang.Exception from label058 to label059 with label069;
        catch java.lang.Throwable from label058 to label059 with label089;
        catch java.io.IOException from label060 to label060 with label134;
        catch java.io.IOException from label060 to label061 with label134;
        catch java.lang.Throwable from label062 to label063 with label121;
        catch java.lang.Throwable from label064 to label065 with label124;
        catch android.os.RemoteException from label067 to label068 with label045;
        catch java.lang.Exception from label067 to label068 with label069;
        catch java.lang.Throwable from label067 to label068 with label089;
        catch java.lang.Throwable from label070 to label071 with label089;
        catch java.io.IOException from label072 to label073 with label136;
        catch java.io.IOException from label073 to label074 with label136;
        catch java.lang.Throwable from label075 to label076 with label109;
        catch java.lang.Throwable from label077 to label078 with label112;
        catch android.os.RemoteException from label080 to label081 with label045;
        catch java.lang.Exception from label080 to label081 with label069;
        catch java.lang.Throwable from label080 to label081 with label089;
        catch java.io.IOException from label082 to label083 with label133;
        catch java.io.IOException from label083 to label084 with label133;
        catch java.lang.Throwable from label085 to label086 with label127;
        catch java.lang.Throwable from label087 to label088 with label130;
        catch java.io.IOException from label090 to label091 with label138;
        catch java.io.IOException from label091 to label092 with label138;
        catch java.lang.Throwable from label093 to label094 with label097;
        catch java.lang.Throwable from label095 to label096 with label100;
        catch java.lang.Throwable from label098 to label099 with label097;
        catch java.lang.Throwable from label101 to label102 with label100;
        catch java.lang.Throwable from label104 to label105 with label103;
        catch java.lang.Throwable from label107 to label108 with label106;
        catch java.lang.Throwable from label110 to label111 with label109;
        catch java.lang.Throwable from label113 to label114 with label112;
        catch java.lang.Throwable from label116 to label117 with label115;
        catch java.lang.Throwable from label119 to label120 with label118;
        catch java.lang.Throwable from label122 to label123 with label121;
        catch java.lang.Throwable from label125 to label126 with label124;
        catch java.lang.Throwable from label128 to label129 with label127;
        catch java.lang.Throwable from label131 to label132 with label130;
    }

    void sendEndBackup()
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        android.app.backup.IFullBackupRestoreObserver $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        $r2 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        if $r2 == null goto label2;

     label1:
        $r3 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        interfaceinvoke $r3.<android.app.backup.IFullBackupRestoreObserver: void onEndBackup()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "full backup observer went away: endBackup");

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void sendOnBackupPackage(java.lang.String)
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        java.lang.String r1;
        android.app.backup.IFullBackupRestoreObserver $r3, $r4;
        android.os.RemoteException $r5;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        if $r3 == null goto label2;

     label1:
        $r4 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        interfaceinvoke $r4.<android.app.backup.IFullBackupRestoreObserver: void onBackupPackage(java.lang.String)>(r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "full backup observer went away: backupPackage");

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    void sendStartBackup()
    {
        com.android.server.BackupManagerService$PerformFullBackupTask r0;
        android.app.backup.IFullBackupRestoreObserver $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: com.android.server.BackupManagerService$PerformFullBackupTask;

        $r2 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        if $r2 == null goto label2;

     label1:
        $r3 = r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver>;

        interfaceinvoke $r3.<android.app.backup.IFullBackupRestoreObserver: void onStartBackup()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("BackupManagerService", "full backup observer went away: startBackup");

        r0.<com.android.server.BackupManagerService$PerformFullBackupTask: android.app.backup.IFullBackupRestoreObserver mObserver> = null;

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
