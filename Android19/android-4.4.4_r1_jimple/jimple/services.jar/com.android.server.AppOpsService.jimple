public class com.android.server.AppOpsService extends com.android.internal.app.IAppOpsService$Stub
{
    static final boolean DEBUG;
    static final java.lang.String TAG;
    static final long WRITE_DELAY;
    final android.util.ArrayMap mClients;
    android.content.Context mContext;
    final android.util.AtomicFile mFile;
    final android.os.Handler mHandler;
    final android.util.ArrayMap mModeWatchers;
    final android.util.SparseArray mOpModeWatchers;
    final android.util.ArrayMap mPackageModeWatchers;
    final android.util.SparseArray mUidOps;
    final java.lang.Runnable mWriteRunner;
    boolean mWriteScheduled;

    public void <init>(java.io.File)
    {
        com.android.server.AppOpsService r0;
        java.io.File r1;
        com.android.server.AppOpsService$1 $r2;
        android.util.SparseArray $r3, $r4;
        android.util.ArrayMap $r5, $r6, $r7;
        android.util.AtomicFile $r8;
        android.os.Handler $r9;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<com.android.internal.app.IAppOpsService$Stub: void <init>()>();

        $r2 = new com.android.server.AppOpsService$1;

        specialinvoke $r2.<com.android.server.AppOpsService$1: void <init>(com.android.server.AppOpsService)>(r0);

        r0.<com.android.server.AppOpsService: java.lang.Runnable mWriteRunner> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps> = $r3;

        $r4 = new android.util.SparseArray;

        specialinvoke $r4.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers> = $r4;

        $r5 = new android.util.ArrayMap;

        specialinvoke $r5.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers> = $r5;

        $r6 = new android.util.ArrayMap;

        specialinvoke $r6.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers> = $r6;

        $r7 = new android.util.ArrayMap;

        specialinvoke $r7.<android.util.ArrayMap: void <init>()>();

        r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients> = $r7;

        $r8 = new android.util.AtomicFile;

        specialinvoke $r8.<android.util.AtomicFile: void <init>(java.io.File)>(r1);

        r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile> = $r8;

        $r9 = new android.os.Handler;

        specialinvoke $r9.<android.os.Handler: void <init>()>();

        r0.<com.android.server.AppOpsService: android.os.Handler mHandler> = $r9;

        virtualinvoke r0.<com.android.server.AppOpsService: void readState()>();

        return;
    }

    private static java.util.HashMap addCallbacks(java.util.HashMap, java.lang.String, int, java.util.ArrayList)
    {
        java.util.HashMap r0, $r11;
        java.lang.String r1;
        int i0, i1, $i2;
        java.util.ArrayList r2, r4, $r9;
        com.android.server.AppOpsService$Callback r3;
        java.lang.Object $r5, $r6;
        android.util.Pair $r7;
        java.lang.Integer $r8;

        r0 := @parameter0: java.util.HashMap;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.util.ArrayList;

        if r2 != null goto label2;

     label1:
        return r0;

     label2:
        if r0 != null goto label3;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        r0 = $r11;

     label3:
        i1 = 0;

     label4:
        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label1;

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (com.android.server.AppOpsService$Callback) $r5;

        $r6 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.util.ArrayList) $r6;

        if r4 != null goto label5;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r4 = $r9;

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

     label5:
        $r7 = new android.util.Pair;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r7.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(r1, $r8);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label4;
    }

    private java.util.ArrayList collectOps(com.android.server.AppOpsService$Ops, int[])
    {
        com.android.server.AppOpsService r0;
        com.android.server.AppOpsService$Ops r1;
        int[] r2;
        java.util.ArrayList r3, $r8, $r9;
        int i0, i1, $i2, $i3, $i4, $i7, $i8, $i9, $i11, $i12, $i14;
        com.android.server.AppOpsService$Op r4, r5;
        java.lang.Object $r6, $r11;
        android.app.AppOpsManager$OpEntry $r7, $r10;
        long $l5, $l6, $l10, $l13;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.server.AppOpsService$Ops;

        r2 := @parameter1: int[];

        r3 = null;

        if r2 != null goto label2;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

        i0 = 0;

     label1:
        $i9 = virtualinvoke r1.<com.android.server.AppOpsService$Ops: int size()>();

        if i0 >= $i9 goto label6;

        $r11 = virtualinvoke r1.<com.android.server.AppOpsService$Ops: java.lang.Object valueAt(int)>(i0);

        r4 = (com.android.server.AppOpsService$Op) $r11;

        $r10 = new android.app.AppOpsManager$OpEntry;

        $i14 = r4.<com.android.server.AppOpsService$Op: int op>;

        $i12 = r4.<com.android.server.AppOpsService$Op: int mode>;

        $l13 = r4.<com.android.server.AppOpsService$Op: long time>;

        $l10 = r4.<com.android.server.AppOpsService$Op: long rejectTime>;

        $i11 = r4.<com.android.server.AppOpsService$Op: int duration>;

        specialinvoke $r10.<android.app.AppOpsManager$OpEntry: void <init>(int,int,long,long,int)>($i14, $i12, $l13, $l10, $i11);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i0 = i0 + 1;

        goto label1;

     label2:
        i1 = 0;

     label3:
        $i2 = lengthof r2;

        if i1 >= $i2 goto label6;

        $i3 = r2[i1];

        $r6 = virtualinvoke r1.<com.android.server.AppOpsService$Ops: java.lang.Object get(int)>($i3);

        r5 = (com.android.server.AppOpsService$Op) $r6;

        if r5 == null goto label5;

        if r3 != null goto label4;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r3 = $r8;

     label4:
        $r7 = new android.app.AppOpsManager$OpEntry;

        $i7 = r5.<com.android.server.AppOpsService$Op: int op>;

        $i8 = r5.<com.android.server.AppOpsService$Op: int mode>;

        $l6 = r5.<com.android.server.AppOpsService$Op: long time>;

        $l5 = r5.<com.android.server.AppOpsService$Op: long rejectTime>;

        $i4 = r5.<com.android.server.AppOpsService$Op: int duration>;

        specialinvoke $r7.<android.app.AppOpsManager$OpEntry: void <init>(int,int,long,long,int)>($i7, $i8, $l6, $l5, $i4);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return r3;
    }

    private com.android.server.AppOpsService$Op getOpLocked(int, int, java.lang.String, boolean)
    {
        com.android.server.AppOpsService r0;
        int i0, i1;
        java.lang.String r1;
        boolean z0;
        com.android.server.AppOpsService$Ops r2;
        com.android.server.AppOpsService$Op $r3;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r2 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i1, r1, z0);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r2, i0, z0);

        return $r3;
    }

    private com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops, int, boolean)
    {
        com.android.server.AppOpsService r0;
        com.android.server.AppOpsService$Ops r1;
        int i0, $i1;
        boolean z0;
        com.android.server.AppOpsService$Op r2, $r4;
        java.lang.Object $r3;
        java.lang.String $r5;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.server.AppOpsService$Ops;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r3 = virtualinvoke r1.<com.android.server.AppOpsService$Ops: java.lang.Object get(int)>(i0);

        r2 = (com.android.server.AppOpsService$Op) $r3;

        if r2 != null goto label2;

        if z0 != 0 goto label1;

        return null;

     label1:
        $r4 = new com.android.server.AppOpsService$Op;

        $i1 = r1.<com.android.server.AppOpsService$Ops: int uid>;

        $r5 = r1.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        specialinvoke $r4.<com.android.server.AppOpsService$Op: void <init>(int,java.lang.String,int)>($i1, $r5, i0);

        r2 = $r4;

        virtualinvoke r1.<com.android.server.AppOpsService$Ops: void put(int,java.lang.Object)>(i0, r2);

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteLocked()>();

     label3:
        return r2;
    }

    private com.android.server.AppOpsService$Ops getOpsLocked(int, java.lang.String, boolean)
    {
        com.android.server.AppOpsService r0;
        int i0, i2, i3, $i4;
        java.lang.String r1, $r19, $r23;
        boolean z0, z1;
        java.util.HashMap r2, $r24;
        com.android.server.AppOpsService$Ops r3, r4, $r9;
        long l1;
        java.lang.Throwable r5, $r26;
        java.lang.Object $r7, $r10;
        android.util.SparseArray $r8, $r25;
        android.content.pm.PackageManager $r12;
        android.content.Context $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r20, $r21;
        android.content.pm.PackageManager$NameNotFoundException $r22;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r8 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r7 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.util.HashMap) $r7;

        if r2 != null goto label03;

        if z0 != 0 goto label02;

        r3 = null;

     label01:
        return r3;

     label02:
        $r24 = new java.util.HashMap;

        specialinvoke $r24.<java.util.HashMap: void <init>()>();

        r2 = $r24;

        $r25 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r25.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

     label03:
        if i0 != 0 goto label05;

        r1 = "root";

     label04:
        $r10 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.AppOpsService$Ops) $r10;

        if r3 != null goto label01;

        if z0 != 0 goto label06;

        return null;

     label05:
        if i0 != 2000 goto label04;

        r1 = "com.android.shell";

        goto label04;

     label06:
        if i0 == 0 goto label16;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

        i2 = -1;

     label07:
        $r13 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $r12 = virtualinvoke $r13.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $i4 = staticinvoke <android.os.UserHandle: int getUserId(int)>(i0);

        i3 = virtualinvoke $r12.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>(r1, $i4);

     label08:
        i2 = i3;

     label09:
        if i2 == i0 goto label15;

     label10:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad call: specified package ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" under uid ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but it is really ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r19);

     label11:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return null;

     label12:
        $r22 := @caughtexception;

     label13:
        $r23 = "media";

        z1 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>(r1);

     label14:
        if z1 == 0 goto label09;

        i2 = 1013;

        goto label09;

     label15:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

     label16:
        $r9 = new com.android.server.AppOpsService$Ops;

        specialinvoke $r9.<com.android.server.AppOpsService$Ops: void <init>(java.lang.String,int)>(r1, i0);

        r4 = $r9;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        return r4;

     label17:
        $r26 := @caughtexception;

        r5 = $r26;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r5;

        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label12;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
    }

    private void pruneOp(com.android.server.AppOpsService$Op, int, java.lang.String)
    {
        com.android.server.AppOpsService r0;
        com.android.server.AppOpsService$Op r1;
        int i0, $i5, $i6, $i7;
        java.lang.String r2, $r7;
        com.android.server.AppOpsService$Ops r3;
        java.util.HashMap r4;
        long $l1, $l3;
        byte $b2, $b4;
        android.util.SparseArray $r5, $r9;
        java.lang.Object $r6;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.server.AppOpsService$Op;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $l1 = r1.<com.android.server.AppOpsService$Op: long time>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        $l3 = r1.<com.android.server.AppOpsService$Op: long rejectTime>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label1;

        r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i0, r2, 0);

        if r3 == null goto label1;

        $i5 = r1.<com.android.server.AppOpsService$Op: int op>;

        virtualinvoke r3.<com.android.server.AppOpsService$Ops: void remove(int)>($i5);

        $i6 = virtualinvoke r3.<com.android.server.AppOpsService$Ops: int size()>();

        if $i6 > 0 goto label1;

        $r5 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r6 = virtualinvoke $r5.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (java.util.HashMap) $r6;

        if r4 == null goto label1;

        $r7 = r3.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        virtualinvoke r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r7);

        $i7 = virtualinvoke r4.<java.util.HashMap: int size()>();

        if $i7 > 0 goto label1;

        $r9 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r9.<android.util.SparseArray: void remove(int)>(i0);

     label1:
        return;
    }

    private void scheduleWriteLocked()
    {
        com.android.server.AppOpsService r0;
        boolean $z0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.AppOpsService;

        $z0 = r0.<com.android.server.AppOpsService: boolean mWriteScheduled>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.AppOpsService: boolean mWriteScheduled> = 1;

        $r2 = r0.<com.android.server.AppOpsService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 1800000L);

     label1:
        return;
    }

    private void scheduleWriteNowLocked()
    {
        com.android.server.AppOpsService r0;
        boolean $z0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;

        r0 := @this: com.android.server.AppOpsService;

        $z0 = r0.<com.android.server.AppOpsService: boolean mWriteScheduled>;

        if $z0 != 0 goto label1;

        r0.<com.android.server.AppOpsService: boolean mWriteScheduled> = 1;

     label1:
        $r2 = r0.<com.android.server.AppOpsService: android.os.Handler mHandler>;

        $r1 = r0.<com.android.server.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $r4 = r0.<com.android.server.AppOpsService: android.os.Handler mHandler>;

        $r3 = r0.<com.android.server.AppOpsService: java.lang.Runnable mWriteRunner>;

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private void verifyIncomingOp(int)
    {
        com.android.server.AppOpsService r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 43 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad operation #");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    private void verifyIncomingUid(int)
    {
        com.android.server.AppOpsService r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Context $r1;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if i0 != $i1 goto label2;

     label1:
        return;

     label2:
        $i2 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i3 = staticinvoke <android.os.Process: int myPid()>();

        if $i2 == $i3 goto label1;

        $r1 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i4 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i5 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r1.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_APP_OPS_STATS", $i4, $i5, null);

        return;
    }

    public int checkOperation(int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0;
        int i0, i1, i2, i3, $i4;
        java.lang.String r1;
        java.lang.Throwable r2, $r4;
        com.android.server.AppOpsService$Op r3;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        entermonitor r0;

     label1:
        $i4 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(int,int,java.lang.String,boolean)>($i4, i1, r1, 0);

     label2:
        if r3 != null goto label5;

     label3:
        i2 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>(i0);

        exitmonitor r0;

     label4:
        return i2;

     label5:
        i3 = r3.<com.android.server.AppOpsService$Op: int mode>;

        exitmonitor r0;

     label6:
        return i3;

     label7:
        $r4 := @caughtexception;

        r2 = $r4;

     label8:
        exitmonitor r0;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public int checkPackage(int, java.lang.String)
    {
        com.android.server.AppOpsService r0;
        int i0;
        java.lang.String r1;
        java.lang.Throwable r2, $r4;
        com.android.server.AppOpsService$Ops $r3;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i0, r1, 1);

        if $r3 == null goto label3;

        exitmonitor r0;

     label2:
        return 0;

     label3:
        exitmonitor r0;

     label4:
        return 2;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

     label6:
        exitmonitor r0;

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.AppOpsService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.lang.Throwable r4, $r61;
        long l0, $l18, $l23, $l25, $l26, $l27, $l29, $l30;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i28, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43;
        boolean z0, $z1;
        java.util.Iterator r5;
        com.android.server.AppOpsService$Ops r6;
        com.android.server.AppOpsService$ClientState r7;
        com.android.server.AppOpsService$Op r8, r9;
        java.util.ArrayList r10, r11, $r32, $r34, $r35, $r36;
        android.content.Context $r12;
        android.util.SparseArray $r13, $r17, $r18, $r20, $r51, $r52, $r53;
        android.util.ArrayMap $r14, $r15, $r16, $r27, $r29, $r31, $r37, $r38, $r41, $r46, $r47, $r49;
        java.lang.Object $r19, $r23, $r25, $r28, $r30, $r33, $r39, $r44, $r45, $r48, $r54, $r58, $r60;
        java.util.HashMap $r21;
        java.util.Collection $r22;
        java.lang.String $r24, $r26, $r40, $r42, $r43, $r50, $r62;
        byte $b22, $b24;
        java.lang.StringBuilder $r55, $r56, $r57, $r59, $r63;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r12 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i11 = virtualinvoke $r12.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i11 == 0 goto label01;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump ApOps service from from pid=");

        $i41 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r55 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i43 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r63 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r62);

        return;

     label01:
        entermonitor r0;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Current AppOps Service state:");

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r13 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        i1 = virtualinvoke $r13.<android.util.SparseArray: int size()>();

     label03:
        z0 = 0;

        if i1 <= 0 goto label10;

        z0 = 1;

     label04:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Op mode watchers:");

     label05:
        i9 = 0;

     label06:
        $r53 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i39 = virtualinvoke $r53.<android.util.SparseArray: int size()>();

        if i9 >= $i39 goto label10;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Op ");

        $r52 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i38 = virtualinvoke $r52.<android.util.SparseArray: int keyAt(int)>(i9);

        $r50 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i38);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r50);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r51 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r60 = virtualinvoke $r51.<android.util.SparseArray: java.lang.Object valueAt(int)>(i9);

        r11 = (java.util.ArrayList) $r60;

     label07:
        i10 = 0;

     label08:
        $i42 = virtualinvoke r11.<java.util.ArrayList: int size()>();

        if i10 >= $i42 goto label50;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i10);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r58 = virtualinvoke r11.<java.util.ArrayList: java.lang.Object get(int)>(i10);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r58);

     label09:
        i10 = i10 + 1;

        goto label08;

     label10:
        $r14 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $i13 = virtualinvoke $r14.<android.util.ArrayMap: int size()>();

        if $i13 <= 0 goto label18;

     label11:
        z0 = 1;

     label12:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Package mode watchers:");

     label13:
        i2 = 0;

     label14:
        $r47 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $i37 = virtualinvoke $r47.<android.util.ArrayMap: int size()>();

        if i2 >= $i37 goto label18;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Pkg ");

        $r49 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r44 = virtualinvoke $r49.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i2);

        $r43 = (java.lang.String) $r44;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r43);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r46 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r45 = virtualinvoke $r46.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i2);

        r10 = (java.util.ArrayList) $r45;

     label15:
        i8 = 0;

     label16:
        $i40 = virtualinvoke r10.<java.util.ArrayList: int size()>();

        if i8 >= $i40 goto label51;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      #");

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>(i8);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r54 = virtualinvoke r10.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r54);

     label17:
        i8 = i8 + 1;

        goto label16;

     label18:
        $r16 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $i12 = virtualinvoke $r16.<android.util.ArrayMap: int size()>();

        if $i12 <= 0 goto label24;

     label19:
        z0 = 1;

     label20:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  All mode watchers:");

     label21:
        i3 = 0;

     label22:
        $r41 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $i35 = virtualinvoke $r41.<android.util.ArrayMap: int size()>();

        if i3 >= $i35 goto label24;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r37 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r39 = virtualinvoke $r37.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i3);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>($r39);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" -> ");

        $r38 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r48 = virtualinvoke $r38.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i3);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r48);

     label23:
        i3 = i3 + 1;

        goto label22;

     label24:
        $r15 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $i15 = virtualinvoke $r15.<android.util.ArrayMap: int size()>();

        if $i15 <= 0 goto label32;

     label25:
        z0 = 1;

     label26:
        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  Clients:");

     label27:
        i4 = 0;

     label28:
        $r31 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $i31 = virtualinvoke $r31.<android.util.ArrayMap: int size()>();

        if i4 >= $i31 goto label32;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        $r27 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $r28 = virtualinvoke $r27.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i4);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.Object)>($r28);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r29 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $r30 = virtualinvoke $r29.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i4);

        r7 = (com.android.server.AppOpsService$ClientState) $r30;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>(r7);

        $r34 = r7.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        if $r34 == null goto label52;

        $r35 = r7.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        $i34 = virtualinvoke $r35.<java.util.ArrayList: int size()>();

        if $i34 <= 0 goto label52;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("      Started ops:");

     label29:
        i7 = 0;

     label30:
        $r36 = r7.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        $i32 = virtualinvoke $r36.<java.util.ArrayList: int size()>();

        if i7 >= $i32 goto label52;

        $r32 = r7.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        r9 = (com.android.server.AppOpsService$Op) $r33;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("        ");

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("uid=");

        $i33 = r9.<com.android.server.AppOpsService$Op: int uid>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i33);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" pkg=");

        $r40 = r9.<com.android.server.AppOpsService$Op: java.lang.String packageName>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r40);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" op=");

        $i36 = r9.<com.android.server.AppOpsService$Op: int op>;

        $r42 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i36);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r42);

     label31:
        i7 = i7 + 1;

        goto label30;

     label32:
        if z0 == 0 goto label53;

     label33:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label34:
        goto label53;

     label35:
        $r17 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i14 = virtualinvoke $r17.<android.util.SparseArray: int size()>();

        if i5 >= $i14 goto label48;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("  Uid ");

        $r20 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i16 = virtualinvoke $r20.<android.util.SparseArray: int keyAt(int)>(i5);

        staticinvoke <android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>(r2, $i16);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

        $r18 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r19 = virtualinvoke $r18.<android.util.SparseArray: java.lang.Object valueAt(int)>(i5);

        $r21 = (java.util.HashMap) $r19;

        $r22 = virtualinvoke $r21.<java.util.HashMap: java.util.Collection values()>();

        r5 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

     label36:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label47;

        $r25 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.AppOpsService$Ops) $r25;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("    Package ");

        $r24 = r6.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r24);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(":");

     label37:
        i6 = 0;

     label38:
        $i17 = virtualinvoke r6.<com.android.server.AppOpsService$Ops: int size()>();

        if i6 >= $i17 goto label36;

        $r23 = virtualinvoke r6.<com.android.server.AppOpsService$Ops: java.lang.Object valueAt(int)>(i6);

        r8 = (com.android.server.AppOpsService$Op) $r23;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("      ");

        $i20 = r8.<com.android.server.AppOpsService$Op: int op>;

        $r26 = staticinvoke <android.app.AppOpsManager: java.lang.String opToName(int)>($i20);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>($r26);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(": mode=");

        $i19 = r8.<com.android.server.AppOpsService$Op: int mode>;

        virtualinvoke r2.<java.io.PrintWriter: void print(int)>($i19);

        $l18 = r8.<com.android.server.AppOpsService$Op: long time>;

        $b24 = $l18 cmp 0L;

        if $b24 == 0 goto label39;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("; time=");

        $l29 = r8.<com.android.server.AppOpsService$Op: long time>;

        $l30 = l0 - $l29;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l30, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ago");

     label39:
        $l23 = r8.<com.android.server.AppOpsService$Op: long rejectTime>;

        $b22 = $l23 cmp 0L;

        if $b22 == 0 goto label40;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("; rejectTime=");

        $l26 = r8.<com.android.server.AppOpsService$Op: long rejectTime>;

        $l25 = l0 - $l26;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l25, r2);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(" ago");

     label40:
        $i21 = r8.<com.android.server.AppOpsService$Op: int duration>;

        if $i21 != -1 goto label42;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(" (running)");

     label41:
        goto label54;

     label42:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("; duration=");

        $i28 = r8.<com.android.server.AppOpsService$Op: int duration>;

        $l27 = (long) $i28;

        staticinvoke <android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>($l27, r2);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

     label43:
        goto label54;

     label44:
        $r61 := @caughtexception;

        r4 = $r61;

     label45:
        exitmonitor r0;

     label46:
        throw r4;

     label47:
        i5 = i5 + 1;

        goto label35;

     label48:
        exitmonitor r0;

     label49:
        return;

     label50:
        i9 = i9 + 1;

        goto label06;

     label51:
        i2 = i2 + 1;

        goto label14;

     label52:
        i4 = i4 + 1;

        goto label28;

     label53:
        i5 = 0;

        goto label35;

     label54:
        i6 = i6 + 1;

        goto label38;

        catch java.lang.Throwable from label02 to label03 with label44;
        catch java.lang.Throwable from label04 to label05 with label44;
        catch java.lang.Throwable from label06 to label07 with label44;
        catch java.lang.Throwable from label08 to label09 with label44;
        catch java.lang.Throwable from label10 to label11 with label44;
        catch java.lang.Throwable from label12 to label13 with label44;
        catch java.lang.Throwable from label14 to label15 with label44;
        catch java.lang.Throwable from label16 to label17 with label44;
        catch java.lang.Throwable from label18 to label19 with label44;
        catch java.lang.Throwable from label20 to label21 with label44;
        catch java.lang.Throwable from label22 to label23 with label44;
        catch java.lang.Throwable from label24 to label25 with label44;
        catch java.lang.Throwable from label26 to label27 with label44;
        catch java.lang.Throwable from label28 to label29 with label44;
        catch java.lang.Throwable from label30 to label31 with label44;
        catch java.lang.Throwable from label33 to label34 with label44;
        catch java.lang.Throwable from label35 to label36 with label44;
        catch java.lang.Throwable from label36 to label37 with label44;
        catch java.lang.Throwable from label38 to label39 with label44;
        catch java.lang.Throwable from label39 to label40 with label44;
        catch java.lang.Throwable from label40 to label41 with label44;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Throwable from label45 to label46 with label44;
        catch java.lang.Throwable from label48 to label49 with label44;
    }

    public void finishOperation(android.os.IBinder, int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0;
        android.os.IBinder r1;
        int i0, i1, $i2, $i3;
        java.lang.String r2, $r14, $r16;
        com.android.server.AppOpsService$ClientState r3;
        java.lang.Throwable r4, $r18;
        com.android.server.AppOpsService$Op r5;
        java.util.ArrayList $r6, $r7;
        boolean $z0;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r15, $r17;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        r3 = (com.android.server.AppOpsService$ClientState) r1;

        entermonitor r0;

     label01:
        r5 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(int,int,java.lang.String,boolean)>(i0, i1, r2, 1);

     label02:
        if r5 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return;

     label05:
        $r6 = r3.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        if $r6 == null goto label09;

        $r7 = r3.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        $z0 = virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r5);

        if $z0 != 0 goto label09;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operation not started: uid");

        $i2 = r5.<com.android.server.AppOpsService$Op: int uid>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg=");

        $r14 = r5.<com.android.server.AppOpsService$Op: java.lang.String packageName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" op=");

        $i3 = r5.<com.android.server.AppOpsService$Op: int op>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label06:
        $r18 := @caughtexception;

        r4 = $r18;

     label07:
        exitmonitor r0;

     label08:
        throw r4;

     label09:
        virtualinvoke r0.<com.android.server.AppOpsService: void finishOperationLocked(com.android.server.AppOpsService$Op)>(r5);

        exitmonitor r0;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label05 to label06 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    void finishOperationLocked(com.android.server.AppOpsService$Op)
    {
        com.android.server.AppOpsService r0;
        com.android.server.AppOpsService$Op r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i12, $i16;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r6, $r16;
        long $l6, $l10, $l11, $l13, $l14, $l15, $l17;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.server.AppOpsService$Op;

        $i0 = r1.<com.android.server.AppOpsService$Op: int nesting>;

        if $i0 > 1 goto label3;

        $i3 = r1.<com.android.server.AppOpsService$Op: int nesting>;

        if $i3 != 1 goto label2;

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l10 = r1.<com.android.server.AppOpsService$Op: long time>;

        $l13 = $l11 - $l10;

        $i12 = (int) $l13;

        r1.<com.android.server.AppOpsService$Op: int duration> = $i12;

        $l14 = r1.<com.android.server.AppOpsService$Op: long time>;

        $i16 = r1.<com.android.server.AppOpsService$Op: int duration>;

        $l17 = (long) $i16;

        $l15 = $l14 + $l17;

        r1.<com.android.server.AppOpsService$Op: long time> = $l15;

     label1:
        r1.<com.android.server.AppOpsService$Op: int nesting> = 0;

        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finishing op nesting under-run: uid ");

        $i4 = r1.<com.android.server.AppOpsService$Op: int uid>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg ");

        $r6 = r1.<com.android.server.AppOpsService$Op: java.lang.String packageName>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" code ");

        $i5 = r1.<com.android.server.AppOpsService$Op: int op>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time=");

        $l6 = r1.<com.android.server.AppOpsService$Op: long time>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" duration=");

        $i7 = r1.<com.android.server.AppOpsService$Op: int duration>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nesting=");

        $i8 = r1.<com.android.server.AppOpsService$Op: int nesting>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r16);

        goto label1;

     label3:
        $i1 = r1.<com.android.server.AppOpsService$Op: int nesting>;

        $i2 = -1 + $i1;

        r1.<com.android.server.AppOpsService$Op: int nesting> = $i2;

        return;
    }

    public java.util.List getOpsForPackage(int, java.lang.String, int[])
    {
        com.android.server.AppOpsService r0;
        int i0, $i1, $i2, $i3;
        java.lang.String r1, $r10;
        int[] r2;
        java.lang.Throwable r3, $r11;
        com.android.server.AppOpsService$Ops r4;
        java.util.ArrayList r5, r6, $r8;
        android.content.Context $r7;
        android.app.AppOpsManager$PackageOps $r9;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: int[];

        $r7 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r7.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.GET_APP_OPS_STATS", $i1, $i2, null);

        entermonitor r0;

     label01:
        r4 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i0, r1, 0);

     label02:
        if r4 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return null;

     label05:
        r5 = specialinvoke r0.<com.android.server.AppOpsService: java.util.ArrayList collectOps(com.android.server.AppOpsService$Ops,int[])>(r4, r2);

     label06:
        if r5 != null goto label12;

     label07:
        exitmonitor r0;

     label08:
        return null;

     label09:
        $r11 := @caughtexception;

        r3 = $r11;

     label10:
        exitmonitor r0;

     label11:
        throw r3;

     label12:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r6 = $r8;

        $r9 = new android.app.AppOpsManager$PackageOps;

        $r10 = r4.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        $i3 = r4.<com.android.server.AppOpsService$Ops: int uid>;

        specialinvoke $r9.<android.app.AppOpsManager$PackageOps: void <init>(java.lang.String,int,java.util.List)>($r10, $i3, r5);

        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        exitmonitor r0;

     label13:
        return r6;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.lang.Throwable from label12 to label13 with label09;
    }

    public java.util.List getPackagesForOps(int[])
    {
        com.android.server.AppOpsService r0;
        int[] r1;
        java.util.ArrayList r2, r5, r7, r8, $r18;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable r3, $r19, $r20;
        java.util.Iterator r4;
        com.android.server.AppOpsService$Ops r6;
        android.content.Context $r9;
        android.util.SparseArray $r10, $r11;
        java.util.HashMap $r12;
        java.lang.Object $r13, $r15;
        java.util.Collection $r14;
        boolean $z0;
        android.app.AppOpsManager$PackageOps $r16;
        java.lang.String $r17;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: int[];

        $r9 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r9.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.GET_APP_OPS_STATS", $i1, $i2, null);

        r2 = null;

        entermonitor r0;

        i0 = 0;

     label01:
        $r10 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i3 = virtualinvoke $r10.<android.util.SparseArray: int size()>();

        if i0 >= $i3 goto label08;

        $r11 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r13 = virtualinvoke $r11.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        $r12 = (java.util.HashMap) $r13;

        $r14 = virtualinvoke $r12.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        r5 = r2;

     label03:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.server.AppOpsService$Ops) $r15;

        r7 = specialinvoke r0.<com.android.server.AppOpsService: java.util.ArrayList collectOps(com.android.server.AppOpsService$Ops,int[])>(r6, r1);

     label04:
        if r7 == null goto label14;

        if r5 != null goto label13;

     label05:
        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r8 = $r18;

     label06:
        $r16 = new android.app.AppOpsManager$PackageOps;

        $r17 = r6.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        $i4 = r6.<com.android.server.AppOpsService$Ops: int uid>;

        specialinvoke $r16.<android.app.AppOpsManager$PackageOps: void <init>(java.lang.String,int,java.util.List)>($r17, $i4, r7);

        virtualinvoke r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label07:
        goto label15;

     label08:
        exitmonitor r0;

     label09:
        return r2;

     label10:
        exitmonitor r0;

     label11:
        throw r3;

     label12:
        $r20 := @caughtexception;

        r3 = $r20;

        goto label10;

     label13:
        r8 = r5;

        goto label06;

     label14:
        r8 = r5;

     label15:
        r5 = r8;

        goto label03;

     label16:
        i0 = i0 + 1;

        r2 = r5;

        goto label01;

     label17:
        $r19 := @caughtexception;

        r3 = $r19;

        goto label10;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
    }

    public android.os.IBinder getToken(android.os.IBinder)
    {
        com.android.server.AppOpsService r0;
        android.os.IBinder r1, r11;
        java.lang.Throwable r2, $r9;
        com.android.server.AppOpsService$ClientState r3, r10;
        android.util.ArrayMap $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: android.os.IBinder;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.server.AppOpsService$ClientState) $r5;

     label2:
        if r3 != null goto label4;

     label3:
        r10 = new com.android.server.AppOpsService$ClientState;

        specialinvoke r10.<com.android.server.AppOpsService$ClientState: void <init>(com.android.server.AppOpsService,android.os.IBinder)>(r0, r1);

        r3 = r10;

        $r7 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mClients>;

        virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

     label4:
        exitmonitor r0;

     label5:
        r11 = (android.os.IBinder) r3;

        return r11;

     label6:
        $r9 := @caughtexception;

        r2 = $r9;

     label7:
        exitmonitor r0;

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public int noteOperation(int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0;
        int i0, i1, i2, i3, $i4, $i5, $i9;
        java.lang.String r1, $r16;
        java.lang.Throwable r2, $r18;
        com.android.server.AppOpsService$Ops r3;
        com.android.server.AppOpsService$Op r4, r5;
        long $l6, $l7, $l8;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        entermonitor r0;

     label01:
        r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i1, r1, 1);

     label02:
        if r3 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return 2;

     label05:
        r4 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r3, i0, 1);

        $i4 = r4.<com.android.server.AppOpsService$Op: int duration>;

        if $i4 != -1 goto label06;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Noting op not finished: uid ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pkg ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" code ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time=");

        $l8 = r4.<com.android.server.AppOpsService$Op: long time>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" duration=");

        $i9 = r4.<com.android.server.AppOpsService$Op: int duration>;

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r16);

     label06:
        r4.<com.android.server.AppOpsService$Op: int duration> = 0;

        i2 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

     label07:
        if i2 == i0 goto label14;

     label08:
        r5 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r3, i2, 1);

     label09:
        $i5 = r5.<com.android.server.AppOpsService$Op: int mode>;

        if $i5 == 0 goto label15;

        $l7 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r4.<com.android.server.AppOpsService$Op: long rejectTime> = $l7;

        i3 = r5.<com.android.server.AppOpsService$Op: int mode>;

        exitmonitor r0;

     label10:
        return i3;

     label11:
        $r18 := @caughtexception;

        r2 = $r18;

     label12:
        exitmonitor r0;

     label13:
        throw r2;

     label14:
        r5 = r4;

        goto label09;

     label15:
        $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r4.<com.android.server.AppOpsService$Op: long time> = $l6;

        r4.<com.android.server.AppOpsService$Op: long rejectTime> = 0L;

        exitmonitor r0;

     label16:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
        catch java.lang.Throwable from label15 to label16 with label11;
    }

    public void packageRemoved(int, java.lang.String)
    {
        com.android.server.AppOpsService r0;
        int i0, $i1;
        java.lang.String r1;
        java.lang.Throwable r2, $r8;
        java.util.HashMap r3;
        android.util.SparseArray $r4, $r7;
        java.lang.Object $r5, $r6;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r5 = virtualinvoke $r4.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r3 = (java.util.HashMap) $r5;

     label2:
        if r3 == null goto label5;

     label3:
        $r6 = virtualinvoke r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        if $r6 == null goto label5;

        $i1 = virtualinvoke r3.<java.util.HashMap: int size()>();

        if $i1 > 0 goto label4;

        $r7 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r7.<android.util.SparseArray: void remove(int)>(i0);

     label4:
        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteLocked()>();

     label5:
        exitmonitor r0;

     label6:
        return;

     label7:
        $r8 := @caughtexception;

        r2 = $r8;

     label8:
        exitmonitor r0;

     label9:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void publish(android.content.Context)
    {
        com.android.server.AppOpsService r0;
        android.content.Context r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: android.content.Context;

        r0.<com.android.server.AppOpsService: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r0.<com.android.server.AppOpsService: android.os.IBinder asBinder()>();

        staticinvoke <android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>("appops", $r2);

        return;
    }

    void readPackage(org.xmlpull.v1.XmlPullParser) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.AppOpsService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, $r3, $r6, $r8;
        int i0, i1, $i2;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i1 == 1 goto label4;

        if i1 != 3 goto label2;

        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i2 <= i0 goto label4;

     label2:
        if i1 == 3 goto label1;

        if i1 == 4 goto label1;

        $r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("uid");

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.android.server.AppOpsService: void readUid(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r1, r2);

        goto label1;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <pkg>: ");

        $r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r8);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label1;

     label4:
        return;
    }

    void readState()
    {
        com.android.server.AppOpsService r0;
        android.util.AtomicFile r1, $r22, $r53;
        java.lang.Throwable r2, r3, r6, $r77, $r78, $r80;
        java.io.FileInputStream r5;
        java.lang.IndexOutOfBoundsException r8, $r86;
        java.io.IOException r10, $r31, $r36, $r42, $r54, $r59, $r64, $r73, $r75, $r76;
        org.xmlpull.v1.XmlPullParserException r12, $r58;
        java.lang.NumberFormatException r14, $r43;
        java.lang.NullPointerException r15, $r30;
        java.lang.IllegalStateException r18, $r32, $r49;
        org.xmlpull.v1.XmlPullParser r19;
        int i0, i1, i2, $i4;
        java.lang.String $r24, $r27, $r29, $r38, $r41, $r47, $r62, $r65, $r71, $r82;
        java.lang.StringBuilder $r25, $r26, $r28, $r33, $r34, $r35, $r39, $r40, $r44, $r45, $r46, $r50, $r51, $r56, $r60, $r61, $r66, $r67, $r68, $r70, $r72, $r74, $r83, $r84, $r85;
        boolean $z0;
        android.util.SparseArray $r37, $r48, $r55, $r63, $r69, $r79, $r81;
        java.io.File $r52;
        java.io.FileNotFoundException $r57;

        r0 := @this: com.android.server.AppOpsService;

        r1 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        entermonitor r1;

     label01:
        entermonitor r0;

     label02:
        $r22 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        r5 = virtualinvoke $r22.<android.util.AtomicFile: java.io.FileInputStream openRead()>();

     label03:
        r19 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

        interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>(r5, null);

     label04:
        i1 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: int next()>();

     label05:
        if i1 == 2 goto label06;

        if i1 != 1 goto label04;

     label06:
        if i1 == 2 goto label22;

     label07:
        $r32 = new java.lang.IllegalStateException;

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no start tag found");

        throw $r32;

     label08:
        $r49 := @caughtexception;

        r18 = $r49;

     label09:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r47);

     label10:
        $r55 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r55.<android.util.SparseArray: void clear()>();

     label11:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label12:
        exitmonitor r0;

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r57 := @caughtexception;

     label16:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No existing app ops ");

        $r53 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        $r52 = virtualinvoke $r53.<android.util.AtomicFile: java.io.File getBaseFile()>();

        $r61 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r60 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; starting empty");

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AppOps", $r62);

        exitmonitor r0;

     label17:
        exitmonitor r1;

     label18:
        return;

     label19:
        $r77 := @caughtexception;

        r2 = $r77;

     label20:
        exitmonitor r1;

     label21:
        throw r2;

     label22:
        i0 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label23:
        i2 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: int next()>();

     label24:
        if i2 == 1 goto label43;

        if i2 != 3 goto label26;

     label25:
        $i4 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label43;

     label26:
        if i2 == 3 goto label23;

        if i2 == 4 goto label23;

     label27:
        $r24 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("pkg");

        if $z0 == 0 goto label35;

        virtualinvoke r0.<com.android.server.AppOpsService: void readPackage(org.xmlpull.v1.XmlPullParser)>(r19);

     label28:
        goto label23;

     label29:
        $r30 := @caughtexception;

        r15 = $r30;

     label30:
        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r38);

     label31:
        $r37 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r37.<android.util.SparseArray: void clear()>();

     label32:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label33:
        goto label12;

     label34:
        $r54 := @caughtexception;

        goto label12;

     label35:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <app-ops>: ");

        $r29 = interfaceinvoke r19.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r27);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r19);

     label36:
        goto label23;

     label37:
        $r43 := @caughtexception;

        r14 = $r43;

     label38:
        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r41);

     label39:
        $r48 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r48.<android.util.SparseArray: void clear()>();

     label40:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label41:
        goto label12;

     label42:
        $r42 := @caughtexception;

        goto label12;

     label43:
        goto label44;

     label44:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label45:
        goto label12;

     label46:
        $r36 := @caughtexception;

        goto label12;

     label47:
        $r58 := @caughtexception;

        r12 = $r58;

     label48:
        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r65 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r65);

     label49:
        $r63 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r63.<android.util.SparseArray: void clear()>();

     label50:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label51:
        goto label12;

     label52:
        $r59 := @caughtexception;

        goto label12;

     label53:
        $r73 := @caughtexception;

        r10 = $r73;

     label54:
        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r70 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r71);

     label55:
        $r69 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r69.<android.util.SparseArray: void clear()>();

     label56:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label57:
        goto label12;

     label58:
        $r76 := @caughtexception;

        goto label12;

     label59:
        $r86 := @caughtexception;

        r8 = $r86;

     label60:
        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed parsing ");

        $r83 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r82 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r82);

     label61:
        $r81 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r81.<android.util.SparseArray: void clear()>();

     label62:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label63:
        goto label12;

     label64:
        $r64 := @caughtexception;

        goto label12;

     label65:
        $r80 := @caughtexception;

        r6 = $r80;

     label66:
        $r79 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r79.<android.util.SparseArray: void clear()>();

     label67:
        virtualinvoke r5.<java.io.FileInputStream: void close()>();

     label68:
        throw r6;

     label69:
        $r78 := @caughtexception;

        r3 = $r78;

     label70:
        exitmonitor r0;

     label71:
        throw r3;

     label72:
        $r75 := @caughtexception;

        goto label12;

     label73:
        $r31 := @caughtexception;

        goto label68;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.io.FileNotFoundException from label02 to label03 with label15;
        catch java.lang.Throwable from label02 to label03 with label69;
        catch java.lang.IllegalStateException from label03 to label04 with label08;
        catch java.lang.NullPointerException from label03 to label04 with label29;
        catch java.lang.NumberFormatException from label03 to label04 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label47;
        catch java.io.IOException from label03 to label04 with label53;
        catch java.lang.IndexOutOfBoundsException from label03 to label04 with label59;
        catch java.lang.Throwable from label03 to label04 with label65;
        catch java.lang.IllegalStateException from label04 to label05 with label08;
        catch java.lang.NullPointerException from label04 to label05 with label29;
        catch java.lang.NumberFormatException from label04 to label05 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label04 to label05 with label47;
        catch java.io.IOException from label04 to label05 with label53;
        catch java.lang.IndexOutOfBoundsException from label04 to label05 with label59;
        catch java.lang.Throwable from label04 to label05 with label65;
        catch java.lang.IllegalStateException from label07 to label08 with label08;
        catch java.lang.NullPointerException from label07 to label08 with label29;
        catch java.lang.NumberFormatException from label07 to label08 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label07 to label08 with label47;
        catch java.io.IOException from label07 to label08 with label53;
        catch java.lang.IndexOutOfBoundsException from label07 to label08 with label59;
        catch java.lang.Throwable from label07 to label08 with label65;
        catch java.lang.Throwable from label09 to label10 with label65;
        catch java.lang.Throwable from label10 to label11 with label69;
        catch java.io.IOException from label11 to label12 with label72;
        catch java.lang.Throwable from label11 to label12 with label69;
        catch java.lang.Throwable from label12 to label13 with label69;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label69;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label20 to label21 with label19;
        catch java.lang.IllegalStateException from label22 to label23 with label08;
        catch java.lang.NullPointerException from label22 to label23 with label29;
        catch java.lang.NumberFormatException from label22 to label23 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label22 to label23 with label47;
        catch java.io.IOException from label22 to label23 with label53;
        catch java.lang.IndexOutOfBoundsException from label22 to label23 with label59;
        catch java.lang.Throwable from label22 to label23 with label65;
        catch java.lang.IllegalStateException from label23 to label24 with label08;
        catch java.lang.NullPointerException from label23 to label24 with label29;
        catch java.lang.NumberFormatException from label23 to label24 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label23 to label24 with label47;
        catch java.io.IOException from label23 to label24 with label53;
        catch java.lang.IndexOutOfBoundsException from label23 to label24 with label59;
        catch java.lang.Throwable from label23 to label24 with label65;
        catch java.lang.IllegalStateException from label25 to label26 with label08;
        catch java.lang.NullPointerException from label25 to label26 with label29;
        catch java.lang.NumberFormatException from label25 to label26 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label25 to label26 with label47;
        catch java.io.IOException from label25 to label26 with label53;
        catch java.lang.IndexOutOfBoundsException from label25 to label26 with label59;
        catch java.lang.Throwable from label25 to label26 with label65;
        catch java.lang.IllegalStateException from label27 to label28 with label08;
        catch java.lang.NullPointerException from label27 to label28 with label29;
        catch java.lang.NumberFormatException from label27 to label28 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label27 to label28 with label47;
        catch java.io.IOException from label27 to label28 with label53;
        catch java.lang.IndexOutOfBoundsException from label27 to label28 with label59;
        catch java.lang.Throwable from label27 to label28 with label65;
        catch java.lang.Throwable from label30 to label31 with label65;
        catch java.lang.Throwable from label31 to label32 with label69;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.lang.Throwable from label32 to label33 with label69;
        catch java.lang.IllegalStateException from label35 to label36 with label08;
        catch java.lang.NullPointerException from label35 to label36 with label29;
        catch java.lang.NumberFormatException from label35 to label36 with label37;
        catch org.xmlpull.v1.XmlPullParserException from label35 to label36 with label47;
        catch java.io.IOException from label35 to label36 with label53;
        catch java.lang.IndexOutOfBoundsException from label35 to label36 with label59;
        catch java.lang.Throwable from label35 to label36 with label65;
        catch java.lang.Throwable from label38 to label39 with label65;
        catch java.lang.Throwable from label39 to label40 with label69;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.lang.Throwable from label40 to label41 with label69;
        catch java.lang.Throwable from label44 to label44 with label69;
        catch java.io.IOException from label44 to label45 with label46;
        catch java.lang.Throwable from label44 to label45 with label69;
        catch java.lang.Throwable from label48 to label49 with label65;
        catch java.lang.Throwable from label49 to label50 with label69;
        catch java.io.IOException from label50 to label51 with label52;
        catch java.lang.Throwable from label50 to label51 with label69;
        catch java.lang.Throwable from label54 to label55 with label65;
        catch java.lang.Throwable from label55 to label56 with label69;
        catch java.io.IOException from label56 to label57 with label58;
        catch java.lang.Throwable from label56 to label57 with label69;
        catch java.lang.Throwable from label60 to label61 with label65;
        catch java.lang.Throwable from label61 to label62 with label69;
        catch java.io.IOException from label62 to label63 with label64;
        catch java.lang.Throwable from label62 to label63 with label69;
        catch java.lang.Throwable from label66 to label67 with label69;
        catch java.io.IOException from label67 to label68 with label73;
        catch java.lang.Throwable from label67 to label68 with label69;
        catch java.lang.Throwable from label68 to label69 with label69;
        catch java.lang.Throwable from label70 to label71 with label69;
        catch java.lang.Throwable from label71 to label72 with label19;
    }

    void readUid(org.xmlpull.v1.XmlPullParser, java.lang.String) throws java.lang.NumberFormatException, org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        com.android.server.AppOpsService r0;
        org.xmlpull.v1.XmlPullParser r1;
        java.lang.String r2, r4, r5, r6, r7, $r10, $r11, $r15, $r16, $r17;
        int i0, i1, i2, $i4, $i5, $i8, $i9, $i10;
        com.android.server.AppOpsService$Op r3, $r18;
        java.util.HashMap r8, $r23;
        com.android.server.AppOpsService$Ops r9, $r24;
        java.lang.StringBuilder $r12, $r13, $r14;
        boolean $z0;
        java.lang.Object $r19, $r20;
        android.util.SparseArray $r21, $r25;
        long $l6, $l7;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: java.lang.String;

        $r10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10);

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        if i2 == 1 goto label10;

        if i2 != 3 goto label02;

        $i10 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i10 <= i1 goto label10;

     label02:
        if i2 == 3 goto label01;

        if i2 == 4 goto label01;

        $r11 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("op");

        if $z0 == 0 goto label09;

        $r18 = new com.android.server.AppOpsService$Op;

        $r17 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "n");

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

        specialinvoke $r18.<com.android.server.AppOpsService$Op: void <init>(int,java.lang.String,int)>(i0, r2, $i4);

        r3 = $r18;

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "m");

        if r4 == null goto label03;

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        r3.<com.android.server.AppOpsService$Op: int mode> = $i9;

     label03:
        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "t");

        if r5 == null goto label04;

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r5);

        r3.<com.android.server.AppOpsService$Op: long time> = $l7;

     label04:
        r6 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "r");

        if r6 == null goto label05;

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6);

        r3.<com.android.server.AppOpsService$Op: long rejectTime> = $l6;

     label05:
        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "d");

        if r7 == null goto label06;

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r7);

        r3.<com.android.server.AppOpsService$Op: int duration> = $i8;

     label06:
        $r21 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r19 = virtualinvoke $r21.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r8 = (java.util.HashMap) $r19;

        if r8 != null goto label07;

        $r23 = new java.util.HashMap;

        specialinvoke $r23.<java.util.HashMap: void <init>()>();

        r8 = $r23;

        $r25 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r25.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r8);

     label07:
        $r20 = virtualinvoke r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r9 = (com.android.server.AppOpsService$Ops) $r20;

        if r9 != null goto label08;

        $r24 = new com.android.server.AppOpsService$Ops;

        specialinvoke $r24.<com.android.server.AppOpsService$Ops: void <init>(java.lang.String,int)>(r2, i0);

        r9 = $r24;

        virtualinvoke r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r9);

     label08:
        $i5 = r3.<com.android.server.AppOpsService$Op: int op>;

        virtualinvoke r9.<com.android.server.AppOpsService$Ops: void put(int,java.lang.Object)>($i5, r3);

        goto label01;

     label09:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown element under <pkg>: ");

        $r15 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r16);

        staticinvoke <com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>(r1);

        goto label01;

     label10:
        return;
    }

    public void resetAllModes()
    {
        com.android.server.AppOpsService r0;
        java.util.HashMap r1, r3, $r35;
        boolean z0, $z1, $z2, $z3;
        java.lang.Throwable r2, $r41;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.util.Iterator r4, r9;
        java.util.Map$Entry r5, r10;
        java.lang.String r6, $r28;
        com.android.server.AppOpsService$Ops r7;
        com.android.server.AppOpsService$Op r8;
        com.android.server.AppOpsService$Callback r11;
        java.util.ArrayList r12, $r40, $r42;
        android.util.Pair r13;
        android.content.Context $r14;
        android.util.SparseArray $r16, $r25, $r33, $r38;
        java.util.Set $r17, $r29;
        java.lang.Object $r18, $r19, $r20, $r21, $r23, $r26, $r27, $r30, $r31, $r32, $r34, $r37, $r39;
        com.android.internal.app.IAppOpsCallback $r22;
        java.lang.Integer $r24;
        android.util.ArrayMap $r36;
        long $l20, $l22;
        byte $b21, $b23;
        android.os.RemoteException $r43;

        r0 := @this: com.android.server.AppOpsService;

        $r14 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $i3 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $i4 = staticinvoke <android.os.Binder: int getCallingUid()>();

        virtualinvoke $r14.<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>("android.permission.UPDATE_APP_OPS_STATS", $i3, $i4, null);

        r1 = null;

        entermonitor r0;

        z0 = 0;

     label01:
        $r16 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i5 = virtualinvoke $r16.<android.util.SparseArray: int size()>();

        i0 = -1 + $i5;

     label02:
        if i0 < 0 goto label17;

     label03:
        $r25 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r26 = virtualinvoke $r25.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r3 = (java.util.HashMap) $r26;

        $r29 = virtualinvoke r3.<java.util.HashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r32 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r32;

        $r31 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r31;

        $r30 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (com.android.server.AppOpsService$Ops) $r30;

        $i10 = virtualinvoke r7.<com.android.server.AppOpsService$Ops: int size()>();

        i1 = -1 + $i10;

     label05:
        if i1 < 0 goto label10;

     label06:
        $r34 = virtualinvoke r7.<com.android.server.AppOpsService$Ops: java.lang.Object valueAt(int)>(i1);

        r8 = (com.android.server.AppOpsService$Op) $r34;

        $i13 = r8.<com.android.server.AppOpsService$Op: int op>;

        $z3 = staticinvoke <android.app.AppOpsManager: boolean opAllowsReset(int)>($i13);

        if $z3 == 0 goto label27;

        $i11 = r8.<com.android.server.AppOpsService$Op: int mode>;

        $i12 = r8.<com.android.server.AppOpsService$Op: int op>;

        $i17 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i12);

        if $i11 == $i17 goto label27;

        $i16 = r8.<com.android.server.AppOpsService$Op: int op>;

        $i15 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i16);

        r8.<com.android.server.AppOpsService$Op: int mode> = $i15;

     label07:
        z0 = 1;

     label08:
        $i19 = r8.<com.android.server.AppOpsService$Op: int op>;

        $r38 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i14 = r8.<com.android.server.AppOpsService$Op: int op>;

        $r39 = virtualinvoke $r38.<android.util.SparseArray: java.lang.Object get(int)>($i14);

        $r40 = (java.util.ArrayList) $r39;

        $r35 = staticinvoke <com.android.server.AppOpsService: java.util.HashMap addCallbacks(java.util.HashMap,java.lang.String,int,java.util.ArrayList)>(r1, r6, $i19, $r40);

        $i18 = r8.<com.android.server.AppOpsService$Op: int op>;

        $r36 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r37 = virtualinvoke $r36.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r6);

        $r42 = (java.util.ArrayList) $r37;

        r1 = staticinvoke <com.android.server.AppOpsService: java.util.HashMap addCallbacks(java.util.HashMap,java.lang.String,int,java.util.ArrayList)>($r35, r6, $i18, $r42);

        $l22 = r8.<com.android.server.AppOpsService$Op: long time>;

        $b23 = $l22 cmp 0L;

        if $b23 != 0 goto label27;

        $l20 = r8.<com.android.server.AppOpsService$Op: long rejectTime>;

        $b21 = $l20 cmp 0L;

        if $b21 != 0 goto label27;

        virtualinvoke r7.<com.android.server.AppOpsService$Ops: void removeAt(int)>(i1);

     label09:
        goto label27;

     label10:
        $i9 = virtualinvoke r7.<com.android.server.AppOpsService$Ops: int size()>();

        if $i9 != 0 goto label04;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label11:
        goto label04;

     label12:
        $r41 := @caughtexception;

        r2 = $r41;

     label13:
        exitmonitor r0;

     label14:
        throw r2;

     label15:
        $i8 = virtualinvoke r3.<java.util.HashMap: int size()>();

        if $i8 != 0 goto label28;

        $r33 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r33.<android.util.SparseArray: void removeAt(int)>(i0);

     label16:
        goto label28;

     label17:
        if z0 == 0 goto label19;

     label18:
        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteNowLocked()>();

     label19:
        exitmonitor r0;

     label20:
        if r1 == null goto label25;

        $r17 = virtualinvoke r1.<java.util.HashMap: java.util.Set entrySet()>();

        r9 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label21:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label25;

        $r18 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r18;

        $r20 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        r11 = (com.android.server.AppOpsService$Callback) $r20;

        $r21 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        r12 = (java.util.ArrayList) $r21;

        i2 = 0;

     label22:
        $i6 = virtualinvoke r12.<java.util.ArrayList: int size()>();

        if i2 >= $i6 goto label21;

        $r19 = virtualinvoke r12.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r13 = (android.util.Pair) $r19;

     label23:
        $r22 = r11.<com.android.server.AppOpsService$Callback: com.android.internal.app.IAppOpsCallback mCallback>;

        $r23 = r13.<android.util.Pair: java.lang.Object second>;

        $r24 = (java.lang.Integer) $r23;

        $i7 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        $r27 = r13.<android.util.Pair: java.lang.Object first>;

        $r28 = (java.lang.String) $r27;

        interfaceinvoke $r22.<com.android.internal.app.IAppOpsCallback: void opChanged(int,java.lang.String)>($i7, $r28);

     label24:
        i2 = i2 + 1;

        goto label22;

     label25:
        return;

     label26:
        $r43 := @caughtexception;

        goto label24;

     label27:
        i1 = i1 + -1;

        goto label05;

     label28:
        i0 = i0 + -1;

        goto label02;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label15 to label16 with label12;
        catch java.lang.Throwable from label18 to label19 with label12;
        catch java.lang.Throwable from label19 to label20 with label12;
        catch android.os.RemoteException from label23 to label24 with label26;
    }

    public void setMode(int, int, java.lang.String, int)
    {
        com.android.server.AppOpsService r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8;
        java.lang.String r1;
        java.lang.Throwable r2, $r20, $r21;
        com.android.server.AppOpsService$Op r3;
        java.util.ArrayList r4, r5, r6, r7, r8, $r17, $r19;
        com.android.server.AppOpsService$Callback $r10;
        java.lang.Object $r11, $r15, $r16;
        android.util.SparseArray $r12;
        com.android.internal.app.IAppOpsCallback $r13;
        android.util.ArrayMap $r14;
        android.os.RemoteException $r18;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        i3 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        entermonitor r0;

     label01:
        r3 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(int,int,java.lang.String,boolean)>(i3, i1, r1, 1);

     label02:
        r4 = null;

        if r3 == null goto label16;

     label03:
        i4 = r3.<com.android.server.AppOpsService$Op: int mode>;

     label04:
        r4 = null;

        if i4 == i2 goto label16;

     label05:
        r3.<com.android.server.AppOpsService$Op: int mode> = i2;

        $r12 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r15 = virtualinvoke $r12.<android.util.SparseArray: java.lang.Object get(int)>(i3);

        r5 = (java.util.ArrayList) $r15;

     label06:
        r6 = null;

        if r5 == null goto label09;

     label07:
        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r6 = $r17;

     label08:
        virtualinvoke r6.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r5);

     label09:
        r7 = r6;

     label10:
        $r14 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r16 = virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r8 = (java.util.ArrayList) $r16;

     label11:
        if r8 == null goto label28;

        if r7 != null goto label27;

     label12:
        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r4 = $r19;

     label13:
        virtualinvoke r4.<java.util.ArrayList: boolean addAll(java.util.Collection)>(r8);

     label14:
        $i7 = r3.<com.android.server.AppOpsService$Op: int op>;

        $i8 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i7);

        if i2 != $i8 goto label15;

        specialinvoke r0.<com.android.server.AppOpsService: void pruneOp(com.android.server.AppOpsService$Op,int,java.lang.String)>(r3, i1, r1);

     label15:
        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteNowLocked()>();

     label16:
        exitmonitor r0;

     label17:
        if r4 == null goto label24;

        i5 = 0;

     label18:
        $i6 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if i5 >= $i6 goto label24;

     label19:
        $r11 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        $r10 = (com.android.server.AppOpsService$Callback) $r11;

        $r13 = $r10.<com.android.server.AppOpsService$Callback: com.android.internal.app.IAppOpsCallback mCallback>;

        interfaceinvoke $r13.<com.android.internal.app.IAppOpsCallback: void opChanged(int,java.lang.String)>(i3, r1);

     label20:
        i5 = i5 + 1;

        goto label18;

     label21:
        $r20 := @caughtexception;

        r2 = $r20;

     label22:
        exitmonitor r0;

     label23:
        throw r2;

     label24:
        return;

     label25:
        $r18 := @caughtexception;

        goto label20;

     label26:
        $r21 := @caughtexception;

        r2 = $r21;

        goto label22;

     label27:
        r4 = r7;

        goto label13;

     label28:
        r4 = r7;

        goto label14;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label07 to label08 with label21;
        catch java.lang.Throwable from label08 to label09 with label21;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.lang.Throwable from label12 to label13 with label26;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label15 to label16 with label21;
        catch java.lang.Throwable from label16 to label17 with label21;
        catch android.os.RemoteException from label19 to label20 with label25;
        catch java.lang.Throwable from label22 to label23 with label21;
    }

    public void shutdown()
    {
        com.android.server.AppOpsService r0;
        java.lang.Throwable r1, $r2;
        boolean z0, z1;

        r0 := @this: com.android.server.AppOpsService;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", "Writing app ops before shutdown...");

        entermonitor r0;

     label01:
        z0 = r0.<com.android.server.AppOpsService: boolean mWriteScheduled>;

     label02:
        z1 = 0;

        if z0 == 0 goto label05;

     label03:
        r0.<com.android.server.AppOpsService: boolean mWriteScheduled> = 0;

     label04:
        z1 = 1;

     label05:
        exitmonitor r0;

     label06:
        if z1 == 0 goto label07;

        virtualinvoke r0.<com.android.server.AppOpsService: void writeState()>();

     label07:
        return;

     label08:
        $r2 := @caughtexception;

        r1 = $r2;

     label09:
        exitmonitor r0;

     label10:
        throw r1;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public int startOperation(android.os.IBinder, int, int, java.lang.String)
    {
        com.android.server.AppOpsService r0;
        android.os.IBinder r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.String r2;
        com.android.server.AppOpsService$ClientState r3;
        java.lang.Throwable r4, $r10;
        com.android.server.AppOpsService$Ops r5;
        com.android.server.AppOpsService$Op r6, r7;
        java.util.ArrayList $r8, $r9;
        long $l8, $l9;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingUid(int)>(i1);

        specialinvoke r0.<com.android.server.AppOpsService: void verifyIncomingOp(int)>(i0);

        r3 = (com.android.server.AppOpsService$ClientState) r1;

        entermonitor r0;

     label01:
        r5 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Ops getOpsLocked(int,java.lang.String,boolean)>(i1, r2, 1);

     label02:
        if r5 != null goto label05;

     label03:
        exitmonitor r0;

     label04:
        return 2;

     label05:
        r6 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r5, i0, 1);

        i2 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

     label06:
        if i2 == i0 goto label13;

     label07:
        r7 = specialinvoke r0.<com.android.server.AppOpsService: com.android.server.AppOpsService$Op getOpLocked(com.android.server.AppOpsService$Ops,int,boolean)>(r5, i2, 1);

     label08:
        $i4 = r7.<com.android.server.AppOpsService$Op: int mode>;

        if $i4 == 0 goto label14;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r6.<com.android.server.AppOpsService$Op: long rejectTime> = $l9;

        i3 = r7.<com.android.server.AppOpsService$Op: int mode>;

        exitmonitor r0;

     label09:
        return i3;

     label10:
        $r10 := @caughtexception;

        r4 = $r10;

     label11:
        exitmonitor r0;

     label12:
        throw r4;

     label13:
        r7 = r6;

        goto label08;

     label14:
        $i6 = r6.<com.android.server.AppOpsService$Op: int nesting>;

        if $i6 != 0 goto label15;

        $l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r6.<com.android.server.AppOpsService$Op: long time> = $l8;

        r6.<com.android.server.AppOpsService$Op: long rejectTime> = 0L;

        r6.<com.android.server.AppOpsService$Op: int duration> = -1;

     label15:
        $i5 = r6.<com.android.server.AppOpsService$Op: int nesting>;

        $i7 = 1 + $i5;

        r6.<com.android.server.AppOpsService$Op: int nesting> = $i7;

        $r8 = r3.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        if $r8 == null goto label16;

        $r9 = r3.<com.android.server.AppOpsService$ClientState: java.util.ArrayList mStartedOps>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label16:
        exitmonitor r0;

     label17:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
        catch java.lang.Throwable from label14 to label15 with label10;
        catch java.lang.Throwable from label15 to label16 with label10;
        catch java.lang.Throwable from label16 to label17 with label10;
    }

    public void startWatchingMode(int, java.lang.String, com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.AppOpsService r0;
        int i0, i1;
        java.lang.String r1;
        com.android.internal.app.IAppOpsCallback r2;
        java.lang.Throwable r3, $r23;
        com.android.server.AppOpsService$Callback r4, $r20;
        java.util.ArrayList r5, r6, $r13, $r18;
        android.util.ArrayMap $r7, $r10, $r12, $r19;
        android.os.IBinder $r8, $r22;
        java.lang.Object $r9, $r11, $r16;
        android.util.SparseArray $r14, $r17;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.internal.app.IAppOpsCallback;

        entermonitor r0;

     label01:
        i1 = staticinvoke <android.app.AppOpsManager: int opToSwitch(int)>(i0);

        $r7 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r8 = interfaceinvoke r2.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        $r9 = virtualinvoke $r7.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>($r8);

        r4 = (com.android.server.AppOpsService$Callback) $r9;

     label02:
        if r4 != null goto label04;

     label03:
        $r20 = new com.android.server.AppOpsService$Callback;

        specialinvoke $r20.<com.android.server.AppOpsService$Callback: void <init>(com.android.server.AppOpsService,com.android.internal.app.IAppOpsCallback)>(r0, r2);

        r4 = $r20;

        $r19 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r22 = interfaceinvoke r2.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        virtualinvoke $r19.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, r4);

     label04:
        if i1 == -1 goto label09;

     label05:
        $r14 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r16 = virtualinvoke $r14.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r5 = (java.util.ArrayList) $r16;

     label06:
        if r5 != null goto label08;

     label07:
        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r5 = $r18;

        $r17 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke $r17.<android.util.SparseArray: void put(int,java.lang.Object)>(i1, r5);

     label08:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label09:
        if r1 == null goto label14;

     label10:
        $r10 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r11 = virtualinvoke $r10.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (java.util.ArrayList) $r11;

     label11:
        if r6 != null goto label13;

     label12:
        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r6 = $r13;

        $r12 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

     label13:
        virtualinvoke r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

     label14:
        exitmonitor r0;

     label15:
        return;

     label16:
        $r23 := @caughtexception;

        r3 = $r23;

     label17:
        exitmonitor r0;

     label18:
        throw r3;

        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label03 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label08 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label11 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    public void stopWatchingMode(com.android.internal.app.IAppOpsCallback)
    {
        com.android.server.AppOpsService r0;
        com.android.internal.app.IAppOpsCallback r1;
        java.lang.Throwable r2, $r17;
        com.android.server.AppOpsService$Callback r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.ArrayList r4, r5;
        android.util.ArrayMap $r6, $r10, $r12, $r14;
        android.os.IBinder $r7;
        java.lang.Object $r8, $r11, $r15;
        android.util.SparseArray $r9, $r16, $r18;

        r0 := @this: com.android.server.AppOpsService;

        r1 := @parameter0: com.android.internal.app.IAppOpsCallback;

        entermonitor r0;

     label01:
        $r6 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mModeWatchers>;

        $r7 = interfaceinvoke r1.<com.android.internal.app.IAppOpsCallback: android.os.IBinder asBinder()>();

        $r8 = virtualinvoke $r6.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>($r7);

        r3 = (com.android.server.AppOpsService$Callback) $r8;

     label02:
        if r3 == null goto label11;

     label03:
        virtualinvoke r3.<com.android.server.AppOpsService$Callback: void unlinkToDeath()>();

        $r9 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $i2 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        i0 = -1 + $i2;

     label04:
        if i0 < 0 goto label07;

     label05:
        $r16 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        $r15 = virtualinvoke $r16.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r4 = (java.util.ArrayList) $r15;

        virtualinvoke r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        $i5 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        if $i5 > 0 goto label16;

        $r18 = r0.<com.android.server.AppOpsService: android.util.SparseArray mOpModeWatchers>;

        virtualinvoke $r18.<android.util.SparseArray: void removeAt(int)>(i0);

     label06:
        goto label16;

     label07:
        $r10 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $i3 = virtualinvoke $r10.<android.util.ArrayMap: int size()>();

        i1 = -1 + $i3;

     label08:
        if i1 < 0 goto label11;

     label09:
        $r12 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        $r11 = virtualinvoke $r12.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        r5 = (java.util.ArrayList) $r11;

        virtualinvoke r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r3);

        $i4 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if $i4 > 0 goto label17;

        $r14 = r0.<com.android.server.AppOpsService: android.util.ArrayMap mPackageModeWatchers>;

        virtualinvoke $r14.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i1);

     label10:
        goto label17;

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        $r17 := @caughtexception;

        r2 = $r17;

     label14:
        exitmonitor r0;

     label15:
        throw r2;

     label16:
        i0 = i0 + -1;

        goto label04;

     label17:
        i1 = i1 + -1;

        goto label08;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void systemReady()
    {
        com.android.server.AppOpsService r0;
        boolean z0, $z1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Throwable r1, $r24;
        java.util.HashMap r2;
        java.util.Iterator r3;
        com.android.server.AppOpsService$Ops r4;
        android.util.SparseArray $r6, $r7, $r10;
        java.util.Collection $r8;
        java.lang.Object $r9, $r12;
        android.content.Context $r11;
        android.content.pm.PackageManager $r13;
        java.lang.String $r14, $r19, $r25;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r20, $r21, $r22;
        android.content.pm.PackageManager$NameNotFoundException $r23;

        r0 := @this: com.android.server.AppOpsService;

        entermonitor r0;

        z0 = 0;

        i0 = 0;

     label01:
        $r6 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i3 = virtualinvoke $r6.<android.util.SparseArray: int size()>();

        if i0 >= $i3 goto label09;

        $r7 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $r9 = virtualinvoke $r7.<android.util.SparseArray: java.lang.Object valueAt(int)>(i0);

        r2 = (java.util.HashMap) $r9;

        $r8 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.AppOpsService$Ops) $r12;

     label03:
        $r11 = r0.<com.android.server.AppOpsService: android.content.Context mContext>;

        $r13 = virtualinvoke $r11.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r14 = r4.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        $i5 = r4.<com.android.server.AppOpsService$Ops: int uid>;

        $i6 = staticinvoke <android.os.UserHandle: int getUserId(int)>($i5);

        i2 = virtualinvoke $r13.<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>($r14, $i6);

     label04:
        i1 = i2;

     label05:
        $i7 = r4.<com.android.server.AppOpsService$Ops: int uid>;

        if i1 == $i7 goto label02;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pruning old package ");

        $r19 = r4.<com.android.server.AppOpsService$Ops: java.lang.String packageName>;

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i8 = r4.<com.android.server.AppOpsService$Ops: int uid>;

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": new uid=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("AppOps", $r25);

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label06:
        z0 = 1;

        goto label02;

     label07:
        $i4 = virtualinvoke r2.<java.util.HashMap: int size()>();

        if $i4 > 0 goto label17;

        $r10 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r10.<android.util.SparseArray: void removeAt(int)>(i0);

     label08:
        goto label17;

     label09:
        if z0 == 0 goto label11;

     label10:
        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteLocked()>();

     label11:
        exitmonitor r0;

     label12:
        return;

     label13:
        $r24 := @caughtexception;

        r1 = $r24;

     label14:
        exitmonitor r0;

     label15:
        throw r1;

     label16:
        $r23 := @caughtexception;

        i1 = -1;

        goto label05;

     label17:
        i0 = i0 + 1;

        goto label01;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label16;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void uidRemoved(int)
    {
        com.android.server.AppOpsService r0;
        int i0, $i1;
        java.lang.Throwable r1, $r4;
        android.util.SparseArray $r2, $r3;

        r0 := @this: com.android.server.AppOpsService;

        i0 := @parameter0: int;

        entermonitor r0;

     label1:
        $r2 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        $i1 = virtualinvoke $r2.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if $i1 < 0 goto label2;

        $r3 = r0.<com.android.server.AppOpsService: android.util.SparseArray mUidOps>;

        virtualinvoke $r3.<android.util.SparseArray: void remove(int)>(i0);

        specialinvoke r0.<com.android.server.AppOpsService: void scheduleWriteLocked()>();

     label2:
        exitmonitor r0;

     label3:
        return;

     label4:
        $r4 := @caughtexception;

        r1 = $r4;

     label5:
        exitmonitor r0;

     label6:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void writeState()
    {
        com.android.server.AppOpsService r0;
        android.util.AtomicFile r1, $r13, $r15, $r43;
        java.lang.Throwable r2, $r44;
        java.util.List r3, r10;
        java.io.IOException r4, r7, $r42, $r45;
        java.io.FileOutputStream r5;
        com.android.internal.util.FastXmlSerializer r6, $r12;
        java.lang.String r8, $r21, $r23, $r27, $r29, $r32, $r34, $r40, $r46;
        int i0, i1, i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i14;
        android.app.AppOpsManager$PackageOps r9;
        android.app.AppOpsManager$OpEntry r11;
        long l2, l3;
        java.lang.Boolean $r16;
        java.lang.Object $r19, $r24;
        boolean $z0;
        byte $b10, $b13;
        java.lang.StringBuilder $r41, $r47, $r48;

        r0 := @this: com.android.server.AppOpsService;

        r1 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        entermonitor r1;

     label01:
        r3 = virtualinvoke r0.<com.android.server.AppOpsService: java.util.List getPackagesForOps(int[])>(null);

     label02:
        $r13 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        r5 = virtualinvoke $r13.<android.util.AtomicFile: java.io.FileOutputStream startWrite()>();

     label03:
        $r12 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r12.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r6 = $r12;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(r5, "utf-8");

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, $r16);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "app-ops");

     label04:
        if r3 == null goto label30;

        r8 = null;

        i0 = 0;

     label05:
        $i5 = interfaceinvoke r3.<java.util.List: int size()>();

        if i0 >= $i5 goto label28;

        $r19 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r9 = (android.app.AppOpsManager$PackageOps) $r19;

        $r21 = virtualinvoke r9.<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z0 != 0 goto label09;

     label06:
        if r8 == null goto label08;

     label07:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label08:
        r8 = virtualinvoke r9.<android.app.AppOpsManager$PackageOps: java.lang.String getPackageName()>();

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "pkg");

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", r8);

     label09:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "uid");

        $i6 = virtualinvoke r9.<android.app.AppOpsManager$PackageOps: int getUid()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r23);

        r10 = virtualinvoke r9.<android.app.AppOpsManager$PackageOps: java.util.List getOps()>();

     label10:
        i1 = 0;

     label11:
        $i7 = interfaceinvoke r10.<java.util.List: int size()>();

        if i1 >= $i7 goto label26;

        $r24 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(i1);

        r11 = (android.app.AppOpsManager$OpEntry) $r24;

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "op");

        $i8 = virtualinvoke r11.<android.app.AppOpsManager$OpEntry: int getOp()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "n", $r27);

        $i11 = virtualinvoke r11.<android.app.AppOpsManager$OpEntry: int getMode()>();

        $i12 = virtualinvoke r11.<android.app.AppOpsManager$OpEntry: int getOp()>();

        $i9 = staticinvoke <android.app.AppOpsManager: int opToDefaultMode(int)>($i12);

        if $i11 == $i9 goto label12;

        $i14 = virtualinvoke r11.<android.app.AppOpsManager$OpEntry: int getMode()>();

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "m", $r40);

     label12:
        l2 = virtualinvoke r11.<android.app.AppOpsManager$OpEntry: long getTime()>();

     label13:
        $b10 = l2 cmp 0L;

        if $b10 == 0 goto label15;

     label14:
        $r32 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "t", $r32);

     label15:
        l3 = virtualinvoke r11.<android.app.AppOpsManager$OpEntry: long getRejectTime()>();

     label16:
        $b13 = l3 cmp 0L;

        if $b13 == 0 goto label18;

     label17:
        $r34 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l3);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "r", $r34);

     label18:
        i4 = virtualinvoke r11.<android.app.AppOpsManager$OpEntry: int getDuration()>();

     label19:
        if i4 == 0 goto label21;

     label20:
        $r29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i4);

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "d", $r29);

     label21:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "op");

     label22:
        i1 = i1 + 1;

        goto label11;

     label23:
        $r42 := @caughtexception;

        r4 = $r42;

     label24:
        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write state: ");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r46 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("AppOps", $r46);

        exitmonitor r1;

     label25:
        return;

     label26:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "uid");

     label27:
        i0 = i0 + 1;

        goto label05;

     label28:
        if r8 == null goto label30;

     label29:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "pkg");

     label30:
        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "app-ops");

        interfaceinvoke r6.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

        $r15 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        virtualinvoke $r15.<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>(r5);

     label31:
        exitmonitor r1;

     label32:
        return;

     label33:
        $r44 := @caughtexception;

        r2 = $r44;

     label34:
        exitmonitor r1;

     label35:
        throw r2;

     label36:
        $r45 := @caughtexception;

        r7 = $r45;

     label37:
        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("AppOps", "Failed to write state, restoring backup.", r7);

        $r43 = r0.<com.android.server.AppOpsService: android.util.AtomicFile mFile>;

        virtualinvoke $r43.<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>(r5);

     label38:
        goto label31;

        catch java.lang.Throwable from label01 to label02 with label33;
        catch java.io.IOException from label02 to label03 with label23;
        catch java.lang.Throwable from label02 to label03 with label33;
        catch java.io.IOException from label03 to label04 with label36;
        catch java.lang.Throwable from label03 to label04 with label33;
        catch java.io.IOException from label05 to label06 with label36;
        catch java.lang.Throwable from label05 to label06 with label33;
        catch java.io.IOException from label07 to label08 with label36;
        catch java.lang.Throwable from label07 to label08 with label33;
        catch java.io.IOException from label08 to label09 with label36;
        catch java.lang.Throwable from label08 to label09 with label33;
        catch java.io.IOException from label09 to label10 with label36;
        catch java.lang.Throwable from label09 to label10 with label33;
        catch java.io.IOException from label11 to label12 with label36;
        catch java.lang.Throwable from label11 to label12 with label33;
        catch java.io.IOException from label12 to label13 with label36;
        catch java.lang.Throwable from label12 to label13 with label33;
        catch java.io.IOException from label14 to label15 with label36;
        catch java.lang.Throwable from label14 to label15 with label33;
        catch java.io.IOException from label15 to label16 with label36;
        catch java.lang.Throwable from label15 to label16 with label33;
        catch java.io.IOException from label17 to label18 with label36;
        catch java.lang.Throwable from label17 to label18 with label33;
        catch java.io.IOException from label18 to label19 with label36;
        catch java.lang.Throwable from label18 to label19 with label33;
        catch java.io.IOException from label20 to label21 with label36;
        catch java.lang.Throwable from label20 to label21 with label33;
        catch java.io.IOException from label21 to label22 with label36;
        catch java.lang.Throwable from label21 to label22 with label33;
        catch java.lang.Throwable from label24 to label25 with label33;
        catch java.io.IOException from label26 to label27 with label36;
        catch java.lang.Throwable from label26 to label27 with label33;
        catch java.io.IOException from label29 to label30 with label36;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.io.IOException from label30 to label31 with label36;
        catch java.lang.Throwable from label30 to label31 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
        catch java.lang.Throwable from label34 to label35 with label33;
        catch java.lang.Throwable from label37 to label38 with label33;
    }

    public static void <clinit>()
    {
        <com.android.server.AppOpsService: long WRITE_DELAY> = 1800000L;

        <com.android.server.AppOpsService: java.lang.String TAG> = "AppOps";

        <com.android.server.AppOpsService: boolean DEBUG> = 0;

        return;
    }
}
