public class com.android.server.CountryDetectorService extends android.location.ICountryDetector$Stub implements java.lang.Runnable
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    private com.android.server.location.ComprehensiveCountryDetector mCountryDetector;
    private android.os.Handler mHandler;
    private android.location.CountryListener mLocationBasedDetectorListener;
    private final java.util.HashMap mReceivers;
    private boolean mSystemReady;

    public void <init>(android.content.Context)
    {
        com.android.server.CountryDetectorService r0;
        android.content.Context r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.location.ICountryDetector$Stub: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers> = $r2;

        r0.<com.android.server.CountryDetectorService: android.content.Context mContext> = r1;

        return;
    }

    static void access$000(com.android.server.CountryDetectorService, android.os.IBinder)
    {
        com.android.server.CountryDetectorService r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.CountryDetectorService;

        r1 := @parameter1: android.os.IBinder;

        specialinvoke r0.<com.android.server.CountryDetectorService: void removeListener(android.os.IBinder)>(r1);

        return;
    }

    static android.os.Handler access$100(com.android.server.CountryDetectorService)
    {
        com.android.server.CountryDetectorService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.server.CountryDetectorService;

        $r1 = r0.<com.android.server.CountryDetectorService: android.os.Handler mHandler>;

        return $r1;
    }

    static com.android.server.location.ComprehensiveCountryDetector access$200(com.android.server.CountryDetectorService)
    {
        com.android.server.CountryDetectorService r0;
        com.android.server.location.ComprehensiveCountryDetector $r1;

        r0 := @parameter0: com.android.server.CountryDetectorService;

        $r1 = r0.<com.android.server.CountryDetectorService: com.android.server.location.ComprehensiveCountryDetector mCountryDetector>;

        return $r1;
    }

    private void addListener(android.location.ICountryListener)
    {
        com.android.server.CountryDetectorService r0;
        android.location.ICountryListener r1;
        java.util.HashMap r2, $r8, $r11;
        com.android.server.CountryDetectorService$Receiver r3, r15;
        java.lang.Throwable r4, $r14, r17;
        android.os.RemoteException r5, $r12;
        android.os.IBinder $r7, $r9;
        int $i0;
        android.location.CountryListener $r13;
        android.os.IBinder$DeathRecipient r16;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.ICountryListener;

        r2 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        entermonitor r2;

     label01:
        r15 = new com.android.server.CountryDetectorService$Receiver;

        specialinvoke r15.<com.android.server.CountryDetectorService$Receiver: void <init>(com.android.server.CountryDetectorService,android.location.ICountryListener)>(r0, r1);

        r3 = r15;

     label02:
        $r7 = interfaceinvoke r1.<android.location.ICountryListener: android.os.IBinder asBinder()>();

        r16 = (android.os.IBinder$DeathRecipient) r3;

        interfaceinvoke $r7.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>(r16, 0);

        $r8 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        $r9 = interfaceinvoke r1.<android.location.ICountryListener: android.os.IBinder asBinder()>();

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r3);

        $r11 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        $i0 = virtualinvoke $r11.<java.util.HashMap: int size()>();

        if $i0 != 1 goto label03;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CountryDetector", "The first listener is added");

        $r13 = r0.<com.android.server.CountryDetectorService: android.location.CountryListener mLocationBasedDetectorListener>;

        virtualinvoke r0.<com.android.server.CountryDetectorService: void setCountryListener(android.location.CountryListener)>($r13);

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $r12 := @caughtexception;

        r5 = $r12;

     label06:
        r17 = (java.lang.Throwable) r5;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "linkToDeath failed:", r17);

     label07:
        goto label03;

     label08:
        $r14 := @caughtexception;

        r4 = $r14;

     label09:
        exitmonitor r2;

     label10:
        throw r4;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch android.os.RemoteException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    private void initialize()
    {
        com.android.server.CountryDetectorService r0;
        android.content.Context $r2;
        com.android.server.location.ComprehensiveCountryDetector r4;
        com.android.server.CountryDetectorService$1 r5;
        android.location.CountryListener r6;

        r0 := @this: com.android.server.CountryDetectorService;

        r4 = new com.android.server.location.ComprehensiveCountryDetector;

        $r2 = r0.<com.android.server.CountryDetectorService: android.content.Context mContext>;

        specialinvoke r4.<com.android.server.location.ComprehensiveCountryDetector: void <init>(android.content.Context)>($r2);

        r0.<com.android.server.CountryDetectorService: com.android.server.location.ComprehensiveCountryDetector mCountryDetector> = r4;

        r5 = new com.android.server.CountryDetectorService$1;

        specialinvoke r5.<com.android.server.CountryDetectorService$1: void <init>(com.android.server.CountryDetectorService)>(r0);

        r6 = (android.location.CountryListener) r5;

        r0.<com.android.server.CountryDetectorService: android.location.CountryListener mLocationBasedDetectorListener> = r6;

        return;
    }

    private void removeListener(android.os.IBinder)
    {
        com.android.server.CountryDetectorService r0;
        android.os.IBinder r1;
        java.util.HashMap r2, $r4, $r6;
        java.lang.Throwable r3, $r7;
        boolean $z0;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.os.IBinder;

        r2 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        entermonitor r2;

     label1:
        $r4 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r6 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        $z0 = virtualinvoke $r6.<java.util.HashMap: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.server.CountryDetectorService: void setCountryListener(android.location.CountryListener)>(null);

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("CountryDetector", "No listener is left");

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

     label5:
        exitmonitor r2;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void addCountryListener(android.location.ICountryListener) throws android.os.RemoteException
    {
        com.android.server.CountryDetectorService r0;
        android.location.ICountryListener r1;
        boolean $z0;
        android.os.RemoteException r3;
        java.lang.Throwable r4;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.ICountryListener;

        $z0 = r0.<com.android.server.CountryDetectorService: boolean mSystemReady>;

        if $z0 != 0 goto label1;

        r3 = new android.os.RemoteException;

        specialinvoke r3.<android.os.RemoteException: void <init>()>();

        r4 = (java.lang.Throwable) r3;

        throw r4;

     label1:
        specialinvoke r0.<com.android.server.CountryDetectorService: void addListener(android.location.ICountryListener)>(r1);

        return;
    }

    public android.location.Country detectCountry()
    {
        com.android.server.CountryDetectorService r0;
        boolean $z0;
        com.android.server.location.ComprehensiveCountryDetector $r1;
        android.location.Country $r2;

        r0 := @this: com.android.server.CountryDetectorService;

        $z0 = r0.<com.android.server.CountryDetectorService: boolean mSystemReady>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.android.server.CountryDetectorService: com.android.server.location.ComprehensiveCountryDetector mCountryDetector>;

        $r2 = virtualinvoke $r1.<com.android.server.location.ComprehensiveCountryDetector: android.location.Country detectCountry()>();

        return $r2;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.CountryDetectorService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.content.Context $r4;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.CountryDetectorService: android.content.Context mContext>;

        virtualinvoke $r4.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "CountryDetector");

        return;
    }

    boolean isSystemReady()
    {
        com.android.server.CountryDetectorService r0;
        boolean $z0;

        r0 := @this: com.android.server.CountryDetectorService;

        $z0 = r0.<com.android.server.CountryDetectorService: boolean mSystemReady>;

        return $z0;
    }

    protected void notifyReceivers(android.location.Country)
    {
        com.android.server.CountryDetectorService r0;
        android.location.Country r1;
        java.util.HashMap r2, $r7;
        java.lang.Throwable r3, $r12, r13;
        java.util.Iterator r4;
        com.android.server.CountryDetectorService$Receiver r5;
        android.os.RemoteException r6, $r11;
        java.util.Collection $r8;
        boolean $z0;
        java.lang.Object $r9;
        android.location.ICountryListener $r10;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.Country;

        r2 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        entermonitor r2;

     label01:
        $r7 = r0.<com.android.server.CountryDetectorService: java.util.HashMap mReceivers>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r4 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.server.CountryDetectorService$Receiver) $r9;

     label03:
        $r10 = virtualinvoke r5.<com.android.server.CountryDetectorService$Receiver: android.location.ICountryListener getListener()>();

        interfaceinvoke $r10.<android.location.ICountryListener: void onCountryDetected(android.location.Country)>(r1);

     label04:
        goto label02;

     label05:
        $r11 := @caughtexception;

        r6 = $r11;

     label06:
        r13 = (java.lang.Throwable) r6;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CountryDetector", "notifyReceivers failed:", r13);

     label07:
        goto label02;

     label08:
        $r12 := @caughtexception;

        r3 = $r12;

     label09:
        exitmonitor r2;

     label10:
        throw r3;

     label11:
        exitmonitor r2;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    public void removeCountryListener(android.location.ICountryListener) throws android.os.RemoteException
    {
        com.android.server.CountryDetectorService r0;
        android.location.ICountryListener r1;
        boolean $z0;
        android.os.IBinder $r2;
        android.os.RemoteException r4;
        java.lang.Throwable r5;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.ICountryListener;

        $z0 = r0.<com.android.server.CountryDetectorService: boolean mSystemReady>;

        if $z0 != 0 goto label1;

        r4 = new android.os.RemoteException;

        specialinvoke r4.<android.os.RemoteException: void <init>()>();

        r5 = (java.lang.Throwable) r4;

        throw r5;

     label1:
        $r2 = interfaceinvoke r1.<android.location.ICountryListener: android.os.IBinder asBinder()>();

        specialinvoke r0.<com.android.server.CountryDetectorService: void removeListener(android.os.IBinder)>($r2);

        return;
    }

    public void run()
    {
        com.android.server.CountryDetectorService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.CountryDetectorService;

        $r1 = new android.os.Handler;

        specialinvoke $r1.<android.os.Handler: void <init>()>();

        r0.<com.android.server.CountryDetectorService: android.os.Handler mHandler> = $r1;

        specialinvoke r0.<com.android.server.CountryDetectorService: void initialize()>();

        r0.<com.android.server.CountryDetectorService: boolean mSystemReady> = 1;

        return;
    }

    protected void setCountryListener(android.location.CountryListener)
    {
        com.android.server.CountryDetectorService r0;
        android.location.CountryListener r1;
        com.android.server.CountryDetectorService$2 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.CountryDetectorService;

        r1 := @parameter0: android.location.CountryListener;

        $r3 = r0.<com.android.server.CountryDetectorService: android.os.Handler mHandler>;

        $r2 = new com.android.server.CountryDetectorService$2;

        specialinvoke $r2.<com.android.server.CountryDetectorService$2: void <init>(com.android.server.CountryDetectorService,android.location.CountryListener)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    void systemRunning()
    {
        com.android.server.CountryDetectorService r0;
        android.os.Handler $r1;

        r0 := @this: com.android.server.CountryDetectorService;

        $r1 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>(r0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.CountryDetectorService: java.lang.String TAG> = "CountryDetector";

        <com.android.server.CountryDetectorService: boolean DEBUG> = 0;

        return;
    }
}
