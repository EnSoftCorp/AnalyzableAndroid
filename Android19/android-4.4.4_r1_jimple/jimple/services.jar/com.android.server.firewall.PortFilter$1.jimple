final class com.android.server.firewall.PortFilter$1 extends com.android.server.firewall.FilterFactory
{

    void <init>(java.lang.String)
    {
        com.android.server.firewall.PortFilter$1 r0;
        java.lang.String r1;

        r0 := @this: com.android.server.firewall.PortFilter$1;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.server.firewall.FilterFactory: void <init>(java.lang.String)>(r1);

        return;
    }

    public com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        com.android.server.firewall.PortFilter$1 r0;
        org.xmlpull.v1.XmlPullParser r1;
        int i0, i1, i2, i3, i4;
        java.lang.String r2, r3, r4, $r16, $r23, $r25;
        java.lang.NumberFormatException $r10, $r15, $r24;
        java.lang.StringBuilder $r13, $r14, $r19, $r20, $r26, $r27, r29, r32, r34;
        org.xmlpull.v1.XmlPullParserException r28, r30, r33, r35;
        com.android.server.firewall.PortFilter r31;
        java.lang.Throwable r36, r37, r38, r39;

        r0 := @this: com.android.server.firewall.PortFilter$1;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = -1;

        i1 = -1;

        r2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "equals");

        if r2 == null goto label03;

     label01:
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label02:
        i0 = i4;

        i1 = i4;

     label03:
        r3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "min");

        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "max");

        if r3 != null goto label04;

        if r4 == null goto label12;

     label04:
        if r2 == null goto label06;

        r28 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke r28.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>("Port filter cannot use both equals and range filtering", r1, null);

        r36 = (java.lang.Throwable) r28;

        throw r36;

     label05:
        $r10 := @caughtexception;

        r30 = new org.xmlpull.v1.XmlPullParserException;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid port value: ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r16, r1, null);

        r37 = (java.lang.Throwable) r30;

        throw r37;

     label06:
        if r3 == null goto label09;

     label07:
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label08:
        i0 = i3;

     label09:
        if r4 == null goto label12;

     label10:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

     label11:
        i1 = i2;

     label12:
        r31 = new com.android.server.firewall.PortFilter;

        specialinvoke r31.<com.android.server.firewall.PortFilter: void <init>(int,int,com.android.server.firewall.PortFilter$1)>(i0, i1, null);

        return r31;

     label13:
        $r15 := @caughtexception;

        r33 = new org.xmlpull.v1.XmlPullParserException;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid minimum port value: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r33.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r23, r1, null);

        r38 = (java.lang.Throwable) r33;

        throw r38;

     label14:
        $r24 := @caughtexception;

        r35 = new org.xmlpull.v1.XmlPullParserException;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid maximum port value: ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r35.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable)>($r25, r1, null);

        r39 = (java.lang.Throwable) r35;

        throw r39;

        catch java.lang.NumberFormatException from label01 to label02 with label05;
        catch java.lang.NumberFormatException from label07 to label08 with label13;
        catch java.lang.NumberFormatException from label10 to label11 with label14;
    }
}
