class com.android.server.accessibility.AccessibilityManagerService$UserState extends java.lang.Object
{
    public final java.util.Set mBindingServices;
    public final java.util.concurrent.CopyOnWriteArrayList mBoundServices;
    public final android.os.RemoteCallbackList mClients;
    public final java.util.Map mComponentNameToServiceMap;
    public final java.util.Set mEnabledServices;
    public int mHandledFeedbackTypes;
    public final java.util.List mInstalledServices;
    public final android.util.SparseArray mInteractionConnections;
    public boolean mIsAccessibilityEnabled;
    public boolean mIsDisplayMagnificationEnabled;
    public boolean mIsEnhancedWebAccessibilityEnabled;
    public boolean mIsFilterKeyEventsEnabled;
    public boolean mIsTouchExplorationEnabled;
    public int mLastSentClientState;
    public final java.util.Set mTouchExplorationGrantedServices;
    private final android.os.IBinder$DeathRecipient mUiAutomationSerivceOnwerDeathRecipient;
    private com.android.server.accessibility.AccessibilityManagerService$Service mUiAutomationService;
    private android.accessibilityservice.IAccessibilityServiceClient mUiAutomationServiceClient;
    private android.os.IBinder mUiAutomationServiceOwner;
    public final int mUserId;
    public final android.util.SparseArray mWindowTokens;
    final com.android.server.accessibility.AccessibilityManagerService this$0;

    public void <init>(com.android.server.accessibility.AccessibilityManagerService, int)
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        com.android.server.accessibility.AccessibilityManagerService r1;
        int i0;
        android.os.RemoteCallbackList r12;
        android.util.SparseArray r13, r14;
        java.util.concurrent.CopyOnWriteArrayList r15;
        java.util.HashMap r16;
        java.util.ArrayList r17;
        java.util.HashSet r18, r19, r20;
        com.android.server.accessibility.AccessibilityManagerService$UserState$1 r21;
        android.os.IBinder$DeathRecipient r22;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$UserState;

        r1 := @parameter0: com.android.server.accessibility.AccessibilityManagerService;

        i0 := @parameter1: int;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: com.android.server.accessibility.AccessibilityManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r12 = new android.os.RemoteCallbackList;

        specialinvoke r12.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.RemoteCallbackList mClients> = r12;

        r13 = new android.util.SparseArray;

        specialinvoke r13.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.util.SparseArray mInteractionConnections> = r13;

        r14 = new android.util.SparseArray;

        specialinvoke r14.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.util.SparseArray mWindowTokens> = r14;

        r15 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke r15.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.concurrent.CopyOnWriteArrayList mBoundServices> = r15;

        r16 = new java.util.HashMap;

        specialinvoke r16.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Map mComponentNameToServiceMap> = r16;

        r17 = new java.util.ArrayList;

        specialinvoke r17.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.List mInstalledServices> = r17;

        r18 = new java.util.HashSet;

        specialinvoke r18.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mBindingServices> = r18;

        r19 = new java.util.HashSet;

        specialinvoke r19.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mEnabledServices> = r19;

        r20 = new java.util.HashSet;

        specialinvoke r20.<java.util.HashSet: void <init>()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mTouchExplorationGrantedServices> = r20;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: int mHandledFeedbackTypes> = 0;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: int mLastSentClientState> = -1;

        r21 = new com.android.server.accessibility.AccessibilityManagerService$UserState$1;

        specialinvoke r21.<com.android.server.accessibility.AccessibilityManagerService$UserState$1: void <init>(com.android.server.accessibility.AccessibilityManagerService$UserState)>(r0);

        r22 = (android.os.IBinder$DeathRecipient) r21;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.IBinder$DeathRecipient mUiAutomationSerivceOnwerDeathRecipient> = r22;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: int mUserId> = i0;

        return;
    }

    static android.os.IBinder$DeathRecipient access$1200(com.android.server.accessibility.AccessibilityManagerService$UserState)
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        android.os.IBinder$DeathRecipient $r1;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$UserState;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.IBinder$DeathRecipient mUiAutomationSerivceOnwerDeathRecipient>;

        return $r1;
    }

    static android.os.IBinder access$1300(com.android.server.accessibility.AccessibilityManagerService$UserState)
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        android.os.IBinder $r1;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$UserState;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.IBinder mUiAutomationServiceOwner>;

        return $r1;
    }

    static android.os.IBinder access$1302(com.android.server.accessibility.AccessibilityManagerService$UserState, android.os.IBinder)
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        android.os.IBinder r1;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$UserState;

        r1 := @parameter1: android.os.IBinder;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.IBinder mUiAutomationServiceOwner> = r1;

        return r1;
    }

    static android.accessibilityservice.IAccessibilityServiceClient access$1400(com.android.server.accessibility.AccessibilityManagerService$UserState)
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        android.accessibilityservice.IAccessibilityServiceClient $r1;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$UserState;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.accessibilityservice.IAccessibilityServiceClient mUiAutomationServiceClient>;

        return $r1;
    }

    static android.accessibilityservice.IAccessibilityServiceClient access$1402(com.android.server.accessibility.AccessibilityManagerService$UserState, android.accessibilityservice.IAccessibilityServiceClient)
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        android.accessibilityservice.IAccessibilityServiceClient r1;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$UserState;

        r1 := @parameter1: android.accessibilityservice.IAccessibilityServiceClient;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.accessibilityservice.IAccessibilityServiceClient mUiAutomationServiceClient> = r1;

        return r1;
    }

    static com.android.server.accessibility.AccessibilityManagerService$Service access$300(com.android.server.accessibility.AccessibilityManagerService$UserState)
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        com.android.server.accessibility.AccessibilityManagerService$Service $r1;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$UserState;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: com.android.server.accessibility.AccessibilityManagerService$Service mUiAutomationService>;

        return $r1;
    }

    static com.android.server.accessibility.AccessibilityManagerService$Service access$302(com.android.server.accessibility.AccessibilityManagerService$UserState, com.android.server.accessibility.AccessibilityManagerService$Service)
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        com.android.server.accessibility.AccessibilityManagerService$Service r1;

        r0 := @parameter0: com.android.server.accessibility.AccessibilityManagerService$UserState;

        r1 := @parameter1: com.android.server.accessibility.AccessibilityManagerService$Service;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: com.android.server.accessibility.AccessibilityManagerService$Service mUiAutomationService> = r1;

        return r1;
    }

    public void destroyUiAutomationService()
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        android.os.IBinder $r1, $r3;
        android.os.IBinder$DeathRecipient $r2;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$UserState;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: com.android.server.accessibility.AccessibilityManagerService$Service mUiAutomationService> = null;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.accessibilityservice.IAccessibilityServiceClient mUiAutomationServiceClient> = null;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.IBinder mUiAutomationServiceOwner>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.IBinder mUiAutomationServiceOwner>;

        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.IBinder$DeathRecipient mUiAutomationSerivceOnwerDeathRecipient>;

        interfaceinvoke $r3.<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int)>($r2, 0);

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: android.os.IBinder mUiAutomationServiceOwner> = null;

     label1:
        return;
    }

    public int getClientState()
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        boolean z0, $z1, $z2;
        byte b0;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$UserState;

        z0 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: boolean mIsAccessibilityEnabled>;

        b0 = 0;

        if z0 == 0 goto label1;

        b0 = 1;

     label1:
        $z1 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: boolean mIsAccessibilityEnabled>;

        if $z1 == 0 goto label2;

        $z2 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: boolean mIsTouchExplorationEnabled>;

        if $z2 == 0 goto label2;

        b0 = b0 | 2;

     label2:
        return b0;
    }

    public void onSwitchToAnotherUser()
    {
        com.android.server.accessibility.AccessibilityManagerService$UserState r0;
        com.android.server.accessibility.AccessibilityManagerService$Service $r1, $r7;
        com.android.server.accessibility.AccessibilityManagerService $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        java.util.Set $r4, $r5, $r6;

        r0 := @this: com.android.server.accessibility.AccessibilityManagerService$UserState;

        $r1 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: com.android.server.accessibility.AccessibilityManagerService$Service mUiAutomationService>;

        if $r1 == null goto label1;

        $r7 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: com.android.server.accessibility.AccessibilityManagerService$Service mUiAutomationService>;

        virtualinvoke $r7.<com.android.server.accessibility.AccessibilityManagerService$Service: void binderDied()>();

     label1:
        $r2 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: com.android.server.accessibility.AccessibilityManagerService this$0>;

        staticinvoke <com.android.server.accessibility.AccessibilityManagerService: void access$4300(com.android.server.accessibility.AccessibilityManagerService,com.android.server.accessibility.AccessibilityManagerService$UserState)>($r2, r0);

        $r3 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.concurrent.CopyOnWriteArrayList mBoundServices>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: void clear()>();

        $r4 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mBindingServices>;

        interfaceinvoke $r4.<java.util.Set: void clear()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: int mHandledFeedbackTypes> = 0;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: int mLastSentClientState> = -1;

        $r5 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mEnabledServices>;

        interfaceinvoke $r5.<java.util.Set: void clear()>();

        $r6 = r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: java.util.Set mTouchExplorationGrantedServices>;

        interfaceinvoke $r6.<java.util.Set: void clear()>();

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: boolean mIsAccessibilityEnabled> = 0;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: boolean mIsTouchExplorationEnabled> = 0;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: boolean mIsEnhancedWebAccessibilityEnabled> = 0;

        r0.<com.android.server.accessibility.AccessibilityManagerService$UserState: boolean mIsDisplayMagnificationEnabled> = 0;

        return;
    }
}
