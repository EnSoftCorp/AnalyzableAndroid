public class com.android.server.UpdateLockService extends android.os.IUpdateLock$Stub
{
    static final boolean DEBUG;
    static final java.lang.String PERMISSION;
    static final java.lang.String TAG;
    android.content.Context mContext;
    com.android.server.UpdateLockService$LockWatcher mLocks;

    void <init>(android.content.Context)
    {
        com.android.server.UpdateLockService r0;
        android.content.Context r1;
        com.android.server.UpdateLockService$LockWatcher $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.server.UpdateLockService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.os.IUpdateLock$Stub: void <init>()>();

        r0.<com.android.server.UpdateLockService: android.content.Context mContext> = r1;

        $r2 = new com.android.server.UpdateLockService$LockWatcher;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        specialinvoke $r2.<com.android.server.UpdateLockService$LockWatcher: void <init>(com.android.server.UpdateLockService,android.os.Handler,java.lang.String)>(r0, $r3, "UpdateLocks");

        r0.<com.android.server.UpdateLockService: com.android.server.UpdateLockService$LockWatcher mLocks> = $r2;

        virtualinvoke r0.<com.android.server.UpdateLockService: void sendLockChangedBroadcast(boolean)>(1);

        return;
    }

    private java.lang.String makeTag(java.lang.String)
    {
        com.android.server.UpdateLockService r0;
        java.lang.String r1, $r10;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $i0, $i1;

        r0 := @this: com.android.server.UpdateLockService;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{tag=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void acquireUpdateLock(android.os.IBinder, java.lang.String) throws android.os.RemoteException
    {
        com.android.server.UpdateLockService r0;
        android.os.IBinder r1;
        java.lang.String r2, $r5;
        android.content.Context $r3;
        com.android.server.UpdateLockService$LockWatcher $r4;

        r0 := @this: com.android.server.UpdateLockService;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.server.UpdateLockService: android.content.Context mContext>;

        virtualinvoke $r3.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.UPDATE_LOCK", "acquireUpdateLock");

        $r4 = r0.<com.android.server.UpdateLockService: com.android.server.UpdateLockService$LockWatcher mLocks>;

        $r5 = specialinvoke r0.<com.android.server.UpdateLockService: java.lang.String makeTag(java.lang.String)>(r2);

        virtualinvoke $r4.<com.android.server.UpdateLockService$LockWatcher: void acquire(android.os.IBinder,java.lang.String)>(r1, $r5);

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.UpdateLockService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.content.Context $r4;
        int $i0, $i1, $i2;
        com.android.server.UpdateLockService$LockWatcher $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.server.UpdateLockService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r4 = r0.<com.android.server.UpdateLockService: android.content.Context mContext>;

        $i0 = virtualinvoke $r4.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.DUMP");

        if $i0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Permission Denial: can\'t dump update lock service from from pid=");

        $i1 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uid=");

        $i2 = staticinvoke <android.os.Binder: int getCallingUid()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        return;

     label1:
        $r5 = r0.<com.android.server.UpdateLockService: com.android.server.UpdateLockService$LockWatcher mLocks>;

        virtualinvoke $r5.<com.android.server.UpdateLockService$LockWatcher: void dump(java.io.PrintWriter)>(r2);

        return;
    }

    public void releaseUpdateLock(android.os.IBinder) throws android.os.RemoteException
    {
        com.android.server.UpdateLockService r0;
        android.os.IBinder r1;
        android.content.Context $r2;
        com.android.server.UpdateLockService$LockWatcher $r3;

        r0 := @this: com.android.server.UpdateLockService;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.UpdateLockService: android.content.Context mContext>;

        virtualinvoke $r2.<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.UPDATE_LOCK", "releaseUpdateLock");

        $r3 = r0.<com.android.server.UpdateLockService: com.android.server.UpdateLockService$LockWatcher mLocks>;

        virtualinvoke $r3.<com.android.server.UpdateLockService$LockWatcher: void release(android.os.IBinder)>(r1);

        return;
    }

    void sendLockChangedBroadcast(boolean)
    {
        com.android.server.UpdateLockService r0;
        boolean z0;
        long l0, $l1;
        java.lang.Throwable r1, $r8;
        android.content.Intent r2, $r3, $r4, $r5;
        android.os.UserHandle $r6;
        android.content.Context $r7;

        r0 := @this: com.android.server.UpdateLockService;

        z0 := @parameter0: boolean;

        l0 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.os.UpdateLock.UPDATE_LOCK_CHANGED");

        $r4 = virtualinvoke $r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("nowisconvenient", z0);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>("timestamp", $l1);

        r2 = virtualinvoke $r5.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r7 = r0.<com.android.server.UpdateLockService: android.content.Context mContext>;

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r6);

     label2:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        return;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l0);

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.server.UpdateLockService: java.lang.String TAG> = "UpdateLockService";

        <com.android.server.UpdateLockService: java.lang.String PERMISSION> = "android.permission.UPDATE_LOCK";

        <com.android.server.UpdateLockService: boolean DEBUG> = 0;

        return;
    }
}
