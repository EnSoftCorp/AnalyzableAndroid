public final class org.apache.xpath.axes.IteratorPool extends java.lang.Object implements java.io.Serializable
{
    static final long serialVersionUID;
    private final java.util.ArrayList m_freeStack;
    private final org.apache.xml.dtm.DTMIterator m_orig;

    public void <init>(org.apache.xml.dtm.DTMIterator)
    {
        org.apache.xpath.axes.IteratorPool r0;
        org.apache.xml.dtm.DTMIterator r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.xpath.axes.IteratorPool;

        r1 := @parameter0: org.apache.xml.dtm.DTMIterator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xpath.axes.IteratorPool: org.apache.xml.dtm.DTMIterator m_orig> = r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.xpath.axes.IteratorPool: java.util.ArrayList m_freeStack> = $r2;

        return;
    }

    public void freeInstance(org.apache.xml.dtm.DTMIterator)
    {
        org.apache.xpath.axes.IteratorPool r0;
        org.apache.xml.dtm.DTMIterator r1;
        java.lang.Throwable r2, $r4;
        java.util.ArrayList $r3;

        r0 := @this: org.apache.xpath.axes.IteratorPool;

        r1 := @parameter0: org.apache.xml.dtm.DTMIterator;

        entermonitor r0;

     label1:
        $r3 = r0.<org.apache.xpath.axes.IteratorPool: java.util.ArrayList m_freeStack>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r0;

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public org.apache.xml.dtm.DTMIterator getInstance()
    {
        org.apache.xpath.axes.IteratorPool r0;
        java.lang.Throwable r1, $r13;
        boolean z0;
        org.apache.xml.dtm.DTMIterator r2, r3, $r10;
        java.lang.Exception r4, $r12;
        java.util.ArrayList $r5, $r6, $r7;
        int $i0, $i1;
        java.lang.Object $r8, $r9;
        org.apache.xml.utils.WrappedRuntimeException $r11;

        r0 := @this: org.apache.xpath.axes.IteratorPool;

        entermonitor r0;

     label1:
        $r5 = r0.<org.apache.xpath.axes.IteratorPool: java.util.ArrayList m_freeStack>;

        z0 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

     label2:
        if z0 == 0 goto label8;

     label3:
        $r10 = r0.<org.apache.xpath.axes.IteratorPool: org.apache.xml.dtm.DTMIterator m_orig>;

        $r9 = interfaceinvoke $r10.<org.apache.xml.dtm.DTMIterator: java.lang.Object clone()>();

        r3 = (org.apache.xml.dtm.DTMIterator) $r9;

     label4:
        exitmonitor r0;

        return r3;

     label5:
        $r12 := @caughtexception;

        r4 = $r12;

     label6:
        $r11 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r11.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>(r4);

        throw $r11;

     label7:
        $r13 := @caughtexception;

        r1 = $r13;

        exitmonitor r0;

        throw r1;

     label8:
        $r7 = r0.<org.apache.xpath.axes.IteratorPool: java.util.ArrayList m_freeStack>;

        $r6 = r0.<org.apache.xpath.axes.IteratorPool: java.util.ArrayList m_freeStack>;

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i1 = -1 + $i0;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        r2 = (org.apache.xml.dtm.DTMIterator) $r8;

     label9:
        r3 = r2;

        goto label4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public org.apache.xml.dtm.DTMIterator getInstanceOrThrow() throws java.lang.CloneNotSupportedException
    {
        org.apache.xpath.axes.IteratorPool r0;
        java.lang.Throwable r1, $r10;
        org.apache.xml.dtm.DTMIterator r2, r3, $r8;
        java.util.ArrayList $r4, $r5, $r6;
        boolean $z0;
        int $i0, $i1;
        java.lang.Object $r7, $r9;

        r0 := @this: org.apache.xpath.axes.IteratorPool;

        entermonitor r0;

     label1:
        $r4 = r0.<org.apache.xpath.axes.IteratorPool: java.util.ArrayList m_freeStack>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<org.apache.xpath.axes.IteratorPool: org.apache.xml.dtm.DTMIterator m_orig>;

        $r9 = interfaceinvoke $r8.<org.apache.xml.dtm.DTMIterator: java.lang.Object clone()>();

        r3 = (org.apache.xml.dtm.DTMIterator) $r9;

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r6 = r0.<org.apache.xpath.axes.IteratorPool: java.util.ArrayList m_freeStack>;

        $r5 = r0.<org.apache.xpath.axes.IteratorPool: java.util.ArrayList m_freeStack>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i1 = -1 + $i0;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>($i1);

        r2 = (org.apache.xml.dtm.DTMIterator) $r7;

     label4:
        r3 = r2;

        goto label2;

     label5:
        $r10 := @caughtexception;

        r1 = $r10;

        exitmonitor r0;

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static void <clinit>()
    {
        <org.apache.xpath.axes.IteratorPool: long serialVersionUID> = -460927331149566998L;

        return;
    }
}
