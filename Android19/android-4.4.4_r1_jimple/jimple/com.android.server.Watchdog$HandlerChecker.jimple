public final class com.android.server.Watchdog$HandlerChecker extends java.lang.Object implements java.lang.Runnable
{
    private boolean mCompleted;
    private com.android.server.Watchdog$Monitor mCurrentMonitor;
    private final android.os.Handler mHandler;
    private final java.util.ArrayList mMonitors;
    private final java.lang.String mName;
    private long mStartTime;
    private final long mWaitMax;
    final com.android.server.Watchdog this$0;

    void <init>(com.android.server.Watchdog, android.os.Handler, java.lang.String, long)
    {
        com.android.server.Watchdog$HandlerChecker r0;
        com.android.server.Watchdog r1;
        android.os.Handler r2;
        java.lang.String r3;
        long l0;
        java.util.ArrayList $r4;

        r0 := @this: com.android.server.Watchdog$HandlerChecker;

        r1 := @parameter0: com.android.server.Watchdog;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        r0.<com.android.server.Watchdog$HandlerChecker: com.android.server.Watchdog this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.Watchdog$HandlerChecker: java.util.ArrayList mMonitors> = $r4;

        r0.<com.android.server.Watchdog$HandlerChecker: android.os.Handler mHandler> = r2;

        r0.<com.android.server.Watchdog$HandlerChecker: java.lang.String mName> = r3;

        r0.<com.android.server.Watchdog$HandlerChecker: long mWaitMax> = l0;

        r0.<com.android.server.Watchdog$HandlerChecker: boolean mCompleted> = 1;

        return;
    }

    public void addMonitor(com.android.server.Watchdog$Monitor)
    {
        com.android.server.Watchdog$HandlerChecker r0;
        com.android.server.Watchdog$Monitor r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.Watchdog$HandlerChecker;

        r1 := @parameter0: com.android.server.Watchdog$Monitor;

        $r2 = r0.<com.android.server.Watchdog$HandlerChecker: java.util.ArrayList mMonitors>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String describeBlockedStateLocked()
    {
        com.android.server.Watchdog$HandlerChecker r0;
        com.android.server.Watchdog$Monitor $r1, $r4;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r10, $r11, $r14, $r15, $r16, $r19, $r20, $r21, $r24, $r25;
        java.lang.Class $r5;
        java.lang.String $r6, $r9, $r13, $r17, $r18, $r22, $r26;
        java.lang.Thread $r12, $r23;

        r0 := @this: com.android.server.Watchdog$HandlerChecker;

        $r1 = r0.<com.android.server.Watchdog$HandlerChecker: com.android.server.Watchdog$Monitor mCurrentMonitor>;

        if $r1 != null goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blocked in handler on ");

        $r18 = r0.<com.android.server.Watchdog$HandlerChecker: java.lang.String mName>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r23 = virtualinvoke r0.<com.android.server.Watchdog$HandlerChecker: java.lang.Thread getThread()>();

        $r22 = virtualinvoke $r23.<java.lang.Thread: java.lang.String getName()>();

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Blocked in monitor ");

        $r4 = r0.<com.android.server.Watchdog$HandlerChecker: com.android.server.Watchdog$Monitor mCurrentMonitor>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");

        $r9 = r0.<com.android.server.Watchdog$HandlerChecker: java.lang.String mName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r12 = virtualinvoke r0.<com.android.server.Watchdog$HandlerChecker: java.lang.Thread getThread()>();

        $r13 = virtualinvoke $r12.<java.lang.Thread: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public int getCompletionStateLocked()
    {
        com.android.server.Watchdog$HandlerChecker r0;
        long l0, $l1, $l2, $l3, $l4, $l6;
        boolean $z0;
        byte $b5, $b7;

        r0 := @this: com.android.server.Watchdog$HandlerChecker;

        $z0 = r0.<com.android.server.Watchdog$HandlerChecker: boolean mCompleted>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = r0.<com.android.server.Watchdog$HandlerChecker: long mStartTime>;

        l0 = $l1 - $l2;

        $l3 = r0.<com.android.server.Watchdog$HandlerChecker: long mWaitMax>;

        $l4 = $l3 / 2L;

        $b5 = l0 cmp $l4;

        if $b5 >= 0 goto label2;

        return 1;

     label2:
        $l6 = r0.<com.android.server.Watchdog$HandlerChecker: long mWaitMax>;

        $b7 = l0 cmp $l6;

        if $b7 >= 0 goto label3;

        return 2;

     label3:
        return 3;
    }

    public java.lang.String getName()
    {
        com.android.server.Watchdog$HandlerChecker r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.Watchdog$HandlerChecker;

        $r1 = r0.<com.android.server.Watchdog$HandlerChecker: java.lang.String mName>;

        return $r1;
    }

    public java.lang.Thread getThread()
    {
        com.android.server.Watchdog$HandlerChecker r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        java.lang.Thread $r3;

        r0 := @this: com.android.server.Watchdog$HandlerChecker;

        $r1 = r0.<com.android.server.Watchdog$HandlerChecker: android.os.Handler mHandler>;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Looper getLooper()>();

        $r3 = virtualinvoke $r2.<android.os.Looper: java.lang.Thread getThread()>();

        return $r3;
    }

    public boolean isOverdueLocked()
    {
        com.android.server.Watchdog$HandlerChecker r0;
        boolean $z0;
        long $l0, $l1, $l2, $l3;
        byte $b4;

        r0 := @this: com.android.server.Watchdog$HandlerChecker;

        $z0 = r0.<com.android.server.Watchdog$HandlerChecker: boolean mCompleted>;

        if $z0 != 0 goto label1;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = r0.<com.android.server.Watchdog$HandlerChecker: long mStartTime>;

        $l1 = r0.<com.android.server.Watchdog$HandlerChecker: long mWaitMax>;

        $l3 = $l2 + $l1;

        $b4 = $l0 cmp $l3;

        if $b4 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void run()
    {
        com.android.server.Watchdog$HandlerChecker r0;
        int i0, i1;
        com.android.server.Watchdog r1, r3;
        java.lang.Throwable r2, r4, $r9, $r11;
        java.util.ArrayList $r5, $r6;
        java.lang.Object $r7;
        com.android.server.Watchdog$Monitor $r8, $r10;

        r0 := @this: com.android.server.Watchdog$HandlerChecker;

        $r5 = r0.<com.android.server.Watchdog$HandlerChecker: java.util.ArrayList mMonitors>;

        i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        i1 = 0;

     label01:
        if i1 >= i0 goto label07;

        r3 = r0.<com.android.server.Watchdog$HandlerChecker: com.android.server.Watchdog this$0>;

        entermonitor r3;

     label02:
        $r6 = r0.<com.android.server.Watchdog$HandlerChecker: java.util.ArrayList mMonitors>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r8 = (com.android.server.Watchdog$Monitor) $r7;

        r0.<com.android.server.Watchdog$HandlerChecker: com.android.server.Watchdog$Monitor mCurrentMonitor> = $r8;

        exitmonitor r3;

     label03:
        $r10 = r0.<com.android.server.Watchdog$HandlerChecker: com.android.server.Watchdog$Monitor mCurrentMonitor>;

        interfaceinvoke $r10.<com.android.server.Watchdog$Monitor: void monitor()>();

        i1 = i1 + 1;

        goto label01;

     label04:
        $r11 := @caughtexception;

        r4 = $r11;

     label05:
        exitmonitor r3;

     label06:
        throw r4;

     label07:
        r1 = r0.<com.android.server.Watchdog$HandlerChecker: com.android.server.Watchdog this$0>;

        entermonitor r1;

     label08:
        r0.<com.android.server.Watchdog$HandlerChecker: boolean mCompleted> = 1;

        r0.<com.android.server.Watchdog$HandlerChecker: com.android.server.Watchdog$Monitor mCurrentMonitor> = null;

        exitmonitor r1;

     label09:
        return;

     label10:
        $r9 := @caughtexception;

        r2 = $r9;

     label11:
        exitmonitor r1;

     label12:
        throw r2;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    public void scheduleCheckLocked()
    {
        com.android.server.Watchdog$HandlerChecker r0;
        java.util.ArrayList $r1;
        int $i0;
        boolean $z0, $z2;
        long $l1;
        android.os.Handler $r2, $r3;
        android.os.Looper $r4;

        r0 := @this: com.android.server.Watchdog$HandlerChecker;

        $r1 = r0.<com.android.server.Watchdog$HandlerChecker: java.util.ArrayList mMonitors>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

        $r3 = r0.<com.android.server.Watchdog$HandlerChecker: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        $z2 = virtualinvoke $r4.<android.os.Looper: boolean isIdling()>();

        if $z2 == 0 goto label2;

        r0.<com.android.server.Watchdog$HandlerChecker: boolean mCompleted> = 1;

     label1:
        return;

     label2:
        $z0 = r0.<com.android.server.Watchdog$HandlerChecker: boolean mCompleted>;

        if $z0 == 0 goto label1;

        r0.<com.android.server.Watchdog$HandlerChecker: boolean mCompleted> = 0;

        r0.<com.android.server.Watchdog$HandlerChecker: com.android.server.Watchdog$Monitor mCurrentMonitor> = null;

        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.server.Watchdog$HandlerChecker: long mStartTime> = $l1;

        $r2 = r0.<com.android.server.Watchdog$HandlerChecker: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>(r0);

        return;
    }
}
