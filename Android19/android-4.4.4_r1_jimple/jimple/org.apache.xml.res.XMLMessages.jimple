public class org.apache.xml.res.XMLMessages extends java.lang.Object
{
    protected static final java.lang.String BAD_CODE;
    protected static final java.lang.String FORMAT_FAILED;
    private static java.util.ListResourceBundle XMLBundle;
    protected java.util.Locale fLocale;

    static void <clinit>()
    {
        org.apache.xml.res.XMLErrorResources $r0;

        <org.apache.xml.res.XMLMessages: java.lang.String FORMAT_FAILED> = "FORMAT_FAILED";

        <org.apache.xml.res.XMLMessages: java.lang.String BAD_CODE> = "BAD_CODE";

        $r0 = new org.apache.xml.res.XMLErrorResources;

        specialinvoke $r0.<org.apache.xml.res.XMLErrorResources: void <init>()>();

        <org.apache.xml.res.XMLMessages: java.util.ListResourceBundle XMLBundle> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.xml.res.XMLMessages r0;
        java.util.Locale $r1;

        r0 := @this: org.apache.xml.res.XMLMessages;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r0.<org.apache.xml.res.XMLMessages: java.util.Locale fLocale> = $r1;

        return;
    }

    public static final java.lang.String createMsg(java.util.ListResourceBundle, java.lang.String, java.lang.Object[])
    {
        java.util.ListResourceBundle r0;
        java.lang.String r1, r3, r4, r6, r7;
        java.lang.Object[] r2;
        boolean z0;
        int i0, i1;
        java.lang.RuntimeException $r8;
        java.lang.Object $r9;
        java.lang.Exception $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14;

        r0 := @parameter0: java.util.ListResourceBundle;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        r3 = null;

        if r1 == null goto label01;

        r3 = virtualinvoke r0.<java.util.ListResourceBundle: java.lang.String getString(java.lang.String)>(r1);

     label01:
        z0 = 0;

        if r3 != null goto label02;

        r3 = virtualinvoke r0.<java.util.ListResourceBundle: java.lang.String getString(java.lang.String)>("BAD_CODE");

        z0 = 1;

     label02:
        if r2 == null goto label12;

     label03:
        i0 = lengthof r2;

     label04:
        i1 = 0;

     label05:
        if i1 >= i0 goto label08;

     label06:
        $r9 = r2[i1];

        if $r9 != null goto label14;

        r2[i1] = "";

     label07:
        goto label14;

     label08:
        r7 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(r3, r2);

     label09:
        r4 = r7;

     label10:
        if z0 == 0 goto label13;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>(r4);

        throw $r8;

     label11:
        $r10 := @caughtexception;

        r6 = virtualinvoke r0.<java.util.ListResourceBundle: java.lang.String getString(java.lang.String)>("FORMAT_FAILED");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label10;

     label12:
        r4 = r3;

        goto label10;

     label13:
        return r4;

     label14:
        i1 = i1 + 1;

        goto label05;

        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label11;
    }

    public static final java.lang.String createXMLMessage(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r3;
        java.lang.Object[] r1;
        java.util.ListResourceBundle $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $r2 = <org.apache.xml.res.XMLMessages: java.util.ListResourceBundle XMLBundle>;

        $r3 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createMsg(java.util.ListResourceBundle,java.lang.String,java.lang.Object[])>($r2, r0, r1);

        return $r3;
    }

    public java.util.Locale getLocale()
    {
        org.apache.xml.res.XMLMessages r0;
        java.util.Locale $r1;

        r0 := @this: org.apache.xml.res.XMLMessages;

        $r1 = r0.<org.apache.xml.res.XMLMessages: java.util.Locale fLocale>;

        return $r1;
    }

    public void setLocale(java.util.Locale)
    {
        org.apache.xml.res.XMLMessages r0;
        java.util.Locale r1;

        r0 := @this: org.apache.xml.res.XMLMessages;

        r1 := @parameter0: java.util.Locale;

        r0.<org.apache.xml.res.XMLMessages: java.util.Locale fLocale> = r1;

        return;
    }
}
