public class android.widget.TabHost extends android.widget.FrameLayout implements android.view.ViewTreeObserver$OnTouchModeChangeListener
{
    private static final int TABWIDGET_LOCATION_BOTTOM;
    private static final int TABWIDGET_LOCATION_LEFT;
    private static final int TABWIDGET_LOCATION_RIGHT;
    private static final int TABWIDGET_LOCATION_TOP;
    protected int mCurrentTab;
    private android.view.View mCurrentView;
    protected android.app.LocalActivityManager mLocalActivityManager;
    private android.widget.TabHost$OnTabChangeListener mOnTabChangeListener;
    private android.widget.FrameLayout mTabContent;
    private android.view.View$OnKeyListener mTabKeyListener;
    private int mTabLayoutId;
    private java.util.List mTabSpecs;
    private android.widget.TabWidget mTabWidget;

    public void <init>(android.content.Context)
    {
        android.widget.TabHost r0;
        android.content.Context r1;
        java.util.ArrayList $r2;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(2);

        r0.<android.widget.TabHost: java.util.List mTabSpecs> = $r2;

        r0.<android.widget.TabHost: int mCurrentTab> = -1;

        r0.<android.widget.TabHost: android.view.View mCurrentView> = null;

        r0.<android.widget.TabHost: android.app.LocalActivityManager mLocalActivityManager> = null;

        specialinvoke r0.<android.widget.TabHost: void initTabHost()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.TabHost r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.TypedArray r3;
        java.util.ArrayList $r4;
        int[] $r5;
        int $i0, $i1;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(2);

        r0.<android.widget.TabHost: java.util.List mTabSpecs> = $r4;

        r0.<android.widget.TabHost: int mCurrentTab> = -1;

        r0.<android.widget.TabHost: android.view.View mCurrentView> = null;

        r0.<android.widget.TabHost: android.app.LocalActivityManager mLocalActivityManager> = null;

        $r5 = <com.android.internal.R$styleable: int[] TabWidget>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r5, 16842883, 0);

        $i0 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(4, 0);

        r0.<android.widget.TabHost: int mTabLayoutId> = $i0;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $i1 = r0.<android.widget.TabHost: int mTabLayoutId>;

        if $i1 != 0 goto label1;

        r0.<android.widget.TabHost: int mTabLayoutId> = 17367208;

     label1:
        specialinvoke r0.<android.widget.TabHost: void initTabHost()>();

        return;
    }

    static android.widget.FrameLayout access$100(android.widget.TabHost)
    {
        android.widget.TabHost r0;
        android.widget.FrameLayout $r1;

        r0 := @parameter0: android.widget.TabHost;

        $r1 = r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        return $r1;
    }

    static android.widget.TabWidget access$1000(android.widget.TabHost)
    {
        android.widget.TabHost r0;
        android.widget.TabWidget $r1;

        r0 := @parameter0: android.widget.TabHost;

        $r1 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        return $r1;
    }

    static int access$900(android.widget.TabHost)
    {
        android.widget.TabHost r0;
        int $i0;

        r0 := @parameter0: android.widget.TabHost;

        $i0 = r0.<android.widget.TabHost: int mTabLayoutId>;

        return $i0;
    }

    private int getTabWidgetLocation()
    {
        android.widget.TabHost r0;
        android.widget.TabWidget $r1, $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        android.widget.FrameLayout $r2, $r4;

        r0 := @this: android.widget.TabHost;

        $r1 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i0 = virtualinvoke $r1.<android.widget.TabWidget: int getOrientation()>();

        tableswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        $i1 = virtualinvoke $r2.<android.widget.FrameLayout: int getTop()>();

        $r3 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i2 = virtualinvoke $r3.<android.widget.TabWidget: int getTop()>();

        if $i1 >= $i2 goto label4;

        return 3;

     label2:
        $r4 = r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        $i3 = virtualinvoke $r4.<android.widget.FrameLayout: int getLeft()>();

        $r5 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i4 = virtualinvoke $r5.<android.widget.TabWidget: int getLeft()>();

        if $i3 >= $i4 goto label3;

        return 2;

     label3:
        return 0;

     label4:
        return 1;
    }

    private void initTabHost()
    {
        android.widget.TabHost r0;

        r0 := @this: android.widget.TabHost;

        virtualinvoke r0.<android.widget.TabHost: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke r0.<android.widget.TabHost: void setDescendantFocusability(int)>(262144);

        r0.<android.widget.TabHost: int mCurrentTab> = -1;

        r0.<android.widget.TabHost: android.view.View mCurrentView> = null;

        return;
    }

    private void invokeOnTabChangeListener()
    {
        android.widget.TabHost r0;
        android.widget.TabHost$OnTabChangeListener $r1, $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TabHost;

        $r1 = r0.<android.widget.TabHost: android.widget.TabHost$OnTabChangeListener mOnTabChangeListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TabHost: android.widget.TabHost$OnTabChangeListener mOnTabChangeListener>;

        $r3 = virtualinvoke r0.<android.widget.TabHost: java.lang.String getCurrentTabTag()>();

        interfaceinvoke $r2.<android.widget.TabHost$OnTabChangeListener: void onTabChanged(java.lang.String)>($r3);

     label1:
        return;
    }

    public void addTab(android.widget.TabHost$TabSpec)
    {
        android.widget.TabHost r0;
        android.widget.TabHost$TabSpec r1;
        android.view.View r2;
        android.widget.TabHost$IndicatorStrategy $r3, $r5, $r7;
        android.widget.TabHost$ContentStrategy $r4;
        android.view.View$OnKeyListener $r6;
        boolean $z0;
        android.widget.TabWidget $r8, $r10;
        java.util.List $r9;
        int $i0;
        java.lang.IllegalArgumentException $r11, $r12;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: android.widget.TabHost$TabSpec;

        $r3 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$IndicatorStrategy access$200(android.widget.TabHost$TabSpec)>(r1);

        if $r3 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("you must specify a way to create the tab indicator.");

        throw $r12;

     label1:
        $r4 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$ContentStrategy access$300(android.widget.TabHost$TabSpec)>(r1);

        if $r4 != null goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("you must specify a way to create the tab content");

        throw $r11;

     label2:
        $r5 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$IndicatorStrategy access$200(android.widget.TabHost$TabSpec)>(r1);

        r2 = interfaceinvoke $r5.<android.widget.TabHost$IndicatorStrategy: android.view.View createIndicatorView()>();

        $r6 = r0.<android.widget.TabHost: android.view.View$OnKeyListener mTabKeyListener>;

        virtualinvoke r2.<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>($r6);

        $r7 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$IndicatorStrategy access$200(android.widget.TabHost$TabSpec)>(r1);

        $z0 = $r7 instanceof android.widget.TabHost$ViewIndicatorStrategy;

        if $z0 == 0 goto label3;

        $r10 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        virtualinvoke $r10.<android.widget.TabWidget: void setStripEnabled(boolean)>(0);

     label3:
        $r8 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        virtualinvoke $r8.<android.widget.TabWidget: void addView(android.view.View)>(r2);

        $r9 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1);

        $i0 = r0.<android.widget.TabHost: int mCurrentTab>;

        if $i0 != -1 goto label4;

        virtualinvoke r0.<android.widget.TabHost: void setCurrentTab(int)>(0);

     label4:
        return;
    }

    public void clearAllTabs()
    {
        android.widget.TabHost r0;
        android.widget.TabWidget $r1;
        android.widget.FrameLayout $r2;
        java.util.List $r3;

        r0 := @this: android.widget.TabHost;

        $r1 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        virtualinvoke $r1.<android.widget.TabWidget: void removeAllViews()>();

        specialinvoke r0.<android.widget.TabHost: void initTabHost()>();

        $r2 = r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        virtualinvoke $r2.<android.widget.FrameLayout: void removeAllViews()>();

        $r3 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        virtualinvoke r0.<android.widget.TabHost: void requestLayout()>();

        virtualinvoke r0.<android.widget.TabHost: void invalidate()>();

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.widget.TabHost r0;
        android.view.KeyEvent r1;
        boolean z0, $z1, $z2;
        byte b0, b2;
        short s1;
        int $i3, $i4, $i5, $i6;
        android.view.View $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        android.widget.TabWidget $r8;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: android.view.KeyEvent;

        z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if z0 != 0 goto label3;

        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i3 != 0 goto label3;

        $r2 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        if $r2 == null goto label3;

        $r3 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $z1 = virtualinvoke $r3.<android.view.View: boolean isRootNamespace()>();

        if $z1 == 0 goto label3;

        $r4 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $z2 = virtualinvoke $r4.<android.view.View: boolean hasFocus()>();

        if $z2 == 0 goto label3;

        $i4 = specialinvoke r0.<android.widget.TabHost: int getTabWidgetLocation()>();

        tableswitch($i4)
        {
            case 0: goto label4;
            case 1: goto label1;
            case 2: goto label5;
            case 3: goto label6;
            default: goto label1;
        };

     label1:
        b0 = 19;

        s1 = 33;

        b2 = 2;

     label2:
        $i5 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i5 != b0 goto label3;

        $r5 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $r7 = virtualinvoke $r5.<android.view.View: android.view.View findFocus()>();

        $r6 = virtualinvoke $r7.<android.view.View: android.view.View focusSearch(int)>(s1);

        if $r6 != null goto label3;

        $r8 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i6 = r0.<android.widget.TabHost: int mCurrentTab>;

        $r9 = virtualinvoke $r8.<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>($i6);

        virtualinvoke $r9.<android.view.View: boolean requestFocus()>();

        virtualinvoke r0.<android.widget.TabHost: void playSoundEffect(int)>(b2);

        z0 = 1;

     label3:
        return z0;

     label4:
        b0 = 21;

        s1 = 17;

        b2 = 1;

        goto label2;

     label5:
        b0 = 22;

        s1 = 66;

        b2 = 3;

        goto label2;

     label6:
        b0 = 20;

        s1 = 130;

        b2 = 4;

        goto label2;
    }

    public void dispatchWindowFocusChanged(boolean)
    {
        android.widget.TabHost r0;
        boolean z0;
        android.view.View $r1, $r2;

        r0 := @this: android.widget.TabHost;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        virtualinvoke $r2.<android.view.View: void dispatchWindowFocusChanged(boolean)>(z0);

     label1:
        return;
    }

    public int getCurrentTab()
    {
        android.widget.TabHost r0;
        int $i0;

        r0 := @this: android.widget.TabHost;

        $i0 = r0.<android.widget.TabHost: int mCurrentTab>;

        return $i0;
    }

    public java.lang.String getCurrentTabTag()
    {
        android.widget.TabHost r0;
        int $i0, $i1, $i2, $i3;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        android.widget.TabHost$TabSpec $r4;
        java.lang.String $r5;

        r0 := @this: android.widget.TabHost;

        $i0 = r0.<android.widget.TabHost: int mCurrentTab>;

        if $i0 < 0 goto label1;

        $i1 = r0.<android.widget.TabHost: int mCurrentTab>;

        $r1 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label1;

        $r2 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i3 = r0.<android.widget.TabHost: int mCurrentTab>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i3);

        $r4 = (android.widget.TabHost$TabSpec) $r3;

        $r5 = virtualinvoke $r4.<android.widget.TabHost$TabSpec: java.lang.String getTag()>();

        return $r5;

     label1:
        return null;
    }

    public android.view.View getCurrentTabView()
    {
        android.widget.TabHost r0;
        int $i0, $i1, $i2, $i3;
        java.util.List $r1;
        android.widget.TabWidget $r2;
        android.view.View $r3;

        r0 := @this: android.widget.TabHost;

        $i0 = r0.<android.widget.TabHost: int mCurrentTab>;

        if $i0 < 0 goto label1;

        $i1 = r0.<android.widget.TabHost: int mCurrentTab>;

        $r1 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label1;

        $r2 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i3 = r0.<android.widget.TabHost: int mCurrentTab>;

        $r3 = virtualinvoke $r2.<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>($i3);

        return $r3;

     label1:
        return null;
    }

    public android.view.View getCurrentView()
    {
        android.widget.TabHost r0;
        android.view.View $r1;

        r0 := @this: android.widget.TabHost;

        $r1 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        return $r1;
    }

    public android.widget.FrameLayout getTabContentView()
    {
        android.widget.TabHost r0;
        android.widget.FrameLayout $r1;

        r0 := @this: android.widget.TabHost;

        $r1 = r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        return $r1;
    }

    public android.widget.TabWidget getTabWidget()
    {
        android.widget.TabHost r0;
        android.widget.TabWidget $r1;

        r0 := @this: android.widget.TabHost;

        $r1 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        return $r1;
    }

    public android.widget.TabHost$TabSpec newTabSpec(java.lang.String)
    {
        android.widget.TabHost r0;
        java.lang.String r1;
        android.widget.TabHost$TabSpec $r2;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.widget.TabHost$TabSpec;

        specialinvoke $r2.<android.widget.TabHost$TabSpec: void <init>(android.widget.TabHost,java.lang.String,android.widget.TabHost$1)>(r0, r1, null);

        return $r2;
    }

    protected void onAttachedToWindow()
    {
        android.widget.TabHost r0;
        android.view.ViewTreeObserver $r1;

        r0 := @this: android.widget.TabHost;

        specialinvoke r0.<android.widget.FrameLayout: void onAttachedToWindow()>();

        $r1 = virtualinvoke r0.<android.widget.TabHost: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r1.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r0);

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.TabHost r0;
        android.view.ViewTreeObserver $r1;

        r0 := @this: android.widget.TabHost;

        specialinvoke r0.<android.widget.FrameLayout: void onDetachedFromWindow()>();

        $r1 = virtualinvoke r0.<android.widget.TabHost: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r1.<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r0);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.TabHost r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/TabHost";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.TabHost r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/TabHost";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onTouchModeChanged(boolean)
    {
        android.widget.TabHost r0;
        boolean z0, $z1, $z3;
        android.view.View $r1, $r2, $r4, $r5;
        int $i0;
        android.widget.TabWidget $r3;

        r0 := @this: android.widget.TabHost;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label2;

        $r1 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $z1 = virtualinvoke $r2.<android.view.View: boolean hasFocus()>();

        if $z1 == 0 goto label1;

        $r5 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $z3 = virtualinvoke $r5.<android.view.View: boolean isFocused()>();

        if $z3 == 0 goto label2;

     label1:
        $r3 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i0 = r0.<android.widget.TabHost: int mCurrentTab>;

        $r4 = virtualinvoke $r3.<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>($i0);

        virtualinvoke $r4.<android.view.View: boolean requestFocus()>();

     label2:
        return;
    }

    public void sendAccessibilityEvent(int)
    {
        android.widget.TabHost r0;
        int i0;

        r0 := @this: android.widget.TabHost;

        i0 := @parameter0: int;

        return;
    }

    public void setCurrentTab(int)
    {
        android.widget.TabHost r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.widget.TabHost$TabSpec r1, $r16;
        java.util.List $r2, $r3, $r15;
        java.lang.Object $r4, $r17;
        android.widget.TabWidget $r5, $r10;
        android.widget.TabHost$ContentStrategy $r6, $r18;
        android.view.View $r7, $r8, $r11, $r13;
        android.view.ViewParent $r9;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r12;
        android.widget.FrameLayout $r14;

        r0 := @this: android.widget.TabHost;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r2 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 < $i1 goto label2;

     label1:
        return;

     label2:
        $i2 = r0.<android.widget.TabHost: int mCurrentTab>;

        if i0 == $i2 goto label1;

        $i3 = r0.<android.widget.TabHost: int mCurrentTab>;

        if $i3 == -1 goto label3;

        $r15 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i5 = r0.<android.widget.TabHost: int mCurrentTab>;

        $r17 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>($i5);

        $r16 = (android.widget.TabHost$TabSpec) $r17;

        $r18 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$ContentStrategy access$300(android.widget.TabHost$TabSpec)>($r16);

        interfaceinvoke $r18.<android.widget.TabHost$ContentStrategy: void tabClosed()>();

     label3:
        r0.<android.widget.TabHost: int mCurrentTab> = i0;

        $r3 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (android.widget.TabHost$TabSpec) $r4;

        $r5 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $i4 = r0.<android.widget.TabHost: int mCurrentTab>;

        virtualinvoke $r5.<android.widget.TabWidget: void focusCurrentTab(int)>($i4);

        $r6 = staticinvoke <android.widget.TabHost$TabSpec: android.widget.TabHost$ContentStrategy access$300(android.widget.TabHost$TabSpec)>(r1);

        $r7 = interfaceinvoke $r6.<android.widget.TabHost$ContentStrategy: android.view.View getContentView()>();

        r0.<android.widget.TabHost: android.view.View mCurrentView> = $r7;

        $r8 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $r9 = virtualinvoke $r8.<android.view.View: android.view.ViewParent getParent()>();

        if $r9 != null goto label4;

        $r14 = r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        $r13 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        $r12 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r12.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke $r14.<android.widget.FrameLayout: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r13, $r12);

     label4:
        $r10 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $z0 = virtualinvoke $r10.<android.widget.TabWidget: boolean hasFocus()>();

        if $z0 != 0 goto label5;

        $r11 = r0.<android.widget.TabHost: android.view.View mCurrentView>;

        virtualinvoke $r11.<android.view.View: boolean requestFocus()>();

     label5:
        specialinvoke r0.<android.widget.TabHost: void invokeOnTabChangeListener()>();

        return;
    }

    public void setCurrentTabByTag(java.lang.String)
    {
        android.widget.TabHost r0;
        java.lang.String r1, $r6;
        int i0, $i1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        android.widget.TabHost$TabSpec $r5;
        boolean $z0;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r2 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        $r3 = r0.<android.widget.TabHost: java.util.List mTabSpecs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (android.widget.TabHost$TabSpec) $r4;

        $r6 = virtualinvoke $r5.<android.widget.TabHost$TabSpec: java.lang.String getTag()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        virtualinvoke r0.<android.widget.TabHost: void setCurrentTab(int)>(i0);

     label2:
        return;

     label3:
        i0 = i0 + 1;

        goto label1;
    }

    public void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
    {
        android.widget.TabHost r0;
        android.widget.TabHost$OnTabChangeListener r1;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: android.widget.TabHost$OnTabChangeListener;

        r0.<android.widget.TabHost: android.widget.TabHost$OnTabChangeListener mOnTabChangeListener> = r1;

        return;
    }

    public void setup()
    {
        android.widget.TabHost r0;
        android.view.View $r1, $r7;
        android.widget.TabWidget $r2, $r3, $r6;
        android.widget.TabHost$1 $r4;
        android.widget.TabHost$2 $r5;
        android.widget.FrameLayout $r8, $r9;
        java.lang.RuntimeException $r10, $r11;

        r0 := @this: android.widget.TabHost;

        $r1 = virtualinvoke r0.<android.widget.TabHost: android.view.View findViewById(int)>(16908307);

        $r2 = (android.widget.TabWidget) $r1;

        r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget> = $r2;

        $r3 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        if $r3 != null goto label1;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>("Your TabHost must have a TabWidget whose id attribute is \'android.R.id.tabs\'");

        throw $r11;

     label1:
        $r4 = new android.widget.TabHost$1;

        specialinvoke $r4.<android.widget.TabHost$1: void <init>(android.widget.TabHost)>(r0);

        r0.<android.widget.TabHost: android.view.View$OnKeyListener mTabKeyListener> = $r4;

        $r6 = r0.<android.widget.TabHost: android.widget.TabWidget mTabWidget>;

        $r5 = new android.widget.TabHost$2;

        specialinvoke $r5.<android.widget.TabHost$2: void <init>(android.widget.TabHost)>(r0);

        virtualinvoke $r6.<android.widget.TabWidget: void setTabSelectionListener(android.widget.TabWidget$OnTabSelectionChanged)>($r5);

        $r7 = virtualinvoke r0.<android.widget.TabHost: android.view.View findViewById(int)>(16908305);

        $r8 = (android.widget.FrameLayout) $r7;

        r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent> = $r8;

        $r9 = r0.<android.widget.TabHost: android.widget.FrameLayout mTabContent>;

        if $r9 != null goto label2;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Your TabHost must have a FrameLayout whose id attribute is \'android.R.id.tabcontent\'");

        throw $r10;

     label2:
        return;
    }

    public void setup(android.app.LocalActivityManager)
    {
        android.widget.TabHost r0;
        android.app.LocalActivityManager r1;

        r0 := @this: android.widget.TabHost;

        r1 := @parameter0: android.app.LocalActivityManager;

        virtualinvoke r0.<android.widget.TabHost: void setup()>();

        r0.<android.widget.TabHost: android.app.LocalActivityManager mLocalActivityManager> = r1;

        return;
    }

    public static void <clinit>()
    {
        <android.widget.TabHost: int TABWIDGET_LOCATION_TOP> = 1;

        <android.widget.TabHost: int TABWIDGET_LOCATION_RIGHT> = 2;

        <android.widget.TabHost: int TABWIDGET_LOCATION_LEFT> = 0;

        <android.widget.TabHost: int TABWIDGET_LOCATION_BOTTOM> = 3;

        return;
    }
}
