class android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper extends android.service.wallpaper.IWallpaperEngine$Stub implements com.android.internal.os.HandlerCaller$Callback
{
    private final com.android.internal.os.HandlerCaller mCaller;
    final android.service.wallpaper.IWallpaperConnection mConnection;
    android.service.wallpaper.WallpaperService$Engine mEngine;
    final boolean mIsPreview;
    int mReqHeight;
    int mReqWidth;
    boolean mShownReported;
    final android.os.IBinder mWindowToken;
    final int mWindowType;
    final android.service.wallpaper.WallpaperService this$0;

    void <init>(android.service.wallpaper.WallpaperService, android.service.wallpaper.WallpaperService, android.service.wallpaper.IWallpaperConnection, android.os.IBinder, int, boolean, int, int)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.service.wallpaper.WallpaperService r1, r2;
        android.service.wallpaper.IWallpaperConnection r3;
        android.os.IBinder r4;
        int i0, i1, i2;
        boolean z0;
        android.os.Message r5;
        android.os.Looper $r7;
        com.android.internal.os.HandlerCaller $r8, $r9, r10;
        com.android.internal.os.HandlerCaller$Callback r11;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: android.service.wallpaper.WallpaperService;

        r2 := @parameter1: android.service.wallpaper.WallpaperService;

        r3 := @parameter2: android.service.wallpaper.IWallpaperConnection;

        r4 := @parameter3: android.os.IBinder;

        i0 := @parameter4: int;

        z0 := @parameter5: boolean;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0> = r1;

        specialinvoke r0.<android.service.wallpaper.IWallpaperEngine$Stub: void <init>()>();

        r10 = new com.android.internal.os.HandlerCaller;

        $r7 = virtualinvoke r2.<android.service.wallpaper.WallpaperService: android.os.Looper getMainLooper()>();

        r11 = (com.android.internal.os.HandlerCaller$Callback) r0;

        specialinvoke r10.<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller$Callback,boolean)>(r2, $r7, r11, 1);

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller> = r10;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection> = r3;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.os.IBinder mWindowToken> = r4;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mWindowType> = i0;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mIsPreview> = z0;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqWidth> = i1;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: int mReqHeight> = i2;

        $r8 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r5 = virtualinvoke $r8.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(10);

        $r9 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r9.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r5);

        return;
    }

    static com.android.internal.os.HandlerCaller access$100(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        com.android.internal.os.HandlerCaller $r1;

        r0 := @parameter0: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $r1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        return $r1;
    }

    public void destroy()
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>(20);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void dispatchPointer(android.view.MotionEvent)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.view.MotionEvent r1;
        android.service.wallpaper.WallpaperService$Engine $r2, $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        if $r2 == null goto label1;

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        staticinvoke <android.service.wallpaper.WallpaperService$Engine: void access$000(android.service.wallpaper.WallpaperService$Engine,android.view.MotionEvent)>($r3, r1);

        return;

     label1:
        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

        return;
    }

    public void dispatchWallpaperCommand(java.lang.String, int, int, int, android.os.Bundle)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        android.service.wallpaper.WallpaperService$Engine $r3, $r4;
        com.android.internal.view.BaseIWindow $r5;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Bundle;

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        if $r3 == null goto label1;

        $r4 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r5 = $r4.<android.service.wallpaper.WallpaperService$Engine: com.android.internal.view.BaseIWindow mWindow>;

        virtualinvoke $r5.<com.android.internal.view.BaseIWindow: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>(r1, i0, i1, i2, r2, 0);

     label1:
        return;
    }

    public void executeMessage(android.os.Message)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.os.Message r1;
        boolean z0, z1, z2;
        android.view.MotionEvent r2, $r13;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Object r3, $r9, $r18;
        java.lang.Throwable r4, $r35;
        android.service.wallpaper.WallpaperService$WallpaperCommand r5;
        android.service.wallpaper.WallpaperService$Engine r6, r8, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r26;
        android.os.RemoteException r7, $r33;
        android.service.wallpaper.WallpaperService $r23, $r25, $r29;
        java.util.ArrayList $r24, $r30;
        android.service.wallpaper.IWallpaperConnection $r27;
        java.lang.StringBuilder $r28, $r31, $r32;
        java.lang.String $r34;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        r1 := @parameter0: android.os.Message;

        z0 = 1;

        $i1 = r1.<android.os.Message: int what>;

        lookupswitch($i1)
        {
            case 10: goto label03;
            case 20: goto label06;
            case 30: goto label07;
            case 10000: goto label08;
            case 10010: goto label09;
            case 10020: goto label12;
            case 10025: goto label13;
            case 10030: goto label14;
            case 10035: goto label02;
            case 10040: goto label17;
            default: goto label01;
        };

     label01:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown message type ");

        $i6 = r1.<android.os.Message: int what>;

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WallpaperService", $r34);

     label02:
        return;

     label03:
        $r27 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection>;

        interfaceinvoke $r27.<android.service.wallpaper.IWallpaperConnection: void attachEngine(android.service.wallpaper.IWallpaperEngine)>(r0);

     label04:
        $r25 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        r8 = virtualinvoke $r25.<android.service.wallpaper.WallpaperService: android.service.wallpaper.WallpaperService$Engine onCreateEngine()>();

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine> = r8;

        $r29 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        $r30 = staticinvoke <android.service.wallpaper.WallpaperService: java.util.ArrayList access$200(android.service.wallpaper.WallpaperService)>($r29);

        virtualinvoke $r30.<java.util.ArrayList: boolean add(java.lang.Object)>(r8);

        virtualinvoke r8.<android.service.wallpaper.WallpaperService$Engine: void attach(android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper)>(r0);

        return;

     label05:
        $r33 := @caughtexception;

        r7 = $r33;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperService", "Wallpaper host disappeared", r7);

        return;

     label06:
        $r23 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService this$0>;

        $r24 = staticinvoke <android.service.wallpaper.WallpaperService: java.util.ArrayList access$200(android.service.wallpaper.WallpaperService)>($r23);

        $r22 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r24.<java.util.ArrayList: boolean remove(java.lang.Object)>($r22);

        $r26 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r26.<android.service.wallpaper.WallpaperService$Engine: void detach()>();

        return;

     label07:
        $r20 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $i4 = r1.<android.os.Message: int arg1>;

        $i5 = r1.<android.os.Message: int arg2>;

        virtualinvoke $r20.<android.service.wallpaper.WallpaperService$Engine: void doDesiredSizeChanged(int,int)>($i4, $i5);

        return;

     label08:
        $r21 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r21.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(1, 0, 0);

        return;

     label09:
        r6 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $i3 = r1.<android.os.Message: int arg1>;

        if $i3 == 0 goto label11;

     label10:
        virtualinvoke r6.<android.service.wallpaper.WallpaperService$Engine: void doVisibilityChanged(boolean)>(z0);

        return;

     label11:
        z0 = 0;

        goto label10;

     label12:
        $r19 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r19.<android.service.wallpaper.WallpaperService$Engine: void doOffsetsChanged(boolean)>(1);

        return;

     label13:
        $r18 = r1.<android.os.Message: java.lang.Object obj>;

        r5 = (android.service.wallpaper.WallpaperService$WallpaperCommand) $r18;

        $r17 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r17.<android.service.wallpaper.WallpaperService$Engine: void doCommand(android.service.wallpaper.WallpaperService$WallpaperCommand)>(r5);

        return;

     label14:
        $i2 = r1.<android.os.Message: int arg1>;

        if $i2 == 0 goto label16;

        z2 = 1;

     label15:
        $r16 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r16.<android.service.wallpaper.WallpaperService$Engine: void updateSurface(boolean,boolean,boolean)>(1, 0, z2);

        $r15 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r15.<android.service.wallpaper.WallpaperService$Engine: void doOffsetsChanged(boolean)>(1);

        return;

     label16:
        z2 = 0;

        goto label15;

     label17:
        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.view.MotionEvent) $r9;

        i0 = virtualinvoke r2.<android.view.MotionEvent: int getAction()>();

        z1 = 0;

        if i0 != 2 goto label20;

        $r10 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        r3 = $r10.<android.service.wallpaper.WallpaperService$Engine: java.lang.Object mLock>;

        entermonitor r3;

     label18:
        $r12 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r13 = $r12.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove>;

        if $r13 != r2 goto label22;

        $r14 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        $r14.<android.service.wallpaper.WallpaperService$Engine: android.view.MotionEvent mPendingMove> = null;

     label19:
        exitmonitor r3;

     label20:
        if z1 != 0 goto label21;

        $r11 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.WallpaperService$Engine mEngine>;

        virtualinvoke $r11.<android.service.wallpaper.WallpaperService$Engine: void onTouchEvent(android.view.MotionEvent)>(r2);

     label21:
        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return;

     label22:
        z1 = 1;

        goto label19;

     label23:
        $r35 := @caughtexception;

        r4 = $r35;

     label24:
        exitmonitor r3;

     label25:
        throw r4;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label24 to label25 with label23;
    }

    public void reportShown()
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        android.os.RemoteException r1, $r3;
        boolean $z0;
        android.service.wallpaper.IWallpaperConnection $r2;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        $z0 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mShownReported>;

        if $z0 != 0 goto label2;

        r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: boolean mShownReported> = 1;

     label1:
        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: android.service.wallpaper.IWallpaperConnection mConnection>;

        interfaceinvoke $r2.<android.service.wallpaper.IWallpaperConnection: void engineShown(android.service.wallpaper.IWallpaperEngine)>(r0);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WallpaperService", "Wallpaper host disappeared", r1);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setDesiredSize(int, int)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        int i0, i1;
        android.os.Message r1;
        com.android.internal.os.HandlerCaller $r2, $r3;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        r1 = virtualinvoke $r2.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageII(int,int,int)>(30, i0, i1);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r1);

        return;
    }

    public void setVisibility(boolean)
    {
        android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper r0;
        boolean z0;
        com.android.internal.os.HandlerCaller r1, $r3;
        byte b0;
        android.os.Message r2;

        r0 := @this: android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper;

        z0 := @parameter0: boolean;

        r1 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        if z0 == 0 goto label2;

        b0 = 1;

     label1:
        r2 = virtualinvoke r1.<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>(10010, b0);

        $r3 = r0.<android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper: com.android.internal.os.HandlerCaller mCaller>;

        virtualinvoke $r3.<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>(r2);

        return;

     label2:
        b0 = 0;

        goto label1;
    }
}
