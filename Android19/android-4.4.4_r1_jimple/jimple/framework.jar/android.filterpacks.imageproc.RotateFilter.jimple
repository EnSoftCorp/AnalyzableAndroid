public class android.filterpacks.imageproc.RotateFilter extends android.filterfw.core.Filter
{
    private int mAngle;
    private int mHeight;
    private int mOutputHeight;
    private int mOutputWidth;
    private android.filterfw.core.Program mProgram;
    private int mTarget;
    private int mTileSize;
    private int mWidth;

    public void <init>(java.lang.String)
    {
        android.filterpacks.imageproc.RotateFilter r0;
        java.lang.String r1;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.filterfw.core.Filter: void <init>(java.lang.String)>(r1);

        r0.<android.filterpacks.imageproc.RotateFilter: int mTileSize> = 640;

        r0.<android.filterpacks.imageproc.RotateFilter: int mWidth> = 0;

        r0.<android.filterpacks.imageproc.RotateFilter: int mHeight> = 0;

        r0.<android.filterpacks.imageproc.RotateFilter: int mTarget> = 0;

        return;
    }

    private void updateParameters()
    {
        android.filterpacks.imageproc.RotateFilter r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29;
        android.filterfw.geometry.Quad r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.RuntimeException $r2;
        android.filterfw.geometry.Point $r4, $r5, $r6, $r7;
        android.filterfw.core.Program $r8;
        android.filterfw.core.ShaderProgram $r9;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        $i0 = r0.<android.filterpacks.imageproc.RotateFilter: int mAngle>;

        $i1 = $i0 % 90;

        if $i1 != 0 goto label6;

        $i2 = r0.<android.filterpacks.imageproc.RotateFilter: int mAngle>;

        $i3 = $i2 % 180;

        if $i3 != 0 goto label3;

        f0 = 0.0F;

        $i10 = r0.<android.filterpacks.imageproc.RotateFilter: int mAngle>;

        $i9 = $i10 % 360;

        if $i9 != 0 goto label2;

        f1 = 1.0F;

     label1:
        $r3 = new android.filterfw.geometry.Quad;

        $r4 = new android.filterfw.geometry.Point;

        $f3 = neg f1;

        $f2 = f0 + $f3;

        $f5 = 1.0F + $f2;

        $f8 = 0.5F * $f5;

        $f4 = neg f0;

        $f7 = $f4 - f1;

        $f6 = 1.0F + $f7;

        $f9 = 0.5F * $f6;

        specialinvoke $r4.<android.filterfw.geometry.Point: void <init>(float,float)>($f8, $f9);

        $r5 = new android.filterfw.geometry.Point;

        $f10 = f1 + f0;

        $f12 = 1.0F + $f10;

        $f15 = 0.5F * $f12;

        $f11 = f0 - f1;

        $f14 = 1.0F + $f11;

        $f13 = 0.5F * $f14;

        specialinvoke $r5.<android.filterfw.geometry.Point: void <init>(float,float)>($f15, $f13);

        $r6 = new android.filterfw.geometry.Point;

        $f18 = neg f1;

        $f19 = $f18 - f0;

        $f16 = 1.0F + $f19;

        $f21 = 0.5F * $f16;

        $f17 = neg f0;

        $f22 = f1 + $f17;

        $f23 = 1.0F + $f22;

        $f20 = 0.5F * $f23;

        specialinvoke $r6.<android.filterfw.geometry.Point: void <init>(float,float)>($f21, $f20);

        $r7 = new android.filterfw.geometry.Point;

        $f26 = f1 - f0;

        $f24 = 1.0F + $f26;

        $f27 = 0.5F * $f24;

        $f25 = f0 + f1;

        $f28 = 1.0F + $f25;

        $f29 = 0.5F * $f28;

        specialinvoke $r7.<android.filterfw.geometry.Point: void <init>(float,float)>($f27, $f29);

        specialinvoke $r3.<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>($r4, $r5, $r6, $r7);

        r1 = $r3;

        $r8 = r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram>;

        $r9 = (android.filterfw.core.ShaderProgram) $r8;

        virtualinvoke $r9.<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)>(r1);

        return;

     label2:
        f1 = -1.0F;

        f0 = 0.0F;

        goto label1;

     label3:
        $i4 = r0.<android.filterpacks.imageproc.RotateFilter: int mAngle>;

        $i5 = 90 + $i4;

        $i6 = $i5 % 360;

        if $i6 != 0 goto label5;

        f0 = -1.0F;

     label4:
        $i7 = r0.<android.filterpacks.imageproc.RotateFilter: int mHeight>;

        r0.<android.filterpacks.imageproc.RotateFilter: int mOutputWidth> = $i7;

        $i8 = r0.<android.filterpacks.imageproc.RotateFilter: int mWidth>;

        r0.<android.filterpacks.imageproc.RotateFilter: int mOutputHeight> = $i8;

        f1 = 0.0F;

        goto label1;

     label5:
        f0 = 1.0F;

        goto label4;

     label6:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("degree has to be multiply of 90.");

        throw $r2;
    }

    public void fieldPortValueUpdated(java.lang.String, android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.RotateFilter r0;
        java.lang.String r1;
        android.filterfw.core.FilterContext r2;
        android.filterfw.core.Program $r3;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.filterfw.core.FilterContext;

        $r3 = r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.filterpacks.imageproc.RotateFilter: void updateParameters()>();

     label1:
        return;
    }

    public void initProgram(android.filterfw.core.FilterContext, int)
    {
        android.filterpacks.imageproc.RotateFilter r0;
        android.filterfw.core.FilterContext r1;
        int i0, $i1;
        android.filterfw.core.ShaderProgram r2;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Filter Sharpen does not support frames of target ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label2:
        r2 = staticinvoke <android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>(r1);

        $i1 = r0.<android.filterpacks.imageproc.RotateFilter: int mTileSize>;

        virtualinvoke r2.<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>($i1);

        virtualinvoke r2.<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>(1);

        r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram> = r2;

        r0.<android.filterpacks.imageproc.RotateFilter: int mTarget> = i0;

        return;
    }

    public void process(android.filterfw.core.FilterContext)
    {
        android.filterpacks.imageproc.RotateFilter r0;
        android.filterfw.core.FilterContext r1;
        android.filterfw.core.Frame r2, r5;
        android.filterfw.core.FrameFormat r3;
        android.filterfw.core.MutableFrameFormat r4;
        android.filterfw.core.Program $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.filterfw.core.FrameManager $r7;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        r1 := @parameter0: android.filterfw.core.FilterContext;

        r2 = virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Frame pullInput(java.lang.String)>("image");

        r3 = virtualinvoke r2.<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>();

        $r6 = r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram>;

        if $r6 == null goto label1;

        $i10 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        $i12 = r0.<android.filterpacks.imageproc.RotateFilter: int mTarget>;

        if $i10 == $i12 goto label2;

     label1:
        $i0 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getTarget()>();

        virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: void initProgram(android.filterfw.core.FilterContext,int)>(r1, $i0);

     label2:
        $i1 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        $i2 = r0.<android.filterpacks.imageproc.RotateFilter: int mWidth>;

        if $i1 != $i2 goto label3;

        $i9 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        $i11 = r0.<android.filterpacks.imageproc.RotateFilter: int mHeight>;

        if $i9 == $i11 goto label4;

     label3:
        $i3 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getWidth()>();

        r0.<android.filterpacks.imageproc.RotateFilter: int mWidth> = $i3;

        $i4 = virtualinvoke r3.<android.filterfw.core.FrameFormat: int getHeight()>();

        r0.<android.filterpacks.imageproc.RotateFilter: int mHeight> = $i4;

        $i5 = r0.<android.filterpacks.imageproc.RotateFilter: int mWidth>;

        r0.<android.filterpacks.imageproc.RotateFilter: int mOutputWidth> = $i5;

        $i6 = r0.<android.filterpacks.imageproc.RotateFilter: int mHeight>;

        r0.<android.filterpacks.imageproc.RotateFilter: int mOutputHeight> = $i6;

        specialinvoke r0.<android.filterpacks.imageproc.RotateFilter: void updateParameters()>();

     label4:
        $i7 = r0.<android.filterpacks.imageproc.RotateFilter: int mOutputWidth>;

        $i8 = r0.<android.filterpacks.imageproc.RotateFilter: int mOutputHeight>;

        r4 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>($i7, $i8, 3, 3);

        $r7 = virtualinvoke r1.<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>();

        r5 = virtualinvoke $r7.<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>(r4);

        $r8 = r0.<android.filterpacks.imageproc.RotateFilter: android.filterfw.core.Program mProgram>;

        virtualinvoke $r8.<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>(r2, r5);

        virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>("image", r5);

        virtualinvoke r5.<android.filterfw.core.Frame: android.filterfw.core.Frame release()>();

        return;
    }

    public void setupPorts()
    {
        android.filterpacks.imageproc.RotateFilter r0;
        android.filterfw.core.MutableFrameFormat $r1;

        r0 := @this: android.filterpacks.imageproc.RotateFilter;

        $r1 = staticinvoke <android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>(3);

        virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>("image", $r1);

        virtualinvoke r0.<android.filterpacks.imageproc.RotateFilter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>("image", "image");

        return;
    }
}
