public class android.graphics.drawable.BitmapDrawable extends android.graphics.drawable.Drawable
{
    private static final int DEFAULT_PAINT_FLAGS;
    private boolean mApplyGravity;
    private android.graphics.Bitmap mBitmap;
    private int mBitmapHeight;
    private android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState;
    private int mBitmapWidth;
    private final android.graphics.Rect mDstRect;
    private android.graphics.Matrix mMirrorMatrix;
    private boolean mMutated;
    private int mTargetDensity;

    public void <init>()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Rect $r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        android.graphics.Bitmap $r3;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r1 = new android.graphics.Rect;

        specialinvoke $r1.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect> = $r1;

        $r2 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r3 = (android.graphics.Bitmap) null;

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r3);

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState> = $r2;

        return;
    }

    public void <init>(android.content.res.Resources)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Rect $r2;
        android.graphics.drawable.BitmapDrawable$BitmapState $r3, $r5;
        android.graphics.Bitmap $r4;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect> = $r2;

        $r3 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r4 = (android.graphics.Bitmap) null;

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r4);

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState> = $r3;

        $r5 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i0 = r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity>;

        $r5.<android.graphics.drawable.BitmapDrawable$BitmapState: int mTargetDensity> = $i0;

        return;
    }

    public void <init>(android.content.res.Resources, android.graphics.Bitmap)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap r2;
        android.graphics.drawable.BitmapDrawable$BitmapState $r3, $r4;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: android.graphics.Bitmap;

        $r3 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>(r2);

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources)>($r3, r1);

        $r4 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i0 = r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity>;

        $r4.<android.graphics.drawable.BitmapDrawable$BitmapState: int mTargetDensity> = $i0;

        return;
    }

    public void <init>(android.content.res.Resources, java.io.InputStream)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.content.res.Resources r1;
        java.io.InputStream r2;
        android.graphics.drawable.BitmapDrawable$BitmapState $r3, $r5;
        android.graphics.Bitmap $r4, $r6;
        int $i0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: java.io.InputStream;

        $r3 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r2);

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r4);

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources)>($r3, null);

        $r5 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i0 = r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity>;

        $r5.<android.graphics.drawable.BitmapDrawable$BitmapState: int mTargetDensity> = $i0;

        $r6 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if $r6 != null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BitmapDrawable cannot decode ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BitmapDrawable", $r10);

     label1:
        return;
    }

    public void <init>(android.content.res.Resources, java.lang.String)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.content.res.Resources r1;
        java.lang.String r2, $r10;
        android.graphics.drawable.BitmapDrawable$BitmapState $r3, $r5;
        android.graphics.Bitmap $r4, $r6;
        int $i0;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: java.lang.String;

        $r3 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r2);

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r4);

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources)>($r3, null);

        $r5 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i0 = r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity>;

        $r5.<android.graphics.drawable.BitmapDrawable$BitmapState: int mTargetDensity> = $i0;

        $r6 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if $r6 != null goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BitmapDrawable cannot decode ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BitmapDrawable", $r10);

     label1:
        return;
    }

    public void <init>(android.graphics.Bitmap)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Bitmap r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>(r1);

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources)>($r2, null);

        return;
    }

    private void <init>(android.graphics.drawable.BitmapDrawable$BitmapState, android.content.res.Resources)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState r1;
        android.content.res.Resources r2;
        android.graphics.Bitmap r3;
        android.graphics.Rect $r4;
        int $i0, $i1;
        android.util.DisplayMetrics $r5;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.drawable.BitmapDrawable$BitmapState;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect> = $r4;

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState> = r1;

        if r2 == null goto label3;

        $r5 = virtualinvoke r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i1 = $r5.<android.util.DisplayMetrics: int densityDpi>;

        r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity> = $i1;

     label1:
        if r1 == null goto label4;

        r3 = r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Bitmap mBitmap>;

     label2:
        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void setBitmap(android.graphics.Bitmap)>(r3);

        return;

     label3:
        $i0 = r1.<android.graphics.drawable.BitmapDrawable$BitmapState: int mTargetDensity>;

        r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity> = $i0;

        goto label1;

     label4:
        r3 = null;

        goto label2;
    }

    void <init>(android.graphics.drawable.BitmapDrawable$BitmapState, android.content.res.Resources, android.graphics.drawable.BitmapDrawable$1)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState r1;
        android.content.res.Resources r2;
        android.graphics.drawable.BitmapDrawable$1 r3;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.drawable.BitmapDrawable$BitmapState;

        r2 := @parameter1: android.content.res.Resources;

        r3 := @parameter2: android.graphics.drawable.BitmapDrawable$1;

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources)>(r1, r2);

        return;
    }

    public void <init>(java.io.InputStream)
    {
        android.graphics.drawable.BitmapDrawable r0;
        java.io.InputStream r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        android.graphics.Bitmap $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: java.io.InputStream;

        $r2 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>(r1);

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r3);

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources)>($r2, null);

        $r4 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if $r4 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BitmapDrawable cannot decode ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BitmapDrawable", $r8);

     label1:
        return;
    }

    public void <init>(java.lang.String)
    {
        android.graphics.drawable.BitmapDrawable r0;
        java.lang.String r1, $r8;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        android.graphics.Bitmap $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r1);

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.Bitmap)>($r3);

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources)>($r2, null);

        $r4 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if $r4 != null goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BitmapDrawable cannot decode ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BitmapDrawable", $r8);

     label1:
        return;
    }

    private void computeBitmapSize()
    {
        android.graphics.drawable.BitmapDrawable r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Bitmap $r1, $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        $i0 = r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity>;

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getScaledWidth(int)>($i0);

        r0.<android.graphics.drawable.BitmapDrawable: int mBitmapWidth> = $i1;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        $i2 = r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity>;

        $i3 = virtualinvoke $r2.<android.graphics.Bitmap: int getScaledHeight(int)>($i2);

        r0.<android.graphics.drawable.BitmapDrawable: int mBitmapHeight> = $i3;

        return;
    }

    private boolean needMirroring()
    {
        android.graphics.drawable.BitmapDrawable r0;
        boolean $z0;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $z0 = virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: boolean isAutoMirrored()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: int getLayoutDirection()>();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void setBitmap(android.graphics.Bitmap)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Bitmap r1, $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if r1 == $r2 goto label2;

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap> = r1;

        if r1 == null goto label3;

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void computeBitmapSize()>();

     label1:
        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

     label2:
        return;

     label3:
        r0.<android.graphics.drawable.BitmapDrawable: int mBitmapHeight> = -1;

        r0.<android.graphics.drawable.BitmapDrawable: int mBitmapWidth> = -1;

        goto label1;
    }

    private void updateMirrorMatrix(float)
    {
        android.graphics.drawable.BitmapDrawable r0;
        float f0;
        android.graphics.Matrix $r1, $r2, $r3, $r4;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix>;

        if $r1 != null goto label1;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix> = $r4;

     label1:
        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void setTranslate(float,float)>(f0, 0.0F);

        $r3 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix>;

        virtualinvoke $r3.<android.graphics.Matrix: boolean preScale(float,float)>(-1.0F, 1.0F);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Bitmap r2;
        android.graphics.drawable.BitmapDrawable$BitmapState r3;
        android.graphics.Shader r4;
        boolean z0, $z1, $z2, $z3;
        int i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10;
        android.graphics.Shader$TileMode r5, r6;
        android.graphics.Paint r7, $r8, $r9, $r17, $r24;
        android.graphics.Matrix $r10, $r11, $r16;
        android.graphics.Rect $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r23;
        float $f0, $f1;
        android.graphics.BitmapShader $r25;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if r2 == null goto label05;

        r3 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $z1 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: boolean mRebuildShader>;

        if $z1 == 0 goto label02;

        r5 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX>;

        r6 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY>;

        if r5 != null goto label06;

        if r6 != null goto label06;

        $r24 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r24.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(null);

     label01:
        r3.<android.graphics.drawable.BitmapDrawable$BitmapState: boolean mRebuildShader> = 0;

        $r23 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void copyBounds(android.graphics.Rect)>($r23);

     label02:
        $r8 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        r4 = virtualinvoke $r8.<android.graphics.Paint: android.graphics.Shader getShader()>();

        z0 = specialinvoke r0.<android.graphics.drawable.BitmapDrawable: boolean needMirroring()>();

        if r4 != null goto label09;

        $z3 = r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity>;

        if $z3 == 0 goto label03;

        i0 = virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: int getLayoutDirection()>();

        $i7 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: int mGravity>;

        $i9 = r0.<android.graphics.drawable.BitmapDrawable: int mBitmapWidth>;

        $i10 = r0.<android.graphics.drawable.BitmapDrawable: int mBitmapHeight>;

        $r21 = virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect getBounds()>();

        $r22 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        staticinvoke <android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>($i7, $i9, $i10, $r21, $r22, i0);

        r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity> = 0;

     label03:
        if z0 == 0 goto label04;

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r19 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        $i6 = $r19.<android.graphics.Rect: int right>;

        $r20 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        $i5 = $r20.<android.graphics.Rect: int left>;

        $i8 = $i6 - $i5;

        $f1 = (float) $i8;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f1, 0.0F);

        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>(-1.0F, 1.0F);

     label04:
        $r18 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        $r17 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>(r2, null, $r18, $r17);

        if z0 == 0 goto label05;

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

     label05:
        return;

     label06:
        r7 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        if r5 != null goto label07;

        r5 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

     label07:
        if r6 != null goto label08;

        r6 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

     label08:
        $r25 = new android.graphics.BitmapShader;

        specialinvoke $r25.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>(r2, r5, r6);

        virtualinvoke r7.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r25);

        goto label01;

     label09:
        $z2 = r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity>;

        if $z2 == 0 goto label10;

        $r15 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void copyBounds(android.graphics.Rect)>($r15);

        r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity> = 0;

     label10:
        if z0 == 0 goto label12;

        $r14 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        $i1 = $r14.<android.graphics.Rect: int right>;

        $r13 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        $i2 = $r13.<android.graphics.Rect: int left>;

        $i3 = $i1 - $i2;

        $f0 = (float) $i3;

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void updateMirrorMatrix(float)>($f0);

        $r16 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix>;

        virtualinvoke r4.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>($r16);

     label11:
        $r12 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Rect mDstRect>;

        $r9 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r12, $r9);

        return;

     label12:
        $r10 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix>;

        if $r10 == null goto label11;

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix> = null;

        $r11 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

        virtualinvoke r4.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>($r11);

        goto label11;
    }

    public int getAlpha()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        return $i0;
    }

    public final android.graphics.Bitmap getBitmap()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Bitmap $r1;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        return $r1;
    }

    public int getChangingConfigurations()
    {
        android.graphics.drawable.BitmapDrawable r0;
        int $i0, $i1, $i2;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $i0 = specialinvoke r0.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i1 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: int mChangingConfigurations>;

        $i2 = $i0 | $i1;

        return $i2;
    }

    public final android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1, $r2;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i0 = virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>();

        $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: int mChangingConfigurations> = $i0;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        return $r2;
    }

    public int getGravity()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i0 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: int mGravity>;

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        android.graphics.drawable.BitmapDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $i0 = r0.<android.graphics.drawable.BitmapDrawable: int mBitmapHeight>;

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.graphics.drawable.BitmapDrawable r0;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $i0 = r0.<android.graphics.drawable.BitmapDrawable: int mBitmapWidth>;

        return $i0;
    }

    public int getOpacity()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Bitmap r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2, $r3;
        int $i0, $i1;
        boolean $z0;
        android.graphics.Paint $r4;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i0 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: int mGravity>;

        if $i0 == 119 goto label2;

     label1:
        return -3;

     label2:
        r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.Bitmap: boolean hasAlpha()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r4 = $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        $i1 = virtualinvoke $r4.<android.graphics.Paint: int getAlpha()>();

        if $i1 < 255 goto label1;

        return -1;
    }

    public final android.graphics.Paint getPaint()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        return $r2;
    }

    public android.graphics.Shader$TileMode getTileModeX()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Shader$TileMode $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX>;

        return $r2;
    }

    public android.graphics.Shader$TileMode getTileModeY()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Shader$TileMode $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY>;

        return $r2;
    }

    public boolean hasAntiAlias()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;
        boolean $z0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        $z0 = virtualinvoke $r2.<android.graphics.Paint: boolean isAntiAlias()>();

        return $z0;
    }

    public boolean hasMipMap()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1, $r3;
        android.graphics.Bitmap $r2, $r4;
        boolean $z0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Bitmap mBitmap>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r4 = $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Bitmap mBitmap>;

        $z0 = virtualinvoke $r4.<android.graphics.Bitmap: boolean hasMipMap()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.content.res.Resources r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.util.AttributeSet r3;
        android.content.res.TypedArray r4;
        int i0, i1, $i2;
        android.graphics.Bitmap r5;
        android.graphics.Paint r6;
        int[] $r7;
        android.graphics.drawable.BitmapDrawable$BitmapState $r8, $r10;
        android.util.DisplayMetrics $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.graphics.Shader$TileMode $r11, $r12, $r13, $r14, $r15, $r18;
        java.lang.String $r17, $r20, $r27, $r28;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, r29, r31;
        org.xmlpull.v1.XmlPullParserException r30, r32;
        java.lang.Throwable r33, r34;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r3 := @parameter2: android.util.AttributeSet;

        specialinvoke r0.<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r1, r2, r3);

        $r7 = <com.android.internal.R$styleable: int[] BitmapDrawable>;

        r4 = virtualinvoke r1.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r3, $r7);

        i0 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        if i0 != 0 goto label1;

        r30 = new org.xmlpull.v1.XmlPullParserException;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r24 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <bitmap> requires a valid src attribute");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r30.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r28);

        r33 = (java.lang.Throwable) r30;

        throw r33;

     label1:
        r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>(r1, i0);

        if r5 != null goto label2;

        r32 = new org.xmlpull.v1.XmlPullParserException;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        $r17 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r22 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": <bitmap> requires a valid src attribute");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r32.<org.xmlpull.v1.XmlPullParserException: void <init>(java.lang.String)>($r20);

        r34 = (java.lang.Throwable) r32;

        throw r34;

     label2:
        $r8 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r8.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Bitmap mBitmap> = r5;

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void setBitmap(android.graphics.Bitmap)>(r5);

        $r9 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>($r9);

        $z1 = virtualinvoke r5.<android.graphics.Bitmap: boolean hasMipMap()>();

        $z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, $z1);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setMipMap(boolean)>($z0);

        $z2 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 0);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setAutoMirrored(boolean)>($z2);

        $r10 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        r6 = $r10.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        $z3 = virtualinvoke r6.<android.graphics.Paint: boolean isAntiAlias()>();

        $z4 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, $z3);

        virtualinvoke r6.<android.graphics.Paint: void setAntiAlias(boolean)>($z4);

        $z6 = virtualinvoke r6.<android.graphics.Paint: boolean isFilterBitmap()>();

        $z5 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, $z6);

        virtualinvoke r6.<android.graphics.Paint: void setFilterBitmap(boolean)>($z5);

        $z7 = virtualinvoke r6.<android.graphics.Paint: boolean isDither()>();

        $z8 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, $z7);

        virtualinvoke r6.<android.graphics.Paint: void setDither(boolean)>($z8);

        $i2 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(0, 119);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setGravity(int)>($i2);

        i1 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(5, -1);

        if i1 == -1 goto label3;

        tableswitch(i1)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            default: goto label3;
        };

     label3:
        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        return;

     label4:
        $r18 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r13 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r18, $r13);

        goto label3;

     label5:
        $r12 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        $r15 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode REPEAT>;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r12, $r15);

        goto label3;

     label6:
        $r14 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

        $r11 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode MIRROR>;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r14, $r11);

        goto label3;
    }

    public final boolean isAutoMirrored()
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        boolean $z0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $z0 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: boolean mAutoMirrored>;

        return $z0;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        android.graphics.drawable.BitmapDrawable r0;
        boolean $z0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2, $r3;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        $z0 = r0.<android.graphics.drawable.BitmapDrawable: boolean mMutated>;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        if $r1 != r0 goto label1;

        $r2 = new android.graphics.drawable.BitmapDrawable$BitmapState;

        $r3 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        specialinvoke $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: void <init>(android.graphics.drawable.BitmapDrawable$BitmapState)>($r3);

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState> = $r2;

        r0.<android.graphics.drawable.BitmapDrawable: boolean mMutated> = 1;

     label1:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Rect r1;
        android.graphics.Shader r2;
        android.graphics.drawable.BitmapDrawable$BitmapState $r3;
        android.graphics.Paint $r4;
        boolean $z0;
        android.graphics.Matrix $r5, $r6, $r7;
        int $i0, $i1, $i2;
        float $f0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>(r1);

        r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity> = 1;

        $r3 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r4 = $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        r2 = virtualinvoke $r4.<android.graphics.Paint: android.graphics.Shader getShader()>();

        if r2 == null goto label1;

        $z0 = specialinvoke r0.<android.graphics.drawable.BitmapDrawable: boolean needMirroring()>();

        if $z0 == 0 goto label2;

        $i1 = r1.<android.graphics.Rect: int right>;

        $i0 = r1.<android.graphics.Rect: int left>;

        $i2 = $i1 - $i0;

        $f0 = (float) $i2;

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void updateMirrorMatrix(float)>($f0);

        $r7 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix>;

        virtualinvoke r2.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>($r7);

     label1:
        return;

     label2:
        $r5 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix>;

        if $r5 == null goto label1;

        r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Matrix mMirrorMatrix> = null;

        $r6 = <android.graphics.Matrix: android.graphics.Matrix IDENTITY_MATRIX>;

        virtualinvoke r2.<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>($r6);

        return;
    }

    public void setAlpha(int)
    {
        android.graphics.drawable.BitmapDrawable r0;
        int i0, $i1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1, $r3;
        android.graphics.Paint $r2, $r4;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        $i1 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        if i0 == $i1 goto label1;

        $r3 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r4 = $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAlpha(int)>(i0);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setAntiAlias(boolean)
    {
        android.graphics.drawable.BitmapDrawable r0;
        boolean z0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

        return;
    }

    public void setAutoMirrored(boolean)
    {
        android.graphics.drawable.BitmapDrawable r0;
        boolean z0, $z1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1, $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $z1 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: boolean mAutoMirrored>;

        if $z1 == z0 goto label1;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: boolean mAutoMirrored> = z0;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        android.graphics.Paint $r3;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r3 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

        return;
    }

    public void setDither(boolean)
    {
        android.graphics.drawable.BitmapDrawable r0;
        boolean z0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setDither(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

        return;
    }

    public void setFilterBitmap(boolean)
    {
        android.graphics.drawable.BitmapDrawable r0;
        boolean z0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1;
        android.graphics.Paint $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setFilterBitmap(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

        return;
    }

    public void setGravity(int)
    {
        android.graphics.drawable.BitmapDrawable r0;
        int i0, $i1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1, $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $i1 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: int mGravity>;

        if $i1 == i0 goto label1;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: int mGravity> = i0;

        r0.<android.graphics.drawable.BitmapDrawable: boolean mApplyGravity> = 1;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setMipMap(boolean)
    {
        android.graphics.drawable.BitmapDrawable r0;
        boolean z0;
        android.graphics.drawable.BitmapDrawable$BitmapState $r1, $r3;
        android.graphics.Bitmap $r2, $r4;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r2 = $r1.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Bitmap mBitmap>;

        if $r2 == null goto label1;

        $r3 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r4 = $r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Bitmap mBitmap>;

        virtualinvoke $r4.<android.graphics.Bitmap: void setHasMipMap(boolean)>(z0);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setTargetDensity(int)
    {
        android.graphics.drawable.BitmapDrawable r0;
        int i0, $i1;
        android.graphics.Bitmap $r1;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        i0 := @parameter0: int;

        $i1 = r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity>;

        if $i1 == i0 goto label3;

        if i0 != 0 goto label1;

        i0 = 160;

     label1:
        r0.<android.graphics.drawable.BitmapDrawable: int mTargetDensity> = i0;

        $r1 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap mBitmap>;

        if $r1 == null goto label2;

        specialinvoke r0.<android.graphics.drawable.BitmapDrawable: void computeBitmapSize()>();

     label2:
        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

     label3:
        return;
    }

    public void setTargetDensity(android.graphics.Canvas)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Canvas r1;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke r1.<android.graphics.Canvas: int getDensity()>();

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>($i0);

        return;
    }

    public void setTargetDensity(android.util.DisplayMetrics)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.util.DisplayMetrics r1;
        int $i0;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.util.DisplayMetrics;

        $i0 = r1.<android.util.DisplayMetrics: int densityDpi>;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>($i0);

        return;
    }

    public void setTileModeX(android.graphics.Shader$TileMode)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Shader$TileMode r1, $r3;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.Shader$TileMode;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r3 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY>;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>(r1, $r3);

        return;
    }

    public void setTileModeXY(android.graphics.Shader$TileMode, android.graphics.Shader$TileMode)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Shader$TileMode r1, r2, $r4, $r5;
        android.graphics.drawable.BitmapDrawable$BitmapState r3;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.Shader$TileMode;

        r2 := @parameter1: android.graphics.Shader$TileMode;

        r3 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r4 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX>;

        if $r4 != r1 goto label1;

        $r5 = r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY>;

        if $r5 == r2 goto label2;

     label1:
        r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX> = r1;

        r3.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeY> = r2;

        r3.<android.graphics.drawable.BitmapDrawable$BitmapState: boolean mRebuildShader> = 1;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

     label2:
        return;
    }

    public final void setTileModeY(android.graphics.Shader$TileMode)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Shader$TileMode r1, $r3;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.Shader$TileMode;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r3 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Shader$TileMode mTileModeX>;

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>($r3, r1);

        return;
    }

    public void setXfermode(android.graphics.Xfermode)
    {
        android.graphics.drawable.BitmapDrawable r0;
        android.graphics.Xfermode r1;
        android.graphics.drawable.BitmapDrawable$BitmapState $r2;
        android.graphics.Paint $r3;

        r0 := @this: android.graphics.drawable.BitmapDrawable;

        r1 := @parameter0: android.graphics.Xfermode;

        $r2 = r0.<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.BitmapDrawable$BitmapState mBitmapState>;

        $r3 = $r2.<android.graphics.drawable.BitmapDrawable$BitmapState: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>(r1);

        virtualinvoke r0.<android.graphics.drawable.BitmapDrawable: void invalidateSelf()>();

        return;
    }

    public static void <clinit>()
    {
        <android.graphics.drawable.BitmapDrawable: int DEFAULT_PAINT_FLAGS> = 6;

        return;
    }
}
