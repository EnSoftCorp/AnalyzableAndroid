class android.media.WebVttRenderingWidget$SpanLayout extends com.android.internal.widget.SubtitleView
{
    private final android.text.SpannableStringBuilder mBuilder;
    private final android.media.TextTrackCueSpan[] mSpans;

    public void <init>(android.content.Context, android.media.TextTrackCueSpan[])
    {
        android.media.WebVttRenderingWidget$SpanLayout r0;
        android.content.Context r1;
        android.media.TextTrackCueSpan[] r2;
        android.text.SpannableStringBuilder $r3;

        r0 := @this: android.media.WebVttRenderingWidget$SpanLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.media.TextTrackCueSpan[];

        specialinvoke r0.<com.android.internal.widget.SubtitleView: void <init>(android.content.Context)>(r1);

        $r3 = new android.text.SpannableStringBuilder;

        specialinvoke $r3.<android.text.SpannableStringBuilder: void <init>()>();

        r0.<android.media.WebVttRenderingWidget$SpanLayout: android.text.SpannableStringBuilder mBuilder> = $r3;

        r0.<android.media.WebVttRenderingWidget$SpanLayout: android.media.TextTrackCueSpan[] mSpans> = r2;

        virtualinvoke r0.<android.media.WebVttRenderingWidget$SpanLayout: void update()>();

        return;
    }

    public void setCaptionStyle(android.view.accessibility.CaptioningManager$CaptionStyle, float)
    {
        android.media.WebVttRenderingWidget$SpanLayout r0;
        android.view.accessibility.CaptioningManager$CaptionStyle r1;
        float f0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Typeface $r2;

        r0 := @this: android.media.WebVttRenderingWidget$SpanLayout;

        r1 := @parameter0: android.view.accessibility.CaptioningManager$CaptionStyle;

        f0 := @parameter1: float;

        $i0 = r1.<android.view.accessibility.CaptioningManager$CaptionStyle: int backgroundColor>;

        virtualinvoke r0.<android.media.WebVttRenderingWidget$SpanLayout: void setBackgroundColor(int)>($i0);

        $i1 = r1.<android.view.accessibility.CaptioningManager$CaptionStyle: int foregroundColor>;

        virtualinvoke r0.<android.media.WebVttRenderingWidget$SpanLayout: void setForegroundColor(int)>($i1);

        $i2 = r1.<android.view.accessibility.CaptioningManager$CaptionStyle: int edgeColor>;

        virtualinvoke r0.<android.media.WebVttRenderingWidget$SpanLayout: void setEdgeColor(int)>($i2);

        $i3 = r1.<android.view.accessibility.CaptioningManager$CaptionStyle: int edgeType>;

        virtualinvoke r0.<android.media.WebVttRenderingWidget$SpanLayout: void setEdgeType(int)>($i3);

        $r2 = virtualinvoke r1.<android.view.accessibility.CaptioningManager$CaptionStyle: android.graphics.Typeface getTypeface()>();

        virtualinvoke r0.<android.media.WebVttRenderingWidget$SpanLayout: void setTypeface(android.graphics.Typeface)>($r2);

        virtualinvoke r0.<android.media.WebVttRenderingWidget$SpanLayout: void setTextSize(float)>(f0);

        return;
    }

    public void update()
    {
        android.media.WebVttRenderingWidget$SpanLayout r0;
        android.text.SpannableStringBuilder r1;
        android.media.TextTrackCueSpan[] r2;
        int i0, i1;
        android.media.TextTrackCueSpan $r3, $r4;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: android.media.WebVttRenderingWidget$SpanLayout;

        r1 = r0.<android.media.WebVttRenderingWidget$SpanLayout: android.text.SpannableStringBuilder mBuilder>;

        r2 = r0.<android.media.WebVttRenderingWidget$SpanLayout: android.media.TextTrackCueSpan[] mSpans>;

        virtualinvoke r1.<android.text.SpannableStringBuilder: void clear()>();

        virtualinvoke r1.<android.text.SpannableStringBuilder: void clearSpans()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r3 = r2[i1];

        $z0 = $r3.<android.media.TextTrackCueSpan: boolean mEnabled>;

        if $z0 == 0 goto label2;

        $r4 = r2[i1];

        $r5 = $r4.<android.media.TextTrackCueSpan: java.lang.String mText>;

        virtualinvoke r1.<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>($r5);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<android.media.WebVttRenderingWidget$SpanLayout: void setText(java.lang.CharSequence)>(r1);

        return;
    }
}
