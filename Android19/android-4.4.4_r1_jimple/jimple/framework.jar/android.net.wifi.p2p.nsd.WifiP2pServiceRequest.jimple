public class android.net.wifi.p2p.nsd.WifiP2pServiceRequest extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private int mLength;
    private int mProtocolType;
    private java.lang.String mQuery;
    private int mTransId;

    static void <clinit>()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1 $r0;

        $r0 = new android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1;

        specialinvoke $r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1: void <init>()>();

        <android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }

    private void <init>(int, int, int, java.lang.String)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int i0, i1, i2;
        java.lang.String r1;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType> = i0;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength> = i1;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId> = i2;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery> = r1;

        return;
    }

    void <init>(int, int, int, java.lang.String, android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1 r2;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: android.net.wifi.p2p.nsd.WifiP2pServiceRequest$1;

        specialinvoke r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,int,int,java.lang.String)>(i0, i1, i2, r1);

        return;
    }

    protected void <init>(int, java.lang.String)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int i0, $i1, $i2, $i3;
        java.lang.String r1;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void validateQuery(java.lang.String)>(r1);

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType> = i0;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery> = r1;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 / 2;

        $i3 = 2 + $i2;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength> = $i3;

        return;

     label1:
        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength> = 2;

        return;
    }

    public static android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int)
    {
        int i0;
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest $r0;

        i0 := @parameter0: int;

        $r0 = new android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        specialinvoke $r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,java.lang.String)>(i0, null);

        return $r0;
    }

    public static android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int, java.lang.String)
    {
        int i0;
        java.lang.String r0;
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $r1 = new android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        specialinvoke $r1.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,java.lang.String)>(i0, r0);

        return $r1;
    }

    private void validateQuery(java.lang.String)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        java.lang.String r1, r2, $r10, $r15, $r18;
        char[] r3;
        int i0, i1, $i3, $i4, $i5, $i6, $i7;
        char c2;
        java.util.Locale $r4;
        java.lang.IllegalArgumentException $r5, $r9, $r14;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13, $r16, $r17, $r19;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = $i3 % 2;

        if $i4 != 1 goto label3;

        $r14 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("query size is invalid. query=");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label3:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        $i6 = $i5 / 2;

        if $i6 <= 65535 goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("query size is too large. len=");

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label4:
        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r3;

        i1 = 0;

     label5:
        if i1 >= i0 goto label1;

        c2 = r3[i1];

        if c2 < 48 goto label6;

        if c2 <= 57 goto label8;

     label6:
        if c2 < 97 goto label7;

        if c2 <= 102 goto label8;

     label7:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("query should be hex string. query=");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label8:
        i1 = i1 + 1;

        goto label5;
    }

    public int describeContents()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3, $r4, $r5, $r6, $r7;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label2;

     label1:
        return 1;

     label2:
        $z0 = r1 instanceof android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (android.net.wifi.p2p.nsd.WifiP2pServiceRequest) r1;

        $i1 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        $i0 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        if $i1 != $i0 goto label4;

        $i3 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        $i2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        if $i3 == $i2 goto label5;

     label4:
        return 0;

     label5:
        $r3 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r3 != null goto label6;

        $r7 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r7 == null goto label1;

     label6:
        $r4 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r4 == null goto label7;

        $r6 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        $r5 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z1;

     label7:
        return 0;
    }

    public java.lang.String getSupplicantQuery()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        java.lang.StringBuffer r1, $r10;
        java.util.Locale r2, r4, r6, r8;
        java.lang.Object[] r3, r5, r7, r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Integer $r11, $r15, $r17, $r20;
        java.lang.String $r13, $r14, $r19, $r21, $r22, $r23, $r25;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        r1 = $r10;

        r2 = <java.util.Locale: java.util.Locale US>;

        r3 = newarray (java.lang.Object)[1];

        $i0 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        $i1 = 255 & $i0;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        r3[0] = $r11;

        $r13 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r2, "%02x", r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        r4 = <java.util.Locale: java.util.Locale US>;

        r5 = newarray (java.lang.Object)[1];

        $i3 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        $i2 = $i3 >> 8;

        $i4 = 255 & $i2;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        r5[0] = $r15;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r4, "%02x", r5);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        r6 = <java.util.Locale: java.util.Locale US>;

        r7 = newarray (java.lang.Object)[1];

        $i5 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        r7[0] = $r17;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r6, "%02x", r7);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        r8 = <java.util.Locale: java.util.Locale US>;

        r9 = newarray (java.lang.Object)[1];

        $i6 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        r9[0] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(r8, "%02x", r9);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r25 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r25 == null goto label1;

        $r23 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

     label1:
        $r22 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r22;
    }

    public int getTransactionId()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int $i0;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        $i0 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId>;

        return $i0;
    }

    public int hashCode()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r1, $r2;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        $i2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        $i3 = 527 + $i2;

        $i5 = 31 * $i3;

        $i4 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        $i6 = $i5 + $i4;

        i0 = 31 * $i6;

        $r1 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        if $r1 != null goto label2;

        i1 = 0;

     label1:
        $i7 = i0 + i1;

        return $i7;

     label2:
        $r2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        goto label1;
    }

    public void setTransactionId(int)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        int i0;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        i0 := @parameter0: int;

        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId> = i0;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceRequest r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        java.lang.String $r2;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceRequest;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $i1 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mProtocolType>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mLength>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int mTransId>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $r2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String mQuery>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        return;
    }
}
