public class android.graphics.Picture extends java.lang.Object
{
    private static final int WORKING_STREAM_STORAGE;
    public final boolean createdFromStream;
    private final int mNativePicture;
    private android.graphics.Canvas mRecordingCanvas;

    public void <init>()
    {
        android.graphics.Picture r0;
        int $i0;

        r0 := @this: android.graphics.Picture;

        $i0 = staticinvoke <android.graphics.Picture: int nativeConstructor(int)>(0);

        specialinvoke r0.<android.graphics.Picture: void <init>(int,boolean)>($i0, 0);

        return;
    }

    private void <init>(int, boolean)
    {
        android.graphics.Picture r0;
        int i0;
        boolean z0;
        java.lang.RuntimeException $r1;

        r0 := @this: android.graphics.Picture;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 != 0 goto label1;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>()>();

        throw $r1;

     label1:
        r0.<android.graphics.Picture: int mNativePicture> = i0;

        r0.<android.graphics.Picture: boolean createdFromStream> = z0;

        return;
    }

    public void <init>(android.graphics.Picture)
    {
        android.graphics.Picture r0, r1;
        int i0, $i1;

        r0 := @this: android.graphics.Picture;

        r1 := @parameter0: android.graphics.Picture;

        if r1 == null goto label2;

        i0 = r1.<android.graphics.Picture: int mNativePicture>;

     label1:
        $i1 = staticinvoke <android.graphics.Picture: int nativeConstructor(int)>(i0);

        specialinvoke r0.<android.graphics.Picture: void <init>(int,boolean)>($i1, 0);

        return;

     label2:
        i0 = 0;

        goto label1;
    }

    public static android.graphics.Picture createFromStream(java.io.InputStream)
    {
        java.io.InputStream r0;
        android.graphics.Picture $r1;
        byte[] $r2;
        int $i0;

        r0 := @parameter0: java.io.InputStream;

        $r1 = new android.graphics.Picture;

        $r2 = newarray (byte)[16384];

        $i0 = staticinvoke <android.graphics.Picture: int nativeCreateFromStream(java.io.InputStream,byte[])>(r0, $r2);

        specialinvoke $r1.<android.graphics.Picture: void <init>(int,boolean)>($i0, 1);

        return $r1;
    }

    private static native int nativeBeginRecording(int, int, int);

    private static native int nativeConstructor(int);

    private static native int nativeCreateFromStream(java.io.InputStream, byte[]);

    private static native void nativeDestructor(int);

    private static native void nativeDraw(int, int);

    private static native void nativeEndRecording(int);

    private static native boolean nativeWriteToStream(int, java.io.OutputStream, byte[]);

    public android.graphics.Canvas beginRecording(int, int)
    {
        android.graphics.Picture r0;
        int i0, i1, $i2, $i3;
        android.graphics.Picture$RecordingCanvas $r1;
        android.graphics.Canvas $r2;

        r0 := @this: android.graphics.Picture;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.graphics.Picture$RecordingCanvas;

        $i2 = r0.<android.graphics.Picture: int mNativePicture>;

        $i3 = staticinvoke <android.graphics.Picture: int nativeBeginRecording(int,int,int)>($i2, i0, i1);

        specialinvoke $r1.<android.graphics.Picture$RecordingCanvas: void <init>(android.graphics.Picture,int)>(r0, $i3);

        r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas> = $r1;

        $r2 = r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas>;

        return $r2;
    }

    public void draw(android.graphics.Canvas)
    {
        android.graphics.Picture r0;
        android.graphics.Canvas r1, $r2;
        int $i0, $i1;

        r0 := @this: android.graphics.Picture;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas>;

        if $r2 == null goto label1;

        virtualinvoke r0.<android.graphics.Picture: void endRecording()>();

     label1:
        $i1 = r1.<android.graphics.Canvas: int mNativeCanvas>;

        $i0 = r0.<android.graphics.Picture: int mNativePicture>;

        staticinvoke <android.graphics.Picture: void nativeDraw(int,int)>($i1, $i0);

        return;
    }

    public void endRecording()
    {
        android.graphics.Picture r0;
        android.graphics.Canvas $r1;
        int $i0;

        r0 := @this: android.graphics.Picture;

        $r1 = r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas>;

        if $r1 == null goto label1;

        r0.<android.graphics.Picture: android.graphics.Canvas mRecordingCanvas> = null;

        $i0 = r0.<android.graphics.Picture: int mNativePicture>;

        staticinvoke <android.graphics.Picture: void nativeEndRecording(int)>($i0);

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.Picture r0;
        java.lang.Throwable r1, $r2;
        int $i0;

        r0 := @this: android.graphics.Picture;

     label1:
        $i0 = r0.<android.graphics.Picture: int mNativePicture>;

        staticinvoke <android.graphics.Picture: void nativeDestructor(int)>($i0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public native int getHeight();

    public native int getWidth();

    final int ni()
    {
        android.graphics.Picture r0;
        int $i0;

        r0 := @this: android.graphics.Picture;

        $i0 = r0.<android.graphics.Picture: int mNativePicture>;

        return $i0;
    }

    public void writeToStream(java.io.OutputStream)
    {
        android.graphics.Picture r0;
        java.io.OutputStream r1;
        byte[] $r2;
        int $i0;
        boolean $z0;
        java.lang.RuntimeException $r3;
        java.lang.NullPointerException $r4;

        r0 := @this: android.graphics.Picture;

        r1 := @parameter0: java.io.OutputStream;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>()>();

        throw $r4;

     label1:
        $i0 = r0.<android.graphics.Picture: int mNativePicture>;

        $r2 = newarray (byte)[16384];

        $z0 = staticinvoke <android.graphics.Picture: boolean nativeWriteToStream(int,java.io.OutputStream,byte[])>($i0, r1, $r2);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>()>();

        throw $r3;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <android.graphics.Picture: int WORKING_STREAM_STORAGE> = 16384;

        return;
    }
}
